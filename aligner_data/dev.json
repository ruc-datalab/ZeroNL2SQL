[
    {
        "question": "How many singers do we have?",
        "select_candidates": [
            "select count(*)",
            "select count(distinct singer.Name)",
            "select count(distinct singer.Singer_ID)",
            "select count (*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the total number of singers?",
        "select_candidates": [
            "select count(*)",
            "select count (*)",
            "select count(*), count(*)",
            "select count(*), singer.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Show name, country, age for all singers ordered by age from the oldest to the youngest.",
        "select_candidates": [
            "select singer.Name, singer.Country, singer.Age",
            "select distinct singer.Name, singer.Country, singer.Age",
            "select sing(singer.Name), singer.Country, singer.Age",
            "select singer.Singer_ID, singer.Country, singer.Age"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the names, countries, and ages for every singer in descending order of age?",
        "select_candidates": [
            "select singer.Name, singer.Country, singer.Age",
            "select distinct singer.Name, singer.Country, singer.Age",
            "select sing(singer.Name), singer.Country, singer.Age",
            "select singer.Singer_ID, singer.Country, singer.Age"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the average, minimum, and maximum age of all singers from France?",
        "select_candidates": [
            "select avg(singer.Age), min(singer.Age), max(singer.Age)",
            "select max(singer.Age), avg(singer.Age), min(singer.Age)",
            "select avg(singer.Age), min(singer.Age), max(singer.Age), singer.Age",
            "select the avg(singer.Age), min(singer.Age), max(singer.Age)"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the average, minimum, and maximum age for all French singers?",
        "select_candidates": [
            "select avg(singer.Age), min(singer.Age), max(singer.Age)",
            "select singer.Age, avg(singer.Age), min(singer.Age), max(singer.Age)",
            "select max(singer.Age), avg(singer.Age), min(singer.Age)",
            "select avg(singer.Age), min(singer.Age), max(singer.Age), singer.Age"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Show the name and the release year of the song by the youngest singer.",
        "select_candidates": [
            "select singer.Song_Name, singer.Song_release_year",
            "select sing(singer.Song_Name), singer.Song_release_year",
            "select distinct singer.Song_Name, singer.Song_release_year",
            "select singer.Song_Name, singer.Song_release_year, singer.Age"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the names and release years for all the songs of the youngest singer?",
        "select_candidates": [
            "select singer.Song_Name, singer.Song_release_year",
            "select distinct singer.Song_Name, singer.Song_release_year",
            "select sing(singer.Song_Name), singer.Song_release_year",
            "select singer.Song_Name, singer.Song_release_year, singer.Age"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are all distinct countries where singers above age 20 are from?",
        "select_candidates": [
            "select distinct singer.Country",
            "select distinct singer.Country, count(distinct singer.Country)",
            "select count(distinct singer.Country)",
            "select distinct singer.Country, count(distinct singer.Age)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the different countries with singers above age 20?",
        "select_candidates": [
            "select distinct singer.Country",
            "select count(distinct singer.Country)",
            "select count (distinct singer.Country)",
            "select distinct singer.Country, singer.Age"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Show all countries and the number of singers in each country.",
        "select_candidates": [
            "select singer.Country, count(*)",
            "select count(*), singer.Country",
            "select distinct singer.Country, count(*)",
            "select singer.Country, count(*), singer.Country"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How many singers are from each country?",
        "select_candidates": [
            "select singer.Country, count(*)",
            "select count(*), singer.Country",
            "select sum(singer.Country), singer.Country",
            "select distinct singer.Country, count(*)"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "List all song names by singers above the average age.",
        "select_candidates": [
            "select singer.Song_Name",
            "select distinct singer.Song_Name",
            "select singer.Song_Name, singer.Age",
            "select count(distinct singer.Song_Name)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are all the song names by singers who are older than average?",
        "select_candidates": [
            "select singer.Song_Name",
            "select distinct singer.Song_Name",
            "select count(distinct singer.Song_Name)",
            "select singer.Song_Name, singer.Age"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Show location and name for all stadiums with a capacity between 5000 and 10000.",
        "select_candidates": [
            "select stadium.Location, stadium.Name",
            "select distinct stadium.Location, stadium.Name",
            "select stadium.Name, stadium.Location",
            "select stadium.Location, stadium.Name, stadium.Capacity"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the locations and names of all stations with capacity between 5000 and 10000?",
        "select_candidates": [
            "select stadium.Location, stadium.Name",
            "select distinct stadium.Location, stadium.Name",
            "select stadium.Location, stadium.Name, stadium.Capacity",
            "select stadium.Name, stadium.Location"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            1.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the maximum capacity and the average of all stadiums?",
        "select_candidates": [
            "select max(stadium.Capacity), avg(stadium.Average)",
            "select stadium.Highest, stadium.Average",
            "select stadium.Capacity, stadium.Average",
            "select stadium.Average, stadium.Highest"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the average and maximum capacities for all stadiums?",
        "select_candidates": [
            "select avg(stadium.Average), max(stadium.Capacity)",
            "select avg(stadium.Capacity), max(stadium.Capacity)",
            "select stadium.Average, stadium.Highest",
            "select avg(stadium.Average), max(stadium.Average)"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the name and capacity for the stadium with highest average attendance?",
        "select_candidates": [
            "select stadium.Name, stadium.Capacity",
            "select stadium.Name, stadium.Capacity, stadium.Highest",
            "select stadium.Capacity, stadium.Name",
            "select stadium.Lowest, stadium.Name, stadium.Capacity"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the name and capacity for the stadium with the highest average attendance?",
        "select_candidates": [
            "select stadium.Name, stadium.Capacity",
            "select stadium.Name, stadium.Capacity, stadium.Highest",
            "select stadium.Capacity, stadium.Name",
            "select stadium.Name, stadium.Capacity, stadium.Average"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How many concerts are there in year 2014 or 2015?",
        "select_candidates": [
            "select count(*)",
            "select count(distinct concert.concert_Name)",
            "select count(*), concert.Year",
            "select count (*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How many concerts occurred in 2014 or 2015?",
        "select_candidates": [
            "select count(*)",
            "select count(distinct concert.concert_Name)",
            "select count (*)",
            "select count (distinct concert.concert_Name)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Show the stadium name and the number of concerts in each stadium.",
        "select_candidates": [
            "select stadium.Name, count(*)",
            "select stadium.Name, count(*), concert.Stadium_ID",
            "select stadium.Name, count(*), stadium.Stadium_ID",
            "select stadium.Name, count(*), concert.concert_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "For each stadium, how many concerts play there?",
        "select_candidates": [
            "select stadium.Location, count(*)",
            "select count(*), stadium.Location",
            "select stadium.Stadium_ID, count(*)",
            "select count(*), stadium.Stadium_ID"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Show the stadium name and capacity with most number of concerts in year 2014 or after.",
        "select_candidates": [
            "select stadium.Name, stadium.Capacity",
            "select stadium.Name, stadium.Capacity, count(*)",
            "select stadium.Capacity, stadium.Name",
            "select stadium.Name, stadium.Capacity, count(*), stadium.Stadium_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the name and capacity of the stadium with the most concerts after 2013?",
        "select_candidates": [
            "select stadium.Name, stadium.Capacity",
            "select stadium.Capacity, stadium.Name",
            "select stadium.Name, stadium.Capacity, concert.Stadium_ID",
            "select stadium.Name, stadium.Capacity, concert.Year"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Which year has most number of concerts?",
        "select_candidates": [
            "select concert.Year",
            "select count(*), concert.Year",
            "select concert.Year, count(*)",
            "select concert(*), concert.Year"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the year that had the most concerts?",
        "select_candidates": [
            "select concert.Year",
            "select concert.Year, count(*)",
            "select concert.Year, count(*), concert.Year",
            "select concert.Year denoted by concert.Year"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Show the stadium names without any concert.",
        "select_candidates": [
            "select stadium.Name",
            "select stadium.Name, stadium.Location",
            "select stadium.Name, stadium.Stadium_ID",
            "select stadium.Stadium_ID, stadium.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the names of the stadiums without any concerts?",
        "select_candidates": [
            "select stadium.Name",
            "select stadium.Name, stadium.Location",
            "select stadium.Name, stadium.Stadium_ID",
            "select stadium.Name, stadium.Capacity"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Show countries where a singer above age 40 and a singer below 30 are from.",
        "select_candidates": [
            "select singer.Country",
            "select distinct singer.Country",
            "select singer.Country, singer.Age",
            "select singer.Country, singer.Song_Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Show names for all stadiums except for stadiums having a concert in year 2014.",
        "select_candidates": [
            "select stadium.Name",
            "select distinct stadium.Name",
            "select stadium.Name, stadium.Location",
            "select stadium.Name, stadium.Capacity"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the names of all stadiums that did not have a concert in 2014?",
        "select_candidates": [
            "select stadium.Name",
            "select distinct stadium.Name",
            "select stadium.Name, stadium.Location",
            "select stadium.Name, stadium.Stadium_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Show the name and theme for all concerts and the number of singers in each concert.",
        "select_candidates": [
            "select concert.concert_Name, concert.Theme, count(*)",
            "select concert.concert_Name, concert.Theme, count(*),",
            "select concert.concert_Name, concert.Theme, count(*), concert.concert_ID",
            "select concert_name, concert.Theme, count(*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the names, themes, and number of singers for every concert?",
        "select_candidates": [
            "select concert.concert_Name, concert.Theme, count(*)",
            "select concert.concert_Name, concert.Theme, count(*),",
            "select concert.concert_Name, concert.Theme, count(*), concert.concert_ID",
            "select concert.concert_Name, concert.Theme, concert.Stadium_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "List singer names and number of concerts for each singer.",
        "select_candidates": [
            "select singer.Name, count(*)",
            "select singer.Name, count(*), singer.Singer_ID",
            "select singer.Name, count(*), concert.concert_ID",
            "select singer.Name, count(*), concert.concert_Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the names of the singers and number of concerts for each person?",
        "select_candidates": [
            "select singer.Name, count(*)",
            "select singer.Name, count(*), singer.Singer_ID",
            "select singer.Name, count(*), concert.concert_Name",
            "select count(*), singer.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            1.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "List all singer names in concerts in year 2014.",
        "select_candidates": [
            "select singer.Name",
            "select singer.Name, concert.concert_Name",
            "select distinct singer.Name",
            "select singer.Name, concert.concert_Name, concert.Stadium_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the names of the singers who performed in a concert in 2014?",
        "select_candidates": [
            "select singer.Name",
            "select singer.Name, concert.Year",
            "select singer.Name, concert.concert_Name",
            "select distinct singer.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "what is the name and nation of the singer who have a song having 'Hey' in its name?",
        "select_candidates": [
            "select singer.Name, singer.Country",
            "select singer.Name, singer.Country, singer.Song_Name",
            "select distinct singer.Name, singer.Country",
            "select singer.Singer_ID, singer.Name, singer.Country"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the name and country of origin of every singer who has a song with the word 'Hey' in its title?",
        "select_candidates": [
            "select singer.Name, singer.Country",
            "select singer.Name, singer.Country, singer.Song_Name",
            "select distinct singer.Name, singer.Country",
            "select singer.Name, singer.Country, singer.Singer_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Find the name and location of the stadiums which some concerts happened in the years of both 2014 and 2015.",
        "select_candidates": [
            "select stadium.Name, stadium.Location",
            "select stadium.Location, stadium.Name",
            "select stadium.Name, stadium.Location, concert.Year",
            "select distinct stadium.Name, stadium.Location"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the names and locations of the stadiums that had concerts that occurred in both 2014 and 2015?",
        "select_candidates": [
            "select stadium.Name, stadium.Location",
            "select stadium.Location, stadium.Name",
            "select distinct stadium.Name, stadium.Location",
            "select stadium.Name, stadium.Location, concert.Stadium_ID"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Find the number of concerts happened in the stadium with the highest capacity.",
        "select_candidates": [
            "select count(*)",
            "select count(*), stadium.Name",
            "select count(*), stadium.Location",
            "select count(distinct concert.concert_Name)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the number of concerts that occurred in the stadium with the largest capacity?",
        "select_candidates": [
            "select count(*)",
            "select count(distinct concert.concert_Name)",
            "select count(*), stadium.Name",
            "select count(*), stadium.Location"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Find the number of pets whose weight is heavier than 10.",
        "select_candidates": [
            "select count(*)",
            "select count(distinct Pets.PetID)",
            "select count(distinct Pets.PetType)",
            "select count(distinct Pets.weight)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How many pets have a greater weight than 10?",
        "select_candidates": [
            "select count(*)",
            "select count(distinct Pets.PetID)",
            "select count(distinct Pets.PetType)",
            "select count(distinct t2.c)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Find the weight of the youngest dog.",
        "select_candidates": [
            "select Pets.weight",
            "select Pets.PetType, Pets.weight",
            "select Pets.weight, min(Pets.weight)",
            "select max(Pets.weight)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How much does the youngest dog weigh?",
        "select_candidates": [
            "select Pets.weight",
            "select min(Pets.weight)",
            "select max(Pets.weight)",
            "select Pets.PetType, Pets.weight"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Find the maximum weight for each type of pet. List the maximum weight and pet type.",
        "select_candidates": [
            "select max(Pets.weight), Pets.PetType",
            "select avg(Pets.weight), Pets.PetType",
            "select maximum(Pets.weight), Pets.PetType",
            "select min(Pets.weight), Pets.PetType"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "List the maximum weight and type for each type of pet.",
        "select_candidates": [
            "select max(Pets.weight), Pets.PetType",
            "select max(Pets.weight), Pets.PetType, min(Pets.weight)",
            "select max(Pets.weight), Pets.PetType, max(Pets.weight)",
            "select max(Pets.weight), Pets.PetType, Pets.weight"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Find number of pets owned by students who are older than 20.",
        "select_candidates": [
            "select count(*)",
            "select count(distinct Has_Pet.PetID)",
            "select count(distinct Has_Pet.StuID)",
            "select count(*), Student.StuID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How many pets are owned by students that have an age greater than 20?",
        "select_candidates": [
            "select count(*)",
            "select count(distinct Has_Pet.PetID)",
            "select count(distinct Has_Pet.StuID)",
            "select count(*), Student.Age"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Find the number of dog pets that are raised by female students (with sex F).",
        "select_candidates": [
            "select count(*)",
            "select count(distinct Pets.PetType)",
            "select count(*), Student.Fname",
            "select count(distinct Has_Pet.PetID)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How many dog pets are raised by female students?",
        "select_candidates": [
            "select count(*)",
            "select count(distinct Pets.PetType)",
            "select count(distinct Student.LName)",
            "select count(distinct Has_Pet.PetID)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Find the number of distinct type of pets.",
        "select_candidates": [
            "select count(distinct Pets.PetType)",
            "select count (distinct Pets.PetType)",
            "select count(distinct Pets.PetType), count(distinct Pets.PetType)",
            "select count (distinct Pets.PetType), count(distinct Pets.PetType)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How many different types of pet are there?",
        "select_candidates": [
            "select count(distinct Pets.PetType)",
            "select count (distinct Pets.PetType)",
            "select count(distinct Pets.PetType), count(distinct Pets.PetType)",
            "select count(distinct Pets.PetType), count(distinct Pets.PetID)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Find the first name of students who have cat or dog pet.",
        "select_candidates": [
            "select Student.Fname",
            "select distinct Student.Fname",
            "select Student.Fname, Student.LName",
            "select Student.Fname, Student.StuID"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the first names of every student who has a cat or dog as a pet?",
        "select_candidates": [
            "select Student.Fname",
            "select distinct Student.Fname",
            "select Student.Fname, Student.LName",
            "select distinct Student.Fname, Student.LName"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Find the first name of students who have both cat and dog pets.",
        "select_candidates": [
            "select Student.Fname",
            "select distinct Student.Fname",
            "select Student.Fname, Student.LName",
            "select Student.Fname, Student.StuID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the students' first names who have both cats and dogs as pets?",
        "select_candidates": [
            "select Student.Fname",
            "select distinct Student.Fname",
            "select Student.Fname, Student.LName",
            "select Student.Fname, Student.LName, Student.Fname"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Find the major and age of students who do not have a cat pet.",
        "select_candidates": [
            "select Student.Major, Student.Age",
            "select distinct Student.Major, Student.Age",
            "select Student.Major, Student.Age, Student.Sex",
            "select Student.Major, Student.Age, Student.Major"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            0.0,
            0.0
        ]
    },
    {
        "question": "What major is every student who does not own a cat as a pet, and also how old are they?",
        "select_candidates": [
            "select Student.Major, Student.Age",
            "select distinct Student.Major, Student.Age",
            "select Student.Major, Student.Age, Student.Sex",
            "select Student.Major, Student.LName, Student.Age"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            0.0,
            0.0
        ]
    },
    {
        "question": "Find the id of students who do not have a cat pet.",
        "select_candidates": [
            "select Student.StuID",
            "select distinct Student.StuID",
            "select Student.StuID, Student.StuID",
            "select Student.StuID, Has_Pet.StuID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the ids of the students who do not own cats as pets?",
        "select_candidates": [
            "select Student.StuID",
            "select distinct Student.StuID",
            "select Student.StuID, Student.StuID",
            "select Student.StuID, Has_Pet.StuID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Find the first name and age of students who have a dog but do not have a cat as a pet.",
        "select_candidates": [
            "select Student.Fname, Student.Age",
            "select distinct Student.Fname, Student.Age",
            "select Student.Age, Student.Fname",
            "select Student.Fname, Student.Age, Student.StuID"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the first name of every student who has a dog but does not have a cat?",
        "select_candidates": [
            "select Student.Fname",
            "select distinct Student.Fname",
            "select Student.Fname, Student.LName",
            "select Student.Fname, Student.StuID"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ]
    },
    {
        "question": "Find the type and weight of the youngest pet.",
        "select_candidates": [
            "select Pets.PetType, Pets.weight",
            "select distinct Pets.PetType, Pets.weight",
            "select Pets.PetType, Pets.weight, min(Pets.weight)",
            "select Pets.PetType, Pets.weight, Pets.pet_age"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What type of pet is the youngest animal, and how much does it weigh?",
        "select_candidates": [
            "select Pets.PetType, Pets.weight",
            "select distinct Pets.PetType, Pets.weight",
            "select Pets.PetID, Pets.PetType, Pets.weight",
            "select pettype, Pets.weight"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Find the id and weight of all pets whose age is older than 1.",
        "select_candidates": [
            "select Pets.PetID, Pets.weight",
            "select petid, Pets.weight",
            "select distinct Pets.PetID, Pets.weight",
            "select petPets.PetID, Pets.weight"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the id and weight of every pet who is older than 1?",
        "select_candidates": [
            "select Pets.PetID, Pets.weight",
            "select petid, Pets.weight",
            "select distinct Pets.PetID, Pets.weight",
            "select petPets.PetID, Pets.weight"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Find the average and maximum age for each type of pet.",
        "select_candidates": [
            "select Pets.PetType, avg(Pets.pet_age), max(Pets.pet_age)",
            "select avg(Pets.pet_age), max(Pets.pet_age), Pets.PetType",
            "select avg(Pets.pet_age), max(Pets.pet_age)",
            "select max(Pets.pet_age), avg(Pets.pet_age), Pets.PetType"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            1.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the average and maximum age for each pet type?",
        "select_candidates": [
            "select Pets.PetType, avg(Pets.pet_age), max(Pets.pet_age)",
            "select avg(Pets.pet_age), max(Pets.pet_age), Pets.PetType",
            "select avg(Pets.pet_age), max(Pets.pet_age)",
            "select max(Pets.pet_age), avg(Pets.pet_age), Pets.PetType"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            1.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Find the average weight for each pet type.",
        "select_candidates": [
            "select avg(Pets.weight), Pets.PetType",
            "select Pets.PetType, avg(Pets.weight)",
            "select avg(Pets.weight), Pets.PetType, min(Pets.weight)",
            "select analyte Pets.PetType, avg(Pets.weight)"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the average weight for each type of pet?",
        "select_candidates": [
            "select avg(Pets.weight), Pets.PetType",
            "select Pets.PetType, avg(Pets.weight)",
            "select analyte Pets.PetType, avg(Pets.weight)",
            "select dif_g(Pets.weight), Pets.PetType, avg(Pets.weight)"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Find the first name and age of students who have a pet.",
        "select_candidates": [
            "select Student.Fname, Student.Age",
            "select distinct Student.Fname, Student.Age",
            "select Student.Fname, Student.Age, Student.LName",
            "select Student.Fname, Student.Age, Student.StuID"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the different first names and ages of the students who do have pets?",
        "select_candidates": [
            "select distinct Student.Fname, Student.Age",
            "select distinct Student.Fname, Student.Age, Student.LName",
            "select distinct Student.Fname, Student.Age, Student.StuID",
            "select distinct Student.Age, Student.Fname"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Find the id of the pet owned by student whose last name is \u2018Smith\u2019.",
        "select_candidates": [
            "select Has_Pet.PetID",
            "select Has_Pet.StuID",
            "select distinct Has_Pet.PetID",
            "select Has_Pet.PetID, Student.StuID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the id of the pet owned by the student whose last name is 'Smith'?",
        "select_candidates": [
            "select Has_Pet.PetID",
            "select Has_Pet.PetID, Student.StuID",
            "select distinct Has_Pet.PetID",
            "select Has_Pet.StuID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Find the number of pets for each student who has any pet and student id.",
        "select_candidates": [
            "select count(*), Has_Pet.StuID",
            "select count(*), Student.StuID",
            "select count(distinct Pets.PetID), Has_Pet.StuID",
            "select count(distinct Pets.PetID), Student.StuID"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "For students who have pets, how many pets does each student have? list their ids instead of names.",
        "select_candidates": [
            "select count(*), Student.StuID",
            "select count(distinct Has_Pet.StuID), Student.StuID",
            "select Student.StuID, count(*)",
            "select count(distinct Student.StuID), Student.StuID"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Find the first name and gender of student who have more than one pet.",
        "select_candidates": [
            "select Student.Fname, Student.Sex",
            "select distinct Student.Fname, Student.Sex",
            "select Student.Fname, Student.Sex, Student.StuID",
            "select Student.Fname, Student.Sex, Student.LName"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the first name and gender of the all the students who have more than one pet?",
        "select_candidates": [
            "select Student.Fname, Student.Sex",
            "select distinct Student.Fname, Student.Sex",
            "select Student.Fname, Student.Sex, Student.StuID",
            "select Student.Sex, Student.Fname"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            1.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Find the last name of the student who has a cat that is age 3.",
        "select_candidates": [
            "select Student.LName",
            "select distinct Student.LName",
            "select Student.LName, Student.Fname",
            "select Student.LName, Student.Fname, Student.LName"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the last name of the student who has a cat that is 3 years old?",
        "select_candidates": [
            "select Student.LName",
            "select distinct Student.LName",
            "select Student.LName, Student.Fname",
            "select Student.LName, Student.LName"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Find the average age of students who do not have any pet.",
        "select_candidates": [
            "select avg(Student.Age)",
            "select avg(Student.Age), Student.LName",
            "select avg(Student.Age), Student.Fname",
            "select avg(Student.Age), Student.Sex"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the average age for all students who do not own any pets?",
        "select_candidates": [
            "select avg(Student.Age)",
            "select avg(Student.Age), Student.LName",
            "select avg(Student.Age), Student.Fname",
            "select Student.Age, avg(Student.Age)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How many continents are there?",
        "select_candidates": [
            "select count(*)",
            "select count(distinct continents.Continent)",
            "select count(distinct continents.ContId)",
            "select count(*), continents.Continent"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the number of continents?",
        "select_candidates": [
            "select count(*)",
            "select count(distinct continents.Continent)",
            "select count(*), continents.Continent",
            "select count(distinct continents.ContId)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How many countries does each continent have? List the continent id, continent name and the number of countries.",
        "select_candidates": [
            "select continents.ContId, countries.CountryName, count(*)",
            "select continents.ContId, continents.Continent, count(*)",
            "select continents.Continent, countries.CountryName, count(*)",
            "select continents.ContId, t1, count(*)"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "For each continent, list its id, name, and how many countries it has?",
        "select_candidates": [
            "select continents.ContId, countries.CountryName, count(*)",
            "select continents.Continent, countries.CountryName, count(*)",
            "select countries.CountryId, countries.CountryName, count(*)",
            "select continents.ContId, continents.Continent, count(*)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            1.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How many countries are listed?",
        "select_candidates": [
            "select count(*)",
            "select count(distinct countries.CountryName)",
            "select count (distinct countries.CountryName)",
            "select count(*), countries.CountryName"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How many countries exist?",
        "select_candidates": [
            "select count(*)",
            "select count(distinct countries.CountryName)",
            "select count(*), countries.CountryName",
            "select count(distinct countries.CountryId)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How many models does each car maker produce? List maker full name, id and the number.",
        "select_candidates": [
            "select car_makers.FullName, car_makers.Id, count(*)",
            "select car_makers.FullName, car_makers.Maker, count(*)",
            "select car_makers.Maker, car_makers.FullName, car_makers.Id, count(*)",
            "select car_makers.Maker, car_makers.FullName, model_list.ModelId, count(*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the full name of each car maker, along with its id and how many models it produces?",
        "select_candidates": [
            "select car_makers.FullName, car_makers.Id, count(*)",
            "select car_makers.FullName, car_makers.Id, count(*), car_makers.Id",
            "select car_makers.FullName, car_makers.Id, count(*), car_makers.Maker",
            "select car_makers.FullName, car_makers.Maker, count(*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Which model of the car has the minimum horsepower?",
        "select_candidates": [
            "select car_names.Model",
            "select car_names.Model, cars_data.Horsepower",
            "select car_names.Model, min(cars_data.Horsepower)",
            "select distinct car_names.Model"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the model of the car with the smallest amount of horsepower?",
        "select_candidates": [
            "select car_names.Model",
            "select car_names.Model, cars_data.Horsepower",
            "select distinct car_names.Model",
            "select car_names.Model, cars_data.MPG"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Find the model of the car whose weight is below the average weight.",
        "select_candidates": [
            "select model_list.Model",
            "select distinct model_list.Model",
            "select car_names.Model",
            "select model_list.Model, car_names.Model"
        ],
        "select_labels": [
            0.0,
            0.0,
            1.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the model for the car with a weight smaller than the average?",
        "select_candidates": [
            "select model_list.Model",
            "select distinct model_list.Model",
            "select car_names.Model",
            "select model_list.Model, car_names.Model"
        ],
        "select_labels": [
            0.0,
            0.0,
            1.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Find the name of the makers that produced some cars in the year of 1970?",
        "select_candidates": [
            "select car_makers.Maker",
            "select distinct car_makers.Maker",
            "select car_makers.Maker, car_makers.FullName",
            "select car_makers.Maker, car_makers.FullName, car_makers.Maker"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the name of the different car makers who produced a car in 1970?",
        "select_candidates": [
            "select distinct car_makers.Maker",
            "select distinct car_makers.Maker, car_makers.FullName",
            "select distinct car_makers.Maker, car_makers.FullName, car_makers.Maker",
            "select distinct car_makers.Maker, car_makers.FullName, car_makers.Country"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Find the make and production time of the cars that were produced in the earliest year?",
        "select_candidates": [
            "select car_names.Make, cars_data.Year",
            "select distinct car_names.Make, cars_data.Year",
            "select car_names.Make, cars_data.Year, min(cars_data.Year)",
            "select car_names.Model, cars_data.Year"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ]
    },
    {
        "question": "What is the maker of the carr produced in the earliest year and what year was it?",
        "select_candidates": [
            "select car_makers.Maker, cars_data.Year",
            "select distinct car_makers.Maker, cars_data.Year",
            "select car_makers.Maker, cars_data.Year, min(cars_data.Year)",
            "select car_makers.Maker, cars_data.Year, max(cars_data.Year)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ]
    },
    {
        "question": "Which distinct car models are the produced after 1980?",
        "select_candidates": [
            "select distinct car_names.Model",
            "select distinct car_names.Model, car_names.Make",
            "select distinct(car_names.Model)",
            "select distinct car_names.Model, cars_data.Year"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the different models for the cards produced after 1980?",
        "select_candidates": [
            "select distinct model_list.Model",
            "select count(distinct model_list.Model)",
            "select distinct model_list.ModelId, count(distinct model_list.Model)",
            "select distinct(model_list.Model)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How many car makers are there in each continents? List the continent name and the count.",
        "select_candidates": [
            "select continents.Continent, count(*)",
            "select countries.CountryName, count(*)",
            "select continents.ContId, countries.CountryName, count(*)",
            "select count(*), countries.CountryName, continents.Continent"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the name of each continent and how many car makers are there in each one?",
        "select_candidates": [
            "select continents.Continent, count(*)",
            "select countries.CountryName, count(*)",
            "select continents.Continent, count(*), countries.CountryName",
            "select continents.Continent, count(*), countries.Continent"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Which of the countries has the most car makers? List the country name.",
        "select_candidates": [
            "select countries.CountryName",
            "select countries.CountryName, car_makers.Country",
            "select countries.CountryName, count(*)",
            "select distinct countries.CountryName"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the name of the country with the most car makers?",
        "select_candidates": [
            "select countries.CountryName",
            "select countries.CountryName, car_makers.Country",
            "select countries.CountryName, count(*)",
            "select countries.CountryName, car_makers.Country, countries.CountryName"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How many car models are produced by each maker? Only list the count and the maker full name.",
        "select_candidates": [
            "select count(*), car_makers.FullName",
            "select count(distinct car_makers.Maker), car_makers.FullName",
            "select car_makers.Maker, car_makers.FullName",
            "select count(*), car_makers.Maker, car_makers.FullName"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the number of car models that are produced by each maker and what is the id and full name of each maker?",
        "select_candidates": [
            "select count(*), car_makers.Id, car_makers.FullName",
            "select car_makers.Id, car_makers.FullName",
            "select car_makers.Id, car_makers.FullName, car_makers.Maker",
            "select car_makers.Id, car_makers.FullName, count(*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            1.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the accelerate of the car make amc hornet sportabout (sw)?",
        "select_candidates": [
            "select cars_data.Accelerate",
            "select avg(cars_data.Accelerate)",
            "select max(cars_data.Accelerate)",
            "select avg(cars_data.Accelerate), car_names.Make"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How much does the car accelerate that makes amc hornet sportabout (sw)?",
        "select_candidates": [
            "select cars_data.Accelerate",
            "select avg(cars_data.Accelerate)",
            "select sum(cars_data.Accelerate)",
            "select cars_data.Accelerate, max(cars_data.Accelerate)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How many car makers are there in france?",
        "select_candidates": [
            "select count(*)",
            "select count(distinct car_makers.Maker)",
            "select count (distinct car_makers.Maker)",
            "select count(*), car_makers.Maker"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the number of makers of care in France?",
        "select_candidates": [
            "select count(*)",
            "select count(distinct car_makers.Maker)",
            "select count (distinct car_makers.Maker)",
            "select count(car_makers.Maker)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How many car models are produced in the usa?",
        "select_candidates": [
            "select count(*)",
            "select count(distinct model_list.Model)",
            "select count(distinct model_list.Maker)",
            "select countries.CountryName, count(*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the count of the car models produced in the United States?",
        "select_candidates": [
            "select count(*)",
            "select count(distinct model_list.Model)",
            "select count(distinct car_names.Model)",
            "select count(distinct model_list.Maker)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the average miles per gallon(mpg) of the cars with 4 cylinders?",
        "select_candidates": [
            "select avg(cars_data.MPG)",
            "select avg(cars_data.MPG), cars_data.Cylinders",
            "select the avg(cars_data.MPG)",
            "select anavg(cars_data.MPG)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the average miles per gallon of all the cards with 4 cylinders?",
        "select_candidates": [
            "select avg(cars_data.MPG)",
            "select avg(cars_data.MPG), cars_data.Cylinders",
            "select avg(cars_data.MPG), cars_data.Id",
            "select anavg(cars_data.MPG)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the smallest weight of the car produced with 8 cylinders on 1974?",
        "select_candidates": [
            "select min(cars_data.Weight)",
            "select min(cars_data.Weight), cars_data.Year",
            "select max(cars_data.Weight)",
            "select min(cars_data.Weight), cars_data.Cylinders"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the minimum weight of the car with 8 cylinders produced in 1974?",
        "select_candidates": [
            "select min(cars_data.Weight)",
            "select min(cars_data.Weight), cars_data.Year",
            "select min(cars_data.Weight), cars_data.Cylinders",
            "select min(cars_data.Weight), cars_data.Year, cars_data.Cylinders"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are all the makers and models?",
        "select_candidates": [
            "select model_list.Maker, model_list.Model",
            "select distinct model_list.Maker, model_list.Model",
            "select car_makers.Maker, model_list.Model",
            "select distinct car_makers.Maker, model_list.Model"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the makers and models?",
        "select_candidates": [
            "select model_list.Maker, model_list.Model",
            "select car_makers.Maker, model_list.Model",
            "select distinct model_list.Maker, model_list.Model",
            "select distinct car_makers.Maker, model_list.Model"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the countries having at least one car maker? List name and id.",
        "select_candidates": [
            "select countries.CountryName, car_makers.Id",
            "select countries.CountryName, car_makers.Country",
            "select distinct countries.CountryName, car_makers.Id",
            "select countries.CountryName, car_makers.FullName"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            0.0,
            1.0
        ]
    },
    {
        "question": "What are the names and ids of all countries with at least one car maker?",
        "select_candidates": [
            "select countries.CountryName, countries.CountryId",
            "select countries.CountryName, car_makers.Id",
            "select distinct countries.CountryName, countries.CountryId",
            "select distinct countries.CountryName, car_makers.Id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            0.0,
            1.0
        ]
    },
    {
        "question": "What is the number of the cars with horsepower more than 150?",
        "select_candidates": [
            "select count(*)",
            "select count(distinct cars_data.Id)",
            "select count (*)",
            "select count(*), cars_data.Id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the number of cars with a horsepower greater than 150?",
        "select_candidates": [
            "select count(*)",
            "select count(distinct cars_data.Id)",
            "select count(*), cars_data.Id",
            "select count (*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the average weight of cars each year?",
        "select_candidates": [
            "select avg(cars_data.Weight), cars_data.Year",
            "select cars_data.Year, avg(cars_data.Weight)",
            "select anavg(cars_data.Weight), cars_data.Year",
            "select the avg(cars_data.Weight), cars_data.Year"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the average weight and year for each year?",
        "select_candidates": [
            "select avg(cars_data.Weight), cars_data.Year",
            "select cars_data.Year, avg(cars_data.Weight)",
            "select avg(cars_data.Accelerate), cars_data.Year",
            "select cars_data.Weight, cars_data.Year, avg(cars_data.Weight)"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Which countries in europe have at least 3 car manufacturers?",
        "select_candidates": [
            "select countries.CountryName",
            "select countries.CountryName, count(*)",
            "select countries.CountryName, count(distinct car_makers.Country)",
            "select distinct countries.CountryName"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the names of all European countries with at least 3 manufacturers?",
        "select_candidates": [
            "select countries.CountryName",
            "select countries.CountryName, count(*)",
            "select countries.CountryName, count(distinct car_makers.Country)",
            "select countries.CountryName, count(distinct car_makers.Maker)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            0.0,
            1.0
        ]
    },
    {
        "question": "What is the maximum horsepower and the make of the car models with 3 cylinders?",
        "select_candidates": [
            "select max(cars_data.Horsepower), car_names.Make",
            "select max(cars_data.Horsepower), car_names.Make, car_names.Model",
            "select max(cars_data.Horsepower), car_names.Make, car_names.Make",
            "select max(cars_data.Horsepower), t4, car_names.Make"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ]
    },
    {
        "question": "What is the largest amount of horsepower for the models with 3 cylinders and what make is it?",
        "select_candidates": [
            "select max(cars_data.Horsepower), car_names.Make",
            "select max(cars_data.Horsepower), car_names.Make, car_names.Make",
            "select max(cars_data.Horsepower), car_names.Make, car_names.Model",
            "select max(cars_data.Horsepower), car_names.Make, car_names.MakeId"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            1.0
        ]
    },
    {
        "question": "Which model saves the most gasoline? That is to say, have the maximum miles per gallon.",
        "select_candidates": [
            "select model_list.Model",
            "select model_list.Model, max(cars_data.MPG)",
            "select model_list.Model, cars_data.MPG",
            "select model_list.Model, max(mpg)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the car model with the highest mpg?",
        "select_candidates": [
            "select car_names.Model",
            "select car_names.Model, cars_data.MPG",
            "select car_names.Model, max(cars_data.MPG)",
            "select car_names.Model, model_list.Model"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the average horsepower of the cars before 1980?",
        "select_candidates": [
            "select avg(cars_data.Horsepower)",
            "select cars_data.Horsepower, avg(cars_data.Horsepower)",
            "select cars_data.Weight, avg(cars_data.Horsepower)",
            "select avg(cars_data.Horsepower), cars_data.Year"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the average horsepower for all cars produced before 1980?",
        "select_candidates": [
            "select avg(cars_data.Horsepower)",
            "select cars_data.Horsepower, avg(cars_data.Horsepower)",
            "select avg(cars_data.Horsepower), cars_data.Year",
            "select cars_data.Weight, avg(cars_data.Horsepower)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the average edispl of the cars of model volvo?",
        "select_candidates": [
            "select avg(cars_data.Edispl)",
            "select avg(cars_data.Edispl), car_names.Model",
            "select the avg(cars_data.Edispl)",
            "select anavg(cars_data.Edispl)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the average edispl for all volvos?",
        "select_candidates": [
            "select avg(cars_data.Edispl)",
            "select avg(cars_data.Edispl), model_list.Model",
            "select cars_data.Edispl, avg(cars_data.Edispl)",
            "select avg(cars_data.Edispl), car_makers.Maker"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the maximum accelerate for different number of cylinders?",
        "select_candidates": [
            "select max(cars_data.Accelerate), cars_data.Cylinders",
            "select cars_data.Accelerate, max(cars_data.Accelerate)",
            "select avg(cars_data.Accelerate), cars_data.Cylinders",
            "select maximum(cars_data.Accelerate), cars_data.Cylinders"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the maximum accelerate for all the different cylinders?",
        "select_candidates": [
            "select max(cars_data.Accelerate), cars_data.Cylinders",
            "select cars_data.Cylinders, max(cars_data.Accelerate)",
            "select avg(cars_data.Accelerate), cars_data.Cylinders",
            "select maximum(cars_data.Accelerate), cars_data.Cylinders"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Which model has the most version(make) of cars?",
        "select_candidates": [
            "select model_list.Model",
            "select model_list.Model, car_names.Make",
            "select model_list.Model, car_names.Make, car_names.Model",
            "select distinct model_list.Model"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What model has the most different versions?",
        "select_candidates": [
            "select model_list.Model",
            "select model_list.Model, count(distinct model_list.Model)",
            "select model_list.Model, count(distinct model_list.ModelId)",
            "select model_list.Model, count(distinct model_list.Maker)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How many cars have more than 4 cylinders?",
        "select_candidates": [
            "select count(*)",
            "select count(distinct cars_data.Id)",
            "select count(distinct cars_data.Cylinders)",
            "select count(*), cars_data.Id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the number of cars with more than 4 cylinders?",
        "select_candidates": [
            "select count(*)",
            "select count(distinct cars_data.Id)",
            "select count(*), cars_data.Id",
            "select count (*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "how many cars were produced in 1980?",
        "select_candidates": [
            "select count(*)",
            "select cars_data.Year, count(*)",
            "select count(*), cars_data.Year",
            "select cars_data.Year"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "In 1980, how many cars were made?",
        "select_candidates": [
            "select count(*)",
            "select cars_data.Year, count(*)",
            "select count(*), cars_data.Year",
            "select count(distinct cars_data.Year)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How many car models were produced by the maker with full name American Motor Company?",
        "select_candidates": [
            "select count(*)",
            "select count(distinct car_makers.FullName)",
            "select count(distinct car_makers.Maker)",
            "select count(distinct model_list.Model)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the number of car models created by the car maker American Motor Company?",
        "select_candidates": [
            "select count(distinct model_list.Model)",
            "select count(*)",
            "select count(distinct car_makers.FullName)",
            "select count(distinct model_list.Maker)"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Which makers designed more than 3 car models? List full name and the id.",
        "select_candidates": [
            "select car_makers.FullName, car_makers.Maker, car_makers.Id",
            "select car_makers.FullName, car_makers.Id",
            "select car_makers.FullName, car_makers.Maker",
            "select car_makers.Maker, car_makers.FullName, car_makers.Id"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the names and ids of all makers with more than 3 models?",
        "select_candidates": [
            "select car_makers.Maker, car_makers.Id",
            "select car_makers.Maker, model_list.Maker",
            "select distinct car_makers.Maker, car_makers.Id",
            "select car_makers.Maker, model_list.ModelId"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Which distinctive models are produced by maker with the full name General Motors or weighing more than 3500?",
        "select_candidates": [
            "select distinct model_list.Model",
            "select distinct model_list.Model, car_makers.Maker",
            "select distinct model_list.Maker",
            "select distinctive model_list.Model"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the different models created by either the car maker General Motors or weighed more than 3500?",
        "select_candidates": [
            "select distinct model_list.Model",
            "select distinct model_list.Model, car_makers.Maker",
            "select count(distinct model_list.Model)",
            "select model_list.Model"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "In which years cars were produced weighing no less than 3000 and no more than 4000?",
        "select_candidates": [
            "select cars_data.Year",
            "select distinct cars_data.Year",
            "select count(*), cars_data.Year",
            "select cars_data.Year, max(cars_data.Weight)"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the different years in which there were cars produced that weighed less than 4000 and also cars that weighted more than 3000?",
        "select_candidates": [
            "select distinct cars_data.Year",
            "select distinct cars_data.Year, count(*)",
            "select count(distinct cars_data.Year), count(distinct cars_data.Year)",
            "select count(distinct cars_data.Year), count(*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ]
    },
    {
        "question": "What is the horsepower of the car with the largest accelerate?",
        "select_candidates": [
            "select cars_data.Horsepower",
            "select cars_data.Horsepower, cars_data.Accelerate",
            "select max(cars_data.Horsepower)",
            "select cars_data.Horsepower, max(cars_data.Accelerate)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the horsepower of the car with the greatest accelerate?",
        "select_candidates": [
            "select cars_data.Horsepower",
            "select cars_data.Horsepower, cars_data.Accelerate",
            "select max(cars_data.Horsepower)",
            "select distinct cars_data.Horsepower"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "For model volvo, how many cylinders does the car with the least accelerate have?",
        "select_candidates": [
            "select cars_data.Cylinders",
            "select cars_data.Cylinders, car_names.Model, cars_data.Accelerate",
            "select cars_data.Cylinders, car_names.Model",
            "select cars_data.Cylinders, car_names.Model, min(cars_data.Accelerate)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            1.0
        ]
    },
    {
        "question": "For a volvo model, how many cylinders does the version with least accelerate have?",
        "select_candidates": [
            "select cars_data.Cylinders",
            "select cars_data.Cylinders, model_list.Model",
            "select cars_data.Cylinders, model_list.Model, model_list.Model",
            "select cars_data.Cylinders, model_list.Model, cars_data.Accelerate"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            1.0
        ]
    },
    {
        "question": "How many cars have a larger accelerate than the car with the largest horsepower?",
        "select_candidates": [
            "select count(*)",
            "select count(distinct cars_data.Id)",
            "select count (distinct cars_data.Id)",
            "select count(distinct cars_data.Accelerate)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the number of cars with a greater accelerate than the one with the most horsepower?",
        "select_candidates": [
            "select count(*)",
            "select count(distinct cars_data.Id)",
            "select count (distinct cars_data.Id)",
            "select count(*), cars_data.Accelerate"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How many countries has more than 2 car makers?",
        "select_candidates": [
            "select count(distinct countries.CountryName)",
            "select count(*)",
            "select count(distinct countries.CountryName), car_makers.Maker",
            "select count(distinct car_makers.Country)"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the number of countries with more than 2 car makers?",
        "select_candidates": [
            "select count(*)",
            "select count(distinct countries.CountryName)",
            "select count(distinct countries.CountryName), car_makers.Maker",
            "select count(*), car_makers.Maker"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How many cars has over 6 cylinders?",
        "select_candidates": [
            "select count(*)",
            "select count(distinct cars_data.Id)",
            "select count(*), cars_data.Id",
            "select count(distinct cars_data.Cylinders)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the number of carsw ith over 6 cylinders?",
        "select_candidates": [
            "select count(*)",
            "select count(distinct cars_data.Id)",
            "select count(*), cars_data.Id",
            "select count(distinct cars_data.Cylinders)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "For the cars with 4 cylinders, which model has the largest horsepower?",
        "select_candidates": [
            "select car_names.Model",
            "select car_names.Model, cars_data.Cylinders",
            "select car_names.Model, cars_data.Horsepower",
            "select car_names.Model, cars_data.Cylinders, max(cars_data.Horsepower)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "For all of the 4 cylinder cars, which model has the most horsepower?",
        "select_candidates": [
            "select car_names.Model",
            "select car_names.Model, cars_data.Cylinders",
            "select car_names.Model, cars_data.Horsepower",
            "select car_names.Model, cars_data.Cylinders, max(cars_data.Horsepower)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Among the cars with more than lowest horsepower, which ones do not have more than 3 cylinders? List the car makeid and make name.",
        "select_candidates": [
            "select car_names.MakeId, car_names.Make",
            "select cars_data.Id, car_names.Make",
            "select distinct car_names.MakeId, car_names.Make",
            "select car car_names.MakeId, car_names.Make"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Among the cars that do not have the minimum horsepower, what are the make ids and names of all those with less than 4 cylinders?",
        "select_candidates": [
            "select car_names.MakeId, car_names.Make",
            "select distinct car_names.MakeId, car_names.Make",
            "select car_names.Make, car_names.MakeId",
            "select car_names.MakeId, car_names.Make, car_names.Model"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the maximum miles per gallon of the car with 8 cylinders or produced before 1980?",
        "select_candidates": [
            "select max(cars_data.MPG)",
            "select avg(cars_data.MPG)",
            "select max(cars_data.MPG), cars_data.Cylinders",
            "select max(cars_data.MPG), cars_data.Year"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the maximum mpg of the cars that had 8 cylinders or that were produced before 1980?",
        "select_candidates": [
            "select max(cars_data.MPG)",
            "select max(cars_data.MPG), cars_data.Cylinders",
            "select max(cars_data.MPG), cars_data.Cylinders, cars_data.Year",
            "select avg(cars_data.MPG)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Which models are lighter than 3500 but not built by the 'Ford Motor Company'?",
        "select_candidates": [
            "select model_list.Model",
            "select distinct model_list.Model",
            "select model_list.Model, model_list.Maker",
            "select model_list.Model, t3.c3"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            1.0
        ]
    },
    {
        "question": "What are the different models wthat are lighter than 3500 but were not built by the Ford Motor Company?",
        "select_candidates": [
            "select distinct model_list.Model",
            "select distinct car_names.Model",
            "select distinct cars_data.MPG",
            "select distinct model_list.Model, t3.c3"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            1.0
        ]
    },
    {
        "question": "What are the name of the countries where there is not a single car maker?",
        "select_candidates": [
            "select countries.CountryName",
            "select distinct countries.CountryName",
            "select countries.CountryName, countries.Continent",
            "select countries.CountryName, countries.CountryName"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            0.0,
            1.0
        ]
    },
    {
        "question": "What are the names of the countries with no car makers?",
        "select_candidates": [
            "select countries.CountryName",
            "select distinct countries.CountryName",
            "select countries.CountryName, countries.Continent",
            "select countries.CountryName, countries.CountryId"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            0.0,
            1.0
        ]
    },
    {
        "question": "Which are the car makers which produce at least 2 models and more than 3 car makers? List the id and the maker.",
        "select_candidates": [
            "select car_makers.Id, car_makers.Maker",
            "select car_makers.Id, car_makers.Maker, car_makers.Id",
            "select distinct car_makers.Id, car_makers.Maker",
            "select car_makers.Id, car_makers.Maker, car_makers.Maker"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING-INTERSECT-SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the ids and makers of all car makers that produce at least 2 models and make more than 3 cars?",
        "select_candidates": [
            "select car_makers.Id, car_makers.Maker",
            "select distinct car_makers.Id, car_makers.Maker",
            "select car_makers.Id, car_makers.Maker, car_makers.Id",
            "select count(distinct car_makers.Id), car_makers.Maker"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING-INTERSECT-SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-INTERSECT-SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the id and names of the countries which have more than 3 car makers or produce the 'fiat' model?",
        "select_candidates": [
            "select car_makers.Id, countries.CountryName",
            "select countries.CountryId, countries.CountryName",
            "select count(distinct car_makers.Id), countries.CountryName",
            "select distinct car_makers.Id, countries.CountryName"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY-HAVING",
            "SELECT-FROM-WHERE-GROUP BY-HAVING-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ]
    },
    {
        "question": "What are the ids and names of all countries that either have more than 3 car makers or produce fiat model?",
        "select_candidates": [
            "select countries.CountryId, countries.CountryName",
            "select car_makers.Id, countries.CountryName",
            "select count(distinct car_makers.Id), countries.CountryName",
            "select distinct countries.CountryId, countries.CountryName"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY-HAVING",
            "SELECT-FROM-WHERE-GROUP BY-HAVING-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ]
    },
    {
        "question": "Which country does Airline \"JetBlue Airways\" belong to?",
        "select_candidates": [
            "select airlines.Country",
            "select distinct airlines.Country",
            "select airlines.Country, airlines.Airline",
            "select distinct airlines.Country, airlines.Airline"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What country is Jetblue Airways affiliated with?",
        "select_candidates": [
            "select airlines.Country",
            "select distinct airlines.Country",
            "select airlines.Country, airlines.Airline",
            "select airlines.Country, airlines.Airline, airlines.Country"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the abbreviation of Airline \"JetBlue Airways\"?",
        "select_candidates": [
            "select airlines.Abbreviation",
            "select airlines.Abbreviation, airlines.Airline",
            "select distinct airlines.Abbreviation",
            "select abbreviation(airlines.Abbreviation)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Which abbreviation corresponds to Jetblue Airways?",
        "select_candidates": [
            "select airlines.Abbreviation",
            "select distinct airlines.Abbreviation",
            "select airlines.Abbreviation, airlines.Airline",
            "select distinct airlines.Abbreviation, airlines.Airline"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "List all airline names and their abbreviations in \"USA\".",
        "select_candidates": [
            "select airlines.Airline, airlines.Abbreviation",
            "select distinct airlines.Airline, airlines.Abbreviation",
            "select airlines.uid, airlines.Airline, airlines.Abbreviation",
            "select airlines.Airline, airlines.Abbreviation, airlines.Country"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the airline names and abbreviations for airlines in the USA?",
        "select_candidates": [
            "select airlines.Airline, airlines.Abbreviation",
            "select distinct airlines.Airline, airlines.Abbreviation",
            "select airlines.uid, airlines.Airline, airlines.Abbreviation",
            "select airlines.Airline, airlines.Abbreviation, airlines.Country"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "List the airport code and name in the city of Anthony.",
        "select_candidates": [
            "select airports.AirportCode, airports.AirportName",
            "select distinct airports.AirportCode, airports.AirportName",
            "select airports.AirportCode, airports.AirportName, airports.City",
            "select airport(airports.AirportCode), airports.AirportName"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Give the airport code and airport name corresonding to the city Anthony.",
        "select_candidates": [
            "select airports.AirportCode, airports.AirportName",
            "select distinct airports.AirportCode, airports.AirportName",
            "select airports.AirportCode, airports.AirportName, airports.City",
            "select airports.City, airports.AirportName"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How many airlines do we have?",
        "select_candidates": [
            "select count(*)",
            "select count(distinct airlines.Airline)",
            "select count(distinct airlines.uid)",
            "select count(*), airlines.Airline"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the total number of airlines?",
        "select_candidates": [
            "select count(*)",
            "select count(*), airlines.Airline",
            "select count(distinct airlines.Airline)",
            "select count(distinct airlines.uid)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How many airports do we have?",
        "select_candidates": [
            "select count(*)",
            "select count(distinct airports.AirportName)",
            "select count(*), airports.AirportName",
            "select count (*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Return the number of airports.",
        "select_candidates": [
            "select count(*)",
            "select count(distinct airports.AirportName)",
            "select count(*), airports.AirportName",
            "select count(*), count(*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How many flights do we have?",
        "select_candidates": [
            "select count(*)",
            "select count(distinct flights.FlightNo)",
            "select count(*), flights.FlightNo",
            "select count (*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Return the number of flights.",
        "select_candidates": [
            "select count(*)",
            "select count(*), flights.FlightNo",
            "select count(distinct flights.FlightNo)",
            "select count(*), flights.Airline"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Which airline has abbreviation 'UAL'?",
        "select_candidates": [
            "select airlines.Airline",
            "select distinct airlines.Airline",
            "select airlines.Airline, airlines.Abbreviation",
            "select airlines.Airline, airlines.Airline"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Give the airline with abbreviation 'UAL'.",
        "select_candidates": [
            "select airlines.Airline",
            "select distinct airlines.Airline",
            "select airlines.Airline, airlines.Abbreviation",
            "select airlines.Airline, airlines.uid"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How many airlines are from USA?",
        "select_candidates": [
            "select count(*)",
            "select count(*), airlines.Airline",
            "select count(distinct airlines.Airline)",
            "select count(*), airlines.Country"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Return the number of airlines in the USA.",
        "select_candidates": [
            "select count(*)",
            "select count(*), airlines.Airline",
            "select count(*), airlines.Country",
            "select count(distinct airlines.Airline)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Which city and country is the Alton airport at?",
        "select_candidates": [
            "select airports.City, airports.Country",
            "select distinct airports.City, airports.Country",
            "select airports.City, airports.Country, airports.AirportName",
            "select distinct airports.City, airports.Country, airports.AirportName"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Give the city and country for the Alton airport.",
        "select_candidates": [
            "select airports.City, airports.Country",
            "select distinct airports.City, airports.Country",
            "select airports.City, airports.Country, airports.AirportName",
            "select distinct airports.City, airports.Country, airports.AirportName"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the airport name for airport 'AKO'?",
        "select_candidates": [
            "select airports.AirportName",
            "select airports.AirportName, airports.AirportCode",
            "select distinct airports.AirportName",
            "select airports.AirportName, airports.Country"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Return the name of the airport with code 'AKO'.",
        "select_candidates": [
            "select airports.AirportName",
            "select airports.AirportName, airports.AirportCode",
            "select distinct airports.AirportName",
            "select airports.AirportName, airports.City"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are airport names at City 'Aberdeen'?",
        "select_candidates": [
            "select airports.AirportName",
            "select distinct airports.AirportName",
            "select airports.AirportName, airports.City",
            "select airports.AirportName, airports.AirportCode"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the names of airports in Aberdeen?",
        "select_candidates": [
            "select airports.AirportName",
            "select distinct airports.AirportName",
            "select airports.AirportName, airports.City",
            "select airports.AirportName, airports.City, airports.AirportName"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How many flights depart from 'APG'?",
        "select_candidates": [
            "select count(*)",
            "select count(distinct flights.FlightNo)",
            "select count(*), airports.AirportCode",
            "select count(*), flights.SourceAirport"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Count the number of flights departing from 'APG'.",
        "select_candidates": [
            "select count(*)",
            "select count(distinct flights.FlightNo)",
            "select count(*), airports.AirportCode",
            "select count(*), flights.FlightNo"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How many flights have destination ATO?",
        "select_candidates": [
            "select count(*)",
            "select count(*), airports.AirportCode",
            "select count(distinct flights.FlightNo)",
            "select count(*), flights.SourceAirport"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Count the number of flights into ATO.",
        "select_candidates": [
            "select count(*)",
            "select count(*), airports.AirportCode",
            "select count(distinct flights.FlightNo)",
            "select count(*), sourceairport(ATO)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How many flights depart from City Aberdeen?",
        "select_candidates": [
            "select count(*)",
            "select count(distinct flights.FlightNo)",
            "select count(*), airports.City",
            "select count(*), airports.City, airports.AirportName"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Return the number of flights departing from Aberdeen.",
        "select_candidates": [
            "select count(*)",
            "select count(*), airports.City",
            "select count(distinct flights.FlightNo)",
            "select count(*), airports.City, flights.FlightNo"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How many flights arriving in Aberdeen city?",
        "select_candidates": [
            "select count(*)",
            "select count(distinct flights.FlightNo)",
            "select count(*), airports.City",
            "select count(*), airports.City, airports.AirportName"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Return the number of flights arriving in Aberdeen.",
        "select_candidates": [
            "select count(*)",
            "select count(*), airports.City",
            "select count(distinct flights.FlightNo)",
            "select count(*), airports.City, airports.AirportName"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How many flights depart from City 'Aberdeen' and have destination City 'Ashley'?",
        "select_candidates": [
            "select count(*)",
            "select count(*), airports.City",
            "select count(*), airports.City, airports.AirportName",
            "select count(distinct flights.FlightNo)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How many flights fly from Aberdeen to Ashley?",
        "select_candidates": [
            "select count(*)",
            "select count(*), airports.City",
            "select count(*), airports.City, flights.FlightNo",
            "select count(*), airports.City, airports.AirportName"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How many flights does airline 'JetBlue Airways' have?",
        "select_candidates": [
            "select count(*)",
            "select count(distinct flights.FlightNo)",
            "select count(*), airlines.Airline",
            "select count(*), airlines.Airline, flights.Airline"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Give the number of Jetblue Airways flights.",
        "select_candidates": [
            "select count(*)",
            "select count(*), airlines.Airline",
            "select count(distinct flights.FlightNo)",
            "select count(*), airlines.uid"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How many 'United Airlines' flights go to Airport 'ASY'?",
        "select_candidates": [
            "select count(*)",
            "select count(*), flights.SourceAirport",
            "select count(distinct flights.FlightNo)",
            "select count(*), airports.AirportCode"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Count the number of United Airlines flights arriving in ASY Airport.",
        "select_candidates": [
            "select count(*)",
            "select count(*), airports.AirportCode",
            "select count(*), airlines.Airline",
            "select count(*), flights.FlightNo"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How many 'United Airlines' flights depart from Airport 'AHD'?",
        "select_candidates": [
            "select count(*)",
            "select count(*), airports.AirportCode",
            "select count(distinct flights.FlightNo)",
            "select count(*), sourceairport airports.AirportCode"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Return the number of United Airlines flights leaving from AHD Airport.",
        "select_candidates": [
            "select count(*)",
            "select count(*), airlines.Airline",
            "select count(*), flights.FlightNo",
            "select count(*), airports.AirportName"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How many United Airlines flights go to City 'Aberdeen'?",
        "select_candidates": [
            "select count(*)",
            "select count(*), airlines.Airline",
            "select count(distinct flights.FlightNo)",
            "select count(*), airports.City"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Count the number of United Airlines flights that arrive in Aberdeen.",
        "select_candidates": [
            "select count(*)",
            "select count(*), airports.City",
            "select count(*), airports.City, airports.AirportName",
            "select count(*), airports.City, airports.AirportCode"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Which city has most number of arriving flights?",
        "select_candidates": [
            "select airports.City",
            "select airports.City, count(*)",
            "select airports.City, flights.SourceAirport",
            "select airports.City, count(*), airports.City"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Which city has the most frequent destination airport?",
        "select_candidates": [
            "select airports.City",
            "select airports.City, airports.AirportName",
            "select airports.City, airports.AirportCode",
            "select airports.City, airports.AirportCode, airports.AirportName"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Which city has most number of departing flights?",
        "select_candidates": [
            "select airports.City",
            "select airports.City, count(*)",
            "select airports.City, count(*), airports.City",
            "select airports.City, flights.SourceAirport"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Which city is the most frequent source airport?",
        "select_candidates": [
            "select airports.City",
            "select airports.City, flights.SourceAirport",
            "select airports.City, airports.AirportCode",
            "select airports.City, airports.AirportName"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the code of airport that has the highest number of flights?",
        "select_candidates": [
            "select airports.AirportCode",
            "select airports.AirportCode, count(*)",
            "select airports.AirportCode, airports.AirportName",
            "select airports.AirportCode, count(*), airports.AirportName"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the airport code of the airport with the most flights?",
        "select_candidates": [
            "select airports.AirportCode",
            "select airports.AirportCode, airports.AirportName",
            "select airports.AirportCode, flights.SourceAirport",
            "select airports.AirportCode, flights.FlightNo"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the code of airport that has fewest number of flights?",
        "select_candidates": [
            "select airports.AirportCode",
            "select airports.AirportCode, count(*)",
            "select airports.AirportCode, airports.AirportName",
            "select airports.AirportCode, count(*), airports.AirportName"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Give the code of the airport with the least flights.",
        "select_candidates": [
            "select airports.AirportCode",
            "select airports.AirportCode, airports.AirportName",
            "select airports.AirportCode, count(*)",
            "select airports.AirportCode, airports.AirportName, count(*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Which airline has most number of flights?",
        "select_candidates": [
            "select airlines.Airline",
            "select airlines.Airline, count(*)",
            "select airlines.Airline, count(*), flights.Airline",
            "select airlines.Airline, count(*), airlines.uid"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What airline serves the most flights?",
        "select_candidates": [
            "select airlines.Airline",
            "select airlines.Airline, flights.FlightNo",
            "select airlines.Airline, count(*)",
            "select airlines.Airline, flights.FlightNo, airlines.uid"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Find the abbreviation and country of the airline that has fewest number of flights?",
        "select_candidates": [
            "select airlines.Abbreviation, airlines.Country",
            "select airlines.Airline, airlines.Abbreviation, airlines.Country",
            "select airlines.Country, airlines.Abbreviation",
            "select airlines.Abbreviation, airlines.Country, count(*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the abbreviation of the airilne has the fewest flights and what country is it in?",
        "select_candidates": [
            "select airlines.Abbreviation, airports.Country",
            "select airlines.Abbreviation, airlines.Country",
            "select airlines.Abbreviation, airports.Country, min(flights.FlightNo)",
            "select airlines.Abbreviation, airports.Country, airlines.Abbreviation"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are airlines that have some flight departing from airport 'AHD'?",
        "select_candidates": [
            "select airlines.Airline",
            "select distinct airlines.Airline",
            "select airlines.Airline, flights.FlightNo",
            "select distinct airlines.Airline, flights.FlightNo"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Which airlines have a flight with source airport AHD?",
        "select_candidates": [
            "select airlines.Airline",
            "select distinct airlines.Airline",
            "select airlines.Airline, flights.FlightNo",
            "select distinct airlines.Airline, flights.FlightNo"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are airlines that have flights arriving at airport 'AHD'?",
        "select_candidates": [
            "select airlines.Airline",
            "select distinct airlines.Airline",
            "select airlines.Airline, flights.FlightNo",
            "select distinct airlines.Airline, flights.FlightNo"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Which airlines have a flight with destination airport AHD?",
        "select_candidates": [
            "select airlines.Airline",
            "select distinct airlines.Airline",
            "select airlines.Airline, flights.FlightNo",
            "select distinct airlines.Airline, flights.FlightNo"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Find all airlines that have flights from both airports 'APG' and 'CVO'.",
        "select_candidates": [
            "select airlines.Airline",
            "select airlines.Airline, airports.AirportName",
            "select airlines.Airline, airports.AirportCode",
            "select distinct airlines.Airline"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ]
    },
    {
        "question": "Which airlines have departing flights from both APG and CVO airports?",
        "select_candidates": [
            "select airlines.Airline",
            "select airlines.Airline, flights.FlightNo",
            "select distinct airlines.Airline",
            "select airlines.Airline, airports.AirportName"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Find all airlines that have flights from airport 'CVO' but not from 'APG'.",
        "select_candidates": [
            "select airlines.Airline",
            "select distinct airlines.Airline",
            "select airlines.Airline, flights.FlightNo",
            "select airlines.Airline, airports.AirportName"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Which airlines have departures from CVO but not from APG airports?",
        "select_candidates": [
            "select airlines.Airline",
            "select distinct airlines.Airline",
            "select airlines.Airline, flights.FlightNo",
            "select airlines.Airline, airports.AirportCode"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Find all airlines that have at least 10 flights.",
        "select_candidates": [
            "select airlines.Airline",
            "select airlines.Airline, count(*)",
            "select airlines.Airline, count(*), flights.FlightNo",
            "select distinct airlines.Airline"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Which airlines have at least 10 flights?",
        "select_candidates": [
            "select airlines.Airline",
            "select airlines.Airline, count(*)",
            "select airlines.Airline, count(*), flights.Airline",
            "select airlines.Airline, count(*), flights.FlightNo"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Find all airlines that have fewer than 200 flights.",
        "select_candidates": [
            "select airlines.Airline",
            "select airlines.Airline, count(*)",
            "select distinct airlines.Airline",
            "select airlines.Airline, count(*), flights.FlightNo"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-EXCEPT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Which airlines have less than 200 flights?",
        "select_candidates": [
            "select airlines.Airline",
            "select airlines.Airline, count(*)",
            "select airlines.Airline, count(*), flights.Airline",
            "select airlines.Airline, count(*), flights.FlightNo"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-EXCEPT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are flight numbers of Airline \"United Airlines\"?",
        "select_candidates": [
            "select flights.FlightNo",
            "select distinct flights.FlightNo",
            "select flights.FlightNo, airlines.Airline",
            "select flights.Airline, flights.FlightNo"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Which flight numbers correspond to United Airlines flights?",
        "select_candidates": [
            "select flights.FlightNo",
            "select distinct flights.FlightNo",
            "select flights.FlightNo, airlines.Airline",
            "select distinct flights.FlightNo, airlines.Airline"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are flight numbers of flights departing from Airport \"APG\"?",
        "select_candidates": [
            "select flights.FlightNo",
            "select distinct flights.FlightNo",
            "select flights.FlightNo, airports.AirportCode",
            "select flights.FlightNo, airports.AirportName"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Give the flight numbers of flights leaving from APG.",
        "select_candidates": [
            "select flights.FlightNo",
            "select distinct flights.FlightNo",
            "select flights.FlightNo, airports.AirportCode",
            "select flightnum(flights.FlightNo)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are flight numbers of flights arriving at Airport \"APG\"?",
        "select_candidates": [
            "select flights.FlightNo",
            "select flights.FlightNo, airports.AirportCode",
            "select distinct flights.FlightNo",
            "select flights.FlightNo, airports.AirportName"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Give the flight numbers of flights landing at APG.",
        "select_candidates": [
            "select flights.FlightNo",
            "select distinct flights.FlightNo",
            "select flights.FlightNo, airports.AirportCode",
            "select flights.FlightNo, sourceairport(APG)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are flight numbers of flights departing from City \"Aberdeen \"?",
        "select_candidates": [
            "select flights.FlightNo",
            "select flights.FlightNo, airports.City",
            "select distinct flights.FlightNo",
            "select airports.City, flights.FlightNo"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Give the flight numbers of flights leaving from Aberdeen.",
        "select_candidates": [
            "select flights.FlightNo",
            "select distinct flights.FlightNo",
            "select flights.FlightNo, airports.City",
            "select flights.FlightNo, airports.City, airports.AirportName"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are flight numbers of flights arriving at City \"Aberdeen\"?",
        "select_candidates": [
            "select flights.FlightNo",
            "select flights.FlightNo, airports.City",
            "select distinct flights.FlightNo",
            "select flights.FlightNo, airports.City, airports.AirportName"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Give the flight numbers of flights arriving in Aberdeen.",
        "select_candidates": [
            "select flights.FlightNo",
            "select distinct flights.FlightNo",
            "select flights.FlightNo, airports.City",
            "select flights.FlightNo, airports.City, airports.AirportName"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Find the number of flights landing in the city of Aberdeen or Abilene.",
        "select_candidates": [
            "select count(*)",
            "select count(*), airports.City",
            "select count(*), airports.City, airports.City",
            "select count(distinct flights.FlightNo)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How many flights land in Aberdeen or Abilene?",
        "select_candidates": [
            "select count(*)",
            "select count(*), airports.City",
            "select count(distinct flights.FlightNo)",
            "select count(*), airports.City, airports.AirportCode"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Find the name of airports which do not have any flight in and out.",
        "select_candidates": [
            "select airports.AirportName",
            "select airports.AirportName, airports.AirportCode",
            "select distinct airports.AirportName",
            "select airports.AirportName, airports.Country"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Which airports do not have departing or arriving flights?",
        "select_candidates": [
            "select airports.AirportName",
            "select distinct airports.AirportName",
            "select airports.AirportName, airports.AirportCode",
            "select airports.AirportName, airports.Country"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            1.0
        ]
    },
    {
        "question": "How many employees are there?",
        "select_candidates": [
            "select count(*)",
            "select count(distinct employee.Employee_ID)",
            "select count (*)",
            "select count(*), employee.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Count the number of employees",
        "select_candidates": [
            "select count(*)",
            "select count(distinct employee.Employee_ID)",
            "select count (*)",
            "select count(*), employee.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Sort employee names by their age in ascending order.",
        "select_candidates": [
            "select employee.Name",
            "select employee.Name, employee.Age",
            "select employee.Employee_ID, employee.Name",
            "select distinct employee.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "List the names of employees and sort in ascending order of age.",
        "select_candidates": [
            "select employee.Name",
            "select employee.Name, employee.Age",
            "select employee.Employee_ID, employee.Name",
            "select distinct employee.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the number of employees from each city?",
        "select_candidates": [
            "select employee.City, count(*)",
            "select count(*), employee.City",
            "select sum(employee.City), employee.City",
            "select number(*), employee.City"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Count the number of employees for each city.",
        "select_candidates": [
            "select count(*), employee.City",
            "select employee.City, count(*)",
            "select distinct employee.City, count(*)",
            "select number(*), employee.City"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Which cities do more than one employee under age 30 come from?",
        "select_candidates": [
            "select employee.City",
            "select distinct employee.City",
            "select count(distinct employee.City)",
            "select employee.City, count(*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY-HAVING",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Find the cities that have more than one employee under age 30.",
        "select_candidates": [
            "select employee.City",
            "select distinct employee.City",
            "select employee.City, count(*)",
            "select distinct employee.City, count(*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY-HAVING",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Find the number of shops in each location.",
        "select_candidates": [
            "select count(*), shop.Location",
            "select shop.Location, count(*)",
            "select count(distinct shop.Location), shop.Location",
            "select counts(*), shop.Location"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How many shops are there in each location?",
        "select_candidates": [
            "select count(*), shop.Location",
            "select shop.Location, count(*)",
            "select count(distinct shop.Location), shop.Location",
            "select distinct shop.Location, count(*)"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Find the manager name and district of the shop whose number of products is the largest.",
        "select_candidates": [
            "select shop.Manager_name, shop.District",
            "select shop.Manager_name, shop.District, shop.Number_products",
            "select shop.Manager_name, shop.District, max(shop.Number_products)",
            "select distinct shop.Manager_name, shop.District"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the manager name and district of the shop that sells the largest number of products?",
        "select_candidates": [
            "select shop.Manager_name, shop.District",
            "select shop.Manager_name, shop.District, shop.Number_products",
            "select shop.Manager_name, shop.District, max(shop.Number_products)",
            "select distinct shop.Manager_name, shop.District"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "find the minimum and maximum number of products of all stores.",
        "select_candidates": [
            "select min(shop.Number_products), max(shop.Number_products)",
            "select min(shop.Number_products), max(shop.Number_products), shop.Name",
            "select shop.Number_products, min(shop.Number_products), max(shop.Number_products)",
            "select max(shop.Number_products), min(shop.Number_products)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            1.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the minimum and maximum number of products across all the shops?",
        "select_candidates": [
            "select min(shop.Number_products), max(shop.Number_products)",
            "select shop.Number_products, min(shop.Number_products), max(shop.Number_products)",
            "select min(shop.Number_products), max(shop.Number_products), shop.Name",
            "select min(shop.Number_products), max(shop.Number_products), shop.Shop_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Return the name, location and district of all shops in descending order of number of products.",
        "select_candidates": [
            "select shop.Name, shop.Location, shop.District",
            "select shop.Shop_ID, shop.Name, shop.Location, shop.District",
            "select shop.Name, shop.District, shop.Location",
            "select distinct shop.Name, shop.Location, shop.District"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Sort all the shops by number products in descending order, and return the name, location and district of each shop.",
        "select_candidates": [
            "select shop.Name, shop.Location, shop.District",
            "select shop.Name, shop.District, shop.Location",
            "select shop.Shop_ID, shop.Name, shop.Location, shop.District",
            "select distinct shop.Name, shop.Location, shop.District"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Find the names of stores whose number products is more than the average number of products.",
        "select_candidates": [
            "select shop.Name",
            "select distinct shop.Name",
            "select shop.Name, shop.Number_products",
            "select shop.Name, shop.Location"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Which shops' number products is above the average? Give me the shop names.",
        "select_candidates": [
            "select shop.Name",
            "select distinct shop.Name",
            "select shop.Name, shop.Number_products",
            "select shop.Name, shop.Shop_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "find the name of employee who was awarded the most times in the evaluation.",
        "select_candidates": [
            "select employee.Name",
            "select employee.Name, evaluation.Year_awarded",
            "select employee.Name, evaluation.Year_awarded, evaluation.Bonus",
            "select employee.Name, evaluation.Year_awarded, count(*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Which employee received the most awards in evaluations? Give me the employee name.",
        "select_candidates": [
            "select employee.Name",
            "select employee.Name, evaluation.Year_awarded",
            "select employee.Name, evaluation.Year_awarded, max(evaluation.Year_awarded)",
            "select employee.Employee_ID, employee.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Find the name of the employee who got the highest one time bonus.",
        "select_candidates": [
            "select employee.Name",
            "select employee.Name, evaluation.Bonus",
            "select employee.Name, evaluation.Bonus, max(evaluation.Bonus)",
            "select employee.Name, evaluation.Year_awarded, max(evaluation.Bonus)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-UNION-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Which employee received the biggest bonus? Give me the employee name.",
        "select_candidates": [
            "select employee.Name",
            "select employee.Name, evaluation.Bonus",
            "select employee.Employee_ID, employee.Name",
            "select employee.Name, evaluation.Bonus, max(evaluation.Bonus)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Find the names of employees who never won any award in the evaluation.",
        "select_candidates": [
            "select employee.Name",
            "select distinct employee.Name",
            "select employee.Name, evaluation.Year_awarded",
            "select employee.Name, employee.Employee_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            1.0
        ]
    },
    {
        "question": "What are the names of the employees who never received any evaluation?",
        "select_candidates": [
            "select employee.Name",
            "select employee.Name, employee.Employee_ID",
            "select employee.Name, employee.City",
            "select employee.Employee_ID, employee.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            1.0
        ]
    },
    {
        "question": "What is the name of the shop that is hiring the largest number of employees?",
        "select_candidates": [
            "select shop.Name",
            "select shop.Name, hiring.Employee_ID",
            "select shop.Name, hiring.Shop_ID",
            "select shop.Name, shop.Shop_ID, shop.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Which shop has the most employees? Give me the shop name.",
        "select_candidates": [
            "select shop.Name",
            "select shop.Name, shop.Shop_ID",
            "select shop.Name, employee.Name",
            "select shop.Name, shop.Shop_ID, shop.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Find the name of the shops that do not hire any employee.",
        "select_candidates": [
            "select shop.Name",
            "select shop.Name, shop.Shop_ID",
            "select distinct shop.Name",
            "select shop.Shop_ID, shop.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Which shops run with no employees? Find the shop names",
        "select_candidates": [
            "select shop.Name",
            "select shop.Name, shop.Shop_ID",
            "select distinct shop.Name",
            "select shop.Name, employee.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Find the number of employees hired in each shop; show the shop name as well.",
        "select_candidates": [
            "select count(*), shop.Name",
            "select shop.Name, count(*)",
            "select count(distinct hiring.Employee_ID), shop.Name",
            "select shop.Name, count(*), hiring.Shop_ID"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "For each shop, return the number of employees working there and the name of the shop.",
        "select_candidates": [
            "select count(*), shop.Name",
            "select shop.Name, count(*)",
            "select shop.Shop_ID, count(*), shop.Name",
            "select count(*), shop.Name, hiring.Employee_ID"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is total bonus given in all evaluations?",
        "select_candidates": [
            "select sum(evaluation.Bonus)",
            "select evaluation.Bonus, sum(evaluation.Bonus)",
            "select sum(evaluation.Bonus), evaluation.Year_awarded",
            "select evaluation.Bonus sum(evaluation.Bonus)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Find the total amount of bonus given in all the evaluations.",
        "select_candidates": [
            "select sum(evaluation.Bonus)",
            "select sum(evaluation.Bonus), evaluation.Year_awarded",
            "select avg(evaluation.Bonus)",
            "select sum(evaluation.Bonus), evaluation.Bonus"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Give me all the information about hiring.",
        "select_candidates": [
            "select *",
            "select hiring.Employee_ID, hiring.Start_from",
            "select hiring.Is_full_time",
            "select hiring.Is_full_time, t2.c4"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is all the information about hiring?",
        "select_candidates": [
            "select *",
            "select hiring.Is_full_time",
            "select hiring.Employee_ID",
            "select sum(t2.c)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Which district has both stores with less than 3000 products and stores with more than 10000 products?",
        "select_candidates": [
            "select shop.District",
            "select shop.District, shop.District",
            "select shop.District, shop.District, shop.Number_products",
            "select shop.District, shop.District, shop.District"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Find the districts in which there are both shops selling less than 3000 products and shops selling more than 10000 products.",
        "select_candidates": [
            "select shop.District",
            "select distinct shop.District",
            "select shop.District, shop.District",
            "select shop.District, shop.Number_products"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How many different store locations are there?",
        "select_candidates": [
            "select count(distinct shop.Location)",
            "select count (distinct shop.Location)",
            "select count(distinct shop.Location), count(distinct shop.Location)",
            "select count(distinct shop.Location), count(distinct shop.Shop_ID)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Count the number of distinct store locations.",
        "select_candidates": [
            "select count(distinct shop.Location)",
            "select count (distinct shop.Location)",
            "select count(distinct shop.Location), count(distinct shop.Location)",
            "select count (distinct shop.Location), count(distinct shop.Location)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How many documents do we have?",
        "select_candidates": [
            "select count(*)",
            "select count(distinct Documents.Document_ID)",
            "select count(distinct Documents.Document_Name)",
            "select count(*), Documents.Document_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Count the number of documents.",
        "select_candidates": [
            "select count(*)",
            "select count(distinct Documents.Document_ID)",
            "select count(distinct Documents.Document_Name)",
            "select count(*), Documents.Document_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "List document IDs, document names, and document descriptions for all documents.",
        "select_candidates": [
            "select Documents.Document_ID, Documents.Document_Name, Documents.Document_Description",
            "select distinct Documents.Document_ID, Documents.Document_Name, Documents.Document_Description",
            "select Documents.Document_ID, Documents.Document_Description, Documents.Document_Name",
            "select Documents.Document_ID, Documents.Template_ID, Documents.Document_Description"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the ids, names, and descriptions for all documents?",
        "select_candidates": [
            "select Documents.Document_ID, Documents.Document_Name, Documents.Document_Description",
            "select Documents.Document_ID, Documents.Document_Description, Documents.Document_Name",
            "select distinct Documents.Document_ID, Documents.Document_Name, Documents.Document_Description",
            "select Documents.Document_ID, Documents.Template_ID, Documents.Document_Description"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the document name and template id for document with description with the letter 'w' in it?",
        "select_candidates": [
            "select Documents.Document_Name, Documents.Template_ID",
            "select distinct Documents.Document_Name, Documents.Template_ID",
            "select Documents.Document_Name, Documents.Template_ID, Documents.Document_Description",
            "select Documents.Template_ID, Documents.Document_Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            1.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Return the names and template ids for documents that contain the letter w in their description.",
        "select_candidates": [
            "select Documents.Document_Name, Documents.Template_ID",
            "select distinct Documents.Document_Name, Documents.Template_ID",
            "select Documents.Document_Name, Documents.Template_ID, Documents.Document_Description",
            "select Documents.Template_ID, Documents.Document_Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            1.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the document id, template id and description for document named \"Robbin CV\"?",
        "select_candidates": [
            "select Documents.Document_ID, Documents.Template_ID, Documents.Document_Description",
            "select distinct Documents.Document_ID, Documents.Template_ID, Documents.Document_Description",
            "select document Documents.Document_ID, Documents.Template_ID, Documents.Document_Description",
            "select Templates.Template_ID, Documents.Template_ID, Documents.Document_Description"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Return the document id, template id, and description for the document with the name Robbin CV.",
        "select_candidates": [
            "select Documents.Document_ID, Documents.Template_ID, Documents.Document_Description",
            "select distinct Documents.Document_ID, Documents.Template_ID, Documents.Document_Description",
            "select document Documents.Document_ID, Documents.Template_ID, Documents.Document_Description",
            "select Templates.Template_ID, Documents.Template_ID, Documents.Document_Description"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How many different templates do all document use?",
        "select_candidates": [
            "select count(distinct Documents.Template_ID)",
            "select count(distinct Templates.Template_Type_Code)",
            "select count(distinct Templates.Template_ID)",
            "select count (distinct Documents.Template_ID)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Count the number of different templates used for documents.",
        "select_candidates": [
            "select count(distinct Documents.Template_ID)",
            "select count (distinct Documents.Template_ID)",
            "select count(distinct Documents.Template_ID), count(distinct Documents.Template_ID)",
            "select count(distinct Documents.Template_ID), count(distinct Documents.Document_ID)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How many documents are using the template with type code 'PPT'?",
        "select_candidates": [
            "select count(*)",
            "select count(distinct Documents.Document_ID)",
            "select count(distinct Documents.Template_ID)",
            "select count(*), Templates.Template_Type_Code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Count the number of documents that use the PPT template type.",
        "select_candidates": [
            "select count(*)",
            "select count(distinct Documents.Document_ID)",
            "select count(distinct Documents.Template_ID)",
            "select count(distinct Templates.Template_Type_Code)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Show all template ids and number of documents using each template.",
        "select_candidates": [
            "select Documents.Template_ID, count(*)",
            "select count(*), Documents.Template_ID",
            "select Documents.Template_ID, count(distinct t2.c)",
            "select Templates.Template_ID, count(*)"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are all different template ids used for documents, and how many times were each of them used?",
        "select_candidates": [
            "select count(*), Documents.Template_ID",
            "select Documents.Template_ID, count(*)",
            "select count (*), Documents.Template_ID",
            "select distinct Documents.Template_ID, count(*)"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the id and type code for the template used by the most documents?",
        "select_candidates": [
            "select Templates.Template_ID, Templates.Template_Type_Code",
            "select Documents.Template_ID, Templates.Template_Type_Code",
            "select Templates.Template_ID, Templates.Template_Type_Code, Documents.Template_ID",
            "select Ref_Template_Types.Template_Type_Code, Templates.Template_Type_Code"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Return the id and type code of the template that is used for the greatest number of documents.",
        "select_candidates": [
            "select Templates.Template_ID, Templates.Template_Type_Code",
            "select Documents.Template_ID, Templates.Template_Type_Code",
            "select Templates.Template_ID, Templates.Template_Type_Code, count(*)",
            "select Templates.Template_ID, Templates.Template_Type_Code, Documents.Template_ID"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Show ids for all templates that are used by more than one document.",
        "select_candidates": [
            "select Templates.Template_ID",
            "select Documents.Template_ID",
            "select Templates.Template_ID, Documents.Template_ID",
            "select t1, Documents.Template_ID"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the template ids of any templates used in more than a single document?",
        "select_candidates": [
            "select Documents.Template_ID",
            "select Templates.Template_ID",
            "select Templates.Template_ID, Documents.Template_ID",
            "select Documents.Template_ID, Documents.Document_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Show ids for all templates not used by any document.",
        "select_candidates": [
            "select Templates.Template_ID",
            "select Templates.Template_ID, Templates.Template_ID",
            "select distinct Templates.Template_ID",
            "select Templates.Template_ID, Templates.Version_Number"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the ids for templates that are not used in any documents?",
        "select_candidates": [
            "select Templates.Template_ID",
            "select Templates.Template_ID, Templates.Template_ID",
            "select Templates.Template_ID, Templates.Template_Type_Code",
            "select Templates.Template_ID, Templates.Version_Number"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How many templates do we have?",
        "select_candidates": [
            "select count(*)",
            "select count(distinct Templates.Template_ID)",
            "select count(*), Templates.Template_ID",
            "select count (*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Count the number of templates.",
        "select_candidates": [
            "select count(*)",
            "select count(distinct Templates.Template_ID)",
            "select count(*), Templates.Template_ID",
            "select count(*), count(*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Show template ids, version numbers, and template type codes for all templates.",
        "select_candidates": [
            "select Templates.Template_ID, Templates.Version_Number, Templates.Template_Type_Code",
            "select distinct Templates.Template_ID, Templates.Version_Number, Templates.Template_Type_Code",
            "select Templates.Template_ID, Templates.Template_ID, Templates.Version_Number, Templates.Template_Type_Code",
            "select Templates.Template_ID, Templates.Template_Type_Code, Templates.Version_Number"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            1.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the ids, version numbers, and type codes for each template?",
        "select_candidates": [
            "select Templates.Template_ID, Templates.Version_Number, Templates.Template_Type_Code",
            "select distinct Templates.Template_ID, Templates.Version_Number, Templates.Template_Type_Code",
            "select Templates.Template_ID, Templates.Template_ID, Templates.Version_Number, Templates.Template_Type_Code",
            "select Templates.Template_ID, Templates.Template_Type_Code, Templates.Version_Number"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            1.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Show all distinct template type codes for all templates.",
        "select_candidates": [
            "select distinct Templates.Template_Type_Code",
            "select distinct(Templates.Template_Type_Code)",
            "select distinct Templates.Template_Type_Code, count(distinct Templates.Template_Type_Code)",
            "select count(distinct Templates.Template_Type_Code)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the different template type codes?",
        "select_candidates": [
            "select distinct Templates.Template_Type_Code",
            "select count(distinct Templates.Template_Type_Code)",
            "select distinct Templates.Template_Type_Code, count(distinct Templates.Template_Type_Code)",
            "select distinct(Templates.Template_Type_Code)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the ids of templates with template type code PP or PPT?",
        "select_candidates": [
            "select Templates.Template_ID",
            "select distinct Templates.Template_ID",
            "select Templates.Template_ID, Templates.Template_Type_Code",
            "select Templates.Template_ID, Templates.Template_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Return the ids of templates that have the code PP or PPT.",
        "select_candidates": [
            "select Templates.Template_ID",
            "select distinct Templates.Template_ID",
            "select Templates.Template_ID, Templates.Template_Type_Code",
            "select Templates.Template_ID, Templates.Template_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How many templates have template type code CV?",
        "select_candidates": [
            "select count(*)",
            "select count(distinct Templates.Template_ID)",
            "select count(distinct Templates.Template_Type_Code)",
            "select count(distinct Templates.Version_Number)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Count the number of templates of the type CV.",
        "select_candidates": [
            "select count(*)",
            "select count(distinct Templates.Template_ID)",
            "select count(distinct Templates.Template_Type_Code)",
            "select count(*), Templates.Template_Type_Code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the version number and template type code for the template with version number later than 5?",
        "select_candidates": [
            "select Templates.Version_Number, Templates.Template_Type_Code",
            "select distinct Templates.Version_Number, Templates.Template_Type_Code",
            "select Templates.Template_ID, Templates.Version_Number, Templates.Template_Type_Code",
            "select Templates.Template_ID, Templates.Template_Type_Code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Return the version numbers and template type codes of templates with a version number greater than 5.",
        "select_candidates": [
            "select Templates.Version_Number, Templates.Template_Type_Code",
            "select distinct Templates.Version_Number, Templates.Template_Type_Code",
            "select Templates.Template_ID, Templates.Template_Type_Code",
            "select distinct(Templates.Version_Number), Templates.Template_Type_Code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Show all template type codes and number of templates for each.",
        "select_candidates": [
            "select Templates.Template_Type_Code, count(*)",
            "select distinct Templates.Template_Type_Code, count(*)",
            "select count(*), Templates.Template_Type_Code",
            "select Templates.Date_Effective_From, count(*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the different template type codes, and how many templates correspond to each?",
        "select_candidates": [
            "select Templates.Template_Type_Code, count(*)",
            "select count(*), Templates.Template_Type_Code",
            "select distinct Templates.Template_Type_Code, count(*)",
            "select Templates.Date_Effective_From, count(*)"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Which template type code has most number of templates?",
        "select_candidates": [
            "select Templates.Template_Type_Code",
            "select Templates.Template_Type_Code, count(*)",
            "select t1, Templates.Template_Type_Code",
            "select distinct Templates.Template_Type_Code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Return the type code of the template type that the most templates belong to.",
        "select_candidates": [
            "select Templates.Template_Type_Code",
            "select Templates.Template_Type_Code, Templates.Date_Effective_From",
            "select Templates.Template_Type_Code, count(*)",
            "select Templates.Template_Type_Code, Ref_Template_Types.Template_Type_Code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Show all template type codes with less than three templates.",
        "select_candidates": [
            "select Templates.Template_Type_Code",
            "select distinct Templates.Template_Type_Code",
            "select Templates.Template_Type_Code, count(*)",
            "select distinct Templates.Template_Type_Code, count(*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the codes of template types that have fewer than 3 templates?",
        "select_candidates": [
            "select Templates.Template_Type_Code",
            "select distinct Templates.Template_Type_Code",
            "select Templates.Template_Type_Code, count(*)",
            "select Templates.Template_Type_Code, count(distinct Templates.Template_Type_Code)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What the smallest version number and its template type code?",
        "select_candidates": [
            "select min(Templates.Version_Number), Templates.Template_Type_Code",
            "select min(Templates.Version_Number), min(Templates.Template_Type_Code)",
            "select Templates.Version_Number, Templates.Template_Type_Code",
            "select max(Templates.Version_Number), Templates.Template_Type_Code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ]
    },
    {
        "question": "Return the lowest version number, along with its corresponding template type code.",
        "select_candidates": [
            "select min(Templates.Version_Number), Templates.Template_Type_Code",
            "select Templates.Version_Number, Templates.Template_Type_Code",
            "select min(Templates.Version_Number), min(Templates.Template_Type_Code)",
            "select minimum(Templates.Version_Number), Templates.Template_Type_Code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ]
    },
    {
        "question": "What is the template type code of the template used by document with the name \"Data base\"?",
        "select_candidates": [
            "select Templates.Template_Type_Code",
            "select distinct Templates.Template_Type_Code",
            "select Templates.Template_Type_Code, Documents.Document_Name",
            "select Templates.Template_Type_Code, Templates.Template_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Return the template type code of the template that is used by a document named Data base.",
        "select_candidates": [
            "select Templates.Template_Type_Code",
            "select distinct Templates.Template_Type_Code",
            "select Templates.Template_Type_Code, Documents.Document_Name",
            "select Templates.Template_Type_Code, Templates.Template_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Show all document names using templates with template type code BK.",
        "select_candidates": [
            "select Documents.Document_Name",
            "select distinct Documents.Document_Name",
            "select Documents.Document_Name, Templates.Template_ID",
            "select Documents.Document_Name, Templates.Template_Type_Code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the names of documents that use templates with the code BK?",
        "select_candidates": [
            "select Documents.Document_Name",
            "select distinct Documents.Document_Name",
            "select Documents.Document_Name, Templates.Template_Type_Code",
            "select Documents.Document_Name, Templates.Template_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Show all template type codes and the number of documents using each type.",
        "select_candidates": [
            "select Templates.Template_Type_Code, count(*)",
            "select distinct Templates.Template_Type_Code, count(*)",
            "select Templates.Template_Type_Code, count(*),",
            "select count(*), Templates.Template_Type_Code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            1.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the different template type codes, and how many documents use each type?",
        "select_candidates": [
            "select Templates.Template_Type_Code, count(*)",
            "select count(*), Templates.Template_Type_Code",
            "select distinct Templates.Template_Type_Code, count(*)",
            "select Templates.Template_Type_Code, count(*),"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Which template type code is used by most number of documents?",
        "select_candidates": [
            "select Templates.Template_Type_Code",
            "select Templates.Template_Type_Code, count(*)",
            "select Templates.Template_Type_Code, Documents.Template_ID",
            "select distinct Templates.Template_Type_Code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Return the code of the template type that is most commonly used in documents.",
        "select_candidates": [
            "select Templates.Template_Type_Code",
            "select Templates.Template_Type_Code, Templates.Date_Effective_From",
            "select Templates.Template_Type_Code, Documents.Template_ID",
            "select distinct Templates.Template_Type_Code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Show all template type codes that are not used by any document.",
        "select_candidates": [
            "select Templates.Template_Type_Code",
            "select distinct Templates.Template_Type_Code",
            "select Templates.Template_Type_Code, Templates.Date_Effective_From",
            "select Templates.Template_Type_Code, Templates.Version_Number"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the codes of template types that are not used for any document?",
        "select_candidates": [
            "select Templates.Template_Type_Code",
            "select distinct Templates.Template_Type_Code",
            "select Templates.Template_Type_Code, Ref_Template_Types.Template_Type_Code",
            "select Templates.Template_Type_Code, Templates.Template_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Show all template type codes and descriptions.",
        "select_candidates": [
            "select Ref_Template_Types.Template_Type_Code, Ref_Template_Types.Template_Type_Description",
            "select distinct Ref_Template_Types.Template_Type_Code, Ref_Template_Types.Template_Type_Description",
            "select Templates.Template_Type_Code, Ref_Template_Types.Template_Type_Description",
            "select Documents.Document_Name, Ref_Template_Types.Template_Type_Description"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the type codes and descriptions for all template types?",
        "select_candidates": [
            "select Ref_Template_Types.Template_Type_Code, Ref_Template_Types.Template_Type_Description",
            "select distinct Ref_Template_Types.Template_Type_Code, Ref_Template_Types.Template_Type_Description",
            "select Templates.Template_Type_Code, Ref_Template_Types.Template_Type_Description",
            "select Documents.Document_Name, Ref_Template_Types.Template_Type_Description"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the template type descriptions for template type code \"AD\".",
        "select_candidates": [
            "select Ref_Template_Types.Template_Type_Description",
            "select distinct Ref_Template_Types.Template_Type_Description",
            "select Ref_Template_Types.Template_Type_Code, Ref_Template_Types.Template_Type_Description",
            "select Ref_Template_Types.Template_Type_Code_description"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Return the template type description of the template type with the code AD.",
        "select_candidates": [
            "select Ref_Template_Types.Template_Type_Description",
            "select Ref_Template_Types.Template_Type_Code, Ref_Template_Types.Template_Type_Description",
            "select Ref_Template_Types.Template_Type_Description, Ref_Template_Types.Template_Type_Code",
            "select Ref_Template_Types.Template_Type_Code, Ref_Template_Types.Template_Type_Code, Ref_Template_Types.Template_Type_Description"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the template type code for template type description \"Book\".",
        "select_candidates": [
            "select Ref_Template_Types.Template_Type_Code",
            "select Templates.Template_Type_Code",
            "select Ref_Template_Types.Template_Type_Code, Ref_Template_Types.Template_Type_Description",
            "select distinct Ref_Template_Types.Template_Type_Code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Return the type code of the template type with the description \"Book\".",
        "select_candidates": [
            "select Ref_Template_Types.Template_Type_Code",
            "select Templates.Template_Type_Code",
            "select distinct Ref_Template_Types.Template_Type_Code",
            "select Ref_Template_Types.Template_Type_Code, Ref_Template_Types.Template_Type_Description"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the distinct template type descriptions for the templates ever used by any document?",
        "select_candidates": [
            "select distinct Ref_Template_Types.Template_Type_Description",
            "select distinct Ref_Template_Types.Template_Type_Description, Ref_Template_Types.Template_Type_Code",
            "select distinct Ref_Template_Types.Template_Type_Description, Templates.Template_Type_Code",
            "select distinct(Ref_Template_Types.Template_Type_Description)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Return the different descriptions for templates that have been used in a document.",
        "select_candidates": [
            "select distinct Ref_Template_Types.Template_Type_Description",
            "select distinct Ref_Template_Types.Template_Type_Description, Ref_Template_Types.Template_Type_Description",
            "select distinct(Ref_Template_Types.Template_Type_Description)",
            "select distinct Ref_Template_Types.Template_Type_Description, t0.c2"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the template ids with template type description \"Presentation\".",
        "select_candidates": [
            "select Templates.Template_ID",
            "select Templates.Template_ID, Ref_Template_Types.Template_Type_Description",
            "select Templates.Template_ID, Ref_Template_Types.Template_Type_Code",
            "select distinct Templates.Template_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Return the ids corresponding to templates with the description 'Presentation'.",
        "select_candidates": [
            "select Templates.Template_ID",
            "select Templates.Template_ID, Ref_Template_Types.Template_Type_Description",
            "select distinct Templates.Template_ID",
            "select Templates.Template_ID, Ref_Template_Types.Template_Type_Code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How many paragraphs in total?",
        "select_candidates": [
            "select count(*)",
            "select count(distinct Paragraphs.Paragraph_ID)",
            "select count(distinct Paragraphs.Paragraph_Text)",
            "select sum(Paragraphs.Paragraph_Text)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Count the number of paragraphs.",
        "select_candidates": [
            "select count(*)",
            "select count(distinct Paragraphs.Paragraph_ID)",
            "select count(distinct Paragraphs.Paragraph_Text)",
            "select count(distinct Paragraphs.Document_ID)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How many paragraphs for the document with name 'Summer Show'?",
        "select_candidates": [
            "select count(*)",
            "select count(distinct Paragraphs.Paragraph_Text)",
            "select count(*), Documents.Document_Name",
            "select count (distinct Paragraphs.Paragraph_Text)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Count the number of paragraphs in the document named 'Summer Show'.",
        "select_candidates": [
            "select count(*)",
            "select count(distinct Paragraphs.Paragraph_Text)",
            "select count (distinct Paragraphs.Paragraph_Text)",
            "select count(distinct Paragraphs.Paragraph_ID)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Show paragraph details for paragraph with text 'Korea '.",
        "select_candidates": [
            "select Paragraphs.Other_Details",
            "select Paragraphs.Other_Details, Paragraphs.Paragraph_Text",
            "select distinct Paragraphs.Other_Details",
            "select Paragraphs.Paragraph_Text, Paragraphs.Other_Details"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the details for the paragraph that includes the text 'Korea '?",
        "select_candidates": [
            "select Paragraphs.Other_Details",
            "select distinct Paragraphs.Other_Details",
            "select Paragraphs.Other_Details, Paragraphs.Paragraph_Text",
            "select Paragraphs.Document_ID, Paragraphs.Other_Details"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Show all paragraph ids and texts for the document with name 'Welcome to NY'.",
        "select_candidates": [
            "select Paragraphs.Paragraph_ID, Paragraphs.Paragraph_Text",
            "select distinct Paragraphs.Paragraph_ID, Paragraphs.Paragraph_Text",
            "select Documents.Document_ID, Paragraphs.Paragraph_Text",
            "select Paragraphs.Paragraph_ID, Paragraphs.Paragraph_Text, Documents.Document_Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the ids and texts of paragraphs in the document titled 'Welcome to NY'?",
        "select_candidates": [
            "select Paragraphs.Paragraph_ID, Paragraphs.Paragraph_Text",
            "select distinct Paragraphs.Paragraph_ID, Paragraphs.Paragraph_Text",
            "select Documents.Document_ID, Paragraphs.Paragraph_Text",
            "select Paragraphs.Paragraph_ID, Paragraphs.Paragraph_Text, Documents.Template_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Show all paragraph texts for the document \"Customer reviews\".",
        "select_candidates": [
            "select Paragraphs.Paragraph_Text",
            "select distinct Paragraphs.Paragraph_Text",
            "select Paragraphs.Paragraph_Text, Documents.Document_Name",
            "select Paragraphs.Paragraph_Text, Paragraphs.Document_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the paragraph texts for the document with the name 'Customer reviews'?",
        "select_candidates": [
            "select Paragraphs.Paragraph_Text",
            "select Paragraphs.Paragraph_Text, Paragraphs.Document_ID",
            "select distinct Paragraphs.Paragraph_Text",
            "select Paragraphs.Paragraph_Text, Documents.Document_Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Show all document ids and the number of paragraphs in each document. Order by document id.",
        "select_candidates": [
            "select Paragraphs.Document_ID, count(*)",
            "select Paragraphs.Document_ID, count(distinct Paragraphs.Paragraph_ID)",
            "select Paragraphs.Document_ID, count(*), Paragraphs.Document_ID",
            "select count(*), Paragraphs.Document_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            1.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ]
    },
    {
        "question": "Return the different document ids along with the number of paragraphs corresponding to each, ordered by id.",
        "select_candidates": [
            "select Paragraphs.Document_ID, count(*)",
            "select distinct Paragraphs.Document_ID, count(*)",
            "select Paragraphs.Document_ID, count(*), Paragraphs.Document_ID",
            "select count(*), Paragraphs.Document_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            1.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Show all document ids, names and the number of paragraphs in each document.",
        "select_candidates": [
            "select Documents.Document_ID, Documents.Document_Name, count(*)",
            "select Paragraphs.Document_ID, Documents.Document_Name, count(*)",
            "select Documents.Document_ID, Documents.Document_Name, count(distinct Paragraphs.Paragraph_Text)",
            "select distinct Documents.Document_ID, Documents.Document_Name, count(*)"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the ids and names of each document, as well as the number of paragraphs in each?",
        "select_candidates": [
            "select Documents.Document_ID, Documents.Document_Name, count(*)",
            "select Documents.Document_ID, Documents.Document_Name, count(*), Documents.Document_ID",
            "select Paragraphs.Document_ID, Documents.Document_Name, count(*)",
            "select count(*), Documents.Document_ID, Documents.Document_Name"
        ],
        "select_labels": [
            0.0,
            0.0,
            1.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "List all document ids with at least two paragraphs.",
        "select_candidates": [
            "select Paragraphs.Document_ID",
            "select Paragraphs.Document_ID, count(distinct Paragraphs.Paragraph_ID)",
            "select distinct Paragraphs.Document_ID",
            "select count(distinct Paragraphs.Document_ID)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the ids of documents that have 2 or more paragraphs?",
        "select_candidates": [
            "select Paragraphs.Document_ID",
            "select Paragraphs.Document_ID, count(distinct Paragraphs.Paragraph_ID)",
            "select Paragraphs.Document_ID, count(*)",
            "select count(distinct Paragraphs.Document_ID)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the document id and name with greatest number of paragraphs?",
        "select_candidates": [
            "select Documents.Document_ID, Documents.Document_Name",
            "select Paragraphs.Document_ID, Documents.Document_Name",
            "select Documents.Document_ID, Documents.Document_Name, count(*)",
            "select Paragraphs.Document_ID, Documents.Document_Name, count(*)"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Return the id and name of the document with the most paragraphs.",
        "select_candidates": [
            "select Documents.Document_ID, Documents.Document_Name",
            "select Paragraphs.Document_ID, Documents.Document_Name",
            "select Templates.Template_ID, Documents.Document_Name",
            "select Documents.Document_ID, Documents.Document_Name, Paragraphs.Document_ID"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the document id with least number of paragraphs?",
        "select_candidates": [
            "select Paragraphs.Document_ID",
            "select Paragraphs.Document_ID, count(*)",
            "select Paragraphs.Document_ID, count(distinct Paragraphs.Paragraph_ID)",
            "select count(distinct Paragraphs.Document_ID)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Return the id of the document with the fewest paragraphs.",
        "select_candidates": [
            "select Paragraphs.Document_ID",
            "select Paragraphs.Document_ID, count(*)",
            "select Paragraphs.Document_ID, count(distinct Paragraphs.Paragraph_ID)",
            "select Paragraphs.Document_ID, Paragraphs.Paragraph_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the document id with 1 to 2 paragraphs?",
        "select_candidates": [
            "select Paragraphs.Document_ID",
            "select Paragraphs.Document_ID, count(*)",
            "select Paragraphs.Document_ID, count(distinct Paragraphs.Paragraph_ID)",
            "select count(distinct Paragraphs.Document_ID)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Give the ids of documents that have between one and two paragraphs.",
        "select_candidates": [
            "select Paragraphs.Document_ID",
            "select Documents.Document_ID",
            "select Paragraphs.Document_ID, max(Paragraphs.Paragraph_ID)",
            "select Paragraphs.Document_ID, max(Paragraphs.Paragraph_Text)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Show the document id with paragraph text 'Brazil' and 'Ireland'.",
        "select_candidates": [
            "select Paragraphs.Document_ID",
            "select Paragraphs.Document_ID, Paragraphs.Paragraph_Text",
            "select Paragraphs.Document_ID, Paragraphs.Paragraph_ID",
            "select distinct Paragraphs.Document_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the ids of documents that contain the paragraph text 'Brazil' and 'Ireland'?",
        "select_candidates": [
            "select Paragraphs.Document_ID",
            "select Paragraphs.Document_ID, Paragraphs.Paragraph_ID",
            "select distinct Paragraphs.Document_ID",
            "select Paragraphs.Document_ID, Paragraphs.Paragraph_Text"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How many teachers are there?",
        "select_candidates": [
            "select count(*)",
            "select count(distinct teacher.Name)",
            "select count(distinct teacher.Teacher_ID)",
            "select count (*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the total count of teachers?",
        "select_candidates": [
            "select count(*)",
            "select teacher.Name, count(*)",
            "select count(distinct teacher.Name)",
            "select count (*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "List the names of teachers in ascending order of age.",
        "select_candidates": [
            "select teacher.Name",
            "select teacher.Name, teacher.Age",
            "select teacher.Teacher_ID, teacher.Name",
            "select distinct teacher.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the names of the teachers ordered by ascending age?",
        "select_candidates": [
            "select teacher.Name",
            "select teacher.Name, teacher.Age",
            "select teacher.Teacher_ID, teacher.Name",
            "select distinct teacher.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the age and hometown of teachers?",
        "select_candidates": [
            "select teacher.Age, teacher.Hometown",
            "select teacher.Hometown, teacher.Age",
            "select distinct teacher.Age, teacher.Hometown",
            "select t1.c4, teacher.Hometown"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the age and hometown of every teacher?",
        "select_candidates": [
            "select teacher.Age, teacher.Hometown",
            "select teacher.Hometown, teacher.Age",
            "select distinct teacher.Age, teacher.Hometown",
            "select teacher.Name, teacher.Age"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "List the name of teachers whose hometown is not  Little Lever Urban District ''.",
        "select_candidates": [
            "select teacher.Name",
            "select teacher.Name, teacher.Hometown",
            "select distinct teacher.Name",
            "select teacher.Teacher_ID, teacher.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the names of the teachers whose hometown is not  Little Lever Urban District ''?",
        "select_candidates": [
            "select teacher.Name",
            "select teacher.Name, teacher.Hometown",
            "select distinct teacher.Name",
            "select teacher.Teacher_ID, teacher.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Show the name of teachers aged either 32 or 33?",
        "select_candidates": [
            "select teacher.Name",
            "select teacher.Name, teacher.Age",
            "select distinct teacher.Name",
            "select teacher.Name, max(teacher.Age)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the names of the teachers who are aged either 32 or 33?",
        "select_candidates": [
            "select teacher.Name",
            "select distinct teacher.Name",
            "select teacher.Name, teacher.Age",
            "select teacher.Name, max(teacher.Age)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the hometown of the youngest teacher?",
        "select_candidates": [
            "select teacher.Hometown",
            "select teacher.Hometown, teacher.Age",
            "select distinct teacher.Hometown",
            "select teacher.Hometown, teacher.Hometown"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Where is the youngest teacher from?",
        "select_candidates": [
            "select teacher.Hometown",
            "select teacher.Hometown, teacher.Age",
            "select teacher.Hometown, max(teacher.Age)",
            "select teacher.Hometown, min(teacher.Age)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Show different hometown of teachers and the number of teachers from each hometown.",
        "select_candidates": [
            "select teacher.Hometown, count(*)",
            "select distinct teacher.Hometown, count(*)",
            "select count(*), teacher.Hometown",
            "select teacher.Hometown, count(*), teacher.Hometown"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "For each hometown, how many teachers are there?",
        "select_candidates": [
            "select teacher.Hometown, count(*)",
            "select count(*), teacher.Hometown",
            "select teacher(*), teacher.Hometown",
            "select number(*), teacher.Hometown"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "List the most common hometown of teachers.",
        "select_candidates": [
            "select teacher.Hometown",
            "select teacher.Hometown, teacher.Hometown",
            "select teacher.Hometown, teacher.Age",
            "select teacher.Hometown, teacher.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the most commmon hometowns for teachers?",
        "select_candidates": [
            "select teacher.Hometown",
            "select distinct teacher.Hometown",
            "select teacher.Hometown, teacher.Hometown",
            "select teacher.Hometown, teacher.Age"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Show the hometowns shared by at least two teachers.",
        "select_candidates": [
            "select teacher.Hometown",
            "select teacher.Hometown, count(*)",
            "select teacher.Hometown, count(distinct teacher.Hometown)",
            "select distinct teacher.Hometown"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the towns from which at least two teachers come from?",
        "select_candidates": [
            "select teacher.Hometown",
            "select distinct teacher.Hometown",
            "select teacher.Hometown, count(*)",
            "select teacher.Hometown, count(distinct teacher.Hometown)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Show names of teachers and the courses they are arranged to teach.",
        "select_candidates": [
            "select teacher.Name, course.Course",
            "select distinct teacher.Name, course.Course",
            "select teacher.Name, course.Course, course_arrange.Teacher_ID",
            "select teacher.Name, course.Course, course.Course"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the name of each teacher and what course they teach?",
        "select_candidates": [
            "select teacher.Name, course.Course",
            "select course_arrange.Teacher_ID, teacher.Name, course.Course",
            "select course.Course, teacher.Name",
            "select distinct teacher.Name, course.Course"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Show names of teachers and the courses they are arranged to teach in ascending alphabetical order of the teacher's name.",
        "select_candidates": [
            "select teacher.Name, course.Course",
            "select course_arrange.Teacher_ID, teacher.Name, course.Course",
            "select course.Course, teacher.Name",
            "select teacher.Name, course.Course, course_arrange.Teacher_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the names of the teachers and the courses they teach in ascending alphabetical order by the name of the teacher?",
        "select_candidates": [
            "select teacher.Name, course.Course",
            "select course.Course, teacher.Name",
            "select course_arrange.Teacher_ID, teacher.Name, course.Course",
            "select course_arrange.Teacher_ID, course.Course"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Show the name of the teacher for the math course.",
        "select_candidates": [
            "select teacher.Name",
            "select teacher.Name, course.Course",
            "select distinct teacher.Name",
            "select teacher.Name, course.Course, teacher.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the names of the people who teach math courses?",
        "select_candidates": [
            "select teacher.Name",
            "select distinct teacher.Name",
            "select teacher.Name, course.Course",
            "select distinct teacher.Name, course.Course"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Show names of teachers and the number of courses they teach.",
        "select_candidates": [
            "select teacher.Name, count(*)",
            "select teacher.Name, count(distinct course.Course)",
            "select teacher.Name, count(*), course.Course",
            "select teacher.Name, count(course.Course)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the names of the teachers and how many courses do they teach?",
        "select_candidates": [
            "select teacher.Name, count(*)",
            "select teacher.Name, count(distinct course.Course)",
            "select teacher.Name, count(*), course.Course",
            "select count(distinct course.Course), teacher.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Show names of teachers that teach at least two courses.",
        "select_candidates": [
            "select teacher.Name",
            "select teacher.Name, count(distinct course.Course)",
            "select teacher.Name, count(*)",
            "select teacher.Name, course.Course"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the names of the teachers who teach at least two courses?",
        "select_candidates": [
            "select teacher.Name",
            "select teacher.Name, count(distinct course.Course)",
            "select teacher.Name, count(*)",
            "select teacher.Name, course.Course"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "List the names of teachers who have not been arranged to teach courses.",
        "select_candidates": [
            "select teacher.Name",
            "select distinct teacher.Name",
            "select teacher.Name, course.Course",
            "select teacher.Name, course.Staring_Date"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the names of the teachers whose courses have not been arranged?",
        "select_candidates": [
            "select teacher.Name",
            "select teacher.Name, course.Course",
            "select distinct teacher.Name",
            "select teacher.Name, course.Staring_Date"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How many visitors below age 30 are there?",
        "select_candidates": [
            "select count(*)",
            "select count(distinct visitor.Name)",
            "select count(distinct visitor.Age)",
            "select count(distinct visitor.ID)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Find the names of the visitors whose membership level is higher than 4, and order the results by the level from high to low.",
        "select_candidates": [
            "select visitor.Name",
            "select visitor.Name, visitor.Level_of_membership",
            "select distinct visitor.Name",
            "select visitor.ID, visitor.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY",
            "SELECT-FROM-INTERSECT-SELECT-FROM-WHERE-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the average age of the visitors whose membership level is not higher than 4?",
        "select_candidates": [
            "select avg(visitor.Age)",
            "select visitor.Age, avg(visitor.Age)",
            "select avg(visitor.Age), visitor.Level_of_membership",
            "select an_avg(visitor.Age)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Find the name and membership level of the visitors whose membership level is higher than 4, and sort by their age from old to young.",
        "select_candidates": [
            "select visitor.Name, visitor.Level_of_membership",
            "select visitor.Name, visitor.Level_of_membership, visitor.Age",
            "select visitor.ID, visitor.Name, visitor.Level_of_membership",
            "select distinct visitor.Name, visitor.Level_of_membership"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Find the id and name of the museum that has the most staff members?",
        "select_candidates": [
            "select museum.Museum_ID, museum.Name",
            "select museum.Museum_ID, museum.Name, museum.Num_of_Staff",
            "select museum_museum.Museum_ID, museum.Name",
            "select museum.Museum_ID, museum.Name, max(museum.Num_of_Staff)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Find the average number of staff working for the museums that were open before 2009.",
        "select_candidates": [
            "select avg(museum.Num_of_Staff)",
            "select avg(museum.Num_of_Staff), museum.Open_Year",
            "select an_avg(museum.Num_of_Staff)",
            "select the avg(museum.Num_of_Staff)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the opening year and staff number of the museum named Plaza Museum?",
        "select_candidates": [
            "select museum.Open_Year, museum.Num_of_Staff",
            "select museum.Name, museum.Num_of_Staff",
            "select museum.Num_of_Staff, museum.Open_Year",
            "select museum.Museum_ID, museum.Num_of_Staff"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "find the names of museums which have more staff than the minimum staff number of all museums opened after 2010.",
        "select_candidates": [
            "select museum.Name",
            "select distinct museum.Name",
            "select museum.Name, max(museum.Num_of_Staff)",
            "select museum.Name, museum.Num_of_Staff"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "find the id, name and age for visitors who visited some museums more than once.",
        "select_candidates": [
            "select visitor.ID, visitor.Name, visitor.Age",
            "select visit.visitor_ID, visitor.Name, visitor.Age",
            "select visitor_visitor.ID, visitor.Name, visitor.Age",
            "select visitor.ID, visitor.Name, visitor.Age, visit.visitor_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the id, name and membership level of visitors who have spent the largest amount of money in total in all museum tickets?",
        "select_candidates": [
            "select visitor.ID, visitor.Name, visitor.Level_of_membership",
            "select visit.visitor_ID, visitor.Name, visitor.Level_of_membership",
            "select visitor_visitor.ID, visitor.Name, visitor.Level_of_membership",
            "select distinct visitor.ID, visitor.Name, visitor.Level_of_membership"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the id and name of the museum visited most times?",
        "select_candidates": [
            "select museum.Museum_ID, museum.Name",
            "select visit.Museum_ID, museum.Name",
            "select t2, museum.Museum_ID, museum.Name",
            "select museum.Museum_ID, museum.Name, visit.visitor_ID"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the name of the museum that had no visitor yet?",
        "select_candidates": [
            "select museum.Name",
            "select museum.Name, museum.Museum_ID",
            "select museum.Name, museum.Museum_ID, museum.Name",
            "select museum.Museum_ID, museum.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Find the name and age of the visitor who bought the most tickets at once.",
        "select_candidates": [
            "select visitor.Name, visitor.Age",
            "select visitor.Name, visitor.Age, visit.Num_of_Ticket",
            "select visitor.Name, visitor.Age, visitor.ID",
            "select distinct visitor.Name, visitor.Age"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ]
    },
    {
        "question": "What are the average and maximum number of tickets bought in all visits?",
        "select_candidates": [
            "select avg(visit.Num_of_Ticket), max(visit.Num_of_Ticket)",
            "select max(visit.Num_of_Ticket), avg(visit.Num_of_Ticket)",
            "select avg(visit.Num_of_Ticket), max(visit.Num_of_Ticket), sum(visit.Num_of_Ticket)",
            "select visit.Num_of_Ticket, avg(visit.Num_of_Ticket), max(visit.Num_of_Ticket)"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the total ticket expense of the visitors whose membership level is 1?",
        "select_candidates": [
            "select sum(visit.Total_spent)",
            "select visit.Total_spent",
            "select visit.Total_spent, sum(visit.Total_spent)",
            "select avg(visit.Total_spent)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the name of the visitor who visited both a museum opened before 2009 and a museum opened after 2011?",
        "select_candidates": [
            "select visitor.Name",
            "select visitor.Name, museum.Name",
            "select visitor.Name, museum.Name, visit.visitor_ID",
            "select visitor.Name, museum.Open_Year"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ]
    },
    {
        "question": "Find the number of visitors who did not visit any museum opened after 2010.",
        "select_candidates": [
            "select count(*)",
            "select count(distinct visitor.Name)",
            "select count(*), museum.Open_Year",
            "select count (distinct visitor.Name)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How many museums were opened after 2013 or before 2008?",
        "select_candidates": [
            "select count(*)",
            "select count(distinct museum.Museum_ID)",
            "select count(distinct museum.Name)",
            "select count (*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Find the total number of players.",
        "select_candidates": [
            "select count(*)",
            "select count(*), players.player_id",
            "select count(*), players.first_name",
            "select players.first_name, count(*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How many players are there?",
        "select_candidates": [
            "select count(*)",
            "select count(distinct players.player_id)",
            "select count(*), players.player_id",
            "select count(*), players.first_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Find the total number of matches.",
        "select_candidates": [
            "select count(*)",
            "select sum(matches.match_num)",
            "select sum(*)",
            "select sum(matches.loser_age)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Count the number of matches.",
        "select_candidates": [
            "select count(*)",
            "select count(distinct matches.match_num)",
            "select count(*), matches.match_num",
            "select count (*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "List the first name and birth date of all players from the country with code USA.",
        "select_candidates": [
            "select players.first_name, players.birth_date",
            "select distinct players.first_name, players.birth_date",
            "select players.first_name, players.birth_date, players.hand",
            "select players.first_name, players.birth_date, players.country_code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the first names and birth dates of players from the USA?",
        "select_candidates": [
            "select players.first_name, players.birth_date",
            "select distinct players.first_name, players.birth_date",
            "select players.first_name, players.birth_date, players.hand",
            "select players.player_id, players.first_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Find the average age of losers and winners of all matches.",
        "select_candidates": [
            "select avg(matches.loser_age), avg(matches.winner_age)",
            "select avg(matches.loser_age), avg(matches.draw_size)",
            "select avg(matches.loser_age), avg(matches.loser_entry)",
            "select avg(matches.loser_entry), avg(matches.winner_age)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the average ages of losers and winners across matches?",
        "select_candidates": [
            "select avg(matches.loser_age), avg(matches.winner_age)",
            "select avg(matches.loser_age), avg(matches.draw_size)",
            "select avg(matches.loser_age), avg(matches.loser_entry)",
            "select avg(matches.loser_entry), avg(matches.winner_age)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Find the average rank of winners in all matches.",
        "select_candidates": [
            "select avg(matches.winner_rank)",
            "select avg(matches.loser_name)",
            "select matches.winner_rank, avg(matches.winner_rank)",
            "select avg(matches.winner_name)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the average rank for winners in all matches?",
        "select_candidates": [
            "select avg(matches.winner_rank)",
            "select avg(matches.loser_name)",
            "select matches.winner_rank, avg(matches.winner_rank)",
            "select avg(matches.winner_name)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Find the highest rank of losers in all matches.",
        "select_candidates": [
            "select max(matches.loser_rank)",
            "select min(matches.loser_rank)",
            "select matches.loser_rank",
            "select matches.loser_rank, max(matches.loser_rank)"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the best rank of losers across all matches?",
        "select_candidates": [
            "select matches.loser_rank",
            "select matches.loser_rank, max(matches.loser_rank)",
            "select matches.loser_rank, min(matches.loser_rank)",
            "select max(matches.loser_rank)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "find the number of distinct country codes of all players.",
        "select_candidates": [
            "select count(distinct players.country_code)",
            "select count (distinct players.country_code)",
            "select count distinct players.country_code",
            "select countdistinct players.country_code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How many distinct countries do players come from?",
        "select_candidates": [
            "select count(distinct players.country_code)",
            "select count (distinct players.country_code)",
            "select countdistinct players.country_code",
            "select count distinct players.country_code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Find the number of distinct name of losers.",
        "select_candidates": [
            "select count(distinct matches.loser_name)",
            "select count (distinct matches.loser_name)",
            "select count distinct matches.loser_name",
            "select countdistinct matches.loser_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How many different loser names are there?",
        "select_candidates": [
            "select count(distinct matches.loser_name)",
            "select count (distinct matches.loser_name)",
            "select count distinct matches.loser_name",
            "select count (1distinct matches.loser_name)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Find the name of tourney that has more than 10 matches.",
        "select_candidates": [
            "select matches.tourney_name",
            "select matches.tourney_name, count(*)",
            "select matches.tourney_name, count(*), matches.tourney_date",
            "select matches.tourney_name, count(*), matches.tourney_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the names of tournaments that have more than 10 matches?",
        "select_candidates": [
            "select matches.tourney_name",
            "select matches.tourney_name, count(*)",
            "select distinct matches.tourney_name",
            "select matches.tourney_name, count(*), matches.tourney_date"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "List the names of all winners who played in both 2013 and 2016.",
        "select_candidates": [
            "select matches.winner_name",
            "select players.first_name, players.last_name",
            "select matches.winner_name, matches.winner_rank",
            "select matches.winner_name, matches.year"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the names of players who won in both 2013 and 2016?",
        "select_candidates": [
            "select players.first_name, players.last_name",
            "select distinct players.first_name, players.last_name",
            "select players.first_name, players.last_name, matches.winner_name",
            "select players.first_name"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "List the number of all matches who played in years of 2013 or 2016.",
        "select_candidates": [
            "select count(*)",
            "select matches.match_num",
            "select sum(matches.match_num)",
            "select count(*), matches.year"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How many matches were played in 2013 or 2016?",
        "select_candidates": [
            "select count(*)",
            "select matches.year, count(*)",
            "select count(*), matches.year",
            "select matches.minutes, count(*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the country code and first name of the players who won in both tourney WTA Championships and Australian Open?",
        "select_candidates": [
            "select players.country_code, players.first_name",
            "select players.first_name, players.country_code",
            "select distinct players.country_code, players.first_name",
            "select players.country_code, players.first_name, players.last_name"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the first names and country codes for players who won both the WTA Championships and the Australian Open?",
        "select_candidates": [
            "select players.first_name, players.country_code",
            "select distinct players.first_name, players.country_code",
            "select players.first_name, players.country_code, players.birth_date",
            "select players.first_name, players.country_code, players.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Find the first name and country code of the oldest player.",
        "select_candidates": [
            "select players.first_name, players.country_code",
            "select distinct players.first_name, players.country_code",
            "select players.first_name, players.country_code, players.birth_date",
            "select players.first_name, players.country_code, players.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the first name and country code of the oldest player?",
        "select_candidates": [
            "select players.first_name, players.country_code",
            "select distinct players.first_name, players.country_code",
            "select players.first_name, players.country_code, players.birth_date",
            "select players.first_name, players.country_code, players.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "List the first and last name of all players in the order of birth date.",
        "select_candidates": [
            "select players.first_name, players.last_name",
            "select distinct players.first_name, players.last_name",
            "select players.first_name, players.last_name, players.birth_date",
            "select players.first_name, players.last_name in players.birth_date"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ]
    },
    {
        "question": "What are the full names of all players, sorted by birth date?",
        "select_candidates": [
            "select players.first_name, players.last_name",
            "select distinct players.first_name, players.last_name",
            "select players.first_name, players.last_name, players.birth_date",
            "select players.player_id, players.first_name, players.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "List the first and last name of all players who are left / L hand in the order of birth date.",
        "select_candidates": [
            "select players.first_name, players.last_name",
            "select players.first_name, players.last_name in players.birth_date",
            "select players.first_name, players.last_name, players.birth_date",
            "select distinct players.first_name, players.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the full names of all left handed players, in order of birth date?",
        "select_candidates": [
            "select players.first_name, players.last_name",
            "select distinct players.first_name, players.last_name",
            "select players.first_name, players.last_name, players.birth_date",
            "select players.first_name, players.hand, players.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Find the first name and country code of the player who did the most number of tours.",
        "select_candidates": [
            "select players.first_name, players.country_code",
            "select players.first_name, players.country_code, rankings.tours",
            "select players.first_name, players.country_code, players.player_id",
            "select players.first_name, players.country_code, players.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ]
    },
    {
        "question": "What is the first name and country code of the player with the most tours?",
        "select_candidates": [
            "select players.first_name, players.country_code",
            "select players.first_name, players.country_code, rankings.tours",
            "select players.first_name, players.country_code, players.player_id",
            "select players.first_name, players.country_code, players.birth_date"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ]
    },
    {
        "question": "Find the year that has the most number of matches.",
        "select_candidates": [
            "select matches.year",
            "select matches.year, count(*)",
            "select matches.year, count(*), matches.loser_entry",
            "select matches.year, count(*), matches.best_of"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Which year had the most matches?",
        "select_candidates": [
            "select matches.year",
            "select matches.year, count(*)",
            "select matches.year, count(*), matches.loser_entry",
            "select matches.year, count(*), matches.draw_size"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Find the name and rank points of the winner who won the most times.",
        "select_candidates": [
            "select matches.winner_name, matches.winner_rank_points",
            "select matches.winner_name, matches.winner_rank_points, matches.loser_rank_points",
            "select matches.winner_name, matches.winner_rank_points, matches.loser_name",
            "select matches.winner_name, matches.winner_rank_points, matches.winner_rank"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the name of the winner who has won the most matches, and how many rank points does this player have?",
        "select_candidates": [
            "select matches.winner_name, matches.winner_rank_points",
            "select players.first_name, matches.winner_rank_points",
            "select matches.winner_name, count(*)",
            "select matches.winner_name, sum(matches.winner_rank_points)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Find the name of the winner who has the highest rank points and participated in the Australian Open tourney.",
        "select_candidates": [
            "select matches.winner_name",
            "select matches.winner_name, matches.winner_rank",
            "select matches.winner_name, matches.winner_rank_points",
            "select matches.winner_name, matches.winner_seed"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ]
    },
    {
        "question": "What is the name of the winner with the most rank points who participated in the Australian Open tournament?",
        "select_candidates": [
            "select matches.winner_name",
            "select matches.winner_name, matches.winner_rank_points",
            "select matches.winner_name, matches.winner_rank",
            "select matches.winner_name, matches.loser_rank_points"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            1.0
        ]
    },
    {
        "question": "find the names of loser and winner who played in the match with greatest number of minutes.",
        "select_candidates": [
            "select matches.loser_name, matches.winner_name",
            "select matches.loser_name, matches.winner_name, matches.minutes",
            "select distinct matches.loser_name, matches.winner_name",
            "select matches.loser_name, matches.winner_name, matches.minutes, matches.minutes"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the names of the winner and loser who played in the longest match?",
        "select_candidates": [
            "select matches.winner_name, matches.loser_name",
            "select matches.winner_name, matches.loser_name, matches.winner_ht",
            "select matches.winner_name, matches.loser_name, matches.loser_ht",
            "select distinct matches.winner_name, matches.loser_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Find the average ranking for each player and their first name.",
        "select_candidates": [
            "select avg(rankings.ranking), players.first_name",
            "select players.first_name, avg(rankings.ranking)",
            "select rankings.ranking, players.first_name, avg(rankings.ranking)",
            "select avg(rankings.ranking), players.first_name, players.last_name"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the first names of all players, and their average rankings?",
        "select_candidates": [
            "select players.first_name, avg(rankings.ranking)",
            "select players.first_name, rankings.ranking, avg(rankings.ranking)",
            "select distinct players.first_name, avg(rankings.ranking)",
            "select avg(rankings.ranking), players.first_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            1.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Find the total ranking points for each player and their first name.",
        "select_candidates": [
            "select sum(rankings.ranking_points), players.first_name",
            "select rankings.ranking_points, sum(rankings.ranking_points), players.first_name",
            "select rankings.ranking_points, sum(players.first_name), players.first_name",
            "select sum(rankings.ranking_points), players.first_name, players.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the first names of all players, and their total ranking points?",
        "select_candidates": [
            "select players.first_name, sum(rankings.ranking_points)",
            "select sum(rankings.ranking_points), players.first_name",
            "select distinct players.first_name, sum(rankings.ranking_points)",
            "select players.player_id, sum(rankings.ranking_points)"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "find the number of players for each country.",
        "select_candidates": [
            "select count(*), players.country_code",
            "select players.country_code, count(*)",
            "select number(*), players.country_code",
            "select sum(players.country_code), players.country_code"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How many players are from each country?",
        "select_candidates": [
            "select players.country_code, count(*)",
            "select count(*), players.country_code",
            "select sum(players.country_code), players.country_code",
            "select distinct players.country_code, count(*)"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "find the code of the country where has the greatest number of players.",
        "select_candidates": [
            "select players.country_code",
            "select players.country_code, count(*)",
            "select distinct players.country_code",
            "select players.country_code, players.first_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the code of the country with the most players?",
        "select_candidates": [
            "select players.country_code",
            "select players.country_code, count(*)",
            "select players.country_code, players.first_name",
            "select players.country_code, players.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Find the codes of countries that have more than 50 players.",
        "select_candidates": [
            "select players.country_code",
            "select distinct players.country_code",
            "select players.country_code, count(*)",
            "select distinct players.country_code, count(*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the codes of countries with more than 50 players?",
        "select_candidates": [
            "select players.country_code",
            "select distinct players.country_code",
            "select players.country_code, count(*)",
            "select avg(players.country_code)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Find the total number of tours for each ranking date.",
        "select_candidates": [
            "select rankings.ranking_date, sum(rankings.tours)",
            "select rankings.ranking_date, count(*)",
            "select sum(rankings.tours), rankings.ranking_date",
            "select count(*), rankings.ranking_date"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How many total tours were there for each ranking date?",
        "select_candidates": [
            "select rankings.ranking_date, sum(rankings.tours)",
            "select sum(rankings.tours), rankings.ranking_date",
            "select count(*), rankings.ranking_date",
            "select rankings.ranking_date, count(*)"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Find the number of matches happened in each year.",
        "select_candidates": [
            "select count(*), matches.year",
            "select matches.year, count(*)",
            "select sum(*), matches.year",
            "select count(*), t1.c 31"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How many matches were played in each year?",
        "select_candidates": [
            "select count(*), matches.year",
            "select matches.year, count(*)",
            "select sum(*), matches.year",
            "select counts(*), matches.year"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Find the name and rank of the 3 youngest winners across all matches.",
        "select_candidates": [
            "select matches.winner_name, matches.winner_rank",
            "select matches.winner_name, matches.winner_rank, matches.loser_entry",
            "select matches.winner_rank, matches.winner_name",
            "select matches.winner_name, matches.winner_rank, matches.winner_hand"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the names and ranks of the three youngest winners across all matches?",
        "select_candidates": [
            "select matches.winner_name, matches.winner_rank",
            "select matches.winner_name, matches.winner_rank, matches.loser_entry",
            "select matches.winner_rank, matches.winner_name",
            "select matches.winner_name, matches.winner_rank, matches.winner_hand"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How many different winners both participated in the WTA Championships and were left handed?",
        "select_candidates": [
            "select count(distinct matches.loser_ioc)",
            "select count(distinct matches.loser_age)",
            "select count(*)",
            "select count(distinct matches.winner_name)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            1.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Find the number of left handed winners who participated in the WTA Championships.",
        "select_candidates": [
            "select count(*)",
            "select count(distinct matches.loser_hand)",
            "select count(*), matches.winner_hand",
            "select count(left handed matches.loser_hand)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Find the first name, country code and birth date of the winner who has the highest rank points in all matches.",
        "select_candidates": [
            "select players.first_name, players.country_code, players.birth_date",
            "select distinct players.first_name, players.country_code, players.birth_date",
            "select players.first_name, players.birth_date, players.country_code",
            "select players.first_name, players.country_code, players.birth_date, players.birth_date"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the first name, country code, and birth date of the player with the most winner rank points across all matches?",
        "select_candidates": [
            "select players.first_name, players.country_code, players.birth_date",
            "select players.first_name, players.birth_date, players.country_code",
            "select distinct players.first_name, players.country_code, players.birth_date",
            "select players.first_name, players.country_code, players.birth_date, players.birth_date"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Find the number of players for each hand type.",
        "select_candidates": [
            "select players.hand, count(*)",
            "select count(*), players.hand",
            "select distinct players.hand, count(*)",
            "select number(*), players.hand"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How many players are there for each hand type?",
        "select_candidates": [
            "select players.hand, count(*)",
            "select count(*), players.hand",
            "select distinct players.hand, count(*)",
            "select players.hand, count(*), players.player_id"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How many ships ended up being 'Captured'?",
        "select_candidates": [
            "select count(*)",
            "select count(distinct ship.disposition_of_ship)",
            "select count(distinct ship.lost_in_battle)",
            "select count (*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "List the name and tonnage ordered by in descending alphaetical order for the names.",
        "select_candidates": [
            "select ship.name, ship.tonnage",
            "select ship.tonnage, ship.name",
            "select ship.id, ship.tonnage",
            "select ship.ship_type, ship.tonnage"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "List the name, date and result of each battle.",
        "select_candidates": [
            "select battle.name, battle.date, battle.result",
            "select distinct battle.name, battle.date, battle.result",
            "select battle.name, battle.bulgarian_commander, battle.result",
            "select battle.name, battle.result, battle.date"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is maximum and minimum death toll caused each time?",
        "select_candidates": [
            "select max(death.killed), min(death.killed), death.caused_by_ship_id",
            "select death.killed, max(death.killed), min(death.killed), death.caused_by_ship_id",
            "select max(death.killed), min(death.killed), death.id",
            "select death.caused_by_ship_id, max(death.killed), min(death.killed), death.caused_by_ship_id"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM"
        ],
        "structure_labels": [
            0.0,
            1.0
        ]
    },
    {
        "question": "What is the average number of injuries caused each time?",
        "select_candidates": [
            "select avg(death.injured), death.killed",
            "select death.injured, avg(death.injured)",
            "select avg(death.injured), death.id",
            "select avg(death.injured), death.caused_by_ship_id"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM"
        ],
        "structure_labels": [
            0.0,
            1.0
        ]
    },
    {
        "question": "What are the death and injury situations caused by the ship with tonnage 't'?",
        "select_candidates": [
            "select death.killed, death.injured",
            "select distinct death.killed, death.injured",
            "select ship.tonnage, death.injured",
            "select death.id, death.injured"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the name and results of the battles when the bulgarian commander is not 'Boril'",
        "select_candidates": [
            "select battle.name, battle.result",
            "select distinct battle.name, battle.result",
            "select battle.id, battle.result",
            "select battle.name, battle.result, battle.bulgarian_commander"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the different ids and names of the battles that lost any 'Brig' type shipes?",
        "select_candidates": [
            "select distinct battle.id, battle.name",
            "select count(distinct battle.id), battle.name",
            "select battle.id, battle.name",
            "select different battle.id, battle.name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the ids and names of the battles that led to more than 10 people killed in total.",
        "select_candidates": [
            "select battle.id, battle.name",
            "select distinct battle.id, battle.name",
            "select battle.id, battle.name, count(*)",
            "select death.id, battle.id, battle.name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the ship id and name that caused most total injuries?",
        "select_candidates": [
            "select ship.id, ship.name",
            "select ship.id, ship.name, sum(death.injured)",
            "select death.id, ship.name",
            "select death.caused_by_ship_id, ship.name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the distinct battle names which are between bulgarian commander 'Kaloyan' and latin commander 'Baldwin I'?",
        "select_candidates": [
            "select distinct battle.name",
            "select distinct battle.name, battle.bulgarian_commander",
            "select distinct battle.id, battle.name",
            "select distinct battle.name, battle.latin_commander"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How many different results are there for the battles?",
        "select_candidates": [
            "select count (distinct battle.result)",
            "select count(distinct battle.result)",
            "select count distinct battle.result",
            "select countdistinct battle.result"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How many battles did not lose any ship with tonnage '225'?",
        "select_candidates": [
            "select count(*)",
            "select count(distinct battle.name)",
            "select count(*), battle.name",
            "select count (distinct battle.name)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "List the name and date the battle that has lost the ship named 'Lettice' and the ship named 'HMS Atalanta'",
        "select_candidates": [
            "select battle.name, battle.date",
            "select distinct battle.name, battle.date",
            "select battle.name, battle.date, battle.result",
            "select battle.id, battle.name, battle.date"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ]
    },
    {
        "question": "Show names, results and bulgarian commanders of the battles with no ships lost in the 'English Channel'.",
        "select_candidates": [
            "select battle.name, battle.result, battle.bulgarian_commander",
            "select distinct battle.name, battle.result, battle.bulgarian_commander",
            "select battle.name, battle.result, battle.bulgarian_commander, battle.bulgarian_commander",
            "select battle.id, battle.result, battle.bulgarian_commander"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            1.0
        ]
    },
    {
        "question": "What are the notes of the death events which has substring 'East'?",
        "select_candidates": [
            "select death.note",
            "select distinct death.note",
            "select death.note, death.id",
            "select death.note, death.killed"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "what are all the addresses including line 1 and line 2?",
        "select_candidates": [
            "select Addresses.address_id",
            "select distinct Addresses.address_id",
            "select Addresses.address_id, Addresses.line_1, Addresses.line_2",
            "select distinct Addresses.address_id, Addresses.line_1, Addresses.line_2"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ]
    },
    {
        "question": "What is the first and second line for all addresses?",
        "select_candidates": [
            "select Addresses.line_1, Addresses.line_2",
            "select distinct Addresses.line_1, Addresses.line_2",
            "select Addresses.address_id, Addresses.line_1, Addresses.line_2",
            "select distinct Addresses.address_id, Addresses.line_1, Addresses.line_2"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How many courses in total are listed?",
        "select_candidates": [
            "select count(*)",
            "select count(distinct Courses.course_name)",
            "select count(*), Courses.course_name",
            "select count(*), Courses.course_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How many courses are there?",
        "select_candidates": [
            "select count(*)",
            "select count(distinct Courses.course_name)",
            "select count(distinct Courses.course_id)",
            "select count(*), Courses.course_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How is the math course described?",
        "select_candidates": [
            "select Courses.course_description",
            "select distinct Courses.course_description",
            "select Courses.course_description, Courses.course_name",
            "select Courses.course_name, Courses.course_description"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the descriptions for all the math courses?",
        "select_candidates": [
            "select Courses.course_description",
            "select distinct Courses.course_description",
            "select Courses.course_name, Courses.course_description",
            "select Courses.course_description, Courses.course_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the zip code of the address in the city Port Chelsea?",
        "select_candidates": [
            "select Addresses.zip_postcode",
            "select distinct Addresses.zip_postcode",
            "select Addresses.zip_postcode, Addresses.city",
            "select Addresses.zip_postcode, Addresses.line_1"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the zip code for Port Chelsea?",
        "select_candidates": [
            "select Addresses.zip_postcode",
            "select distinct Addresses.zip_postcode",
            "select Addresses.zip_postcode, Addresses.city",
            "select Addresses.zip_postcode, Addresses.city, Addresses.zip_postcode"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Which department offers the most number of degrees? List department name and id.",
        "select_candidates": [
            "select Departments.department_name, Departments.department_id",
            "select distinct Departments.department_name, Departments.department_id",
            "select Departments.department_name, Degree_Programs.department_id",
            "select Departments.department_name, Departments.department_id, Departments.department_description"
        ],
        "select_labels": [
            0.0,
            0.0,
            1.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the name and id of the department with the most number of degrees?",
        "select_candidates": [
            "select Departments.department_name, Departments.department_id",
            "select Departments.department_name, Departments.department_id, Departments.department_description",
            "select Departments.department_name, Departments.department_id, Departments.department_name",
            "select distinct Departments.department_name, Departments.department_id"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How many departments offer any degree?",
        "select_candidates": [
            "select count(distinct Departments.department_name)",
            "select count (distinct Departments.department_name)",
            "select count(distinct Departments.department_name), Degree_Programs.department_id",
            "select count(distinct Departments.department_name), Degree_Programs.degree_summary_name"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How many different departments offer degrees?",
        "select_candidates": [
            "select count(distinct Departments.department_name)",
            "select count (distinct Departments.department_name)",
            "select count(distinct Departments.department_name)",
            "select count(distinct Departments.department_name), Degree_Programs.degree_summary_name"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How many different degree names are offered?",
        "select_candidates": [
            "select count(distinct Degree_Programs.degree_summary_name)",
            "select count (distinct Degree_Programs.degree_summary_name)",
            "select count(distinct Degree_Programs.degree_summary_name), count(distinct Degree_Programs.degree_summary_name)",
            "select count(distinct Degree_Programs.degree_summary_name), Degree_Programs.degree_summary_description"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How many different degrees are offered?",
        "select_candidates": [
            "select count(distinct Degree_Programs.degree_summary_name)",
            "select count(distinct Degree_Programs.degree_program_id)",
            "select count(distinct Degree_Programs.degree_summary_name), count(distinct Degree_Programs.degree_program_id)",
            "select count (distinct Degree_Programs.degree_summary_name)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How many degrees does the engineering department offer?",
        "select_candidates": [
            "select count(*)",
            "select count(distinct Degree_Programs.degree_summary_name)",
            "select count(distinct Degree_Programs.degree_summary_name), Departments.department_name",
            "select count(*), Departments.department_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How many degrees does the engineering department have?",
        "select_candidates": [
            "select count(*)",
            "select count(distinct Degree_Programs.degree_summary_name)",
            "select count(*), Departments.department_name",
            "select Degree_Programs.degree_summary_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the names and descriptions of all the sections?",
        "select_candidates": [
            "select Sections.section_name, Sections.section_description",
            "select distinct Sections.section_name, Sections.section_description",
            "select Sections.section_description, Sections.section_name",
            "select Sections.course_id, Sections.section_description"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the names and descriptions for all the sections?",
        "select_candidates": [
            "select Sections.section_name, Sections.section_description",
            "select distinct Sections.section_name, Sections.section_description",
            "select Sections.section_description, Sections.section_name",
            "select Sections.course_id, Sections.section_description"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the names and id of courses having at most 2 sections?",
        "select_candidates": [
            "select Courses.course_name, Sections.course_id",
            "select Courses.course_name, Courses.course_id",
            "select Courses.course_name, Sections.section_id",
            "select Courses.course_name, Addresses.address_id"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the names and ids of every course with less than 2 sections?",
        "select_candidates": [
            "select Courses.course_name, Sections.course_id",
            "select Courses.course_name, Sections.section_id",
            "select Courses.course_name, Courses.course_id",
            "select distinct Courses.course_name, Sections.course_id"
        ],
        "select_labels": [
            0.0,
            0.0,
            1.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "List the section_name in reversed lexicographical order.",
        "select_candidates": [
            "select Sections.section_name",
            "select Sections.section_id, Sections.section_name",
            "select Sections.section_name, Sections.course_id",
            "select Sections.section_name, Sections.section_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-INTERSECT-SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the names of the sections in reverse alphabetical order?",
        "select_candidates": [
            "select Sections.section_name",
            "select Sections.section_name, Sections.section_description",
            "select Sections.section_name, Sections.course_id",
            "select distinct Sections.section_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the semester which most student registered in? Show both the name and the id.",
        "select_candidates": [
            "select Semesters.semester_name, Semesters.semester_id",
            "select Semesters.semester_name, Semesters.semester_id, Semesters.semester_name",
            "select distinct Semesters.semester_name, Semesters.semester_id",
            "select Semesters.semester_id, Semesters.semester_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            1.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "For each semester, what is the name and id of the one with the most students registered?",
        "select_candidates": [
            "select Semesters.semester_name, Semesters.semester_id",
            "select Semesters.semester_name, Semesters.semester_id, Semesters.semester_name",
            "select Semesters.semester_name, Semesters.semester_id, Semesters.semester_name, max(Students.ssn)",
            "select Semesters.semester_name, Semesters.semester_id, count(*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the description of the department whose name has the substring the computer?",
        "select_candidates": [
            "select Departments.department_description",
            "select Departments.department_description, Departments.department_name",
            "select Departments.department_description, Departments.department_name, Departments.department_description",
            "select distinct Departments.department_description"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the department description for the one whose name has the word computer?",
        "select_candidates": [
            "select Departments.department_description",
            "select Departments.department_description, Departments.department_name",
            "select Departments.department_description, Departments.department_name, Departments.department_description",
            "select distinct Departments.department_description"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Who are enrolled in 2 degree programs in one semester? List the first name, middle name and last name and the id.",
        "select_candidates": [
            "select Students.first_name, Students.middle_name, Students.last_name, Students.student_id",
            "select Students.first_name, Students.middle_name, Students.last_name, Degree_Programs.degree_program_id",
            "select distinct Students.first_name, Students.middle_name, Students.last_name, Students.student_id",
            "select Students.first_name, Students.middle_name, Students.last_name, Sections.section_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the first, middle, and last names, along with the ids, of all students who enrolled in 2 degree programs in one semester?",
        "select_candidates": [
            "select Students.first_name, Students.middle_name, Students.last_name, Students.student_id",
            "select Students.first_name, Students.middle_name, Students.student_id",
            "select distinct Students.first_name, Students.middle_name, Students.last_name, Students.student_id",
            "select Students.first_name, Students.middle_name, Students.current_address_id, Students.student_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Who is enrolled in a Bachelor degree program? List the first name, middle name, last name.",
        "select_candidates": [
            "select Students.first_name, Students.middle_name, Students.last_name",
            "select distinct Students.first_name, Students.middle_name, Students.last_name",
            "select Students.first_name, Students.middle_name, Students.last_name, Degree_Programs.degree_summary_name",
            "select Students.first_name, Students.middle_name, Students.last_name, Students.student_id"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the first, middle, and last names for everybody enrolled in a Bachelors program?",
        "select_candidates": [
            "select Students.first_name, Students.middle_name, Students.last_name",
            "select distinct Students.first_name, Students.middle_name, Students.last_name",
            "select Students.first_name, Students.middle_name, Students.last_name",
            "select Students.first_name, Students.middle_name, Students.last_name, Student_Enrolment.student_enrolment_id"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Find the kind of program which most number of students are enrolled in?",
        "select_candidates": [
            "select Courses.course_name",
            "select Courses.course_name, Student_Enrolment.student_enrolment_id",
            "select Courses.course_name, Student_Enrolment.degree_program_id",
            "select Courses.course_name, Student_Enrolment.semester_id"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the degree summary name that has the most number of students enrolled?",
        "select_candidates": [
            "select Degree_Programs.degree_summary_name",
            "select Degree_Programs.degree_summary_name, count(*)",
            "select Degree_Programs.degree_summary_name, Student_Enrolment.student_enrolment_id",
            "select Degree_Programs.degree_summary_name, Student_Enrolment.degree_program_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Find the program which most number of students are enrolled in. List both the id and the summary.",
        "select_candidates": [
            "select Sections.section_id, Courses.course_name, Courses.course_description",
            "select Degree_Programs.degree_program_id, Courses.course_name, Courses.course_description",
            "select Sections.section_id, Courses.course_name, Degree_Programs.degree_summary_name",
            "select Degree_Programs.degree_program_id, Courses.course_name, Degree_Programs.degree_summary_name"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the program id and the summary of the degree that has the most students enrolled?",
        "select_candidates": [
            "select Degree_Programs.degree_program_id, Degree_Programs.degree_summary_name",
            "select Degree_Programs.degree_program_id, Degree_Programs.degree_summary_name, Student_Enrolment.degree_program_id",
            "select Degree_Programs.degree_program_id, Degree_Programs.degree_summary_name, Degree_Programs.degree_summary_description",
            "select Student_Enrolment.student_enrolment_id, Degree_Programs.degree_summary_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Which student has enrolled for the most times in any program? List the id, first name, middle name, last name, the number of enrollments and student id.",
        "select_candidates": [
            "select Students.first_name, Students.middle_name, Students.last_name, count(*), Students.student_id",
            "select Students.first_name, Students.middle_name, Students.last_name, count(Students.student_id), Students.student_id",
            "select student Students.first_name, Students.middle_name, Students.last_name, count(*), Students.student_id",
            "select student Students.first_name, Students.middle_name, Students.last_name, count(Students.student_id), Students.student_id"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the first, middle, and last name, along with the id and number of enrollments, for the student who enrolled the most in any program?",
        "select_candidates": [
            "select Students.first_name, Students.middle_name, Students.last_name, Students.student_id, count(*)",
            "select Students.first_name, Students.middle_name, Students.last_name, count(*), Students.student_id",
            "select Students.first_name, Students.middle_name, Students.last_name, Students.student_id, count(*), Students.student_id",
            "select Students.first_name, Students.middle_name, Students.last_name, Students.student_id, count(t6.c)"
        ],
        "select_labels": [
            0.0,
            0.0,
            1.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Which semesters do not have any student enrolled? List the semester name.",
        "select_candidates": [
            "select Semesters.semester_name",
            "select distinct Semesters.semester_name",
            "select Semesters.semester_name, Semesters.semester_id",
            "select Semesters.semester_name, Semesters.semester_description"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the name of the semester with no students enrolled?",
        "select_candidates": [
            "select Semesters.semester_name",
            "select Semesters.semester_name, Semesters.semester_id",
            "select Semesters.semester_name, Semesters.semester_description",
            "select Semesters.semester_name, Semesters.semester_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are all the course names of the courses which ever have students enrolled in?",
        "select_candidates": [
            "select Courses.course_name",
            "select distinct Courses.course_name",
            "select Courses.course_name, Student_Enrolment.semester_id",
            "select Courses.course_name, Student_Enrolment.degree_program_id"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the names of all courses that have some students enrolled?",
        "select_candidates": [
            "select Courses.course_name",
            "select distinct Courses.course_name",
            "select Courses.course_name, Student_Enrolment.student_enrolment_id",
            "select Courses.course_name, Student_Enrolment.semester_id"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What's the name of the course with most number of enrollments?",
        "select_candidates": [
            "select Courses.course_name",
            "select Courses.course_name, Student_Enrolment.student_enrolment_id",
            "select Courses.course_name, Student_Enrolment.semester_id",
            "select Courses.course_name, Student_Enrolment.degree_program_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the name of the course with the most students enrolled?",
        "select_candidates": [
            "select Courses.course_name",
            "select Courses.course_name, Student_Enrolment.student_enrolment_id",
            "select Courses.course_name, Student_Enrolment.semester_id",
            "select Courses.course_name, Student_Enrolment.degree_program_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Find the last name of the students who currently live in the state of North Carolina but have not registered in any degree program.",
        "select_candidates": [
            "select Students.last_name",
            "select Students.last_name, Addresses.state_province_county",
            "select distinct Students.last_name",
            "select Students.last_name, Addresses.state_province_county, Students.current_address_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            0.0,
            1.0
        ]
    },
    {
        "question": "What are the last name of the students who live in North Carolina but have not registered in any degree programs?",
        "select_candidates": [
            "select Students.last_name",
            "select Students.last_name, Addresses.state_province_county",
            "select Students.last_name, Addresses.country",
            "select Students.last_name, Addresses.city"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            0.0,
            1.0
        ]
    },
    {
        "question": "Show the date and id of the transcript with at least 2 course results.",
        "select_candidates": [
            "select t12.c9, t12.c0",
            "select t8.c9, Student_Enrolment_Courses.student_course_id",
            "select t12.c9, t12.c1",
            "select t11.c9, t11.c0"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the date and id of the transcript with at least 2 courses listed?",
        "select_candidates": [
            "select t12.c9, t12.c0",
            "select t12.c9, t12.c1",
            "select t11.c9, t11.c0",
            "select Students.date_first_registered, Students.current_address_id"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the phone number of the man with the first name Timmothy and the last name Ward?",
        "select_candidates": [
            "select Students.cell_mobile_number",
            "select Students.cell_mobile_number, Students.last_name",
            "select Students.cell_mobile_number, Students.middle_name",
            "select Students.cell_mobile_number, Students.email_address"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the mobile phone number of the student named Timmothy Ward?",
        "select_candidates": [
            "select Students.cell_mobile_number",
            "select Students.cell_mobile_number, Students.last_name",
            "select Students.cell_mobile_number, Students.first_name",
            "select distinct Students.cell_mobile_number"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Who is the first student to register? List the first name, middle name and last name.",
        "select_candidates": [
            "select Students.first_name, Students.middle_name, Students.last_name",
            "select distinct Students.first_name, Students.middle_name, Students.last_name",
            "select Students.first_name, Students.middle_name, Students.last_name, Students.date_first_registered",
            "select Students.first_name, Students.last_name, Students.middle_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            1.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the first, middle, and last name of the first student to register?",
        "select_candidates": [
            "select Students.first_name, Students.middle_name, Students.last_name",
            "select distinct Students.first_name, Students.middle_name, Students.last_name",
            "select Students.first_name, Students.middle_name, Students.last_name, Students.date_first_registered",
            "select Students.first_name, Students.middle_name, Students.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            1.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Who is the earliest graduate of the school? List the first name, middle name and last name.",
        "select_candidates": [
            "select Students.first_name, Students.middle_name, Students.last_name",
            "select Students.first_name, Students.middle_name, Students.last_name, Students.current_address_id",
            "select distinct Students.first_name, Students.middle_name, Students.last_name",
            "select Students.first_name, Students.middle_name, Students.last_name, t8.c9"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the first, middle, and last name of the earliest school graduate?",
        "select_candidates": [
            "select Students.first_name, Students.middle_name, Students.last_name",
            "select distinct Students.first_name, Students.middle_name, Students.last_name",
            "select Students.first_name, Students.middle_name, Students.last_name, Students.date_first_registered",
            "select Students.first_name, Students.last_name, Students.middle_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            1.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Whose permanent address is different from his or her current address? List his or her first name.",
        "select_candidates": [
            "select Students.first_name",
            "select Students.first_name, Addresses.address_id",
            "select distinct Students.first_name",
            "select Students.first_name, Students.permanent_address_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the first name of the student whose permanent address is different from his or her current one?",
        "select_candidates": [
            "select Students.first_name",
            "select distinct Students.first_name",
            "select Students.first_name, Students.permanent_address_id",
            "select Students.first_name, Students.permanent_address_id, Students.first_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Which address holds the most number of students currently? List the address id and all lines.",
        "select_candidates": [
            "select Addresses.address_id, Addresses.line_1",
            "select distinct Addresses.address_id, Addresses.line_1",
            "select Addresses.address_id, Addresses.address_id, Addresses.line_1",
            "select count(*), Addresses.address_id, Addresses.line_1"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the id, line 1, and line 2 of the address with the most students?",
        "select_candidates": [
            "select Addresses.address_id, Addresses.line_1, Addresses.line_2",
            "select student_Addresses.address_id, Addresses.line_1, Addresses.line_2",
            "select student_address_Addresses.address_id, Addresses.line_1, Addresses.line_2",
            "select Addresses.address_id, Addresses.address_id, Addresses.line_1, Addresses.line_2"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "On average, when were the transcripts printed?",
        "select_candidates": [
            "select avg(t13.c3)",
            "select avg(t10.c6)",
            "select avg(t12.c6)",
            "select avg(t8.c8)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the average transcript date?",
        "select_candidates": [
            "select avg(t12.c6)",
            "select avg(t13.c13)",
            "select avg(t12.c9)",
            "select avg(t13.c3)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "When is the first transcript released? List the date and details.",
        "select_candidates": [
            "select t8.c9, Student_Enrolment_Courses.course_id0",
            "select Students.date_first_registered, Sections.other_details",
            "select t8.c9, Student_Enrolment_Courses.course_id2",
            "select t8.c9, Student_Enrolment_Courses.course_id1"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the earliest date of a transcript release, and what details can you tell me?",
        "select_candidates": [
            "select t11.c3, t11.c4",
            "select t12.c9, t12.c3",
            "select t12.c5, t12.c3",
            "select t12.c3, t12.c4"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            1.0
        ]
    },
    {
        "question": "How many transcripts are released?",
        "select_candidates": [
            "select count(*)",
            "select count(distinct Student_Enrolment_Courses.student_course_id)",
            "select t8.c3, count(*)",
            "select count(distinct Transcript_Contents.student_course_id)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How many transcripts are listed?",
        "select_candidates": [
            "select count(*)",
            "select count(distinct Transcript_Contents.student_course_id)",
            "select count(distinct t13.c0)",
            "select count(distinct Transcripts.transcript_id)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the last transcript release date?",
        "select_candidates": [
            "select t12.c5",
            "select t12.c12",
            "select t12.c3",
            "select max(t9.c6)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            1.0
        ]
    },
    {
        "question": "When was the last transcript released?",
        "select_candidates": [
            "select t12.c5",
            "select t12.c3",
            "select t12.c12",
            "select t11.c5"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How many times at most can a course enrollment result show in different transcripts? Also show the course enrollment id.",
        "select_candidates": [
            "select count(*), Sections.section_id",
            "select count(*), Transcripts.transcript_id",
            "select count(*), t12.c0",
            "select count(*), Transcript_Contents.student_course_id"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            1.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the maximum number of times that a course shows up in different transcripts and what is that course's enrollment id?",
        "select_candidates": [
            "select count(*), Sections.course_id",
            "select count(*), Sections.section_id",
            "select count(*), Students.student_id",
            "select max(Students.cell_mobile_number), Students.student_id"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            1.0
        ]
    },
    {
        "question": "Show the date of the transcript which shows the least number of results, also list the id.",
        "select_candidates": [
            "select Students.date_first_registered, Students.student_id",
            "select t12.c9, t12.c0",
            "select t8.c9, Student_Enrolment_Courses.student_course_id",
            "select Students.date_first_registered, Sections.section_id"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the date and id of the transcript with the least number of results?",
        "select_candidates": [
            "select t12.c9, t12.c0",
            "select Students.date_first_registered, Students.student_id",
            "select t8.c9, Student_Enrolment_Courses.student_course_id",
            "select t11.c9, t11.c0"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Find the semester when both Master students and Bachelor students got enrolled in.",
        "select_candidates": [
            "select Semesters.semester_name",
            "select Semesters.semester_name, Semesters.semester_id",
            "select t5, t7.c9",
            "select Semesters.semester_name, Semesters.other_details"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the id of the semester that had both Masters and Bachelors students enrolled?",
        "select_candidates": [
            "select Student_Enrolment.student_enrolment_id",
            "select Student_Enrolment.degree_program_id",
            "select Student_Enrolment.other_details",
            "select Student_Enrolment.semester_id"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How many different addresses do the students currently live?",
        "select_candidates": [
            "select count(distinct Addresses.address_id)",
            "select count (distinct Addresses.address_id)",
            "select count(distinct Students.current_address_id)",
            "select count(distinct Addresses.line_2)"
        ],
        "select_labels": [
            0.0,
            0.0,
            1.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the different addresses that have students living there?",
        "select_candidates": [
            "select distinct Addresses.address_id",
            "select count(distinct Addresses.address_id)",
            "select distinct Addresses.address_id, count(distinct Students.current_address_id)",
            "select distinct Addresses.address_id, Students.current_address_id"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "List all the student details in reversed lexicographical order.",
        "select_candidates": [
            "select *",
            "select Student_Enrolment_Courses.course_id",
            "select Student_Enrolment_Courses.course_id, Student_Enrolment_Courses.student_enrolment_id",
            "select distinct Student_Enrolment_Courses.course_id"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-INTERSECT-SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What other details can you tell me about students in reverse alphabetical order?",
        "select_candidates": [
            "select Students.other_student_details",
            "select Students.current_address_id, Students.other_student_details",
            "select distinct Students.other_student_details",
            "select Students.current_address_id, Students.permanent_address_id, Students.other_student_details"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Describe the section h.",
        "select_candidates": [
            "select Sections.section_description",
            "select distinct Sections.section_description",
            "select Sections.section_name, Sections.section_description",
            "select Sections.section_description, Sections.section_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the description for the section named h?",
        "select_candidates": [
            "select Sections.section_description",
            "select Sections.course_id, Sections.section_description",
            "select Sections.section_description, Sections.section_name",
            "select Sections.section_name, Sections.section_description"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Find the first name of the students who permanently live in the country Haiti or have the cell phone number 09700166582.",
        "select_candidates": [
            "select Students.first_name",
            "select Students.first_name, Students.cell_mobile_number",
            "select Students.first_name, Addresses.country",
            "select distinct Students.first_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the first names of the students who live in Haiti permanently or have the cell phone number 09700166582?",
        "select_candidates": [
            "select Students.first_name",
            "select Students.first_name, Students.cell_mobile_number",
            "select distinct Students.first_name",
            "select Students.first_name, Students.cell_mobile_number, Addresses.country"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "List the title of all cartoons in alphabetical order.",
        "select_candidates": [
            "select Cartoon.Title",
            "select Cartoon.id, Cartoon.Title",
            "select Cartoon.Title, Cartoon.Written_by",
            "select distinct Cartoon.Title"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the titles of the cartoons sorted alphabetically?",
        "select_candidates": [
            "select Cartoon.Title",
            "select distinct Cartoon.Title",
            "select Cartoon.Title, Cartoon.Directed_by",
            "select Cartoon.Title, Cartoon.Written_by"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "List all cartoon directed by \"Ben Jones\".",
        "select_candidates": [
            "select Cartoon.Title",
            "select distinct Cartoon.Title",
            "select Cartoon.Title, Cartoon.Directed_by",
            "select distinct Cartoon.Title, Cartoon.Directed_by"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the names of all cartoons directed by Ben Jones?",
        "select_candidates": [
            "select Cartoon.Title",
            "select Cartoon.Title, Cartoon.Directed_by",
            "select distinct Cartoon.Title",
            "select TV_series.Episode"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How many cartoons were written by \"Joseph Kuhr\"?",
        "select_candidates": [
            "select count(*)",
            "select count(distinct Cartoon.Title)",
            "select count(distinct Cartoon.Written_by)",
            "select count (*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the number of cartoones written by Joseph Kuhr?",
        "select_candidates": [
            "select count(*)",
            "select count(distinct Cartoon.Written_by)",
            "select count (*)",
            "select count (distinct Cartoon.Written_by)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "list all cartoon titles and their directors ordered by their air date",
        "select_candidates": [
            "select Cartoon.Title, Cartoon.Directed_by",
            "select distinct Cartoon.Title, Cartoon.Directed_by",
            "select Cartoon.id, Cartoon.Title, Cartoon.Directed_by",
            "select Cartoon.Title, Cartoon.Directed_by, Cartoon.Original_air_date"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the name and directors of all the cartoons that are ordered by air date?",
        "select_candidates": [
            "select Cartoon.Title, Cartoon.Directed_by",
            "select Cartoon.Title, Cartoon.Directed_by, Cartoon.Original_air_date",
            "select Cartoon.id, Cartoon.Title, Cartoon.Directed_by",
            "select distinct Cartoon.Title, Cartoon.Directed_by"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ]
    },
    {
        "question": "List the title of all cartoon directed by \"Ben Jones\" or \"Brandon Vietti\".",
        "select_candidates": [
            "select Cartoon.Title",
            "select Cartoon.Title, Cartoon.Directed_by",
            "select distinct Cartoon.Title",
            "select Cartoon.id, Cartoon.Title"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the titles of all cartoons directed by Ben Jones or Brandon Vietti?",
        "select_candidates": [
            "select Cartoon.Title",
            "select Cartoon.Title, Cartoon.Directed_by",
            "select distinct Cartoon.Title",
            "select Cartoon.id, Cartoon.Title"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Which country has the most of TV Channels? List the country and number of TV Channels it has.",
        "select_candidates": [
            "select TV_Channel.Country, count(*)",
            "select TV_Channel.series_name, count(*)",
            "select distinct TV_Channel.Country, count(*)",
            "select TV_Channel.Language, count(*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the country with the most number of TV Channels and how many does it have?",
        "select_candidates": [
            "select TV_Channel.Country, count(*)",
            "select count(*), TV_Channel.Country",
            "select distinct TV_Channel.Country, count(*)",
            "select TV_Channel.series_name, count(*)"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "List the number of different series names and contents in the TV Channel table.",
        "select_candidates": [
            "select count(distinct TV_Channel.series_name), TV_Channel.Content",
            "select count(distinct TV_Channel.series_name), count(distinct TV_Channel.Content)",
            "select count (distinct TV_Channel.series_name), TV_Channel.Content",
            "select count (distinct TV_Channel.series_name), count(distinct TV_Channel.Content)"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How many different series and contents are listed in the TV Channel table?",
        "select_candidates": [
            "select count(distinct TV_Channel.series_name), TV_Channel.Content",
            "select count (distinct TV_Channel.series_name), TV_Channel.Content",
            "select count(distinct TV_Channel.series_name), count(distinct TV_Channel.Content)",
            "select count (distinct TV_Channel.series_name), count(distinct TV_Channel.Content)"
        ],
        "select_labels": [
            0.0,
            0.0,
            1.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the content of TV Channel with serial name \"Sky Radio\"?",
        "select_candidates": [
            "select TV_Channel.Content",
            "select distinct TV_Channel.Content",
            "select TV_Channel.Content, TV_Channel.series_name",
            "select TV_Channel.Language, TV_Channel.Content"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the content of the series Sky Radio?",
        "select_candidates": [
            "select TV_Channel.Content",
            "select distinct TV_Channel.Content",
            "select TV_Channel.Content, TV_Channel.series_name",
            "select TV_Channel.Content, min(TV_Channel.Content)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the Package Option of TV Channel with serial name \"Sky Radio\"?",
        "select_candidates": [
            "select TV_Channel.Package_Option",
            "select distinct TV_Channel.Package_Option",
            "select TV_Channel.Package_Option, TV_Channel.series_name",
            "select TV_Channel.Pay_per_view_PPV, TV_Channel.Package_Option"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the Package Options of the TV Channels whose series names are Sky Radio?",
        "select_candidates": [
            "select TV_Channel.Package_Option",
            "select distinct TV_Channel.Package_Option",
            "select TV_Channel.Pay_per_view_PPV, TV_Channel.Package_Option",
            "select TV_Channel.Package_Option, TV_Channel.series_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How many TV Channel using language English?",
        "select_candidates": [
            "select count(*)",
            "select count(distinct TV_Channel.id)",
            "select count(distinct TV_Channel.Language)",
            "select count(distinct TV_Channel.series_name)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How many TV Channels use the English language?",
        "select_candidates": [
            "select count(*)",
            "select count(distinct TV_Channel.Language)",
            "select count(distinct TV_Channel.id)",
            "select count(distinct TV_Channel.series_name)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "List the language used least number of TV Channel. List language and number of TV Channel.",
        "select_candidates": [
            "select TV_Channel.Language, count(*)",
            "select TV_Channel.Language, count(TV_Channel.id)",
            "select TV_Channel.Language, count(*), TV_Channel.Language",
            "select distinct TV_Channel.Language, count(*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the languages used by the least number of TV Channels and how many channels use it?",
        "select_candidates": [
            "select TV_Channel.Language, count(*)",
            "select distinct TV_Channel.Language, count(*)",
            "select TV_Channel.Language, count(distinct TV_Channel.id)",
            "select count(*), TV_Channel.Language"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            1.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "List each language and the number of TV Channels using it.",
        "select_candidates": [
            "select TV_Channel.Language, count(*)",
            "select count(*), TV_Channel.Language",
            "select distinct TV_Channel.Language, count(*)",
            "select TV_Channel.Language, count(*), TV_Channel.id"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "For each language, list the number of TV Channels that use it.",
        "select_candidates": [
            "select TV_Channel.Language, count(*)",
            "select count(*), TV_Channel.Language",
            "select distinct TV_Channel.Language, count(*)",
            "select sum(TV_Channel.Language), TV_Channel.Language"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the TV Channel that shows the cartoon \"The Rise of the Blue Beetle!\"? List the TV Channel's series name.",
        "select_candidates": [
            "select TV_Channel.series_name",
            "select distinct TV_Channel.series_name",
            "select TV_Channel.series_name, TV_Channel.Package_Option",
            "select TV_Channel.series_name, TV_Channel.series_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the series name of the TV Channel that shows the cartoon \"The Rise of the Blue Beetle\"?",
        "select_candidates": [
            "select TV_Channel.series_name",
            "select distinct TV_Channel.series_name",
            "select TV_Channel.series_name, TV_Channel.series_name",
            "select TV_Channel.series_name, TV_Channel.id, Cartoon.Channel"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "List the title of all Cartoons showed on TV Channel with series name \"Sky Radio\".",
        "select_candidates": [
            "select Cartoon.Title",
            "select Cartoon.Title, TV_Channel.series_name",
            "select distinct Cartoon.Title",
            "select Cartoon.Title, TV_Channel.series_name, TV_Channel.series_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the title of all the cartools that are on the TV Channel with the series name \"Sky Radio\"?",
        "select_candidates": [
            "select Cartoon.Title",
            "select Cartoon.Title, TV_Channel.series_name",
            "select Cartoon.Title, Cartoon.Written_by",
            "select Cartoon.Title, Cartoon.Directed_by"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "List the Episode of all TV series sorted by rating.",
        "select_candidates": [
            "select TV_series.Episode",
            "select TV_series.Episode, TV_series.Rating",
            "select TV_series.id, TV_series.Episode",
            "select distinct TV_series.Episode"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are all of the episodes ordered by ratings?",
        "select_candidates": [
            "select TV_series.Episode",
            "select distinct TV_series.Episode",
            "select TV_series.Episode, TV_series.Rating",
            "select TV_series.id, TV_series.Episode"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "List top 3 highest Rating TV series. List the TV series's Episode and Rating.",
        "select_candidates": [
            "select TV_series.Episode, TV_series.Rating",
            "select TV_series.id, TV_series.Episode, TV_series.Rating",
            "select TV_series.Episode, TV_series.Rating, TV_series.id",
            "select TV_series.Episode, TV_series.Rating, TV_series.Share"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are 3 most highly rated episodes in the TV series table and what were those ratings?",
        "select_candidates": [
            "select TV_series.Episode, TV_series.Rating",
            "select distinct TV_series.Episode, TV_series.Rating",
            "select TV_series.id, TV_series.Episode, TV_series.Rating",
            "select TV_series.Episode, TV_series.Rating, max(TV_series.Rating)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is minimum and maximum share of TV series?",
        "select_candidates": [
            "select min(TV_series.Share), max(TV_series.Share)",
            "select avg(TV_series.Share) min(TV_series.Share), max(TV_series.Share)",
            "select TV_series.Share, min(TV_series.Share), max(TV_series.Share)",
            "select avg(TV_series.Share), min(TV_series.Share), max(TV_series.Share)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the maximum and minimum share for the TV series?",
        "select_candidates": [
            "select max(TV_series.Share), min(TV_series.Share)",
            "select TV_series.Share, max(TV_series.Share), min(TV_series.Share)",
            "select max(TV_series.Share), min(TV_series.Share), TV_series.Share",
            "select maximum(TV_series.Share), min(TV_series.Share)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the air date of TV series with Episode \"A Love of a Lifetime\"?",
        "select_candidates": [
            "select TV_series.Air_Date",
            "select TV_series.Air_Date, TV_series.Episode",
            "select TV_series.id, TV_series.Air_Date",
            "select TV_series.Episode, TV_series.Air_Date"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "When did the episode \"A Love of a Lifetime\" air?",
        "select_candidates": [
            "select TV_series.Air_Date",
            "select TV_series.Air_Date, TV_series.Episode",
            "select TV_series.id, TV_series.Air_Date",
            "select TV_series.Air_Date, TV_series.Rating"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is Weekly Rank of TV series with Episode \"A Love of a Lifetime\"?",
        "select_candidates": [
            "select TV_series.Weekly_Rank",
            "select TV_series.Weekly_Rank, min(TV_series.Weekly_Rank)",
            "select TV_series.Weekly_Rank, TV_series.Episode",
            "select TV_series.Weekly_Rank, TV_series.18_49_Rating_Share"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the weekly rank for the episode \"A Love of a Lifetime\"?",
        "select_candidates": [
            "select TV_series.Weekly_Rank",
            "select TV_series.Weekly_Rank, TV_series.Episode",
            "select distinct TV_series.Weekly_Rank",
            "select TV_series.Weekly_Rank, min(TV_series.Weekly_Rank)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the TV Channel of TV series with Episode \"A Love of a Lifetime\"? List the TV Channel's series name.",
        "select_candidates": [
            "select TV_Channel.series_name",
            "select distinct TV_Channel.series_name",
            "select TV_Channel.series_name, TV_Channel.Package_Option",
            "select TV_Channel.series_name, TV_series.Channel"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the name of the series that has the episode \"A Love of a Lifetime\"?",
        "select_candidates": [
            "select TV_Channel.series_name",
            "select TV_Channel.series_name, TV_series.Episode",
            "select distinct TV_Channel.series_name",
            "select TV_Channel.series_name, TV_Channel.series_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "List the Episode of all TV series showed on TV Channel with series name \"Sky Radio\".",
        "select_candidates": [
            "select TV_series.Episode",
            "select TV_series.Episode, TV_Channel.series_name",
            "select distinct TV_series.Episode",
            "select TV_series.id, TV_Channel.series_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the episode for the TV series named \"Sky Radio\"?",
        "select_candidates": [
            "select TV_series.Episode",
            "select TV_series.Episode, TV_Channel.series_name",
            "select distinct TV_series.Episode",
            "select TV_series.Episode, TV_Channel.series_name, TV_Channel.series_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Find the number of cartoons directed by each of the listed directors.",
        "select_candidates": [
            "select Cartoon.Directed_by, count(*)",
            "select count(*), Cartoon.Directed_by",
            "select count(distinct Cartoon.Directed_by), Cartoon.Directed_by",
            "select Cartoon.Title, count(*)"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How many cartoons did each director create?",
        "select_candidates": [
            "select Cartoon.Directed_by, count(*)",
            "select count(*), Cartoon.Directed_by",
            "select Cartoon.Title, count(*)",
            "select distinct Cartoon.Directed_by, count(*)"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Find the production code and channel of the most recently aired cartoon.",
        "select_candidates": [
            "select Cartoon.Production_code, Cartoon.Channel",
            "select distinct Cartoon.Production_code, Cartoon.Channel",
            "select Cartoon.Production_code, Cartoon.Channel, Cartoon.Original_air_date",
            "select Cartoon.Production_code, Cartoon.Channel, max(Cartoon.Original_air_date)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the produdction code and channel of the most recent cartoon?",
        "select_candidates": [
            "select Cartoon.Production_code, Cartoon.Channel",
            "select distinct Cartoon.Production_code, Cartoon.Channel",
            "select Cartoon.Production_code, Cartoon.Channel, max(Cartoon.Original_air_date)",
            "select t2, Cartoon.Production_code, Cartoon.Channel"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Find the package choice and series name of the TV channel that has high definition TV.",
        "select_candidates": [
            "select TV_Channel.Package_Option, TV_Channel.series_name",
            "select TV_Channel.series_name, TV_Channel.Package_Option",
            "select distinct TV_Channel.Package_Option, TV_Channel.series_name",
            "select TV_Channel.Package_Option, TV_Channel.series_name, TV_Channel.series_name"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the package options and the name of the series for the TV Channel that supports high definition TV?",
        "select_candidates": [
            "select TV_Channel.Package_Option, TV_Channel.series_name",
            "select TV_Channel.series_name, TV_Channel.Package_Option",
            "select distinct TV_Channel.Package_Option, TV_Channel.series_name",
            "select distinct TV_Channel.series_name, TV_Channel.Package_Option"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "which countries' tv channels are playing some cartoon written by Todd Casey?",
        "select_candidates": [
            "select distinct TV_Channel.Country",
            "select TV_Channel.Country",
            "select distinct TV_Channel.Country, Cartoon.Channel",
            "select distinct TV_Channel.Country, Cartoon.Title"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the countries that have cartoons on TV that were written by Todd Casey?",
        "select_candidates": [
            "select distinct TV_Channel.Country",
            "select TV_Channel.Country",
            "select distinct TV_Channel.Country, Cartoon.Written_by",
            "select count(distinct TV_Channel.Country)"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "which countries' tv channels are not playing any cartoon written by Todd Casey?",
        "select_candidates": [
            "select distinct TV_Channel.Country",
            "select TV_Channel.Country",
            "select distinct TV_Channel.Country, Cartoon.Channel",
            "select TV_Channel.Country, Cartoon.Channel"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the countries that are not playing cartoons written by Todd Casey?",
        "select_candidates": [
            "select distinct TV_Channel.Country",
            "select TV_Channel.Country",
            "select TV_Channel.Country, TV_Channel.series_name",
            "select distinct TV_Channel.Country, TV_Channel.series_name"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Find the series name and country of the tv channel that is playing some cartoons directed by Ben Jones and Michael Chang?",
        "select_candidates": [
            "select TV_Channel.series_name, TV_Channel.Country",
            "select distinct TV_Channel.series_name, TV_Channel.Country",
            "select TV_Channel.series_name, TV_Channel.Country, TV_Channel.series_name",
            "select TV_Channel.series_name, TV_Channel.Country, TV_Channel.Content"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ]
    },
    {
        "question": "What is the series name and country of all TV channels that are playing cartoons directed by Ben Jones and cartoons directed by Michael Chang?",
        "select_candidates": [
            "select TV_Channel.series_name, TV_Channel.Country",
            "select distinct TV_Channel.series_name, TV_Channel.Country",
            "select TV_Channel.series_name, TV_Channel.Country, TV_Channel.Content",
            "select TV_Channel.series_name, TV_Channel.Country, TV_Channel.series_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "find the pixel aspect ratio and nation of the tv channels that do not use English.",
        "select_candidates": [
            "select TV_Channel.Pixel_aspect_ratio_PAR, TV_Channel.Country",
            "select distinct TV_Channel.Pixel_aspect_ratio_PAR, TV_Channel.Country",
            "select TV_Channel.Pixel_aspect_ratio_PAR, TV_Channel.Country, TV_Channel.Language",
            "select TV_Channel.series_name, TV_Channel.Country"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the pixel aspect ratio and country of origin for all TV channels that do not use English?",
        "select_candidates": [
            "select TV_Channel.Pixel_aspect_ratio_PAR, TV_Channel.Country",
            "select distinct TV_Channel.Pixel_aspect_ratio_PAR, TV_Channel.Country",
            "select TV_Channel.Pixel_aspect_ratio_PAR, TV_Channel.Country, TV_Channel.Language",
            "select max(TV_Channel.Pixel_aspect_ratio_PAR), TV_Channel.Country"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "find id of the tv channels that from the countries where have more than two tv channels.",
        "select_candidates": [
            "select TV_Channel.id",
            "select TV_Channel.id, count(*)",
            "select distinct TV_Channel.id",
            "select TV_Channel.id, TV_Channel.Country"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the ids of all tv channels that have more than 2 TV channels?",
        "select_candidates": [
            "select TV_Channel.id",
            "select TV_Channel.id, count(*)",
            "select distinct TV_Channel.id",
            "select count(distinct TV_Channel.id)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "find the id of tv channels that do not play any cartoon directed by Ben Jones.",
        "select_candidates": [
            "select TV_Channel.id",
            "select distinct TV_Channel.id",
            "select TV_Channel.id, TV_Channel.id",
            "select TV_Channel.id, TV_Channel.series_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ]
    },
    {
        "question": "What are the ids of the TV channels that do not have any cartoons directed by Ben Jones?",
        "select_candidates": [
            "select TV_Channel.id",
            "select distinct TV_Channel.id",
            "select TV_Channel.id, TV_Channel.id",
            "select TV_Channel.id, TV_Channel.series_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "find the package option of the tv channel that do not have any cartoon directed by Ben Jones.",
        "select_candidates": [
            "select TV_Channel.Package_Option",
            "select distinct TV_Channel.Package_Option",
            "select TV_Channel.Package_Option, TV_Channel.Pay_per_view_PPV",
            "select TV_Channel.Package_Option, TV_Channel.Package_Option"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ]
    },
    {
        "question": "What are the package options of all tv channels that are not playing any cartoons directed by Ben Jones?",
        "select_candidates": [
            "select TV_Channel.Package_Option",
            "select distinct TV_Channel.Package_Option",
            "select TV_Channel.Pay_per_view_PPV, TV_Channel.Package_Option",
            "select TV_Channel.Package_Option, TV_Channel.Pay_per_view_PPV"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ]
    },
    {
        "question": "How many poker players are there?",
        "select_candidates": [
            "select count(*)",
            "select count(distinct poker_player.Poker_Player_ID)",
            "select count(distinct poker_player.People_ID)",
            "select count(*), poker_player.People_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Count the number of poker players.",
        "select_candidates": [
            "select count(*)",
            "select count(distinct poker_player.Poker_Player_ID)",
            "select count(distinct poker_player.People_ID)",
            "select count(*), poker_player.Poker_Player_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "List the earnings of poker players in descending order.",
        "select_candidates": [
            "select poker_player.Earnings",
            "select poker_player.Earnings, poker_player.People_ID",
            "select distinct poker_player.Earnings",
            "select poker_player.Earnings, poker_player.Final_Table_Made"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the earnings of poker players, ordered descending by value?",
        "select_candidates": [
            "select poker_player.Earnings",
            "select max(poker_player.Earnings), poker_player.Earnings",
            "select sum(poker_player.Earnings), poker_player.Earnings",
            "select sum(poker_player.Earnings)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "List the final tables made and the best finishes of poker players.",
        "select_candidates": [
            "select poker_player.Final_Table_Made, poker_player.Best_Finish",
            "select distinct poker_player.Final_Table_Made, poker_player.Best_Finish",
            "select poker_player.Best_Finish, poker_player.Final_Table_Made",
            "select poker_player.People_ID, poker_player.Final_Table_Made, poker_player.Best_Finish"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the final tables made and best finishes for all poker players?",
        "select_candidates": [
            "select poker_player.Final_Table_Made, poker_player.Best_Finish",
            "select distinct poker_player.Final_Table_Made, poker_player.Best_Finish",
            "select poker_player.Best_Finish, poker_player.Final_Table_Made",
            "select poker_player.People_ID, poker_player.Final_Table_Made, poker_player.Best_Finish"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the average earnings of poker players?",
        "select_candidates": [
            "select avg(poker_player.Earnings)",
            "select avg(poker_player.Earnings), poker_player.Earnings",
            "select the avg(poker_player.Earnings)",
            "select avg(poker_player.Earnings), min(poker_player.Earnings)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Return the average earnings across all poker players.",
        "select_candidates": [
            "select avg(poker_player.Earnings)",
            "select poker_player.Earnings, avg(poker_player.Earnings)",
            "select the avg(poker_player.Earnings)",
            "select avg(poker_player.Earnings), poker_player.Earnings"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the money rank of the poker player with the highest earnings?",
        "select_candidates": [
            "select poker_player.Money_Rank",
            "select distinct poker_player.Money_Rank",
            "select poker_player.Money_Rank, poker_player.Earnings",
            "select poker_player.Money_Rank, max(poker_player.Earnings)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Return the money rank of the player with the greatest earnings.",
        "select_candidates": [
            "select poker_player.Money_Rank",
            "select distinct poker_player.Money_Rank",
            "select poker_player.Money_Rank, poker_player.Earnings",
            "select poker_player.Money_Rank, max(poker_player.Earnings)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the maximum number of final tables made among poker players with earnings less than 200000?",
        "select_candidates": [
            "select max(poker_player.Final_Table_Made)",
            "select max(distinct poker_player.Final_Table_Made)",
            "select maximum(distinct poker_player.Final_Table_Made)",
            "select avg(poker_player.Final_Table_Made)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Return the maximum final tables made across all poker players who have earnings below 200000.",
        "select_candidates": [
            "select max(poker_player.Final_Table_Made)",
            "select avg(poker_player.Final_Table_Made)",
            "select max(poker_player.Final_Table_Made), poker_player.Earnings",
            "select maximum(poker_player.Final_Table_Made)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the names of poker players?",
        "select_candidates": [
            "select people.Name",
            "select distinct people.Name",
            "select people.Name, poker_player.People_ID",
            "select poker_player.People_ID, people.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Return the names of all the poker players.",
        "select_candidates": [
            "select people.Name",
            "select distinct people.Name",
            "select people.Name, poker_player.People_ID",
            "select poker_player.People_ID, people.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the names of poker players whose earnings is higher than 300000?",
        "select_candidates": [
            "select people.Name",
            "select people.Name, poker_player.People_ID",
            "select distinct people.Name",
            "select people.Name, poker_player.Earnings"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Give the names of poker players who have earnings above 300000.",
        "select_candidates": [
            "select people.Name",
            "select people.Name, poker_player.People_ID",
            "select distinct people.Name",
            "select distinct people.Name, poker_player.People_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "List the names of poker players ordered by the final tables made in ascending order.",
        "select_candidates": [
            "select people.Name",
            "select people.Name, poker_player.People_ID",
            "select poker_player.People_ID, people.Name",
            "select distinct people.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ]
    },
    {
        "question": "What are the names of poker players, ordered ascending by the number of final tables they have made?",
        "select_candidates": [
            "select people.Name",
            "select people.Name, poker_player.People_ID",
            "select poker_player.People_ID, people.Name",
            "select people.Name, poker_player.Final_Table_Made"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the birth date of the poker player with the lowest earnings?",
        "select_candidates": [
            "select people.Birth_Date",
            "select people.Birth_Date, poker_player.Earnings",
            "select distinct people.Birth_Date",
            "select people.Birth_Date, min(poker_player.Earnings)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Return the birth date of the poker player with the lowest earnings.",
        "select_candidates": [
            "select people.Birth_Date",
            "select people.Birth_Date, poker_player.Earnings",
            "select people.Birth_Date, min(poker_player.Earnings)",
            "select distinct people.Birth_Date"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the money rank of the tallest poker player?",
        "select_candidates": [
            "select poker_player.Money_Rank",
            "select distinct poker_player.Money_Rank",
            "select poker_player.Money_Rank, people.Height",
            "select money_rank, poker_player.Money_Rank"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Return the money rank of the poker player with the greatest height.",
        "select_candidates": [
            "select poker_player.Money_Rank",
            "select distinct poker_player.Money_Rank",
            "select poker_player.Money_Rank, people.Height",
            "select poker_player.Money_Rank, poker_player.People_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the average earnings of poker players with height higher than 200?",
        "select_candidates": [
            "select avg(poker_player.Earnings)",
            "select avg(poker_player.Earnings), people.Height",
            "select an_avg(poker_player.Earnings)",
            "select the avg(poker_player.Earnings)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Give average earnings of poker players who are taller than 200.",
        "select_candidates": [
            "select avg(poker_player.Earnings)",
            "select poker_player.Earnings, avg(poker_player.Earnings)",
            "select avg(poker_player.Earnings), people.Height",
            "select avg(poker_player.Earnings), poker_player.Earnings"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the names of poker players in descending order of earnings?",
        "select_candidates": [
            "select people.Name",
            "select people.Name, poker_player.People_ID",
            "select people.Name, poker_player.Earnings",
            "select distinct people.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Return the names of poker players sorted by their earnings descending.",
        "select_candidates": [
            "select people.Name",
            "select people.Name, poker_player.Earnings",
            "select people.Name, poker_player.People_ID",
            "select distinct people.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are different nationalities of people and the corresponding number of people from each nation?",
        "select_candidates": [
            "select people.Nationality, count(*)",
            "select distinct people.Nationality, count(*)",
            "select count(*), people.Nationality",
            "select people.Nationality, count(*), people.People_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How many people are there of each nationality?",
        "select_candidates": [
            "select people.Nationality, count(*)",
            "select count(*), people.Nationality",
            "select avg(people.Nationality), count(*)",
            "select sum(people.Nationality), people.Nationality"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the most common nationality of people?",
        "select_candidates": [
            "select people.Nationality",
            "select people.Nationality, people.Name",
            "select people.Nationality, people.Birth_Date",
            "select people.Nationality, people.People_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Give the nationality that is most common across all people.",
        "select_candidates": [
            "select people.Nationality",
            "select people.Nationality, people.Name",
            "select people.Nationality, people.Birth_Date",
            "select people.Nationality, people.People_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the nationalities that are shared by at least two people?",
        "select_candidates": [
            "select people.Nationality",
            "select distinct people.Nationality",
            "select people.Nationality, people.Name",
            "select people.Nationality, count(*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Return the nationalities for which there are two or more people.",
        "select_candidates": [
            "select people.Nationality",
            "select people.Nationality, count(*)",
            "select distinct people.Nationality",
            "select people.Nationality for which there are two or more people."
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "List the names and birth dates of people in ascending alphabetical order of name.",
        "select_candidates": [
            "select people.Name, people.Birth_Date",
            "select people.Birth_Date, people.Name",
            "select distinct people.Name, people.Birth_Date",
            "select people.Nationality, people.Birth_Date"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the names and birth dates of people, ordered by their names in alphabetical order?",
        "select_candidates": [
            "select people.Name, people.Birth_Date",
            "select people.Birth_Date, people.Name",
            "select distinct people.Name, people.Birth_Date",
            "select people.Height, people.Birth_Date"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Show names of people whose nationality is not \"Russia\".",
        "select_candidates": [
            "select people.Name",
            "select distinct people.Name",
            "select people.Name, people.Nationality",
            "select people.Name, people.People_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the names of people who are not from Russia?",
        "select_candidates": [
            "select people.Name",
            "select distinct people.Name",
            "select people.Name, people.Nationality",
            "select people.Name, people.People_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "List the names of people that are not poker players.",
        "select_candidates": [
            "select people.Name",
            "select distinct people.Name",
            "select people.Name, people.People_ID",
            "select people.Name, poker_player.People_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the names of people who do not play poker?",
        "select_candidates": [
            "select people.Name",
            "select people.Name, people.People_ID",
            "select distinct people.Name",
            "select people.Name, poker_player.People_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How many distinct nationalities are there?",
        "select_candidates": [
            "select count(distinct people.Nationality)",
            "select count (distinct people.Nationality)",
            "select countdistinct people.Nationality",
            "select count distinct people.Nationality"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Count the number of different nationalities.",
        "select_candidates": [
            "select count(distinct people.Nationality)",
            "select count (distinct people.Nationality)",
            "select count distinct people.Nationality",
            "select counts(distinct people.Nationality)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How many states are there?",
        "select_candidates": [
            "select count(*)",
            "select count(distinct AREA_CODE_STATE.state)",
            "select count (distinct AREA_CODE_STATE.state)",
            "select count(distinct AREA_CODE_STATE.state)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "List the contestant numbers and names, ordered by contestant name descending.",
        "select_candidates": [
            "select CONTESTANTS.contestant_number, CONTESTANTS.contestant_name",
            "select distinct CONTESTANTS.contestant_number, CONTESTANTS.contestant_name",
            "select CONTESTANTS.contestant_number, CONTESTANTS.contestant_name, t1.c2",
            "select CONTESTANTS.contestant_number, CONTESTANTS.contestant_name, CONTESTANTS.contestant_number"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "List the vote ids, phone numbers and states of all votes.",
        "select_candidates": [
            "select VOTES.vote_id, VOTES.phone_number, VOTES.state",
            "select distinct VOTES.vote_id, VOTES.phone_number, VOTES.state",
            "select CONTESTANTS.contestant_number, VOTES.phone_number, VOTES.state",
            "select VOTES.vote_id, VOTES.phone_number.c1, VOTES.state"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the maximum and minimum values of area codes?",
        "select_candidates": [
            "select max(AREA_CODE_STATE.area_code), min(AREA_CODE_STATE.area_code)",
            "select max(t0.c2), min(t0.c2)",
            "select max(t0.c6), min(t0.c6)",
            "select max(t0.c3), min(t0.c3)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is last date created of votes from the state 'CA'?",
        "select_candidates": [
            "select VOTES.created",
            "select max(VOTES.created)",
            "select VOTES.created, max(VOTES.created)",
            "select last(VOTES.created)"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the names of the contestants whose names are not 'Jessie Alloway'",
        "select_candidates": [
            "select CONTESTANTS.contestant_name",
            "select distinct CONTESTANTS.contestant_name",
            "select CONTESTANTS.contestant_number, CONTESTANTS.contestant_name",
            "select CONTESTANTS.contestant_name, t1.c2"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the distinct states and create time of all votes?",
        "select_candidates": [
            "select distinct VOTES.state, VOTES.created",
            "select distinct VOTES.contestant_number, VOTES.created",
            "select distinct VOTES.created, VOTES.contestant_number",
            "select distinct VOTES.created, VOTES.created"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the contestant numbers and names of the contestants who had at least two votes?",
        "select_candidates": [
            "select CONTESTANTS.contestant_number, CONTESTANTS.contestant_name",
            "select VOTES.contestant_number, CONTESTANTS.contestant_name",
            "select distinct CONTESTANTS.contestant_number, CONTESTANTS.contestant_name",
            "select CONTESTANTS.contestant_number, CONTESTANTS.contestant_name, count(*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Of all the contestants who got voted, what is the contestant number and name of the contestant who got least votes?",
        "select_candidates": [
            "select CONTESTANTS.contestant_number, CONTESTANTS.contestant_name",
            "select VOTES.contestant_number, CONTESTANTS.contestant_name",
            "select CONTESTANTS.contestant_number, CONTESTANTS.contestant_name, VOTES.contestant_number",
            "select CONTESTANTS.contestant_number, CONTESTANTS.contestant_name, count(*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            1.0
        ]
    },
    {
        "question": "What are the number of votes from state 'NY' or 'CA'?",
        "select_candidates": [
            "select count(*)",
            "select count(*), AREA_CODE_STATE.state",
            "select count(*), VOTES.state",
            "select count(distinct VOTES.state)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How many contestants did not get voted?",
        "select_candidates": [
            "select count(*)",
            "select count(distinct CONTESTANTS.contestant_name)",
            "select count(*), CONTESTANTS.contestant_name",
            "select count(distinct t1, CONTESTANTS.contestant_name)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the area code in which the most voters voted?",
        "select_candidates": [
            "select AREA_CODE_STATE.area_code",
            "select AREA_CODE_STATE.area_code, count(*)",
            "select AREA_CODE_STATE.area_code, VOTES.phone_number",
            "select AREA_CODE_STATE.area_code, VOTES.state"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the create dates, states, and phone numbers of the votes that were for the contestant named 'Tabatha Gehling'?",
        "select_candidates": [
            "select VOTES.created, VOTES.state, VOTES.phone_number",
            "select VOTES.created, VOTES.phone_number, VOTES.state",
            "select VOTES.created, VOTES.contestant_number, VOTES.phone_number",
            "select distinct VOTES.created, VOTES.state, VOTES.phone_number"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "List the area codes in which voters voted both for the contestant 'Tabatha Gehling' and the contestant 'Kelly Clauss'.",
        "select_candidates": [
            "select AREA_CODE_STATE.area_code",
            "select distinct AREA_CODE_STATE.area_code",
            "select AREA_CODE_STATE.area_code, AREA_CODE_STATE.area_code",
            "select AREA_CODE_STATE.area_code, VOTES.phone_number"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ]
    },
    {
        "question": "Return the names of the contestants whose names contain the substring 'Al'.",
        "select_candidates": [
            "select CONTESTANTS.contestant_name",
            "select distinct CONTESTANTS.contestant_name",
            "select CONTESTANTS.contestant_name, t1.c2",
            "select CONTESTANTS.contestant_name, CONTESTANTS.contestant_number"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the names of all the countries that became independent after 1950?",
        "select_candidates": [
            "select country.Name",
            "select country.Name, city.Name",
            "select distinct country.Name",
            "select country.Name, country.Code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Give the names of the nations that were founded after 1950.",
        "select_candidates": [
            "select country.Name",
            "select distinct country.Name",
            "select country.Name, country.Code",
            "select country.Name, city.CountryCode"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How many countries have a republic as their form of government?",
        "select_candidates": [
            "select count(*)",
            "select count(distinct country.Name)",
            "select count(distinct country.Code)",
            "select count(distinct country.Continent)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How many countries have governments that are republics?",
        "select_candidates": [
            "select count(*)",
            "select count(distinct country.Name)",
            "select count(distinct country.Code)",
            "select count(distinct country.Continent)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the total surface area of the countries in the Caribbean region?",
        "select_candidates": [
            "select sum(country.SurfaceArea)",
            "select sum(country.SurfaceArea), country.Region",
            "select sum(country.SurfaceArea), country.SurfaceArea",
            "select avg(country.SurfaceArea)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How much surface area do the countires in the Carribean cover together?",
        "select_candidates": [
            "select sum(country.SurfaceArea)",
            "select country.SurfaceArea",
            "select country.Region, sum(country.SurfaceArea)",
            "select count(*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Which continent is Anguilla in?",
        "select_candidates": [
            "select country.Continent",
            "select distinct country.Continent",
            "select country.Continent, country.Name",
            "select country.Code, country.Continent"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the continent name which Anguilla belongs to?",
        "select_candidates": [
            "select country.Continent",
            "select distinct country.Continent",
            "select country.Continent, country.Name",
            "select country.Code, country.Continent"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Which region is the city Kabul located in?",
        "select_candidates": [
            "select country.Region",
            "select distinct country.Region",
            "select country.Region, city.Name",
            "select country.Region, city.Name, city.Population"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What region is Kabul in?",
        "select_candidates": [
            "select country.Region",
            "select distinct country.Region",
            "select country.Region, city.Name",
            "select country.Region, city.Name, city.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Which language is the most popular in Aruba?",
        "select_candidates": [
            "select countrylanguage.Language",
            "select countrylanguage.Language, country.Name",
            "select countrylanguage.Language, country.Name, countrylanguage.Language",
            "select countrylanguage.Language, country.Name, countrylanguage.Percentage"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ]
    },
    {
        "question": "What language is predominantly spoken in Aruba?",
        "select_candidates": [
            "select countrylanguage.Language",
            "select countrylanguage.Language, country.Name",
            "select countrylanguage.Language, countrylanguage.Percentage",
            "select countrylanguage.CountryCode, countrylanguage.Language"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ]
    },
    {
        "question": "What are the population and life expectancies in Brazil?",
        "select_candidates": [
            "select country.Population, country.LifeExpectancy",
            "select distinct country.Population, country.LifeExpectancy",
            "select country.Population, country.LifeExpectancy, country.Name",
            "select country.Population, country.LifeExpectancy, country.Code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Give me Brazil\u2019s population and life expectancies.",
        "select_candidates": [
            "select country.Population, country.LifeExpectancy",
            "select country.IndepYear, country.Population, country.LifeExpectancy",
            "select distinct country.Population, country.LifeExpectancy",
            "select t1.c4, country.Population, country.LifeExpectancy"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the region and population of Angola?",
        "select_candidates": [
            "select country.Region, country.Population",
            "select distinct country.Region, country.Population",
            "select country.Region, country.Population, country.Code",
            "select country.Region, country.Population, country.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What region does Angola belong to and what is its population?",
        "select_candidates": [
            "select country.Region, country.Population",
            "select distinct country.Region, country.Population",
            "select t2, country.Region, country.Population",
            "select country.Region, country.Population, country.Code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the average expected life expectancy for countries in the region of Central Africa?",
        "select_candidates": [
            "select avg(country.LifeExpectancy)",
            "select avg(country.LifeExpectancy), country.Population",
            "select anadvanced(country.LifeExpectancy)",
            "select the avg(country.LifeExpectancy)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How long is the people\u2019s average life expectancy in Central Africa?",
        "select_candidates": [
            "select avg(country.LifeExpectancy)",
            "select avg(country.LifeExpectancy), country.Population",
            "select the avg(country.LifeExpectancy)",
            "select anadvanced(country.LifeExpectancy)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the name of country that has the shortest life expectancy in Asia?",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.LifeExpectancy",
            "select country.Name, country.LifeExpectancy, min(country.LifeExpectancy)",
            "select country.Name, country.Continent"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            1.0
        ]
    },
    {
        "question": "Give the name of the country in Asia with the lowest life expectancy.",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Continent",
            "select country.Name, country.Continent, min(country.LifeExpectancy)",
            "select country.Name, country.LifeExpectancy"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the total population and maximum GNP in Asia?",
        "select_candidates": [
            "select sum(country.Population), max(country.GNP)",
            "select max(country.GNP), sum(country.Population)",
            "select avg(country.Population), max(country.GNP)",
            "select sum(country.Population), max(country.Population)"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How many people live in Asia, and what is the largest GNP among them?",
        "select_candidates": [
            "select country.Population, country.GNP",
            "select max(country.GNP), min(country.Population)",
            "select country.Population, max(country.GNP)",
            "select country.Name, country.GNP"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the average life expectancy in African countries that are republics?",
        "select_candidates": [
            "select avg(country.LifeExpectancy)",
            "select avg(country.LifeExpectancy), country.LocalName",
            "select avg(country.LifeExpectancy), country.Population",
            "select avg(country.LifeExpectancy), country.GovernmentForm"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Give the average life expectancy for countries in Africa which are republics?",
        "select_candidates": [
            "select avg(country.LifeExpectancy)",
            "select avg(country.LifeExpectancy), country.Name",
            "select avg(country.LifeExpectancy), country.LocalName",
            "select anadvanced(country.LifeExpectancy)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the total surface area of the continents Asia and Europe?",
        "select_candidates": [
            "select sum(country.SurfaceArea)",
            "select sum(country.SurfaceArea), country.Continent",
            "select avg(country.SurfaceArea)",
            "select country.SurfaceArea, sum(country.SurfaceArea)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Give the total surface area covered by countries in Asia or Europe.",
        "select_candidates": [
            "select sum(country.SurfaceArea)",
            "select sum(country.SurfaceArea), country.SurfaceArea",
            "select avg(country.SurfaceArea)",
            "select sum(country.SurfaceArea), country.Continent"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How many people live in Gelderland district?",
        "select_candidates": [
            "select sum(city.Population)",
            "select city.Population",
            "select sum(city.Population), city.District",
            "select max(city.Population)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the total population of Gelderland district?",
        "select_candidates": [
            "select sum(city.Population)",
            "select sum(city.Population), city.District",
            "select city.District, sum(city.Population)",
            "select city.Population, sum(city.Population)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the average GNP and total population in all nations whose government is US territory?",
        "select_candidates": [
            "select avg(country.GNP), sum(country.Population)",
            "select sum(country.Population), avg(country.GNP)",
            "select avg(country.GNP), total(country.Population)",
            "select sum(country.GNP), avg(country.Population)"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Give the mean GNP and total population of nations which are considered US territory.",
        "select_candidates": [
            "select avg(country.GNP), sum(country.Population)",
            "select sum(country.GNP), sum(country.Population)",
            "select sum(country.GNP), avg(country.Population)",
            "select sum(country.GNP), country.Population"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How many unique languages are spoken in the world?",
        "select_candidates": [
            "select count(distinct countrylanguage.Language)",
            "select count (distinct countrylanguage.Language)",
            "select count(distinct countrylanguage.Language), count(distinct countrylanguage.Language)",
            "select count(distinct countrylanguage.Language), count(distinct countrylanguage.IsOfficial)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the number of distinct languages used around the world?",
        "select_candidates": [
            "select count(distinct countrylanguage.Language)",
            "select count (distinct countrylanguage.Language)",
            "select count(distinct countrylanguage.Language), count(distinct countrylanguage.Language)",
            "select count(distinct countrylanguage.Language), count(distinct countrylanguage.IsOfficial)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How many type of governments are in Africa?",
        "select_candidates": [
            "select count(distinct country.GovernmentForm)",
            "select count(distinct country.Name)",
            "select count (distinct country.GovernmentForm)",
            "select count (distinct country.Name)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How many different forms of governments are there in Africa?",
        "select_candidates": [
            "select count(distinct country.GovernmentForm)",
            "select count (distinct country.GovernmentForm)",
            "select count(distinct country.Name)",
            "select count (distinct country.Name)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the total number of languages used in Aruba?",
        "select_candidates": [
            "select count(distinct countrylanguage.Language)",
            "select count(*)",
            "select count (distinct countrylanguage.Language)",
            "select count(distinct country.Name)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How many languages are spoken in Aruba?",
        "select_candidates": [
            "select count(distinct countrylanguage.Language)",
            "select count(*)",
            "select count(distinct country.Name)",
            "select count (distinct countrylanguage.Language)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How many official languages does Afghanistan have?",
        "select_candidates": [
            "select count(distinct countrylanguage.Language)",
            "select count(*)",
            "select count(distinct countrylanguage.IsOfficial)",
            "select count (distinct countrylanguage.Language)"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How many official languages are spoken in Afghanistan?",
        "select_candidates": [
            "select count(distinct countrylanguage.Language)",
            "select count(distinct countrylanguage.IsOfficial)",
            "select count(*)",
            "select count (distinct countrylanguage.Language)"
        ],
        "select_labels": [
            0.0,
            0.0,
            1.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is name of the country that speaks the largest number of languages?",
        "select_candidates": [
            "select country.Name",
            "select country.Name, countrylanguage.Language",
            "select country.Name, count(*)",
            "select country.Name, count(distinct countrylanguage.Language)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Give the name of the nation that uses the greatest amount of languages.",
        "select_candidates": [
            "select country.Name",
            "select country.Name, countrylanguage.Language",
            "select country.Name, country.Code",
            "select country.Name, country.Code, countrylanguage.Language"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Which continent has the most diverse languages?",
        "select_candidates": [
            "select country.Continent",
            "select country.Continent, countrylanguage.Language",
            "select distinct country.Continent",
            "select country.Continent, count(distinct countrylanguage.Language)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Which continent speaks the most languages?",
        "select_candidates": [
            "select country.Continent",
            "select country.Continent, countrylanguage.Language",
            "select country.Continent, count(*)",
            "select country.Continent, country.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How many countries speak both English and Dutch?",
        "select_candidates": [
            "select count(*)",
            "select count(distinct countrylanguage.Language)",
            "select count(*), countrylanguage.Language",
            "select count(distinct countrylanguage.CountryCode)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            0.0,
            0.0
        ]
    },
    {
        "question": "What is the number of nations that use English and Dutch?",
        "select_candidates": [
            "select count(*)",
            "select count(distinct countrylanguage.Language)",
            "select count(*), countrylanguage.Language",
            "select count (distinct countrylanguage.Language)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            0.0,
            0.0
        ]
    },
    {
        "question": "What are the names of nations speak both English and French?",
        "select_candidates": [
            "select country.Name",
            "select country.Name, countrylanguage.Language",
            "select country.Name, country.Code",
            "select country.Code, country.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Give the names of nations that speak both English and French.",
        "select_candidates": [
            "select country.Name",
            "select country.Name, countrylanguage.Language",
            "select country.Name, country.Code",
            "select country.Name, country.Continent"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the names of nations where both English and French are official languages?",
        "select_candidates": [
            "select country.Name",
            "select country.Name, countrylanguage.Language",
            "select country.Name, countrylanguage.IsOfficial",
            "select distinct country.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Give the names of countries with English and French as official languages.",
        "select_candidates": [
            "select country.Name",
            "select country.Name, countrylanguage.Language",
            "select country.Name, countrylanguage.Language, countrylanguage.IsOfficial",
            "select country.Name, countrylanguage.IsOfficial"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            1.0
        ]
    },
    {
        "question": "What is the number of distinct continents where Chinese is spoken?",
        "select_candidates": [
            "select count(distinct country.Continent)",
            "select count (distinct country.Continent)",
            "select count(distinct country.Continent), countrylanguage.Language",
            "select count distinct country.Continent"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How many continents speak Chinese?",
        "select_candidates": [
            "select count(distinct country.Continent)",
            "select count(*)",
            "select count (distinct country.Continent)",
            "select count(distinct country.Continent), countrylanguage.Language"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the regions that use English or Dutch?",
        "select_candidates": [
            "select country.Region",
            "select distinct country.Region",
            "select country.Region, countrylanguage.Language",
            "select country.Region, country.Code"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Which regions speak Dutch or English?",
        "select_candidates": [
            "select country.Region",
            "select distinct country.Region",
            "select country.Region, countrylanguage.Language",
            "select distinct country.Region, countrylanguage.Language"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the countries where either English or Dutch is the official language?",
        "select_candidates": [
            "select country.Name",
            "select distinct country.Name",
            "select country.Name, countrylanguage.IsOfficial",
            "select country.Name, countrylanguage.Language"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            1.0
        ]
    },
    {
        "question": "Which countries have either English or Dutch as an official language?",
        "select_candidates": [
            "select country.Name",
            "select distinct country.Name",
            "select country.Name, countrylanguage.IsOfficial",
            "select country.Name, countrylanguage.Language"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            1.0
        ]
    },
    {
        "question": "Which language is the most popular on the Asian continent?",
        "select_candidates": [
            "select countrylanguage.Language",
            "select countrylanguage.Language, country.Name",
            "select countrylanguage.Language, country.Name, countrylanguage.IsOfficial",
            "select countrylanguage.Language, country.Name, country.Continent"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            1.0
        ]
    },
    {
        "question": "What is the language that is used by the largest number of Asian nations?",
        "select_candidates": [
            "select countrylanguage.Language",
            "select countrylanguage.Language, country.Name",
            "select countrylanguage.Language, country.Name, country.Continent",
            "select countrylanguage.Language, country.Name, countrylanguage.IsOfficial"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            1.0
        ]
    },
    {
        "question": "Which languages are spoken by only one country in republic governments?",
        "select_candidates": [
            "select countrylanguage.Language",
            "select distinct countrylanguage.Language",
            "select countrylanguage.Language, count(*)",
            "select country.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY-HAVING",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What languages are only used by a single country with a republic government?",
        "select_candidates": [
            "select countrylanguage.Language",
            "select distinct countrylanguage.Language",
            "select countrylanguage.Language, country.Name",
            "select countrylanguage.Language, country.LocalName"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ]
    },
    {
        "question": "Find the city with the largest population that uses English.",
        "select_candidates": [
            "select city.Name",
            "select city.Name, city.Population",
            "select city.Name, city.CountryCode",
            "select distinct city.Name"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            1.0
        ]
    },
    {
        "question": "What is the most populace city that speaks English?",
        "select_candidates": [
            "select city.Name",
            "select city.Name, city.Population",
            "select city.Name, countrylanguage.Language",
            "select distinct city.Name"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            1.0
        ]
    },
    {
        "question": "Find the name, population and expected life length of asian country with the largest area?",
        "select_candidates": [
            "select country.Name, country.Population, country.LifeExpectancy",
            "select country.Name, country.Population, country.LifeExpectancy, country.GNP",
            "select country.Name, country.Population, avg(country.LifeExpectancy)",
            "select distinct country.Name, country.Population, country.LifeExpectancy"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ]
    },
    {
        "question": "What are the name, population, and life expectancy of the largest Asian country by land?",
        "select_candidates": [
            "select country.Name, country.Population, country.LifeExpectancy",
            "select distinct country.Name, country.Population, country.LifeExpectancy",
            "select sqlite_sequence.seq, country.Population, country.LifeExpectancy",
            "select country.Code, country.Name, country.Population, country.LifeExpectancy"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ]
    },
    {
        "question": "What is average life expectancy in the countries where English is not the official language?",
        "select_candidates": [
            "select avg(country.LifeExpectancy)",
            "select country.LifeExpectancy, avg(country.LifeExpectancy)",
            "select avg(country.LifeExpectancy), country.Population",
            "select avg(country.LifeExpectancy), country.Code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Give the mean life expectancy of countries in which English is not the official language.",
        "select_candidates": [
            "select avg(country.LifeExpectancy)",
            "select avg(country.LifeExpectancy), country.Population",
            "select avg(country.LifeExpectancy), country.Code",
            "select the avg(country.LifeExpectancy)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the total number of people living in the nations that do not use English?",
        "select_candidates": [
            "select sum(country.Population)",
            "select sum(country.Population), country.Name",
            "select sum(country.Population), country.Name, country.Code",
            "select sum(country.Population), country.Name, countrylanguage.Language"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How many people live in countries that do not speak English?",
        "select_candidates": [
            "select sum(country.Population)",
            "select country.Population",
            "select count(*)",
            "select count(distinct country.Population)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the official language spoken in the country whose head of state is Beatrix?",
        "select_candidates": [
            "select countrylanguage.Language",
            "select countrylanguage.Language, countrylanguage.IsOfficial",
            "select distinct countrylanguage.Language",
            "select countrylanguage.CountryCode, countrylanguage.Language"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the official language used in the country the name of whose head of state is Beatrix.",
        "select_candidates": [
            "select countrylanguage.Language",
            "select countrylanguage.Language, countrylanguage.IsOfficial",
            "select distinct countrylanguage.Language",
            "select country.Name, countrylanguage.Language"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the total number of unique official languages spoken in the countries that are founded before 1930?",
        "select_candidates": [
            "select count(distinct countrylanguage.Language)",
            "select count(distinct countrylanguage.IsOfficial)",
            "select count (distinct countrylanguage.Language)",
            "select count (distinct countrylanguage.IsOfficial)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "For the countries founded before 1930, what is the total number of distinct official languages?",
        "select_candidates": [
            "select count(distinct countrylanguage.Language)",
            "select count(distinct countrylanguage.Language), country.Name",
            "select count (distinct countrylanguage.Language)",
            "select count(distinct countrylanguage.IsOfficial)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the countries that have greater surface area than any country in Europe?",
        "select_candidates": [
            "select country.Name",
            "select distinct country.Name",
            "select country.Name, country.SurfaceArea",
            "select distinct country.Name, country.SurfaceArea"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Which countries have greater area than that of any country in Europe?",
        "select_candidates": [
            "select country.Name",
            "select distinct country.Name",
            "select country.Name, country.SurfaceArea",
            "select distinct country.Name, country.SurfaceArea"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the African countries that have a population less than any country in Asia?",
        "select_candidates": [
            "select country.Name",
            "select distinct country.Name",
            "select country.Name, country.Population",
            "select country.Name, country.Code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Which African countries have a smaller population than that of any country in Asia?",
        "select_candidates": [
            "select country.Name",
            "select distinct country.Name",
            "select country.Name, country.Population",
            "select distinct country.Name, country.Population"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Which Asian countries have a population that is larger than any country in Africa?",
        "select_candidates": [
            "select country.Name",
            "select distinct country.Name",
            "select country.Name, country.Population",
            "select country.Name, country.Continent"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the Asian countries which have a population larger than that of any country in Africa?",
        "select_candidates": [
            "select country.Name",
            "select distinct country.Name",
            "select country.Name, country.Continent",
            "select country.Name, country.Population"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the country codes for countries that do not speak English?",
        "select_candidates": [
            "select city.CountryCode",
            "select distinct city.CountryCode",
            "select city.ID",
            "select city.CountryCode, city.CountryCode"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            1.0
        ]
    },
    {
        "question": "Return the country codes for countries that do not speak English.",
        "select_candidates": [
            "select city.CountryCode",
            "select distinct city.CountryCode",
            "select city.CountryCode, city.Name",
            "select city.CountryCode, city.CountryCode"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            1.0
        ]
    },
    {
        "question": "What are the country codes of countries where people use languages other than English?",
        "select_candidates": [
            "select country.Code",
            "select country.Continent",
            "select city.ID",
            "select countrylanguage.CountryCode"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Give the country codes for countries in which people speak langauges that are not English.",
        "select_candidates": [
            "select city.CountryCode",
            "select country.Continent",
            "select distinct city.CountryCode",
            "select city.ID"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the codes of the countries that do not speak English and whose government forms are not Republic?",
        "select_candidates": [
            "select country.Code",
            "select distinct country.Code",
            "select country.Code, country.Code2",
            "select count(distinct country.Code)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ]
    },
    {
        "question": "Return the codes of countries that do not speak English and do not have Republics for governments.",
        "select_candidates": [
            "select country.Code",
            "select distinct country.Code",
            "select country.Code, country.Code2",
            "select country.Code, country.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ]
    },
    {
        "question": "Which cities are in European countries where English is not the official language?",
        "select_candidates": [
            "select city.Name",
            "select distinct city.Name",
            "select city.Name, city.CountryCode",
            "select city.Name, city.CountryCode, city.Name"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the names of cities in Europe for which English is not the official language?",
        "select_candidates": [
            "select city.Name",
            "select distinct city.Name",
            "select city.Name, city.CountryCode",
            "select city.ID, city.Name"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Which unique cities are in Asian countries where Chinese is the official language?",
        "select_candidates": [
            "select distinct city.Name",
            "select unique city.Name",
            "select count(distinct city.Name)",
            "select distinct city.Name, city.CountryCode"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Return the different names of cities that are in Asia and for which Chinese is the official language.",
        "select_candidates": [
            "select distinct city.Name",
            "select distinct city.Name, country.Continent, countrylanguage.Language",
            "select distinct city.Name, country.Continent",
            "select distinct city.Name, city.CountryCode"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the name, independence year, and surface area of the country with the smallest population?",
        "select_candidates": [
            "select country.Name, country.IndepYear, country.SurfaceArea",
            "select country.Name, country.IndepYear, country.SurfaceArea, min(country.Population)",
            "select distinct country.Name, country.IndepYear, country.SurfaceArea",
            "select country.Name, country.IndepYear, country.SurfaceArea, country.Population"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Give the name, year of independence, and surface area of the country that has the lowest population.",
        "select_candidates": [
            "select country.Name, country.IndepYear, country.SurfaceArea",
            "select country.Name, country.IndepYear, country.SurfaceArea, country.Population",
            "select country.Name, country.IndepYear, country.SurfaceArea, min(country.Population)",
            "select distinct country.Name, country.IndepYear, country.SurfaceArea"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the population, name and leader of the country with the largest area?",
        "select_candidates": [
            "select country.Population, country.Name, country.HeadOfState",
            "select distinct country.Population, country.Name, country.HeadOfState",
            "select country.Name, country.Population, country.HeadOfState",
            "select country.Population, country.Name, country.HeadOfState,"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Give the name, population, and head of state for the country that has the largest area.",
        "select_candidates": [
            "select country.Name, country.Population, country.HeadOfState",
            "select country.Name, country.Population, country.HeadOfState, country.SurfaceArea",
            "select country.Name, country.Population, country.HeadOfState, country.Code",
            "select country.Name, country.Population, country.HeadOfState, country.Code2"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Return the country name and the numbers of languages spoken for each country that speaks at least 3 languages.",
        "select_candidates": [
            "select country.Name, count(*)",
            "select country.Name, count(*), country.Code",
            "select country.Name, count(distinct countrylanguage.Language)",
            "select country.Name, count(distinct countrylanguage.Language), country.Code"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the names of countries that speak more than 2 languages, as well as how many languages they speak?",
        "select_candidates": [
            "select country.Name, count(*)",
            "select country.Name, count(distinct countrylanguage.Language)",
            "select country.Name, count(*), country.Code",
            "select country.Name, count(*), countrylanguage.Language"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Find the number of cities in each district whose population is greater than the average population of cities?",
        "select_candidates": [
            "select count(*), city.District",
            "select city.District, count(*)",
            "select count(*), city.District, city.District",
            "select count(*), city.District, city.Population"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How many cities in each district have a population that is above the average population across all cities?",
        "select_candidates": [
            "select count(*), city.District",
            "select city.District, count(*)",
            "select count(distinct city.District), city.District",
            "select count(*), city.District, city.Population"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Find the government form name and total population for each government form whose average life expectancy is longer than 72.",
        "select_candidates": [
            "select country.GovernmentForm, sum(country.Population)",
            "select country.GovernmentForm, sum(country.Population), avg(country.LifeExpectancy)",
            "select country.GovernmentForm, country.Population, avg(country.LifeExpectancy)",
            "select country.Name, sum(country.Population)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the different government forms and what is the total population of each for government forms that have an average life expectancy greater than 72?",
        "select_candidates": [
            "select country.GovernmentForm, sum(country.Population)",
            "select sum(country.Population), country.GovernmentForm",
            "select country.GovernmentForm, count(*)",
            "select distinct country.GovernmentForm, sum(country.Population)"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            0.0,
            1.0
        ]
    },
    {
        "question": "Find the average life expectancy and total population for each continent where the average life expectancy is shorter than 72?",
        "select_candidates": [
            "select avg(country.LifeExpectancy), sum(country.Population), country.Continent",
            "select sum(country.Population), avg(country.LifeExpectancy), country.Continent",
            "select avg(country.Population), sum(country.Population), country.Continent",
            "select country.Continent, sum(country.Population)"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ]
    },
    {
        "question": "What are the different continents and the total popuation and average life expectancy corresponding to each, for continents that have an average life expectancy less than 72?",
        "select_candidates": [
            "select country.Continent, sum(country.Population), avg(country.LifeExpectancy)",
            "select distinct country.Continent, sum(country.Population), avg(country.LifeExpectancy)",
            "select count(*), avg(country.LifeExpectancy), country.Continent",
            "select country.Continent, count(*), avg(country.LifeExpectancy)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the names and areas of countries with the top 5 largest area?",
        "select_candidates": [
            "select country.Name, country.SurfaceArea",
            "select country.Name, country.SurfaceArea, country.Code",
            "select country.Code, country.Name, country.SurfaceArea",
            "select country.Name, country.SurfaceArea, country.Region"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Return the names and surface areas of the 5 largest countries.",
        "select_candidates": [
            "select country.Name, country.SurfaceArea",
            "select country.Code, country.Name, country.SurfaceArea",
            "select country.Name, country.SurfaceArea, country.Code",
            "select distinct country.Name, country.SurfaceArea"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are names of countries with the top 3 largest population?",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Code",
            "select country.Name, country.Code, max(country.Population)",
            "select country.Name, country.Code, country.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Return the names of the 3 most populated countries.",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Code",
            "select country.Name, country.Population",
            "select country.Name, country.Code, country.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the names of the nations with the 3 lowest populations?",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Code",
            "select country.Name, country.Population",
            "select country.Name, country.Code, min(country.Population)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Return the names of the 3 countries with the fewest people.",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Code",
            "select country.Name, country.Code, country.Name",
            "select country.Name, country.Continent"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "how many countries are in Asia?",
        "select_candidates": [
            "select count(*)",
            "select count(distinct country.Name)",
            "select count(*), country.Name",
            "select count(distinct country.Name), country.Continent"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Count the number of countries in Asia.",
        "select_candidates": [
            "select count(*)",
            "select count(distinct country.Name)",
            "select count(*), country.Name",
            "select count (*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the names of the countries that are in the continent of Europe and have a population of 80000?",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Continent",
            "select country.Name, country.Code",
            "select distinct country.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Give the names of countries that are in Europe and have a population equal to 80000.",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Continent",
            "select country.Name, country.Code",
            "select distinct country.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the total population and average area of countries in the continent of North America whose area is bigger than 3000?",
        "select_candidates": [
            "select sum(country.Population), avg(country.SurfaceArea)",
            "select avg(country.SurfaceArea), sum(country.Population)",
            "select sum(country.Population), avg(country.SurfaceArea), country.Name",
            "select avg(country.Population), sum(country.Population)"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Give the total population and average surface area corresponding to countries in North America that have a surface area greater than 3000.",
        "select_candidates": [
            "select sum(country.Population), avg(country.SurfaceArea)",
            "select avg(country.SurfaceArea), sum(country.Population)",
            "select sum(country.Population), avg(country.SurfaceArea), country.Name",
            "select avg(country.Population), sum(country.Population)"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the cities whose population is between 160000 and 900000?",
        "select_candidates": [
            "select city.Name",
            "select distinct city.Name",
            "select city.Name, city.Population",
            "select distinct city.Name, city.Population"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Return the names of cities that have a population between 160000 and 900000.",
        "select_candidates": [
            "select city.Name",
            "select distinct city.Name",
            "select city.Name, city.ID",
            "select city.ID, city.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Which language is spoken by the largest number of countries?",
        "select_candidates": [
            "select countrylanguage.Language",
            "select countrylanguage.Language, count(*)",
            "select countrylanguage.Language, count(distinct countrylanguage.CountryCode)",
            "select countrylanguage.CountryCode, countrylanguage.Language"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Give the language that is spoken in the most countries.",
        "select_candidates": [
            "select countrylanguage.Language",
            "select countrylanguage.Language, countrylanguage.CountryCode",
            "select countrylanguage.Language, count(*)",
            "select countrylanguage.Language, countrylanguage.IsOfficial"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the language spoken by the largest percentage of people in each country?",
        "select_candidates": [
            "select countrylanguage.Language, country.Name, countrylanguage.Percentage",
            "select countrylanguage.Language, country.Name",
            "select countrylanguage.Language, countrylanguage.Percentage",
            "select countrylanguage.Language, countrylanguage.Percentage, country.Name"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY"
        ],
        "structure_labels": [
            0.0,
            1.0
        ]
    },
    {
        "question": "What are the country codes of the different countries, and what are the languages spoken by the greatest percentage of people for each?",
        "select_candidates": [
            "select country.Code, countrylanguage.Language, countrylanguage.Percentage",
            "select country.Code, countrylanguage.Language",
            "select countrylanguage.CountryCode, countrylanguage.Language, countrylanguage.Percentage",
            "select country.Code, countrylanguage.Language, countrylanguage.Percentage, countrylanguage.Percentage"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the total number of countries where Spanish is spoken by the largest percentage of people?",
        "select_candidates": [
            "select count(*)",
            "select count(distinct countrylanguage.CountryCode)",
            "select count(distinct countrylanguage.Language)",
            "select count (distinct countrylanguage.CountryCode)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ]
    },
    {
        "question": "Count the number of countries for which Spanish is the predominantly spoken language.",
        "select_candidates": [
            "select count(*)",
            "select count(distinct countrylanguage.Language)",
            "select count(distinct countrylanguage.CountryCode)",
            "select count (distinct countrylanguage.Language)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ]
    },
    {
        "question": "What are the codes of countries where Spanish is spoken by the largest percentage of people?",
        "select_candidates": [
            "select country.Code",
            "select distinct country.Code",
            "select country.Code, countrylanguage.CountryCode",
            "select t2, countrylanguage.CountryCode"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ]
    },
    {
        "question": "Return the codes of countries for which Spanish is the predominantly spoken language.",
        "select_candidates": [
            "select country.Code",
            "select distinct country.Code",
            "select t2, countrylanguage.CountryCode",
            "select country.Code, country.Name"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ]
    },
    {
        "question": "How many conductors are there?",
        "select_candidates": [
            "select count(*)",
            "select count(distinct conductor.Conductor_ID)",
            "select count(distinct conductor.Name)",
            "select count (distinct conductor.Conductor_ID)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Count the number of conductors.",
        "select_candidates": [
            "select count(*)",
            "select count(distinct conductor.Conductor_ID)",
            "select count(distinct conductor.Name)",
            "select count (distinct conductor.Conductor_ID)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "List the names of conductors in ascending order of age.",
        "select_candidates": [
            "select conductor.Name",
            "select conductor.Name, conductor.Age",
            "select conductor.Conductor_ID, conductor.Name",
            "select distinct conductor.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the names of conductors, ordered by age?",
        "select_candidates": [
            "select conductor.Name",
            "select conductor.Name, conductor.Age",
            "select distinct conductor.Name",
            "select conductor.Name, conductor.Age"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the names of conductors whose nationalities are not \"USA\"?",
        "select_candidates": [
            "select conductor.Name",
            "select distinct conductor.Name",
            "select conductor.Name, conductor.Nationality",
            "select conductor.Conductor_ID, conductor.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Return the names of conductors that do not have the nationality \"USA\".",
        "select_candidates": [
            "select conductor.Name",
            "select distinct conductor.Name",
            "select conductor.Conductor_ID, conductor.Name",
            "select conductor.Name, conductor.Nationality"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the record companies of orchestras in descending order of years in which they were founded?",
        "select_candidates": [
            "select orchestra.Record_Company",
            "select distinct orchestra.Record_Company",
            "select records_companies_relative_to_gROUP BY-ORDER BY",
            "select orchestra.Record_Company, orchestra.Year_of_Founded"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Return the record companies of orchestras, sorted descending by the years in which they were founded.",
        "select_candidates": [
            "select orchestra.Record_Company",
            "select distinct orchestra.Record_Company",
            "select orchestra.Record_Company, orchestra.Year_of_Founded",
            "select records_companies, orchestra.Record_Company"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the average attendance of shows?",
        "select_candidates": [
            "select avg(show.Attendance)",
            "select avg(show.Attendance), show.Attendance",
            "select the avg(show.Attendance)",
            "select avg(show.Attendance), show.Result"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Return the average attendance across all shows.",
        "select_candidates": [
            "select avg(show.Attendance)",
            "select the avg(show.Attendance)",
            "select avg(show.Attendance), show.Attendance",
            "select avg(show.Attendance), show.Result"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the maximum and minimum share of performances whose type is not \"Live final\".",
        "select_candidates": [
            "select max(performance.Share), min(performance.Share)",
            "select performance.Share, max(performance.Share), min(performance.Share)",
            "select avg(performance.Share), min(performance.Share)",
            "select max(performance.Share), min(performance.Share), performance.Type"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Return the maximum and minimum shares for performances that do not have the type \"Live final\".",
        "select_candidates": [
            "select max(performance.Share), min(performance.Share)",
            "select performance.Share, max(performance.Share), min(performance.Share)",
            "select max(performance.Share), min(performance.Share), performance.Type",
            "select maximum(performance.Share), min(performance.Share)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How many different nationalities do conductors have?",
        "select_candidates": [
            "select count(distinct conductor.Nationality)",
            "select count (distinct conductor.Nationality)",
            "select count distinct conductor.Nationality",
            "select count (1distinct conductor.Nationality)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Count the number of different nationalities of conductors.",
        "select_candidates": [
            "select count(distinct conductor.Nationality)",
            "select count (distinct conductor.Nationality)",
            "select count distinct conductor.Nationality",
            "select count (1distinct conductor.Nationality)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "List names of conductors in descending order of years of work.",
        "select_candidates": [
            "select conductor.Name",
            "select conductor.Conductor_ID, conductor.Name",
            "select conductor.Name, conductor.Year_of_Work",
            "select distinct conductor.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the names of conductors, sorted descending by the number of years they have worked?",
        "select_candidates": [
            "select conductor.Name",
            "select conductor.Name, conductor.Year_of_Work",
            "select conductor.Conductor_ID, conductor.Name",
            "select distinct conductor.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "List the name of the conductor with the most years of work.",
        "select_candidates": [
            "select conductor.Name",
            "select conductor.Name, conductor.Year_of_Work",
            "select conductor.Conductor_ID, conductor.Name",
            "select conductor.Name, max(conductor.Year_of_Work)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the name of the conductor who has worked the greatest number of years?",
        "select_candidates": [
            "select conductor.Name",
            "select conductor.Name, conductor.Year_of_Work",
            "select conductor.Conductor_ID, conductor.Name",
            "select conductor.Name, conductor.Nationality"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Show the names of conductors and the orchestras they have conducted.",
        "select_candidates": [
            "select conductor.Name, orchestra.Orchestra",
            "select conductor.Name, conductor.Name, orchestra.Orchestra",
            "select distinct conductor.Name, orchestra.Orchestra",
            "select conductor.Name, orchestra.Orchestra, conductor.Conductor_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the names of conductors as well as the corresonding orchestras that they have conducted?",
        "select_candidates": [
            "select conductor.Name, orchestra.Orchestra",
            "select conductor.Name, conductor.Name, orchestra.Orchestra",
            "select conductor.Name, orchestra.Orchestra, conductor.Conductor_ID",
            "select conductor.Name, orchestra.Orchestra, conductor.Age"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Show the names of conductors that have conducted more than one orchestras.",
        "select_candidates": [
            "select conductor.Name",
            "select conductor.Name, conductor.Conductor_ID, conductor.Name",
            "select conductor.Name, conductor.Conductor_ID",
            "select conductor.Name, orchestra.Conductor_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the names of conductors who have conducted at more than one orchestra?",
        "select_candidates": [
            "select conductor.Name",
            "select conductor.Name, conductor.Conductor_ID, conductor.Name",
            "select conductor.Name, conductor.Conductor_ID",
            "select conductor.Name, count(*), conductor.Conductor_ID, conductor.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Show the name of the conductor that has conducted the most number of orchestras.",
        "select_candidates": [
            "select conductor.Name",
            "select conductor.Name, orchestra.Conductor_ID",
            "select conductor.Name, conductor.Conductor_ID",
            "select conductor.Name, conductor.Age"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the name of the conductor who has conducted the most orchestras?",
        "select_candidates": [
            "select conductor.Name",
            "select conductor.Name, conductor.Conductor_ID",
            "select conductor.Name, orchestra.Conductor_ID",
            "select conductor.Name, conductor.Conductor_ID, conductor.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Please show the name of the conductor that has conducted orchestras founded after 2008.",
        "select_candidates": [
            "select conductor.Name",
            "select distinct conductor.Name",
            "select conductor.Name, orchestra.Conductor_ID",
            "select conductor.Name, conductor.Conductor_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the names of conductors who have conducted orchestras founded after the year 2008?",
        "select_candidates": [
            "select conductor.Name",
            "select distinct conductor.Name",
            "select conductor.Name, orchestra.Conductor_ID",
            "select conductor.Name, conductor.Conductor_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Please show the different record companies and the corresponding number of orchestras.",
        "select_candidates": [
            "select orchestra.Record_Company, count(*)",
            "select count(*), orchestra.Record_Company",
            "select distinct orchestra.Record_Company, count(*)",
            "select orchestra.Record_Company, count (*)"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How many orchestras does each record company manage?",
        "select_candidates": [
            "select orchestra.Record_Company, count(*)",
            "select count(*), orchestra.Record_Company",
            "select number(*), orchestra.Record_Company",
            "select sum(orchestra.Record_Company), orchestra.Record_Company"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Please show the record formats of orchestras in ascending order of count.",
        "select_candidates": [
            "select orchestra.Major_Record_Format",
            "select count(*), orchestra.Major_Record_Format",
            "select orchestra.Major_Record_Format, count(*)",
            "select major_record_formats in orchestra.Major_Record_Format"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the major record formats of orchestras, sorted by their frequency?",
        "select_candidates": [
            "select orchestra.Major_Record_Format",
            "select orchestra.Major_Record_Format, orchestra.Record_Company",
            "select orchestra.Major_Record_Format, orchestra.Major_Record_Format, orchestra.Record_Company",
            "select orchestra.Major_Record_Format, orchestra.Major_Record_Format, orchestra.Conductor_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "List the record company shared by the most number of orchestras.",
        "select_candidates": [
            "select orchestra.Record_Company",
            "select orchestra.Record_Company, count(*)",
            "select orchestra.Record_Company-GROUP BY-ORDER BY-LIMIT",
            "select orchestra.Record_Company, count(distinct orchestra.Record_Company)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the record company used by the greatest number of orchestras?",
        "select_candidates": [
            "select orchestra.Record_Company",
            "select orchestra.Record_Company, count(*)",
            "select orchestra.Record_Company-GROUP BY-ORDER BY-LIMIT",
            "select orchestra.Record_Company, count(distinct orchestra.Record_Company)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "List the names of orchestras that have no performance.",
        "select_candidates": [
            "select orchestra.Orchestra",
            "select orchestra.Orchestra, conductor.Name",
            "select orchestra.Orchestra, conductor.Name, conductor.Name",
            "select conductor.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the orchestras that do not have any performances?",
        "select_candidates": [
            "select orchestra.Orchestra",
            "select orchestra.Orchestra, orchestra.Orchestra_ID",
            "select orchestra.Orchestra, conductor.Name",
            "select orchestra.Orchestra, orchestra.Orchestra"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Show the record companies shared by orchestras founded before 2003 and after 2003.",
        "select_candidates": [
            "select orchestra.Record_Company",
            "select orchestra.Record_Company, orchestra.Year_of_Founded",
            "select orchestra.Record_Company, orchestra.Record_Company",
            "select distinct orchestra.Record_Company"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the record companies that are used by both orchestras founded before 2003 and those founded after 2003?",
        "select_candidates": [
            "select orchestra.Record_Company",
            "select orchestra.Record_Company, orchestra.Year_of_Founded",
            "select orchestra.Record_Company, orchestra.Record_Company",
            "select distinct orchestra.Record_Company"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Find the number of orchestras whose record format is \"CD\" or \"DVD\".",
        "select_candidates": [
            "select count(*)",
            "select count(distinct orchestra.Orchestra)",
            "select count(*), orchestra.Major_Record_Format",
            "select count (*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Count the number of orchestras that have CD or DVD as their record format.",
        "select_candidates": [
            "select count(*)",
            "select count(distinct orchestra.Orchestra)",
            "select count(*), orchestra.Major_Record_Format",
            "select count (*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Show the years in which orchestras that have given more than one performance are founded.",
        "select_candidates": [
            "select orchestra.Year_of_Founded",
            "select distinct orchestra.Year_of_Founded",
            "select orchestra.Year_of_Founded, orchestra.Orchestra, performance.Date",
            "select orchestra.Year_of_Founded, orchestra.Record_Company"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are years of founding for orchestras that have had more than a single performance?",
        "select_candidates": [
            "select orchestra.Year_of_Founded",
            "select orchestra.Year_of_Founded, orchestra.Conductor_ID",
            "select orchestra.Year_of_Founded, orchestra.Record_Company",
            "select orchestra.Year_of_Founded, orchestra.Orchestra"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How many high schoolers are there?",
        "select_candidates": [
            "select count(*)",
            "select count(distinct Highschooler.ID)",
            "select count (*)",
            "select count(*), Highschooler.ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Count the number of high schoolers.",
        "select_candidates": [
            "select count(*)",
            "select count(distinct Highschooler.ID)",
            "select count(*), Highschooler.ID",
            "select count(Highschooler.ID)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Show the names and grades of each high schooler.",
        "select_candidates": [
            "select Highschooler.name, Highschooler.grade",
            "select distinct Highschooler.name, Highschooler.grade",
            "select Highschooler.ID, Highschooler.name, Highschooler.grade",
            "select Highschooler.ID, Highschooler.grade"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the names and grades for each high schooler?",
        "select_candidates": [
            "select Highschooler.name, Highschooler.grade",
            "select distinct Highschooler.name, Highschooler.grade",
            "select Highschooler.ID, Highschooler.name, Highschooler.grade",
            "select Highschooler.grade, Highschooler.name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            1.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Show all the grades of the high schoolers.",
        "select_candidates": [
            "select distinct Highschooler.grade",
            "select Highschooler.grade",
            "select count(distinct Highschooler.grade)",
            "select sum(Highschooler.grade)"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the grade of each high schooler?",
        "select_candidates": [
            "select Highschooler.grade",
            "select distinct Highschooler.grade",
            "select Highschooler.name, Highschooler.grade",
            "select Highschooler.ID, Highschooler.grade"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What grade is Kyle in?",
        "select_candidates": [
            "select Highschooler.grade",
            "select distinct Highschooler.grade",
            "select Highschooler.name, Highschooler.grade",
            "select distinct Highschooler.grade, Highschooler.name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Return the grade for the high schooler named Kyle.",
        "select_candidates": [
            "select Highschooler.grade",
            "select distinct Highschooler.grade",
            "select Highschooler.ID, Highschooler.grade",
            "select avg(Highschooler.grade)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Show the names of all high schoolers in grade 10.",
        "select_candidates": [
            "select Highschooler.name",
            "select distinct Highschooler.name",
            "select Highschooler.name, Highschooler.grade",
            "select Highschooler.ID, Highschooler.name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the names of all high schoolers in grade 10?",
        "select_candidates": [
            "select Highschooler.name",
            "select distinct Highschooler.name",
            "select Highschooler.name, Highschooler.grade",
            "select Highschooler.ID, Highschooler.name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Show the ID of the high schooler named Kyle.",
        "select_candidates": [
            "select Highschooler.ID",
            "select distinct Highschooler.ID",
            "select Highschooler.ID, Highschooler.name",
            "select Highschooler.ID, Highschooler.ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is Kyle's id?",
        "select_candidates": [
            "select Highschooler.ID",
            "select Highschooler.ID, Highschooler.name",
            "select distinct Highschooler.ID",
            "select Highschooler.ID, Highschooler.name, Highschooler.ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How many high schoolers are there in grade 9 or 10?",
        "select_candidates": [
            "select count(*)",
            "select count(distinct Highschooler.ID)",
            "select count(distinct Highschooler.name)",
            "select count (distinct Highschooler.ID)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Count the number of high schoolers in grades 9 or 10.",
        "select_candidates": [
            "select count(*)",
            "select count(distinct Highschooler.ID)",
            "select count (distinct Highschooler.ID)",
            "select count(*), Highschooler.grade"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Show the number of high schoolers for each grade.",
        "select_candidates": [
            "select count(*), Highschooler.grade",
            "select Highschooler.grade, count(*)",
            "select avg(Highschooler.grade), count(*)",
            "select number(*), Highschooler.grade"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How many high schoolers are in each grade?",
        "select_candidates": [
            "select count(*), Highschooler.grade",
            "select Highschooler.grade, count(*)",
            "select count(distinct Highschooler.grade), Highschooler.name",
            "select count(distinct Highschooler.grade), Highschooler.grade"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Which grade has the most high schoolers?",
        "select_candidates": [
            "select Highschooler.grade",
            "select distinct Highschooler.grade",
            "select Highschooler.grade, count(*)",
            "select Highschooler.grade, count(distinct Highschooler.ID)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Return the grade that has the greatest number of high schoolers.",
        "select_candidates": [
            "select Highschooler.grade",
            "select Highschooler.grade, count(*)",
            "select distinct Highschooler.grade",
            "select Highschooler.ID, Highschooler.grade"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Show me all grades that have at least 4 students.",
        "select_candidates": [
            "select Highschooler.grade",
            "select distinct Highschooler.grade",
            "select count(distinct Highschooler.grade)",
            "select Highschooler.grade, count(*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Which grades have 4 or more high schoolers?",
        "select_candidates": [
            "select Highschooler.grade",
            "select distinct Highschooler.grade",
            "select count(distinct Highschooler.grade)",
            "select Highschooler.grade, count(*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Show the student IDs and numbers of friends corresponding to each.",
        "select_candidates": [
            "select Friend.student_id, count(*)",
            "select Friend.student_id, count(distinct Friend.friend_id)",
            "select student_Friend.student_id, count(*)",
            "select student_id, count(*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How many friends does each student have?",
        "select_candidates": [
            "select count(*), Highschooler.ID",
            "select count(distinct Friend.friend_id), Highschooler.ID",
            "select count(distinct Highschooler.ID), Highschooler.ID",
            "select count(*), Friend.student_id"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            1.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Show the names of high school students and their corresponding number of friends.",
        "select_candidates": [
            "select Highschooler.name, count(*)",
            "select Highschooler.name, count(distinct Friend.friend_id)",
            "select Highschooler.name, count(Friend.friend_id)",
            "select Highschooler.name, count(*), Highschooler.ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the names of the high schoolers and how many friends does each have?",
        "select_candidates": [
            "select Highschooler.name, count(*)",
            "select count(*), Highschooler.name",
            "select count(distinct Highschooler.name), Highschooler.ID",
            "select Highschooler.name, count(*), Highschooler.ID"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the name of the high schooler who has the greatest number of friends?",
        "select_candidates": [
            "select Highschooler.name",
            "select Highschooler.name, count(distinct Friend.friend_id)",
            "select Highschooler.name, count(*)",
            "select Highschooler.name, count(Friend.friend_id)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Return the name of the high school student with the most friends.",
        "select_candidates": [
            "select Highschooler.name",
            "select Highschooler.name, Friend.friend_id",
            "select Highschooler.name, Highschooler.ID, Friend.friend_id",
            "select Highschooler.name, Highschooler.ID, Highschooler.name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Show the names of high schoolers who have at least 3 friends.",
        "select_candidates": [
            "select Highschooler.name",
            "select Highschooler.name, count(distinct Friend.friend_id)",
            "select distinct Highschooler.name",
            "select Highschooler.name, count(*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the names of high schoolers who have 3 or more friends?",
        "select_candidates": [
            "select Highschooler.name",
            "select Highschooler.name, count(distinct Friend.friend_id)",
            "select Highschooler.name, count(*)",
            "select distinct Highschooler.name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Show the names of all of the high schooler Kyle's friends.",
        "select_candidates": [
            "select distinct Highschooler.name",
            "select distinct Friend.friend_id",
            "select Highschooler.name",
            "select Friend.friend_id"
        ],
        "select_labels": [
            0.0,
            0.0,
            1.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Return the names of friends of the high school student Kyle.",
        "select_candidates": [
            "select Friend.friend_id",
            "select distinct Friend.friend_id",
            "select Friend.student_id, Friend.friend_id",
            "select Friend.friend_id, Highschooler.name"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How many friends does the high school student Kyle have?",
        "select_candidates": [
            "select count(distinct Friend.friend_id)",
            "select count(*)",
            "select count (distinct Friend.friend_id)",
            "select count(Friend.friend_id)"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Count the number of friends Kyle has.",
        "select_candidates": [
            "select count(distinct Friend.friend_id)",
            "select count(*)",
            "select count (distinct Friend.friend_id)",
            "select count(Friend.friend_id)"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Show ids of all students who do not have any friends.",
        "select_candidates": [
            "select Highschooler.ID",
            "select Friend.student_id",
            "select distinct Highschooler.ID",
            "select Highschooler.ID, Highschooler.ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the ids of high school students who do not have friends?",
        "select_candidates": [
            "select Highschooler.ID",
            "select Highschooler.ID, Highschooler.ID",
            "select distinct Highschooler.ID",
            "select Highschooler.ID, Highschooler.ID, Friend.friend_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Show names of all high school students who do not have any friends.",
        "select_candidates": [
            "select Highschooler.name",
            "select distinct Highschooler.name",
            "select Highschooler.name, Highschooler.ID",
            "select Highschooler.name, Highschooler.ID, Highschooler.name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            0.0,
            1.0
        ]
    },
    {
        "question": "What are the names of students who have no friends?",
        "select_candidates": [
            "select Highschooler.name",
            "select distinct Highschooler.name",
            "select Highschooler.name, Highschooler.ID",
            "select Highschooler.name, Highschooler.ID, Highschooler.name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Show the ids of high schoolers who have friends and are also liked by someone else.",
        "select_candidates": [
            "select Highschooler.ID",
            "select Friend.student_id",
            "select Highschooler.ID, Friend.friend_id",
            "select Highschooler.ID, Friend.friend_id, Likes.liked_id"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-INTERSECT-SELECT-FROM",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the ids of students who both have friends and are liked?",
        "select_candidates": [
            "select Friend.student_id",
            "select Friend.student_id, Likes.student_id",
            "select Friend.student_id, Likes.liked_id",
            "select student_id, Friend.student_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-INTERSECT-SELECT-FROM",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Show name of all students who have some friends and also are liked by someone else.",
        "select_candidates": [
            "select Highschooler.name",
            "select Highschooler.name, Highschooler.ID, Likes.liked_id",
            "select Highschooler.name, Friend.friend_id, Likes.liked_id",
            "select Highschooler.name, Likes.liked_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-INTERSECT-SELECT-FROM",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the names of high schoolers who both have friends and are liked?",
        "select_candidates": [
            "select Highschooler.name",
            "select distinct Highschooler.name",
            "select Highschooler.name, Likes.liked_id",
            "select Highschooler.name, Highschooler.ID, Likes.liked_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-INTERSECT-SELECT-FROM",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Count the number of likes for each student id.",
        "select_candidates": [
            "select count(*), Likes.student_id",
            "select Likes.student_id, count(*)",
            "select count(distinct Likes.liked_id), Likes.student_id",
            "select count(distinct Likes.student_id), Likes.student_id"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How many likes correspond to each student id?",
        "select_candidates": [
            "select Likes.student_id, count(*)",
            "select count(*), Likes.student_id",
            "select Likes.student_id, Likes.liked_id, count(*)",
            "select student_Likes.student_id, count(*)"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Show the names of high schoolers who have likes, and numbers of likes for each.",
        "select_candidates": [
            "select Highschooler.name, count(*)",
            "select count(*), Highschooler.name",
            "select Highschooler.name, count(*), Likes.liked_id",
            "select Highschooler.name, count(*), Highschooler.ID"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the names of high schoolers who have likes, and how many likes does each have?",
        "select_candidates": [
            "select Highschooler.name, count(*)",
            "select count(*), Highschooler.name",
            "select Highschooler.name, count(*), Highschooler.ID",
            "select Highschooler.name, count(*), Likes.student_id"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the name of the high schooler who has the greatest number of likes?",
        "select_candidates": [
            "select Highschooler.name",
            "select Highschooler.name, count(*)",
            "select Highschooler.name, Likes.liked_id",
            "select Highschooler.name, count(*), Highschooler.ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Give the name of the student with the most likes.",
        "select_candidates": [
            "select Highschooler.name",
            "select Highschooler.name, Likes.liked_id",
            "select Highschooler.name, Likes.student_id",
            "select Highschooler.name, Highschooler.ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Show the names of students who have at least 2 likes.",
        "select_candidates": [
            "select Highschooler.name",
            "select Highschooler.name, count(*)",
            "select distinct Highschooler.name",
            "select Highschooler.name, count(distinct Likes.liked_id)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the names of students who have 2 or more likes?",
        "select_candidates": [
            "select Highschooler.name",
            "select Highschooler.name, count(*)",
            "select Highschooler.name, count(distinct Likes.liked_id)",
            "select distinct Highschooler.name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Show the names of students who have a grade higher than 5 and have at least 2 friends.",
        "select_candidates": [
            "select Highschooler.name",
            "select distinct Highschooler.name",
            "select Highschooler.name, count(*), Highschooler.ID",
            "select Highschooler.name, count(*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY-HAVING",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the names of high schoolers who have a grade of over 5 and have 2 or more friends?",
        "select_candidates": [
            "select Highschooler.name",
            "select Highschooler.name, count(*)",
            "select Highschooler.name, count(distinct Highschooler.ID)",
            "select Highschooler.name, count(*), Highschooler.ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY-HAVING",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How many likes does Kyle have?",
        "select_candidates": [
            "select count(*)",
            "select count(distinct Likes.liked_id)",
            "select count(*), Highschooler.name",
            "select count(distinct Likes.liked_id), Highschooler.name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Return the number of likes that the high schooler named Kyle has.",
        "select_candidates": [
            "select count(*)",
            "select count(distinct Likes.liked_id)",
            "select count(*), Highschooler.name",
            "select count(distinct Likes.liked_id), Highschooler.name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Find the average grade of all students who have some friends.",
        "select_candidates": [
            "select avg(Highschooler.grade)",
            "select Highschooler.grade, avg(Highschooler.grade)",
            "select avg(Highschooler.grade), Friend.friend_id",
            "select avg(Highschooler.grade), Highschooler.name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY"
        ],
        "structure_labels": [
            0.0,
            0.0
        ]
    },
    {
        "question": "What is the average grade of students who have friends?",
        "select_candidates": [
            "select avg(Highschooler.grade)",
            "select Highschooler.grade, avg(Highschooler.grade)",
            "select avg(Highschooler.grade), Friend.friend_id",
            "select avg(Highschooler.grade), Highschooler.name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY"
        ],
        "structure_labels": [
            0.0,
            0.0
        ]
    },
    {
        "question": "Find the minimum grade of students who have no friends.",
        "select_candidates": [
            "select min(Highschooler.grade)",
            "select min(Highschooler.grade), Highschooler.name",
            "select Highschooler.grade min(Highschooler.grade)",
            "select min(Highschooler.grade), Highschooler.ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the lowest grade of students who do not have any friends?",
        "select_candidates": [
            "select min(Highschooler.grade)",
            "select min(Highschooler.grade), Highschooler.name",
            "select min(Highschooler.grade), Highschooler.grade",
            "select min(Highschooler.grade), t0.c3"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Which states have both owners and professionals living there?",
        "select_candidates": [
            "select Owners.state",
            "select Owners.state, Professionals.state",
            "select distinct Owners.state, Professionals.state",
            "select distinct Owners.state"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-INTERSECT-SELECT-FROM",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Find the states where both owners and professionals live.",
        "select_candidates": [
            "select Owners.state",
            "select Owners.state, Professionals.state",
            "select distinct Owners.state, Professionals.state",
            "select distinct Owners.state"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-INTERSECT-SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the average age of the dogs who have gone through any treatments?",
        "select_candidates": [
            "select avg(Dogs.age)",
            "select Dogs.age, avg(Dogs.age)",
            "select avg(Dogs.age), Treatments.date_of_treatment",
            "select avg(Dogs.age), Dogs.size_code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ]
    },
    {
        "question": "Find the average age of the dogs who went through treatments.",
        "select_candidates": [
            "select avg(Dogs.age)",
            "select avg(Dogs.age), Treatments.date_of_treatment",
            "select Dogs.age, avg(Dogs.age)",
            "select Treatments.cost_of_treatment, avg(Dogs.age)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ]
    },
    {
        "question": "Which professionals live in the state of Indiana or have done treatment on more than 2 treatments? List his or her id, last name and cell phone.",
        "select_candidates": [
            "select Professionals.professional_id, Professionals.last_name, Professionals.cell_number",
            "select Treatments.professional_id, Professionals.last_name, Professionals.cell_number",
            "select distinct Professionals.professional_id, Professionals.last_name, Professionals.cell_number",
            "select t8.c2, Professionals.last_name, Professionals.cell_number"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY-HAVING",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            0.0,
            1.0
        ]
    },
    {
        "question": "Find the id, last name and cell phone of the professionals who live in the state of Indiana or have performed more than two treatments.",
        "select_candidates": [
            "select Professionals.professional_id, Professionals.last_name, Professionals.cell_number",
            "select Treatments.professional_id, Professionals.last_name, Professionals.cell_number",
            "select t8.c2, Professionals.last_name, Professionals.cell_number",
            "select Treatments.professional_id, t6, Professionals.last_name, Professionals.cell_number"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY-HAVING",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            0.0,
            1.0
        ]
    },
    {
        "question": "Which dogs have not cost their owner more than 1000 for treatment? List the dog names.",
        "select_candidates": [
            "select Dogs.name",
            "select Dogs.name, Owners.first_name, Dogs.abandoned_yn",
            "select Dogs.name, Dogs.owner_id",
            "select Dogs.name, Owners.first_name, Owners.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            0.0,
            0.0
        ]
    },
    {
        "question": "What are the names of the dogs for which the owner has not spend more than 1000 for treatment?",
        "select_candidates": [
            "select Dogs.name",
            "select Dogs.name, Owners.first_name, Owners.last_name",
            "select Dogs.name, Owners.first_name, Dogs.abandoned_yn",
            "select Dogs.name, Owners.first_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-EXCEPT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            0.0,
            0.0
        ]
    },
    {
        "question": "Which first names are used for professionals or owners but are not used as dog names?",
        "select_candidates": [
            "select Professionals.first_name",
            "select Owners.first_name",
            "select distinct Professionals.first_name",
            "select Professionals.first_name, Professionals.role_code"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            0.0,
            0.0
        ]
    },
    {
        "question": "Find the first names that are used for professionals or owners but are not used as dog names.",
        "select_candidates": [
            "select Professionals.first_name",
            "select Owners.first_name",
            "select distinct Professionals.first_name",
            "select Professionals.first_name, Owners.first_name"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            0.0,
            0.0
        ]
    },
    {
        "question": "Which professional did not operate any treatment on dogs? List the professional's id, role and email.",
        "select_candidates": [
            "select Professionals.professional_id, Professionals.role_code, Professionals.email_address",
            "select distinct Professionals.professional_id, Professionals.role_code, Professionals.email_address",
            "select professional_Professionals.professional_id, Professionals.role_code, Professionals.email_address",
            "select professional Professionals.professional_id, Professionals.role_code, Professionals.email_address"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM",
            "SELECT-FROM-EXCEPT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Give me the id, role and email of the professionals who did not perform any treatment on dogs.",
        "select_candidates": [
            "select Professionals.professional_id, Professionals.role_code, Professionals.email_address",
            "select distinct Professionals.professional_id, Professionals.role_code, Professionals.email_address",
            "select professional_Professionals.professional_id, Professionals.role_code, Professionals.email_address",
            "select Professionals.professional_id, Professionals.first_name, Professionals.email_address"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM",
            "SELECT-FROM-EXCEPT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Which owner owns the most dogs? List the owner id, first name and last name.",
        "select_candidates": [
            "select Dogs.owner_id, Owners.first_name, Owners.last_name",
            "select Owners.owner_id, Owners.first_name, Owners.last_name",
            "select Dogs.dog_id, Owners.first_name, Owners.last_name",
            "select dog_Dogs.owner_id, Owners.first_name, Owners.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Return the owner id, first name and last name of the owner who has the most dogs.",
        "select_candidates": [
            "select Dogs.owner_id, Owners.first_name, Owners.last_name",
            "select Owners.owner_id, Owners.first_name, Owners.last_name",
            "select dog_Dogs.owner_id, Owners.first_name, Owners.last_name",
            "select t5, Owners.owner_id, Owners.first_name, Owners.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Which professionals have done at least two treatments? List the professional's id, role, and first name.",
        "select_candidates": [
            "select Treatments.professional_id, Professionals.first_name, Professionals.first_name",
            "select Treatments.professional_id, Professionals.role_code, Professionals.first_name",
            "select Treatments.professional_id, Professionals.first_name, Professionals.role_code",
            "select Professionals.professional_id, Professionals.role_code, Professionals.first_name"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            1.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the id, role, and first name of the professionals who have performed two or more treatments?",
        "select_candidates": [
            "select Treatments.professional_id, Professionals.role_code, Professionals.first_name",
            "select Professionals.professional_id, Professionals.role_code, Professionals.first_name",
            "select Treatments.professional_id, Professionals.first_name, Professionals.role_code",
            "select t8.c2, Professionals.role_code, Professionals.first_name"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the name of the breed with the most dogs?",
        "select_candidates": [
            "select Breeds.breed_name",
            "select Breeds.breed_name, Dogs.breed_code",
            "select Breeds.breed_code, Breeds.breed_name",
            "select Breeds.breed_name, Dogs.name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Which breed do the most dogs have? Give me the breed name.",
        "select_candidates": [
            "select Breeds.breed_name",
            "select Breeds.breed_code, Breeds.breed_name",
            "select Breeds.breed_name, Dogs.breed_code",
            "select distinct Breeds.breed_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Which owner has paid for the most treatments on his or her dogs? List the owner id and last name.",
        "select_candidates": [
            "select Owners.owner_id, Owners.last_name",
            "select Treatments.dog_id, Owners.owner_id, Owners.last_name",
            "select Dogs.dog_id, Owners.last_name",
            "select Owners.owner_id, Owners.last_name, Owners.first_name, Owners.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Tell me the owner id and last name of the owner who spent the most on treatments of his or her dogs.",
        "select_candidates": [
            "select Dogs.owner_id, Owners.last_name",
            "select Dogs.dog_id, Owners.last_name",
            "select Treatments.dog_id, Owners.last_name",
            "select Owners.owner_id, Owners.last_name"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            1.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the description of the treatment type that costs the least money in total?",
        "select_candidates": [
            "select Treatment_Types.treatment_type_description",
            "select Treatment_Types.treatment_type_description, sum(Treatments.cost_of_treatment)",
            "select Treatment_Types.treatment_type_description, count(*)",
            "select sum(Treatments.cost_of_treatment), Treatment_Types.treatment_type_description"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Give me the description of the treatment type whose total cost is the lowest.",
        "select_candidates": [
            "select Treatment_Types.treatment_type_description",
            "select Treatment_Types.treatment_type_description, sum(Treatments.cost_of_treatment)",
            "select t3, sum(Treatments.cost_of_treatment)",
            "select sum(Treatments.cost_of_treatment), Treatment_Types.treatment_type_description"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Which owner has paid the largest amount of money in total for their dogs? Show the owner id and zip code.",
        "select_candidates": [
            "select Owners.owner_id, Owners.zip_code",
            "select t4, Owners.owner_id, Owners.zip_code",
            "select Owners.owner_id, Owners.zip_code, sum(t5.c)",
            "select Owners.owner_id, Owners.zip_code, sum(Dogs.size_code)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Find the owner id and zip code of the owner who spent the most money in total for his or her dogs.",
        "select_candidates": [
            "select Owners.owner_id, Owners.zip_code",
            "select Owners.owner_id, Owners.zip_code, sum(Dogs.name)",
            "select t4, Owners.owner_id, Owners.zip_code",
            "select owner_Owners.owner_id, Owners.zip_code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Which professionals have done at least two types of treatments? List the professional id and cell phone.",
        "select_candidates": [
            "select Professionals.professional_id, Professionals.cell_number",
            "select Treatments.professional_id, Professionals.cell_number",
            "select distinct Professionals.professional_id, Professionals.cell_number",
            "select t8.c2, Professionals.cell_number"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Find the id and cell phone of the professionals who operate two or more types of treatments.",
        "select_candidates": [
            "select Professionals.professional_id, Professionals.cell_number",
            "select Treatments.professional_id, Professionals.cell_number",
            "select distinct Professionals.professional_id, Professionals.cell_number",
            "select t8.c2, Professionals.cell_number"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the first name and last name of the professionals who have done treatment with cost below average?",
        "select_candidates": [
            "select Professionals.first_name, Professionals.last_name",
            "select distinct Professionals.first_name, Professionals.last_name",
            "select Professionals.first_name, Professionals.last_name, Treatments.cost_of_treatment",
            "select distinct Professionals.first_name, Professionals.last_name, Treatments.cost_of_treatment"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Which professionals have operated a treatment that costs less than the average? Give me theor first names and last names.",
        "select_candidates": [
            "select Professionals.first_name, Professionals.last_name",
            "select distinct Professionals.first_name, Professionals.last_name",
            "select Professionals.first_name, Professionals.last_name, Treatments.cost_of_treatment",
            "select distinct Professionals.first_name, Professionals.last_name, Treatments.cost_of_treatment"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "List the date of each treatment, together with the first name of the professional who operated it.",
        "select_candidates": [
            "select Treatments.date_of_treatment, Professionals.first_name",
            "select Treatments.date_of_treatment, Professionals.first_name, Professionals.role_code",
            "select Treatments.date_of_treatment, Professionals.first_name, Professionals.first_name",
            "select Treatments.date_of_treatment, Professionals.first_name, Treatments.cost_of_treatment"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the date and the operating professional's first name of each treatment?",
        "select_candidates": [
            "select Treatments.date_of_treatment, Professionals.first_name",
            "select Treatments.date_of_treatment, Professionals.first_name, Treatments.cost_of_treatment",
            "select Treatments.date_of_treatment, Professionals.first_name, Professionals.role_code",
            "select Treatments.date_of_treatment, Professionals.first_name, cost(*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "List the cost of each treatment and the corresponding treatment type description.",
        "select_candidates": [
            "select Treatments.cost_of_treatment, Treatment_Types.treatment_type_description",
            "select Treatments.cost_of_treatment, t3, Treatment_Types.treatment_type_description",
            "select Treatments.cost_of_treatment, Treatment_Types.treatment_type_description, Treatments.treatment_type_code",
            "select Treatments.cost_of_treatment, Treatment_Types.treatment_type_description, min(Treatments.cost_of_treatment)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the cost and treatment type description of each treatment?",
        "select_candidates": [
            "select Treatments.cost_of_treatment, Treatment_Types.treatment_type_description",
            "select Treatments.cost_of_treatment, Treatment_Types.treatment_type_description, Treatments.treatment_type_code",
            "select Treatments.cost_of_treatment, Treatment_Types.treatment_type_description, Treatments.date_of_treatment",
            "select Treatments.cost_of_treatment, Treatment_Types.treatment_type_description, Treatments.professional_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "List each owner's first name, last name, and the size of his for her dog.",
        "select_candidates": [
            "select Owners.first_name, Owners.last_name, Dogs.size_code",
            "select distinct Owners.first_name, Owners.last_name, Dogs.size_code",
            "select Owners.first_name, Owners.last_name, Dogs.size_code, Owners.first_name",
            "select Owners.first_name, t2.c2, Dogs.size_code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are each owner's first name, last name, and the size of their dog?",
        "select_candidates": [
            "select Owners.first_name, Owners.last_name, Dogs.size_code",
            "select distinct Owners.first_name, Owners.last_name, Dogs.size_code",
            "select t4, Owners.first_name, Owners.last_name, Dogs.size_code",
            "select Owners.first_name, Owners.last_name, Dogs.size_code, Owners.state"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "List pairs of the owner's first name and the dogs's name.",
        "select_candidates": [
            "select Owners.first_name, Dogs.name",
            "select Owners.first_name, Owners.last_name, Dogs.name",
            "select distinct Owners.first_name, Dogs.name",
            "select t4, Owners.first_name, Dogs.name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are each owner's first name and their dogs's name?",
        "select_candidates": [
            "select Owners.first_name, Dogs.name",
            "select Owners.first_name, Owners.last_name, Dogs.name",
            "select distinct Owners.first_name, Dogs.name",
            "select Owners.first_name, Dogs.name, Owners.owner_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "List the names of the dogs of the rarest breed and the treatment dates of them.",
        "select_candidates": [
            "select Dogs.name, Treatments.date_of_treatment",
            "select distinct Dogs.name, Treatments.date_of_treatment",
            "select Dogs.name, Treatments.date_of_treatment, Treatments.date_of_treatment",
            "select Dogs.name, Treatments.treatment_type_code, Treatments.date_of_treatment"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            1.0
        ]
    },
    {
        "question": "Which dogs are of the rarest breed? Show their names and treatment dates.",
        "select_candidates": [
            "select Dogs.name, Treatments.date_of_treatment",
            "select distinct Dogs.name, Treatments.date_of_treatment",
            "select Dogs.name, Treatments.date_of_treatment, Dogs.owner_id",
            "select Dogs.name, Treatments.date_of_treatment, Dogs.breed_code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            1.0
        ]
    },
    {
        "question": "Which dogs are owned by someone who lives in Virginia? List the owner's first name and the dog's name.",
        "select_candidates": [
            "select Owners.first_name, Dogs.name",
            "select distinct Owners.first_name, Dogs.name",
            "select Owners.first_name, Dogs.name, Owners.last_name",
            "select Owners.first_name, Dogs.name, Owners.owner_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Find the first names of owners living in Virginia and the names of dogs they own.",
        "select_candidates": [
            "select Owners.first_name, Dogs.name",
            "select distinct Owners.first_name, Dogs.name",
            "select Owners.first_name, Dogs.name, Owners.last_name",
            "select Owners.first_name, Dogs.name, Owners.last_name, Owners.owner_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the arriving date and the departing date of the dogs who have gone through a treatment?",
        "select_candidates": [
            "select Dogs.date_arrived, Dogs.date_departed",
            "select distinct Dogs.date_arrived, Dogs.date_departed",
            "select Dogs.date_arrived, Dogs.date_departed, Dogs.owner_id",
            "select Dogs.date_arrived, Dogs.date_departed, Dogs.breed_code"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Find the arriving date and the departing date of the dogs that received a treatment.",
        "select_candidates": [
            "select Dogs.date_arrived, Dogs.date_departed",
            "select distinct Dogs.date_arrived, Dogs.date_departed",
            "select Dogs.date_arrived, Dogs.date_departed, Dogs.owner_id",
            "select Dogs.date_arrived, Dogs.date_departed, Dogs.breed_code"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "List the last name of the owner owning the youngest dog.",
        "select_candidates": [
            "select Owners.last_name",
            "select Owners.last_name, Owners.first_name",
            "select Owners.first_name, Owners.last_name",
            "select Owners.last_name, Owners.first_name, Dogs.age"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ]
    },
    {
        "question": "Who owns the youngest dog? Give me his or her last name.",
        "select_candidates": [
            "select Owners.last_name",
            "select Owners.first_name, Owners.last_name",
            "select Owners.last_name, Owners.first_name",
            "select Owners.first_name, Owners.last_name, Dogs.name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ]
    },
    {
        "question": "List the emails of the professionals who live in the state of Hawaii or the state of Wisconsin.",
        "select_candidates": [
            "select Professionals.email_address",
            "select distinct Professionals.email_address",
            "select Professionals.last_name, Professionals.email_address",
            "select Professionals.email_address, Professionals.city"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the emails of the professionals living in either the state of Hawaii or the state of Wisconsin?",
        "select_candidates": [
            "select Professionals.email_address",
            "select distinct Professionals.email_address",
            "select Professionals.last_name, Professionals.email_address",
            "select Professionals.email_address, Owners.email_address"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the arriving date and the departing date of all the dogs?",
        "select_candidates": [
            "select Dogs.date_arrived, Dogs.date_departed",
            "select Dogs.dog_id, Dogs.date_departed",
            "select distinct Dogs.date_arrived, Dogs.date_departed",
            "select Dogs.owner_id, Dogs.date_departed"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "List the arrival date and the departure date for all the dogs.",
        "select_candidates": [
            "select Dogs.date_arrived, Dogs.date_departed",
            "select Dogs.dog_id, Dogs.date_departed",
            "select distinct Dogs.date_arrived, Dogs.date_departed",
            "select Dogs.owner_id, Dogs.date_departed"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How many dogs went through any treatments?",
        "select_candidates": [
            "select count(*)",
            "select count(distinct Treatments.dog_id)",
            "select count (distinct Treatments.dog_id)",
            "select count(*), Treatments.dog_id"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Count the number of dogs that went through a treatment.",
        "select_candidates": [
            "select count(*)",
            "select count(distinct Treatments.dog_id)",
            "select count(*), Treatments.treatment_id",
            "select count(distinct Treatments.treatment_id)"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How many professionals have performed any treatment to dogs?",
        "select_candidates": [
            "select count(distinct Treatments.professional_id)",
            "select count(distinct Professionals.first_name)",
            "select count (distinct Treatments.professional_id)",
            "select count(distinct Professionals.professional_id)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Find the number of professionals who have ever treated dogs.",
        "select_candidates": [
            "select count(*)",
            "select count(distinct Professionals.professional_id)",
            "select count(distinct Treatments.professional_id)",
            "select count(distinct Professionals.first_name)"
        ],
        "select_labels": [
            0.0,
            0.0,
            1.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Which professionals live in a city containing the substring 'West'? List his or her role, street, city and state.",
        "select_candidates": [
            "select Professionals.role_code, Professionals.street, Professionals.city, Professionals.state",
            "select Professionals.street, Professionals.city, Professionals.state",
            "select Professionals.street, Professionals.street, Professionals.city, Professionals.state",
            "select distinct Professionals.role_code, Professionals.street, Professionals.city, Professionals.state"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Find the role, street, city and state of the professionals living in a city that contains the substring 'West'.",
        "select_candidates": [
            "select Professionals.role_code, Professionals.street, Professionals.city, Professionals.state",
            "select distinct Professionals.role_code, Professionals.street, Professionals.city, Professionals.state",
            "select Professionals.street, Professionals.city, Professionals.state",
            "select Professionals.first_name, Professionals.street, Professionals.city, Professionals.state"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Which owners live in the state whose name contains the substring 'North'? List his first name, last name and email.",
        "select_candidates": [
            "select Owners.first_name, Owners.last_name, Owners.email_address",
            "select distinct Owners.first_name, Owners.last_name, Owners.email_address",
            "select Owners.first_name, Owners.last_name, Owners.email_address, Owners.owner_id",
            "select Owners.owner_id, Owners.first_name, Owners.last_name, Owners.email_address"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Return the first name, last name and email of the owners living in a state whose name contains the substring 'North'.",
        "select_candidates": [
            "select Owners.first_name, Owners.last_name, Owners.email_address",
            "select distinct Owners.first_name, Owners.last_name, Owners.email_address",
            "select Owners.first_name, Owners.email_address, Owners.last_name",
            "select Owners.first_name, Owners.last_name, Owners.email_address, Owners.owner_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How many dogs have an age below the average?",
        "select_candidates": [
            "select count(*)",
            "select count(distinct Dogs.dog_id)",
            "select count(distinct Dogs.name)",
            "select count(*), Dogs.dog_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Count the number of dogs of an age below the average.",
        "select_candidates": [
            "select count(*)",
            "select count(distinct Dogs.dog_id)",
            "select count(distinct Dogs.name)",
            "select count(*), Dogs.age"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How much does the most recent treatment cost?",
        "select_candidates": [
            "select Treatments.cost_of_treatment",
            "select max(Treatments.cost_of_treatment)",
            "select maximum(Treatments.cost_of_treatment)",
            "select sum(Treatments.cost_of_treatment)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Show me the cost of the most recently performed treatment.",
        "select_candidates": [
            "select Treatments.cost_of_treatment",
            "select Treatments.cost_of_treatment, Treatments.date_of_treatment",
            "select max(Treatments.cost_of_treatment)",
            "select Treatments.cost_of_treatment, Treatments.treatment_type_code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How many dogs have not gone through any treatment?",
        "select_candidates": [
            "select count(*)",
            "select count(distinct Dogs.dog_id)",
            "select count(distinct Dogs.name)",
            "select count(*), Dogs.dog_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Tell me the number of dogs that have not received any treatment.",
        "select_candidates": [
            "select count(*)",
            "select count(distinct Dogs.dog_id)",
            "select count(*), Dogs.dog_id",
            "select count(distinct Dogs.name)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How many owners temporarily do not have any dogs?",
        "select_candidates": [
            "select count(*)",
            "select count(distinct Owners.first_name)",
            "select count(*), Owners.first_name",
            "select count(distinct t4, Owners.first_name)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Find the number of owners who do not own any dogs at this moment.",
        "select_candidates": [
            "select count(*)",
            "select count(distinct Owners.first_name)",
            "select count(*), Owners.first_name",
            "select count(*), Owners.first_name, Owners.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How many professionals did not operate any treatment on dogs?",
        "select_candidates": [
            "select count(*)",
            "select count(distinct Professionals.first_name)",
            "select count(distinct Professionals.last_name)",
            "select count(*), Professionals.role_code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Find the number of professionals who have not treated any dogs.",
        "select_candidates": [
            "select count(*)",
            "select count(distinct Professionals.first_name)",
            "select count(*), Professionals.first_name",
            "select count(distinct Professionals.last_name)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "List the dog name, age and weight of the dogs who have been abandoned? 1 stands for yes, and 0 stands for no.",
        "select_candidates": [
            "select Dogs.name, Dogs.age, Dogs.weight",
            "select distinct Dogs.name, Dogs.age, Dogs.weight",
            "select Dogs.name, Dogs.age, Dogs.weight, Dogs.abandoned_yn",
            "select Dogs.name, Dogs.owner_id, Dogs.weight"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the dog name, age and weight of the dogs that were abandoned? Note that 1 stands for yes, and 0 stands for no in the tables.",
        "select_candidates": [
            "select Dogs.name, Dogs.age, Dogs.weight",
            "select distinct Dogs.name, Dogs.age, Dogs.weight",
            "select Dogs.name, Dogs.age, Dogs.weight, Dogs.abandoned_yn",
            "select Dogs.name, Dogs.owner_id, Dogs.weight"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the average age of all the dogs?",
        "select_candidates": [
            "select avg(Dogs.age)",
            "select Dogs.age, avg(Dogs.age)",
            "select avg(Dogs.age), Dogs.date_of_birth",
            "select avg(Dogs.age), Dogs.age"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Compute the average age of all the dogs.",
        "select_candidates": [
            "select avg(Dogs.age)",
            "select Dogs.age, avg(Dogs.age)",
            "select avg(Dogs.age), Dogs.name",
            "select avg(Dogs.age), Dogs.date_of_birth"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the age of the oldest dog?",
        "select_candidates": [
            "select Dogs.age",
            "select max(Dogs.age)",
            "select Dogs.age, max(Dogs.age)",
            "select Dogs.age, Dogs.owner_id"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ]
    },
    {
        "question": "Tell me the age of the oldest dog.",
        "select_candidates": [
            "select Dogs.age",
            "select max(Dogs.age)",
            "select Dogs.age, max(Dogs.age)",
            "select Dogs.age, Dogs.name"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ]
    },
    {
        "question": "How much does each charge type costs? List both charge type and amount.",
        "select_candidates": [
            "select Charges.charge_type, Charges.charge_amount",
            "select Charges.charge_id, Charges.charge_type, Charges.charge_amount",
            "select distinct Charges.charge_type, Charges.charge_amount",
            "select Charges.charge_type, sum(Charges.charge_amount)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM"
        ],
        "structure_labels": [
            0.0,
            1.0
        ]
    },
    {
        "question": "List each charge type and its amount.",
        "select_candidates": [
            "select Charges.charge_type, Charges.charge_amount",
            "select distinct Charges.charge_type, Charges.charge_amount",
            "select Charges.charge_id, Charges.charge_type, Charges.charge_amount",
            "select Charges.charge_type, sum(Charges.charge_amount)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How much does the most expensive charge type costs?",
        "select_candidates": [
            "select Charges.charge_type, max(Charges.charge_amount)",
            "select Charges.charge_type, Charges.charge_amount",
            "select Charges.charge_type",
            "select Charges.charge_type, min(Charges.charge_amount)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ]
    },
    {
        "question": "What is the charge amount of the most expensive charge type?",
        "select_candidates": [
            "select Charges.charge_amount",
            "select Charges.charge_id, Charges.charge_type, Charges.charge_amount",
            "select Charges.charge_type, Charges.charge_amount",
            "select Charges.charge_id, Charges.charge_type, max(Charges.charge_amount)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-UNION-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ]
    },
    {
        "question": "List the email, cell phone and home phone of all the professionals.",
        "select_candidates": [
            "select Professionals.email_address, Professionals.home_phone, Professionals.cell_number",
            "select Professionals.email_address, Professionals.cell_number, Professionals.home_phone",
            "select distinct Professionals.email_address, Professionals.cell_number, Professionals.home_phone",
            "select distinct Professionals.email_address, Professionals.home_phone, Professionals.cell_number"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the email, cell phone and home phone of each professional?",
        "select_candidates": [
            "select Professionals.email_address, Professionals.cell_number, Professionals.home_phone",
            "select Professionals.email_address, Professionals.home_phone, Professionals.cell_number",
            "select distinct Professionals.email_address, Professionals.cell_number, Professionals.home_phone",
            "select distinct Professionals.email_address, Professionals.home_phone, Professionals.cell_number"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are all the possible breed type and size type combinations?",
        "select_candidates": [
            "select Dogs.breed_code, Dogs.size_code",
            "select distinct Dogs.breed_code, Dogs.size_code",
            "select Dogs.breed_code, Dogs.abandoned_yn",
            "select count(distinct Dogs.breed_code), count(*)"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Find the distinct breed type and size type combinations for dogs.",
        "select_candidates": [
            "select distinct Dogs.breed_code, Dogs.size_code",
            "select distinct Dogs.breed_code, Dogs.size_code, count(distinct Dogs.owner_id)",
            "select distinct(Dogs.breed_code), Dogs.size_code",
            "select distinct Dogs.breed_code, Dogs.size_code, count(distinct Dogs.dog_id)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "List the first name of all the professionals along with the description of the treatment they have done.",
        "select_candidates": [
            "select Professionals.first_name, Treatment_Types.treatment_type_description",
            "select Professionals.first_name, Treatment_Types.treatment_type_description, Treatments.date_of_treatment",
            "select Professionals.first_name, Treatment_Types.treatment_type_description, Treatments.professional_id",
            "select Professionals.first_name, Treatment_Types.treatment_type_description, Treatments.treatment_type_code"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are each professional's first name and description of the treatment they have performed?",
        "select_candidates": [
            "select Professionals.first_name, Treatment_Types.treatment_type_description",
            "select Professionals.first_name, Treatment_Types.treatment_type_description, Treatments.professional_id",
            "select Professionals.first_name, Treatment_Types.treatment_type_description, Treatments.date_of_treatment",
            "select Professionals.first_name, Treatment_Types.treatment_type_description, Treatments.treatment_type_code"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How many singers are there?",
        "select_candidates": [
            "select count(*)",
            "select count(distinct singer.Singer_ID)",
            "select count(distinct singer.Name)",
            "select count (*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the count of singers?",
        "select_candidates": [
            "select count(*)",
            "select count(*), singer.Name",
            "select count(*), count(*)",
            "select singer.Name, count(*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "List the name of singers in ascending order of net worth.",
        "select_candidates": [
            "select singer.Name",
            "select singer.Name, singer.Net_Worth_Millions",
            "select singer.Singer_ID, singer.Name",
            "select distinct singer.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the names of singers ordered by ascending net worth?",
        "select_candidates": [
            "select singer.Name",
            "select singer.Name, singer.Net_Worth_Millions",
            "select distinct singer.Name",
            "select singer.Singer_ID, singer.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the birth year and citizenship of singers?",
        "select_candidates": [
            "select singer.Birth_Year, singer.Citizenship",
            "select singer.Citizenship, singer.Birth_Year",
            "select distinct singer.Birth_Year, singer.Citizenship",
            "select singer.Net_Worth_Millions, singer.Citizenship"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the birth years and citizenships of the singers?",
        "select_candidates": [
            "select singer.Birth_Year, singer.Citizenship",
            "select distinct singer.Birth_Year, singer.Citizenship",
            "select singer.Citizenship, singer.Birth_Year",
            "select singer.Net_Worth_Millions, singer.Citizenship"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "List the name of singers whose citizenship is not \"France\".",
        "select_candidates": [
            "select singer.Name",
            "select distinct singer.Name",
            "select singer.Name, singer.Citizenship",
            "select singer.Singer_ID, singer.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the names of the singers who are not French citizens?",
        "select_candidates": [
            "select singer.Name",
            "select distinct singer.Name",
            "select singer.Name, singer.Name",
            "select singer.Name, singer.Citizenship"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Show the name of singers whose birth year is either 1948 or 1949?",
        "select_candidates": [
            "select singer.Name",
            "select singer.Name, singer.Birth_Year",
            "select distinct singer.Name",
            "select singer.Singer_ID, singer.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the names of the singers whose birth years are either 1948 or 1949?",
        "select_candidates": [
            "select singer.Name",
            "select distinct singer.Name",
            "select singer.Name, singer.Birth_Year",
            "select singer.Singer_ID, singer.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the name of the singer with the largest net worth?",
        "select_candidates": [
            "select singer.Name",
            "select singer.Name, singer.Net_Worth_Millions",
            "select singer.Name, max(singer.Net_Worth_Millions)",
            "select singer.Name, singer.Net_Worth_Millions, max(singer.Net_Worth_Millions)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the name of the singer who is worth the most?",
        "select_candidates": [
            "select singer.Name",
            "select singer.Name, singer.Net_Worth_Millions",
            "select singer.Name, singer.Net_Worth_Millions, max(singer.Net_Worth_Millions)",
            "select singer.Name, max(net_worth_millions)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Show different citizenship of singers and the number of singers of each citizenship.",
        "select_candidates": [
            "select singer.Citizenship, count(*)",
            "select distinct singer.Citizenship, count(*)",
            "select count(*), singer.Citizenship",
            "select singer.Citizenship, count(*),"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "For each citizenship, how many singers are from that country?",
        "select_candidates": [
            "select singer.Citizenship, count(*)",
            "select count(*), singer.Citizenship",
            "select sing(*), singer.Citizenship",
            "select distinct singer.Citizenship, count(*)"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Please show the most common citizenship of singers.",
        "select_candidates": [
            "select singer.Citizenship",
            "select singer.Citizenship, singer.Net_Worth_Millions",
            "select singer.Citizenship, singer.Name",
            "select singer.Citizenship, singer.Birth_Year"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            1.0
        ]
    },
    {
        "question": "What is the most common singer citizenship?",
        "select_candidates": [
            "select singer.Citizenship",
            "select singer.Citizenship, singer.Name",
            "select singer.Citizenship, singer.Net_Worth_Millions",
            "select most-common singer.Citizenship"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Show different citizenships and the maximum net worth of singers of each citizenship.",
        "select_candidates": [
            "select singer.Citizenship, max(singer.Net_Worth_Millions)",
            "select distinct singer.Citizenship, max(singer.Net_Worth_Millions)",
            "select singer.Citizenship, max(singer.Net_Worth_Millions), singer.Net_Worth_Millions",
            "select singer.Citizenship, max(*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "For each citizenship, what is the maximum net worth?",
        "select_candidates": [
            "select singer.Citizenship, max(singer.Net_Worth_Millions)",
            "select max(singer.Net_Worth_Millions), singer.Citizenship",
            "select singer.Citizenship, max(*)",
            "select singer.Citizenship, singer.Net_Worth_Millions, max(singer.Net_Worth_Millions)"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Show titles of songs and names of singers.",
        "select_candidates": [
            "select song.Title, singer.Name",
            "select distinct song.Title, singer.Name",
            "select sing(song.Title), singer.Name",
            "select song(song.Title), singer.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the song titles and singer names?",
        "select_candidates": [
            "select song.Title, singer.Name",
            "select distinct song.Title, singer.Name",
            "select sing(song.Title), singer.Name",
            "select song(song.Title), singer.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Show distinct names of singers that have songs with sales more than 300000.",
        "select_candidates": [
            "select distinct singer.Name",
            "select distinct singer.Name, song.Sales",
            "select distinct singer.Name, singer.Singer_ID",
            "select distinct singer.Name, singer.Birth_Year"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "what are the different names of the singers that have sales more than 300000?",
        "select_candidates": [
            "select distinct singer.Name",
            "select distinct singer.Name, song.Sales",
            "select count(distinct singer.Name)",
            "select distinct singer.Name, singer.Singer_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Show the names of singers that have more than one song.",
        "select_candidates": [
            "select singer.Name",
            "select singer.Name, count(*), song.Title",
            "select singer.Name, singer.Singer_ID, singer.Name",
            "select singer.Name, singer.Singer_ID, song.Title"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the names of the singers that have more than one songs?",
        "select_candidates": [
            "select singer.Name",
            "select singer.Name, count(*), song.Title",
            "select singer.Name, singer.Singer_ID, song.Title",
            "select singer.Name, song.Title"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Show the names of singers and the total sales of their songs.",
        "select_candidates": [
            "select singer.Name, sum(song.Sales)",
            "select distinct singer.Name, sum(song.Sales)",
            "select sum(song.Sales), singer.Name",
            "select sing(singer.Name), sum(song.Sales)"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "For each singer name, what is the total sales for their songs?",
        "select_candidates": [
            "select singer.Name, sum(song.Sales)",
            "select sum(song.Sales), singer.Name",
            "select sum(song.Sales), singer.Name, singer.Name",
            "select sing(song.Sales), singer.Name, sum(song.Sales)"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "List the name of singers that do not have any song.",
        "select_candidates": [
            "select singer.Name",
            "select singer.Name, singer.Singer_ID",
            "select singer.Name, singer.Singer_ID, singer.Name",
            "select singer.Name, singer.Birth_Year"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the sname of every sing that does not have any song?",
        "select_candidates": [
            "select singer.Name",
            "select singer.Name, singer.Singer_ID",
            "select singer.Name, singer.Name",
            "select singer.Name, singer.Birth_Year"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Show the citizenship shared by singers with birth year before 1945 and after 1955.",
        "select_candidates": [
            "select singer.Citizenship",
            "select singer.Citizenship, singer.Birth_Year",
            "select singer.Birth_Year, singer.Citizenship",
            "select sing(singer.Citizenship), singer.Birth_Year"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What are the citizenships that are shared by singers with a birth year before 1945 and after 1955?",
        "select_candidates": [
            "select singer.Citizenship",
            "select singer.Citizenship, singer.Birth_Year",
            "select singer.Birth_Year, singer.Citizenship",
            "select distinct singer.Citizenship"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "How many available features are there in total?",
        "select_candidates": [
            "select count(*)",
            "select count(distinct Other_Available_Features.feature_name)",
            "select count(*), Other_Available_Features.feature_name",
            "select count(distinct Other_Available_Features.feature_id)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "What is the feature type name of feature AirCon?",
        "select_candidates": [
            "select Ref_Feature_Types.feature_type_name",
            "select distinct Ref_Feature_Types.feature_type_name",
            "select Ref_Feature_Types.feature_type_name, Other_Available_Features.feature_name",
            "select Ref_Feature_Types.feature_type_code, Ref_Feature_Types.feature_type_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ]
    },
    {
        "question": "Show the property type descriptions of properties belonging to that code.",
        "select_candidates": [
            "select Ref_Property_Types.property_type_description",
            "select Ref_Property_Types.property_type_description, Properties.property_type_code",
            "select distinct Ref_Property_Types.property_type_description",
            "select Ref_Property_Types.property_type_code, Ref_Property_Types.property_type_description"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ]
    },
    {
        "question": "What are the names of properties that are either houses or apartments with more than 1 room?",
        "select_candidates": [
            "select Properties.property_name",
            "select distinct Properties.property_name",
            "select Properties.property_name, Properties.property_type_code",
            "select Properties.property_name, Properties.property_type_code, Properties.room_count"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            1.0
        ]
    }
]