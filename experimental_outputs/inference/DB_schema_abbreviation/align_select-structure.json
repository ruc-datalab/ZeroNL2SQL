[
    {
        "question": "Show name, country, age for all singers ordered by age from the oldest to the youngest.",
        "gold_select": "select singer.Name, singer.cntry, singer.Age",
        "select_candidates": [
            "select singer.Name, singer.cntry, singer.Age",
            "select singer.Name, singer.cntry, singer.Age",
            "select singer.Name, singer.cntry., singer.Age",
            "select singer.Name, singer.cntry, singer.Age."
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.9943869113922119,
            0.0002770215505734086,
            0.9943869113922119,
            0.0002770215505734086,
            0.9148011207580566,
            0.0004147673898842186,
            0.00792583730071783,
            0.00033070147037506104
        ],
        "align_select": "select singer.Name, singer.cntry, singer.Age",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "What are the names, countries, and ages for every singer in descending order of age?",
        "gold_select": "select singer.Name, singer.cntry, singer.Age",
        "select_candidates": [
            "select singer.Name, singer.cntry, singer.Age",
            "select singer.Name, singer.cntry, singer.Age",
            "select singer.Name, singer.cntry, singer.Age",
            "select singer.Name, singer.cntry., singer.Age"
        ],
        "select_labels": [
            1.0,
            1.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.9946296215057373,
            0.9946296215057373,
            0.9946296215057373,
            0.9946296215057373,
            0.9946296215057373,
            0.9946296215057373,
            0.7442984580993652,
            0.7442984580993652
        ],
        "align_select": "select singer.Name, singer.cntry, singer.Age",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "What is the average, minimum, and maximum age of all singers from France?",
        "gold_select": "select avg(singer.Age), min(singer.Age), max(singer.Age)",
        "select_candidates": [
            "select avg(singer.Age), min(singer.Age), max(singer.Age)",
            "select avg(singer.Is_male), min(singer.Age), max(singer.Age)",
            "select avg(singer.Age), min(singer.Age), max(singer.Age)",
            "select avg(singer.Age), min(singer.Age), max(singer.Age)"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.9946478009223938,
            0.9946478009223938,
            0.00019536579202394933,
            0.00019536579202394933,
            0.9946478009223938,
            0.9946478009223938,
            0.9946478009223938,
            0.9946478009223938
        ],
        "align_select": "select avg(singer.Age), min(singer.Age), max(singer.Age)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the average, minimum, and maximum age for all French singers?",
        "gold_select": "select avg(singer.Age), min(singer.Age), max(singer.Age)",
        "select_candidates": [
            "select avg(singer.Age), min(singer.Age), max(singer.Age)",
            "select avg(singer.Is_male), min(singer.Age), max(singer.Age)",
            "select avg(singer.Age), min(singer.Age), max(singer.Age)",
            "select avg(singer.Age), min(singer.Age), max(singer.Age)"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.9942711591720581,
            0.9942711591720581,
            0.0001946419506566599,
            0.0001946419506566599,
            0.9942711591720581,
            0.9942711591720581,
            0.9942711591720581,
            0.9942711591720581
        ],
        "align_select": "select avg(singer.Age), min(singer.Age), max(singer.Age)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are all distinct countries where singers above age 20 are from?",
        "gold_select": "select distinct singer.cntry",
        "select_candidates": [
            "select distinct singer.cntry",
            "select distinct singer.cntry, singer.Age",
            "select distinct singer.cntry, count(distinct singer.Age)",
            "select distinct singer.cntry, singer.Is_male"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.9786080718040466,
            0.002044198103249073,
            0.00013741175644099712,
            0.00013499456690624356,
            0.0001939714711625129,
            0.00013263660366646945,
            0.00020551183843053877,
            0.00013094434689264745
        ],
        "align_select": "select distinct singer.cntry",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the different countries with singers above age 20?",
        "gold_select": "select distinct singer.cntry",
        "select_candidates": [
            "select distinct singer.cntry",
            "select count(distinct singer.cntry)",
            "select distinct singer.cntry, singer.Age",
            "select distinct singer.cntry, singer.Song_Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.9764181971549988,
            0.004016697872430086,
            0.01234721951186657,
            0.00025199566152878106,
            0.00016598400543443859,
            9.767786104930565e-05,
            0.00013406875950749964,
            9.191103163175285e-05
        ],
        "align_select": "select distinct singer.cntry",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show all countries and the number of singers in each country.",
        "gold_select": "select singer.cntry, count(*)",
        "select_candidates": [
            "select singer.cntry, count(*)",
            "select singer.cntry, count(*), singer.Singer_ID",
            "select singer.cntry., count(*)",
            "select singer.cntry, count(*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.9681015014648438,
            0.0002426604914944619,
            0.0001279264542972669,
            0.0001032233121804893,
            0.0022152236197143793,
            0.0002219767775386572,
            0.9681015014648438,
            0.0002426604914944619
        ],
        "align_select": "select singer.cntry, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "How many singers are from each country?",
        "gold_select": "select singer.cntry, count(*)",
        "select_candidates": [
            "select singer.cntry, count(*)",
            "select count(*), singer.cntry",
            "select singer.cntry, count(*), singer.Singer_ID",
            "select singer.cntry.c0, count(*)"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.9949207901954651,
            0.0002165628393413499,
            0.9935897588729858,
            0.0002468364837113768,
            0.00013355124974623322,
            9.04741245904006e-05,
            0.0008375423494726419,
            0.00011586386972339824
        ],
        "align_select": "select singer.cntry, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "Show location and name for all stadiums with a capacity between 5000 and 10000.",
        "gold_select": "select stadium.loc, stadium.Name",
        "select_candidates": [
            "select stadium.loc, stadium.Name",
            "select stadium.loc., stadium.Name",
            "select t0, stadium.loc, stadium.Name",
            "select stadium.loc, stadium.Name, stadium.stdm_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "stadium",
        "table_candidates": [
            "stadium"
        ],
        "align_scores": [
            0.9951124787330627,
            0.00019939099729526788,
            0.8652642369270325,
            0.00012553045235108584,
            0.0003538783930707723,
            6.570887489942834e-05,
            0.00014571283827535808,
            6.28069756203331e-05
        ],
        "align_select": "select stadium.loc, stadium.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the locations and names of all stations with capacity between 5000 and 10000?",
        "gold_select": "select stadium.loc, stadium.Name",
        "select_candidates": [
            "select stadium.loc, stadium.Name",
            "select stadium.loc., stadium.Name",
            "select t0, stadium.loc, stadium.Name",
            "select stadium.loc, stadium.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "stadium",
        "table_candidates": [
            "stadium"
        ],
        "align_scores": [
            0.9851483106613159,
            0.0003699102089740336,
            0.7555866837501526,
            0.0002030134928645566,
            0.00035031966399401426,
            8.150067151291296e-05,
            0.9851483106613159,
            0.0003699102089740336
        ],
        "align_select": "select stadium.loc, stadium.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the maximum capacity and the average of all stadiums?",
        "gold_select": "select max(stadium.cap), stadium.Average",
        "select_candidates": [
            "select max(stadium.cap), avg(stadium.Average)",
            "select max(stadium.cap), avg(stadium.cap)",
            "select stadium.cap, avg(stadium.Average)",
            "select max(stadium.cap), avg(stadium.Highest)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "stadium",
        "table_candidates": [
            "stadium"
        ],
        "align_scores": [
            0.00198205909691751,
            5.734656588174403e-05,
            0.9945218563079834,
            6.676393240923062e-05,
            0.00044520909432321787,
            9.308502194471657e-05,
            0.0006336448714137077,
            0.00010568442667135969
        ],
        "align_select": "select max(stadium.cap), avg(stadium.cap)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What is the average and maximum capacities for all stadiums?",
        "gold_select": "select avg(stadium.cap), max(stadium.cap)",
        "select_candidates": [
            "select avg(stadium.Average), max(stadium.cap)",
            "select avg(stadium.cap), max(stadium.cap)",
            "select stadium.Average, stadium.cap",
            "select avg(stadium.Highest), max(stadium.cap)"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "stadium",
        "table_candidates": [
            "stadium",
            "stadium singer concert",
            "stadium singer",
            "stadium singer singer_in_concert",
            "stadium concert singer_in_concert",
            "stadium concert"
        ],
        "align_scores": [
            0.0005451784236356616,
            0.00010181190009461716,
            0.9949111342430115,
            7.320645090658218e-05,
            0.9670578837394714,
            0.00017667505017016083,
            0.0013036682503297925,
            0.00010534535249462351
        ],
        "align_select": "select avg(stadium.cap), max(stadium.cap)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What is the name and capacity for the stadium with highest average attendance?",
        "gold_select": "select stadium.Name, stadium.cap",
        "select_candidates": [
            "select stadium.Name, stadium.cap",
            "select stadium.stdm_id, stadium.Name, stadium.cap",
            "select stadium.loc, stadium.cap",
            "select stadium.Name, stadium.cap, avg(stadium.Average)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "stadium",
        "table_candidates": [
            "stadium"
        ],
        "align_scores": [
            0.9941543936729431,
            0.9906179308891296,
            0.0010043694637715816,
            0.00043610003194771707,
            0.0008046596776694059,
            0.0009448284399695694,
            0.0009819472907111049,
            0.00023191538639366627
        ],
        "align_select": "select stadium.Name, stadium.cap",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the name and capacity for the stadium with the highest average attendance?",
        "gold_select": "select stadium.Name, stadium.cap",
        "select_candidates": [
            "select stadium.Name, stadium.cap",
            "select stadium.stdm_id, stadium.Name, stadium.cap",
            "select stadium.loc, stadium.cap",
            "select stadium.Name, stadium.cap, avg(stadium.Average)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "stadium",
        "table_candidates": [
            "stadium",
            "stadium concert"
        ],
        "align_scores": [
            0.9939542412757874,
            0.9890097975730896,
            0.0009798048995435238,
            0.00043157924665138125,
            0.0008716027368791401,
            0.0009522452019155025,
            0.0008602446177974343,
            0.0002343770320294425
        ],
        "align_select": "select stadium.Name, stadium.cap",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Show the stadium name and the number of concerts in each stadium.",
        "gold_select": "select stadium.Name, count(*)",
        "select_candidates": [
            "select stadium.Name, count(*)",
            "select stadium.Name.c2, count(*)",
            "select stadium.Name, count(*), concert.Stadium_ID",
            "select stadium.loc, count(*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "stadium concert",
        "table_candidates": [
            "stadium concert"
        ],
        "align_scores": [
            0.9943562150001526,
            0.00017691543325781822,
            0.00034233162296004593,
            0.00013446860248222947,
            0.0003101867332588881,
            8.73469325597398e-05,
            0.0006065203924663365,
            0.00014713223208673298
        ],
        "align_select": "select stadium.Name, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "For each stadium, how many concerts play there?",
        "gold_select": "select stadium.Name, count(*)",
        "select_candidates": [
            "select stadium.Name, count(*)",
            "select stadium.stdm_id, count(*)",
            "select stadium.Name.c2, count(*)",
            "select stadium.Name, count(*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "stadium concert",
        "table_candidates": [
            "stadium concert"
        ],
        "align_scores": [
            0.9911496639251709,
            0.00014006602577865124,
            0.041687577962875366,
            0.00015086372150108218,
            0.0008224760531447828,
            0.00012334069469943643,
            0.9911496639251709,
            0.00014006602577865124
        ],
        "align_select": "select stadium.Name, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "Show the stadium name and capacity with most number of concerts in year 2014 or after.",
        "gold_select": "select stadium.Name, stadium.cap",
        "select_candidates": [
            "select stadium.Name, stadium.cap",
            "select stadium.loc, stadium.cap",
            "select stadium.Name., stadium.cap",
            "select stadium.Name, t0-.c3"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "stadium concert",
        "table_candidates": [
            "stadium concert"
        ],
        "align_scores": [
            0.9913522005081177,
            0.0001422825298504904,
            0.013179556466639042,
            8.885966963134706e-05,
            0.008764357306063175,
            0.00016519612108822912,
            0.0011083330027759075,
            8.440876263193786e-05
        ],
        "align_select": "select stadium.Name, stadium.cap",
        "align_structure": "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the name and capacity of the stadium with the most concerts after 2013?",
        "gold_select": "select stadium.Name, stadium.cap",
        "select_candidates": [
            "select stadium.Name, stadium.cap",
            "select stadium.loc, stadium.cap",
            "select stadium.cap, stadium.Name",
            "select stadium.Name., stadium.cap"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "stadium concert",
        "table_candidates": [
            "stadium concert",
            "stadium singer concert"
        ],
        "align_scores": [
            0.9894663691520691,
            0.00018140286556445062,
            0.0008694014395587146,
            8.924808935262263e-05,
            0.9906755685806274,
            0.00020206201588734984,
            0.009016559459269047,
            0.00019012397387996316
        ],
        "align_select": "select stadium.Name, stadium.cap",
        "align_structure": "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Show the stadium names without any concert.",
        "gold_select": "select stadium.Name",
        "select_candidates": [
            "select stadium.Name",
            "select stadium.stdm_id, stadium.Name",
            "select stadium.loc, stadium.Name",
            "select stadium.Name, stadium.stdm_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "stadium",
        "table_candidates": [
            "stadium",
            "stadium concert"
        ],
        "align_scores": [
            0.9941731095314026,
            0.3416217863559723,
            0.00020824534294661134,
            0.0003073132538702339,
            0.00017141277203336358,
            0.00022812311362940818,
            0.00013329806097317487,
            0.00017240052693523467
        ],
        "align_select": "select stadium.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of the stadiums without any concerts?",
        "gold_select": "select stadium.Name",
        "select_candidates": [
            "select stadium.Name",
            "select stadium.stdm_id, stadium.Name",
            "select stadium.loc, stadium.Name",
            "select stadium.Name, stadium.cap"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "stadium",
        "table_candidates": [
            "stadium",
            "stadium concert"
        ],
        "align_scores": [
            0.9859153032302856,
            0.10062874108552933,
            0.0002699111355468631,
            0.0003798659017775208,
            0.0002971776993945241,
            0.00032020852086134255,
            0.0003275312192272395,
            0.0007260079146362841
        ],
        "align_select": "select stadium.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show countries where a singer above age 40 and a singer below 30 are from.",
        "gold_select": "select singer.cntry",
        "select_candidates": [
            "select singer.cntry",
            "select singer.cntry, singer.Age",
            "select singer.cntry for singer.Age, singer.Is_male",
            "select singer.cntry, singer.Age, singer.Is_male"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.9938952326774597,
            0.09076983481645584,
            0.0003182658401783556,
            0.00013941309589426965,
            0.00018856195674743503,
            0.00015020491264294833,
            0.00015353283379226923,
            0.00011767849355237558
        ],
        "align_select": "select singer.cntry",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "Show names for all stadiums except for stadiums having a concert in year 2014.",
        "gold_select": "select stadium.Name",
        "select_candidates": [
            "select stadium.Name",
            "select stadium.stdm_id, stadium.Name",
            "select stadium.loc, stadium.Name",
            "select stadium.Name, concert.Stadium_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "stadium concert",
        "table_candidates": [
            "stadium concert"
        ],
        "align_scores": [
            0.988661527633667,
            0.9901819825172424,
            0.0005963566363789141,
            0.0005762894870713353,
            0.0004529831639956683,
            0.00040198140777647495,
            0.00042050142656080425,
            0.0003996586019638926
        ],
        "align_select": "select stadium.Name",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of all stadiums that did not have a concert in 2014?",
        "gold_select": "select stadium.Name",
        "select_candidates": [
            "select stadium.Name",
            "select stadium.stdm_id, stadium.Name",
            "select stadium.loc, stadium.Name",
            "select stadium.Name, concert.Stadium_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "stadium concert",
        "table_candidates": [
            "stadium concert"
        ],
        "align_scores": [
            0.9577655792236328,
            0.022184155881404877,
            0.0007680649287067354,
            0.00030109306680969894,
            0.0007153524202294648,
            0.0003684661351144314,
            0.000524691364262253,
            0.00036706129321828485
        ],
        "align_select": "select stadium.Name",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "what is the name and nation of the singer who have a song having 'Hey' in its name?",
        "gold_select": "select singer.Name, singer.cntry",
        "select_candidates": [
            "select singer.Name, singer.cntry",
            "select singer.Name, singer.cntry, singer.Singer_ID",
            "select singer.Name, singer.cntry, singer.Song_Name",
            "select singer.Name, singer.cntry for the SELECT-FROM-WHERE"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.9804292917251587,
            0.00021303152607288212,
            0.00031278724782168865,
            7.90543999755755e-05,
            0.0004393547715153545,
            8.04402370704338e-05,
            0.0838685929775238,
            9.201205102726817e-05
        ],
        "align_select": "select singer.Name, singer.cntry",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the name and country of origin of every singer who has a song with the word 'Hey' in its title?",
        "gold_select": "select singer.Name, singer.cntry",
        "select_candidates": [
            "select singer.Name, singer.cntry",
            "select singer.Name, singer.cntry, singer.Singer_ID",
            "select singer.Name, singer.cntry,",
            "select distinct singer.Name, singer.cntry"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.9571187496185303,
            0.0002661523758433759,
            0.0004464936500880867,
            8.659133891342208e-05,
            0.0039286487735807896,
            8.85723638930358e-05,
            0.0892539992928505,
            0.00013930386921856552
        ],
        "align_select": "select singer.Name, singer.cntry",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the name and location of the stadiums which some concerts happened in the years of both 2014 and 2015.",
        "gold_select": "select stadium.Name, stadium.loc",
        "select_candidates": [
            "select stadium.Name, stadium.loc",
            "select stadium.loc, stadium.Name",
            "select stadium.stdm_id, stadium.Name, stadium.loc",
            "select stadium.Name, stadium.loc, concert.Stadium_ID"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "stadium concert",
        "table_candidates": [
            "stadium concert"
        ],
        "align_scores": [
            0.9598409533500671,
            0.015087501145899296,
            0.9762736558914185,
            0.011081719771027565,
            0.000272090284852311,
            0.0002091447386192158,
            0.00019337759295012802,
            0.0001420762127963826
        ],
        "align_select": "select stadium.Name, stadium.loc",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names and locations of the stadiums that had concerts that occurred in both 2014 and 2015?",
        "gold_select": "select stadium.Name, stadium.loc",
        "select_candidates": [
            "select stadium.Name, stadium.loc",
            "select stadium.loc, stadium.Name",
            "select stadium.stdm_id, stadium.Name, stadium.loc",
            "select stadium.Name, stadium.loc, stadium.cap"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "stadium concert",
        "table_candidates": [
            "stadium concert"
        ],
        "align_scores": [
            0.9812803864479065,
            0.9812803864479065,
            0.9877798557281494,
            0.9877798557281494,
            0.000351086346199736,
            0.000351086346199736,
            0.0003494031261652708,
            0.0003494031261652708
        ],
        "align_select": "select stadium.Name, stadium.loc",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "Find the number of concerts happened in the stadium with the highest capacity.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), stadium.Name",
            "select count(*), stadium.stdm_id",
            "select count(*), stadium.Name, stadium.cap"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "stadium concert",
        "table_candidates": [
            "stadium concert",
            "stadium singer concert"
        ],
        "align_scores": [
            0.9163819551467896,
            0.9636213183403015,
            0.026691773906350136,
            0.0014711469411849976,
            0.0008983535226434469,
            0.0002922168932855129,
            0.0004531226586550474,
            0.00020306147052906454
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What are the number of concerts that occurred in the stadium with the largest capacity?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), stadium.Name",
            "select count(*), stadium.stdm_id",
            "select count(*), stadium.loc"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "stadium concert",
        "table_candidates": [
            "stadium concert",
            "stadium singer concert"
        ],
        "align_scores": [
            0.7563835978507996,
            0.9718999862670898,
            0.0069691757671535015,
            0.0015830083284527063,
            0.0007720746216364205,
            0.0003003184392582625,
            0.0023503219708800316,
            0.0003866416809614748
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Show name, country, age for all singers ordered by age from the oldest to the youngest.",
        "gold_select": "select singer.Name, singer.cntry, singer.Age",
        "select_candidates": [
            "select singer.Name, singer.cntry, singer.Age",
            "select singer.Name, singer.cntry, singer.Age",
            "select singer.Name, singer.cntry., singer.Age",
            "select singer.Name, singer.cntry, singer.Age."
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.9943869113922119,
            0.0002770215505734086,
            0.9943869113922119,
            0.0002770215505734086,
            0.9148011207580566,
            0.0004147673898842186,
            0.00792583730071783,
            0.00033070147037506104
        ],
        "align_select": "select singer.Name, singer.cntry, singer.Age",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "What are the names, countries, and ages for every singer in descending order of age?",
        "gold_select": "select singer.Name, singer.cntry, singer.Age",
        "select_candidates": [
            "select singer.Name, singer.cntry, singer.Age",
            "select singer.Name, singer.cntry, singer.Age",
            "select singer.Name, singer.cntry, singer.Age",
            "select singer.Name, singer.cntry., singer.Age"
        ],
        "select_labels": [
            1.0,
            1.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.9946296215057373,
            0.9946296215057373,
            0.9946296215057373,
            0.9946296215057373,
            0.9946296215057373,
            0.9946296215057373,
            0.7442984580993652,
            0.7442984580993652
        ],
        "align_select": "select singer.Name, singer.cntry, singer.Age",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "What is the average, minimum, and maximum age of all singers from France?",
        "gold_select": "select avg(singer.Age), min(singer.Age), max(singer.Age)",
        "select_candidates": [
            "select avg(singer.Age), min(singer.Age), max(singer.Age)",
            "select avg(singer.Is_male), min(singer.Age), max(singer.Age)",
            "select avg(singer.Age), min(singer.Age), max(singer.Is_male)",
            "select avg(singer.Age), min(singer.Age), max(singer.Age)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.9946478009223938,
            0.00010675972589524463,
            0.00019536579202394933,
            6.837968248873949e-05,
            0.00020928916637785733,
            7.136625208659098e-05,
            0.9946478009223938,
            0.00010675972589524463
        ],
        "align_select": "select avg(singer.Age), min(singer.Age), max(singer.Age)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the average, minimum, and maximum age for all French singers?",
        "gold_select": "select avg(singer.Age), min(singer.Age), max(singer.Age)",
        "select_candidates": [
            "select avg(singer.Age), min(singer.Age), max(singer.Age)",
            "select avg(singer.Is_male), min(singer.Age), max(singer.Age)",
            "select avg(singer.Age), min(singer.Age), max(singer.Age)",
            "select avg(singer.Age), min(singer.Age), max(singer.Is_male)"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.9942711591720581,
            0.9942711591720581,
            0.0001946419506566599,
            0.0001946419506566599,
            0.9942711591720581,
            0.9942711591720581,
            0.0001940210204338655,
            0.0001940210204338655
        ],
        "align_select": "select avg(singer.Age), min(singer.Age), max(singer.Age)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show the name and the release year of the song by the youngest singer.",
        "gold_select": "select singer.Song_Name, singer.song_rls_year",
        "select_candidates": [
            "select singer.Song_Name, singer.song_rls_year",
            "select singer.cntry, singer.song_rls_year",
            "select singer.Song_Name, t1.1.c4",
            "select singer.Song_Name, t01.c4"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.9925766587257385,
            7.837612793082371e-05,
            0.001868122722953558,
            7.092356827342883e-05,
            0.0005069982726126909,
            0.00014149701746646315,
            0.0006196594331413507,
            0.0001094391627702862
        ],
        "align_select": "select singer.Song_Name, singer.song_rls_year",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What are the names and release years for all the songs of the youngest singer?",
        "gold_select": "select singer.Song_Name, singer.song_rls_year",
        "select_candidates": [
            "select singer.Song_Name, singer.song_rls_year",
            "select singer.cntry, singer.song_rls_year",
            "select singer.Song_Name, t1.1.c4",
            "select singer.Song_Name, singer.cntry"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.9873095154762268,
            9.420283458894119e-05,
            0.0006248983554542065,
            7.070977153489366e-05,
            0.0004832010599784553,
            0.00012925572809763253,
            0.973202645778656,
            9.377191599924117e-05
        ],
        "align_select": "select singer.Song_Name, singer.song_rls_year",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What are all distinct countries where singers above age 20 are from?",
        "gold_select": "select distinct singer.cntry",
        "select_candidates": [
            "select distinct singer.cntry",
            "select distinct singer.cntry, singer.Age",
            "select distinct singer.cntry, count(distinct singer.Age)",
            "select distinct singer.cntry, singer.Is_male"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.9786080718040466,
            0.042135003954172134,
            0.00013741175644099712,
            0.00011394784814910963,
            0.0001939714711625129,
            9.688278078101575e-05,
            0.00020551183843053877,
            0.0001283774763578549
        ],
        "align_select": "select distinct singer.cntry",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the different countries with singers above age 20?",
        "gold_select": "select distinct singer.cntry",
        "select_candidates": [
            "select distinct singer.cntry",
            "select count(distinct singer.cntry)",
            "select distinct singer.cntry, singer.Age",
            "select distinct singer.cntry, singer.Song_Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.9764181971549988,
            0.004016697872430086,
            0.01234721951186657,
            0.00025199566152878106,
            0.00016598400543443859,
            9.767786104930565e-05,
            0.00013406875950749964,
            9.191103163175285e-05
        ],
        "align_select": "select distinct singer.cntry",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show all countries and the number of singers in each country.",
        "gold_select": "select singer.cntry, count(*)",
        "select_candidates": [
            "select singer.cntry, count(*)",
            "select singer.cntry, count(*), singer.Singer_ID",
            "select singer.cntry., count(*)",
            "select singer.cntry, count(*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.9681015014648438,
            0.0002426604914944619,
            0.0001279264542972669,
            0.0001032233121804893,
            0.0022152236197143793,
            0.0002219767775386572,
            0.9681015014648438,
            0.0002426604914944619
        ],
        "align_select": "select singer.cntry, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "How many singers are from each country?",
        "gold_select": "select singer.cntry, count(*)",
        "select_candidates": [
            "select singer.cntry, count(*)",
            "select count(*), singer.cntry",
            "select singer.cntry.c0, count(*)",
            "select singer.cntry, count(*), singer.Singer_ID"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.9949207901954651,
            0.0002165628393413499,
            0.9935897588729858,
            0.0002468364837113768,
            0.0008375423494726419,
            0.00011586386972339824,
            0.00013355124974623322,
            9.04741245904006e-05
        ],
        "align_select": "select singer.cntry, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "Show location and name for all stadiums with a capacity between 5000 and 10000.",
        "gold_select": "select stadium.Location, stadium.Name",
        "select_candidates": [
            "select stadium.Location, stadium.Name",
            "select t0, stadium.Location, stadium.Name",
            "select stadium.Location., stadium.Name",
            "select stadium.Location, stadium.Name, stadium.stdm_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "stadium",
        "table_candidates": [
            "stadium"
        ],
        "align_scores": [
            0.9953319430351257,
            0.00019350502407178283,
            0.00036330005968920887,
            6.809921615058556e-05,
            0.025637594982981682,
            0.00010332060628570616,
            0.00014901756367180496,
            6.468060018960387e-05
        ],
        "align_select": "select stadium.Location, stadium.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the locations and names of all stations with capacity between 5000 and 10000?",
        "gold_select": "select stadium.Location, stadium.Name",
        "select_candidates": [
            "select stadium.Location, stadium.Name",
            "select stadium.Location., stadium.Name",
            "select t0, stadium.Location, stadium.Name",
            "select stadium.Location, stadium.Name, stadium.cap"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "stadium",
        "table_candidates": [
            "stadium"
        ],
        "align_scores": [
            0.976121187210083,
            0.0003889368090312928,
            0.016702353954315186,
            0.00015513361722696573,
            0.0003616972826421261,
            8.36682811495848e-05,
            0.00024399423273280263,
            8.140544377965853e-05
        ],
        "align_select": "select stadium.Location, stadium.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the maximum capacity and the average of all stadiums?",
        "gold_select": "select max(stadium.cap), stadium.avg",
        "select_candidates": [
            "select max(stadium.cap), avg(stadium.avg)",
            "select max(stadium.cap), avg(stadium.cap)",
            "select stadium.cap, avg(stadium.avg)",
            "select max(stadium.cap), avg(stadium.Highest)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "stadium",
        "table_candidates": [
            "stadium"
        ],
        "align_scores": [
            0.008927764371037483,
            7.64888827688992e-05,
            0.9945218563079834,
            6.676393240923062e-05,
            0.00042742828372865915,
            0.0001031038846122101,
            0.0006336448714137077,
            0.00010568442667135969
        ],
        "align_select": "select max(stadium.cap), avg(stadium.cap)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What is the average and maximum capacities for all stadiums?",
        "gold_select": "select avg(stadium.cap), max(stadium.cap)",
        "select_candidates": [
            "select avg(stadium.avg), max(stadium.cap)",
            "select avg(stadium.cap), max(stadium.cap)",
            "select avg(stadium.Lowest), max(stadium.cap)",
            "select avg(stadium.Highest), max(stadium.cap)"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "stadium",
        "table_candidates": [
            "stadium"
        ],
        "align_scores": [
            0.0007016931776888669,
            0.0001039443668560125,
            0.9949111342430115,
            7.320645090658218e-05,
            0.000788911827839911,
            0.00012160275946371257,
            0.0013036682503297925,
            0.00010534535249462351
        ],
        "align_select": "select avg(stadium.cap), max(stadium.cap)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What is the name and capacity for the stadium with highest average attendance?",
        "gold_select": "select stadium.Name, stadium.cap",
        "select_candidates": [
            "select stadium.Name, stadium.cap",
            "select stadium.stdm_id, stadium.Name, stadium.cap",
            "select stadium.Location, stadium.cap",
            "select stadium.Name, stadium.cap, stadium.avg"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "stadium",
        "table_candidates": [
            "stadium",
            "stadium concert singer_in_concert"
        ],
        "align_scores": [
            0.9941543936729431,
            0.9906179308891296,
            0.0010043694637715816,
            0.00043610003194771707,
            0.0008802756783552468,
            0.0010636576917022467,
            0.0006832086364738643,
            0.00037130151758901775
        ],
        "align_select": "select stadium.Name, stadium.cap",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the name and capacity for the stadium with the highest average attendance?",
        "gold_select": "select stadium.Name, stadium.cap",
        "select_candidates": [
            "select stadium.Name, stadium.cap",
            "select stadium.stdm_id, stadium.Name, stadium.cap",
            "select stadium.Location, stadium.cap",
            "select stadium.Name, stadium.cap, stadium.avg"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-UNION-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "stadium",
        "table_candidates": [
            "stadium"
        ],
        "align_scores": [
            0.9939542412757874,
            9.222119842888787e-05,
            0.0009798048995435238,
            0.00010315680265193805,
            0.0009515737183392048,
            6.74311668262817e-05,
            0.0007076955516822636,
            7.825499778846279e-05
        ],
        "align_select": "select stadium.Name, stadium.cap",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Show the stadium name and the number of concerts in each stadium.",
        "gold_select": "select stadium.Name, count(*)",
        "select_candidates": [
            "select stadium.Name, count(*)",
            "select stadium.Name, count(*), concert.stdm_id",
            "select stadium.Name.c2, count(*)",
            "select stadium.Location, count(*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "stadium concert",
        "table_candidates": [
            "stadium concert",
            "stadium singer concert"
        ],
        "align_scores": [
            0.9943562150001526,
            0.00017691543325781822,
            0.000324608467053622,
            8.418817742494866e-05,
            0.00034233162296004593,
            0.00013446860248222947,
            0.0005726873641833663,
            0.00014966675371397287
        ],
        "align_select": "select stadium.Name, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "For each stadium, how many concerts play there?",
        "gold_select": "select stadium.Name, count(*)",
        "select_candidates": [
            "select stadium.Name, count(*)",
            "select stadium.stdm_id, count(*)",
            "select count(*), stadium.Name",
            "select stadium.Name.c2, count(*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "stadium concert",
        "table_candidates": [
            "stadium concert"
        ],
        "align_scores": [
            0.9911496639251709,
            0.00014006602577865124,
            0.041687577962875366,
            0.00015086372150108218,
            0.9895389676094055,
            0.0001708025811240077,
            0.0008224760531447828,
            0.00012334069469943643
        ],
        "align_select": "select stadium.Name, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "Show the stadium name and capacity with most number of concerts in year 2014 or after.",
        "gold_select": "select stadium.Name, stadium.cap",
        "select_candidates": [
            "select stadium.Name, stadium.cap",
            "select stadium.Location, stadium.cap",
            "select stadium.Name., stadium.cap",
            "select stadium.Name, t0-.c3"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "stadium concert",
        "table_candidates": [
            "stadium concert"
        ],
        "align_scores": [
            0.9913522005081177,
            0.0001422825298504904,
            0.0009577865712344646,
            9.010743087856099e-05,
            0.008764357306063175,
            0.00016519612108822912,
            0.0011083330027759075,
            8.440876263193786e-05
        ],
        "align_select": "select stadium.Name, stadium.cap",
        "align_structure": "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the name and capacity of the stadium with the most concerts after 2013?",
        "gold_select": "select stadium.Name, stadium.cap",
        "select_candidates": [
            "select stadium.Name, stadium.cap",
            "select stadium.Location, stadium.cap",
            "select stadium.cap, stadium.Name",
            "select stadium.Name., stadium.cap"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "stadium concert",
        "table_candidates": [
            "stadium concert",
            "stadium singer concert"
        ],
        "align_scores": [
            0.9894663691520691,
            0.00018140286556445062,
            0.001020135940052569,
            9.054749534698203e-05,
            0.9906755685806274,
            0.00020206201588734984,
            0.009016559459269047,
            0.00019012397387996316
        ],
        "align_select": "select stadium.Name, stadium.cap",
        "align_structure": "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Show the stadium names without any concert.",
        "gold_select": "select stadium.Name",
        "select_candidates": [
            "select stadium.Name",
            "select stadium.Name, stadium.cap",
            "select stadium.stdm_id, stadium.Name",
            "select stadium.Location, stadium.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "stadium",
        "table_candidates": [
            "stadium"
        ],
        "align_scores": [
            0.9941731095314026,
            0.3416217863559723,
            0.00026957987574860454,
            0.0011223235633224249,
            0.00020824534294661134,
            0.0003073132538702339,
            0.0001546307757962495,
            0.0001982556568691507
        ],
        "align_select": "select stadium.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of the stadiums without any concerts?",
        "gold_select": "select stadium.Name",
        "select_candidates": [
            "select stadium.Name",
            "select stadium.stdm_id, stadium.Name",
            "select stadium.Name, stadium.cap",
            "select stadium.Location, stadium.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "stadium",
        "table_candidates": [
            "stadium",
            "stadium concert"
        ],
        "align_scores": [
            0.9859153032302856,
            0.581341564655304,
            0.0002699111355468631,
            0.0003184340021107346,
            0.0003275312192272395,
            0.0012383703142404556,
            0.00020437105558812618,
            0.00026886811247095466
        ],
        "align_select": "select stadium.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show countries where a singer above age 40 and a singer below 30 are from.",
        "gold_select": "select singer.cntry",
        "select_candidates": [
            "select singer.cntry",
            "select singer.cntry, singer.Age",
            "select singer.cntry for singer.Age, singer.Is_male",
            "select singer.cntry, singer.Age, singer.Is_male"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.9938952326774597,
            0.09076983481645584,
            0.0003182658401783556,
            0.00013941309589426965,
            0.00018856195674743503,
            0.00015020491264294833,
            0.00015353283379226923,
            0.00011767849355237558
        ],
        "align_select": "select singer.cntry",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "Show names for all stadiums except for stadiums having a concert in year 2014.",
        "gold_select": "select stadium.Name",
        "select_candidates": [
            "select stadium.Name",
            "select stadium.stdm_id, stadium.Name",
            "select stadium.Location, stadium.Name",
            "select stadium.Name, concert.stdm_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "stadium concert",
        "table_candidates": [
            "stadium concert"
        ],
        "align_scores": [
            0.988661527633667,
            0.9901819825172424,
            0.0005963566363789141,
            0.0005762894870713353,
            0.00043805246241390705,
            0.00037311954656615853,
            0.0004537230124697089,
            0.00047613357310183346
        ],
        "align_select": "select stadium.Name",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of all stadiums that did not have a concert in 2014?",
        "gold_select": "select stadium.Name",
        "select_candidates": [
            "select stadium.Name",
            "select stadium.stdm_id, stadium.Name",
            "select stadium.Location, stadium.Name",
            "select stadium.Name, concert.stdm_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "stadium concert",
        "table_candidates": [
            "stadium concert"
        ],
        "align_scores": [
            0.9577655792236328,
            0.9577655792236328,
            0.0007680649287067354,
            0.0007680649287067354,
            0.000594567449297756,
            0.000594567449297756,
            0.0005456106155179441,
            0.0005456106155179441
        ],
        "align_select": "select stadium.Name",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "what is the name and nation of the singer who have a song having 'Hey' in its name?",
        "gold_select": "select singer.Name, singer.cntry",
        "select_candidates": [
            "select singer.Name, singer.cntry",
            "select singer.Name, singer.cntry, singer.Singer_ID",
            "select singer.Name, singer.cntry, singer.Song_Name",
            "select singer.Name, singer.cntry for the SELECT-FROM-WHERE"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.9804292917251587,
            0.00021303152607288212,
            0.00031278724782168865,
            7.90543999755755e-05,
            0.0004393547715153545,
            8.04402370704338e-05,
            0.0838685929775238,
            9.201205102726817e-05
        ],
        "align_select": "select singer.Name, singer.cntry",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the name and country of origin of every singer who has a song with the word 'Hey' in its title?",
        "gold_select": "select singer.Name, singer.cntry",
        "select_candidates": [
            "select singer.Name, singer.cntry",
            "select singer.Name, singer.cntry, singer.Singer_ID",
            "select singer.Name, singer.cntry,",
            "select singer.Name, singer.cntry,"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.9571187496185303,
            0.0002661523758433759,
            0.0004464936500880867,
            8.659133891342208e-05,
            0.0039286487735807896,
            8.85723638930358e-05,
            0.0039286487735807896,
            8.85723638930358e-05
        ],
        "align_select": "select singer.Name, singer.cntry",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the name and location of the stadiums which some concerts happened in the years of both 2014 and 2015.",
        "gold_select": "select stadium.Name, stadium.Location",
        "select_candidates": [
            "select stadium.Name, stadium.Location",
            "select stadium.Location, stadium.Name",
            "select stadium.stdm_id, stadium.Name, stadium.Location",
            "select stadium.Name, stadium.Location, concert.stdm_id"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "stadium concert",
        "table_candidates": [
            "stadium concert"
        ],
        "align_scores": [
            0.9583344459533691,
            0.011440971866250038,
            0.9729933738708496,
            0.009565116837620735,
            0.0002552061341702938,
            0.00020389456767588854,
            0.00020807304827030748,
            0.00014577762340195477
        ],
        "align_select": "select stadium.Name, stadium.Location",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names and locations of the stadiums that had concerts that occurred in both 2014 and 2015?",
        "gold_select": "select stadium.Name, stadium.Location",
        "select_candidates": [
            "select stadium.Name, stadium.Location",
            "select stadium.Location, stadium.Name",
            "select stadium.stdm_id, stadium.Name, stadium.Location",
            "select stadium.Name, stadium.Location, stadium.cap"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "stadium concert",
        "table_candidates": [
            "stadium concert"
        ],
        "align_scores": [
            0.981700599193573,
            0.981700599193573,
            0.9875348806381226,
            0.9875348806381226,
            0.00030630003311671317,
            0.00030630003311671317,
            0.00031193019822239876,
            0.00031193019822239876
        ],
        "align_select": "select stadium.Name, stadium.Location",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "Find the number of concerts happened in the stadium with the highest capacity.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), stadium.Name",
            "select count(*), stadium.Name, stadium.cap",
            "select count(*), stadium.stdm_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "stadium concert",
        "table_candidates": [
            "stadium concert",
            "stadium singer concert"
        ],
        "align_scores": [
            0.9163819551467896,
            0.9636213183403015,
            0.026691773906350136,
            0.0014711469411849976,
            0.0004531226586550474,
            0.00020306147052906454,
            0.0008983535226434469,
            0.0002922168932855129
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What are the number of concerts that occurred in the stadium with the largest capacity?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), stadium.Name",
            "select count(*), stadium.Name, stadium.cap",
            "select count(*), stadium.stdm_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "stadium concert",
        "table_candidates": [
            "stadium concert",
            "stadium singer concert"
        ],
        "align_scores": [
            0.7563835978507996,
            0.9718999862670898,
            0.0069691757671535015,
            0.0015830083284527063,
            0.0003657001652754843,
            0.0001951301092049107,
            0.0007720746216364205,
            0.0003003184392582625
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Show name, country, age for all singers ordered by age from the oldest to the youngest.",
        "gold_select": "select singer.Name, singer.cntry, singer.Age",
        "select_candidates": [
            "select singer.Name, singer.cntry, singer.Age",
            "select singer.Name, singer.cntry, singer.Age",
            "select singer.Name, singer.cntry., singer.Age",
            "select singer.Name, singer.cntry, singer.Age."
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.9943869113922119,
            0.0002770215505734086,
            0.9943869113922119,
            0.0002770215505734086,
            0.9148011207580566,
            0.0004147673898842186,
            0.00792583730071783,
            0.00033070147037506104
        ],
        "align_select": "select singer.Name, singer.cntry, singer.Age",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "What are the names, countries, and ages for every singer in descending order of age?",
        "gold_select": "select singer.Name, singer.cntry, singer.Age",
        "select_candidates": [
            "select singer.Name, singer.cntry, singer.Age",
            "select singer.Name, singer.cntry, singer.Age",
            "select singer.Name, singer.cntry., singer.Age",
            "select singer.Name, singer.cntry, singer.Age"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.9946296215057373,
            0.9946296215057373,
            0.9946296215057373,
            0.9946296215057373,
            0.7442984580993652,
            0.7442984580993652,
            0.9946296215057373,
            0.9946296215057373
        ],
        "align_select": "select singer.Name, singer.cntry, singer.Age",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "What is the average, minimum, and maximum age of all singers from France?",
        "gold_select": "select avg(singer.Age), min(singer.Age), max(singer.Age)",
        "select_candidates": [
            "select avg(singer.Age), min(singer.Age), max(singer.Age)",
            "select avg(singer.Is_male), min(singer.Age), max(singer.Age)",
            "select avg(singer.Age), min(singer.Age), max(singer.Is_male)",
            "select avg(singer.Age), min(singer.Age), max(singer.Age)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.9946478009223938,
            0.00010675972589524463,
            0.00019536579202394933,
            6.837968248873949e-05,
            0.00020928916637785733,
            7.136625208659098e-05,
            0.9946478009223938,
            0.00010675972589524463
        ],
        "align_select": "select avg(singer.Age), min(singer.Age), max(singer.Age)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the average, minimum, and maximum age for all French singers?",
        "gold_select": "select avg(singer.Age), min(singer.Age), max(singer.Age)",
        "select_candidates": [
            "select avg(singer.Age), min(singer.Age), max(singer.Age)",
            "select avg(singer.Is_male), min(singer.Age), max(singer.Age)",
            "select avg(singer.Age), min(singer.Age), max(singer.Age)",
            "select avg(singer.Age), min(singer.Age), max(singer.Is_male)"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.9942711591720581,
            0.9942711591720581,
            0.0001946419506566599,
            0.0001946419506566599,
            0.9942711591720581,
            0.9942711591720581,
            0.0001940210204338655,
            0.0001940210204338655
        ],
        "align_select": "select avg(singer.Age), min(singer.Age), max(singer.Age)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show the name and the release year of the song by the youngest singer.",
        "gold_select": "select singer.Song_Name, singer.song_rls_year",
        "select_candidates": [
            "select singer.Song_Name, singer.song_rls_year",
            "select singer.cntry, singer.song_rls_year",
            "select singer.Song_Name, t1.1.c4",
            "select singer.Song_Name, t01.c4"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.9925766587257385,
            7.837612793082371e-05,
            0.001868122722953558,
            7.092356827342883e-05,
            0.0005069982726126909,
            0.00014149701746646315,
            0.0006196594331413507,
            0.0001094391627702862
        ],
        "align_select": "select singer.Song_Name, singer.song_rls_year",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What are the names and release years for all the songs of the youngest singer?",
        "gold_select": "select singer.Song_Name, singer.song_rls_year",
        "select_candidates": [
            "select singer.Song_Name, singer.song_rls_year",
            "select singer.cntry, singer.song_rls_year",
            "select singer.Song_Name, t1.1.c4",
            "select singer.Song_Name, singer.cntry"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.9873095154762268,
            9.420283458894119e-05,
            0.0006248983554542065,
            7.070977153489366e-05,
            0.0004832010599784553,
            0.00012925572809763253,
            0.973202645778656,
            9.377191599924117e-05
        ],
        "align_select": "select singer.Song_Name, singer.song_rls_year",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What are all distinct countries where singers above age 20 are from?",
        "gold_select": "select distinct singer.cntry",
        "select_candidates": [
            "select distinct singer.cntry",
            "select distinct singer.cntry, singer.Age",
            "select distinct singer.cntry, count(distinct singer.Age)",
            "select distinct singer.cntry, singer.Is_male"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.9786080718040466,
            0.042135003954172134,
            0.00013741175644099712,
            0.00011394784814910963,
            0.0001939714711625129,
            9.688278078101575e-05,
            0.00020551183843053877,
            0.0001283774763578549
        ],
        "align_select": "select distinct singer.cntry",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the different countries with singers above age 20?",
        "gold_select": "select distinct singer.cntry",
        "select_candidates": [
            "select distinct singer.cntry",
            "select count(distinct singer.cntry)",
            "select distinct singer.cntry, singer.Age",
            "select distinct singer.cntry, singer.Song_Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.9764181971549988,
            0.004016697872430086,
            0.01234721951186657,
            0.00025199566152878106,
            0.00016598400543443859,
            9.767786104930565e-05,
            0.00013406875950749964,
            9.191103163175285e-05
        ],
        "align_select": "select distinct singer.cntry",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show all countries and the number of singers in each country.",
        "gold_select": "select singer.cntry, count(*)",
        "select_candidates": [
            "select singer.cntry, count(*)",
            "select singer.cntry, count(*), singer.Singer_ID",
            "select singer.cntry., count(*)",
            "select singer.cntry, count(*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.9681015014648438,
            0.0002426604914944619,
            0.0001279264542972669,
            0.0001032233121804893,
            0.0022152236197143793,
            0.0002219767775386572,
            0.9681015014648438,
            0.0002426604914944619
        ],
        "align_select": "select singer.cntry, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "How many singers are from each country?",
        "gold_select": "select singer.cntry, count(*)",
        "select_candidates": [
            "select singer.cntry, count(*)",
            "select count(*), singer.cntry",
            "select singer.cntry, count(*), singer.Singer_ID",
            "select singer.cntry.c0, count(*)"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.9949207901954651,
            0.0002165628393413499,
            0.9935897588729858,
            0.0002468364837113768,
            0.00013355124974623322,
            9.04741245904006e-05,
            0.0008375423494726419,
            0.00011586386972339824
        ],
        "align_select": "select singer.cntry, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "Show location and name for all stadiums with a capacity between 5000 and 10000.",
        "gold_select": "select stadium.loc, stadium.Name",
        "select_candidates": [
            "select stadium.loc, stadium.Name",
            "select stadium.Stadium_ID, stadium.loc, stadium.Name",
            "select stadium.loc., stadium.Name",
            "select t0, stadium.loc, stadium.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "stadium",
        "table_candidates": [
            "stadium"
        ],
        "align_scores": [
            0.9951124787330627,
            0.00019939099729526788,
            0.00016523993690498173,
            8.112924842862412e-05,
            0.8652642369270325,
            0.00012553045235108584,
            0.0003538783930707723,
            6.570887489942834e-05
        ],
        "align_select": "select stadium.loc, stadium.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the locations and names of all stations with capacity between 5000 and 10000?",
        "gold_select": "select stadium.loc, stadium.Name",
        "select_candidates": [
            "select stadium.loc, stadium.Name",
            "select stadium.loc., stadium.Name",
            "select t0, stadium.loc, stadium.Name",
            "select stadium.loc, stadium.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "stadium",
        "table_candidates": [
            "stadium"
        ],
        "align_scores": [
            0.9851483106613159,
            0.0003699102089740336,
            0.7555866837501526,
            0.0002030134928645566,
            0.00035031966399401426,
            8.150067151291296e-05,
            0.9851483106613159,
            0.0003699102089740336
        ],
        "align_select": "select stadium.loc, stadium.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the maximum capacity and the average of all stadiums?",
        "gold_select": "select max(stadium.cap), stadium.avg",
        "select_candidates": [
            "select max(stadium.cap), avg(stadium.avg)",
            "select max(stadium.cap), avg(stadium.cap)",
            "select stadium.cap, avg(stadium.avg)",
            "select max(stadium.cap), avg(stadium.Highest)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "stadium",
        "table_candidates": [
            "stadium"
        ],
        "align_scores": [
            0.008927764371037483,
            7.64888827688992e-05,
            0.9945218563079834,
            6.676393240923062e-05,
            0.00042742828372865915,
            0.0001031038846122101,
            0.0006336448714137077,
            0.00010568442667135969
        ],
        "align_select": "select max(stadium.cap), avg(stadium.cap)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What is the average and maximum capacities for all stadiums?",
        "gold_select": "select avg(stadium.cap), max(stadium.cap)",
        "select_candidates": [
            "select avg(stadium.avg), max(stadium.cap)",
            "select avg(stadium.cap), max(stadium.cap)",
            "select avg(stadium.Highest), max(stadium.cap)",
            "select avg(stadium.Lowest), max(stadium.cap)"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "stadium",
        "table_candidates": [
            "stadium"
        ],
        "align_scores": [
            0.0007016931776888669,
            0.0001039443668560125,
            0.9949111342430115,
            7.320645090658218e-05,
            0.0013036682503297925,
            0.00010534535249462351,
            0.000788911827839911,
            0.00012160275946371257
        ],
        "align_select": "select avg(stadium.cap), max(stadium.cap)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What is the name and capacity for the stadium with highest average attendance?",
        "gold_select": "select stadium.Name, stadium.cap",
        "select_candidates": [
            "select stadium.Name, stadium.cap",
            "select stadium.Stadium_ID, stadium.Name, stadium.cap",
            "select stadium.loc, stadium.cap",
            "select stadium.Name, stadium.cap, stadium.avg"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "stadium",
        "table_candidates": [
            "stadium"
        ],
        "align_scores": [
            0.9941543936729431,
            0.9906179308891296,
            0.0009614547016099095,
            0.0004261946596670896,
            0.0008046596776694059,
            0.0009448284399695694,
            0.0006832086364738643,
            0.00037130151758901775
        ],
        "align_select": "select stadium.Name, stadium.cap",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the name and capacity for the stadium with the highest average attendance?",
        "gold_select": "select stadium.Name, stadium.cap",
        "select_candidates": [
            "select stadium.Name, stadium.cap",
            "select stadium.Stadium_ID, stadium.Name, stadium.cap",
            "select stadium.loc, stadium.cap",
            "select stadium.Name, stadium.cap, stadium.avg"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "stadium",
        "table_candidates": [
            "stadium"
        ],
        "align_scores": [
            0.9939542412757874,
            0.9890097975730896,
            0.0009054883848875761,
            0.00040333924698643386,
            0.0008716027368791401,
            0.0009522452019155025,
            0.0007076955516822636,
            0.00035862327786162496
        ],
        "align_select": "select stadium.Name, stadium.cap",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Show the stadium name and capacity with most number of concerts in year 2014 or after.",
        "gold_select": "select stadium.Name, stadium.cap",
        "select_candidates": [
            "select stadium.Name, stadium.cap",
            "select stadium.Name, stadium.cap, stadium.avg",
            "select stadium.loc, stadium.cap",
            "select stadium.Name.c3, stadium.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "stadium concert",
        "table_candidates": [
            "stadium concert"
        ],
        "align_scores": [
            0.9913522005081177,
            0.0001422825298504904,
            0.0004879510961472988,
            6.144407234387472e-05,
            0.013179556466639042,
            8.885966963134706e-05,
            0.014335710555315018,
            9.490267984801903e-05
        ],
        "align_select": "select stadium.Name, stadium.cap",
        "align_structure": "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the name and capacity of the stadium with the most concerts after 2013?",
        "gold_select": "select stadium.Name, stadium.cap",
        "select_candidates": [
            "select stadium.Name, stadium.cap",
            "select stadium.loc, stadium.cap",
            "select stadium.cap, stadium.Name",
            "select stadium.Name., stadium.cap"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "stadium concert",
        "table_candidates": [
            "stadium concert",
            "stadium singer concert"
        ],
        "align_scores": [
            0.9894663691520691,
            0.00018140286556445062,
            0.0008694014395587146,
            8.924808935262263e-05,
            0.9906755685806274,
            0.00020206201588734984,
            0.009016559459269047,
            0.00019012397387996316
        ],
        "align_select": "select stadium.Name, stadium.cap",
        "align_structure": "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Show countries where a singer above age 40 and a singer below 30 are from.",
        "gold_select": "select singer.cntry",
        "select_candidates": [
            "select singer.cntry",
            "select singer.cntry, singer.Age",
            "select singer.cntry for singer.Age, singer.Is_male",
            "select singer.cntry, singer.Age, singer.Is_male"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.9938952326774597,
            0.09076983481645584,
            0.0003182658401783556,
            0.00013941309589426965,
            0.00018856195674743503,
            0.00015020491264294833,
            0.00015353283379226923,
            0.00011767849355237558
        ],
        "align_select": "select singer.cntry",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "what is the name and nation of the singer who have a song having 'Hey' in its name?",
        "gold_select": "select singer.Name, singer.cntry",
        "select_candidates": [
            "select singer.Name, singer.cntry",
            "select singer.Name, singer.cntry, singer.Singer_ID",
            "select singer.Name, singer.cntry, singer.Song_Name",
            "select singer.Name, singer.cntry for the SELECT-FROM-WHERE"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.9804292917251587,
            0.00021303152607288212,
            0.00031278724782168865,
            7.90543999755755e-05,
            0.0004393547715153545,
            8.04402370704338e-05,
            0.0838685929775238,
            9.201205102726817e-05
        ],
        "align_select": "select singer.Name, singer.cntry",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the name and country of origin of every singer who has a song with the word 'Hey' in its title?",
        "gold_select": "select singer.Name, singer.cntry",
        "select_candidates": [
            "select singer.Name, singer.cntry",
            "select singer.Name, singer.cntry, singer.Singer_ID",
            "select singer.Name, singer.cntry,",
            "select singer.Name, singer.cntry,"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.9571187496185303,
            0.0002661523758433759,
            0.0004464936500880867,
            8.659133891342208e-05,
            0.0039286487735807896,
            8.85723638930358e-05,
            0.0039286487735807896,
            8.85723638930358e-05
        ],
        "align_select": "select singer.Name, singer.cntry",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the name and location of the stadiums which some concerts happened in the years of both 2014 and 2015.",
        "gold_select": "select stadium.Name, stadium.loc",
        "select_candidates": [
            "select stadium.Name, stadium.loc",
            "select stadium.loc, stadium.Name",
            "select stadium.Name., stadium.loc",
            "select stadium.Stadium_ID, stadium.Name"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "stadium concert",
        "table_candidates": [
            "stadium concert"
        ],
        "align_scores": [
            0.9598409533500671,
            0.015087501145899296,
            0.9762736558914185,
            0.011081719771027565,
            0.007332975976169109,
            0.00044828676618635654,
            0.0002546160249039531,
            0.00011622947931755334
        ],
        "align_select": "select stadium.Name, stadium.loc",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names and locations of the stadiums that had concerts that occurred in both 2014 and 2015?",
        "gold_select": "select stadium.Name, stadium.loc",
        "select_candidates": [
            "select stadium.Name, stadium.loc",
            "select stadium.loc, stadium.Name",
            "select stadium.Stadium_ID, stadium.Name, stadium.loc",
            "select stadium.Name, stadium.loc, stadium.cap"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "stadium concert",
        "table_candidates": [
            "stadium concert"
        ],
        "align_scores": [
            0.9812803864479065,
            0.9812803864479065,
            0.9877798557281494,
            0.9877798557281494,
            0.0005409636069089174,
            0.0005409636069089174,
            0.0003494031261652708,
            0.0003494031261652708
        ],
        "align_select": "select stadium.Name, stadium.loc",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "Find the number of concerts happened in the stadium with the highest capacity.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), stadium.Name",
            "select count(*), stadium.Name, stadium.cap",
            "select count(*), stadium.Stadium_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "stadium concert",
        "table_candidates": [
            "stadium concert",
            "stadium singer concert"
        ],
        "align_scores": [
            0.9163819551467896,
            0.9636213183403015,
            0.026691773906350136,
            0.0014711469411849976,
            0.0004531226586550474,
            0.00020306147052906454,
            0.002066440414637327,
            0.000329630624037236
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What are the number of concerts that occurred in the stadium with the largest capacity?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), stadium.Name",
            "select count(*), stadium.Stadium_ID",
            "select count(*), stadium.Name, stadium.cap"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "stadium concert",
        "table_candidates": [
            "stadium concert",
            "stadium singer concert"
        ],
        "align_scores": [
            0.7563835978507996,
            0.9718999862670898,
            0.0069691757671535015,
            0.0015830083284527063,
            0.0013123702956363559,
            0.0003207489789929241,
            0.0003657001652754843,
            0.0001951301092049107
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Show location and name for all stadiums with a capacity between 5000 and 10000.",
        "gold_select": "select stadium.Location, stadium.Name",
        "select_candidates": [
            "select stadium.Location, stadium.Name",
            "select t0, stadium.Location, stadium.Name",
            "select stadium.Location., stadium.Name",
            "select stadium.Location, stadium.Name, stadium.stdm_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "stadium",
        "table_candidates": [
            "stadium"
        ],
        "align_scores": [
            0.9953319430351257,
            0.00019350502407178283,
            0.00036330005968920887,
            6.809921615058556e-05,
            0.025637594982981682,
            0.00010332060628570616,
            0.00014901756367180496,
            6.468060018960387e-05
        ],
        "align_select": "select stadium.Location, stadium.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the locations and names of all stations with capacity between 5000 and 10000?",
        "gold_select": "select stadium.Location, stadium.Name",
        "select_candidates": [
            "select stadium.Location, stadium.Name",
            "select stadium.stdm_id, stadium.Location, stadium.Name",
            "select stadium.Location., stadium.Name",
            "select t0, stadium.Location, stadium.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "stadium",
        "table_candidates": [
            "stadium"
        ],
        "align_scores": [
            0.976121187210083,
            0.0003889368090312928,
            0.00021713037858717144,
            9.243735257769004e-05,
            0.016702353954315186,
            0.00015513361722696573,
            0.0003616972826421261,
            8.36682811495848e-05
        ],
        "align_select": "select stadium.Location, stadium.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the maximum capacity and the average of all stadiums?",
        "gold_select": "select max(stadium.cap), stadium.avg",
        "select_candidates": [
            "select max(stadium.cap), avg(stadium.avg)",
            "select max(stadium.cap), avg(stadium.cap)",
            "select stadium.cap, avg(stadium.avg)",
            "select max(stadium.cap), avg(stadium.Highest)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "stadium",
        "table_candidates": [
            "stadium"
        ],
        "align_scores": [
            0.008927764371037483,
            7.64888827688992e-05,
            0.9945218563079834,
            6.676393240923062e-05,
            0.00042742828372865915,
            0.0001031038846122101,
            0.0006336448714137077,
            0.00010568442667135969
        ],
        "align_select": "select max(stadium.cap), avg(stadium.cap)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What is the average and maximum capacities for all stadiums?",
        "gold_select": "select avg(stadium.cap), max(stadium.cap)",
        "select_candidates": [
            "select avg(stadium.avg), max(stadium.cap)",
            "select avg(stadium.cap), max(stadium.cap)",
            "select avg(stadium.Highest), max(stadium.cap)",
            "select avg(stadium.Lowest), max(stadium.cap)"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "stadium",
        "table_candidates": [
            "stadium"
        ],
        "align_scores": [
            0.0007016931776888669,
            0.0001039443668560125,
            0.9949111342430115,
            7.320645090658218e-05,
            0.0013036682503297925,
            0.00010534535249462351,
            0.000788911827839911,
            0.00012160275946371257
        ],
        "align_select": "select avg(stadium.cap), max(stadium.cap)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What is the name and capacity for the stadium with highest average attendance?",
        "gold_select": "select stadium.Name, stadium.cap",
        "select_candidates": [
            "select stadium.Name, stadium.cap",
            "select stadium.stdm_id, stadium.Name, stadium.cap",
            "select stadium.Location, stadium.cap",
            "select stadium.Name, stadium.cap, stadium.avg"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "stadium",
        "table_candidates": [
            "stadium"
        ],
        "align_scores": [
            0.9941543936729431,
            0.9906179308891296,
            0.0010043694637715816,
            0.00043610003194771707,
            0.0008802756783552468,
            0.0010636576917022467,
            0.0006832086364738643,
            0.00037130151758901775
        ],
        "align_select": "select stadium.Name, stadium.cap",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the name and capacity for the stadium with the highest average attendance?",
        "gold_select": "select stadium.Name, stadium.cap",
        "select_candidates": [
            "select stadium.Name, stadium.cap",
            "select stadium.stdm_id, stadium.Name, stadium.cap",
            "select stadium.Location, stadium.cap",
            "select stadium.Name, stadium.cap, stadium.avg"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-UNION-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "stadium",
        "table_candidates": [
            "stadium",
            "stadium concert"
        ],
        "align_scores": [
            0.9939542412757874,
            9.222119842888787e-05,
            0.0009798048995435238,
            0.00010315680265193805,
            0.0009515737183392048,
            6.74311668262817e-05,
            0.0007076955516822636,
            7.825499778846279e-05
        ],
        "align_select": "select stadium.Name, stadium.cap",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Show the stadium name and the number of concerts in each stadium.",
        "gold_select": "select stadium.Name, count(*)",
        "select_candidates": [
            "select stadium.Name, count(*)",
            "select stadium.Name.c2, count(*)",
            "select stadium.Name, count(*), concert.Stadium_ID",
            "select stadium.Location, count(*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "stadium concert",
        "table_candidates": [
            "stadium concert"
        ],
        "align_scores": [
            0.9943562150001526,
            0.00017691543325781822,
            0.00034233162296004593,
            0.00013446860248222947,
            0.0003101867332588881,
            8.73469325597398e-05,
            0.0005726873641833663,
            0.00014966675371397287
        ],
        "align_select": "select stadium.Name, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "For each stadium, how many concerts play there?",
        "gold_select": "select stadium.Name, count(*)",
        "select_candidates": [
            "select stadium.Name, count(*)",
            "select stadium.stdm_id, count(*)",
            "select stadium.Name.c2, count(*)",
            "select stadium.Name, count(*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "stadium concert",
        "table_candidates": [
            "stadium concert"
        ],
        "align_scores": [
            0.9911496639251709,
            0.00014006602577865124,
            0.041687577962875366,
            0.00015086372150108218,
            0.0008224760531447828,
            0.00012334069469943643,
            0.9911496639251709,
            0.00014006602577865124
        ],
        "align_select": "select stadium.Name, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "Show the stadium name and capacity with most number of concerts in year 2014 or after.",
        "gold_select": "select stadium.Name, stadium.cap",
        "select_candidates": [
            "select stadium.Name, stadium.cap",
            "select stadium.Location, stadium.cap",
            "select stadium.Name, stadium.cap, stadium.avg",
            "select stadium.Name.c3, stadium.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "stadium concert",
        "table_candidates": [
            "stadium concert"
        ],
        "align_scores": [
            0.9913522005081177,
            0.0001422825298504904,
            0.0009577865712344646,
            9.010743087856099e-05,
            0.0004879510961472988,
            6.144407234387472e-05,
            0.014335710555315018,
            9.490267984801903e-05
        ],
        "align_select": "select stadium.Name, stadium.cap",
        "align_structure": "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the name and capacity of the stadium with the most concerts after 2013?",
        "gold_select": "select stadium.Name, stadium.cap",
        "select_candidates": [
            "select stadium.Name, stadium.cap",
            "select stadium.Location, stadium.cap",
            "select stadium.cap, stadium.Name",
            "select stadium.Name., stadium.cap"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "stadium concert",
        "table_candidates": [
            "stadium concert",
            "stadium singer concert"
        ],
        "align_scores": [
            0.9894663691520691,
            0.00018140286556445062,
            0.001020135940052569,
            9.054749534698203e-05,
            0.9906755685806274,
            0.00020206201588734984,
            0.009016559459269047,
            0.00019012397387996316
        ],
        "align_select": "select stadium.Name, stadium.cap",
        "align_structure": "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Show the stadium names without any concert.",
        "gold_select": "select stadium.Name",
        "select_candidates": [
            "select stadium.Name",
            "select stadium.stdm_id, stadium.Name",
            "select stadium.Name, stadium.stdm_id",
            "select stadium.Location, stadium.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "stadium",
        "table_candidates": [
            "stadium",
            "stadium concert"
        ],
        "align_scores": [
            0.9941731095314026,
            0.3416217863559723,
            0.00020824534294661134,
            0.0003073132538702339,
            0.00013329806097317487,
            0.00017240052693523467,
            0.0001546307757962495,
            0.0001982556568691507
        ],
        "align_select": "select stadium.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of the stadiums without any concerts?",
        "gold_select": "select stadium.Name",
        "select_candidates": [
            "select stadium.Name",
            "select stadium.stdm_id, stadium.Name",
            "select stadium.Name, stadium.cap",
            "select stadium.Location, stadium.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "stadium",
        "table_candidates": [
            "stadium",
            "stadium concert"
        ],
        "align_scores": [
            0.9859153032302856,
            0.10062874108552933,
            0.0002699111355468631,
            0.0003798659017775208,
            0.0003275312192272395,
            0.0007260079146362841,
            0.00020437105558812618,
            0.0002571159857325256
        ],
        "align_select": "select stadium.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show names for all stadiums except for stadiums having a concert in year 2014.",
        "gold_select": "select stadium.Name",
        "select_candidates": [
            "select stadium.Name",
            "select stadium.stdm_id, stadium.Name",
            "select stadium.Location, stadium.Name",
            "select stadium.Name, concert.Stadium_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "stadium concert",
        "table_candidates": [
            "stadium concert"
        ],
        "align_scores": [
            0.988661527633667,
            0.9901819825172424,
            0.0005963566363789141,
            0.0005762894870713353,
            0.00043805246241390705,
            0.00037311954656615853,
            0.00042050142656080425,
            0.0003996586019638926
        ],
        "align_select": "select stadium.Name",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of all stadiums that did not have a concert in 2014?",
        "gold_select": "select stadium.Name",
        "select_candidates": [
            "select stadium.Name",
            "select stadium.stdm_id, stadium.Name",
            "select stadium.Location, stadium.Name",
            "select stadium.Name, concert.Stadium_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "stadium concert",
        "table_candidates": [
            "stadium concert"
        ],
        "align_scores": [
            0.9577655792236328,
            0.9577655792236328,
            0.0007680649287067354,
            0.0007680649287067354,
            0.000594567449297756,
            0.000594567449297756,
            0.000524691364262253,
            0.000524691364262253
        ],
        "align_select": "select stadium.Name",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "Find the name and location of the stadiums which some concerts happened in the years of both 2014 and 2015.",
        "gold_select": "select stadium.Name, stadium.Location",
        "select_candidates": [
            "select stadium.Name, stadium.Location",
            "select stadium.Location, stadium.Name",
            "select stadium.stdm_id, stadium.Name, stadium.Location",
            "select stadium.Name, stadium.Location, concert.Stadium_ID"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "stadium concert",
        "table_candidates": [
            "stadium concert"
        ],
        "align_scores": [
            0.9583344459533691,
            0.011440971866250038,
            0.9729933738708496,
            0.009565116837620735,
            0.0002552061341702938,
            0.00020389456767588854,
            0.00019723334116861224,
            0.00013809636584483087
        ],
        "align_select": "select stadium.Name, stadium.Location",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names and locations of the stadiums that had concerts that occurred in both 2014 and 2015?",
        "gold_select": "select stadium.Name, stadium.Location",
        "select_candidates": [
            "select stadium.Name, stadium.Location",
            "select stadium.Location, stadium.Name",
            "select stadium.stdm_id, stadium.Name, stadium.Location",
            "select stadium.Name, stadium.Location, stadium.cap"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "stadium concert",
        "table_candidates": [
            "stadium concert"
        ],
        "align_scores": [
            0.981700599193573,
            0.981700599193573,
            0.9875348806381226,
            0.9875348806381226,
            0.00030630003311671317,
            0.00030630003311671317,
            0.00031193019822239876,
            0.00031193019822239876
        ],
        "align_select": "select stadium.Name, stadium.Location",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "Find the number of concerts happened in the stadium with the highest capacity.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), stadium.Name",
            "select count(*), stadium.Name, stadium.cap",
            "select count(*), stadium.stdm_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "stadium concert",
        "table_candidates": [
            "stadium concert",
            "stadium singer concert"
        ],
        "align_scores": [
            0.9163819551467896,
            0.9636213183403015,
            0.026691773906350136,
            0.0014711469411849976,
            0.0004531226586550474,
            0.00020306147052906454,
            0.0008983535226434469,
            0.0002922168932855129
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What are the number of concerts that occurred in the stadium with the largest capacity?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), stadium.Name",
            "select count(*), stadium.Name, stadium.cap",
            "select count(*), stadium.stdm_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "stadium concert",
        "table_candidates": [
            "stadium concert",
            "stadium singer concert"
        ],
        "align_scores": [
            0.7563835978507996,
            0.9718999862670898,
            0.0069691757671535015,
            0.0015830083284527063,
            0.0003657001652754843,
            0.0001951301092049107,
            0.0007720746216364205,
            0.0003003184392582625
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Show the name and the release year of the song by the youngest singer.",
        "gold_select": "select singer.Song_Name, singer.song_rls_year",
        "select_candidates": [
            "select singer.Song_Name, singer.song_rls_year",
            "select singer.Country, singer.song_rls_year",
            "select singer.Song_Name, t1.1.c4",
            "select singer.Song_Name, t01.c4"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.9925766587257385,
            7.837612793082371e-05,
            0.0006437751580961049,
            7.105964323272929e-05,
            0.0005069982726126909,
            0.00014149701746646315,
            0.0006196594331413507,
            0.0001094391627702862
        ],
        "align_select": "select singer.Song_Name, singer.song_rls_year",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What are the names and release years for all the songs of the youngest singer?",
        "gold_select": "select singer.Song_Name, singer.song_rls_year",
        "select_candidates": [
            "select singer.Song_Name, singer.song_rls_year",
            "select singer.Country, singer.song_rls_year",
            "select singer.Song_Name, t1.1.c4",
            "select singer.Song_Name, singer.Country"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.9873095154762268,
            9.420283458894119e-05,
            0.0008385453256778419,
            8.235961286118254e-05,
            0.0004832010599784553,
            0.00012925572809763253,
            0.0006856422405689955,
            0.00011723952775355428
        ],
        "align_select": "select singer.Song_Name, singer.song_rls_year",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Find the number of pets whose weight is heavier than 10.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Pets.PetID",
            "select count(*), Pets.PetID",
            "select count(*), Pets.PetType"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Pets",
        "table_candidates": [
            "Pets"
        ],
        "align_scores": [
            0.9925954937934875,
            0.0001576165232108906,
            0.00023982446873560548,
            0.0011047838488593698,
            0.00023982446873560548,
            0.0011047838488593698,
            0.00023690186208114028,
            0.018139304593205452
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many pets have a greater weight than 10?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Pets.PetID",
            "select count(*), Pets.PetID",
            "select count(*), Pets.PetType"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Pets",
        "table_candidates": [
            "Pets"
        ],
        "align_scores": [
            0.9875615835189819,
            0.0007418737513944507,
            0.0003079435264226049,
            0.0003056334680877626,
            0.0003079435264226049,
            0.0003056334680877626,
            0.00025796506088227034,
            0.0023561196867376566
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the weight of the youngest dog.",
        "gold_select": "select Pets.wt",
        "select_candidates": [
            "select Pets.wt",
            "select Pets.PetID, Pets.wt",
            "select Pets.wt, Pets.pet_age",
            "select Pets.wt)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Pets",
        "table_candidates": [
            "Pets"
        ],
        "align_scores": [
            0.976966917514801,
            0.2937355637550354,
            0.0007595721981488168,
            0.0001721045555314049,
            0.0010293017840012908,
            0.000419525895267725,
            0.02872876450419426,
            0.005606287159025669
        ],
        "align_select": "select Pets.wt",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "How much does the youngest dog weigh?",
        "gold_select": "select Pets.wt",
        "select_candidates": [
            "select Pets.wt",
            "select min(Pets.wt)",
            "select max(Pets.wt)",
            "select Pets.PetID, Pets.wt"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "Pets",
        "table_candidates": [
            "Pets"
        ],
        "align_scores": [
            0.04197002202272415,
            6.714819028275087e-05,
            0.9923241138458252,
            8.698801684658974e-05,
            0.0022861547768115997,
            6.620652857236564e-05,
            0.000216635933611542,
            6.280062370933592e-05
        ],
        "align_select": "select min(Pets.wt)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the maximum weight for each type of pet. List the maximum weight and pet type.",
        "gold_select": "select max(Pets.wt), Pets.PetType",
        "select_candidates": [
            "select max(Pets.wt), Pets.PetType",
            "select Pets.wt, Pets.PetType",
            "select max(Pets.wt), Pets.PetType,",
            "select maximum(Pets.wt), Pets.PetType"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Pets",
        "table_candidates": [
            "Pets"
        ],
        "align_scores": [
            0.9887169599533081,
            0.00027223609504289925,
            0.961199164390564,
            0.009511941112577915,
            0.0019309252966195345,
            0.00013112103624735028,
            0.00050430151168257,
            0.0001641308335820213
        ],
        "align_select": "select max(Pets.wt), Pets.PetType",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "List the maximum weight and type for each type of pet.",
        "gold_select": "select max(Pets.wt), Pets.PetType",
        "select_candidates": [
            "select max(Pets.wt), Pets.PetType",
            "select max(Pets.wt), max(Pets.PetType), Pets.PetType",
            "select Pets.wt, Pets.PetType",
            "select max(Pets.wt), min(Pets.wt), Pets.PetType"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Pets",
        "table_candidates": [
            "Pets"
        ],
        "align_scores": [
            0.9935778379440308,
            0.00018403322610538453,
            0.001842446275986731,
            8.183960744645447e-05,
            0.04457017779350281,
            0.0010362471221014857,
            0.00018256023759022355,
            0.00011590343638090417
        ],
        "align_select": "select max(Pets.wt), Pets.PetType",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "Find the type and weight of the youngest pet.",
        "gold_select": "select Pets.PetType, Pets.wt",
        "select_candidates": [
            "select Pets.PetType, Pets.wt",
            "select Pets.PetType, Pets.wt, Pets.pet_age",
            "select Pets.PetType, Pets.wt)",
            "select Pets.PetType.c1, Pets.wt"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Pets",
        "table_candidates": [
            "Pets"
        ],
        "align_scores": [
            0.9733789563179016,
            6.421033322112635e-05,
            0.00014622366870753467,
            5.0932459998875856e-05,
            0.001807130640372634,
            5.579328353633173e-05,
            0.0014317878521978855,
            6.028333882568404e-05
        ],
        "align_select": "select Pets.PetType, Pets.wt",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What type of pet is the youngest animal, and how much does it weigh?",
        "gold_select": "select Pets.PetType, Pets.wt",
        "select_candidates": [
            "select Pets.PetType, Pets.wt",
            "select Pets.PetID, Pets.PetType, Pets.wt",
            "select Pets.PetType, Pets.wt, max(Pets.pet_age)",
            "select Pets.PetType, Pets.wt, Pets.pet_age"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Pets",
        "table_candidates": [
            "Pets"
        ],
        "align_scores": [
            0.9657987356185913,
            6.230498547665775e-05,
            0.0002896384976338595,
            6.981555634411052e-05,
            0.00029397450271062553,
            5.909691026317887e-05,
            0.0003748065500985831,
            5.4710806580260396e-05
        ],
        "align_select": "select Pets.PetType, Pets.wt",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Find the id and weight of all pets whose age is older than 1.",
        "gold_select": "select Pets.PetID, Pets.wt",
        "select_candidates": [
            "select Pets.PetID, Pets.wt",
            "select Pets.PetID, Pets.wt.",
            "select Pets.PetID, Pets.wt,",
            "select Pets.PetID, Pets.wt)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Pets",
        "table_candidates": [
            "Pets"
        ],
        "align_scores": [
            0.9614706039428711,
            0.00017879408551380038,
            0.03678465262055397,
            0.00011456014908617362,
            0.0034641672391444445,
            7.249887858051807e-05,
            0.001493302290327847,
            0.00011218872532481328
        ],
        "align_select": "select Pets.PetID, Pets.wt",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the id and weight of every pet who is older than 1?",
        "gold_select": "select Pets.PetID, Pets.wt",
        "select_candidates": [
            "select Pets.PetID, Pets.wt",
            "select Pets.PetID, Pets.wt.",
            "select Pets.PetID, Pets.wt)",
            "select Pets.PetID, Pets.wt,"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Pets",
        "table_candidates": [
            "Pets"
        ],
        "align_scores": [
            0.8404011726379395,
            0.00029184544109739363,
            0.015491330996155739,
            0.0001580200914759189,
            0.0016732597723603249,
            0.00014796484902035445,
            0.003000518772751093,
            8.77918500918895e-05
        ],
        "align_select": "select Pets.PetID, Pets.wt",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the average weight for each pet type.",
        "gold_select": "select avg(Pets.wt), Pets.PetType",
        "select_candidates": [
            "select Pets.PetType, avg(Pets.wt)",
            "select avg(Pets.wt), Pets.PetType",
            "select Pets.PetType, Avg(Pets.wt)",
            "select Pets.PetType.c3, avg(Pets.wt)"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Pets",
        "table_candidates": [
            "Pets"
        ],
        "align_scores": [
            0.9951587319374084,
            0.00021278427448123693,
            0.9947538375854492,
            0.0001413597201462835,
            0.9951587319374084,
            0.00021278427448123693,
            0.0006105323554947972,
            0.00014296115841716528
        ],
        "align_select": "select Pets.PetType, avg(Pets.wt)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "What is the average weight for each type of pet?",
        "gold_select": "select avg(Pets.wt), Pets.PetType",
        "select_candidates": [
            "select Pets.PetType, avg(Pets.wt)",
            "select avg(Pets.wt), Pets.PetType",
            "select Pets.PetType.c3, avg(Pets.wt)",
            "select Pets.PetType, Avg(Pets.wt)"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Pets",
        "table_candidates": [
            "Pets"
        ],
        "align_scores": [
            0.9940332770347595,
            0.0002613671822473407,
            0.9938919544219971,
            0.00015161333431024104,
            0.0006420485442504287,
            0.0001805986394174397,
            0.9940332770347595,
            0.0002613671822473407
        ],
        "align_select": "select Pets.PetType, avg(Pets.wt)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "Find the number of pets whose weight is heavier than 10.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Pets.PetID",
            "select count(*), Pets.PetID",
            "select count(*), Pets.PetType"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Pets",
        "table_candidates": [
            "Pets"
        ],
        "align_scores": [
            0.9925954937934875,
            0.0001576165232108906,
            0.00023982446873560548,
            0.0011047838488593698,
            0.00023982446873560548,
            0.0011047838488593698,
            0.00023690186208114028,
            0.018139304593205452
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many pets have a greater weight than 10?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Pets.PetID",
            "select count(*), Pets.PetID",
            "select count(*), Pets.PetType"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Pets",
        "table_candidates": [
            "Pets"
        ],
        "align_scores": [
            0.9875615835189819,
            0.0007418737513944507,
            0.0003079435264226049,
            0.0003056334680877626,
            0.0003079435264226049,
            0.0003056334680877626,
            0.00025796506088227034,
            0.0023561196867376566
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the weight of the youngest dog.",
        "gold_select": "select Pets.wt",
        "select_candidates": [
            "select Pets.wt",
            "select Pets.PetID, Pets.wt",
            "select Pets.wt)",
            "select Pets.wt, Pets.pet_age"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Pets",
        "table_candidates": [
            "Pets"
        ],
        "align_scores": [
            0.976966917514801,
            0.2937355637550354,
            0.0007595721981488168,
            0.0001721045555314049,
            0.02872876450419426,
            0.005606287159025669,
            0.0010293017840012908,
            0.000419525895267725
        ],
        "align_select": "select Pets.wt",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "How much does the youngest dog weigh?",
        "gold_select": "select Pets.wt",
        "select_candidates": [
            "select Pets.wt",
            "select min(Pets.wt)",
            "select max(Pets.wt)",
            "select Pets.PetID, Pets.wt"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "Pets",
        "table_candidates": [
            "Pets"
        ],
        "align_scores": [
            0.04197002202272415,
            6.714819028275087e-05,
            0.9923241138458252,
            8.698801684658974e-05,
            0.0022861547768115997,
            6.620652857236564e-05,
            0.000216635933611542,
            6.280062370933592e-05
        ],
        "align_select": "select min(Pets.wt)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the maximum weight for each type of pet. List the maximum weight and pet type.",
        "gold_select": "select max(Pets.wt), Pets.PetType",
        "select_candidates": [
            "select max(Pets.wt), Pets.PetType",
            "select Pets.wt, Pets.PetType",
            "select max(Pets.wt), Pets.PetType,",
            "select maximum(Pets.wt), Pets.PetType"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Pets",
        "table_candidates": [
            "Pets"
        ],
        "align_scores": [
            0.9887169599533081,
            0.00027223609504289925,
            0.961199164390564,
            0.009511941112577915,
            0.0019309252966195345,
            0.00013112103624735028,
            0.00050430151168257,
            0.0001641308335820213
        ],
        "align_select": "select max(Pets.wt), Pets.PetType",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "List the maximum weight and type for each type of pet.",
        "gold_select": "select max(Pets.wt), Pets.PetType",
        "select_candidates": [
            "select max(Pets.wt), Pets.PetType",
            "select max(Pets.wt), max(Pets.PetType), Pets.PetType",
            "select Pets.wt, Pets.PetType",
            "select max(Pets.wt), min(Pets.wt), Pets.PetType"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Pets",
        "table_candidates": [
            "Pets"
        ],
        "align_scores": [
            0.9935778379440308,
            0.00018403322610538453,
            0.001842446275986731,
            8.183960744645447e-05,
            0.04457017779350281,
            0.0010362471221014857,
            0.00018256023759022355,
            0.00011590343638090417
        ],
        "align_select": "select max(Pets.wt), Pets.PetType",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "Find the type and weight of the youngest pet.",
        "gold_select": "select Pets.PetType, Pets.wt",
        "select_candidates": [
            "select Pets.PetType, Pets.wt",
            "select Pets.PetType, Pets.wt, Pets.pet_age",
            "select Pets.PetType, Pets.wt)",
            "select Pets.PetType, Pets.wt, min(Pets.pet_age)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Pets",
        "table_candidates": [
            "Pets"
        ],
        "align_scores": [
            0.9733789563179016,
            6.421033322112635e-05,
            0.00014622366870753467,
            5.0932459998875856e-05,
            0.001807130640372634,
            5.579328353633173e-05,
            0.00021474823006428778,
            5.640953895635903e-05
        ],
        "align_select": "select Pets.PetType, Pets.wt",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What type of pet is the youngest animal, and how much does it weigh?",
        "gold_select": "select Pets.PetType, Pets.wt",
        "select_candidates": [
            "select Pets.PetType, Pets.wt",
            "select Pets.PetID, Pets.PetType, Pets.wt",
            "select Pets.PetType, Pets.wt, Pets.pet_age",
            "select Pets.PetType, Pets.wt, max(Pets.pet_age)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Pets",
        "table_candidates": [
            "Pets"
        ],
        "align_scores": [
            0.9657987356185913,
            6.230498547665775e-05,
            0.0002896384976338595,
            6.981555634411052e-05,
            0.0003748065500985831,
            5.4710806580260396e-05,
            0.00029397450271062553,
            5.909691026317887e-05
        ],
        "align_select": "select Pets.PetType, Pets.wt",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Find the id and weight of all pets whose age is older than 1.",
        "gold_select": "select Pets.PetID, Pets.wt",
        "select_candidates": [
            "select Pets.PetID, Pets.wt",
            "select Pets.PetID, Pets.wt.",
            "select Pets.PetID, Pets.wt)",
            "select Pets.PetID, Pets.wt,"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Pets",
        "table_candidates": [
            "Pets"
        ],
        "align_scores": [
            0.9614706039428711,
            0.00017879408551380038,
            0.03678465262055397,
            0.00011456014908617362,
            0.001493302290327847,
            0.00011218872532481328,
            0.0034641672391444445,
            7.249887858051807e-05
        ],
        "align_select": "select Pets.PetID, Pets.wt",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the id and weight of every pet who is older than 1?",
        "gold_select": "select Pets.PetID, Pets.wt",
        "select_candidates": [
            "select Pets.PetID, Pets.wt",
            "select Pets.PetID, Pets.wt.",
            "select Pets.PetID, Pets.wt)",
            "select Pets.PetID, Pets.wt,"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Pets",
        "table_candidates": [
            "Pets"
        ],
        "align_scores": [
            0.8404011726379395,
            0.00029184544109739363,
            0.015491330996155739,
            0.0001580200914759189,
            0.0016732597723603249,
            0.00014796484902035445,
            0.003000518772751093,
            8.77918500918895e-05
        ],
        "align_select": "select Pets.PetID, Pets.wt",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the average weight for each pet type.",
        "gold_select": "select avg(Pets.wt), Pets.PetType",
        "select_candidates": [
            "select Pets.PetType, avg(Pets.wt)",
            "select avg(Pets.wt), Pets.PetType",
            "select Pets.PetType.c3, avg(Pets.wt)",
            "select Pets.PetType, Avg(Pets.wt)"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Pets",
        "table_candidates": [
            "Pets"
        ],
        "align_scores": [
            0.9951587319374084,
            0.00021278427448123693,
            0.9947538375854492,
            0.0001413597201462835,
            0.0006105323554947972,
            0.00014296115841716528,
            0.9951587319374084,
            0.00021278427448123693
        ],
        "align_select": "select Pets.PetType, avg(Pets.wt)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "What is the average weight for each type of pet?",
        "gold_select": "select avg(Pets.wt), Pets.PetType",
        "select_candidates": [
            "select Pets.PetType, avg(Pets.wt)",
            "select avg(Pets.wt), Pets.PetType",
            "select Pets.PetType.c3, avg(Pets.wt)",
            "select Pets.PetType, Avg(Pets.wt)"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Pets",
        "table_candidates": [
            "Pets"
        ],
        "align_scores": [
            0.9940332770347595,
            0.0002613671822473407,
            0.9938919544219971,
            0.00015161333431024104,
            0.0006420485442504287,
            0.0001805986394174397,
            0.9940332770347595,
            0.0002613671822473407
        ],
        "align_select": "select Pets.PetType, avg(Pets.wt)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "Which model of the car has the minimum horsepower?",
        "gold_select": "select car_names.Model",
        "select_candidates": [
            "select car_names.Model",
            "select model_list.Model",
            "select car_names.Model, car_names.Make",
            "select car_names.Model, model_list.Model"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_names cars_data",
        "table_candidates": [
            "car_names cars_data",
            "model_list car_names cars_data",
            "car_makers car_names cars_data",
            "car_makers model_list car_names cars_data",
            "countries car_names cars_data",
            "continents car_names cars_data"
        ],
        "align_scores": [
            0.9847778081893921,
            5.9840087487827986e-05,
            0.9846445322036743,
            6.005669274600223e-05,
            0.0007638646056875587,
            5.335204696166329e-05,
            0.0004054072196595371,
            5.5855995015008375e-05
        ],
        "align_select": "select car_names.Model",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What is the model of the car with the smallest amount of horsepower?",
        "gold_select": "select car_names.Model",
        "select_candidates": [
            "select car_names.Model",
            "select model_list.Model",
            "select car_names.Model, car_names.Make",
            "select car_names.Make"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_names cars_data",
        "table_candidates": [
            "car_names cars_data",
            "model_list car_names cars_data",
            "car_makers car_names cars_data",
            "car_makers model_list car_names cars_data",
            "countries car_names cars_data",
            "continents car_names cars_data"
        ],
        "align_scores": [
            0.9895781874656677,
            7.24460041965358e-05,
            0.9890187978744507,
            6.937984289834276e-05,
            0.0005260299076326191,
            5.794426760985516e-05,
            0.9637528657913208,
            8.05775125627406e-05
        ],
        "align_select": "select car_names.Model",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Find the model of the car whose weight is below the average weight.",
        "gold_select": "select car_names.Model",
        "select_candidates": [
            "select model_list.Model",
            "select car_names.Model",
            "select car_names.Model, car_names.Make",
            "select car_names.Model, model_list.Model"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_names cars_data",
        "table_candidates": [
            "model_list car_names cars_data",
            "car_names cars_data",
            "car_makers model_list car_names cars_data",
            "continents model_list car_names cars_data",
            "countries car_names cars_data",
            "car_makers car_names cars_data",
            "model_list car_names"
        ],
        "align_scores": [
            0.9815342426300049,
            6.790493353037164e-05,
            0.9913051128387451,
            6.780256808269769e-05,
            0.00028302616556175053,
            6.38878409517929e-05,
            0.00021196760644670576,
            6.36761833447963e-05
        ],
        "align_select": "select model_list.Model",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the model for the car with a weight smaller than the average?",
        "gold_select": "select car_names.Model",
        "select_candidates": [
            "select model_list.Model",
            "select model_list.mdl_id, model_list.Model",
            "select car_names.Model",
            "select model_list.Model, car_names.Model"
        ],
        "select_labels": [
            0.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_names cars_data",
        "table_candidates": [
            "model_list car_names cars_data",
            "car_makers model_list car_names cars_data",
            "car_names cars_data",
            "model_list cars_data",
            "continents model_list car_names cars_data",
            "countries car_names cars_data",
            "model_list car_names",
            "car_makers model_list cars_data"
        ],
        "align_scores": [
            0.9893448948860168,
            6.25544271315448e-05,
            0.00022211582108866423,
            6.339341052807868e-05,
            0.9913359880447388,
            6.32893352303654e-05,
            0.0002095951058436185,
            5.809088543173857e-05
        ],
        "align_select": "select model_list.Model",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many car makers are there in each continents? List the continent name and the count.",
        "gold_select": "select continents.Continent, count(*)",
        "select_candidates": [
            "select continents.Continent, count(*)",
            "select continents.Continent, count(*)",
            "select continents.Continent, count(*), car_makers.Id",
            "select continents.Continent, count(*), car_makers.Maker"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "continents countries car_makers",
        "table_candidates": [
            "continents car_makers",
            "continents countries car_makers"
        ],
        "align_scores": [
            0.9858147501945496,
            0.00019305148452986032,
            0.9858147501945496,
            0.00019305148452986032,
            0.00014710247342009097,
            0.00011417811765568331,
            0.00032250938238576055,
            0.00010325009498046711
        ],
        "align_select": "select continents.Continent, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "What is the name of each continent and how many car makers are there in each one?",
        "gold_select": "select continents.Continent, count(*)",
        "select_candidates": [
            "select continents.Continent, count(*)",
            "select countries.cntry_name, count(*)",
            "select countries.Continent, count(*)",
            "select count(*), continents.Continent"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "continents countries car_makers",
        "table_candidates": [
            "continents countries car_makers",
            "continents car_makers",
            "continents countries"
        ],
        "align_scores": [
            0.9907079935073853,
            0.0002469739702064544,
            0.3753963112831116,
            0.00026777954190038145,
            0.9925042390823364,
            0.00028597970958799124,
            0.991392970085144,
            0.00025599179207347333
        ],
        "align_select": "select continents.Continent, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "Which of the countries has the most car makers? List the country name.",
        "gold_select": "select countries.cntry_name",
        "select_candidates": [
            "select countries.cntry_name",
            "select countries.cntry_name, car_makers.Country",
            "select countries.cntry_name (c0, car_makers.Country)",
            "select countries.cntry_name,"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "countries car_makers",
        "table_candidates": [
            "countries car_makers"
        ],
        "align_scores": [
            0.9742993116378784,
            8.829912985675037e-05,
            0.0014704877976328135,
            8.058288221945986e-05,
            0.0005064299912191927,
            6.621094507863745e-05,
            0.004491462372243404,
            7.888292020652443e-05
        ],
        "align_select": "select countries.cntry_name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the name of the country with the most car makers?",
        "gold_select": "select countries.cntry_name",
        "select_candidates": [
            "select countries.cntry_name",
            "select countries.cntry_name, car_makers.Country",
            "select countries.cntry_name commensurate with car_makers.Country",
            "select countries.cntry_name, countries.Continent"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "countries car_makers",
        "table_candidates": [
            "countries car_makers"
        ],
        "align_scores": [
            0.9781420826911926,
            7.878475298639387e-05,
            0.0015110810054466128,
            7.087543053785339e-05,
            0.0037196583580225706,
            6.408095214283094e-05,
            0.0015121743781492114,
            7.761008600937203e-05
        ],
        "align_select": "select countries.cntry_name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "How many car makers are there in france?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), countries.cntry_id",
            "select count(*), countries.cntry_id, countries.cntry_name",
            "select count(*), t1.cntry_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "countries car_makers",
        "table_candidates": [
            "countries car_makers"
        ],
        "align_scores": [
            0.9935194849967957,
            7.833474228391424e-05,
            0.0003016427217517048,
            7.620698306709528e-05,
            0.00021816321532242,
            5.8349993196316063e-05,
            0.00031257112277671695,
            6.07652218604926e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the number of makers of care in France?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), countries.cntry_id",
            "select count(*), countries.cntry_id, countries.cntry_name",
            "select count(*), t1.cntry_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "countries car_makers",
        "table_candidates": [
            "countries car_makers"
        ],
        "align_scores": [
            0.9940605759620667,
            0.0003651309525594115,
            0.0002251031983178109,
            0.0003013831446878612,
            0.00013337038399185985,
            0.0001440226478734985,
            0.00024342078540939838,
            0.00019716715905815363
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many car models are produced in the usa?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(distinct model_list.Model)",
            "select count(*), countries.cntry_id",
            "select count(model_list.Model)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "countries car_makers model_list",
        "table_candidates": [
            "countries car_makers model_list car_names",
            "countries car_makers model_list",
            "countries car_makers",
            "countries car_makers car_names"
        ],
        "align_scores": [
            0.9936060905456543,
            0.0034735859371721745,
            0.13467884063720703,
            0.00014685427595395595,
            0.0003308288869448006,
            0.0009899333817884326,
            0.991890549659729,
            0.00047566089779138565
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the count of the car models produced in the United States?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(distinct model_list.Model)",
            "select count(*), car_makers.Id",
            "select count(*), car_makers.Maker"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "countries car_makers model_list",
        "table_candidates": [
            "car_makers model_list car_names",
            "countries car_makers model_list car_names",
            "car_makers model_list",
            "continents car_makers model_list car_names"
        ],
        "align_scores": [
            0.9917306303977966,
            0.03911377862095833,
            0.03990941494703293,
            0.00010231742635369301,
            0.00023313562269322574,
            0.007470363285392523,
            0.00023722102923784405,
            0.00451313704252243
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the smallest weight of the car produced with 8 cylinders on 1974?",
        "gold_select": "select min(cars_data.wt)",
        "select_candidates": [
            "select min(cars_data.wt)",
            "select min(cars_data.wt), cars_data.Cylinders",
            "select min(cars_data.wt), cars_data.Accelerate",
            "select min(cars_data.wt), cars_data.Year"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data",
            "car_names cars_data",
            "model_list cars_data",
            "car_makers cars_data"
        ],
        "align_scores": [
            0.9928991794586182,
            0.00010115424083778635,
            0.00016489367408212274,
            6.299580854829401e-05,
            0.00014274210843723267,
            5.5925018386915326e-05,
            0.00012923625763505697,
            6.055662379367277e-05
        ],
        "align_select": "select min(cars_data.wt)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the minimum weight of the car with 8 cylinders produced in 1974?",
        "gold_select": "select min(cars_data.wt)",
        "select_candidates": [
            "select min(cars_data.wt)",
            "select min(cars_data.wt), cars_data.Year",
            "select min(cars_data.wt), cars_data.Accelerate",
            "select min(cars_data.wt), cars_data.Cylinders"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data",
            "car_names cars_data",
            "model_list cars_data",
            "car_makers cars_data"
        ],
        "align_scores": [
            0.9914637207984924,
            9.237883205059916e-05,
            0.00013651480549015105,
            6.308777665253729e-05,
            0.00015909444482531399,
            5.928572500124574e-05,
            0.0001886151876533404,
            6.321020191535354e-05
        ],
        "align_select": "select min(cars_data.wt)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the countries having at least one car maker? List name and id.",
        "gold_select": "select countries.cntry_name, countries.cntry_id",
        "select_candidates": [
            "select countries.cntry_name, car_makers.Id",
            "select distinct countries.cntry_name, car_makers.Id",
            "select countries.cntry_name, car_makers.Country",
            "select countries.cntry_name, countries.cntry_id"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "countries car_makers",
        "table_candidates": [
            "countries car_makers"
        ],
        "align_scores": [
            0.05873943492770195,
            0.7365346550941467,
            0.031729232519865036,
            0.0012131239054724574,
            0.5909969210624695,
            0.007710594683885574,
            0.9352282285690308,
            0.9788345098495483
        ],
        "align_select": "select countries.cntry_name, countries.cntry_id",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the names and ids of all countries with at least one car maker?",
        "gold_select": "select countries.cntry_name, countries.cntry_id",
        "select_candidates": [
            "select countries.cntry_name, countries.cntry_id",
            "select distinct countries.cntry_name, countries.cntry_id",
            "select count(*), countries.cntry_name, countries.cntry_id",
            "select at least countries.cntry_name, countries.cntry_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "countries car_makers",
        "table_candidates": [
            "countries car_makers"
        ],
        "align_scores": [
            0.9622126221656799,
            0.9676914215087891,
            0.06380744278430939,
            0.002285004360601306,
            0.00036514431121759117,
            0.00037636960041709244,
            0.38756272196769714,
            0.010582802817225456
        ],
        "align_select": "select countries.cntry_name, countries.cntry_id",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What is the number of the cars with horsepower more than 150?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), cars_data.Id",
            "select count(*), t5.dcars_data.Id",
            "select count(*), cars_data.MPG, cars_data.Cylinders"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data",
            "car_names cars_data",
            "model_list cars_data"
        ],
        "align_scores": [
            0.9940716624259949,
            0.00013623700942844152,
            0.00023281310859601945,
            0.005770950578153133,
            0.0002170202787965536,
            0.0011751182610169053,
            0.0001171399635495618,
            9.306443098466843e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the number of cars with a horsepower greater than 150?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), cars_data.Id",
            "select count(*), cars_data.MPG, cars_data.Cylinders",
            "select count(*), t5.dcars_data.Id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data",
            "car_names cars_data"
        ],
        "align_scores": [
            0.9917104840278625,
            0.0001299772848142311,
            0.00023115881776902825,
            0.0008899731910787523,
            0.00011748888209694996,
            9.020207653520629e-05,
            0.00020766675879713148,
            0.00035195378586649895
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the average weight of cars each year?",
        "gold_select": "select avg(cars_data.wt), cars_data.Year",
        "select_candidates": [
            "select avg(cars_data.wt), cars_data.Year",
            "select cars_data.Year, avg(cars_data.wt)",
            "select an avg(cars_data.wt), cars_data.Year",
            "select accu(cars_data.wt), cars_data.Year"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data"
        ],
        "align_scores": [
            0.9946485161781311,
            0.0001162353582913056,
            0.996329128742218,
            0.00010439992911415175,
            0.0002500122063793242,
            0.00012862916628364474,
            0.000996347633190453,
            0.0001004151999950409
        ],
        "align_select": "select avg(cars_data.wt), cars_data.Year",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "What is the average weight and year for each year?",
        "gold_select": "select avg(cars_data.wt), cars_data.Year",
        "select_candidates": [
            "select avg(cars_data.wt), cars_data.Year",
            "select avg(cars_data.wt), avg(cars_data.Year), cars_data.Year",
            "select avg(cars_data.wt), avg(cars_data.Year),",
            "select max(cars_data.wt), avg(cars_data.Year), cars_data.Year"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data"
        ],
        "align_scores": [
            0.9635745286941528,
            0.0001328487414866686,
            0.0004744251200463623,
            6.701500387862325e-05,
            0.000960037752520293,
            0.00013109178689774126,
            9.571847476763651e-05,
            7.937755435705185e-05
        ],
        "align_select": "select avg(cars_data.wt), cars_data.Year",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "Which countries in europe have at least 3 car manufacturers?",
        "gold_select": "select countries.cntry_name",
        "select_candidates": [
            "select countries.cntry_name",
            "select countries.cntry_name, continents.Continent",
            "select countries.cntry_name, car_makers.Country",
            "select countries.cntry_name, t0.c2"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY-HAVING",
            "SELECT-FROM-WHERE-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "continents countries car_makers",
        "table_candidates": [
            "continents countries car_makers",
            "countries car_makers"
        ],
        "align_scores": [
            0.950795590877533,
            9.94070214801468e-05,
            0.0005431845784187317,
            6.582577771041542e-05,
            0.002240449422970414,
            6.635916361119598e-05,
            0.00030114041874185205,
            6.459983706008643e-05
        ],
        "align_select": "select countries.cntry_name",
        "align_structure": "SELECT-FROM-WHERE-GROUP BY-HAVING"
    },
    {
        "question": "What are the names of all European countries with at least 3 manufacturers?",
        "gold_select": "select countries.cntry_name",
        "select_candidates": [
            "select countries.cntry_name",
            "select countries.cntry_name, t0.c2",
            "select countries.cntry_name, continents.Continent",
            "select countries.cntry_name, continents.ContId"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY-HAVING",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "continents countries car_makers",
        "table_candidates": [
            "continents countries car_makers",
            "countries car_makers",
            "continents car_makers",
            "continents countries"
        ],
        "align_scores": [
            0.9750188589096069,
            0.00018683740927372128,
            0.00033166035427711904,
            0.00011955228546867147,
            0.0007356237038038671,
            0.00014298103633336723,
            0.0008792977896519005,
            0.00015200214693322778
        ],
        "align_select": "select countries.cntry_name",
        "align_structure": "SELECT-FROM-WHERE-GROUP BY-HAVING"
    },
    {
        "question": "What is the maximum horsepower and the make of the car models with 3 cylinders?",
        "gold_select": "select cars_data.hp, car_names.Make",
        "select_candidates": [
            "select max(cars_data.hp), car_names.Make",
            "select max(cars_data.Accelerate), car_names.Make",
            "select max(cars_data.hp), cars_data.Cylinders",
            "select max(cars_data.hp), car_names.Make)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "car_names cars_data",
        "table_candidates": [
            "car_names cars_data",
            "model_list car_names cars_data",
            "countries car_names cars_data",
            "car_makers cars_data",
            "continents car_names cars_data",
            "model_list cars_data"
        ],
        "align_scores": [
            0.9939397573471069,
            0.00016412316472269595,
            0.9851554036140442,
            0.00016139399667736143,
            0.0005936560919508338,
            8.830443402985111e-05,
            0.0012967853108420968,
            0.000110813562059775
        ],
        "align_select": "select max(cars_data.hp), car_names.Make",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the largest amount of horsepower for the models with 3 cylinders and what make is it?",
        "gold_select": "select cars_data.hp, car_names.Make",
        "select_candidates": [
            "select max(cars_data.hp), car_names.Make",
            "select car_names.Model, car_names.Make",
            "select min(cars_data.hp), car_names.Make",
            "select max(cars_data.Accelerate), car_names.Make"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_names cars_data",
        "table_candidates": [
            "car_names cars_data",
            "model_list car_names cars_data",
            "countries car_names cars_data",
            "car_makers cars_data",
            "continents car_names cars_data",
            "model_list cars_data"
        ],
        "align_scores": [
            0.0005004989798180759,
            8.525669545633718e-05,
            0.9887672066688538,
            0.0004081351216882467,
            0.00028414197731763124,
            0.000201480055693537,
            0.0005426226416602731,
            9.014747774926946e-05
        ],
        "align_select": "select car_names.Model, car_names.Make",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT"
    },
    {
        "question": "What is the average horsepower of the cars before 1980?",
        "gold_select": "select avg(cars_data.hp)",
        "select_candidates": [
            "select avg(cars_data.hp)",
            "select an avg(cars_data.hp)",
            "select avg(avg(cars_data.hp)",
            "select  avg(cars_data.hp)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data",
            "model_list cars_data",
            "car_names cars_data",
            "car_makers cars_data"
        ],
        "align_scores": [
            0.9962714910507202,
            0.00012884644092991948,
            0.00036250086850486696,
            0.00011982048454228789,
            0.000420260796090588,
            0.0001101017405744642,
            0.9962714910507202,
            0.00012884644092991948
        ],
        "align_select": "select avg(cars_data.hp)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the average horsepower for all cars produced before 1980?",
        "gold_select": "select avg(cars_data.hp)",
        "select_candidates": [
            "select avg(cars_data.hp)",
            "select an avg(cars_data.hp)",
            "select avg(avg(cars_data.hp)",
            "select  avg(cars_data.hp)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data",
            "car_names cars_data",
            "model_list cars_data",
            "car_makers cars_data"
        ],
        "align_scores": [
            0.9961491823196411,
            0.00011111183266621083,
            0.00036923724110238254,
            0.00010818534065037966,
            0.0004917371552437544,
            0.00010067597031593323,
            0.9961491823196411,
            0.00011111183266621083
        ],
        "align_select": "select avg(cars_data.hp)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which distinctive models are produced by maker with the full name General Motors or weighing more than 3500?",
        "gold_select": "select distinct model_list.Model",
        "select_candidates": [
            "select distinct model_list.Model",
            "select distinct model_list.Model, car_makers.Maker",
            "select distinct model_list.Model, model_list.Maker",
            "select distinctive model_list.Model"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_makers model_list car_names cars_data",
        "table_candidates": [
            "car_makers model_list car_names",
            "car_makers model_list cars_data",
            "car_makers model_list car_makers cars_data",
            "countries car_makers model_list car_names",
            "car_makers model_list car_makers model_list cars_data",
            "countries car_makers model_list cars_data",
            "car_makers model_list car_makers car_names"
        ],
        "align_scores": [
            0.9463996291160583,
            0.015176201239228249,
            0.0008977853576652706,
            0.0002359182108193636,
            0.00027967235655523837,
            0.000122996571008116,
            0.01677122712135315,
            0.002837714273482561
        ],
        "align_select": "select distinct model_list.Model",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the different models created by either the car maker General Motors or weighed more than 3500?",
        "gold_select": "select distinct model_list.Model",
        "select_candidates": [
            "select distinct model_list.Model",
            "select count(distinct model_list.Model)",
            "select distinct model_list.Model, car_makers.Maker",
            "select distinct model_list.Model, car_makers.FullName"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_makers model_list car_names cars_data",
        "table_candidates": [
            "car_makers model_list cars_data",
            "car_makers model_list car_names",
            "countries car_makers model_list cars_data",
            "continents car_makers model_list cars_data",
            "car_makers model_list car_makers cars_data",
            "car_makers model_list car_names cars_data"
        ],
        "align_scores": [
            0.9897012710571289,
            0.00036625354550778866,
            0.0018340975511819124,
            9.18700170586817e-05,
            0.00048580276779830456,
            9.950261301128194e-05,
            0.00047462782822549343,
            0.0001088103381334804
        ],
        "align_select": "select distinct model_list.Model",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "In which years cars were produced weighing no less than 3000 and no more than 4000?",
        "gold_select": "select distinct cars_data.Year",
        "select_candidates": [
            "select cars_data.Year",
            "select distinct cars_data.Year",
            "select specific cars_data.Year",
            "select the cars_data.Year"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data",
            "model_list cars_data",
            "car_makers cars_data",
            "car_names cars_data"
        ],
        "align_scores": [
            0.9773098230361938,
            0.00044615499791689217,
            0.14043419063091278,
            0.0002846302813850343,
            0.002285911003127694,
            0.00014829053543508053,
            0.001858817064203322,
            0.00013749406207352877
        ],
        "align_select": "select cars_data.Year",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the different years in which there were cars produced that weighed less than 4000 and also cars that weighted more than 3000?",
        "gold_select": "select distinct cars_data.Year",
        "select_candidates": [
            "select distinct cars_data.Year",
            "select cars_data.Year",
            "select distinct cars_data.Year, t5.c8",
            "select different cars_data.Year"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data",
            "model_list cars_data"
        ],
        "align_scores": [
            0.004785803146660328,
            0.015139421448111534,
            0.8248753547668457,
            0.8884948492050171,
            0.0001234767260029912,
            0.00012239707575645298,
            0.002534568542614579,
            0.001202822313643992
        ],
        "align_select": "select cars_data.Year",
        "align_structure": "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
    },
    {
        "question": "What is the horsepower of the car with the largest accelerate?",
        "gold_select": "select cars_data.hp",
        "select_candidates": [
            "select cars_data.hp",
            "select cars_data.Id, cars_data.hp",
            "select cars_data.hp, cars_data.Accelerate",
            "select cars_data.Id, cars_data.Cylinders"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data"
        ],
        "align_scores": [
            0.97031569480896,
            7.928571722004563e-05,
            0.0002384837280260399,
            6.963776104385033e-05,
            0.0006157323950901628,
            6.807285535614938e-05,
            0.00020487325673457235,
            6.665013643214479e-05
        ],
        "align_select": "select cars_data.hp",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What is the horsepower of the car with the greatest accelerate?",
        "gold_select": "select cars_data.hp",
        "select_candidates": [
            "select cars_data.hp",
            "select cars_data.Id, cars_data.hp",
            "select cars_data.hp, cars_data.Accelerate",
            "select cars_data.Id, cars_data.Cylinders"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data"
        ],
        "align_scores": [
            0.9828212261199951,
            8.148916822392493e-05,
            0.0002659593301359564,
            7.050642307149246e-05,
            0.0007094392203725874,
            6.720462261000648e-05,
            0.00021720866789110005,
            6.392550858436152e-05
        ],
        "align_select": "select cars_data.hp",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "How many cars have a larger accelerate than the car with the largest horsepower?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), cars_data.hp",
            "select count(*), cars_data.Id",
            "select count(*), cars_data.Accelerate"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data",
            "car_names cars_data"
        ],
        "align_scores": [
            0.9621860384941101,
            0.0013478088658303022,
            0.00037309230538085103,
            0.0003348255413584411,
            0.000418550189351663,
            0.00016310707724187523,
            0.00046208640560507774,
            0.0002972352667711675
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the number of cars with a greater accelerate than the one with the most horsepower?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), cars_data.hp",
            "select count(*), cars_data.Id",
            "select count(*), cars_data.Accelerate"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data"
        ],
        "align_scores": [
            0.9737866520881653,
            0.0005758209154009819,
            0.0003294066700618714,
            0.00017238588770851493,
            0.0004231985367368907,
            9.957162546925247e-05,
            0.00047228322364389896,
            0.00014955762890167534
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many countries has more than 2 car makers?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), car_makers.Country",
            "select count(distinct car_makers.Country)",
            "select count(*), countries.cntry_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "countries car_makers",
        "table_candidates": [
            "countries car_makers",
            "car_makers",
            "model_list car_makers"
        ],
        "align_scores": [
            0.8212433457374573,
            0.012550869956612587,
            0.0007852835115045309,
            0.017560744658112526,
            0.39891648292541504,
            0.0007838223245926201,
            0.0008041713736020029,
            0.040146004408597946
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What is the number of countries with more than 2 car makers?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), car_makers.Country",
            "select count(distinct car_makers.Country)",
            "select count(*),"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "countries car_makers",
        "table_candidates": [
            "car_makers",
            "countries car_makers",
            "continents countries car_makers",
            "model_list car_makers",
            "continents car_makers"
        ],
        "align_scores": [
            0.76219242811203,
            0.004517059773206711,
            0.0007980794762261212,
            0.15819549560546875,
            0.4372551143169403,
            0.0003099951718468219,
            0.001945057767443359,
            0.005826910957694054
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "For the cars with 4 cylinders, which model has the largest horsepower?",
        "gold_select": "select car_names.Model",
        "select_candidates": [
            "select car_names.Model",
            "select car_names.Model, cars_data.Cylinders",
            "select car_names.Model, car_names.Make",
            "select car_names.Model, cars_data.Id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-ORDER BY-LIMIT-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_names cars_data",
        "table_candidates": [
            "car_names cars_data",
            "model_list car_names cars_data",
            "car_makers car_names cars_data",
            "countries car_names cars_data",
            "continents car_names cars_data",
            "car_makers cars_data",
            "countries cars_data"
        ],
        "align_scores": [
            0.9618129134178162,
            0.00010249074694002047,
            0.0005792746087536216,
            6.72370006213896e-05,
            0.0005489091854542494,
            7.199971150839701e-05,
            0.00038168326136656106,
            8.028672891668975e-05
        ],
        "align_select": "select car_names.Model",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT"
    },
    {
        "question": "For all of the 4 cylinder cars, which model has the most horsepower?",
        "gold_select": "select car_names.Model",
        "select_candidates": [
            "select car_names.Model",
            "select car_names.Model, cars_data.Cylinders",
            "select car_names.Model, car_names.Make",
            "select car_names.Model, cars_data.Id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-ORDER BY-LIMIT-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_names cars_data",
        "table_candidates": [
            "car_names cars_data",
            "model_list car_names cars_data",
            "car_makers car_names cars_data",
            "countries car_names cars_data",
            "continents car_names cars_data",
            "car_makers cars_data",
            "countries cars_data"
        ],
        "align_scores": [
            0.95494145154953,
            0.00011157262633787468,
            0.0008186658378690481,
            7.208613533293828e-05,
            0.0004810009559150785,
            6.589730764972046e-05,
            0.0004281584406271577,
            7.970628939801827e-05
        ],
        "align_select": "select car_names.Model",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT"
    },
    {
        "question": "Among the cars with more than lowest horsepower, which ones do not have more than 3 cylinders? List the car makeid and make name.",
        "gold_select": "select car_names.MakeId, car_names.Make",
        "select_candidates": [
            "select car_names.MakeId, car_names.Make",
            "select car_makers.Id, car_names.Make",
            "select car_names.MakeId, car_names.Make",
            "select car_names.Model, car_names.Make"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_names cars_data",
        "table_candidates": [
            "car_names cars_data",
            "model_list car_names cars_data",
            "car_makers car_names cars_data",
            "countries car_names cars_data",
            "car_makers cars_data"
        ],
        "align_scores": [
            0.9007434248924255,
            0.5555253028869629,
            0.7111538648605347,
            0.5436035394668579,
            0.9007434248924255,
            0.5555253028869629,
            0.001049237558618188,
            0.0004926859983243048
        ],
        "align_select": "select car_names.MakeId, car_names.Make",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Among the cars that do not have the minimum horsepower, what are the make ids and names of all those with less than 4 cylinders?",
        "gold_select": "select car_names.MakeId, car_names.Make",
        "select_candidates": [
            "select car_names.MakeId, car_names.Make",
            "select car_names.Make, car_names.MakeId",
            "select car_names.Model, car_names.Make",
            "select car_names.MakeId, car_names.Model"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_names cars_data",
        "table_candidates": [
            "car_names cars_data",
            "model_list car_names cars_data",
            "car_makers car_names cars_data",
            "countries car_names cars_data",
            "continents car_names cars_data",
            "car_makers cars_data"
        ],
        "align_scores": [
            0.9219397306442261,
            0.0016255590599030256,
            0.8170405626296997,
            0.0022956000175327063,
            0.4059889614582062,
            0.0015840018168091774,
            0.9433760046958923,
            0.009420209564268589
        ],
        "align_select": "select car_names.MakeId, car_names.Make",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which models are lighter than 3500 but not built by the 'Ford Motor Company'?",
        "gold_select": "select distinct model_list.Model",
        "select_candidates": [
            "select model_list.Model",
            "select car_makers.Maker, car_makers.FullName",
            "select model_list.Maker",
            "select car_names.Model"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "car_makers model_list car_names cars_data",
        "table_candidates": [
            "car_makers model_list car_names",
            "car_makers model_list cars_data",
            "countries car_makers model_list car_names",
            "continents car_makers model_list car_names",
            "countries car_makers model_list cars_data",
            "car_makers model_list",
            "continents car_makers model_list cars_data"
        ],
        "align_scores": [
            0.9067817330360413,
            0.5388898253440857,
            0.0002794498286675662,
            0.0002504316216800362,
            0.9578632116317749,
            0.8697727918624878,
            0.9264947772026062,
            0.7630136013031006
        ],
        "align_select": "select model_list.Model",
        "align_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the different models wthat are lighter than 3500 but were not built by the Ford Motor Company?",
        "gold_select": "select distinct model_list.Model",
        "select_candidates": [
            "select distinct model_list.Model",
            "select distinct car_names.Model",
            "select distinct model_list.Maker",
            "select distinct car_makers.Maker, car_makers.FullName"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "car_makers model_list car_names cars_data",
        "table_candidates": [
            "car_makers model_list car_names",
            "car_makers model_list cars_data",
            "countries car_makers model_list car_names",
            "continents car_makers model_list car_names",
            "countries car_makers model_list cars_data",
            "continents car_makers model_list cars_data"
        ],
        "align_scores": [
            0.24196510016918182,
            0.24196510016918182,
            0.27977851033210754,
            0.27977851033210754,
            0.24596354365348816,
            0.24596354365348816,
            0.00029600507696159184,
            0.00029600507696159184
        ],
        "align_select": "select distinct model_list.Model",
        "align_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the name of the countries where there is not a single car maker?",
        "gold_select": "select countries.cntry_name",
        "select_candidates": [
            "select countries.cntry_name",
            "select countries.cntry_name, car_makers.Country",
            "select countries.cntry_name, countries.Continent",
            "select countries.cntry_name, t0.c2"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "countries car_makers",
        "table_candidates": [
            "countries car_makers",
            "countries",
            "countries car_makers model_list",
            "countries car_makers car_names"
        ],
        "align_scores": [
            0.6853746175765991,
            0.9228901267051697,
            0.0006847509066574275,
            0.000646876753307879,
            0.0003757139202207327,
            0.0006771632470190525,
            0.0006442349404096603,
            0.0004151572356931865
        ],
        "align_select": "select countries.cntry_name",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM"
    },
    {
        "question": "What are the names of the countries with no car makers?",
        "gold_select": "select countries.cntry_name",
        "select_candidates": [
            "select countries.cntry_name",
            "select countries.cntry_name, countries.Continent",
            "select countries.cntry_name, t0.c2",
            "select countries.cntry_name, continents.Continent"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "countries car_makers",
        "table_candidates": [
            "countries",
            "countries car_makers",
            "countries car_makers model_list"
        ],
        "align_scores": [
            0.6247102618217468,
            0.9387193322181702,
            0.0003130733675789088,
            0.0005795523757115006,
            0.0006647544796578586,
            0.00040945736691355705,
            0.0005851148744113743,
            0.0008603594615124166
        ],
        "align_select": "select countries.cntry_name",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM"
    },
    {
        "question": "What are the id and names of the countries which have more than 3 car makers or produce the 'fiat' model?",
        "gold_select": "select countries.cntry_id, countries.cntry_name",
        "select_candidates": [
            "select countries.cntry_id, countries.cntry_name",
            "select car_makers.Id, countries.cntry_name",
            "select car_names.Model, countries.cntry_id, countries.cntry_name",
            "select countries.cntry_name, countries.cntry_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "countries car_makers model_list",
        "table_candidates": [
            "countries car_makers model_list car_names",
            "countries car_makers model_list",
            "countries car_makers"
        ],
        "align_scores": [
            0.9908851981163025,
            0.10657735168933868,
            0.9795188307762146,
            0.025976160541176796,
            0.00032988341990858316,
            0.00016966793918982148,
            0.9913703203201294,
            0.10473082214593887
        ],
        "align_select": "select countries.cntry_id, countries.cntry_name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the ids and names of all countries that either have more than 3 car makers or produce fiat model?",
        "gold_select": "select countries.cntry_id, countries.cntry_name",
        "select_candidates": [
            "select countries.cntry_id, countries.cntry_name",
            "select car_makers.Id, countries.cntry_name",
            "select car_names.Model, countries.cntry_id, countries.cntry_name",
            "select countries.cntry_name, countries.cntry_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "countries car_makers model_list",
        "table_candidates": [
            "countries car_makers model_list",
            "countries car_makers model_list car_names",
            "countries model_list car_names"
        ],
        "align_scores": [
            0.9842922687530518,
            0.9891666769981384,
            0.5821840763092041,
            0.9613460898399353,
            0.0002509347104933113,
            0.00035530884633772075,
            0.9843116402626038,
            0.9894826412200928
        ],
        "align_select": "select countries.cntry_id, countries.cntry_name",
        "align_structure": "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
    },
    {
        "question": "Find the name of the makers that produced some cars in the year of 1970?",
        "gold_select": "select distinct car_makers.Maker",
        "select_candidates": [
            "select car_makers.Maker, car_makers.FullName",
            "select car_makers.FullName, car_makers.Maker",
            "select car_makers.FullName",
            "select car_makers.Maker"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_makers model_list car_names cars_data",
        "table_candidates": [
            "car_makers car_names cars_data",
            "car_makers model_list car_names cars_data",
            "continents car_makers car_names cars_data",
            "car_makers cars_data"
        ],
        "align_scores": [
            0.0003570220433175564,
            7.233390351757407e-05,
            0.0003991229459643364,
            7.143658876884729e-05,
            0.7215805649757385,
            0.0002875046629924327,
            0.9692379236221313,
            0.001314473687671125
        ],
        "align_select": "select car_makers.Maker",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the name of the different car makers who produced a car in 1970?",
        "gold_select": "select distinct car_makers.Maker",
        "select_candidates": [
            "select distinct car_makers.Maker, car_makers.FullName",
            "select distinct car_makers.FullName, car_makers.Maker",
            "select distinct car_makers.FullName",
            "select distinct car_makers.Maker"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_makers model_list car_names cars_data",
        "table_candidates": [
            "car_makers car_names cars_data",
            "car_makers car_names",
            "car_makers model_list car_names cars_data",
            "car_makers cars_data",
            "continents car_makers car_names cars_data"
        ],
        "align_scores": [
            0.0005942312418483198,
            7.654076762264594e-05,
            0.0004664957523345947,
            7.654025102965534e-05,
            0.9575826525688171,
            0.00029225728940218687,
            0.990705668926239,
            0.000356165983248502
        ],
        "align_select": "select distinct car_makers.Maker",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which distinct car models are the produced after 1980?",
        "gold_select": "select distinct model_list.mdl",
        "select_candidates": [
            "select distinct car_names.Model",
            "select distinct car_names.Model, car_names.Make",
            "select distinct car_names.Model, car_names.MakeId",
            "select distinct car_names.Model/car_names.Model"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "model_list car_names cars_data",
        "table_candidates": [
            "car_names",
            "model_list car_names",
            "car_makers car_names",
            "car_names cars_data",
            "countries car_names"
        ],
        "align_scores": [
            0.9871242046356201,
            0.005341054406017065,
            0.00016812962712720037,
            0.00013371167005971074,
            0.00015142178745009005,
            0.0001295844849664718,
            0.0003751656331587583,
            0.00011996934335911646
        ],
        "align_select": "select distinct car_names.Model",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the different models for the cards produced after 1980?",
        "gold_select": "select distinct model_list.mdl",
        "select_candidates": [
            "select distinct model_list.mdl",
            "select distinct model_list.ModelId",
            "select distinct model_list.mdl",
            "select distinct car_names.Model"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "model_list car_names cars_data",
        "table_candidates": [
            "model_list car_names",
            "model_list cars_data",
            "car_makers model_list car_names"
        ],
        "align_scores": [
            0.915434718132019,
            0.00014172602095641196,
            0.9225692749023438,
            0.00029513996560126543,
            0.915434718132019,
            0.00014172602095641196,
            0.9925670623779297,
            0.00014641844609286636
        ],
        "align_select": "select distinct model_list.mdl",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are all the makers and models?",
        "gold_select": "select model_list.Maker, model_list.mdl",
        "select_candidates": [
            "select model_list.Maker, car_names.Model",
            "select car_makers.Maker, car_names.Model",
            "select car_names.Make, car_names.Model",
            "select model_list.Maker, model_list.Maker"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "model_list",
        "table_candidates": [
            "car_makers model_list car_names",
            "model_list car_names",
            "countries model_list car_names",
            "countries car_makers model_list car_names",
            "continents car_makers model_list car_names",
            "continents model_list car_names",
            "car_makers model_list"
        ],
        "align_scores": [
            0.9551684260368347,
            0.00016789637447800487,
            0.9642499089241028,
            0.00011505904694786295,
            0.992732584476471,
            0.00013452194980345666,
            0.0004556445637717843,
            9.264703112421557e-05
        ],
        "align_select": "select model_list.Maker, car_names.Model",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What are the makers and models?",
        "gold_select": "select model_list.Maker, model_list.mdl",
        "select_candidates": [
            "select car_makers.Maker, car_names.Model",
            "select model_list.Maker, car_names.Model",
            "select car_names.Make, car_names.Model",
            "select car_makers.Maker, car_makers.Maker"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "model_list",
        "table_candidates": [
            "car_makers model_list car_names",
            "model_list car_names",
            "countries car_makers model_list car_names",
            "countries model_list car_names",
            "continents car_makers model_list car_names",
            "car_makers model_list"
        ],
        "align_scores": [
            0.9844605326652527,
            0.0001075703912647441,
            0.983290433883667,
            0.00015270091535057873,
            0.9947233200073242,
            0.0001413352001691237,
            0.0006764350109733641,
            8.125590829877183e-05
        ],
        "align_select": "select car_makers.Maker, car_names.Model",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "Which distinctive models are produced by maker with the full name General Motors or weighing more than 3500?",
        "gold_select": "select distinct model_list.mdl",
        "select_candidates": [
            "select distinct car_names.Model",
            "select distinct model_list.Maker",
            "select distinct car_names.Model, car_names.Make",
            "select distinct car_names.Model, model_list.mdl"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_makers model_list car_names cars_data",
        "table_candidates": [
            "car_makers model_list cars_data",
            "car_makers model_list car_names",
            "countries car_makers model_list cars_data",
            "continents car_makers model_list cars_data",
            "continents car_makers model_list car_names",
            "countries car_makers model_list car_names"
        ],
        "align_scores": [
            0.9651212692260742,
            0.10052487254142761,
            0.7278838157653809,
            0.0036757923662662506,
            0.00020984305592719465,
            0.00010700932762119919,
            0.00044604807044379413,
            0.0001485002285335213
        ],
        "align_select": "select distinct car_names.Model",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the different models created by either the car maker General Motors or weighed more than 3500?",
        "gold_select": "select distinct model_list.mdl",
        "select_candidates": [
            "select distinct car_names.Model",
            "select distinct model_list.Maker",
            "select distinct model_list.ModelId",
            "select distinct model_list.Maker, model_list.mdl"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_makers model_list car_names cars_data",
        "table_candidates": [
            "car_makers model_list car_names cars_data",
            "car_makers model_list cars_data",
            "car_makers model_list car_names",
            "continents car_makers model_list car_names cars_data",
            "countries car_makers model_list cars_data"
        ],
        "align_scores": [
            0.9911905527114868,
            0.0005120323621667922,
            0.9182365536689758,
            0.0001674056111369282,
            0.43265432119369507,
            0.0015693347668275237,
            0.0004240633570589125,
            9.435485117137432e-05
        ],
        "align_select": "select distinct car_names.Model",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which models are lighter than 3500 but not built by the 'Ford Motor Company'?",
        "gold_select": "select distinct model_list.mdl",
        "select_candidates": [
            "select car_names.Model",
            "select car_names.Model, car_makers.FullName",
            "select car_makers.Maker, car_makers.FullName",
            "select car_names.Model, model_list.mdl"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "car_makers model_list car_names cars_data",
        "table_candidates": [
            "car_makers model_list car_names",
            "car_makers model_list cars_data",
            "car_makers model_list car_names cars_data",
            "countries car_makers model_list cars_data",
            "continents car_makers model_list car_names",
            "countries car_makers model_list car_names",
            "continents car_makers model_list cars_data"
        ],
        "align_scores": [
            0.9264947772026062,
            0.7630136013031006,
            0.0003080747846979648,
            0.0002262522466480732,
            0.0002794498286675662,
            0.0002504316216800362,
            0.0004996359930373728,
            0.0003327098675072193
        ],
        "align_select": "select car_names.Model",
        "align_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the different models wthat are lighter than 3500 but were not built by the Ford Motor Company?",
        "gold_select": "select distinct model_list.mdl",
        "select_candidates": [
            "select distinct car_names.Model",
            "select distinct car_names.Model, car_makers.FullName",
            "select distinct car_names.Model, model_list.mdl",
            "select distinct car_names.Model, car_names.Make"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "car_makers model_list car_names cars_data",
        "table_candidates": [
            "car_makers model_list car_names",
            "countries car_makers model_list car_names",
            "continents car_makers model_list car_names",
            "car_makers model_list cars_data"
        ],
        "align_scores": [
            0.27977851033210754,
            0.27977851033210754,
            0.0004438255855347961,
            0.0004438255855347961,
            0.0004568002768792212,
            0.0004568002768792212,
            0.0011429773876443505,
            0.0011429773876443505
        ],
        "align_select": "select distinct car_names.Model",
        "align_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "Which are the car makers which produce at least 2 models and more than 3 car makers? List the id and the maker.",
        "gold_select": "select car_makers.Id, car_makers.Maker",
        "select_candidates": [
            "select car_makers.Id, car_makers.Maker",
            "select car_names.MakeId, car_makers.Maker",
            "select model_list.ModelId, car_makers.Maker",
            "select t2, car_makers.Id, car_makers.Maker"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING-INTERSECT-SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING-INTERSECT-SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_makers model_list car_names",
        "table_candidates": [
            "car_makers model_list car_names",
            "car_makers car_names",
            "model_list car_names",
            "countries model_list car_names"
        ],
        "align_scores": [
            0.03181135281920433,
            0.009719659574329853,
            0.021591808646917343,
            0.007871975190937519,
            0.002623553853482008,
            0.0014104981673881412,
            0.00014952541096135974,
            0.00012067450006725267
        ],
        "align_select": "select car_makers.Id, car_makers.Maker",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the ids and makers of all car makers that produce at least 2 models and make more than 3 cars?",
        "gold_select": "select car_makers.Id, car_makers.Maker",
        "select_candidates": [
            "select car_makers.Id, car_makers.Maker",
            "select model_list.ModelId, car_makers.Maker",
            "select car_names.Model, car_makers.Maker",
            "select car_names.Model, car_makers.FullName"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING-INTERSECT-SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING-INTERSECT-SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_makers model_list car_names",
        "table_candidates": [
            "car_makers model_list car_names",
            "countries car_makers model_list car_names",
            "model_list car_names",
            "continents car_makers model_list car_names",
            "countries model_list car_names",
            "continents model_list car_names",
            "car_makers car_names"
        ],
        "align_scores": [
            0.8882565498352051,
            0.09909139573574066,
            0.00032564191496931016,
            0.0003658570349216461,
            0.000214433777728118,
            0.00017998045950662345,
            0.00017696958093438298,
            0.00015684260870330036
        ],
        "align_select": "select car_makers.Id, car_makers.Maker",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the id and names of the countries which have more than 3 car makers or produce the 'fiat' model?",
        "gold_select": "select countries.CountryId, countries.CountryName",
        "select_candidates": [
            "select countries.CountryId, countries.CountryName",
            "select car_makers.Id, countries.CountryName",
            "select car_names.Model, countries.CountryId, countries.CountryName",
            "select countries.CountryId, countries.CountryName, car_makers.Country"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "countries car_makers model_list",
        "table_candidates": [
            "countries car_makers car_names",
            "countries car_makers model_list car_names",
            "countries model_list car_names",
            "countries car_makers"
        ],
        "align_scores": [
            0.987210750579834,
            0.12918859720230103,
            0.2868495583534241,
            0.007429586257785559,
            0.0002956384269054979,
            0.00016156365745700896,
            0.000373276969185099,
            0.00021555258717853576
        ],
        "align_select": "select countries.CountryId, countries.CountryName",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the ids and names of all countries that either have more than 3 car makers or produce fiat model?",
        "gold_select": "select countries.CountryId, countries.CountryName",
        "select_candidates": [
            "select countries.CountryId, countries.CountryName",
            "select car_names.Model, countries.CountryId, countries.CountryName",
            "select car_makers.Id, countries.CountryName",
            "select countries.CountryId, countries.CountryName, car_makers.Country"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "countries car_makers model_list",
        "table_candidates": [
            "countries car_makers car_names",
            "countries car_makers model_list car_names",
            "countries car_makers model_list",
            "countries model_list car_names"
        ],
        "align_scores": [
            0.9835463762283325,
            0.9861204028129578,
            0.00027212969143874943,
            0.0003385879972483963,
            0.11172440648078918,
            0.22549127042293549,
            0.0004425630031619221,
            0.0005675898864865303
        ],
        "align_select": "select countries.CountryId, countries.CountryName",
        "align_structure": "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
    },
    {
        "question": "How many countries does each continent have? List the continent id, continent name and the number of countries.",
        "gold_select": "select continents.ContId, continents.cont, count(*)",
        "select_candidates": [
            "select continents.ContId, continents.cont, count(*)",
            "select countries.cntry_id, countries.cntry_name, count(*)",
            "select continents.ContId, continents.cont, count(*)",
            "select countries.cntry_name, continents.ContId, count(*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "continents countries",
        "table_candidates": [
            "continents countries"
        ],
        "align_scores": [
            0.364314466714859,
            0.00029050270677544177,
            0.9426434636116028,
            0.0002890023752115667,
            0.364314466714859,
            0.00029050270677544177,
            0.11062408983707428,
            0.000306978850858286
        ],
        "align_select": "select countries.cntry_id, countries.cntry_name, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "For each continent, list its id, name, and how many countries it has?",
        "gold_select": "select continents.ContId, continents.cont, count(*)",
        "select_candidates": [
            "select continents.ContId, countries.cntry_name, count(*)",
            "select countries.cntry_name, count(*), continents.ContId",
            "select continents.ContId, countries.cntry_name, count(*)",
            "select countries.cntry_id, countries.cntry_name, count(*)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "continents countries",
        "table_candidates": [
            "continents countries"
        ],
        "align_scores": [
            0.014235937036573887,
            0.00022266015002969652,
            0.1545228809118271,
            0.00024319643853232265,
            0.014235937036573887,
            0.00022266015002969652,
            0.9361194968223572,
            0.00018232227012049407
        ],
        "align_select": "select countries.cntry_id, countries.cntry_name, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "Which model of the car has the minimum horsepower?",
        "gold_select": "select car_names.mdl",
        "select_candidates": [
            "select car_names.mdl",
            "select car_names.Make",
            "select car_names.mdl, car_names.Make",
            "select car_names.MakeId, car_names.mdl"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_names cars_data",
        "table_candidates": [
            "car_names cars_data",
            "model_list car_names cars_data",
            "car_makers car_names cars_data",
            "car_makers model_list car_names cars_data",
            "countries car_names cars_data",
            "continents car_names cars_data",
            "car_makers model_list cars_data"
        ],
        "align_scores": [
            0.5057975053787231,
            7.997947977855802e-05,
            0.9645447134971619,
            6.473526445915923e-05,
            0.000847919553052634,
            5.670498649124056e-05,
            0.0006814203807152808,
            6.028150164638646e-05
        ],
        "align_select": "select car_names.Make",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What is the model of the car with the smallest amount of horsepower?",
        "gold_select": "select car_names.mdl",
        "select_candidates": [
            "select car_names.Make",
            "select car_names.mdl",
            "select model_list.mdl",
            "select car_names.mdl, car_names.Make"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_names cars_data",
        "table_candidates": [
            "model_list cars_data",
            "car_names cars_data",
            "model_list car_names cars_data",
            "car_makers model_list cars_data",
            "car_makers car_names cars_data",
            "countries car_names cars_data",
            "continents car_names cars_data",
            "car_makers cars_data"
        ],
        "align_scores": [
            0.9637528657913208,
            8.05775125627406e-05,
            0.7674756050109863,
            8.170220826286823e-05,
            0.7714415788650513,
            8.475929644191638e-05,
            0.0005337248439900577,
            6.256732012843713e-05
        ],
        "align_select": "select car_names.Make",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Find the model of the car whose weight is below the average weight.",
        "gold_select": "select car_names.mdl",
        "select_candidates": [
            "select car_names.mdl",
            "select model_list.mdl",
            "select car_names.Make",
            "select car_names.mdl, car_names.Make"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_names cars_data",
        "table_candidates": [
            "model_list cars_data",
            "model_list car_names cars_data",
            "car_makers model_list cars_data",
            "car_names cars_data",
            "countries model_list cars_data",
            "countries car_names cars_data",
            "continents model_list cars_data"
        ],
        "align_scores": [
            0.7766885757446289,
            8.481095574097708e-05,
            0.26146143674850464,
            0.00010077953629661351,
            0.8596430420875549,
            7.755503611406311e-05,
            0.00023347018577624112,
            6.828181358287111e-05
        ],
        "align_select": "select car_names.mdl",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the model for the car with a weight smaller than the average?",
        "gold_select": "select car_names.mdl",
        "select_candidates": [
            "select model_list.mdl",
            "select car_names.mdl",
            "select model_list.mdl, car_names.mdl",
            "select car_names.Make"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_names cars_data",
        "table_candidates": [
            "model_list cars_data",
            "cars_data model_list car_names",
            "cars_data",
            "car_names cars_data",
            "cars_data model_list car_names cars_data",
            "car_makers model_list cars_data",
            "car_makers cars_data",
            "cars_data car_names model_list cars_data"
        ],
        "align_scores": [
            0.7466558218002319,
            0.0001174420613097027,
            0.9861764311790466,
            0.00010881677735596895,
            0.00021396383817773312,
            7.034155714791268e-05,
            0.9849788546562195,
            0.00010148477304028347
        ],
        "align_select": "select car_names.mdl",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the name of the makers that produced some cars in the year of 1970?",
        "gold_select": "select distinct car_makers.Maker",
        "select_candidates": [
            "select car_makers.Maker, car_makers.FullName",
            "select car_makers.FullName, car_makers.Maker",
            "select distinct car_makers.Maker, car_makers.FullName",
            "select car_makers.Maker"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_makers model_list car_names cars_data",
        "table_candidates": [
            "car_makers car_names cars_data",
            "car_makers car_names",
            "car_makers model_list car_names cars_data",
            "continents car_makers car_names cars_data",
            "car_makers cars_data"
        ],
        "align_scores": [
            0.0003570220433175564,
            7.233390351757407e-05,
            0.0003991229459643364,
            7.143658876884729e-05,
            0.00029262169846333563,
            6.360305269481614e-05,
            0.9692379236221313,
            0.001314473687671125
        ],
        "align_select": "select car_makers.Maker",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the name of the different car makers who produced a car in 1970?",
        "gold_select": "select distinct car_makers.Maker",
        "select_candidates": [
            "select distinct car_makers.Maker, car_makers.FullName",
            "select distinct car_makers.FullName, car_makers.Maker",
            "select distinct car_makers.FullName",
            "select distinct car_makers.Maker"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_makers model_list car_names cars_data",
        "table_candidates": [
            "car_makers car_names",
            "car_makers car_names cars_data",
            "continents car_makers car_names",
            "car_makers cars_data"
        ],
        "align_scores": [
            0.0005942312418483198,
            7.654076762264594e-05,
            0.0004664957523345947,
            7.654025102965534e-05,
            0.9575826525688171,
            0.00029225728940218687,
            0.990705668926239,
            0.000356165983248502
        ],
        "align_select": "select distinct car_makers.Maker",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which distinct car models are the produced after 1980?",
        "gold_select": "select distinct model_list.mdl",
        "select_candidates": [
            "select distinct car_names.mdl",
            "select distinct car_names.mdl, car_names.Make",
            "select distinct t4(car_names.mdl)",
            "select distinct car_names.mdl/car_names.mdl"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "model_list car_names cars_data",
        "table_candidates": [
            "model_list car_names",
            "car_names",
            "car_names cars_data",
            "model_list car_names cars_data",
            "car_makers model_list car_names",
            "countries car_names cars_data",
            "car_makers car_names cars_data",
            "model_list cars_data"
        ],
        "align_scores": [
            0.9437993168830872,
            0.007511508651077747,
            0.00015876801626291126,
            0.00013757760461885482,
            0.000935849326197058,
            0.00016260967822745442,
            0.0004003646317869425,
            0.00012855914246756583
        ],
        "align_select": "select distinct car_names.mdl",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the different models for the cards produced after 1980?",
        "gold_select": "select distinct model_list.mdl",
        "select_candidates": [
            "select distinct model_list.mdl",
            "select distinct model_list.mdl, model_list.mdl_id",
            "select count(distinct model_list.mdl)",
            "select distinct model_list.mdl, t3.c3"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "model_list car_names cars_data",
        "table_candidates": [
            "model_list cars_data",
            "model_list car_names",
            "model_list"
        ],
        "align_scores": [
            0.915434718132019,
            0.00014172602095641196,
            0.0002875514910556376,
            6.885565380798653e-05,
            0.004702010657638311,
            7.996772910701111e-05,
            0.00038220445276238024,
            8.311211422551423e-05
        ],
        "align_select": "select distinct model_list.mdl",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many car makers are there in each continents? List the continent name and the count.",
        "gold_select": "select continents.cont, count(*)",
        "select_candidates": [
            "select continents.cont, count(*)",
            "select continents.cont, count(*), car_makers.cntry",
            "select continents.cont, count(*)",
            "select continents.cont., count(*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "continents countries car_makers",
        "table_candidates": [
            "continents car_makers",
            "continents countries car_makers"
        ],
        "align_scores": [
            0.8520179390907288,
            0.00020012829918414354,
            0.0005866566789336503,
            9.742093970999122e-05,
            0.8520179390907288,
            0.00020012829918414354,
            0.014163948595523834,
            0.00019064347725361586
        ],
        "align_select": "select continents.cont, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "What is the name of each continent and how many car makers are there in each one?",
        "gold_select": "select continents.cont, count(*)",
        "select_candidates": [
            "select continents.cont, count(*)",
            "select countries.cntry_name, count(*)",
            "select count(*), continents.cont",
            "select car_makers.Maker, continents.cont, count(*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "continents countries car_makers",
        "table_candidates": [
            "continents countries car_makers",
            "continents car_makers",
            "continents countries"
        ],
        "align_scores": [
            0.9581312537193298,
            0.00019056825840380043,
            0.3753963112831116,
            0.00026777954190038145,
            0.9828422665596008,
            0.00025023496709764004,
            0.04692114144563675,
            0.00010852972627617419
        ],
        "align_select": "select continents.cont, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "Which of the countries has the most car makers? List the country name.",
        "gold_select": "select countries.cntry_name",
        "select_candidates": [
            "select countries.cntry_name",
            "select countries.cntry_name, car_makers.cntry",
            "select countries.cntry_name, countries.cont",
            "select countries.cntry_name, continents.cont"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "countries car_makers",
        "table_candidates": [
            "countries car_makers"
        ],
        "align_scores": [
            0.9742993116378784,
            8.829912985675037e-05,
            0.0032817975152283907,
            8.288844401249662e-05,
            0.001998000545427203,
            6.895067053847015e-05,
            0.005729122087359428,
            7.982914394233376e-05
        ],
        "align_select": "select countries.cntry_name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the name of the country with the most car makers?",
        "gold_select": "select countries.cntry_name",
        "select_candidates": [
            "select countries.cntry_name",
            "select countries.cntry_name, car_makers.cntry",
            "select countries.cntry_name, countries.cont",
            "select countries.cntry_name, continents.cont"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "countries car_makers",
        "table_candidates": [
            "countries car_makers"
        ],
        "align_scores": [
            0.9781420826911926,
            7.878475298639387e-05,
            0.0032726076897233725,
            7.138115324778482e-05,
            0.0017160893185064197,
            6.323221168713644e-05,
            0.006733983289450407,
            7.577696669613943e-05
        ],
        "align_select": "select countries.cntry_name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the accelerate of the car make amc hornet sportabout (sw)?",
        "gold_select": "select cars_data.aclt",
        "select_candidates": [
            "select avg(cars_data.hp)",
            "select accel(cars_data.hp)",
            "select avg(cars_data.aclt)",
            "select max(cars_data.hp)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_names cars_data",
        "table_candidates": [
            "car_names cars_data",
            "car_makers car_names cars_data",
            "model_list car_names cars_data",
            "countries car_names cars_data",
            "continents car_names cars_data"
        ],
        "align_scores": [
            0.023152604699134827,
            6.414949893951416e-05,
            0.0015427632024511695,
            7.38478556741029e-05,
            0.08221317082643509,
            7.057691982481629e-05,
            0.2171759456396103,
            6.650810973951593e-05
        ],
        "align_select": "select avg(cars_data.hp)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How much does the car accelerate that makes amc hornet sportabout (sw)?",
        "gold_select": "select cars_data.aclt",
        "select_candidates": [
            "select avg(cars_data.hp)",
            "select accel(cars_data.hp)",
            "select cars_data.hp",
            "select avg(cars_data.aclt)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_names cars_data",
        "table_candidates": [
            "car_names cars_data",
            "car_makers car_names cars_data",
            "model_list car_names cars_data",
            "continents car_names cars_data",
            "countries car_names cars_data"
        ],
        "align_scores": [
            0.0033003701828420162,
            7.004060898907483e-05,
            0.002119238954037428,
            9.580915502738208e-05,
            0.5159643888473511,
            0.00015893099771346897,
            0.18161696195602417,
            7.342430035350844e-05
        ],
        "align_select": "select cars_data.hp",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many car makers are there in france?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), countries.cntry_id",
            "select count(*), countries.cntry_id, countries.cntry_name",
            "select count(*), countries.cntry_id, countries.cntry_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "countries car_makers",
        "table_candidates": [
            "countries car_makers"
        ],
        "align_scores": [
            0.9935194849967957,
            7.833474228391424e-05,
            0.0003016427217517048,
            7.620698306709528e-05,
            0.00021816321532242,
            5.8349993196316063e-05,
            0.00021816321532242,
            5.8349993196316063e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the number of makers of care in France?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), countries.cntry_id",
            "select count(*), countries.cntry_name",
            "select count(*), countries.cont"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "countries car_makers",
        "table_candidates": [
            "countries car_makers"
        ],
        "align_scores": [
            0.9940605759620667,
            0.0003651309525594115,
            0.0002251031983178109,
            0.0003013831446878612,
            0.00023831732687540352,
            0.0008954876102507114,
            0.00034575420431792736,
            0.0007019306067377329
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many car models are produced in the usa?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(distinct model_list.Maker)",
            "select count(*), countries.cntry_id",
            "select count(distinct model_list.mdl_id)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "countries car_makers model_list",
        "table_candidates": [
            "countries car_makers model_list",
            "countries car_makers",
            "countries car_makers model_list car_names"
        ],
        "align_scores": [
            0.9936060905456543,
            0.0034735859371721745,
            0.0072794752195477486,
            9.333878551842645e-05,
            0.0003308288869448006,
            0.0009899333817884326,
            0.006113720126450062,
            0.0001109724908019416
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the count of the car models produced in the United States?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), car_makers.Id",
            "select count(distinct model_list.Maker)",
            "select count(distinct model_list.mdl_id)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "countries car_makers model_list",
        "table_candidates": [
            "countries car_makers model_list",
            "countries car_makers",
            "countries car_makers model_list car_names",
            "continents countries car_makers model_list"
        ],
        "align_scores": [
            0.9917306303977966,
            0.03911377862095833,
            0.00023313562269322574,
            0.007470363285392523,
            0.002665997017174959,
            8.277020242530853e-05,
            0.0030925427563488483,
            8.842771057970822e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the smallest weight of the car produced with 8 cylinders on 1974?",
        "gold_select": "select min(cars_data.wt)",
        "select_candidates": [
            "select min(cars_data.wt)",
            "select min(cars_data.wt), cars_data.aclt",
            "select min(cars_data.wt), cars_data.Year",
            "select min(cars_data.wt), cars_data.Cylinders"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data",
            "car_names cars_data",
            "model_list cars_data",
            "car_makers cars_data"
        ],
        "align_scores": [
            0.9928991794586182,
            0.00010115424083778635,
            0.00012935782433487475,
            6.39416030026041e-05,
            0.00012923625763505697,
            6.055662379367277e-05,
            0.00016489367408212274,
            6.299580854829401e-05
        ],
        "align_select": "select min(cars_data.wt)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the minimum weight of the car with 8 cylinders produced in 1974?",
        "gold_select": "select min(cars_data.wt)",
        "select_candidates": [
            "select min(cars_data.wt)",
            "select min(cars_data.wt), cars_data.aclt",
            "select min(cars_data.wt), cars_data.Year",
            "select min(cars_data.wt), t5.dcars_data.aclt"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data",
            "car_names cars_data",
            "model_list cars_data",
            "car_makers cars_data"
        ],
        "align_scores": [
            0.9914637207984924,
            9.237883205059916e-05,
            0.00014793900481890887,
            6.44851170363836e-05,
            0.00013651480549015105,
            6.308777665253729e-05,
            0.00014575872046407312,
            7.354455010499805e-05
        ],
        "align_select": "select min(cars_data.wt)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are all the makers and models?",
        "gold_select": "select model_list.Maker, model_list.mdl",
        "select_candidates": [
            "select car_makers.Maker, model_list.mdl",
            "select model_list.Maker, model_list.mdl",
            "select car_makers.Maker, car_makers.FullName",
            "select car_makers.Maker, model_list.Maker"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "model_list",
        "table_candidates": [
            "car_makers model_list",
            "model_list car_makers",
            "countries model_list",
            "continents car_makers model_list",
            "countries car_makers model_list",
            "model_list car_makers model_list"
        ],
        "align_scores": [
            0.9932603240013123,
            0.00020758163009304553,
            0.9812466502189636,
            0.00019951270951423794,
            0.0006560288602486253,
            0.0001477254554629326,
            0.0006135835428722203,
            0.00011639529111562297
        ],
        "align_select": "select car_makers.Maker, model_list.mdl",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What are the makers and models?",
        "gold_select": "select model_list.Maker, model_list.mdl",
        "select_candidates": [
            "select car_makers.Maker, model_list.mdl",
            "select car_makers.Maker, car_makers.FullName",
            "select model_list.Maker, model_list.mdl",
            "select car_makers.Maker, model_list.Maker"
        ],
        "select_labels": [
            0.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "model_list",
        "table_candidates": [
            "car_makers model_list",
            "model_list car_makers",
            "continents car_makers model_list",
            "countries car_makers model_list",
            "countries model_list",
            "car_makers model_list car_names"
        ],
        "align_scores": [
            0.9934478402137756,
            0.00015111280663404614,
            0.0006077053840272129,
            0.00012943529873155057,
            0.982528030872345,
            0.00012737029464915395,
            0.00048179025179706514,
            0.00010444393410580233
        ],
        "align_select": "select car_makers.Maker, model_list.mdl",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What are the countries having at least one car maker? List name and id.",
        "gold_select": "select countries.cntry_name, countries.cntry_id",
        "select_candidates": [
            "select countries.cntry_name, countries.cntry_id",
            "select countries.cntry_name, car_makers.Id",
            "select distinct countries.cntry_name, countries.cntry_id",
            "select count(*), countries.cntry_name, car_makers.Id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "countries car_makers",
        "table_candidates": [
            "countries car_makers"
        ],
        "align_scores": [
            0.9352282285690308,
            0.9788345098495483,
            0.05873943492770195,
            0.7365346550941467,
            0.07967767864465714,
            0.0027102846652269363,
            0.000389517517760396,
            0.00040032589458860457
        ],
        "align_select": "select countries.cntry_name, countries.cntry_id",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What are the names and ids of all countries with at least one car maker?",
        "gold_select": "select countries.cntry_name, countries.cntry_id",
        "select_candidates": [
            "select countries.cntry_name, countries.cntry_id",
            "select distinct countries.cntry_name, countries.cntry_id",
            "select count(*), countries.cntry_name, countries.cntry_id",
            "select at least countries.cntry_name, countries.cntry_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "countries car_makers",
        "table_candidates": [
            "countries car_makers",
            "countries car_makers model_list",
            "countries car_makers car_names"
        ],
        "align_scores": [
            0.9622126221656799,
            0.9676914215087891,
            0.06380744278430939,
            0.002285004360601306,
            0.00036514431121759117,
            0.00037636960041709244,
            0.38756272196769714,
            0.010582802817225456
        ],
        "align_select": "select countries.cntry_name, countries.cntry_id",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What is the number of the cars with horsepower more than 150?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), cars_data.Id",
            "select count(*), t5.dcars_data.Id",
            "select count(*) (cars_data.Id)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data",
            "car_names cars_data"
        ],
        "align_scores": [
            0.9940716624259949,
            0.00013623700942844152,
            0.00023281310859601945,
            0.005770950578153133,
            0.0002170202787965536,
            0.0011751182610169053,
            0.0003293655172456056,
            0.0003563242789823562
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the number of cars with a horsepower greater than 150?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), cars_data.Id",
            "select count(*), t5.dcars_data.Id",
            "select count(*) (cars_data.Id)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data"
        ],
        "align_scores": [
            0.9917104840278625,
            0.0001299772848142311,
            0.00023115881776902825,
            0.0008899731910787523,
            0.00020766675879713148,
            0.00035195378586649895,
            0.00028922565979883075,
            0.0001320604933425784
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the average weight of cars each year?",
        "gold_select": "select avg(cars_data.wt), cars_data.Year",
        "select_candidates": [
            "select avg(cars_data.wt), cars_data.Year",
            "select cars_data.Year, avg(cars_data.wt)",
            "select an avg(cars_data.wt), cars_data.Year",
            "select avg(cars_data.aclt), cars_data.Year"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data"
        ],
        "align_scores": [
            0.9946485161781311,
            0.0001162353582913056,
            0.996329128742218,
            0.00010439992911415175,
            0.0002500122063793242,
            0.00012862916628364474,
            0.735490620136261,
            0.00012362530105747283
        ],
        "align_select": "select avg(cars_data.wt), cars_data.Year",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "What is the average weight and year for each year?",
        "gold_select": "select avg(cars_data.wt), cars_data.Year",
        "select_candidates": [
            "select avg(cars_data.wt), cars_data.Year",
            "select avg(cars_data.wt), avg(cars_data.Year), cars_data.Year",
            "select avg(cars_data.aclt), avg(cars_data.Year), cars_data.Year",
            "select avg(cars_data.wt), avg(cars_data.Year),"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data"
        ],
        "align_scores": [
            0.9635745286941528,
            0.0001328487414866686,
            0.0004744251200463623,
            6.701500387862325e-05,
            0.0003970050602219999,
            6.290749297477305e-05,
            0.000960037752520293,
            0.00013109178689774126
        ],
        "align_select": "select avg(cars_data.wt), cars_data.Year",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "Which countries in europe have at least 3 car manufacturers?",
        "gold_select": "select countries.cntry_name",
        "select_candidates": [
            "select countries.cntry_name",
            "select countries.cntry_name, continents.cont",
            "select countries.cntry_name, car_makers.cntry",
            "select countries.cntry_name, continents.ContId"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY-HAVING",
            "SELECT-FROM-WHERE-GROUP BY-HAVING-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "continents countries car_makers",
        "table_candidates": [
            "continents countries car_makers",
            "continents countries"
        ],
        "align_scores": [
            0.950795590877533,
            0.00010470331471879035,
            0.0013410323299467564,
            7.175638165790588e-05,
            0.0017761632334440947,
            7.484994421247393e-05,
            0.002184706972911954,
            9.670168947195634e-05
        ],
        "align_select": "select countries.cntry_name",
        "align_structure": "SELECT-FROM-WHERE-GROUP BY-HAVING"
    },
    {
        "question": "What are the names of all European countries with at least 3 manufacturers?",
        "gold_select": "select countries.cntry_name",
        "select_candidates": [
            "select countries.cntry_name",
            "select countries.cntry_name, t0.c2",
            "select countries.cntry_name, continents.cont",
            "select countries.cntry_name, continents.ContId"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY-HAVING",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "continents countries car_makers",
        "table_candidates": [
            "continents countries car_makers",
            "continents car_makers",
            "continents countries"
        ],
        "align_scores": [
            0.9750188589096069,
            0.00018683740927372128,
            0.00033166035427711904,
            0.00011955228546867147,
            0.0011101443087682128,
            0.000121889024740085,
            0.0008792977896519005,
            0.00015200214693322778
        ],
        "align_select": "select countries.cntry_name",
        "align_structure": "SELECT-FROM-WHERE-GROUP BY-HAVING"
    },
    {
        "question": "What is the maximum horsepower and the make of the car models with 3 cylinders?",
        "gold_select": "select cars_data.hp, car_names.Make",
        "select_candidates": [
            "select max(cars_data.hp), car_names.Make",
            "select max(cars_data.aclt), car_names.Make",
            "select max(cars_data.hp), cars_data.Cylinders",
            "select max(cars_data.hp), car_names.Make)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "car_names cars_data",
        "table_candidates": [
            "car_names cars_data",
            "model_list car_names cars_data",
            "car_makers cars_data",
            "countries car_names cars_data",
            "model_list cars_data",
            "continents car_names cars_data",
            "countries cars_data"
        ],
        "align_scores": [
            0.9939397573471069,
            0.00016412316472269595,
            0.949367344379425,
            0.0002009944146266207,
            0.0005936560919508338,
            8.830443402985111e-05,
            0.0012967853108420968,
            0.000110813562059775
        ],
        "align_select": "select max(cars_data.hp), car_names.Make",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the largest amount of horsepower for the models with 3 cylinders and what make is it?",
        "gold_select": "select cars_data.hp, car_names.Make",
        "select_candidates": [
            "select max(cars_data.hp), car_names.Make",
            "select car_names.Make, max(cars_data.hp)",
            "select min(cars_data.hp), car_names.Make",
            "select max(cars_data.hp), car_names.mdl"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_names cars_data",
        "table_candidates": [
            "car_names cars_data",
            "model_list car_names cars_data",
            "model_list cars_data",
            "cars_data",
            "car_makers cars_data",
            "countries car_names cars_data",
            "continents car_names cars_data"
        ],
        "align_scores": [
            0.0005004989798180759,
            8.525669545633718e-05,
            0.0019705898594111204,
            9.546851651975885e-05,
            0.00028414197731763124,
            0.000201480055693537,
            0.00033306595287285745,
            8.654197154100984e-05
        ],
        "align_select": "select max(cars_data.hp), car_names.Make",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT"
    },
    {
        "question": "Which model saves the most gasoline? That is to say, have the maximum miles per gallon.",
        "gold_select": "select car_names.mdl",
        "select_candidates": [
            "select model_list.mdl",
            "select car_names.mdl",
            "select car_names.Make",
            "select model_list.Maker"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_names cars_data",
        "table_candidates": [
            "model_list cars_data",
            "cars_data",
            "car_names cars_data",
            "car_makers model_list cars_data",
            "countries model_list cars_data",
            "car_makers cars_data",
            "car_makers car_names cars_data",
            "countries car_names cars_data"
        ],
        "align_scores": [
            0.6870261430740356,
            0.9291313886642456,
            0.5927647948265076,
            0.8093542456626892,
            0.9693789482116699,
            0.9876393675804138,
            0.004639592953026295,
            0.0074116140604019165
        ],
        "align_select": "select car_names.Make",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the car model with the highest mpg?",
        "gold_select": "select car_names.mdl",
        "select_candidates": [
            "select car_names.mdl",
            "select car_names.Make",
            "select car_names.MakeId, car_names.mdl",
            "select car_names.mdl, car_names.Make"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_names cars_data",
        "table_candidates": [
            "car_names cars_data",
            "model_list car_names cars_data",
            "car_makers car_names cars_data",
            "car_makers model_list car_names cars_data",
            "countries car_names cars_data",
            "continents car_names cars_data"
        ],
        "align_scores": [
            0.7726123929023743,
            9.793134813662618e-05,
            0.9860442876815796,
            7.346366328420117e-05,
            0.0008594478131271899,
            6.722045509377494e-05,
            0.0008120950078591704,
            6.41353108221665e-05
        ],
        "align_select": "select car_names.Make",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What is the average horsepower of the cars before 1980?",
        "gold_select": "select avg(cars_data.hp)",
        "select_candidates": [
            "select avg(cars_data.hp)",
            "select an avg(cars_data.hp)",
            "select avg(avg(cars_data.hp)",
            "select  avg(cars_data.hp)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data",
            "model_list cars_data",
            "car_names cars_data",
            "car_makers cars_data"
        ],
        "align_scores": [
            0.9962714910507202,
            0.00012884644092991948,
            0.00036250086850486696,
            0.00011982048454228789,
            0.000420260796090588,
            0.0001101017405744642,
            0.9962714910507202,
            0.00012884644092991948
        ],
        "align_select": "select avg(cars_data.hp)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the average horsepower for all cars produced before 1980?",
        "gold_select": "select avg(cars_data.hp)",
        "select_candidates": [
            "select avg(cars_data.hp)",
            "select an avg(cars_data.hp)",
            "select avg(avg(cars_data.hp)",
            "select  avg(cars_data.hp)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data",
            "car_names cars_data",
            "model_list cars_data",
            "car_makers cars_data"
        ],
        "align_scores": [
            0.9961491823196411,
            0.00011111183266621083,
            0.00036923724110238254,
            0.00010818534065037966,
            0.0004917371552437544,
            0.00010067597031593323,
            0.9961491823196411,
            0.00011111183266621083
        ],
        "align_select": "select avg(cars_data.hp)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the average edispl of the cars of model volvo?",
        "gold_select": "select avg(cars_data.Edispl)",
        "select_candidates": [
            "select avg(cars_data.Edispl)",
            "select an avg(cars_data.Edispl)",
            "select avg(avg(cars_data.Edispl)",
            "select avg(cars_data.Edispl), car_names.mdl"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_names cars_data",
        "table_candidates": [
            "model_list car_names cars_data",
            "car_makers model_list car_names cars_data",
            "continents model_list car_names cars_data",
            "car_names cars_data",
            "countries model_list car_names cars_data",
            "car_makers model_list cars_data",
            "countries car_names cars_data"
        ],
        "align_scores": [
            0.9964190721511841,
            0.0001096983760362491,
            0.00039060739800333977,
            9.47769804042764e-05,
            0.0004909514682367444,
            8.425603300565854e-05,
            0.00013026637316215783,
            0.000174776665517129
        ],
        "align_select": "select avg(cars_data.Edispl)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the average edispl for all volvos?",
        "gold_select": "select avg(cars_data.Edispl)",
        "select_candidates": [
            "select avg(cars_data.Edispl)",
            "select an avg(cars_data.Edispl)",
            "select avg(cars_data.Edispl), car_names.mdl",
            "select  avg(cars_data.Edispl)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_names cars_data",
        "table_candidates": [
            "cars_data",
            "car_names cars_data",
            "model_list cars_data",
            "car_makers car_names cars_data",
            "car_makers cars_data",
            "model_list car_names cars_data",
            "countries car_names cars_data",
            "countries cars_data"
        ],
        "align_scores": [
            0.9966610670089722,
            0.0001598495728103444,
            0.00037628886639140546,
            9.487797797191888e-05,
            0.00015948190412018448,
            0.0002964510058518499,
            0.9966610670089722,
            0.0001598495728103444
        ],
        "align_select": "select avg(cars_data.Edispl)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the maximum accelerate for different number of cylinders?",
        "gold_select": "select max(cars_data.aclt), cars_data.Cylinders",
        "select_candidates": [
            "select max(cars_data.hp), cars_data.Cylinders",
            "select cars_data.Cylinders, max(cars_data.hp)",
            "select max(cars_data.aclt), cars_data.Cylinders",
            "select maximum(cars_data.hp), cars_data.Cylinders"
        ],
        "select_labels": [
            0.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data"
        ],
        "align_scores": [
            0.9896253943443298,
            0.00010534394095884636,
            0.9932026863098145,
            0.00011764225200749934,
            0.9868589639663696,
            0.0001183368731290102,
            0.0015473461244255304,
            8.539502596249804e-05
        ],
        "align_select": "select max(cars_data.hp), cars_data.Cylinders",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "What is the maximum accelerate for all the different cylinders?",
        "gold_select": "select max(cars_data.aclt), cars_data.Cylinders",
        "select_candidates": [
            "select max(cars_data.hp), cars_data.Cylinders",
            "select cars_data.Cylinders, max(cars_data.hp)",
            "select max(cars_data.aclt), cars_data.Cylinders",
            "select maximum(cars_data.hp), cars_data.Cylinders"
        ],
        "select_labels": [
            0.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data"
        ],
        "align_scores": [
            0.9827392101287842,
            0.00013581082748714834,
            0.9891036748886108,
            0.00015312549658119678,
            0.9818603992462158,
            0.00013683839642908424,
            0.0016219915123656392,
            0.0001002877252176404
        ],
        "align_select": "select max(cars_data.hp), cars_data.Cylinders",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "Which model has the most version(make) of cars?",
        "gold_select": "select car_names.mdl",
        "select_candidates": [
            "select model_list.mdl",
            "select model_list.mdl, car_names.Make",
            "select model_list.mdl_id, model_list.mdl",
            "select model_list.Maker, car_names.Make"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-UNION-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_names",
        "table_candidates": [
            "model_list car_names",
            "car_makers model_list car_names",
            "continents model_list car_names",
            "countries model_list car_names",
            "countries car_names",
            "car_makers car_names"
        ],
        "align_scores": [
            0.4238611161708832,
            0.0007618243689648807,
            0.9266159534454346,
            0.00017412992019671947,
            0.004487085156142712,
            0.00024093121464829892,
            0.00028952417778782547,
            7.769346120767295e-05
        ],
        "align_select": "select model_list.mdl, car_names.Make",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What model has the most different versions?",
        "gold_select": "select car_names.mdl",
        "select_candidates": [
            "select model_list.Maker",
            "select model_list.mdl",
            "select model_list.mdl_id",
            "select model_list.Maker, model_list.mdl"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_names",
        "table_candidates": [
            "model_list",
            "car_makers model_list",
            "model_list car_names",
            "countries model_list"
        ],
        "align_scores": [
            0.009599156677722931,
            7.83097930252552e-05,
            0.9702916741371155,
            0.00010150721936952323,
            0.10950922220945358,
            0.00011780883505707607,
            0.0006516581634059548,
            9.097799920709804e-05
        ],
        "align_select": "select model_list.mdl",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Which distinctive models are produced by maker with the full name General Motors or weighing more than 3500?",
        "gold_select": "select distinct model_list.mdl",
        "select_candidates": [
            "select distinct model_list.mdl",
            "select distinct model_list.Maker",
            "select distinct model_list.mdl_id",
            "select distinct model_list.mdl, model_list.Maker"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_makers model_list car_names cars_data",
        "table_candidates": [
            "car_makers model_list cars_data",
            "car_makers model_list car_names",
            "countries car_makers model_list cars_data",
            "continents car_makers model_list cars_data",
            "countries car_makers model_list car_names",
            "continents car_makers model_list car_names"
        ],
        "align_scores": [
            0.6286010146141052,
            0.01057265792042017,
            0.7278838157653809,
            0.0036757923662662506,
            0.42679858207702637,
            0.050881098955869675,
            0.00037528222310356796,
            0.00011684533819789067
        ],
        "align_select": "select distinct model_list.mdl",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the different models created by either the car maker General Motors or weighed more than 3500?",
        "gold_select": "select distinct model_list.mdl",
        "select_candidates": [
            "select distinct model_list.mdl",
            "select count(distinct model_list.mdl)",
            "select distinct model_list.mdl_id",
            "select distinct model_list.mdl, model_list.Maker"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_makers model_list car_names cars_data",
        "table_candidates": [
            "car_makers model_list cars_data",
            "car_makers model_list car_names",
            "car_makers model_list car_names cars_data",
            "countries car_makers model_list cars_data",
            "continents car_makers model_list cars_data"
        ],
        "align_scores": [
            0.49367302656173706,
            0.00040063727647066116,
            0.0021842706482857466,
            9.323381527792662e-05,
            0.07073506712913513,
            0.000806516211014241,
            0.0002430253807688132,
            8.270163380075246e-05
        ],
        "align_select": "select distinct model_list.mdl",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "In which years cars were produced weighing no less than 3000 and no more than 4000?",
        "gold_select": "select distinct cars_data.Year",
        "select_candidates": [
            "select cars_data.Year",
            "select distinct cars_data.Year",
            "select specific cars_data.Year",
            "select cars_data.Year"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data",
            "model_list cars_data",
            "car_names cars_data",
            "car_makers cars_data"
        ],
        "align_scores": [
            0.9773098230361938,
            0.00044615499791689217,
            0.14043419063091278,
            0.0002846302813850343,
            0.002285911003127694,
            0.00014829053543508053,
            0.9773098230361938,
            0.00044615499791689217
        ],
        "align_select": "select cars_data.Year",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the different years in which there were cars produced that weighed less than 4000 and also cars that weighted more than 3000?",
        "gold_select": "select distinct cars_data.Year",
        "select_candidates": [
            "select distinct cars_data.Year",
            "select cars_data.Year",
            "select distinct cars_data.Year denoted by cars_data.aclt, cars_data.Year",
            "select distinct cars_data.Year denoted by cars_data.hp, cars_data.Edispl"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data",
            "model_list cars_data"
        ],
        "align_scores": [
            0.004785803146660328,
            0.015139421448111534,
            0.8248753547668457,
            0.8884948492050171,
            0.0001440017658751458,
            0.00013493614096660167,
            0.0001425995578756556,
            0.0001797105505829677
        ],
        "align_select": "select cars_data.Year",
        "align_structure": "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
    },
    {
        "question": "What is the horsepower of the car with the largest accelerate?",
        "gold_select": "select cars_data.hp",
        "select_candidates": [
            "select cars_data.hp",
            "select cars_data.Id, cars_data.hp",
            "select cars_data.hp, cars_data.aclt",
            "select cars_data.Id, cars_data.Cylinders"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data",
            "car_names cars_data",
            "model_list cars_data",
            "car_makers cars_data"
        ],
        "align_scores": [
            0.97031569480896,
            7.928571722004563e-05,
            0.0002384837280260399,
            6.963776104385033e-05,
            0.0006946562207303941,
            6.992581620579585e-05,
            0.00020487325673457235,
            6.665013643214479e-05
        ],
        "align_select": "select cars_data.hp",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What is the horsepower of the car with the greatest accelerate?",
        "gold_select": "select cars_data.hp",
        "select_candidates": [
            "select cars_data.hp",
            "select cars_data.Id, cars_data.hp",
            "select cars_data.hp, cars_data.aclt",
            "select cars_data.Id, cars_data.Cylinders"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data",
            "car_names cars_data",
            "model_list cars_data",
            "car_makers cars_data"
        ],
        "align_scores": [
            0.9828212261199951,
            8.148916822392493e-05,
            0.0002659593301359564,
            7.050642307149246e-05,
            0.0007240874110721052,
            7.028275285847485e-05,
            0.00021720866789110005,
            6.392550858436152e-05
        ],
        "align_select": "select cars_data.hp",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "For model volvo, how many cylinders does the car with the least accelerate have?",
        "gold_select": "select cars_data.Cylinders",
        "select_candidates": [
            "select cars_data.Cylinders",
            "select cars_data.MPG, cars_data.Cylinders",
            "select sum(cars_data.Cylinders)",
            "select cars_data.Id, cars_data.Cylinders"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_names cars_data",
        "table_candidates": [
            "model_list cars_data",
            "model_list car_names cars_data",
            "countries model_list cars_data",
            "car_names cars_data",
            "continents model_list cars_data",
            "car_makers cars_data",
            "continents model_list car_names cars_data"
        ],
        "align_scores": [
            0.9881949424743652,
            7.261698192451149e-05,
            0.0002636421995703131,
            6.725905404891819e-05,
            0.12870116531848907,
            7.12019536877051e-05,
            0.00023278470325749367,
            8.231939864344895e-05
        ],
        "align_select": "select cars_data.Cylinders",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT"
    },
    {
        "question": "For a volvo model, how many cylinders does the version with least accelerate have?",
        "gold_select": "select cars_data.Cylinders",
        "select_candidates": [
            "select cars_data.Cylinders",
            "select cars_data.Cylinders, cars_data.Edispl",
            "select cars_data.Id, cars_data.Cylinders",
            "select cars_data.Cylinders, model_list.Maker"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_names cars_data",
        "table_candidates": [
            "model_list cars_data",
            "countries model_list cars_data",
            "continents model_list cars_data",
            "car_names cars_data",
            "car_makers cars_data",
            "cars_data"
        ],
        "align_scores": [
            0.9846922159194946,
            9.907882486004382e-05,
            0.0004979270161129534,
            6.938281876500696e-05,
            0.00032931152964010835,
            8.974264346761629e-05,
            0.00028785434551537037,
            7.222430576803163e-05
        ],
        "align_select": "select cars_data.Cylinders",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT"
    },
    {
        "question": "How many cars have a larger accelerate than the car with the largest horsepower?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), cars_data.Id",
            "select count(distinct cars_data.Id)",
            "select count(*), cars_data.MPG"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data",
            "car_names cars_data",
            "model_list cars_data",
            "car_makers cars_data",
            "countries cars_data",
            "cars_data car_names"
        ],
        "align_scores": [
            0.9621860384941101,
            0.0013478088658303022,
            0.000418550189351663,
            0.00016310707724187523,
            0.0012011600192636251,
            7.569095760118216e-05,
            0.00036065877065993845,
            0.00020427403796929866
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the number of cars with a greater accelerate than the one with the most horsepower?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), cars_data.Id",
            "select count(*), cars_data.MPG",
            "select count(*), cars_data.hp"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data",
            "car_names cars_data",
            "model_list cars_data",
            "car_makers cars_data",
            "countries cars_data",
            "cars_data car_names"
        ],
        "align_scores": [
            0.9737866520881653,
            0.0005758209154009819,
            0.0004231985367368907,
            9.957162546925247e-05,
            0.0002871525939553976,
            0.00010203068086411804,
            0.0003294066700618714,
            0.00017238588770851493
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many countries has more than 2 car makers?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), countries.cntry_name",
            "select count(*), countries.cntry_name, countries.cont",
            "select count(*), countries.cntry_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "countries car_makers",
        "table_candidates": [
            "countries car_makers",
            "countries car_makers model_list",
            "countries car_makers car_names"
        ],
        "align_scores": [
            0.8212433457374573,
            0.012550869956612587,
            0.0008041713736020029,
            0.040146004408597946,
            0.0002163475874112919,
            0.0002175771805923432,
            0.001345091499388218,
            0.011238816194236279
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What is the number of countries with more than 2 car makers?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), countries.cntry_name",
            "select count(*), countries.cntry_name, countries.cont",
            "select count(*), countries.cntry_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "countries car_makers",
        "table_candidates": [
            "countries car_makers",
            "countries car_makers model_list"
        ],
        "align_scores": [
            0.76219242811203,
            0.004517059773206711,
            0.000431017397204414,
            0.012052081525325775,
            0.00017819891218096018,
            0.00018001221178565174,
            0.0006223687087185681,
            0.004539927467703819
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "For the cars with 4 cylinders, which model has the largest horsepower?",
        "gold_select": "select car_names.mdl",
        "select_candidates": [
            "select car_names.mdl",
            "select car_names.mdl, cars_data.Cylinders",
            "select car_names.mdl, car_names.Make",
            "select car_names.mdl, cars_data.Id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-ORDER BY-LIMIT-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_names cars_data",
        "table_candidates": [
            "cars_data",
            "car_names cars_data",
            "model_list car_names cars_data",
            "countries car_names cars_data",
            "car_makers cars_data",
            "countries cars_data",
            "model_list cars_data"
        ],
        "align_scores": [
            0.393522173166275,
            0.00019266862364020199,
            0.0006900948355905712,
            6.549942190758884e-05,
            0.0005525731830857694,
            7.363099575741217e-05,
            0.0003531989350449294,
            8.395408076466992e-05
        ],
        "align_select": "select car_names.mdl",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT"
    },
    {
        "question": "For all of the 4 cylinder cars, which model has the most horsepower?",
        "gold_select": "select car_names.mdl",
        "select_candidates": [
            "select car_names.mdl",
            "select car_names.mdl, cars_data.Cylinders",
            "select car_names.MakeId, car_names.mdl",
            "select car_names.mdl, car_names.Make"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-ORDER BY-LIMIT-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_names cars_data",
        "table_candidates": [
            "car_names cars_data",
            "cars_data",
            "model_list car_names cars_data",
            "countries car_names cars_data",
            "car_makers cars_data",
            "countries cars_data",
            "model_list cars_data"
        ],
        "align_scores": [
            0.3432149291038513,
            0.0002049091854132712,
            0.0007319970754906535,
            6.945073982933536e-05,
            0.00045185585622675717,
            7.363408076344058e-05,
            0.000444472098024562,
            6.878373096697032e-05
        ],
        "align_select": "select car_names.mdl",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT"
    },
    {
        "question": "Among the cars with more than lowest horsepower, which ones do not have more than 3 cylinders? List the car makeid and make name.",
        "gold_select": "select car_names.MakeId, car_names.Make",
        "select_candidates": [
            "select car_names.MakeId, car_names.Make",
            "select car_makers.Id, car_names.Make",
            "select car_names.MakeId, car_names.Make",
            "select car_names.mdl, car_names.Make"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_names cars_data",
        "table_candidates": [
            "car_names cars_data",
            "model_list car_names cars_data",
            "car_makers car_names cars_data",
            "countries car_names cars_data",
            "car_makers cars_data",
            "model_list cars_data"
        ],
        "align_scores": [
            0.9007434248924255,
            0.5555253028869629,
            0.7111538648605347,
            0.5436035394668579,
            0.9007434248924255,
            0.5555253028869629,
            0.0013331014197319746,
            0.0007872739224694669
        ],
        "align_select": "select car_names.MakeId, car_names.Make",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Among the cars that do not have the minimum horsepower, what are the make ids and names of all those with less than 4 cylinders?",
        "gold_select": "select car_names.MakeId, car_names.Make",
        "select_candidates": [
            "select car_names.MakeId, car_names.Make",
            "select car_names.Make, car_names.MakeId",
            "select car_names.mdl, car_names.Make",
            "select car_makers.Id, car_names.Make"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_names cars_data",
        "table_candidates": [
            "car_names cars_data",
            "model_list car_names cars_data",
            "car_makers car_names cars_data",
            "countries car_names cars_data",
            "continents car_names cars_data",
            "car_makers cars_data"
        ],
        "align_scores": [
            0.9219397306442261,
            0.0016255590599030256,
            0.8170405626296997,
            0.0022956000175327063,
            0.4429123103618622,
            0.0007006954401731491,
            0.5613921880722046,
            0.003203081665560603
        ],
        "align_select": "select car_names.MakeId, car_names.Make",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which models are lighter than 3500 but not built by the 'Ford Motor Company'?",
        "gold_select": "select distinct model_list.mdl",
        "select_candidates": [
            "select model_list.mdl_id",
            "select model_list.Maker",
            "select t3.c3, car_makers.FullName",
            "select car_makers.Maker, car_makers.FullName"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "car_makers model_list car_names cars_data",
        "table_candidates": [
            "car_makers model_list car_names",
            "car_makers model_list",
            "car_makers model_list cars_data",
            "countries car_makers model_list car_names"
        ],
        "align_scores": [
            0.3182898163795471,
            0.16167889535427094,
            0.9578632116317749,
            0.8697727918624878,
            0.00028369316714815795,
            0.00022414948034565896,
            0.0002794498286675662,
            0.0002504316216800362
        ],
        "align_select": "select model_list.Maker",
        "align_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the different models wthat are lighter than 3500 but were not built by the Ford Motor Company?",
        "gold_select": "select distinct model_list.mdl",
        "select_candidates": [
            "select distinct model_list.mdl_id",
            "select distinct car_names.MakeId",
            "select distinct car_makers.Maker, car_makers.FullName",
            "select distinct model_list.mdl_id, car_makers.FullName"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "car_makers model_list car_names cars_data",
        "table_candidates": [
            "car_makers model_list car_names",
            "car_makers model_list cars_data",
            "countries car_makers model_list car_names",
            "continents car_makers model_list car_names",
            "car_makers model_list"
        ],
        "align_scores": [
            0.1723286509513855,
            0.1723286509513855,
            0.5588410496711731,
            0.5588410496711731,
            0.00029600507696159184,
            0.00029600507696159184,
            0.0009051506640389562,
            0.0009051506640389562
        ],
        "align_select": "select distinct car_names.MakeId",
        "align_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the name of the countries where there is not a single car maker?",
        "gold_select": "select countries.cntry_name",
        "select_candidates": [
            "select countries.cntry_name",
            "select countries.cntry_name, countries.cont",
            "select countries.cntry_name, continents.cont",
            "select countries.cntry_name, t0.c2"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "countries car_makers",
        "table_candidates": [
            "countries",
            "countries car_makers",
            "countries car_makers model_list"
        ],
        "align_scores": [
            0.6853746175765991,
            0.9073481559753418,
            0.0005227663787081838,
            0.0007737856358289719,
            0.0016838761512190104,
            0.002412591828033328,
            0.0006442349404096603,
            0.00039544509490951896
        ],
        "align_select": "select countries.cntry_name",
        "align_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM"
    },
    {
        "question": "What are the names of the countries with no car makers?",
        "gold_select": "select countries.cntry_name",
        "select_candidates": [
            "select countries.cntry_name",
            "select countries.cntry_name, continents.cont",
            "select countries.cntry_name, countries.cont",
            "select countries.cntry_name, t0.c2"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "countries car_makers",
        "table_candidates": [
            "countries",
            "countries car_makers"
        ],
        "align_scores": [
            0.6247102618217468,
            0.9387193322181702,
            0.0009387393365614116,
            0.0020197636913508177,
            0.00033379485830664635,
            0.0005788308335468173,
            0.0006647544796578586,
            0.00040945736691355705
        ],
        "align_select": "select countries.cntry_name",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM"
    },
    {
        "question": "Which are the car makers which produce at least 2 models and more than 3 car makers? List the id and the maker.",
        "gold_select": "select car_makers.Id, car_makers.Maker",
        "select_candidates": [
            "select car_makers.Id, car_makers.Maker",
            "select model_list.mdl_id, car_makers.Maker",
            "select t2, car_makers.Id, car_makers.Maker",
            "select car_makers.Id, car_makers.Maker, car_makers.FullName"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING-INTERSECT-SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING-INTERSECT-SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_makers model_list car_names",
        "table_candidates": [
            "car_makers model_list",
            "car_makers model_list car_names"
        ],
        "align_scores": [
            0.03181135281920433,
            0.009719659574329853,
            0.027025504037737846,
            0.011421880684792995,
            0.00014952541096135974,
            0.00012067450006725267,
            0.0003534596471581608,
            0.00025766840553842485
        ],
        "align_select": "select car_makers.Id, car_makers.Maker",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the ids and makers of all car makers that produce at least 2 models and make more than 3 cars?",
        "gold_select": "select car_makers.Id, car_makers.Maker",
        "select_candidates": [
            "select car_makers.Id, car_makers.Maker",
            "select model_list.mdl_id, car_makers.Maker",
            "select t2, car_makers.Id, car_makers.Maker",
            "select car_makers.Id, car_makers.Maker, car_makers.FullName"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING-INTERSECT-SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING-INTERSECT-SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_makers model_list car_names",
        "table_candidates": [
            "car_makers model_list car_names",
            "countries car_makers model_list car_names",
            "continents car_makers model_list car_names",
            "countries model_list car_names",
            "car_makers model_list"
        ],
        "align_scores": [
            0.8882565498352051,
            0.09909139573574066,
            0.5232802033424377,
            0.08071225136518478,
            0.00018761683895718306,
            0.00014329880650620908,
            0.0007778102299198508,
            0.0004336608690209687
        ],
        "align_select": "select car_makers.Id, car_makers.Maker",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the id and names of the countries which have more than 3 car makers or produce the 'fiat' model?",
        "gold_select": "select countries.cntry_id, countries.cntry_name",
        "select_candidates": [
            "select countries.cntry_id, countries.cntry_name",
            "select car_names.mdl, countries.cntry_id, countries.cntry_name",
            "select countries.cntry_id, countries.cntry_name, countries.cont",
            "select t1, countries.cntry_id, countries.cntry_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "countries car_makers model_list",
        "table_candidates": [
            "countries car_makers model_list car_names",
            "countries car_makers model_list",
            "countries model_list car_names"
        ],
        "align_scores": [
            0.9908851981163025,
            0.10657735168933868,
            0.00040448192157782614,
            0.00022173370234668255,
            0.00030450295889750123,
            0.00020074179337825626,
            0.0005622499156743288,
            0.00025190916494466364
        ],
        "align_select": "select countries.cntry_id, countries.cntry_name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the ids and names of all countries that either have more than 3 car makers or produce fiat model?",
        "gold_select": "select countries.cntry_id, countries.cntry_name",
        "select_candidates": [
            "select countries.cntry_id, countries.cntry_name",
            "select t1, countries.cntry_id, countries.cntry_name",
            "select countries.cntry_id, countries.cntry_name, countries.cont",
            "select countries.cntry_name, countries.cntry_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "countries car_makers model_list",
        "table_candidates": [
            "countries car_makers model_list",
            "countries car_makers model_list car_names",
            "countries model_list car_names"
        ],
        "align_scores": [
            0.9842922687530518,
            0.9891666769981384,
            0.0003667632699944079,
            0.000552963581867516,
            0.0002922584244515747,
            0.00036916686804033816,
            0.9843116402626038,
            0.9894826412200928
        ],
        "align_select": "select countries.cntry_id, countries.cntry_name",
        "align_structure": "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
    },
    {
        "question": "How many countries does each continent have? List the continent id, continent name and the number of countries.",
        "gold_select": "select continents.ContId, continents.cont, count(*)",
        "select_candidates": [
            "select countries.cntry_id, countries.Continent, count(*)",
            "select continents.ContId, countries.Continent, count(*)",
            "select countries.cntry_name, countries.Continent, count(*)",
            "select countries.Continent, countries.cntry_name, count(*)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "continents countries",
        "table_candidates": [
            "continents countries"
        ],
        "align_scores": [
            0.0027546409983187914,
            0.00022771455405745655,
            0.9904407262802124,
            0.0003237591590732336,
            0.002118264092132449,
            0.00017991900676861405,
            0.0026575447991490364,
            0.00018167671805713326
        ],
        "align_select": "select continents.ContId, countries.Continent, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "For each continent, list its id, name, and how many countries it has?",
        "gold_select": "select continents.ContId, continents.cont, count(*)",
        "select_candidates": [
            "select countries.Continent, countries.cntry_name, count(*)",
            "select continents.ContId, countries.Continent, count(*)",
            "select continents.ContId, countries.cntry_name, count(*)",
            "select countries.Continent, countries.cntry_name, count(*)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "continents countries",
        "table_candidates": [
            "continents countries"
        ],
        "align_scores": [
            0.06272299587726593,
            0.00020278578449506313,
            0.9805383086204529,
            0.0002902953128796071,
            0.014235937036573887,
            0.00022266015002969652,
            0.06272299587726593,
            0.00020278578449506313
        ],
        "align_select": "select continents.ContId, countries.Continent, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "Which model of the car has the minimum horsepower?",
        "gold_select": "select car_names.mdl",
        "select_candidates": [
            "select car_names.mdl",
            "select car_names.Make",
            "select car_names.mdl, car_names.Make",
            "select car_names.MakeId, car_names.mdl"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_names cars_data",
        "table_candidates": [
            "car_names cars_data",
            "model_list car_names cars_data",
            "car_makers car_names cars_data",
            "countries car_names cars_data",
            "continents car_names cars_data"
        ],
        "align_scores": [
            0.5057975053787231,
            7.997947977855802e-05,
            0.9645447134971619,
            6.473526445915923e-05,
            0.000847919553052634,
            5.670498649124056e-05,
            0.0006814203807152808,
            6.028150164638646e-05
        ],
        "align_select": "select car_names.Make",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What is the model of the car with the smallest amount of horsepower?",
        "gold_select": "select car_names.mdl",
        "select_candidates": [
            "select car_names.mdl",
            "select car_names.Make",
            "select model_list.mdl",
            "select car_names.mdl, car_names.Make"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_names cars_data",
        "table_candidates": [
            "model_list car_names cars_data",
            "car_names cars_data",
            "model_list cars_data",
            "car_makers car_names cars_data",
            "car_makers model_list cars_data",
            "countries car_names cars_data",
            "continents car_names cars_data",
            "car_makers cars_data"
        ],
        "align_scores": [
            0.7674756050109863,
            8.170220826286823e-05,
            0.9637528657913208,
            8.05775125627406e-05,
            0.7714415788650513,
            8.475929644191638e-05,
            0.0005337248439900577,
            6.256732012843713e-05
        ],
        "align_select": "select car_names.mdl",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Find the model of the car whose weight is below the average weight.",
        "gold_select": "select car_names.mdl",
        "select_candidates": [
            "select car_names.mdl",
            "select model_list.mdl",
            "select car_names.Make",
            "select car_names.mdl, car_names.Make"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_names cars_data",
        "table_candidates": [
            "model_list cars_data",
            "model_list car_names cars_data",
            "car_names cars_data",
            "car_makers model_list cars_data",
            "countries model_list cars_data",
            "countries car_names cars_data",
            "continents model_list cars_data"
        ],
        "align_scores": [
            0.7766885757446289,
            8.481095574097708e-05,
            0.26146143674850464,
            0.00010077953629661351,
            0.8596430420875549,
            7.755503611406311e-05,
            0.00023347018577624112,
            6.828181358287111e-05
        ],
        "align_select": "select car_names.mdl",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the model for the car with a weight smaller than the average?",
        "gold_select": "select car_names.mdl",
        "select_candidates": [
            "select model_list.mdl",
            "select car_names.Make",
            "select model_list.mdl, cars_data.Id",
            "select model_list.mdl, car_names.mdl"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_names cars_data",
        "table_candidates": [
            "model_list cars_data",
            "cars_data",
            "cars_data model_list car_names",
            "car_names cars_data",
            "cars_data model_list car_names cars_data",
            "car_makers cars_data",
            "car_makers model_list cars_data",
            "cars_data model_list"
        ],
        "align_scores": [
            0.7466558218002319,
            0.0001174420613097027,
            0.9849788546562195,
            0.00010148477304028347,
            0.00021646395907737315,
            8.170860382961109e-05,
            0.00021396383817773312,
            7.034155714791268e-05
        ],
        "align_select": "select car_names.Make",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the name of the makers that produced some cars in the year of 1970?",
        "gold_select": "select distinct car_makers.Maker",
        "select_candidates": [
            "select car_makers.Maker, car_makers.FullName",
            "select car_makers.FullName, car_makers.Maker",
            "select car_makers.FullName",
            "select distinct car_makers.FullName, car_makers.Maker"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_makers model_list car_names cars_data",
        "table_candidates": [
            "car_makers car_names cars_data",
            "car_makers model_list car_names cars_data",
            "continents car_makers car_names cars_data",
            "car_makers car_names",
            "car_makers cars_data"
        ],
        "align_scores": [
            0.0003570220433175564,
            7.233390351757407e-05,
            0.0003991229459643364,
            7.143658876884729e-05,
            0.7215805649757385,
            0.0002875046629924327,
            0.000413354515330866,
            6.483832112280652e-05
        ],
        "align_select": "select car_makers.FullName",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the name of the different car makers who produced a car in 1970?",
        "gold_select": "select distinct car_makers.Maker",
        "select_candidates": [
            "select distinct car_makers.Maker, car_makers.FullName",
            "select distinct car_makers.FullName, car_makers.Maker",
            "select distinct car_makers.FullName",
            "select distinct car_makers.Maker"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_makers model_list car_names cars_data",
        "table_candidates": [
            "car_makers car_names",
            "car_makers car_names cars_data",
            "car_makers cars_data",
            "continents car_makers car_names"
        ],
        "align_scores": [
            0.0005942312418483198,
            7.654076762264594e-05,
            0.0004664957523345947,
            7.654025102965534e-05,
            0.9575826525688171,
            0.00029225728940218687,
            0.990705668926239,
            0.000356165983248502
        ],
        "align_select": "select distinct car_makers.Maker",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which distinct car models are the produced after 1980?",
        "gold_select": "select distinct model_list.mdl",
        "select_candidates": [
            "select distinct car_names.mdl",
            "select distinct car_names.mdl, car_names.Make",
            "select distinct t4(car_names.mdl)",
            "select distinct car_names.mdl/car_names.mdl"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "model_list car_names cars_data",
        "table_candidates": [
            "model_list car_names",
            "car_names",
            "car_names cars_data",
            "model_list car_names cars_data",
            "car_makers model_list car_names",
            "countries car_names cars_data",
            "model_list cars_data",
            "car_makers car_names cars_data"
        ],
        "align_scores": [
            0.9437993168830872,
            0.007511508651077747,
            0.00015876801626291126,
            0.00013757760461885482,
            0.000935849326197058,
            0.00016260967822745442,
            0.0004003646317869425,
            0.00012855914246756583
        ],
        "align_select": "select distinct car_names.mdl",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the different models for the cards produced after 1980?",
        "gold_select": "select distinct model_list.mdl",
        "select_candidates": [
            "select distinct model_list.mdl",
            "select distinct model_list.mdl, model_list.mdl_id",
            "select count(distinct model_list.mdl)",
            "select distinct model_list.mdl, t3.c3"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "model_list car_names cars_data",
        "table_candidates": [
            "model_list cars_data",
            "model_list car_names",
            "model_list"
        ],
        "align_scores": [
            0.915434718132019,
            0.00014172602095641196,
            0.0002875514910556376,
            6.885565380798653e-05,
            0.004702010657638311,
            7.996772910701111e-05,
            0.00038220445276238024,
            8.311211422551423e-05
        ],
        "align_select": "select distinct model_list.mdl",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many car makers are there in each continents? List the continent name and the count.",
        "gold_select": "select continents.cont, count(*)",
        "select_candidates": [
            "select continents.cont, count(*)",
            "select countries.Continent, count(*)",
            "select countries.cntry_name, count(*)",
            "select t0.c2, count(*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "continents countries car_makers",
        "table_candidates": [
            "continents car_makers",
            "continents countries car_makers",
            "countries car_makers",
            "continents countries"
        ],
        "align_scores": [
            0.8520179390907288,
            0.00020012829918414354,
            0.9884107112884521,
            0.00021973703405819833,
            0.12876857817173004,
            0.0006541284383274615,
            0.0003954202402383089,
            0.00034449799568392336
        ],
        "align_select": "select continents.cont, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "What is the name of each continent and how many car makers are there in each one?",
        "gold_select": "select continents.cont, count(*)",
        "select_candidates": [
            "select countries.Continent, count(*)",
            "select continents.cont, count(*)",
            "select t0.c2, count(*)",
            "select countries.Continent.c2, count(*)"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "continents countries car_makers",
        "table_candidates": [
            "continents countries car_makers",
            "continents car_makers",
            "countries car_makers",
            "continents countries"
        ],
        "align_scores": [
            0.9925042390823364,
            0.00028597970958799124,
            0.9581312537193298,
            0.00019056825840380043,
            0.00032948455191217363,
            0.00028162889066152275,
            0.0015447924379259348,
            0.00019467853417154402
        ],
        "align_select": "select countries.Continent, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "Which of the countries has the most car makers? List the country name.",
        "gold_select": "select countries.cntry_name",
        "select_candidates": [
            "select countries.cntry_name",
            "select countries.cntry_name, car_makers.cntry",
            "select countries.cntry_name (c0, car_makers.cntry)",
            "select countries.cntry_name, countries.Continent"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "countries car_makers",
        "table_candidates": [
            "countries car_makers"
        ],
        "align_scores": [
            0.9742993116378784,
            8.829912985675037e-05,
            0.0032817975152283907,
            8.288844401249662e-05,
            0.00047330360393971205,
            6.83452672092244e-05,
            0.0012442469596862793,
            7.870133413234726e-05
        ],
        "align_select": "select countries.cntry_name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the name of the country with the most car makers?",
        "gold_select": "select countries.cntry_name",
        "select_candidates": [
            "select countries.cntry_name",
            "select countries.cntry_name, car_makers.cntry",
            "select countries.cntry_name, countries.Continent",
            "select countries.cntry_name, continents.cont"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "countries car_makers",
        "table_candidates": [
            "countries car_makers"
        ],
        "align_scores": [
            0.9781420826911926,
            7.878475298639387e-05,
            0.0032726076897233725,
            7.138115324778482e-05,
            0.0015121743781492114,
            7.761008600937203e-05,
            0.006733983289450407,
            7.577696669613943e-05
        ],
        "align_select": "select countries.cntry_name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the accelerate of the car make amc hornet sportabout (sw)?",
        "gold_select": "select cars_data.aclt",
        "select_candidates": [
            "select avg(cars_data.hp)",
            "select accel(cars_data.hp)",
            "select avg(cars_data.aclt)",
            "select max(cars_data.hp)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_names cars_data",
        "table_candidates": [
            "car_names cars_data",
            "car_makers car_names cars_data",
            "model_list car_names cars_data",
            "continents car_names cars_data",
            "countries car_names cars_data"
        ],
        "align_scores": [
            0.023152604699134827,
            6.414949893951416e-05,
            0.0015427632024511695,
            7.38478556741029e-05,
            0.08221317082643509,
            7.057691982481629e-05,
            0.2171759456396103,
            6.650810973951593e-05
        ],
        "align_select": "select avg(cars_data.hp)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How much does the car accelerate that makes amc hornet sportabout (sw)?",
        "gold_select": "select cars_data.aclt",
        "select_candidates": [
            "select avg(cars_data.hp)",
            "select cars_data.hp",
            "select accel(cars_data.hp)",
            "select avg(cars_data.aclt)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_names cars_data",
        "table_candidates": [
            "car_names cars_data",
            "car_makers car_names cars_data",
            "model_list car_names cars_data",
            "continents car_names cars_data",
            "countries car_names cars_data"
        ],
        "align_scores": [
            0.0033003701828420162,
            7.004060898907483e-05,
            0.5159643888473511,
            0.00015893099771346897,
            0.002119238954037428,
            9.580915502738208e-05,
            0.18161696195602417,
            7.342430035350844e-05
        ],
        "align_select": "select cars_data.hp",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many car makers are there in france?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), countries.cntry_id",
            "select count(*), countries.cntry_id, countries.cntry_name",
            "select count(*), t1.cntry_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "countries car_makers",
        "table_candidates": [
            "countries car_makers"
        ],
        "align_scores": [
            0.9935194849967957,
            7.833474228391424e-05,
            0.0003016427217517048,
            7.620698306709528e-05,
            0.00021816321532242,
            5.8349993196316063e-05,
            0.00031257112277671695,
            6.07652218604926e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the number of makers of care in France?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), countries.cntry_id",
            "select count(*), countries.cntry_id, countries.cntry_name",
            "select count(*), t1.cntry_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "countries car_makers",
        "table_candidates": [
            "countries car_makers"
        ],
        "align_scores": [
            0.9940605759620667,
            0.0003651309525594115,
            0.0002251031983178109,
            0.0003013831446878612,
            0.00013337038399185985,
            0.0001440226478734985,
            0.00024342078540939838,
            0.00019716715905815363
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many car models are produced in the usa?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), countries.cntry_id",
            "select count(distinct model_list.Maker)",
            "select count(distinct model_list.mdl_id)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "countries car_makers model_list",
        "table_candidates": [
            "countries car_makers model_list",
            "countries car_makers",
            "countries car_makers model_list car_names"
        ],
        "align_scores": [
            0.9936060905456543,
            0.0034735859371721745,
            0.0003308288869448006,
            0.0009899333817884326,
            0.0072794752195477486,
            9.333878551842645e-05,
            0.006113720126450062,
            0.0001109724908019416
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the count of the car models produced in the United States?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), car_makers.Id",
            "select count(distinct model_list.Maker)",
            "select count(distinct model_list.mdl_id)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "countries car_makers model_list",
        "table_candidates": [
            "countries car_makers model_list",
            "countries car_makers",
            "countries car_makers model_list car_names",
            "car_makers model_list"
        ],
        "align_scores": [
            0.9917306303977966,
            0.03911377862095833,
            0.00023313562269322574,
            0.007470363285392523,
            0.002665997017174959,
            8.277020242530853e-05,
            0.0030925427563488483,
            8.842771057970822e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are all the makers and models?",
        "gold_select": "select model_list.Maker, model_list.mdl",
        "select_candidates": [
            "select car_makers.Maker, model_list.mdl",
            "select model_list.Maker, model_list.mdl",
            "select car_makers.Maker, car_makers.FullName",
            "select car_makers.Maker, model_list.Maker"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "model_list",
        "table_candidates": [
            "car_makers model_list",
            "model_list car_makers",
            "countries model_list",
            "continents car_makers model_list",
            "countries car_makers model_list",
            "model_list car_makers model_list"
        ],
        "align_scores": [
            0.9932603240013123,
            0.00020758163009304553,
            0.9812466502189636,
            0.00019951270951423794,
            0.0006560288602486253,
            0.0001477254554629326,
            0.0006135835428722203,
            0.00011639529111562297
        ],
        "align_select": "select car_makers.Maker, model_list.mdl",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What are the makers and models?",
        "gold_select": "select model_list.Maker, model_list.mdl",
        "select_candidates": [
            "select car_makers.Maker, model_list.mdl",
            "select car_makers.Maker, car_makers.FullName",
            "select car_makers.Maker, model_list.Maker",
            "select model_list.Maker, model_list.mdl"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "model_list",
        "table_candidates": [
            "car_makers model_list",
            "continents car_makers model_list",
            "model_list car_makers",
            "countries car_makers model_list",
            "countries model_list",
            "car_makers model_list car_names"
        ],
        "align_scores": [
            0.9934478402137756,
            0.00015111280663404614,
            0.0006077053840272129,
            0.00012943529873155057,
            0.00048179025179706514,
            0.00010444393410580233,
            0.982528030872345,
            0.00012737029464915395
        ],
        "align_select": "select car_makers.Maker, model_list.mdl",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What are the countries having at least one car maker? List name and id.",
        "gold_select": "select countries.cntry_name, countries.cntry_id",
        "select_candidates": [
            "select countries.cntry_name, car_makers.Id",
            "select countries.cntry_name, countries.cntry_id",
            "select distinct countries.cntry_name, countries.cntry_id",
            "select distinct countries.cntry_name, car_makers.Id"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "countries car_makers",
        "table_candidates": [
            "countries car_makers",
            "countries car_makers model_list"
        ],
        "align_scores": [
            0.05873943492770195,
            0.7365346550941467,
            0.9352282285690308,
            0.9788345098495483,
            0.07967767864465714,
            0.0027102846652269363,
            0.031729232519865036,
            0.0012131239054724574
        ],
        "align_select": "select countries.cntry_name, countries.cntry_id",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the names and ids of all countries with at least one car maker?",
        "gold_select": "select countries.cntry_name, countries.cntry_id",
        "select_candidates": [
            "select countries.cntry_name, countries.cntry_id",
            "select distinct countries.cntry_name, countries.cntry_id",
            "select count(*), countries.cntry_name, countries.cntry_id",
            "select at least countries.cntry_name, countries.cntry_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "countries car_makers",
        "table_candidates": [
            "countries car_makers",
            "countries car_makers model_list"
        ],
        "align_scores": [
            0.9622126221656799,
            0.9676914215087891,
            0.06380744278430939,
            0.002285004360601306,
            0.00036514431121759117,
            0.00037636960041709244,
            0.38756272196769714,
            0.010582802817225456
        ],
        "align_select": "select countries.cntry_name, countries.cntry_id",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What is the number of the cars with horsepower more than 150?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), cars_data.Id",
            "select count(*), t5.dcars_data.Id",
            "select count(*) (cars_data.Id)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data",
            "car_names cars_data"
        ],
        "align_scores": [
            0.9940716624259949,
            0.00013623700942844152,
            0.00023281310859601945,
            0.005770950578153133,
            0.0002170202787965536,
            0.0011751182610169053,
            0.0003293655172456056,
            0.0003563242789823562
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the number of cars with a horsepower greater than 150?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), cars_data.Id",
            "select count(*), t5.dcars_data.Id",
            "select count(*) (cars_data.Id)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data"
        ],
        "align_scores": [
            0.9917104840278625,
            0.0001299772848142311,
            0.00023115881776902825,
            0.0008899731910787523,
            0.00020766675879713148,
            0.00035195378586649895,
            0.00028922565979883075,
            0.0001320604933425784
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which countries in europe have at least 3 car manufacturers?",
        "gold_select": "select countries.cntry_name",
        "select_candidates": [
            "select countries.cntry_name",
            "select countries.cntry_name, continents.cont",
            "select countries.cntry_name, car_makers.cntry",
            "select countries.cntry_name, continents.ContId"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY-HAVING",
            "SELECT-FROM-WHERE-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "continents countries car_makers",
        "table_candidates": [
            "continents countries car_makers",
            "countries car_makers",
            "continents countries car_makers model_list"
        ],
        "align_scores": [
            0.950795590877533,
            9.94070214801468e-05,
            0.0013410323299467564,
            6.641539221163839e-05,
            0.0017761632334440947,
            6.078938895370811e-05,
            0.002184706972911954,
            7.592401379952207e-05
        ],
        "align_select": "select countries.cntry_name",
        "align_structure": "SELECT-FROM-WHERE-GROUP BY-HAVING"
    },
    {
        "question": "What are the names of all European countries with at least 3 manufacturers?",
        "gold_select": "select countries.cntry_name",
        "select_candidates": [
            "select countries.cntry_name",
            "select countries.cntry_name, continents.cont",
            "select countries.cntry_name, t0.c2",
            "select countries.cntry_name, continents.ContId"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY-HAVING",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "continents countries car_makers",
        "table_candidates": [
            "continents countries car_makers",
            "countries car_makers",
            "continents car_makers",
            "continents countries",
            "continents countries car_makers model_list",
            "continents countries car_makers car_names"
        ],
        "align_scores": [
            0.9750188589096069,
            0.00018683740927372128,
            0.0011101443087682128,
            0.000121889024740085,
            0.00033166035427711904,
            0.00011955228546867147,
            0.0008792977896519005,
            0.00015200214693322778
        ],
        "align_select": "select countries.cntry_name",
        "align_structure": "SELECT-FROM-WHERE-GROUP BY-HAVING"
    },
    {
        "question": "What is the maximum horsepower and the make of the car models with 3 cylinders?",
        "gold_select": "select cars_data.hp, car_names.Make",
        "select_candidates": [
            "select max(cars_data.hp), car_names.Make",
            "select max(cars_data.aclt), car_names.Make",
            "select max(cars_data.hp), cars_data.Cylinders",
            "select max(cars_data.hp), car_names.Make)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "car_names cars_data",
        "table_candidates": [
            "car_names cars_data",
            "model_list car_names cars_data",
            "car_makers cars_data",
            "countries car_names cars_data",
            "continents car_names cars_data",
            "model_list cars_data",
            "countries cars_data"
        ],
        "align_scores": [
            0.9939397573471069,
            0.00016412316472269595,
            0.949367344379425,
            0.0002009944146266207,
            0.0005936560919508338,
            8.830443402985111e-05,
            0.0012967853108420968,
            0.000110813562059775
        ],
        "align_select": "select max(cars_data.hp), car_names.Make",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the largest amount of horsepower for the models with 3 cylinders and what make is it?",
        "gold_select": "select cars_data.hp, car_names.Make",
        "select_candidates": [
            "select max(cars_data.hp), car_names.Make",
            "select car_names.Make, max(cars_data.hp)",
            "select min(cars_data.hp), car_names.Make",
            "select max(cars_data.hp), car_names.mdl"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_names cars_data",
        "table_candidates": [
            "car_names cars_data",
            "model_list car_names cars_data",
            "model_list cars_data",
            "cars_data",
            "car_makers cars_data",
            "countries car_names cars_data",
            "continents car_names cars_data",
            "countries cars_data"
        ],
        "align_scores": [
            0.0005004989798180759,
            8.525669545633718e-05,
            0.0019705898594111204,
            9.546851651975885e-05,
            0.00028414197731763124,
            0.000201480055693537,
            0.00033306595287285745,
            8.654197154100984e-05
        ],
        "align_select": "select max(cars_data.hp), car_names.Make",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT"
    },
    {
        "question": "Which model saves the most gasoline? That is to say, have the maximum miles per gallon.",
        "gold_select": "select car_names.mdl",
        "select_candidates": [
            "select model_list.mdl",
            "select car_names.mdl",
            "select car_names.Make",
            "select model_list.Maker"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_names cars_data",
        "table_candidates": [
            "model_list cars_data",
            "cars_data",
            "car_names cars_data",
            "car_makers model_list cars_data",
            "countries model_list cars_data",
            "car_makers cars_data",
            "car_makers car_names cars_data",
            "countries car_names cars_data"
        ],
        "align_scores": [
            0.6870261430740356,
            0.9291313886642456,
            0.5927647948265076,
            0.8093542456626892,
            0.9693789482116699,
            0.9876393675804138,
            0.004639592953026295,
            0.0074116140604019165
        ],
        "align_select": "select car_names.Make",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the car model with the highest mpg?",
        "gold_select": "select car_names.mdl",
        "select_candidates": [
            "select car_names.mdl",
            "select car_names.Make",
            "select car_names.MakeId, car_names.mdl",
            "select car_names.mdl, car_names.Make"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_names cars_data",
        "table_candidates": [
            "car_names cars_data",
            "model_list car_names cars_data",
            "car_makers car_names cars_data",
            "countries car_names cars_data",
            "car_makers model_list car_names cars_data",
            "continents car_names cars_data"
        ],
        "align_scores": [
            0.7726123929023743,
            9.793134813662618e-05,
            0.9860442876815796,
            7.346366328420117e-05,
            0.0008594478131271899,
            6.722045509377494e-05,
            0.0008120950078591704,
            6.41353108221665e-05
        ],
        "align_select": "select car_names.Make",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What is the average horsepower of the cars before 1980?",
        "gold_select": "select avg(cars_data.hp)",
        "select_candidates": [
            "select avg(cars_data.hp)",
            "select an avg(cars_data.hp)",
            "select avg(avg(cars_data.hp)",
            "select  avg(cars_data.hp)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data",
            "model_list cars_data",
            "car_names cars_data",
            "car_makers cars_data"
        ],
        "align_scores": [
            0.9962714910507202,
            0.00012884644092991948,
            0.00036250086850486696,
            0.00011982048454228789,
            0.000420260796090588,
            0.0001101017405744642,
            0.9962714910507202,
            0.00012884644092991948
        ],
        "align_select": "select avg(cars_data.hp)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the average horsepower for all cars produced before 1980?",
        "gold_select": "select avg(cars_data.hp)",
        "select_candidates": [
            "select avg(cars_data.hp)",
            "select an avg(cars_data.hp)",
            "select avg(avg(cars_data.hp)",
            "select  avg(cars_data.hp)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data",
            "car_names cars_data",
            "model_list cars_data",
            "car_makers cars_data"
        ],
        "align_scores": [
            0.9961491823196411,
            0.00011111183266621083,
            0.00036923724110238254,
            0.00010818534065037966,
            0.0004917371552437544,
            0.00010067597031593323,
            0.9961491823196411,
            0.00011111183266621083
        ],
        "align_select": "select avg(cars_data.hp)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the average edispl of the cars of model volvo?",
        "gold_select": "select avg(cars_data.Edispl)",
        "select_candidates": [
            "select avg(cars_data.Edispl)",
            "select an avg(cars_data.Edispl)",
            "select avg(cars_data.Edispl)",
            "select avg(avg(cars_data.Edispl)"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_names cars_data",
        "table_candidates": [
            "model_list car_names cars_data",
            "car_makers model_list car_names cars_data",
            "car_names cars_data",
            "continents model_list car_names cars_data",
            "countries model_list car_names cars_data",
            "car_makers model_list cars_data",
            "countries car_names cars_data"
        ],
        "align_scores": [
            0.9964190721511841,
            0.0001096983760362491,
            0.00039060739800333977,
            9.47769804042764e-05,
            0.9964190721511841,
            0.0001096983760362491,
            0.0004909514682367444,
            8.425603300565854e-05
        ],
        "align_select": "select avg(cars_data.Edispl)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the average edispl for all volvos?",
        "gold_select": "select avg(cars_data.Edispl)",
        "select_candidates": [
            "select avg(cars_data.Edispl)",
            "select an avg(cars_data.Edispl)",
            "select avg(cars_data.Edispl), car_names.mdl",
            "select  avg(cars_data.Edispl)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_names cars_data",
        "table_candidates": [
            "cars_data",
            "car_names cars_data",
            "model_list cars_data",
            "car_makers cars_data",
            "car_makers car_names cars_data",
            "model_list car_names cars_data",
            "countries car_names cars_data",
            "countries cars_data"
        ],
        "align_scores": [
            0.9966610670089722,
            0.0001598495728103444,
            0.00037628886639140546,
            9.487797797191888e-05,
            0.00015948190412018448,
            0.0002964510058518499,
            0.9966610670089722,
            0.0001598495728103444
        ],
        "align_select": "select avg(cars_data.Edispl)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the maximum accelerate for different number of cylinders?",
        "gold_select": "select max(cars_data.aclt), cars_data.Cylinders",
        "select_candidates": [
            "select max(cars_data.hp), cars_data.Cylinders",
            "select max(cars_data.aclt), cars_data.Cylinders",
            "select cars_data.Cylinders, max(cars_data.hp)",
            "select max(t5.c8), cars_data.Cylinders"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data"
        ],
        "align_scores": [
            0.9896253943443298,
            0.00010534394095884636,
            0.9868589639663696,
            0.0001183368731290102,
            0.9932026863098145,
            0.00011764225200749934,
            0.00048091000644490123,
            0.0001432714780094102
        ],
        "align_select": "select max(cars_data.hp), cars_data.Cylinders",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "What is the maximum accelerate for all the different cylinders?",
        "gold_select": "select max(cars_data.aclt), cars_data.Cylinders",
        "select_candidates": [
            "select max(cars_data.aclt), cars_data.Cylinders",
            "select max(cars_data.hp), cars_data.Cylinders",
            "select cars_data.Cylinders, max(cars_data.hp)",
            "select cars_data.Cylinders, max(cars_data.aclt)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data"
        ],
        "align_scores": [
            0.9818603992462158,
            0.00013683839642908424,
            0.9827392101287842,
            0.00013581082748714834,
            0.9891036748886108,
            0.00015312549658119678,
            0.992852509021759,
            0.0001783248590072617
        ],
        "align_select": "select max(cars_data.aclt), cars_data.Cylinders",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "Which model has the most version(make) of cars?",
        "gold_select": "select car_names.mdl",
        "select_candidates": [
            "select model_list.mdl",
            "select model_list.mdl, car_names.Make",
            "select car_names.Make, model_list.mdl",
            "select model_list.Maker, car_names.Make"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-UNION-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_names",
        "table_candidates": [
            "model_list car_names",
            "car_makers model_list car_names",
            "continents model_list car_names",
            "countries model_list car_names",
            "countries car_names",
            "car_makers car_names"
        ],
        "align_scores": [
            0.4238611161708832,
            0.0007618243689648807,
            0.9266159534454346,
            0.00017412992019671947,
            0.6311870813369751,
            0.0001776670105755329,
            0.00028952417778782547,
            7.769346120767295e-05
        ],
        "align_select": "select model_list.mdl, car_names.Make",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What model has the most different versions?",
        "gold_select": "select car_names.mdl",
        "select_candidates": [
            "select model_list.Maker",
            "select model_list.mdl",
            "select model_list.mdl_id",
            "select model_list.Maker, model_list.mdl"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_names",
        "table_candidates": [
            "model_list",
            "car_makers model_list",
            "model_list car_names",
            "countries model_list"
        ],
        "align_scores": [
            0.009599156677722931,
            7.83097930252552e-05,
            0.9702916741371155,
            0.00010150721936952323,
            0.10950922220945358,
            0.00011780883505707607,
            0.0006516581634059548,
            9.097799920709804e-05
        ],
        "align_select": "select model_list.mdl",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Which distinctive models are produced by maker with the full name General Motors or weighing more than 3500?",
        "gold_select": "select distinct model_list.mdl",
        "select_candidates": [
            "select distinct model_list.mdl",
            "select distinct model_list.Maker",
            "select distinct model_list.mdl, model_list.Maker",
            "select distinct model_list.mdl_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_makers model_list car_names cars_data",
        "table_candidates": [
            "car_makers model_list cars_data",
            "car_makers model_list car_names",
            "countries car_makers model_list cars_data"
        ],
        "align_scores": [
            0.6286010146141052,
            0.01057265792042017,
            0.7278838157653809,
            0.0036757923662662506,
            0.00037528222310356796,
            0.00011684533819789067,
            0.42679858207702637,
            0.050881098955869675
        ],
        "align_select": "select distinct model_list.mdl",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the different models created by either the car maker General Motors or weighed more than 3500?",
        "gold_select": "select distinct model_list.mdl",
        "select_candidates": [
            "select distinct model_list.mdl",
            "select count(distinct model_list.mdl)",
            "select distinct model_list.mdl_id",
            "select distinct model_list.mdl, model_list.Maker"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_makers model_list car_names cars_data",
        "table_candidates": [
            "car_makers model_list cars_data",
            "car_makers model_list car_names cars_data",
            "countries car_makers model_list cars_data",
            "continents car_makers model_list cars_data",
            "car_makers car_names cars_data",
            "car_makers model_list"
        ],
        "align_scores": [
            0.49367302656173706,
            0.00040063727647066116,
            0.0021842706482857466,
            9.323381527792662e-05,
            0.07073506712913513,
            0.000806516211014241,
            0.0002430253807688132,
            8.270163380075246e-05
        ],
        "align_select": "select distinct model_list.mdl",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the horsepower of the car with the largest accelerate?",
        "gold_select": "select cars_data.hp",
        "select_candidates": [
            "select cars_data.hp",
            "select cars_data.Id, cars_data.hp",
            "select cars_data.hp, cars_data.aclt",
            "select cars_data.Id, cars_data.Cylinders"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data",
            "car_names cars_data",
            "model_list cars_data",
            "car_makers cars_data"
        ],
        "align_scores": [
            0.97031569480896,
            7.928571722004563e-05,
            0.0002384837280260399,
            6.963776104385033e-05,
            0.0006946562207303941,
            6.992581620579585e-05,
            0.00020487325673457235,
            6.665013643214479e-05
        ],
        "align_select": "select cars_data.hp",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What is the horsepower of the car with the greatest accelerate?",
        "gold_select": "select cars_data.hp",
        "select_candidates": [
            "select cars_data.hp",
            "select cars_data.Id, cars_data.hp",
            "select cars_data.hp, cars_data.aclt",
            "select cars_data.Id, cars_data.Cylinders"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data",
            "car_names cars_data",
            "model_list cars_data",
            "car_makers cars_data",
            "countries cars_data"
        ],
        "align_scores": [
            0.9828212261199951,
            8.148916822392493e-05,
            0.0002659593301359564,
            7.050642307149246e-05,
            0.0007240874110721052,
            7.028275285847485e-05,
            0.00021720866789110005,
            6.392550858436152e-05
        ],
        "align_select": "select cars_data.hp",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "For model volvo, how many cylinders does the car with the least accelerate have?",
        "gold_select": "select cars_data.Cylinders",
        "select_candidates": [
            "select cars_data.Cylinders",
            "select cars_data.MPG, cars_data.Cylinders",
            "select sum(cars_data.Cylinders)",
            "select cars_data.Cylinders, cars_data.Edispl"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_names cars_data",
        "table_candidates": [
            "model_list cars_data",
            "model_list car_names cars_data",
            "countries model_list cars_data",
            "continents model_list cars_data",
            "car_names cars_data",
            "car_makers cars_data",
            "continents model_list car_names cars_data"
        ],
        "align_scores": [
            0.9881949424743652,
            7.261698192451149e-05,
            0.0002636421995703131,
            6.725905404891819e-05,
            0.12870116531848907,
            7.12019536877051e-05,
            0.0003564945072866976,
            5.884721758775413e-05
        ],
        "align_select": "select cars_data.Cylinders",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT"
    },
    {
        "question": "For a volvo model, how many cylinders does the version with least accelerate have?",
        "gold_select": "select cars_data.Cylinders",
        "select_candidates": [
            "select cars_data.Cylinders",
            "select cars_data.Cylinders, cars_data.Edispl",
            "select cars_data.Id, cars_data.Cylinders",
            "select cars_data.MPG, cars_data.Cylinders"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_names cars_data",
        "table_candidates": [
            "model_list cars_data",
            "countries model_list cars_data",
            "continents model_list cars_data",
            "car_names cars_data",
            "car_makers cars_data",
            "cars_data",
            "countries cars_data"
        ],
        "align_scores": [
            0.9846922159194946,
            9.907882486004382e-05,
            0.0004979270161129534,
            6.938281876500696e-05,
            0.00032931152964010835,
            8.974264346761629e-05,
            0.00026100038667209446,
            8.104256266960874e-05
        ],
        "align_select": "select cars_data.Cylinders",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT"
    },
    {
        "question": "How many cars have a larger accelerate than the car with the largest horsepower?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), cars_data.Id",
            "select count(distinct cars_data.Id)",
            "select count(*), cars_data.MPG"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data",
            "car_names cars_data",
            "model_list cars_data",
            "car_makers cars_data",
            "countries cars_data"
        ],
        "align_scores": [
            0.9621860384941101,
            0.0013478088658303022,
            0.000418550189351663,
            0.00016310707724187523,
            0.0012011600192636251,
            7.569095760118216e-05,
            0.00036065877065993845,
            0.00020427403796929866
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the number of cars with a greater accelerate than the one with the most horsepower?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), cars_data.Id",
            "select count(*), cars_data.MPG",
            "select count(*), cars_data.hp"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data",
            "car_names cars_data",
            "model_list cars_data",
            "car_makers cars_data",
            "countries cars_data",
            "cars_data car_names"
        ],
        "align_scores": [
            0.9737866520881653,
            0.0005758209154009819,
            0.0004231985367368907,
            9.957162546925247e-05,
            0.0002871525939553976,
            0.00010203068086411804,
            0.0003294066700618714,
            0.00017238588770851493
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many countries has more than 2 car makers?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), car_makers.cntry",
            "select count(*), countries.cntry_name",
            "select count(*), countries.cntry_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "countries car_makers",
        "table_candidates": [
            "countries car_makers",
            "countries car_makers model_list",
            "countries car_makers car_names"
        ],
        "align_scores": [
            0.8212433457374573,
            0.012550869956612587,
            0.0006063120672479272,
            0.0062879654578864574,
            0.0008041713736020029,
            0.040146004408597946,
            0.001345091499388218,
            0.011238816194236279
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What is the number of countries with more than 2 car makers?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), car_makers.cntry",
            "select count(*), countries.cntry_name",
            "select count(*), countries.cntry_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "countries car_makers",
        "table_candidates": [
            "countries car_makers",
            "countries car_makers model_list"
        ],
        "align_scores": [
            0.76219242811203,
            0.004517059773206711,
            0.0006443915190175176,
            0.015593196265399456,
            0.000431017397204414,
            0.012052081525325775,
            0.0006223687087185681,
            0.004539927467703819
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "For the cars with 4 cylinders, which model has the largest horsepower?",
        "gold_select": "select car_names.mdl",
        "select_candidates": [
            "select car_names.mdl",
            "select car_names.mdl, cars_data.Cylinders",
            "select car_names.mdl, car_names.Make",
            "select car_names.mdl, cars_data.Id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-ORDER BY-LIMIT-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_names cars_data",
        "table_candidates": [
            "cars_data",
            "car_names cars_data",
            "model_list car_names cars_data",
            "countries car_names cars_data",
            "car_makers cars_data",
            "model_list cars_data",
            "countries cars_data"
        ],
        "align_scores": [
            0.393522173166275,
            0.00019266862364020199,
            0.0006900948355905712,
            6.549942190758884e-05,
            0.0005525731830857694,
            7.363099575741217e-05,
            0.0003531989350449294,
            8.395408076466992e-05
        ],
        "align_select": "select car_names.mdl",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT"
    },
    {
        "question": "For all of the 4 cylinder cars, which model has the most horsepower?",
        "gold_select": "select car_names.mdl",
        "select_candidates": [
            "select car_names.mdl",
            "select car_names.mdl, cars_data.Cylinders",
            "select car_names.mdl, car_names.Make",
            "select car_names.MakeId, car_names.mdl"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-ORDER BY-LIMIT-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_names cars_data",
        "table_candidates": [
            "car_names cars_data",
            "cars_data",
            "model_list car_names cars_data",
            "countries car_names cars_data",
            "car_makers cars_data",
            "continents car_names cars_data",
            "countries cars_data",
            "model_list cars_data"
        ],
        "align_scores": [
            0.3432149291038513,
            0.0002049091854132712,
            0.0007319970754906535,
            6.945073982933536e-05,
            0.000444472098024562,
            6.878373096697032e-05,
            0.00045185585622675717,
            7.363408076344058e-05
        ],
        "align_select": "select car_names.mdl",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT"
    },
    {
        "question": "Among the cars with more than lowest horsepower, which ones do not have more than 3 cylinders? List the car makeid and make name.",
        "gold_select": "select car_names.MakeId, car_names.Make",
        "select_candidates": [
            "select car_names.MakeId, car_names.Make",
            "select car_makers.Id, car_names.Make",
            "select car_names.MakeId, car_names.Make",
            "select car_names.mdl, car_names.Make"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_names cars_data",
        "table_candidates": [
            "car_names cars_data",
            "model_list car_names cars_data",
            "car_makers car_names cars_data",
            "countries car_names cars_data",
            "car_makers cars_data",
            "model_list cars_data"
        ],
        "align_scores": [
            0.9007434248924255,
            0.5555253028869629,
            0.7111538648605347,
            0.5436035394668579,
            0.9007434248924255,
            0.5555253028869629,
            0.0013331014197319746,
            0.0007872739224694669
        ],
        "align_select": "select car_names.MakeId, car_names.Make",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Among the cars that do not have the minimum horsepower, what are the make ids and names of all those with less than 4 cylinders?",
        "gold_select": "select car_names.MakeId, car_names.Make",
        "select_candidates": [
            "select car_names.MakeId, car_names.Make",
            "select car_names.Make, car_names.MakeId",
            "select car_makers.Id, car_names.Make",
            "select car_names.mdl, car_names.Make"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_names cars_data",
        "table_candidates": [
            "car_names cars_data",
            "model_list car_names cars_data",
            "car_makers car_names cars_data",
            "countries car_names cars_data",
            "continents car_names cars_data",
            "car_makers cars_data"
        ],
        "align_scores": [
            0.9219397306442261,
            0.0016255590599030256,
            0.8170405626296997,
            0.0022956000175327063,
            0.5613921880722046,
            0.003203081665560603,
            0.4429123103618622,
            0.0007006954401731491
        ],
        "align_select": "select car_names.MakeId, car_names.Make",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which models are lighter than 3500 but not built by the 'Ford Motor Company'?",
        "gold_select": "select distinct model_list.mdl",
        "select_candidates": [
            "select model_list.mdl_id",
            "select model_list.Maker",
            "select t3.c3, car_makers.FullName",
            "select model_list.mdl_id, car_makers.FullName"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "car_makers model_list car_names cars_data",
        "table_candidates": [
            "car_makers model_list cars_data",
            "car_makers model_list car_names",
            "car_makers model_list"
        ],
        "align_scores": [
            0.3182898163795471,
            0.16167889535427094,
            0.9578632116317749,
            0.8697727918624878,
            0.00028369316714815795,
            0.00022414948034565896,
            0.0007535485201515257,
            0.0005819230573251843
        ],
        "align_select": "select model_list.Maker",
        "align_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the different models wthat are lighter than 3500 but were not built by the Ford Motor Company?",
        "gold_select": "select distinct model_list.mdl",
        "select_candidates": [
            "select distinct model_list.mdl_id",
            "select distinct car_names.MakeId",
            "select distinct car_makers.Maker, car_makers.FullName",
            "select distinct model_list.mdl_id, car_makers.FullName"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "car_makers model_list car_names cars_data",
        "table_candidates": [
            "car_makers model_list cars_data",
            "car_makers model_list car_names",
            "countries car_makers model_list car_names",
            "continents car_makers model_list car_names",
            "countries car_makers model_list cars_data",
            "car_makers model_list",
            "continents car_makers model_list cars_data"
        ],
        "align_scores": [
            0.1723286509513855,
            0.1723286509513855,
            0.5588410496711731,
            0.5588410496711731,
            0.00029600507696159184,
            0.00029600507696159184,
            0.0009051506640389562,
            0.0009051506640389562
        ],
        "align_select": "select distinct car_names.MakeId",
        "align_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the name of the countries where there is not a single car maker?",
        "gold_select": "select countries.cntry_name",
        "select_candidates": [
            "select countries.cntry_name",
            "select countries.cntry_name, countries.Continent",
            "select countries.cntry_name, continents.cont",
            "select countries.cntry_name, t0.c2"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "countries car_makers",
        "table_candidates": [
            "countries",
            "countries car_makers",
            "countries car_makers model_list",
            "countries car_makers car_names"
        ],
        "align_scores": [
            0.6853746175765991,
            0.9073481559753418,
            0.0003757139202207327,
            0.0004969369620084763,
            0.0016838761512190104,
            0.002412591828033328,
            0.0006442349404096603,
            0.00039544509490951896
        ],
        "align_select": "select countries.cntry_name",
        "align_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM"
    },
    {
        "question": "What are the names of the countries with no car makers?",
        "gold_select": "select countries.cntry_name",
        "select_candidates": [
            "select countries.cntry_name",
            "select countries.cntry_name, countries.Continent",
            "select countries.cntry_name, t0.c2",
            "select countries.cntry_name, continents.cont"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "countries car_makers",
        "table_candidates": [
            "countries",
            "countries car_makers"
        ],
        "align_scores": [
            0.6247102618217468,
            0.9387193322181702,
            0.0003130733675789088,
            0.0005795523757115006,
            0.0006647544796578586,
            0.00040945736691355705,
            0.0009387393365614116,
            0.0020197636913508177
        ],
        "align_select": "select countries.cntry_name",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM"
    },
    {
        "question": "Which are the car makers which produce at least 2 models and more than 3 car makers? List the id and the maker.",
        "gold_select": "select car_makers.Id, car_makers.Maker",
        "select_candidates": [
            "select car_makers.Id, car_makers.Maker",
            "select model_list.mdl_id, car_makers.Maker",
            "select t2, car_makers.Id, car_makers.Maker",
            "select model_list.Maker, car_makers.Maker"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING-INTERSECT-SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING-INTERSECT-SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_makers model_list car_names",
        "table_candidates": [
            "car_makers model_list",
            "car_makers model_list car_names"
        ],
        "align_scores": [
            0.03181135281920433,
            0.009719659574329853,
            0.027025504037737846,
            0.011421880684792995,
            0.00014952541096135974,
            0.00012067450006725267,
            0.00029362161876633763,
            0.00017831158766057342
        ],
        "align_select": "select car_makers.Id, car_makers.Maker",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the ids and makers of all car makers that produce at least 2 models and make more than 3 cars?",
        "gold_select": "select car_makers.Id, car_makers.Maker",
        "select_candidates": [
            "select car_makers.Id, car_makers.Maker",
            "select model_list.mdl_id, car_makers.Maker",
            "select car_makers.Id, car_makers.Maker, car_makers.FullName",
            "select t2, car_makers.Id, car_makers.Maker"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING-INTERSECT-SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING-INTERSECT-SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_makers model_list car_names",
        "table_candidates": [
            "car_makers model_list car_names",
            "countries car_makers model_list car_names",
            "continents car_makers model_list car_names",
            "countries model_list car_names",
            "car_makers model_list"
        ],
        "align_scores": [
            0.8882565498352051,
            0.09909139573574066,
            0.5232802033424377,
            0.08071225136518478,
            0.0007778102299198508,
            0.0004336608690209687,
            0.00018761683895718306,
            0.00014329880650620908
        ],
        "align_select": "select car_makers.Id, car_makers.Maker",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the id and names of the countries which have more than 3 car makers or produce the 'fiat' model?",
        "gold_select": "select countries.cntry_id, countries.cntry_name",
        "select_candidates": [
            "select countries.cntry_id, countries.cntry_name",
            "select car_names.mdl, countries.cntry_id, countries.cntry_name",
            "select t1, countries.cntry_id, countries.cntry_name",
            "select countries.cntry_id, countries.cntry_name, countries.Continent"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "countries car_makers model_list",
        "table_candidates": [
            "countries car_makers model_list car_names",
            "countries car_makers model_list",
            "countries model_list car_names"
        ],
        "align_scores": [
            0.9908851981163025,
            0.10657735168933868,
            0.00040448192157782614,
            0.00022173370234668255,
            0.0005622499156743288,
            0.00025190916494466364,
            0.0013315711403265595,
            0.000532486301381141
        ],
        "align_select": "select countries.cntry_id, countries.cntry_name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the ids and names of all countries that either have more than 3 car makers or produce fiat model?",
        "gold_select": "select countries.cntry_id, countries.cntry_name",
        "select_candidates": [
            "select countries.cntry_id, countries.cntry_name",
            "select t1, countries.cntry_id, countries.cntry_name",
            "select countries.cntry_name, countries.cntry_id",
            "select countries.cntry_id, countries.cntry_name, countries.Continent"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "countries car_makers model_list",
        "table_candidates": [
            "countries car_makers model_list",
            "countries car_makers model_list car_names",
            "countries model_list car_names"
        ],
        "align_scores": [
            0.9842922687530518,
            0.9891666769981384,
            0.0003667632699944079,
            0.000552963581867516,
            0.9843116402626038,
            0.9894826412200928,
            0.0003689705627039075,
            0.0009354553185403347
        ],
        "align_select": "select countries.cntry_id, countries.cntry_name",
        "align_structure": "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
    },
    {
        "question": "Which of the countries has the most car makers? List the country name.",
        "gold_select": "select countries.cntry_name",
        "select_candidates": [
            "select countries.cntry_name",
            "select countries.cntry_name, car_makers.Country",
            "select countries.cntry_name, car_makers.Country, countries.Continent",
            "select countries.cntry_name (c0, car_makers.Country)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "countries car_makers",
        "table_candidates": [
            "countries car_makers"
        ],
        "align_scores": [
            0.9742993116378784,
            8.829912985675037e-05,
            0.0014704877976328135,
            8.058288221945986e-05,
            0.0003630498831626028,
            7.560994708910584e-05,
            0.0005064299912191927,
            6.621094507863745e-05
        ],
        "align_select": "select countries.cntry_name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the name of the country with the most car makers?",
        "gold_select": "select countries.cntry_name",
        "select_candidates": [
            "select countries.cntry_name",
            "select countries.cntry_name, car_makers.Country",
            "select countries.cntry_name, countries.CountryId",
            "select countries.cntry_name (countries.Continent)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "countries car_makers",
        "table_candidates": [
            "countries car_makers"
        ],
        "align_scores": [
            0.9781420826911926,
            7.878475298639387e-05,
            0.0015110810054466128,
            7.087543053785339e-05,
            0.0008015339262783527,
            6.824626325396821e-05,
            0.006089683622121811,
            7.201193511718884e-05
        ],
        "align_select": "select countries.cntry_name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "How many car makers are there in france?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), countries.CountryId",
            "select count(*), countries.CountryId, countries.cntry_name",
            "select count(*), countries.CountryId, countries.cntry_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "countries car_makers",
        "table_candidates": [
            "countries car_makers"
        ],
        "align_scores": [
            0.9935194849967957,
            7.833474228391424e-05,
            0.00022106579854153097,
            8.0096026067622e-05,
            0.00012755116040352732,
            5.626995334750973e-05,
            0.00012755116040352732,
            5.626995334750973e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the number of makers of care in France?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), countries.CountryId",
            "select count(*), countries.cntry_name",
            "select count(*) (car_makers.Maker)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "countries car_makers",
        "table_candidates": [
            "countries car_makers"
        ],
        "align_scores": [
            0.9940605759620667,
            0.0003651309525594115,
            0.00029217565315775573,
            0.0008160224533639848,
            0.00023831732687540352,
            0.0008954876102507114,
            0.0006654965109191835,
            0.00029832147993147373
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many car models are produced in the usa?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(distinct model_list.Model)",
            "select count(*), countries.CountryId",
            "select count(distinct model_list.Maker)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "countries car_makers model_list",
        "table_candidates": [
            "countries car_makers model_list car_names",
            "countries car_makers model_list",
            "countries car_makers",
            "countries car_makers car_names"
        ],
        "align_scores": [
            0.9936060905456543,
            0.0034735859371721745,
            0.13467884063720703,
            0.00014685427595395595,
            0.00020887350547127426,
            0.00025986641412600875,
            0.0072794752195477486,
            9.333878551842645e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the count of the car models produced in the United States?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(distinct model_list.Model)",
            "select count(*), car_makers.Id",
            "select count(*), car_makers.Maker"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "countries car_makers model_list",
        "table_candidates": [
            "car_makers model_list car_names",
            "countries car_makers model_list car_names",
            "car_makers model_list",
            "car_makers car_names"
        ],
        "align_scores": [
            0.9917306303977966,
            0.03911377862095833,
            0.03990941494703293,
            0.00010231742635369301,
            0.00023313562269322574,
            0.007470363285392523,
            0.00023722102923784405,
            0.00451313704252243
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the countries having at least one car maker? List name and id.",
        "gold_select": "select countries.cntry_name, countries.CountryId",
        "select_candidates": [
            "select countries.cntry_name, car_makers.Id",
            "select countries.cntry_name, car_makers.Country",
            "select countries.cntry_name, countries.CountryId",
            "select distinct countries.cntry_name, car_makers.Id"
        ],
        "select_labels": [
            0.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "countries car_makers",
        "table_candidates": [
            "countries car_makers"
        ],
        "align_scores": [
            0.05873943492770195,
            0.7365346550941467,
            0.5909969210624695,
            0.007710594683885574,
            0.021092254668474197,
            0.04088588058948517,
            0.031729232519865036,
            0.0012131239054724574
        ],
        "align_select": "select countries.cntry_name, car_makers.Id",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the names and ids of all countries with at least one car maker?",
        "gold_select": "select countries.cntry_name, countries.CountryId",
        "select_candidates": [
            "select countries.cntry_name, countries.CountryId",
            "select distinct countries.cntry_name, countries.CountryId",
            "select count(*), countries.cntry_name, countries.CountryId",
            "select at least countries.cntry_name, countries.CountryId"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "countries car_makers",
        "table_candidates": [
            "countries car_makers"
        ],
        "align_scores": [
            0.1514713317155838,
            0.3228965699672699,
            0.03057379461824894,
            0.0007504459354095161,
            0.0004283165908418596,
            0.0003609553095884621,
            0.08720231801271439,
            0.00568813644349575
        ],
        "align_select": "select countries.cntry_name, countries.CountryId",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "Which countries in europe have at least 3 car manufacturers?",
        "gold_select": "select countries.cntry_name",
        "select_candidates": [
            "select countries.cntry_name",
            "select countries.cntry_name, continents.Continent",
            "select countries.cntry_name, continents.ContId",
            "select countries.cntry_name, t0.c2"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY-HAVING",
            "SELECT-FROM-WHERE-GROUP BY-HAVING-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "continents countries car_makers",
        "table_candidates": [
            "continents countries car_makers",
            "countries car_makers"
        ],
        "align_scores": [
            0.950795590877533,
            0.00010470331471879035,
            0.0005431845784187317,
            7.94993611634709e-05,
            0.002184706972911954,
            9.670168947195634e-05,
            0.00030114041874185205,
            7.43391938158311e-05
        ],
        "align_select": "select countries.cntry_name",
        "align_structure": "SELECT-FROM-WHERE-GROUP BY-HAVING"
    },
    {
        "question": "What are the names of all European countries with at least 3 manufacturers?",
        "gold_select": "select countries.cntry_name",
        "select_candidates": [
            "select countries.cntry_name",
            "select countries.cntry_name, t0.c2",
            "select countries.cntry_name, continents.ContId",
            "select countries.cntry_name, continents.Continent"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY-HAVING",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "continents countries car_makers",
        "table_candidates": [
            "continents countries car_makers",
            "countries car_makers",
            "continents car_makers",
            "continents countries"
        ],
        "align_scores": [
            0.9750188589096069,
            0.00018683740927372128,
            0.00033166035427711904,
            0.00011955228546867147,
            0.0008792977896519005,
            0.00015200214693322778,
            0.0007356237038038671,
            0.00014298103633336723
        ],
        "align_select": "select countries.cntry_name",
        "align_structure": "SELECT-FROM-WHERE-GROUP BY-HAVING"
    },
    {
        "question": "What are the name of the countries where there is not a single car maker?",
        "gold_select": "select countries.cntry_name",
        "select_candidates": [
            "select countries.cntry_name",
            "select countries.cntry_name, car_makers.Country",
            "select countries.cntry_name, countries.CountryId",
            "select countries.cntry_name, countries.Continent"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "countries car_makers",
        "table_candidates": [
            "countries car_makers",
            "countries",
            "countries car_makers model_list"
        ],
        "align_scores": [
            0.6853746175765991,
            0.9228901267051697,
            0.0006847509066574275,
            0.000646876753307879,
            0.00041345067438669503,
            0.0004896644968539476,
            0.0003757139202207327,
            0.0006771632470190525
        ],
        "align_select": "select countries.cntry_name",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM"
    },
    {
        "question": "What are the names of the countries with no car makers?",
        "gold_select": "select countries.cntry_name",
        "select_candidates": [
            "select countries.cntry_name",
            "select countries.cntry_name, countries.CountryId",
            "select countries.cntry_name, countries.Continent",
            "select countries.cntry_name, car_makers.Country"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "countries car_makers",
        "table_candidates": [
            "countries",
            "countries car_makers"
        ],
        "align_scores": [
            0.6247102618217468,
            0.9387193322181702,
            0.0003269621229264885,
            0.0003619587514549494,
            0.0003130733675789088,
            0.0005795523757115006,
            0.0003990905825048685,
            0.000601876643486321
        ],
        "align_select": "select countries.cntry_name",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM"
    },
    {
        "question": "What are the id and names of the countries which have more than 3 car makers or produce the 'fiat' model?",
        "gold_select": "select countries.CountryId, countries.cntry_name",
        "select_candidates": [
            "select countries.CountryId, countries.cntry_name",
            "select car_makers.Id, countries.cntry_name",
            "select car_names.Model, countries.CountryId, countries.cntry_name",
            "select countries.CountryId, countries.cntry_name, car_makers.Country"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "countries car_makers model_list",
        "table_candidates": [
            "countries car_makers model_list car_names",
            "countries car_makers model_list",
            "countries car_makers car_names",
            "countries car_makers"
        ],
        "align_scores": [
            0.6226986050605774,
            0.028424683958292007,
            0.9795188307762146,
            0.025976160541176796,
            0.00023441907251253724,
            0.00013975355250295252,
            0.0004390614340081811,
            0.00024044357996899635
        ],
        "align_select": "select car_makers.Id, countries.cntry_name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the ids and names of all countries that either have more than 3 car makers or produce fiat model?",
        "gold_select": "select countries.CountryId, countries.cntry_name",
        "select_candidates": [
            "select countries.CountryId, countries.cntry_name",
            "select car_makers.Id, countries.cntry_name",
            "select car_names.Model, countries.CountryId, countries.cntry_name",
            "select countries.CountryId, countries.cntry_name, car_makers.Country"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "countries car_makers model_list",
        "table_candidates": [
            "countries car_makers model_list car_names",
            "countries car_makers model_list",
            "countries model_list car_names"
        ],
        "align_scores": [
            0.38814565539360046,
            0.611488401889801,
            0.5821840763092041,
            0.9613460898399353,
            0.00023584577138535678,
            0.00029257204732857645,
            0.00045508702169172466,
            0.0005453588091768324
        ],
        "align_select": "select car_makers.Id, countries.cntry_name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-WHERE"
    },
    {
        "question": "Which country does Airline \"JetBlue Airways\" belong to?",
        "gold_select": "select airlines.cntry",
        "select_candidates": [
            "select airlines.cntry",
            "select airlines.cntry, airlines.abbr",
            "select airlines.cntry, t0.c4",
            "select airlines.cntry, airlines.air"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines",
        "table_candidates": [
            "airlines",
            "airlines airports"
        ],
        "align_scores": [
            0.9162126183509827,
            0.00019699388940352947,
            0.00037768547190353274,
            8.716621232451871e-05,
            0.000419615680584684,
            7.975480548338965e-05,
            0.00020774498989339918,
            7.765938062220812e-05
        ],
        "align_select": "select airlines.cntry",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What country is Jetblue Airways affiliated with?",
        "gold_select": "select airlines.cntry",
        "select_candidates": [
            "select airlines.cntry",
            "select airlines.cntry, airports.CountryAbbrev",
            "select airlines.air, airlines.cntry",
            "select airlines.cntry, airlines.abbr"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines",
        "table_candidates": [
            "airlines",
            "airlines airports"
        ],
        "align_scores": [
            0.5752671360969543,
            0.0001616502704564482,
            0.0006024058093316853,
            9.35832504183054e-05,
            0.000217649809201248,
            6.490623491117731e-05,
            0.00036980619188398123,
            7.94625302660279e-05
        ],
        "align_select": "select airlines.cntry",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the abbreviation of Airline \"JetBlue Airways\"?",
        "gold_select": "select airlines.abbr",
        "select_candidates": [
            "select airlines.abbr",
            "select airlines.air, airlines.abbr",
            "select airlines.uid, airlines.abbr",
            "select airlines.abbr, airlines.air"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines",
        "table_candidates": [
            "airlines"
        ],
        "align_scores": [
            0.9868082404136658,
            0.0002060777333099395,
            0.0002486358571331948,
            8.048428571783006e-05,
            0.00018073695537168533,
            7.488749542972073e-05,
            0.00044243730371817946,
            8.056614024098963e-05
        ],
        "align_select": "select airlines.abbr",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which abbreviation corresponds to Jetblue Airways?",
        "gold_select": "select airlines.abbr",
        "select_candidates": [
            "select airlines.abbr",
            "select airlines.air, airlines.abbr",
            "select airlines.abbr, airlines.air",
            "select jetblue.c2"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines",
        "table_candidates": [
            "airlines"
        ],
        "align_scores": [
            0.9307309985160828,
            0.00010949500574497506,
            0.0002447736624162644,
            6.453642708947882e-05,
            0.0005540276761166751,
            6.762848352082074e-05,
            0.0006005129544064403,
            7.205425936263055e-05
        ],
        "align_select": "select airlines.abbr",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List all airline names and their abbreviations in \"USA\".",
        "gold_select": "select airlines.air, airlines.abbr",
        "select_candidates": [
            "select airlines.air, airlines.abbr",
            "select airlines.air, airlines.abbr,",
            "select airlines.air, airlines.abbr2",
            "select airlines.air, t0.c 2"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines",
        "table_candidates": [
            "airlines"
        ],
        "align_scores": [
            0.9938919544219971,
            0.00020601075084414333,
            0.0012365463189780712,
            7.587240543216467e-05,
            0.1577269434928894,
            0.0001538147625979036,
            0.0004821952315978706,
            9.374563524033874e-05
        ],
        "align_select": "select airlines.air, airlines.abbr",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the airline names and abbreviations for airlines in the USA?",
        "gold_select": "select airlines.air, airlines.abbr",
        "select_candidates": [
            "select airlines.air, airlines.abbr",
            "select avg(airlines.air), airlines.abbr",
            "select airlines.air, airlines.abbr, airlines.cntry",
            "select airlines.air, airlines.abbr, airlines.uid"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines",
        "table_candidates": [
            "airlines"
        ],
        "align_scores": [
            0.9426560997962952,
            0.0002027121081482619,
            0.0005120509304106236,
            9.574494470143691e-05,
            0.00032992238993756473,
            7.301423465833068e-05,
            0.0006307821604423225,
            7.062674558255821e-05
        ],
        "align_select": "select airlines.air, airlines.abbr",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List the airport code and name in the city of Anthony.",
        "gold_select": "select airports.apt_code, airports.apt_name",
        "select_candidates": [
            "select airports.apt_code, airports.apt_name",
            "select apairports.apt_code, apairports.apt_name",
            "select apairports.apt_code, airports.apt_name",
            "select airports.apt_code.c1, airports.apt_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports",
        "table_candidates": [
            "airports"
        ],
        "align_scores": [
            0.9945159554481506,
            9.185302042169496e-05,
            0.9537280797958374,
            9.628779662307352e-05,
            0.011655609123408794,
            7.663548603886738e-05,
            0.0002484917640686035,
            6.435016257455572e-05
        ],
        "align_select": "select airports.apt_code, airports.apt_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give the airport code and airport name corresonding to the city Anthony.",
        "gold_select": "select airports.apt_code, airports.apt_name",
        "select_candidates": [
            "select airports.apt_code, airports.apt_name",
            "select airports.apt_code, airports.apt_name, airports.cntry",
            "select apairports.apt_code, airports.apt_name",
            "select airports.apt_code.c1, airports.apt_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports",
        "table_candidates": [
            "airports"
        ],
        "align_scores": [
            0.9951550960540771,
            0.00010143484541913494,
            0.0002774145395960659,
            6.662891246378422e-05,
            0.010799961164593697,
            7.776714483043179e-05,
            0.0002612067328300327,
            6.700771336909384e-05
        ],
        "align_select": "select airports.apt_code, airports.apt_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which airline has abbreviation 'UAL'?",
        "gold_select": "select airlines.air",
        "select_candidates": [
            "select airlines.air",
            "select airlines.air, airlines.cntry",
            "select airlines.air, airlines.abbr",
            "select airlines.uid, airlines.air"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines",
        "table_candidates": [
            "airlines"
        ],
        "align_scores": [
            0.02253851294517517,
            0.00014410560834221542,
            0.00020400482753757387,
            7.590708264615387e-05,
            0.0002513545041438192,
            7.604916027048603e-05,
            0.000207075965590775,
            7.05134152667597e-05
        ],
        "align_select": "select airlines.air",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give the airline with abbreviation 'UAL'.",
        "gold_select": "select airlines.air",
        "select_candidates": [
            "select airlines.air",
            "select airlines.air, airlines.abbr",
            "select airlines.air, airlines.cntry",
            "select airlines.uid, airlines.air"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines",
        "table_candidates": [
            "airlines"
        ],
        "align_scores": [
            0.02442747727036476,
            8.97687568794936e-05,
            0.00024017663963604718,
            7.158906373661011e-05,
            0.00020227461936883628,
            6.460785516537726e-05,
            0.00017482799012213945,
            6.617130566155538e-05
        ],
        "align_select": "select airlines.air",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many airlines are from USA?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), airlines.cntry",
            "select count(*), airlines.uid",
            "select count(*), airlines.uid3"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines",
        "table_candidates": [
            "airlines"
        ],
        "align_scores": [
            0.9947322607040405,
            6.864317401777953e-05,
            0.0002606345806270838,
            5.34739883732982e-05,
            0.00026732016704045236,
            5.709958713850938e-05,
            0.00036789191653952,
            6.025351831340231e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the number of airlines in the USA.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), airlines.cntry",
            "select count(*), airlines.cntry, airlines.abbr",
            "select count(*), airlines.cntry, t0.c4"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines",
        "table_candidates": [
            "airlines"
        ],
        "align_scores": [
            0.9954919815063477,
            0.0005250831018202007,
            0.00023726759536657482,
            0.00011055823415517807,
            0.00011399144568713382,
            8.437253563897684e-05,
            0.0001774469274096191,
            8.28104602987878e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which city and country is the Alton airport at?",
        "gold_select": "select airports.City, airports.cntry",
        "select_candidates": [
            "select airports.City, airports.cntry",
            "select airports.City, airports.cntry, airports.CountryAbbrev",
            "select airports.City, airports.CountryAbbrev",
            "select airports.City, airports.apt_name, airports.cntry, airports.CountryAbbrev"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports",
        "table_candidates": [
            "airports"
        ],
        "align_scores": [
            0.9948090314865112,
            0.0002911215415224433,
            0.0010050366399809718,
            7.341911987168714e-05,
            0.9935187697410583,
            0.00017572229262441397,
            0.00018718637875281274,
            7.684814772801474e-05
        ],
        "align_select": "select airports.City, airports.cntry",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give the city and country for the Alton airport.",
        "gold_select": "select airports.City, airports.cntry",
        "select_candidates": [
            "select airports.City, airports.cntry",
            "select airports.City, airports.cntry, airports.CountryAbbrev",
            "select airports.City, airports.CountryAbbrev",
            "select airports.City, airports.cntry), airports.CountryAbbrev"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports",
        "table_candidates": [
            "airports"
        ],
        "align_scores": [
            0.9954978227615356,
            0.00031156197655946016,
            0.00043336450471542776,
            6.588066025869921e-05,
            0.9946526288986206,
            0.0001717032864689827,
            0.00018745606939774007,
            6.279044464463368e-05
        ],
        "align_select": "select airports.City, airports.cntry",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the airport name for airport 'AKO'?",
        "gold_select": "select airports.apt_name",
        "select_candidates": [
            "select airports.apt_name",
            "select avg(airports.apt_name)",
            "select aplairports.apt_name",
            "select airports.apt_name, airports.cntry"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports",
        "table_candidates": [
            "airports"
        ],
        "align_scores": [
            0.9940007328987122,
            0.00011274350981693715,
            0.0006442618905566633,
            5.775169120170176e-05,
            0.5908523797988892,
            0.00012837354734074324,
            0.00022014220303390175,
            6.899802247062325e-05
        ],
        "align_select": "select airports.apt_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the name of the airport with code 'AKO'.",
        "gold_select": "select airports.apt_name",
        "select_candidates": [
            "select airports.apt_name",
            "select aph1.c2",
            "select aplairports.apt_name",
            "select apsairports.apt_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports",
        "table_candidates": [
            "airports"
        ],
        "align_scores": [
            0.9939382076263428,
            0.00013261813728604466,
            0.0005750585114583373,
            8.348322444362566e-05,
            0.34757164120674133,
            0.0001477954792790115,
            0.6454028487205505,
            0.00014256691792979836
        ],
        "align_select": "select airports.apt_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are airport names at City 'Aberdeen'?",
        "gold_select": "select airports.apt_name",
        "select_candidates": [
            "select airports.apt_name",
            "select airports.apt_name, airports.apt_code",
            "select airports.apt_name, airports.cntry",
            "select airports.apt_name, airports.apt_code, airports.cntry"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports",
        "table_candidates": [
            "airports"
        ],
        "align_scores": [
            0.9953824877738953,
            0.00014057151565793902,
            0.00024035372189246118,
            6.746139115421101e-05,
            0.00021600666514132172,
            7.249244663398713e-05,
            0.00014340160123538226,
            6.933427357580513e-05
        ],
        "align_select": "select airports.apt_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of airports in Aberdeen?",
        "gold_select": "select airports.apt_name",
        "select_candidates": [
            "select airports.apt_name",
            "select airports.apt_name, airports.cntry",
            "select airports.apt_name, airports.apt_code",
            "select ap_airports.apt_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports",
        "table_candidates": [
            "airports"
        ],
        "align_scores": [
            0.9943922162055969,
            0.0001388854143442586,
            0.00028010361711494625,
            7.199998799478635e-05,
            0.0003498470759950578,
            5.972669168841094e-05,
            0.995858371257782,
            0.00013484778173733503
        ],
        "align_select": "select airports.apt_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many flights depart from 'APG'?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), airports.apt_code",
            "select count(distinct flights.FlightNo)",
            "select count(departures)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "flights",
        "table_candidates": [
            "airports flights"
        ],
        "align_scores": [
            0.9959380626678467,
            0.0001340210874332115,
            0.00027803360717371106,
            0.0001515095791546628,
            0.004394860006868839,
            8.514442015439272e-05,
            0.9209997057914734,
            0.00012476276606321335
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Count the number of flights departing from 'APG'.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), airports.apt_code",
            "select count(distinct flights.FlightNo)",
            "select count(*), airports.City"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "flights",
        "table_candidates": [
            "airports flights"
        ],
        "align_scores": [
            0.9958303570747375,
            0.00011318903125356883,
            0.00024925771867856383,
            0.0001488668640377,
            0.001561528304591775,
            8.086293382802978e-05,
            0.0003872440429404378,
            0.0009535190765745938
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many flights have destination ATO?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), flights.air",
            "select count(*), flights.FlightNo",
            "select count(*), airports.apt_code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "flights",
        "table_candidates": [
            "flights",
            "airports flights",
            "airlines airports flights",
            "airlines flights"
        ],
        "align_scores": [
            0.9950729012489319,
            0.00019657363009173423,
            0.00033289773273281753,
            0.00013459882757160813,
            0.0002647227665875107,
            0.0002954262599814683,
            0.0002808347053360194,
            0.0013720197603106499
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Count the number of flights into ATO.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), flights.air",
            "select count(*), flights.FlightNo",
            "select count(*), flights.srcapt"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "flights",
        "table_candidates": [
            "flights",
            "airports flights",
            "airlines airports flights"
        ],
        "align_scores": [
            0.9801336526870728,
            0.00010939712228719145,
            0.00030813764897175133,
            0.00013969361316412687,
            0.00017925941210705787,
            0.00027394513017497957,
            0.00014225378981791437,
            0.00790745671838522
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many flights depart from City Aberdeen?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(distinct flights.FlightNo)",
            "select count(*), airports.City",
            "select count(flights.FlightNo)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights"
        ],
        "align_scores": [
            0.9956960678100586,
            0.0001549486769363284,
            0.0041637844406068325,
            8.619836444268003e-05,
            0.00021447280596476048,
            0.0007377230213023722,
            0.009391041472554207,
            0.00011573488882277161
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the number of flights departing from Aberdeen.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), airports.City",
            "select count(distinct flights.FlightNo)",
            "select count(flights.FlightNo)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights"
        ],
        "align_scores": [
            0.9956122636795044,
            0.00013118406059220433,
            0.0003008176281582564,
            0.00040345866000279784,
            0.0013719205744564533,
            7.359576557064429e-05,
            0.008027797564864159,
            9.558730380376801e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many flights arriving in Aberdeen city?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), airports.City",
            "select count(avg(flights.FlightNo)",
            "select count(flights.FlightNo)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights",
            "airlines airports flights"
        ],
        "align_scores": [
            0.9959361553192139,
            0.00016819570737425238,
            0.0002130696811946109,
            0.0006460629520006478,
            0.0002694467839319259,
            0.0001042337971739471,
            0.0015071320813149214,
            0.0001178373713628389
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the number of flights arriving in Aberdeen.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), airports.City",
            "select count(avg(flights.FlightNo)",
            "select count(flights.FlightNo)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights",
            "airlines airports flights"
        ],
        "align_scores": [
            0.9956936836242676,
            0.00014720798935741186,
            0.00027529223007149994,
            0.0003211100120097399,
            0.00021227158140391111,
            9.037006384460256e-05,
            0.0011604584287852049,
            0.00010028869292000309
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many flights depart from City 'Aberdeen' and have destination City 'Ashley'?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), airports.City, airports.apt_name",
            "select count(*), airports.City",
            "select count(*), airports.City (Aberdeen, airports.apt_name)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights"
        ],
        "align_scores": [
            0.9948039650917053,
            0.03101499378681183,
            0.00012817661627195776,
            9.419942216482013e-05,
            0.00023933450574986637,
            0.0002912362106144428,
            0.0002093287039315328,
            0.00013197577209211886
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many flights fly from Aberdeen to Ashley?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), airports.City, airports.apt_name",
            "select count(*), airports.City (Aberdeen), airports.apt_name",
            "select count(*), airports.City (Aberdeen, airports.apt_name)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights"
        ],
        "align_scores": [
            0.9955410361289978,
            8.609141514170915e-05,
            0.00012082268222002313,
            5.6095930631272495e-05,
            0.00015800051914993674,
            6.604829832213e-05,
            0.0002087538450723514,
            6.9069916207809e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many flights does airline 'JetBlue Airways' have?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), airlines.air",
            "select count(*), airlines.air, airlines.cntry",
            "select count(*), airlines.air, airlines.abbr"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines flights",
            "airlines airports flights"
        ],
        "align_scores": [
            0.9957541227340698,
            0.00022261004778556526,
            0.00036000748514197767,
            0.00040856568375602365,
            0.0001370124373352155,
            9.969597886083648e-05,
            0.00014999222184997052,
            0.00010113727330463007
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give the number of Jetblue Airways flights.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), airlines.air",
            "select count(*), airlines.air, flights.FlightNo",
            "select count(*), airlines.air, flights.air"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines flights",
            "airlines airports flights"
        ],
        "align_scores": [
            0.9959684610366821,
            0.0002755361783783883,
            0.0002935418451670557,
            0.0030598598532378674,
            0.0001272040099138394,
            0.00011216327402507886,
            0.0001378495362587273,
            0.0001072782397386618
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many 'United Airlines' flights go to Airport 'ASY'?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), airlines.air",
            "select count(*), airlines.air, airports.apt_code",
            "select count(*), airports.apt_code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines airports flights",
            "airlines airports airports flights"
        ],
        "align_scores": [
            0.993281364440918,
            0.00022108116536401212,
            0.00033363769762218,
            0.0002795188338495791,
            0.0002386488631600514,
            0.00010421114711789414,
            0.0003077325236517936,
            0.00041253314702771604
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Count the number of United Airlines flights arriving in ASY Airport.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), airlines.air",
            "select count(*), airlines.air, airports.apt_code",
            "select count(distinct flights.FlightNo)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines airports flights"
        ],
        "align_scores": [
            0.9826706051826477,
            0.0001843296631705016,
            0.000251303194090724,
            0.0007933559827506542,
            0.00011720387556124479,
            0.00011003740655723959,
            0.0009095974965021014,
            9.643105295253918e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many 'United Airlines' flights depart from Airport 'AHD'?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), airports.apt_code",
            "select count(*), airlines.air",
            "select count(distinct flights.FlightNo)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines airports flights"
        ],
        "align_scores": [
            0.9949435591697693,
            0.00022214655473362654,
            0.0003332781489007175,
            0.0002256358857266605,
            0.0003363463911227882,
            0.0006693064933642745,
            0.010302415117621422,
            0.00012658086779993027
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the number of United Airlines flights leaving from AHD Airport.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), airlines.air",
            "select count(*), airlines.air, airports.apt_code",
            "select count(distinct flights.FlightNo)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines airports flights"
        ],
        "align_scores": [
            0.9861131310462952,
            0.0001793483243091032,
            0.00031195010524243116,
            0.001173855154775083,
            0.00013187399599701166,
            9.56480362219736e-05,
            0.001182745210826397,
            9.441371366847306e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many United Airlines flights go to City 'Aberdeen'?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), airlines.air",
            "select count(*), airlines.air, airports.City",
            "select count(*), airlines.air, airports.City"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines airports flights",
        "table_candidates": [
            "airlines airports flights",
            "airlines airports airports flights"
        ],
        "align_scores": [
            0.9951984286308289,
            0.0001879046903923154,
            0.0003483522741589695,
            0.00047426330274902284,
            0.0001816434523789212,
            0.00010298637062078342,
            0.0001816434523789212,
            0.00010298637062078342
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Count the number of United Airlines flights that arrive in Aberdeen.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), airlines.air",
            "select count(*), airlines.air, airports.City",
            "select count(distinct flights.FlightNo)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines airports flights",
        "table_candidates": [
            "airlines airports flights",
            "airlines airports airports flights"
        ],
        "align_scores": [
            0.9947240948677063,
            0.00024097140703815967,
            0.00032594631193205714,
            0.000988475396297872,
            0.0001464280649088323,
            9.33134215301834e-05,
            0.0010971977608278394,
            9.895078983390704e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which city has most number of arriving flights?",
        "gold_select": "select airports.City",
        "select_candidates": [
            "select airports.City",
            "select airports.City, airports.apt_name",
            "select airports.City, flights.destapt",
            "select airports.City, flights.srcapt"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights"
        ],
        "align_scores": [
            0.992913544178009,
            5.990580393699929e-05,
            0.0003225490509066731,
            5.8549434470478445e-05,
            0.0006376899546012282,
            5.7837172789731994e-05,
            0.0010225498117506504,
            6.427846528822556e-05
        ],
        "align_select": "select airports.City",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Which city has the most frequent destination airport?",
        "gold_select": "select airports.City",
        "select_candidates": [
            "select airports.City",
            "select airports.City, airports.apt_name",
            "select airports.City, flights.destapt",
            "select airports.City, airports.apt_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights"
        ],
        "align_scores": [
            0.9944097399711609,
            6.858540291432291e-05,
            0.0005679007736034691,
            6.736625073244795e-05,
            0.0016947694821283221,
            6.72441819915548e-05,
            0.0005679007736034691,
            6.736625073244795e-05
        ],
        "align_select": "select airports.City",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Which city has most number of departing flights?",
        "gold_select": "select airports.City",
        "select_candidates": [
            "select airports.City",
            "select airports.City, airports.apt_name",
            "select airports.City, flights.destapt",
            "select airports.City, airports.apt_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights"
        ],
        "align_scores": [
            0.9925544857978821,
            6.0049591411370784e-05,
            0.00032616883981972933,
            5.918466194998473e-05,
            0.0017170688370242715,
            6.43203966319561e-05,
            0.00032616883981972933,
            5.918466194998473e-05
        ],
        "align_select": "select airports.City",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Which city is the most frequent source airport?",
        "gold_select": "select airports.City",
        "select_candidates": [
            "select airports.City",
            "select airports.City, airports.apt_name",
            "select airports.City, airports.apt_name, airports.cntry",
            "select airports.City, airports.apt_code, airports.apt_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights",
            "airlines airports flights"
        ],
        "align_scores": [
            0.9954745173454285,
            6.0119902627775446e-05,
            0.0004149506858084351,
            6.318139639915898e-05,
            0.00022956142493057996,
            6.504180782940239e-05,
            0.000275868660537526,
            6.343689892673865e-05
        ],
        "align_select": "select airports.City",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the code of airport that has the highest number of flights?",
        "gold_select": "select airports.apt_code",
        "select_candidates": [
            "select airports.apt_code",
            "select airports.apt_code, airports.apt_name",
            "select airports.apt_code, flights.destapt",
            "select airports.apt_code, flights.srcapt"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights"
        ],
        "align_scores": [
            0.9901725053787231,
            7.475292659364641e-05,
            0.006095995660871267,
            8.50265278131701e-05,
            0.00029158181860111654,
            6.331747135845944e-05,
            0.001616985653527081,
            7.665521843591705e-05
        ],
        "align_select": "select airports.apt_code",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the airport code of the airport with the most flights?",
        "gold_select": "select airports.apt_code",
        "select_candidates": [
            "select airports.apt_code",
            "select airports.apt_name",
            "select airports.apt_code, airports.apt_name",
            "select airports.apt_code APT_GROUP BY-ORDER BY-LIMIT"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights"
        ],
        "align_scores": [
            0.9906550049781799,
            8.523003634763882e-05,
            0.7327782511711121,
            0.00010085874237120152,
            0.004968908149749041,
            6.743386620655656e-05,
            0.002401220379397273,
            9.58081436692737e-05
        ],
        "align_select": "select airports.apt_code",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the code of airport that has fewest number of flights?",
        "gold_select": "select airports.apt_code",
        "select_candidates": [
            "select airports.apt_code",
            "select airports.apt_code, airports.apt_name",
            "select airports.apt_code, flights.destapt",
            "select airports.apt_code, flights.srcapt"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights"
        ],
        "align_scores": [
            0.990952730178833,
            7.119992369553074e-05,
            0.006423977203667164,
            7.293045200640336e-05,
            0.00027955908444710076,
            5.718829925172031e-05,
            0.0012066323542967439,
            6.721577665302902e-05
        ],
        "align_select": "select airports.apt_code",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Give the code of the airport with the least flights.",
        "gold_select": "select airports.apt_code",
        "select_candidates": [
            "select airports.apt_code",
            "select airports.apt_code, airports.apt_name",
            "select airports.apt_code IATA-AFTER-GROUP BY-ORDER BY-LIMIT",
            "select airports.apt_code IATA-AFTER-GROUP BY-ORDER BY-LIMIT-INTERSECT-ORDER BY-LIMIT"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights"
        ],
        "align_scores": [
            0.9941860437393188,
            7.491199357900769e-05,
            0.004548485856503248,
            6.0409485740819946e-05,
            0.0006576928426511586,
            9.592982678441331e-05,
            0.00018227743566967547,
            0.00019316270481795073
        ],
        "align_select": "select airports.apt_code",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Which airline has most number of flights?",
        "gold_select": "select airlines.air",
        "select_candidates": [
            "select airlines.air",
            "select airlines.air, airlines.cntry",
            "select airlines.air, airlines.abbr",
            "select airlines.air, flights.srcapt"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines flights"
        ],
        "align_scores": [
            0.9648241996765137,
            5.637802314595319e-05,
            0.0032320404425263405,
            5.521544881048612e-05,
            0.00793966930359602,
            6.778498936910182e-05,
            0.0007923035300336778,
            5.624516779789701e-05
        ],
        "align_select": "select airlines.air",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What airline serves the most flights?",
        "gold_select": "select airlines.air",
        "select_candidates": [
            "select airlines.air",
            "select airlines.air, airlines.cntry",
            "select airlines.air, airlines.abbr",
            "select airlines.air, flights.srcapt"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines flights"
        ],
        "align_scores": [
            0.9802573323249817,
            5.428020813269541e-05,
            0.0027556822169572115,
            5.808285277453251e-05,
            0.010631615296006203,
            6.66727646603249e-05,
            0.000995972310192883,
            5.522366700461134e-05
        ],
        "align_select": "select airlines.air",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Find the abbreviation and country of the airline that has fewest number of flights?",
        "gold_select": "select airlines.abbr, airlines.cntry",
        "select_candidates": [
            "select airlines.abbr, airlines.cntry",
            "select airlines.air, airlines.abbr, airlines.cntry",
            "select airlines.air, airlines.cntry",
            "select airlines.cntry, airlines.abbr"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines flights"
        ],
        "align_scores": [
            0.9919582605361938,
            8.774063462624326e-05,
            0.003423923859372735,
            9.804291767068207e-05,
            0.9863030314445496,
            9.578548633726314e-05,
            0.9919865131378174,
            9.04741245904006e-05
        ],
        "align_select": "select airlines.abbr, airlines.cntry",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the abbreviation of the airilne has the fewest flights and what country is it in?",
        "gold_select": "select airlines.abbr, airlines.cntry",
        "select_candidates": [
            "select airlines.abbr, airlines.cntry",
            "select airlines.air, airlines.abbr, airlines.cntry",
            "select airlines.uid, airlines.abbr, airlines.cntry",
            "select flights.FlightNo, airlines.abbr, airlines.cntry"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines flights",
            "airlines airports flights"
        ],
        "align_scores": [
            0.9900864958763123,
            0.000100505436421372,
            0.0014114361256361008,
            8.95799312274903e-05,
            0.0013170192250981927,
            7.408302190015092e-05,
            0.0008218701113946736,
            8.706087828613818e-05
        ],
        "align_select": "select airlines.abbr, airlines.cntry",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What are airlines that have some flight departing from airport 'AHD'?",
        "gold_select": "select airlines.air",
        "select_candidates": [
            "select airlines.air",
            "select airlines.air, airlines.abbr",
            "select airlines.air, airlines.cntry",
            "select distinct airlines.air, airlines.abbr"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines airports flights"
        ],
        "align_scores": [
            0.779681921005249,
            0.004815638065338135,
            0.0003817658289335668,
            0.000143106808536686,
            0.00039637452573515475,
            0.00016147310088854283,
            0.0006307461299002171,
            9.397629037266597e-05
        ],
        "align_select": "select airlines.air",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which airlines have a flight with source airport AHD?",
        "gold_select": "select airlines.air",
        "select_candidates": [
            "select airlines.air",
            "select airlines.air, airlines.abbr",
            "select airlines.air, airlines.cntry",
            "select distinct airlines.air"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines airports flights"
        ],
        "align_scores": [
            0.7113634347915649,
            0.0007827929221093655,
            0.00036866904702037573,
            0.00011649611406028271,
            0.0004536079941317439,
            0.0001398212625645101,
            0.3889181911945343,
            0.0005837361677549779
        ],
        "align_select": "select airlines.air",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are airlines that have flights arriving at airport 'AHD'?",
        "gold_select": "select airlines.air",
        "select_candidates": [
            "select airlines.air",
            "select airlines.air, airlines.abbr",
            "select airlines.air, airlines.cntry",
            "select distinct airlines.air, airlines.abbr"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines airports flights"
        ],
        "align_scores": [
            0.6247303485870361,
            0.005476123653352261,
            0.0003369577752891928,
            0.00013385608326643705,
            0.00043304034625180066,
            0.0001617782691027969,
            0.0004956920747645199,
            9.950802632374689e-05
        ],
        "align_select": "select airlines.air",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which airlines have a flight with destination airport AHD?",
        "gold_select": "select airlines.air",
        "select_candidates": [
            "select airlines.air",
            "select airlines.air, airlines.abbr",
            "select airlines.air, airlines.cntry",
            "select distinct airlines.air"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines airports flights"
        ],
        "align_scores": [
            0.855359673500061,
            0.002687897300347686,
            0.0003088564844802022,
            0.00012652283476199955,
            0.0004208158061373979,
            0.00016303849406540394,
            0.3628523051738739,
            0.0011304731015115976
        ],
        "align_select": "select airlines.air",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find all airlines that have flights from both airports 'APG' and 'CVO'.",
        "gold_select": "select airlines.air",
        "select_candidates": [
            "select airlines.air",
            "select airlines.abbr",
            "select airlines.uid",
            "select airlines.air, airlines.abbr"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines airports flights"
        ],
        "align_scores": [
            0.9873955845832825,
            0.9873955845832825,
            0.9910869002342224,
            0.9910869002342224,
            0.9949101805686951,
            0.9949101805686951,
            0.0003819558769464493,
            0.0003819558769464493
        ],
        "align_select": "select airlines.air",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "Which airlines have departing flights from both APG and CVO airports?",
        "gold_select": "select airlines.air",
        "select_candidates": [
            "select airlines.air",
            "select airlines.air, airlines.abbr",
            "select airlines.air, airlines.cntry",
            "select airlines.air, airports.apt_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines airports flights"
        ],
        "align_scores": [
            0.962900698184967,
            0.962900698184967,
            0.00040801201248541474,
            0.00040801201248541474,
            0.00034891278482973576,
            0.00034891278482973576,
            0.0006495289271697402,
            0.0006495289271697402
        ],
        "align_select": "select airlines.air",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "Find all airlines that have flights from airport 'CVO' but not from 'APG'.",
        "gold_select": "select airlines.air",
        "select_candidates": [
            "select airlines.air",
            "select airlines.air, airlines.abbr",
            "select airlines.air, airlines.cntry",
            "select airlines.uid"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines airports flights"
        ],
        "align_scores": [
            0.9854034185409546,
            0.9854034185409546,
            0.0004547301505226642,
            0.0004547301505226642,
            0.00047212393837980926,
            0.00047212393837980926,
            0.9925991296768188,
            0.9925991296768188
        ],
        "align_select": "select airlines.air",
        "align_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "Which airlines have departures from CVO but not from APG airports?",
        "gold_select": "select airlines.air",
        "select_candidates": [
            "select airlines.air",
            "select airlines.air, airlines.abbr",
            "select airlines.uid",
            "select airlines.air, airlines.cntry"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines airports flights"
        ],
        "align_scores": [
            0.9669302105903625,
            0.9669302105903625,
            0.0005769047420471907,
            0.0005769047420471907,
            0.9833977222442627,
            0.9833977222442627,
            0.0004601081018336117,
            0.0004601081018336117
        ],
        "align_select": "select airlines.air",
        "align_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "Find all airlines that have at least 10 flights.",
        "gold_select": "select airlines.air",
        "select_candidates": [
            "select airlines.air",
            "select airlines.air, airlines.cntry",
            "select airlines.air, flights.air",
            "select airlines.air, airlines.abbr"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines flights"
        ],
        "align_scores": [
            0.9458267092704773,
            0.0001236775133293122,
            0.0011672620894387364,
            6.51260997983627e-05,
            0.000872679753229022,
            6.343477434711531e-05,
            0.0026193619705736637,
            8.278526365756989e-05
        ],
        "align_select": "select airlines.air",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Which airlines have at least 10 flights?",
        "gold_select": "select airlines.air",
        "select_candidates": [
            "select airlines.air",
            "select airlines.air, airlines.cntry",
            "select airlines.air, airlines.abbr",
            "select airlines.uid, airlines.air"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines flights"
        ],
        "align_scores": [
            0.8693066239356995,
            0.00013585433771368116,
            0.001888655824586749,
            7.732994708931074e-05,
            0.008934635668992996,
            9.94908477878198e-05,
            0.00035979924723505974,
            8.431503374595195e-05
        ],
        "align_select": "select airlines.air",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Find all airlines that have fewer than 200 flights.",
        "gold_select": "select airlines.air",
        "select_candidates": [
            "select airlines.air",
            "select airlines.air, airlines.abbr",
            "select airlines.air, airlines.cntry",
            "select airlines.air, flights.air"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines flights"
        ],
        "align_scores": [
            0.8970091342926025,
            0.00038465403486043215,
            0.0019977535121142864,
            0.00012332422193139791,
            0.0007511660223826766,
            7.074308814480901e-05,
            0.0006644820678047836,
            6.873861275380477e-05
        ],
        "align_select": "select airlines.air",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Which airlines have less than 200 flights?",
        "gold_select": "select airlines.air",
        "select_candidates": [
            "select airlines.air",
            "select airlines.air, airlines.abbr",
            "select airlines.air, airlines.cntry",
            "select airlines.uid, airlines.air"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines flights"
        ],
        "align_scores": [
            0.7566782236099243,
            0.0005421019741334021,
            0.00582280196249485,
            0.00017731872503645718,
            0.0013565716799348593,
            8.4596176748164e-05,
            0.00045520116691477597,
            9.788933675736189e-05
        ],
        "align_select": "select airlines.air",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are flight numbers of Airline \"United Airlines\"?",
        "gold_select": "select flights.FlightNo",
        "select_candidates": [
            "select flights.FlightNo",
            "select flights.air, flights.FlightNo",
            "select flights.FlightNo, airlines.cntry",
            "select flights.FlightNo, airlines.abbr"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines flights",
            "airlines airports flights"
        ],
        "align_scores": [
            0.9946150183677673,
            0.0002876225335057825,
            0.00017915040371008217,
            7.678237307118252e-05,
            0.00025737154646776617,
            8.039062959142029e-05,
            0.00027614261489361525,
            8.802246156847104e-05
        ],
        "align_select": "select flights.FlightNo",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which flight numbers correspond to United Airlines flights?",
        "gold_select": "select flights.FlightNo",
        "select_candidates": [
            "select flights.FlightNo",
            "select distinct flights.FlightNo",
            "select flights.air, flights.FlightNo",
            "select flights.FlightNo, airlines.cntry"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines flights",
            "airlines airports flights"
        ],
        "align_scores": [
            0.9935764670372009,
            0.10797977447509766,
            0.03115139901638031,
            0.0002328535047126934,
            0.0002072972129099071,
            8.903293928597122e-05,
            0.00037704440183006227,
            0.0001444401714252308
        ],
        "align_select": "select flights.FlightNo",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are flight numbers of flights departing from Airport \"APG\"?",
        "gold_select": "select flights.FlightNo",
        "select_candidates": [
            "select flights.FlightNo",
            "select flights.FlightNo, airports.apt_name",
            "select flights.air, flights.FlightNo",
            "select flights.FlightNo, flights.srcapt"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "flights",
        "table_candidates": [
            "airports flights"
        ],
        "align_scores": [
            0.9953077435493469,
            0.0001876973401522264,
            0.00017673434922471642,
            6.097889126976952e-05,
            0.0001696627732599154,
            7.215051300590858e-05,
            0.00014024456322658807,
            6.759366806363687e-05
        ],
        "align_select": "select flights.FlightNo",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give the flight numbers of flights leaving from APG.",
        "gold_select": "select flights.FlightNo",
        "select_candidates": [
            "select flights.FlightNo",
            "select flights.FlightNo, flights.srcapt",
            "select flights.air, flights.FlightNo",
            "select flights.FlightNo, airports.apt_code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "flights",
        "table_candidates": [
            "airports flights",
            "flights",
            "airlines airports flights",
            "airlines flights"
        ],
        "align_scores": [
            0.990564227104187,
            8.05582239991054e-05,
            0.0001480529026594013,
            5.543629958992824e-05,
            0.0002049768081633374,
            5.9926889662165195e-05,
            0.00020169031631667167,
            6.014094105921686e-05
        ],
        "align_select": "select flights.FlightNo",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are flight numbers of flights arriving at Airport \"APG\"?",
        "gold_select": "select flights.FlightNo",
        "select_candidates": [
            "select flights.FlightNo",
            "select flights.air, flights.FlightNo",
            "select flights.FlightNo, airports.apt_name",
            "select flights.FlightNo, flights.srcapt"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "flights",
        "table_candidates": [
            "airports flights"
        ],
        "align_scores": [
            0.9874100089073181,
            0.0001610416657058522,
            0.0001532046590000391,
            6.892923556733876e-05,
            0.00015419418923556805,
            5.881513425265439e-05,
            0.0001541074743727222,
            6.924778426764533e-05
        ],
        "align_select": "select flights.FlightNo",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give the flight numbers of flights landing at APG.",
        "gold_select": "select flights.FlightNo",
        "select_candidates": [
            "select flights.FlightNo",
            "select flights.air, flights.FlightNo",
            "select flights.FlightNo, flights.srcapt",
            "select flights.FlightNo, flights.destapt"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "flights",
        "table_candidates": [
            "airports flights",
            "flights",
            "airlines airports flights",
            "airlines flights"
        ],
        "align_scores": [
            0.9847153425216675,
            0.0001147416332969442,
            0.0002302216162206605,
            6.422160367947072e-05,
            0.0001516992342658341,
            6.000082794344053e-05,
            0.00013073849549982697,
            5.613623216049746e-05
        ],
        "align_select": "select flights.FlightNo",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are flight numbers of flights departing from City \"Aberdeen \"?",
        "gold_select": "select flights.FlightNo",
        "select_candidates": [
            "select flights.FlightNo",
            "select flights.FlightNo, airports.apt_name",
            "select flights.FlightNo, airports.City",
            "select flights.FlightNo, airports.apt_name, airports.cntry"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights",
            "airlines airports flights"
        ],
        "align_scores": [
            0.9940394163131714,
            0.0001435055601177737,
            0.00014794705202803016,
            5.7715460570761934e-05,
            0.0001754865370457992,
            6.410803325707093e-05,
            0.00012449371570255607,
            6.575675797648728e-05
        ],
        "align_select": "select flights.FlightNo",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give the flight numbers of flights leaving from Aberdeen.",
        "gold_select": "select flights.FlightNo",
        "select_candidates": [
            "select flights.FlightNo",
            "select flights.FlightNo, airports.City",
            "select flights.air, flights.FlightNo",
            "select flights.FlightNo, airports.cntry"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights",
            "airlines airports flights"
        ],
        "align_scores": [
            0.9918286204338074,
            0.0001242067664861679,
            0.00020197128469590098,
            5.4456901125377044e-05,
            0.00018584882491268218,
            6.287438736762851e-05,
            0.00020597479306161404,
            6.0636539274128154e-05
        ],
        "align_select": "select flights.FlightNo",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are flight numbers of flights arriving at City \"Aberdeen\"?",
        "gold_select": "select flights.FlightNo",
        "select_candidates": [
            "select flights.FlightNo",
            "select flights.FlightNo, airports.City",
            "select flights.air, flights.FlightNo",
            "select flights.FlightNo, airports.apt_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights",
            "airlines airports flights"
        ],
        "align_scores": [
            0.9910581111907959,
            0.000125487960758619,
            0.00015841778076719493,
            5.925124423811212e-05,
            0.00016421613690908998,
            6.364582804962993e-05,
            0.00012088871881132945,
            5.502925705513917e-05
        ],
        "align_select": "select flights.FlightNo",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give the flight numbers of flights arriving in Aberdeen.",
        "gold_select": "select flights.FlightNo",
        "select_candidates": [
            "select flights.FlightNo",
            "select flights.FlightNo, airports.City",
            "select flights.air, flights.FlightNo",
            "select flights.FlightNo, airports.cntry"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights",
            "airlines airports flights"
        ],
        "align_scores": [
            0.9853159785270691,
            0.00012457850971259177,
            0.00017304842185694724,
            5.377477646106854e-05,
            0.00017903906700666994,
            6.00437524553854e-05,
            0.00017751650011632591,
            5.647713987855241e-05
        ],
        "align_select": "select flights.FlightNo",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the number of flights landing in the city of Aberdeen or Abilene.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), airports.City",
            "select count(flights.FlightNo)",
            "select count(flights)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights",
            "airlines airports flights"
        ],
        "align_scores": [
            0.993893027305603,
            0.00016658191452734172,
            0.00036688477848656476,
            0.04829047992825508,
            0.0015682149678468704,
            0.00011967409227509052,
            0.633505642414093,
            0.00015842744323890656
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many flights land in Aberdeen or Abilene?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), airports.City",
            "select count(*) aeroports(flights.FlightNo)",
            "select count(flights.FlightNo)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights",
            "airlines airports flights"
        ],
        "align_scores": [
            0.9949042797088623,
            6.928959192009643e-05,
            0.0002676218282431364,
            8.039852400543168e-05,
            0.0003557315212674439,
            7.892845314927399e-05,
            0.0016587835270911455,
            6.92605972290039e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the name of airports which do not have any flight in and out.",
        "gold_select": "select airports.apt_name",
        "select_candidates": [
            "select airports.apt_name",
            "select airports.City, airports.apt_name",
            "select airports.apt_name, airports.cntry",
            "select airports.apt_name, airports.cntry, airports.CountryAbbrev"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports",
            "airports flights"
        ],
        "align_scores": [
            0.6597532629966736,
            0.8267641067504883,
            0.00022160203661769629,
            0.0003867373743560165,
            0.0003836826072074473,
            0.0010583229595795274,
            0.00017000381194520742,
            0.00041857233736664057
        ],
        "align_select": "select airports.apt_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which airports do not have departing or arriving flights?",
        "gold_select": "select airports.apt_name",
        "select_candidates": [
            "select airports.apt_name",
            "select airports.apt_name, airports.cntry",
            "select airports.apt_code, airports.apt_name",
            "select airports.apt_name, airports.apt_code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports",
            "airports flights"
        ],
        "align_scores": [
            0.1747908890247345,
            0.9392671585083008,
            0.002591913565993309,
            0.00645409245043993,
            0.015415183268487453,
            0.17075277864933014,
            0.020978204905986786,
            0.251081258058548
        ],
        "align_select": "select airports.apt_name",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM"
    },
    {
        "question": "Which country does Airline \"JetBlue Airways\" belong to?",
        "gold_select": "select airlines.Country",
        "select_candidates": [
            "select airlines.Country",
            "select airlines.Country, airlines.Abbreviation",
            "select airlines.Country (symbol airlines.Abbreviation)",
            "select airlines.Country, t0.c4"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines",
        "table_candidates": [
            "airlines"
        ],
        "align_scores": [
            0.9937167763710022,
            0.00015018972044344991,
            0.00026596488896757364,
            7.908418774604797e-05,
            0.0017041595419868827,
            8.522548159817234e-05,
            0.00035568111343309283,
            7.581440877402201e-05
        ],
        "align_select": "select airlines.Country",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What country is Jetblue Airways affiliated with?",
        "gold_select": "select airlines.Country",
        "select_candidates": [
            "select airlines.Country",
            "select airlines.Country, airlines.Abbreviation",
            "select airlines.Country, t0.c4",
            "select airlines.Country, airlines.air"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines",
        "table_candidates": [
            "airlines"
        ],
        "align_scores": [
            0.9673209190368652,
            0.00014420018123928457,
            0.0002927372115664184,
            8.270203397842124e-05,
            0.0002989181666634977,
            7.503081724280491e-05,
            0.00019652639457490295,
            6.90504239173606e-05
        ],
        "align_select": "select airlines.Country",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the abbreviation of Airline \"JetBlue Airways\"?",
        "gold_select": "select airlines.Abbreviation",
        "select_candidates": [
            "select airlines.Abbreviation",
            "select airlines.air, airlines.Abbreviation",
            "select airlines.uid, airlines.Abbreviation",
            "select airlines.Abbreviation, airlines.air"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines",
        "table_candidates": [
            "airlines"
        ],
        "align_scores": [
            0.995121419429779,
            0.00013592794130090624,
            0.00021184860088396817,
            7.254153752001002e-05,
            0.0001704950409475714,
            7.291931979125366e-05,
            0.00034034010604955256,
            7.458331674570218e-05
        ],
        "align_select": "select airlines.Abbreviation",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which abbreviation corresponds to Jetblue Airways?",
        "gold_select": "select airlines.Abbreviation",
        "select_candidates": [
            "select airlines.Abbreviation",
            "select airlines.air, airlines.Abbreviation",
            "select airlines.uid, airlines.Abbreviation",
            "select airlines.Abbreviation, airlines.air"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines",
        "table_candidates": [
            "airlines"
        ],
        "align_scores": [
            0.9751989841461182,
            9.154435247182846e-05,
            0.0002148502244381234,
            6.132272392278537e-05,
            0.00016669282922521234,
            6.323492561932653e-05,
            0.0004792695981450379,
            6.481124000856653e-05
        ],
        "align_select": "select airlines.Abbreviation",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List all airline names and their abbreviations in \"USA\".",
        "gold_select": "select airlines.air, airlines.Abbreviation",
        "select_candidates": [
            "select airlines.air, airlines.Abbreviation",
            "select airlines.air, airlines.Abbreviation,",
            "select airlines.air, airlines.Abbreviation2",
            "select airlines.air, airlines.uid2"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines",
        "table_candidates": [
            "airlines"
        ],
        "align_scores": [
            0.9661277532577515,
            0.00019228360906708986,
            0.0011979308910667896,
            7.582540274597704e-05,
            0.01759718358516693,
            0.00015197694301605225,
            0.0011172258527949452,
            7.277033000718802e-05
        ],
        "align_select": "select airlines.air, airlines.Abbreviation",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the airline names and abbreviations for airlines in the USA?",
        "gold_select": "select airlines.air, airlines.Abbreviation",
        "select_candidates": [
            "select airlines.air, airlines.Abbreviation",
            "select avg(airlines.air), airlines.Abbreviation",
            "select airlines.air, airlines.Abbreviation, airlines.Country",
            "select airline airlines.air, airlines.Abbreviation"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines",
        "table_candidates": [
            "airlines"
        ],
        "align_scores": [
            0.054457612335681915,
            0.00017540305270813406,
            0.0005363497184589505,
            9.317114745499566e-05,
            0.00041633390355855227,
            5.879449599888176e-05,
            0.0006132041453383863,
            8.629416697658598e-05
        ],
        "align_select": "select airlines.air, airlines.Abbreviation",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List the airport code and name in the city of Anthony.",
        "gold_select": "select airports.apt_code, airports.apt_name",
        "select_candidates": [
            "select airports.apt_code, airports.apt_name",
            "select apairports.apt_code, apairports.apt_name",
            "select apairports.apt_code, airports.apt_name",
            "select airports.apt_code, airports.apt_name, airports.cntry"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports",
        "table_candidates": [
            "airports"
        ],
        "align_scores": [
            0.9945159554481506,
            9.185302042169496e-05,
            0.9537280797958374,
            9.628779662307352e-05,
            0.011655609123408794,
            7.663548603886738e-05,
            0.00021119494340382516,
            5.6977965869009495e-05
        ],
        "align_select": "select airports.apt_code, airports.apt_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give the airport code and airport name corresonding to the city Anthony.",
        "gold_select": "select airports.apt_code, airports.apt_name",
        "select_candidates": [
            "select airports.apt_code, airports.apt_name",
            "select airports.apt_code, airports.apt_name, airports.cntry",
            "select airports.apt_code.c1, airports.apt_name",
            "select apairports.apt_code, airports.apt_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports",
        "table_candidates": [
            "airports"
        ],
        "align_scores": [
            0.9951550960540771,
            0.00010143484541913494,
            0.0002774145395960659,
            6.662891246378422e-05,
            0.0002612067328300327,
            6.700771336909384e-05,
            0.010799961164593697,
            7.776714483043179e-05
        ],
        "align_select": "select airports.apt_code, airports.apt_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which airline has abbreviation 'UAL'?",
        "gold_select": "select airlines.air",
        "select_candidates": [
            "select airlines.air",
            "select airlines.air, airlines.Abbreviation",
            "select airlines.air, airlines.Country",
            "select airlines.uid, airlines.air"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines",
        "table_candidates": [
            "airlines"
        ],
        "align_scores": [
            0.02253851294517517,
            0.00014410560834221542,
            0.0002300728519912809,
            7.149055454647169e-05,
            0.0001472225849283859,
            6.783063872717321e-05,
            0.000207075965590775,
            7.05134152667597e-05
        ],
        "align_select": "select airlines.air",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give the airline with abbreviation 'UAL'.",
        "gold_select": "select airlines.air",
        "select_candidates": [
            "select airlines.air",
            "select airlines.air, airlines.Abbreviation",
            "select airlines.uid",
            "select airlines.uid, airlines.air"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines",
        "table_candidates": [
            "airlines"
        ],
        "align_scores": [
            0.02442747727036476,
            8.97687568794936e-05,
            0.0002350000140722841,
            6.707944703521207e-05,
            0.007087567821145058,
            7.840737816877663e-05,
            0.00017482799012213945,
            6.617130566155538e-05
        ],
        "align_select": "select airlines.air",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which city and country is the Alton airport at?",
        "gold_select": "select airports.City, airports.cntry",
        "select_candidates": [
            "select airports.City, airports.cntry",
            "select airports.cntry, airports.apt_name",
            "select airports.cntry, airports.City",
            "select airports.cntry, airports.cntry_abbr"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports",
        "table_candidates": [
            "airports"
        ],
        "align_scores": [
            0.9948090314865112,
            0.00028811817173846066,
            0.00048343674279749393,
            0.00019162322860211134,
            0.9953473210334778,
            0.0002023224369622767,
            0.0019956999458372593,
            0.00018662784714251757
        ],
        "align_select": "select airports.City, airports.cntry",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give the city and country for the Alton airport.",
        "gold_select": "select airports.City, airports.cntry",
        "select_candidates": [
            "select airports.City, airports.cntry",
            "select airports.City, airports.cntry)",
            "select airports.City, airports.cntry.",
            "select t1.co, airports.cntry"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports",
        "table_candidates": [
            "airports"
        ],
        "align_scores": [
            0.9954978227615356,
            0.00031156197655946016,
            0.0014744021464139223,
            0.00011869579611811787,
            0.009257848374545574,
            0.00013080958160571754,
            0.0005372492596507072,
            8.579350105719641e-05
        ],
        "align_select": "select airports.City, airports.cntry",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the airport name for airport 'AKO'?",
        "gold_select": "select airports.apt_name",
        "select_candidates": [
            "select airports.apt_name",
            "select avg(airports.apt_name)",
            "select aplairports.apt_name",
            "select airports.apt_name, airports.cntry"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports",
        "table_candidates": [
            "airports"
        ],
        "align_scores": [
            0.9940007328987122,
            0.00011274350981693715,
            0.0006442618905566633,
            5.775169120170176e-05,
            0.5908523797988892,
            0.00012837354734074324,
            0.00022014220303390175,
            6.899802247062325e-05
        ],
        "align_select": "select airports.apt_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the name of the airport with code 'AKO'.",
        "gold_select": "select airports.apt_name",
        "select_candidates": [
            "select airports.apt_name",
            "select aph1.c2",
            "select aplairports.apt_name",
            "select apsairports.apt_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports",
        "table_candidates": [
            "airports"
        ],
        "align_scores": [
            0.9939382076263428,
            0.00013261813728604466,
            0.0005750585114583373,
            8.348322444362566e-05,
            0.34757164120674133,
            0.0001477954792790115,
            0.6454028487205505,
            0.00014256691792979836
        ],
        "align_select": "select airports.apt_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are airport names at City 'Aberdeen'?",
        "gold_select": "select airports.apt_name",
        "select_candidates": [
            "select airports.apt_name",
            "select airports.apt_name, airports.cntry",
            "select avg(airports.apt_name)",
            "select airports.apt_name, airports.apt_code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports",
        "table_candidates": [
            "airports"
        ],
        "align_scores": [
            0.9953824877738953,
            0.00014057151565793902,
            0.00021600666514132172,
            7.249244663398713e-05,
            0.0006257875938899815,
            6.308723823167384e-05,
            0.00024035372189246118,
            6.746139115421101e-05
        ],
        "align_select": "select airports.apt_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of airports in Aberdeen?",
        "gold_select": "select airports.apt_name",
        "select_candidates": [
            "select airports.apt_name",
            "select airports.apt_name, airports.cntry",
            "select ap_airports.apt_name",
            "select avg(airports.apt_name)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports",
        "table_candidates": [
            "airports"
        ],
        "align_scores": [
            0.9943922162055969,
            0.0001388854143442586,
            0.00028010361711494625,
            7.199998799478635e-05,
            0.995858371257782,
            0.00013484778173733503,
            0.0008498276583850384,
            5.8787820307770744e-05
        ],
        "align_select": "select airports.apt_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many flights depart from 'APG'?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), airports.apt_code",
            "select count(distinct flights.FlightNo)",
            "select count(flights.FlightNo)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "flights",
        "table_candidates": [
            "airports flights"
        ],
        "align_scores": [
            0.9959380626678467,
            0.0001340210874332115,
            0.00027803360717371106,
            0.0001515095791546628,
            0.004394860006868839,
            8.514442015439272e-05,
            0.014654954895377159,
            0.00010302330338163301
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Count the number of flights departing from 'APG'.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), airports.apt_code",
            "select count(distinct flights.FlightNo)",
            "select count(*), airports.City"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "flights",
        "table_candidates": [
            "airports flights"
        ],
        "align_scores": [
            0.9958303570747375,
            0.00011318903125356883,
            0.00024925771867856383,
            0.0001488668640377,
            0.001561528304591775,
            8.086293382802978e-05,
            0.0003872440429404378,
            0.0009535190765745938
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many flights have destination ATO?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), flights.air",
            "select count(*), flights.FlightNo",
            "select count(*), flights.air, flights.destapt"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "flights",
        "table_candidates": [
            "flights",
            "airports flights",
            "airlines airports flights",
            "airlines flights"
        ],
        "align_scores": [
            0.9950729012489319,
            0.00019657363009173423,
            0.00033289773273281753,
            0.00013459882757160813,
            0.0002647227665875107,
            0.0002954262599814683,
            0.00013938199845142663,
            8.657474245410413e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Count the number of flights into ATO.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), flights.air",
            "select count(*), flights.FlightNo",
            "select count(*), airports.apt_code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "flights",
        "table_candidates": [
            "flights",
            "airports flights",
            "airlines airports flights",
            "airlines flights"
        ],
        "align_scores": [
            0.9801336526870728,
            0.00010939712228719145,
            0.00030813764897175133,
            0.00013969361316412687,
            0.00017925941210705787,
            0.00027394513017497957,
            0.00021313106117304415,
            0.001155970268882811
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many flights depart from City Aberdeen?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(distinct flights.FlightNo)",
            "select count(*), airports.City",
            "select count(flights.FlightNo)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights"
        ],
        "align_scores": [
            0.9956960678100586,
            0.0001549486769363284,
            0.0041637844406068325,
            8.619836444268003e-05,
            0.00021447280596476048,
            0.0007377230213023722,
            0.009391041472554207,
            0.00011573488882277161
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the number of flights departing from Aberdeen.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), airports.City",
            "select count(distinct flights.FlightNo)",
            "select count(flights.FlightNo)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights"
        ],
        "align_scores": [
            0.9956122636795044,
            0.00013118406059220433,
            0.0003008176281582564,
            0.00040345866000279784,
            0.0013719205744564533,
            7.359576557064429e-05,
            0.008027797564864159,
            9.558730380376801e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many flights arriving in Aberdeen city?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), airports.City",
            "select count(avg(flights.FlightNo)",
            "select count(flights.FlightNo)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights",
            "airlines airports flights"
        ],
        "align_scores": [
            0.9959361553192139,
            0.00016819570737425238,
            0.0002130696811946109,
            0.0006460629520006478,
            0.0002694467839319259,
            0.0001042337971739471,
            0.0015071320813149214,
            0.0001178373713628389
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the number of flights arriving in Aberdeen.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), airports.City",
            "select count(avg(flights.FlightNo)",
            "select count(flights.FlightNo)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights",
            "airlines airports flights"
        ],
        "align_scores": [
            0.9956936836242676,
            0.00014720798935741186,
            0.00027529223007149994,
            0.0003211100120097399,
            0.00021227158140391111,
            9.037006384460256e-05,
            0.0011604584287852049,
            0.00010028869292000309
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many flights depart from City 'Aberdeen' and have destination City 'Ashley'?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), airports.City, airports.apt_name",
            "select count(*), airports.City (Aberdeen, airports.apt_name)",
            "select count(*), airports.City"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights"
        ],
        "align_scores": [
            0.9948039650917053,
            9.738313383422792e-05,
            0.00012817661627195776,
            6.23575906502083e-05,
            0.0002093287039315328,
            0.00011556516255950555,
            0.00023933450574986637,
            6.842873699497432e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many flights fly from Aberdeen to Ashley?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), airports.City, airports.apt_name",
            "select count(*), airports.City (Aberdeen), airports.apt_name",
            "select count(*), airports.City (Aberdeen, airports.apt_name)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights"
        ],
        "align_scores": [
            0.9955410361289978,
            0.0002431069442536682,
            0.00012082268222002313,
            9.355541260447353e-05,
            0.00015800051914993674,
            0.00010019117326010019,
            0.0002087538450723514,
            0.00011843056563520804
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many flights does airline 'JetBlue Airways' have?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), airlines.air",
            "select count(*), airlines.air, airlines.Abbreviation",
            "select count(*), airlines.air, airlines.Abbreviation"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines flights",
            "airlines airports flights"
        ],
        "align_scores": [
            0.9957541227340698,
            0.00022261004778556526,
            0.00036000748514197767,
            0.00040856568375602365,
            0.00015827344032004476,
            0.00010582218237686902,
            0.00015827344032004476,
            0.00010582218237686902
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give the number of Jetblue Airways flights.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), airlines.air",
            "select count(*), airlines.air, flights.FlightNo",
            "select count(*), airlines.air, flights.FlightNo"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines flights"
        ],
        "align_scores": [
            0.9959684610366821,
            0.0002755361783783883,
            0.0002935418451670557,
            0.0030598598532378674,
            0.0001272040099138394,
            0.00011216327402507886,
            0.0001272040099138394,
            0.00011216327402507886
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many 'United Airlines' flights go to Airport 'ASY'?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), airlines.air",
            "select count(*), airlines.air, airports.apt_code",
            "select count(*), airlines.air, airports.apt_code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines airports flights",
            "airlines airports airports flights"
        ],
        "align_scores": [
            0.993281364440918,
            0.00022108116536401212,
            0.00033363769762218,
            0.0002795188338495791,
            0.0002386488631600514,
            0.00010421114711789414,
            0.0002386488631600514,
            0.00010421114711789414
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Count the number of United Airlines flights arriving in ASY Airport.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), airlines.air",
            "select count(*), airlines.air, airports.apt_code",
            "select count(distinct flights.FlightNo)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines airports flights"
        ],
        "align_scores": [
            0.9826706051826477,
            0.0001843296631705016,
            0.000251303194090724,
            0.0007933559827506542,
            0.00011720387556124479,
            0.00011003740655723959,
            0.0009095974965021014,
            9.643105295253918e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many 'United Airlines' flights depart from Airport 'AHD'?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), airlines.air",
            "select count(*), airports.apt_code",
            "select count(distinct flights.FlightNo)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines airports flights"
        ],
        "align_scores": [
            0.9949435591697693,
            0.00022214655473362654,
            0.0003363463911227882,
            0.0006693064933642745,
            0.0003332781489007175,
            0.0002256358857266605,
            0.010302415117621422,
            0.00012658086779993027
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the number of United Airlines flights leaving from AHD Airport.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), airlines.air",
            "select count(*), airlines.air, airports.apt_code",
            "select count(distinct flights.FlightNo)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines airports flights"
        ],
        "align_scores": [
            0.9861131310462952,
            0.0001793483243091032,
            0.00031195010524243116,
            0.001173855154775083,
            0.00013187399599701166,
            9.56480362219736e-05,
            0.001182745210826397,
            9.441371366847306e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many United Airlines flights go to City 'Aberdeen'?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), airlines.air",
            "select count(*), airlines.air, airports.City",
            "select count(*), airlines.air, airports.City"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines airports flights",
        "table_candidates": [
            "airlines airports flights",
            "airlines airports airports flights"
        ],
        "align_scores": [
            0.9951984286308289,
            0.0001879046903923154,
            0.0003483522741589695,
            0.00047426330274902284,
            0.0001816434523789212,
            0.00010298637062078342,
            0.0001816434523789212,
            0.00010298637062078342
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Count the number of United Airlines flights that arrive in Aberdeen.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), airlines.air",
            "select count(*), airlines.air, airports.City",
            "select count(distinct flights.FlightNo)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines airports flights",
        "table_candidates": [
            "airlines airports flights",
            "airlines airports airports flights"
        ],
        "align_scores": [
            0.9947240948677063,
            0.00024097140703815967,
            0.00032594631193205714,
            0.000988475396297872,
            0.0001464280649088323,
            9.33134215301834e-05,
            0.0010971977608278394,
            9.895078983390704e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which city has most number of arriving flights?",
        "gold_select": "select airports.City",
        "select_candidates": [
            "select airports.City",
            "select airports.City, airports.apt_name",
            "select airports.City, flights.destapt",
            "select airports.City, flights.srcapt"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights"
        ],
        "align_scores": [
            0.992913544178009,
            5.990580393699929e-05,
            0.0003225490509066731,
            5.8549434470478445e-05,
            0.0006376899546012282,
            5.7837172789731994e-05,
            0.0010225498117506504,
            6.427846528822556e-05
        ],
        "align_select": "select airports.City",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Which city has the most frequent destination airport?",
        "gold_select": "select airports.City",
        "select_candidates": [
            "select airports.City",
            "select airports.City, airports.apt_name",
            "select airports.City, flights.destapt",
            "select airports.City, airports.cntry"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights"
        ],
        "align_scores": [
            0.9944097399711609,
            6.858540291432291e-05,
            0.0005679007736034691,
            6.736625073244795e-05,
            0.0016947694821283221,
            6.72441819915548e-05,
            0.0015262709930539131,
            6.867820775369182e-05
        ],
        "align_select": "select airports.City",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Which city has most number of departing flights?",
        "gold_select": "select airports.City",
        "select_candidates": [
            "select airports.City",
            "select airports.City, airports.apt_name",
            "select airports.City, flights.destapt",
            "select airports.City, airports.cntry"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights"
        ],
        "align_scores": [
            0.9925544857978821,
            6.0049591411370784e-05,
            0.00032616883981972933,
            5.918466194998473e-05,
            0.0017170688370242715,
            6.43203966319561e-05,
            0.0010452475398778915,
            6.16008837823756e-05
        ],
        "align_select": "select airports.City",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Which city is the most frequent source airport?",
        "gold_select": "select airports.City",
        "select_candidates": [
            "select airports.City",
            "select airports.City, airports.apt_name",
            "select airports.City, airports.cntry",
            "select airports.City, airports.apt_name, airports.cntry"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights"
        ],
        "align_scores": [
            0.9954745173454285,
            6.0119902627775446e-05,
            0.0004149506858084351,
            6.318139639915898e-05,
            0.0013657003873959184,
            6.309337913990021e-05,
            0.00022956142493057996,
            6.504180782940239e-05
        ],
        "align_select": "select airports.City",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the code of airport that has the highest number of flights?",
        "gold_select": "select airports.apt_code",
        "select_candidates": [
            "select airports.apt_code",
            "select airports.apt_code, airports.apt_name",
            "select airports.apt_code, flights.srcapt",
            "select airports.apt_code, flights.destapt"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights"
        ],
        "align_scores": [
            0.9901725053787231,
            7.475292659364641e-05,
            0.006095995660871267,
            8.50265278131701e-05,
            0.001616985653527081,
            7.665521843591705e-05,
            0.00029158181860111654,
            6.331747135845944e-05
        ],
        "align_select": "select airports.apt_code",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the airport code of the airport with the most flights?",
        "gold_select": "select airports.apt_code",
        "select_candidates": [
            "select airports.apt_code",
            "select airports.apt_name",
            "select airports.apt_code, airports.apt_name",
            "select airports.apt_name, airports.apt_code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights"
        ],
        "align_scores": [
            0.9906550049781799,
            8.523003634763882e-05,
            0.7327782511711121,
            0.00010085874237120152,
            0.004968908149749041,
            6.743386620655656e-05,
            0.0030615038704127073,
            7.126988202799112e-05
        ],
        "align_select": "select airports.apt_code",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the code of airport that has fewest number of flights?",
        "gold_select": "select airports.apt_code",
        "select_candidates": [
            "select airports.apt_code",
            "select airports.apt_code, airports.apt_name",
            "select airports.apt_code, airports.cntry",
            "select airports.apt_code (airports.apt_name)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights"
        ],
        "align_scores": [
            0.990952730178833,
            7.119992369553074e-05,
            0.006423977203667164,
            7.293045200640336e-05,
            0.001504381187260151,
            7.181854016380385e-05,
            0.006520194932818413,
            6.013973688823171e-05
        ],
        "align_select": "select airports.apt_code",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Give the code of the airport with the least flights.",
        "gold_select": "select airports.apt_code",
        "select_candidates": [
            "select airports.apt_code",
            "select airports.apt_code, airports.apt_name",
            "select airports.apt_code, airports.apt_name, airports.cntry",
            "select airports.apt_code, airports.apt_name, airports.cntry"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights"
        ],
        "align_scores": [
            0.9941860437393188,
            7.491199357900769e-05,
            0.004548485856503248,
            6.0409485740819946e-05,
            0.0003105660725850612,
            6.135155126685277e-05,
            0.0003105660725850612,
            6.135155126685277e-05
        ],
        "align_select": "select airports.apt_code",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Which airline has most number of flights?",
        "gold_select": "select airlines.air",
        "select_candidates": [
            "select airlines.air",
            "select airlines.air, airlines.Abbreviation",
            "select airlines.air, flights.srcapt",
            "select airlines.air, airlines.Country"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines flights"
        ],
        "align_scores": [
            0.9648241996765137,
            5.637802314595319e-05,
            0.003239741548895836,
            6.524693890241906e-05,
            0.0007923035300336778,
            5.624516779789701e-05,
            0.000374488445231691,
            5.7914050557883456e-05
        ],
        "align_select": "select airlines.air",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What airline serves the most flights?",
        "gold_select": "select airlines.air",
        "select_candidates": [
            "select airlines.air",
            "select airlines.air, airlines.Abbreviation",
            "select airlines.air, airlines.Country",
            "select airlines.air, flights.srcapt"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines flights"
        ],
        "align_scores": [
            0.9802573323249817,
            5.428020813269541e-05,
            0.0023788954131305218,
            6.620021304115653e-05,
            0.0002635025011841208,
            5.560594581766054e-05,
            0.000995972310192883,
            5.522366700461134e-05
        ],
        "align_select": "select airlines.air",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Find the abbreviation and country of the airline that has fewest number of flights?",
        "gold_select": "select airlines.Abbreviation, airlines.Country",
        "select_candidates": [
            "select airlines.Abbreviation, airlines.Country",
            "select airlines.Country, airlines.Abbreviation",
            "select airlines.air, airlines.Country",
            "select airlines.Abbreviation), airlines.Country"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines flights"
        ],
        "align_scores": [
            0.9911106824874878,
            7.649784674867988e-05,
            0.9914689064025879,
            8.08910044725053e-05,
            0.9666988849639893,
            9.215940372087061e-05,
            0.007873398251831532,
            7.410513353534043e-05
        ],
        "align_select": "select airlines.Abbreviation, airlines.Country",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the abbreviation of the airilne has the fewest flights and what country is it in?",
        "gold_select": "select airlines.Abbreviation, airlines.Country",
        "select_candidates": [
            "select airlines.Abbreviation, airlines.Country",
            "select airlines.air, airlines.Abbreviation, airlines.Country",
            "select airlines.air, airlines.Country",
            "select airlines.uid, airlines.Abbreviation, airlines.Country"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines flights"
        ],
        "align_scores": [
            0.9886012673377991,
            8.802321826806292e-05,
            0.0005597880808636546,
            8.116809476632625e-05,
            0.9478908181190491,
            9.664361277827993e-05,
            0.0005983017035759985,
            7.267892215168104e-05
        ],
        "align_select": "select airlines.Abbreviation, airlines.Country",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What are airlines that have some flight departing from airport 'AHD'?",
        "gold_select": "select airlines.air",
        "select_candidates": [
            "select airlines.air",
            "select airlines.air, airlines.Abbreviation",
            "select airlines.air, airlines.Country",
            "select distinct airlines.air, airlines.Abbreviation"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines airports flights"
        ],
        "align_scores": [
            0.779681921005249,
            0.004815638065338135,
            0.00041258742567151785,
            0.00013920188939664513,
            0.000257296982454136,
            0.00013528554700314999,
            0.0005225044442340732,
            9.674161992734298e-05
        ],
        "align_select": "select airlines.air",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which airlines have a flight with source airport AHD?",
        "gold_select": "select airlines.air",
        "select_candidates": [
            "select airlines.air",
            "select airlines.air, airlines.Abbreviation",
            "select airlines.air, airlines.Country",
            "select airlines.air, airlines.Abbreviation, airlines.Country"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines airports flights"
        ],
        "align_scores": [
            0.7113634347915649,
            0.0007827929221093655,
            0.00039378931978717446,
            0.0001290537475142628,
            0.00025549117708578706,
            0.0001282175799133256,
            0.00024739105720072985,
            0.00010009644756792113
        ],
        "align_select": "select airlines.air",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are airlines that have flights arriving at airport 'AHD'?",
        "gold_select": "select airlines.air",
        "select_candidates": [
            "select airlines.air",
            "select airlines.air, airlines.Abbreviation",
            "select airlines.air, airlines.Country",
            "select airlines.air, airlines.Abbreviation, airlines.Country"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines airports flights"
        ],
        "align_scores": [
            0.6247303485870361,
            0.005476123653352261,
            0.00042997897253371775,
            0.00013310943904798478,
            0.000261288951151073,
            0.00013509140990208834,
            0.0002447017759550363,
            0.00010037689207820222
        ],
        "align_select": "select airlines.air",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which airlines have a flight with destination airport AHD?",
        "gold_select": "select airlines.air",
        "select_candidates": [
            "select airlines.air",
            "select airlines.air, airlines.Abbreviation",
            "select airlines.air, airlines.Country",
            "select distinct airlines.air, airlines.Abbreviation"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines airports flights",
            "airlines flights"
        ],
        "align_scores": [
            0.855359673500061,
            0.002687897300347686,
            0.00040352559881284833,
            0.00014287284284364432,
            0.00027156909345649183,
            0.00014553566870745271,
            0.0014131482457742095,
            0.00011197487765457481
        ],
        "align_select": "select airlines.air",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find all airlines that have flights from both airports 'APG' and 'CVO'.",
        "gold_select": "select airlines.air",
        "select_candidates": [
            "select airlines.air",
            "select airlines.uid",
            "select airlines.Abbreviation",
            "select airlines.air, airlines.Abbreviation"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines airports flights"
        ],
        "align_scores": [
            0.9873955845832825,
            0.9873955845832825,
            0.9949101805686951,
            0.9949101805686951,
            0.9820465445518494,
            0.9820465445518494,
            0.0003481270105112344,
            0.0003481270105112344
        ],
        "align_select": "select airlines.air",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "Which airlines have departing flights from both APG and CVO airports?",
        "gold_select": "select airlines.air",
        "select_candidates": [
            "select airlines.air",
            "select airlines.air, airlines.Abbreviation",
            "select airlines.air, airports.apt_name",
            "select airlines.air, flights.destapt"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines airports flights"
        ],
        "align_scores": [
            0.962900698184967,
            0.962900698184967,
            0.0004526318225543946,
            0.0004526318225543946,
            0.0006495289271697402,
            0.0006495289271697402,
            0.0005451088072732091,
            0.0005451088072732091
        ],
        "align_select": "select airlines.air",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "Find all airlines that have flights from airport 'CVO' but not from 'APG'.",
        "gold_select": "select airlines.air",
        "select_candidates": [
            "select airlines.air",
            "select airlines.air, airlines.Abbreviation",
            "select airlines.uid",
            "select airlines.Abbreviation"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines airports flights"
        ],
        "align_scores": [
            0.9854034185409546,
            0.9854034185409546,
            0.00041170360054820776,
            0.00041170360054820776,
            0.9925991296768188,
            0.9925991296768188,
            0.9608603715896606,
            0.9608603715896606
        ],
        "align_select": "select airlines.air",
        "align_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "Which airlines have departures from CVO but not from APG airports?",
        "gold_select": "select airlines.air",
        "select_candidates": [
            "select airlines.air",
            "select airlines.uid",
            "select airlines.air, airlines.Abbreviation",
            "select airlines.uid, airlines.Abbreviation"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines airports flights"
        ],
        "align_scores": [
            0.9669302105903625,
            0.9669302105903625,
            0.9833977222442627,
            0.9833977222442627,
            0.0005140082212164998,
            0.0005140082212164998,
            0.0011352591682225466,
            0.0011352591682225466
        ],
        "align_select": "select airlines.air",
        "align_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "Find all airlines that have at least 10 flights.",
        "gold_select": "select airlines.air",
        "select_candidates": [
            "select airlines.air",
            "select airlines.air, airlines.Abbreviation",
            "select airlines.air, flights.air",
            "select airlines.Abbreviation"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines flights"
        ],
        "align_scores": [
            0.9458267092704773,
            0.0001236775133293122,
            0.001969550270587206,
            6.800628761993721e-05,
            0.000872679753229022,
            6.343477434711531e-05,
            0.9741266369819641,
            0.000106432729808148
        ],
        "align_select": "select airlines.air",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Which airlines have at least 10 flights?",
        "gold_select": "select airlines.air",
        "select_candidates": [
            "select airlines.air",
            "select airlines.air, airlines.Abbreviation",
            "select airlines.Abbreviation",
            "select airlines.uid, airlines.Abbreviation"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines flights"
        ],
        "align_scores": [
            0.8693066239356995,
            0.00013585433771368116,
            0.0014950934564694762,
            7.857114542275667e-05,
            0.9762135744094849,
            0.0001258136035175994,
            0.0010056744795292616,
            8.637880091555417e-05
        ],
        "align_select": "select airlines.air",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Find all airlines that have fewer than 200 flights.",
        "gold_select": "select airlines.air",
        "select_candidates": [
            "select airlines.air",
            "select airlines.air, airlines.Abbreviation",
            "select airlines.air, airlines.Country",
            "select airlines.uid"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines flights"
        ],
        "align_scores": [
            0.8970091342926025,
            0.00038465403486043215,
            0.0022991038858890533,
            9.421451977686957e-05,
            0.00022737351537216455,
            7.769168587401509e-05,
            0.8082088828086853,
            0.00040897016879171133
        ],
        "align_select": "select airlines.air",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Which airlines have less than 200 flights?",
        "gold_select": "select airlines.air",
        "select_candidates": [
            "select airlines.air",
            "select airlines.air, airlines.Abbreviation",
            "select airlines.Abbreviation",
            "select airlines.uid, airlines.Abbreviation"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines flights"
        ],
        "align_scores": [
            0.7566782236099243,
            0.0005421019741334021,
            0.0019167389255017042,
            0.00010620988177834079,
            0.9832905530929565,
            0.000457146146800369,
            0.0016479226760566235,
            0.00011251366959186271
        ],
        "align_select": "select airlines.Abbreviation",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are flight numbers of Airline \"United Airlines\"?",
        "gold_select": "select flights.FlightNo",
        "select_candidates": [
            "select flights.FlightNo",
            "select flights.air, flights.FlightNo",
            "select flights.FlightNo, airlines.Abbreviation",
            "select flights.FlightNo, airlines.air"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines flights",
            "airlines airports flights"
        ],
        "align_scores": [
            0.9946150183677673,
            0.0002876225335057825,
            0.00017915040371008217,
            7.678237307118252e-05,
            0.000414408918004483,
            7.740166620351374e-05,
            0.0002536741376388818,
            8.028282900340855e-05
        ],
        "align_select": "select flights.FlightNo",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which flight numbers correspond to United Airlines flights?",
        "gold_select": "select flights.FlightNo",
        "select_candidates": [
            "select flights.FlightNo",
            "select distinct flights.FlightNo",
            "select flights.air, flights.FlightNo",
            "select flights.FlightNo, airlines.air"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines flights",
            "airlines airports flights"
        ],
        "align_scores": [
            0.9935764670372009,
            0.10797977447509766,
            0.03115139901638031,
            0.0002328535047126934,
            0.0002072972129099071,
            8.903293928597122e-05,
            0.00034888103255070746,
            0.00013200685498304665
        ],
        "align_select": "select flights.FlightNo",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are flight numbers of flights departing from Airport \"APG\"?",
        "gold_select": "select flights.FlightNo",
        "select_candidates": [
            "select flights.FlightNo",
            "select flights.FlightNo, airports.apt_name",
            "select flights.air, flights.FlightNo",
            "select flights.FlightNo, flights.srcapt"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "flights",
        "table_candidates": [
            "airports flights"
        ],
        "align_scores": [
            0.9953077435493469,
            0.0001876973401522264,
            0.00017673434922471642,
            6.097889126976952e-05,
            0.0001696627732599154,
            7.215051300590858e-05,
            0.00014024456322658807,
            6.759366806363687e-05
        ],
        "align_select": "select flights.FlightNo",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give the flight numbers of flights leaving from APG.",
        "gold_select": "select flights.FlightNo",
        "select_candidates": [
            "select flights.FlightNo",
            "select flights.FlightNo, flights.srcapt",
            "select flights.air, flights.FlightNo",
            "select flights.FlightNo, airports.apt_code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "flights",
        "table_candidates": [
            "airports flights",
            "airlines airports flights",
            "flights",
            "airlines flights"
        ],
        "align_scores": [
            0.990564227104187,
            8.05582239991054e-05,
            0.0001480529026594013,
            5.543629958992824e-05,
            0.0002049768081633374,
            5.9926889662165195e-05,
            0.00020169031631667167,
            6.014094105921686e-05
        ],
        "align_select": "select flights.FlightNo",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are flight numbers of flights arriving at Airport \"APG\"?",
        "gold_select": "select flights.FlightNo",
        "select_candidates": [
            "select flights.FlightNo",
            "select flights.FlightNo, airports.apt_name",
            "select flights.air, flights.FlightNo",
            "select flights.FlightNo, flights.srcapt"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "flights",
        "table_candidates": [
            "airports flights"
        ],
        "align_scores": [
            0.9874100089073181,
            0.0001610416657058522,
            0.00015419418923556805,
            5.881513425265439e-05,
            0.0001532046590000391,
            6.892923556733876e-05,
            0.0001541074743727222,
            6.924778426764533e-05
        ],
        "align_select": "select flights.FlightNo",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give the flight numbers of flights landing at APG.",
        "gold_select": "select flights.FlightNo",
        "select_candidates": [
            "select flights.FlightNo",
            "select flights.FlightNo, flights.srcapt",
            "select flights.FlightNo, flights.destapt",
            "select flights.air, flights.FlightNo"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "flights",
        "table_candidates": [
            "airports flights",
            "flights",
            "airlines airports flights",
            "airlines flights"
        ],
        "align_scores": [
            0.9847153425216675,
            0.0001147416332969442,
            0.0001516992342658341,
            6.000082794344053e-05,
            0.00013073849549982697,
            5.613623216049746e-05,
            0.0002302216162206605,
            6.422160367947072e-05
        ],
        "align_select": "select flights.FlightNo",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are flight numbers of flights departing from City \"Aberdeen \"?",
        "gold_select": "select flights.FlightNo",
        "select_candidates": [
            "select flights.FlightNo",
            "select flights.FlightNo, airports.City",
            "select flights.FlightNo, airports.apt_name",
            "select flights.FlightNo, airports.cntry"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights",
            "airlines airports flights"
        ],
        "align_scores": [
            0.9940394163131714,
            0.0001435055601177737,
            0.0001754865370457992,
            6.410803325707093e-05,
            0.00014794705202803016,
            5.7715460570761934e-05,
            0.00025264325086027384,
            7.365543569903821e-05
        ],
        "align_select": "select flights.FlightNo",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give the flight numbers of flights leaving from Aberdeen.",
        "gold_select": "select flights.FlightNo",
        "select_candidates": [
            "select flights.FlightNo",
            "select flights.FlightNo, airports.City",
            "select flights.air, flights.FlightNo",
            "select flights.FlightNo, airports.cntry"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights"
        ],
        "align_scores": [
            0.9918286204338074,
            0.0001242067664861679,
            0.00020197128469590098,
            5.4456901125377044e-05,
            0.00018584882491268218,
            6.287438736762851e-05,
            0.00020597479306161404,
            6.0636539274128154e-05
        ],
        "align_select": "select flights.FlightNo",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are flight numbers of flights arriving at City \"Aberdeen\"?",
        "gold_select": "select flights.FlightNo",
        "select_candidates": [
            "select flights.FlightNo",
            "select flights.FlightNo, airports.City",
            "select flights.air, flights.FlightNo",
            "select flights.FlightNo, airports.apt_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights",
            "airlines airports flights"
        ],
        "align_scores": [
            0.9910581111907959,
            0.000125487960758619,
            0.00015841778076719493,
            5.925124423811212e-05,
            0.00016421613690908998,
            6.364582804962993e-05,
            0.00012088871881132945,
            5.502925705513917e-05
        ],
        "align_select": "select flights.FlightNo",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give the flight numbers of flights arriving in Aberdeen.",
        "gold_select": "select flights.FlightNo",
        "select_candidates": [
            "select flights.FlightNo",
            "select flights.FlightNo, airports.City",
            "select flights.air, flights.FlightNo",
            "select flights.FlightNo, airports.cntry"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights"
        ],
        "align_scores": [
            0.9853159785270691,
            0.00012457850971259177,
            0.00017304842185694724,
            5.377477646106854e-05,
            0.00017903906700666994,
            6.00437524553854e-05,
            0.00017751650011632591,
            5.647713987855241e-05
        ],
        "align_select": "select flights.FlightNo",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the number of flights landing in the city of Aberdeen or Abilene.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), airports.City",
            "select count(*) dept airports.City",
            "select count(flights.FlightNo)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights",
            "airlines airports flights"
        ],
        "align_scores": [
            0.993893027305603,
            0.00016658191452734172,
            0.00036688477848656476,
            0.04829047992825508,
            0.0005683827330358326,
            0.00015974169946275651,
            0.0015682149678468704,
            0.00011967409227509052
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many flights land in Aberdeen or Abilene?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), airports.City",
            "select count(*) aeroports(flights.FlightNo)",
            "select count(flights.FlightNo)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights",
            "airlines airports flights",
            "airports"
        ],
        "align_scores": [
            0.9949042797088623,
            6.928959192009643e-05,
            0.0002676218282431364,
            8.039852400543168e-05,
            0.0003557315212674439,
            7.892845314927399e-05,
            0.0016587835270911455,
            6.92605972290039e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the name of airports which do not have any flight in and out.",
        "gold_select": "select airports.apt_name",
        "select_candidates": [
            "select airports.apt_name",
            "select airports.City, airports.apt_name",
            "select airports.apt_name, airports.cntry",
            "select airports.apt_name, airports.cntry, airports.cntry_abbr"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports",
            "airports flights"
        ],
        "align_scores": [
            0.6597532629966736,
            0.8267641067504883,
            0.00022160203661769629,
            0.0003867373743560165,
            0.0003836826072074473,
            0.0010583229595795274,
            0.00026843397063203156,
            0.0003586051461752504
        ],
        "align_select": "select airports.apt_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which airports do not have departing or arriving flights?",
        "gold_select": "select airports.apt_name",
        "select_candidates": [
            "select airports.apt_name",
            "select airports.apt_name, airports.cntry",
            "select airports.apt_code, airports.apt_name",
            "select airports.cntry, airports.apt_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports"
        ],
        "align_scores": [
            0.1747908890247345,
            0.9392671585083008,
            0.002591913565993309,
            0.00645409245043993,
            0.015415183268487453,
            0.17075277864933014,
            0.0009086602949537337,
            0.0029500420205295086
        ],
        "align_select": "select airports.apt_name",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM"
    },
    {
        "question": "Which country does Airline \"JetBlue Airways\" belong to?",
        "gold_select": "select airlines.cntry",
        "select_candidates": [
            "select airlines.cntry",
            "select airlines.cntry, airlines.Abbreviation",
            "select airlines.cntry, t0.c4",
            "select airlines.Airline, airlines.cntry"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines",
        "table_candidates": [
            "airlines"
        ],
        "align_scores": [
            0.9162126183509827,
            0.00019699388940352947,
            0.0003548479871824384,
            8.677790174260736e-05,
            0.000419615680584684,
            7.975480548338965e-05,
            0.00033317613997496665,
            7.36409638193436e-05
        ],
        "align_select": "select airlines.cntry",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What country is Jetblue Airways affiliated with?",
        "gold_select": "select airlines.cntry",
        "select_candidates": [
            "select airlines.cntry",
            "select airlines.cntry, airlines.Abbreviation",
            "select airlines.Airline, airlines.cntry",
            "select airlines.cntry, t0.c4"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines",
        "table_candidates": [
            "airlines"
        ],
        "align_scores": [
            0.5752671360969543,
            0.0001616502704564482,
            0.0003940961614716798,
            8.612457168055698e-05,
            0.0002535244857426733,
            6.853231025161222e-05,
            0.0004191809275653213,
            7.832248957129195e-05
        ],
        "align_select": "select airlines.cntry",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List all airline names and their abbreviations in \"USA\".",
        "gold_select": "select airlines.Airline, airlines.Abbreviation",
        "select_candidates": [
            "select airlines.Airline, airlines.Abbreviation",
            "select airlines.Airline, airlines.Abbreviation,",
            "select airlines.Airline, airlines.Abbreviation2",
            "select airlines.Airline, airlines.Abbreviation)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines",
        "table_candidates": [
            "airlines"
        ],
        "align_scores": [
            0.9952444434165955,
            0.0002558990672696382,
            0.0019098668126389384,
            8.38532650959678e-05,
            0.08120405673980713,
            0.0001819096942199394,
            0.0022113495506346226,
            0.000128387997392565
        ],
        "align_select": "select airlines.Airline, airlines.Abbreviation",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the airline names and abbreviations for airlines in the USA?",
        "gold_select": "select airlines.Airline, airlines.Abbreviation",
        "select_candidates": [
            "select airlines.Airline, airlines.Abbreviation",
            "select airlines.Airline, airlines.Abbreviation, airlines.cntry",
            "select airlines.Airline, airlines.Abbreviation,",
            "select airlines.Airline, airlines.Abbreviation2"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines",
        "table_candidates": [
            "airlines"
        ],
        "align_scores": [
            0.9940529465675354,
            0.00024437770480290055,
            0.00025672506308183074,
            7.88182660471648e-05,
            0.0036560024600476027,
            7.692176586715505e-05,
            0.4897621273994446,
            0.00021219023619778454
        ],
        "align_select": "select airlines.Airline, airlines.Abbreviation",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List the airport code and name in the city of Anthony.",
        "gold_select": "select airports.apt_code, airports.apt_name",
        "select_candidates": [
            "select airports.apt_code, airports.apt_name",
            "select apairports.apt_code, airports.apt_name",
            "select apairports.apt_code, apairports.apt_name",
            "select airports.apt_code, airports.apt_name, airports.cntry"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports",
        "table_candidates": [
            "airports"
        ],
        "align_scores": [
            0.9945159554481506,
            9.185302042169496e-05,
            0.011655609123408794,
            7.663548603886738e-05,
            0.9537280797958374,
            9.628779662307352e-05,
            0.00021119494340382516,
            5.6977965869009495e-05
        ],
        "align_select": "select airports.apt_code, airports.apt_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give the airport code and airport name corresonding to the city Anthony.",
        "gold_select": "select airports.apt_code, airports.apt_name",
        "select_candidates": [
            "select airports.apt_code, airports.apt_name",
            "select airports.apt_code, airports.apt_name, airports.cntry",
            "select apl_c1, apl_c2",
            "select airports.apt_code.c1, airports.apt_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports",
        "table_candidates": [
            "airports"
        ],
        "align_scores": [
            0.9951550960540771,
            0.00010143484541913494,
            0.0002774145395960659,
            6.662891246378422e-05,
            0.0006014883983880281,
            0.0007037075702100992,
            0.0002612067328300327,
            6.700771336909384e-05
        ],
        "align_select": "select airports.apt_code, airports.apt_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many airlines are from USA?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), airlines.cntry",
            "select count(*), airlines.Airline",
            "select count(*), airlines.uid"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines",
        "table_candidates": [
            "airlines"
        ],
        "align_scores": [
            0.9947322607040405,
            6.864317401777953e-05,
            0.0002606345806270838,
            5.34739883732982e-05,
            0.0002371866285102442,
            5.304805745254271e-05,
            0.00026732016704045236,
            5.709958713850938e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the number of airlines in the USA.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), airlines.cntry",
            "select count(*), airlines.cntry, airlines.Abbreviation",
            "select count(*), airlines.cntry, t0.c4"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines",
        "table_candidates": [
            "airlines"
        ],
        "align_scores": [
            0.9954919815063477,
            0.0005250831018202007,
            0.00023726759536657482,
            0.00011055823415517807,
            0.00014095268852543086,
            0.00010153849143534899,
            0.0001774469274096191,
            8.28104602987878e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which city and country is the Alton airport at?",
        "gold_select": "select airports.City, airports.cntry",
        "select_candidates": [
            "select airports.City, airports.cntry",
            "select airports.cntry, airports.apt_name",
            "select airports.apt_code, airports.cntry",
            "select airports.apt_name, airports.cntry"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports",
        "table_candidates": [
            "airports"
        ],
        "align_scores": [
            0.9948090314865112,
            0.0002911215415224433,
            0.00048343674279749393,
            7.920908683445305e-05,
            0.0007436348241753876,
            7.683862349949777e-05,
            0.0007055383757688105,
            0.00010370221571065485
        ],
        "align_select": "select airports.City, airports.cntry",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give the city and country for the Alton airport.",
        "gold_select": "select airports.City, airports.cntry",
        "select_candidates": [
            "select airports.City, airports.cntry",
            "select airports.City, airports.cntry)",
            "select airports.City, airports.cntry.",
            "select t1.co, airports.cntry"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports",
        "table_candidates": [
            "airports"
        ],
        "align_scores": [
            0.9954978227615356,
            0.00031156197655946016,
            0.0014744021464139223,
            0.00011869579611811787,
            0.009257848374545574,
            0.00013080958160571754,
            0.0005372492596507072,
            8.579350105719641e-05
        ],
        "align_select": "select airports.City, airports.cntry",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the airport name for airport 'AKO'?",
        "gold_select": "select airports.apt_name",
        "select_candidates": [
            "select airports.apt_name",
            "select avg(airports.apt_name)",
            "select airports.apt_name, airports.cntry",
            "select ap_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports",
        "table_candidates": [
            "airports"
        ],
        "align_scores": [
            0.9940007328987122,
            0.00011274350981693715,
            0.0006442618905566633,
            5.775169120170176e-05,
            0.00022014220303390175,
            6.899802247062325e-05,
            0.9909806847572327,
            9.778615640243515e-05
        ],
        "align_select": "select airports.apt_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the name of the airport with code 'AKO'.",
        "gold_select": "select airports.apt_name",
        "select_candidates": [
            "select airports.apt_name",
            "select aph1.c2",
            "select aplairports.apt_name",
            "select aps_c2"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports",
        "table_candidates": [
            "airports"
        ],
        "align_scores": [
            0.9939382076263428,
            0.00013261813728604466,
            0.0005750585114583373,
            8.348322444362566e-05,
            0.34757164120674133,
            0.0001477954792790115,
            0.001076181884855032,
            7.559307414339855e-05
        ],
        "align_select": "select airports.apt_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are airport names at City 'Aberdeen'?",
        "gold_select": "select airports.apt_name",
        "select_candidates": [
            "select airports.apt_name",
            "select airports.apt_name, airports.cntry",
            "select avg(airports.apt_name)",
            "select airports.apt_name (ref. airports.cntry)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports",
        "table_candidates": [
            "airports"
        ],
        "align_scores": [
            0.9953824877738953,
            0.00014057151565793902,
            0.00021600666514132172,
            7.249244663398713e-05,
            0.0006257875938899815,
            6.308723823167384e-05,
            0.005525055341422558,
            7.729994831606746e-05
        ],
        "align_select": "select airports.apt_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of airports in Aberdeen?",
        "gold_select": "select airports.apt_name",
        "select_candidates": [
            "select airports.apt_name",
            "select airports.apt_name, airports.cntry",
            "select ap_airports.apt_name",
            "select airports.apt_name, airports.cntry, airports.cntry_abbr"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports",
        "table_candidates": [
            "airports"
        ],
        "align_scores": [
            0.9943922162055969,
            0.0001388854143442586,
            0.00028010361711494625,
            7.199998799478635e-05,
            0.995858371257782,
            0.00013484778173733503,
            0.00022363930474966764,
            6.154340371722355e-05
        ],
        "align_select": "select airports.apt_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many flights have destination ATO?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), flights.SourceAirport, flights.destapt",
            "select count(*), flights.SourceAirport",
            "select count(*), flights.air"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "flights",
        "table_candidates": [
            "flights",
            "airports flights"
        ],
        "align_scores": [
            0.9950729012489319,
            0.00019657363009173423,
            0.00013311389193404466,
            9.32216426008381e-05,
            0.0002916818775702268,
            0.0001938660570885986,
            0.00033289773273281753,
            0.00013459882757160813
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Count the number of flights into ATO.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), flights.SourceAirport",
            "select count(*), flights.air",
            "select count(*), airports.apt_code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "flights",
        "table_candidates": [
            "flights",
            "airports flights",
            "airlines flights"
        ],
        "align_scores": [
            0.9801336526870728,
            0.00010939712228719145,
            0.00019855151185765862,
            0.001108467229641974,
            0.00030813764897175133,
            0.00013969361316412687,
            0.00021313106117304415,
            0.001155970268882811
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many flights depart from City Aberdeen?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), airports.City",
            "select count(distinct flights.FlightNo)",
            "select count(flights.FlightNo)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights"
        ],
        "align_scores": [
            0.9956960678100586,
            0.0001549486769363284,
            0.00021447280596476048,
            0.0007377230213023722,
            0.0041637844406068325,
            8.619836444268003e-05,
            0.009391041472554207,
            0.00011573488882277161
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the number of flights departing from Aberdeen.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), airports.City",
            "select count(distinct flights.FlightNo)",
            "select count(flights.FlightNo)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights"
        ],
        "align_scores": [
            0.9956122636795044,
            0.00013118406059220433,
            0.0003008176281582564,
            0.00040345866000279784,
            0.0013719205744564533,
            7.359576557064429e-05,
            0.008027797564864159,
            9.558730380376801e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many flights arriving in Aberdeen city?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), airports.City",
            "select count(avg(flights.FlightNo)",
            "select count(incoming flights.FlightNo)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights",
            "airlines airports flights"
        ],
        "align_scores": [
            0.9959361553192139,
            0.00016819570737425238,
            0.0002130696811946109,
            0.0006460629520006478,
            0.0002694467839319259,
            0.0001042337971739471,
            0.0035298026632517576,
            0.00012490061635617167
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the number of flights arriving in Aberdeen.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), airports.City",
            "select count(avg(flights.FlightNo)",
            "select count(flights.FlightNo)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights"
        ],
        "align_scores": [
            0.9956936836242676,
            0.00014720798935741186,
            0.00027529223007149994,
            0.0003211100120097399,
            0.00021227158140391111,
            9.037006384460256e-05,
            0.0011604584287852049,
            0.00010028869292000309
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many flights depart from City 'Aberdeen' and have destination City 'Ashley'?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), airports.City, airports.apt_name",
            "select count(*), airports.City",
            "select count(*), airports.City (Aberdeen, airports.apt_name)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights",
            "airlines airports flights"
        ],
        "align_scores": [
            0.9948039650917053,
            9.738313383422792e-05,
            0.00012817661627195776,
            6.23575906502083e-05,
            0.00023933450574986637,
            6.842873699497432e-05,
            0.0002093287039315328,
            0.00011556516255950555
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many flights fly from Aberdeen to Ashley?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), airports.City, airports.apt_name",
            "select count(*), airports.City (Aberdeen, airports.apt_name)",
            "select count(*), airports.City (Aberdeen), airports.apt_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights",
            "airlines airports flights"
        ],
        "align_scores": [
            0.9955410361289978,
            8.609141514170915e-05,
            0.00012082268222002313,
            5.6095930631272495e-05,
            0.0002087538450723514,
            6.9069916207809e-05,
            0.00015800051914993674,
            6.604829832213e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many flights does airline 'JetBlue Airways' have?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), airlines.Airline",
            "select count(*), airlines.Airline, airlines.cntry",
            "select count(*), airlines.Airline, airlines.cntry"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines flights",
            "airlines airports flights"
        ],
        "align_scores": [
            0.9957541227340698,
            0.00022261004778556526,
            0.0003111831611022353,
            0.0015865619061514735,
            0.0001299814903177321,
            0.00011657156574074179,
            0.0001299814903177321,
            0.00011657156574074179
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give the number of Jetblue Airways flights.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), airlines.Airline",
            "select count(*), airlines.Airline, airlines.cntry",
            "select count(*), airlines.Airline, airlines.cntry"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines flights"
        ],
        "align_scores": [
            0.9959684610366821,
            0.0002755361783783883,
            0.00024916077381931245,
            0.17776240408420563,
            0.00011381504009477794,
            0.00014609572826884687,
            0.00011381504009477794,
            0.00014609572826884687
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many 'United Airlines' flights go to Airport 'ASY'?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), airlines.Airline",
            "select count(*), airlines.Airline, airports.apt_code",
            "select count(*), airlines.Airline, airports.apt_code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines airports flights"
        ],
        "align_scores": [
            0.993281364440918,
            0.00022108116536401212,
            0.00032268837094306946,
            0.021125683560967445,
            0.0001726301561575383,
            0.00014020739763509482,
            0.0001726301561575383,
            0.00014020739763509482
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Count the number of United Airlines flights arriving in ASY Airport.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), airlines.Airline",
            "select count(*), airlines.Airline, airports.apt_code",
            "select count(*) the flights.SourceAirport, flights.destapt"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines airports flights"
        ],
        "align_scores": [
            0.9826706051826477,
            0.0001843296631705016,
            0.0002478552341926843,
            0.04716525226831436,
            0.00012155323929619044,
            0.0002087248140014708,
            0.0001865001249825582,
            8.977088873507455e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many 'United Airlines' flights depart from Airport 'AHD'?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), airlines.Airline",
            "select count(*), airports.apt_code",
            "select count(*), flights.SourceAirport, flights.destapt"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines airports flights"
        ],
        "align_scores": [
            0.9949435591697693,
            0.00022214655473362654,
            0.00036072207149118185,
            0.07682077586650848,
            0.0003332781489007175,
            0.0002256358857266605,
            0.00013154053885955364,
            0.00011787917901528999
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the number of United Airlines flights leaving from AHD Airport.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), airlines.Airline",
            "select count(*), airlines.Airline, airports.apt_code",
            "select count(*), airlines.Airline, airports.apt_code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines airports flights"
        ],
        "align_scores": [
            0.9861131310462952,
            0.0001793483243091032,
            0.0002722734643612057,
            0.02148565649986267,
            0.00012286410492379218,
            0.00016066465468611568,
            0.00012286410492379218,
            0.00016066465468611568
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many United Airlines flights go to City 'Aberdeen'?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), airlines.Airline",
            "select count(*), airlines.Airline, airports.City",
            "select count(*), airlines.Airline, airports.City"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines airports flights",
        "table_candidates": [
            "airlines airports flights",
            "airlines airports airports flights"
        ],
        "align_scores": [
            0.9951984286308289,
            0.0004951676237396896,
            0.00029283101321198046,
            0.0003384051378816366,
            0.00015404255827888846,
            0.0001448563125450164,
            0.00015404255827888846,
            0.0001448563125450164
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Count the number of United Airlines flights that arrive in Aberdeen.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), airlines.Airline",
            "select count(*), airlines.Airline, airports.City",
            "select count(distinct flights.FlightNo)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines airports flights",
        "table_candidates": [
            "airlines airports flights",
            "airlines airports airports flights"
        ],
        "align_scores": [
            0.9947240948677063,
            0.00024097140703815967,
            0.0002709502005018294,
            0.20607233047485352,
            0.00012745535059366375,
            0.0001735166588332504,
            0.0010971977608278394,
            9.895078983390704e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which city has most number of arriving flights?",
        "gold_select": "select airports.City",
        "select_candidates": [
            "select airports.City",
            "select airports.City, flights.SourceAirport",
            "select airports.City, airports.apt_name",
            "select airports.City, airports.cntry"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights"
        ],
        "align_scores": [
            0.992913544178009,
            5.990580393699929e-05,
            0.0005821904051117599,
            6.156974995974451e-05,
            0.0003225490509066731,
            5.8549434470478445e-05,
            0.001009758678264916,
            6.121893966337666e-05
        ],
        "align_select": "select airports.City",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Which city has the most frequent destination airport?",
        "gold_select": "select airports.City",
        "select_candidates": [
            "select airports.City",
            "select airports.City, airports.apt_name",
            "select airports.City, airports.cntry",
            "select airports.City, flights.destapt"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights"
        ],
        "align_scores": [
            0.9944097399711609,
            6.858540291432291e-05,
            0.0005679007736034691,
            6.736625073244795e-05,
            0.0015262709930539131,
            6.867820775369182e-05,
            0.0016947694821283221,
            6.72441819915548e-05
        ],
        "align_select": "select airports.City",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Which city has most number of departing flights?",
        "gold_select": "select airports.City",
        "select_candidates": [
            "select airports.City",
            "select airports.City, flights.SourceAirport",
            "select airports.City, airports.apt_name",
            "select airports.City, flights.destapt"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights"
        ],
        "align_scores": [
            0.9925544857978821,
            6.0049591411370784e-05,
            0.0019695295486599207,
            6.372185453074053e-05,
            0.00032616883981972933,
            5.918466194998473e-05,
            0.0017170688370242715,
            6.43203966319561e-05
        ],
        "align_select": "select airports.City",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Which city is the most frequent source airport?",
        "gold_select": "select airports.City",
        "select_candidates": [
            "select airports.City",
            "select airports.City, flights.SourceAirport",
            "select airports.City, airports.apt_name",
            "select airports.City, airports.cntry"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights"
        ],
        "align_scores": [
            0.9954745173454285,
            6.854263483546674e-05,
            0.003206281689926982,
            6.070110612199642e-05,
            0.0004149506858084351,
            6.254440813791007e-05,
            0.0013657003873959184,
            6.65875559207052e-05
        ],
        "align_select": "select airports.City",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the code of airport that has the highest number of flights?",
        "gold_select": "select airports.apt_code",
        "select_candidates": [
            "select airports.apt_code",
            "select airports.apt_code, airports.apt_name",
            "select airports.apt_code, airports.apt_name, airports.cntry",
            "select airports.apt_code, flights.SourceAirport"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights"
        ],
        "align_scores": [
            0.9901725053787231,
            7.475292659364641e-05,
            0.006095995660871267,
            8.50265278131701e-05,
            0.0007832406554371119,
            7.764547626720741e-05,
            0.002761240117251873,
            8.736809832043946e-05
        ],
        "align_select": "select airports.apt_code",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the airport code of the airport with the most flights?",
        "gold_select": "select airports.apt_code",
        "select_candidates": [
            "select airports.apt_code",
            "select airports.apt_name",
            "select airports.apt_code, airports.apt_name",
            "select airports.apt_name, airports.cntry"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights"
        ],
        "align_scores": [
            0.9906550049781799,
            8.523003634763882e-05,
            0.7327782511711121,
            0.00010085874237120152,
            0.004968908149749041,
            6.743386620655656e-05,
            0.0022329301573336124,
            8.151559450197965e-05
        ],
        "align_select": "select airports.apt_code",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the code of airport that has fewest number of flights?",
        "gold_select": "select airports.apt_code",
        "select_candidates": [
            "select airports.apt_code",
            "select airports.apt_code, airports.apt_name",
            "select airports.apt_code, flights.SourceAirport",
            "select airports.apt_code, airports.cntry"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights"
        ],
        "align_scores": [
            0.990952730178833,
            7.119992369553074e-05,
            0.006423977203667164,
            7.293045200640336e-05,
            0.0017491414910182357,
            7.724357419647276e-05,
            0.001504381187260151,
            7.181854016380385e-05
        ],
        "align_select": "select airports.apt_code",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Give the code of the airport with the least flights.",
        "gold_select": "select airports.apt_code",
        "select_candidates": [
            "select airports.apt_code",
            "select airports.apt_code, airports.apt_name",
            "select airports.apt_code, airports.apt_name, airports.cntry",
            "select airports.apt_code, airports.apt_name, airports.cntry"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights"
        ],
        "align_scores": [
            0.9941860437393188,
            7.491199357900769e-05,
            0.004548485856503248,
            6.0409485740819946e-05,
            0.0003105660725850612,
            6.135155126685277e-05,
            0.0003105660725850612,
            6.135155126685277e-05
        ],
        "align_select": "select airports.apt_code",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Which airline has most number of flights?",
        "gold_select": "select airlines.Airline",
        "select_candidates": [
            "select airlines.Airline",
            "select airlines.Airline, airlines.cntry",
            "select airlines.Airline, airlines.Abbreviation",
            "select airlines.Airline, flights.SourceAirport"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines flights"
        ],
        "align_scores": [
            0.9928815364837646,
            5.2749470341950655e-05,
            0.0018756953068077564,
            5.35199033038225e-05,
            0.0034320461563766003,
            5.970459824311547e-05,
            0.001536908675916493,
            5.243335908744484e-05
        ],
        "align_select": "select airlines.Airline",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What airline serves the most flights?",
        "gold_select": "select airlines.Airline",
        "select_candidates": [
            "select airlines.Airline",
            "select airlines.Airline, airlines.cntry",
            "select airlines.Airline, flights.SourceAirport",
            "select airlines.Airline, airlines.Abbreviation"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines flights"
        ],
        "align_scores": [
            0.9942187070846558,
            5.4415995691670105e-05,
            0.0016411890974268317,
            5.537300239666365e-05,
            0.0012869591591879725,
            5.1746035751421005e-05,
            0.003093746956437826,
            6.062636384740472e-05
        ],
        "align_select": "select airlines.Airline",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Find the abbreviation and country of the airline that has fewest number of flights?",
        "gold_select": "select airlines.Abbreviation, airlines.cntry",
        "select_candidates": [
            "select airlines.Abbreviation, airlines.cntry",
            "select airlines.Airline, airlines.Abbreviation, airlines.cntry",
            "select airlines.Airline, airlines.cntry",
            "select airlines.cntry, airlines.Abbreviation"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines flights"
        ],
        "align_scores": [
            0.9904717206954956,
            8.972031355369836e-05,
            0.0019898752216249704,
            8.821664960123599e-05,
            0.9883508682250977,
            9.125951328314841e-05,
            0.9915191531181335,
            8.950283518061042e-05
        ],
        "align_select": "select airlines.Abbreviation, airlines.cntry",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the abbreviation of the airilne has the fewest flights and what country is it in?",
        "gold_select": "select airlines.Abbreviation, airlines.cntry",
        "select_candidates": [
            "select airlines.Abbreviation, airlines.cntry",
            "select airlines.Airline, airlines.cntry",
            "select airlines.Airline, airlines.Abbreviation, airlines.cntry",
            "select airlines.cntry, airlines.Abbreviation"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines flights",
            "airlines airports flights"
        ],
        "align_scores": [
            0.9883484840393066,
            0.00010184404527535662,
            0.9831604361534119,
            9.126168151851743e-05,
            0.003741860156878829,
            8.460990648018196e-05,
            0.989388644695282,
            9.464096365263686e-05
        ],
        "align_select": "select airlines.Abbreviation, airlines.cntry",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What are airlines that have some flight departing from airport 'AHD'?",
        "gold_select": "select airlines.Airline",
        "select_candidates": [
            "select airlines.Airline",
            "select airlines.Airline, airlines.cntry",
            "select airlines.Airline, airports.apt_name",
            "select airlines.Airline, airports.cntry"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines airports flights"
        ],
        "align_scores": [
            0.9899006485939026,
            0.9921557307243347,
            0.00039984440081752837,
            0.001048347563482821,
            0.0003577200695872307,
            0.0007313723326660693,
            0.00047553351032547653,
            0.0011105431476607919
        ],
        "align_select": "select airlines.Airline",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which airlines have a flight with source airport AHD?",
        "gold_select": "select airlines.Airline",
        "select_candidates": [
            "select airlines.Airline",
            "select airlines.Airline, airlines.cntry",
            "select airlines.Airline, airlines.Abbreviation",
            "select airlines.Airline, airlines.cntry, airlines.Abbreviation"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines flights",
            "airlines airports flights"
        ],
        "align_scores": [
            0.9841853976249695,
            0.9935619831085205,
            0.0003984979121014476,
            0.0009651861037127674,
            0.00039689609548076987,
            0.0008448964217677712,
            0.0002512080827727914,
            0.00026246547349728644
        ],
        "align_select": "select airlines.Airline",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are airlines that have flights arriving at airport 'AHD'?",
        "gold_select": "select airlines.Airline",
        "select_candidates": [
            "select airlines.Airline",
            "select airlines.Airline, airlines.cntry",
            "select airlines.Airline, airports.apt_name",
            "select airlines.Airline, airports.cntry"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines airports flights"
        ],
        "align_scores": [
            0.989578902721405,
            0.0017352384747937322,
            0.00041768033406697214,
            0.0001428562100045383,
            0.0003056139685213566,
            0.00013815694546792656,
            0.000478034489788115,
            0.00018330992315895855
        ],
        "align_select": "select airlines.Airline",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which airlines have a flight with destination airport AHD?",
        "gold_select": "select airlines.Airline",
        "select_candidates": [
            "select airlines.Airline",
            "select airlines.Airline, airlines.cntry",
            "select airlines.Airline, airlines.Abbreviation",
            "select airlines.uid, airlines.Airline"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines flights",
            "airlines airports flights"
        ],
        "align_scores": [
            0.9651451110839844,
            0.0017848450224846601,
            0.00036112189991399646,
            0.000166451238328591,
            0.00042131615919061005,
            0.00013792004028800875,
            0.00029025686671957374,
            0.00013575254706665874
        ],
        "align_select": "select airlines.Airline",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find all airlines that have flights from both airports 'APG' and 'CVO'.",
        "gold_select": "select airlines.Airline",
        "select_candidates": [
            "select airlines.Airline",
            "select airlines.Airline, airlines.cntry",
            "select airlines.Airline, flights.SourceAirport",
            "select airlines.Airline, airlines.Abbreviation"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines flights",
            "airlines airports flights"
        ],
        "align_scores": [
            0.9951124787330627,
            0.9951124787330627,
            0.0004024253867100924,
            0.0004024253867100924,
            0.0003960214089602232,
            0.0003960214089602232,
            0.0003536431468091905,
            0.0003536431468091905
        ],
        "align_select": "select airlines.Airline",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "Which airlines have departing flights from both APG and CVO airports?",
        "gold_select": "select airlines.Airline",
        "select_candidates": [
            "select airlines.Airline",
            "select airlines.Airline, airlines.cntry",
            "select airlines.Airline, flights.SourceAirport",
            "select airlines.Airline, airlines.Abbreviation"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines flights",
            "airlines airports flights"
        ],
        "align_scores": [
            0.9950999617576599,
            0.9950999617576599,
            0.0003647558914963156,
            0.0003647558914963156,
            0.0006348804454319179,
            0.0006348804454319179,
            0.00046198247582651675,
            0.00046198247582651675
        ],
        "align_select": "select airlines.Airline",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "Find all airlines that have flights from airport 'CVO' but not from 'APG'.",
        "gold_select": "select airlines.Airline",
        "select_candidates": [
            "select airlines.Airline",
            "select airlines.Airline, airlines.cntry",
            "select airlines.Airline, flights.SourceAirport",
            "select airlines.uid, airlines.Airline"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines airports flights",
            "airlines flights"
        ],
        "align_scores": [
            0.9936217665672302,
            0.9936217665672302,
            0.0005156203988008201,
            0.0005156203988008201,
            0.0004250533238518983,
            0.0004250533238518983,
            0.00026952847838401794,
            0.00026952847838401794
        ],
        "align_select": "select airlines.Airline",
        "align_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "Which airlines have departures from CVO but not from APG airports?",
        "gold_select": "select airlines.Airline",
        "select_candidates": [
            "select airlines.Airline",
            "select airlines.uid, airlines.Airline",
            "select airlines.Airline, airports.cntry",
            "select airlines.Airline, airlines.cntry"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines airports flights"
        ],
        "align_scores": [
            0.9928431510925293,
            0.9647050499916077,
            0.0003105743962805718,
            0.00026236538542434573,
            0.0006330098840408027,
            0.0005061549600213766,
            0.0004719880234915763,
            0.00043597660260275006
        ],
        "align_select": "select airlines.Airline",
        "align_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "Find all airlines that have at least 10 flights.",
        "gold_select": "select airlines.Airline",
        "select_candidates": [
            "select airlines.Airline",
            "select airlines.Airline, flights.SourceAirport",
            "select airlines.Airline, airlines.cntry",
            "select airlines.Airline, flights.destapt"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines flights"
        ],
        "align_scores": [
            0.9920614957809448,
            0.00010793730325531214,
            0.0021071035880595446,
            6.169535481603816e-05,
            0.001109150005504489,
            6.457595009123906e-05,
            0.00035786404623650014,
            5.4473624913953245e-05
        ],
        "align_select": "select airlines.Airline",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Which airlines have at least 10 flights?",
        "gold_select": "select airlines.Airline",
        "select_candidates": [
            "select airlines.Airline",
            "select airlines.Airline, flights.SourceAirport",
            "select airlines.Airline, airlines.cntry",
            "select airlines.Airline, flights.SourceAirport, airlines.cntry"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines flights"
        ],
        "align_scores": [
            0.9902194142341614,
            0.00012706738198176026,
            0.001436447724699974,
            6.968451634747908e-05,
            0.0013566723791882396,
            7.913434819784015e-05,
            0.00032387091778218746,
            6.682941602775827e-05
        ],
        "align_select": "select airlines.Airline",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Find all airlines that have fewer than 200 flights.",
        "gold_select": "select airlines.Airline",
        "select_candidates": [
            "select airlines.Airline",
            "select airlines.Airline, flights.SourceAirport",
            "select airlines.Airline, airlines.cntry",
            "select airlines.uid, airlines.Airline"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines flights"
        ],
        "align_scores": [
            0.9866717457771301,
            0.00027445281739346683,
            0.000857837381772697,
            7.040100899757817e-05,
            0.0006200933130457997,
            7.049795385682955e-05,
            0.000366831140127033,
            6.87356005073525e-05
        ],
        "align_select": "select airlines.Airline",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Which airlines have less than 200 flights?",
        "gold_select": "select airlines.Airline",
        "select_candidates": [
            "select airlines.Airline",
            "select airlines.Airline, flights.SourceAirport",
            "select airlines.Airline, airlines.cntry",
            "select airlines.Airline, flights.destapt"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines flights"
        ],
        "align_scores": [
            0.9915968775749207,
            0.00035407213727012277,
            0.0008348360424861312,
            7.852665294194594e-05,
            0.0008364676032215357,
            8.433352195424959e-05,
            0.00027843419229611754,
            6.903408939251676e-05
        ],
        "align_select": "select airlines.Airline",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are flight numbers of Airline \"United Airlines\"?",
        "gold_select": "select flights.FlightNo",
        "select_candidates": [
            "select flights.FlightNo",
            "select flights.FlightNo, airlines.cntry",
            "select flights.FlightNo, airlines.Airline",
            "select flights.FlightNo, airlines.Airline, airlines.cntry"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines flights"
        ],
        "align_scores": [
            0.9946150183677673,
            0.0002876225335057825,
            0.00025737154646776617,
            8.039062959142029e-05,
            0.0002623363398015499,
            6.587739335373044e-05,
            0.00017131080676335841,
            7.330082007683814e-05
        ],
        "align_select": "select flights.FlightNo",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which flight numbers correspond to United Airlines flights?",
        "gold_select": "select flights.FlightNo",
        "select_candidates": [
            "select flights.FlightNo",
            "select distinct flights.FlightNo",
            "select flights.FlightNo, airlines.cntry",
            "select flights.FlightNo, airlines.Airline"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines flights",
            "airlines airports flights"
        ],
        "align_scores": [
            0.9935764670372009,
            0.10797977447509766,
            0.03115139901638031,
            0.0002328535047126934,
            0.00037704440183006227,
            0.0001444401714252308,
            0.0005007771542295814,
            0.00011759647895814851
        ],
        "align_select": "select flights.FlightNo",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are flight numbers of flights arriving at Airport \"APG\"?",
        "gold_select": "select flights.FlightNo",
        "select_candidates": [
            "select flights.FlightNo",
            "select flights.air, flights.FlightNo",
            "select flights.FlightNo, flights.destapt",
            "select flights.FlightNo, airports.apt_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "flights",
        "table_candidates": [
            "airports flights",
            "airlines airports flights",
            "flights"
        ],
        "align_scores": [
            0.9874100089073181,
            0.0001610416657058522,
            0.0001532046590000391,
            6.892923556733876e-05,
            0.00013884251529816538,
            6.238905916688964e-05,
            0.00015419418923556805,
            5.881513425265439e-05
        ],
        "align_select": "select flights.FlightNo",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give the flight numbers of flights landing at APG.",
        "gold_select": "select flights.FlightNo",
        "select_candidates": [
            "select flights.FlightNo",
            "select flights.air, flights.FlightNo",
            "select flights.FlightNo, flights.destapt",
            "select flights.FlightNo, flights.SourceAirport"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "flights",
        "table_candidates": [
            "flights",
            "airports flights",
            "airlines airports flights",
            "airlines flights"
        ],
        "align_scores": [
            0.9847153425216675,
            0.0001147416332969442,
            0.0002302216162206605,
            6.422160367947072e-05,
            0.00013073849549982697,
            5.613623216049746e-05,
            0.0002636004937812686,
            5.673706255038269e-05
        ],
        "align_select": "select flights.FlightNo",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are flight numbers of flights departing from City \"Aberdeen \"?",
        "gold_select": "select flights.FlightNo",
        "select_candidates": [
            "select flights.FlightNo",
            "select flights.FlightNo, airports.City",
            "select flights.FlightNo, airports.cntry",
            "select flights.FlightNo, airports.apt_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights",
            "airlines airports flights"
        ],
        "align_scores": [
            0.9940394163131714,
            0.0001435055601177737,
            0.0001754865370457992,
            6.410803325707093e-05,
            0.00025264325086027384,
            7.365543569903821e-05,
            0.00014794705202803016,
            5.7715460570761934e-05
        ],
        "align_select": "select flights.FlightNo",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give the flight numbers of flights leaving from Aberdeen.",
        "gold_select": "select flights.FlightNo",
        "select_candidates": [
            "select flights.FlightNo",
            "select flights.FlightNo, airports.City",
            "select flights.FlightNo, airports.City, flights.destapt",
            "select flights.FlightNo, airports.City, airports.cntry"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights",
            "airlines airports flights"
        ],
        "align_scores": [
            0.9918286204338074,
            0.0001242067664861679,
            0.00020197128469590098,
            5.4456901125377044e-05,
            0.00015762163093313575,
            5.7803146773949265e-05,
            0.00014995719539001584,
            6.026322444085963e-05
        ],
        "align_select": "select flights.FlightNo",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are flight numbers of flights arriving at City \"Aberdeen\"?",
        "gold_select": "select flights.FlightNo",
        "select_candidates": [
            "select flights.FlightNo",
            "select flights.FlightNo, airports.City",
            "select flights.air, flights.FlightNo",
            "select flights.FlightNo, airports.cntry"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights",
            "airlines airports flights"
        ],
        "align_scores": [
            0.9910581111907959,
            0.000125487960758619,
            0.00015841778076719493,
            5.925124423811212e-05,
            0.00016421613690908998,
            6.364582804962993e-05,
            0.00022303371224552393,
            6.42999802948907e-05
        ],
        "align_select": "select flights.FlightNo",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give the flight numbers of flights arriving in Aberdeen.",
        "gold_select": "select flights.FlightNo",
        "select_candidates": [
            "select flights.FlightNo",
            "select flights.FlightNo, airports.City",
            "select flights.air, flights.FlightNo",
            "select flights.FlightNo, airports.cntry"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights",
            "airlines airports flights"
        ],
        "align_scores": [
            0.9853159785270691,
            0.00012457850971259177,
            0.00017304842185694724,
            5.377477646106854e-05,
            0.00017903906700666994,
            6.00437524553854e-05,
            0.00017751650011632591,
            5.647713987855241e-05
        ],
        "align_select": "select flights.FlightNo",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the number of flights landing in the city of Aberdeen or Abilene.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), airports.City",
            "select count(*), airports.City",
            "select count(flights.FlightNo)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights",
            "airlines airports flights"
        ],
        "align_scores": [
            0.993893027305603,
            0.00016658191452734172,
            0.00036688477848656476,
            0.04829047992825508,
            0.00036688477848656476,
            0.04829047992825508,
            0.0015682149678468704,
            0.00011967409227509052
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many flights land in Aberdeen or Abilene?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), airports.City",
            "select count(flights.FlightNo)",
            "select count(*) aeroports(flights.FlightNo)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights",
            "airlines airports flights"
        ],
        "align_scores": [
            0.9949042797088623,
            6.928959192009643e-05,
            0.0002676218282431364,
            8.039852400543168e-05,
            0.0016587835270911455,
            6.92605972290039e-05,
            0.0003557315212674439,
            7.892845314927399e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the name of airports which do not have any flight in and out.",
        "gold_select": "select airports.apt_name",
        "select_candidates": [
            "select airports.apt_name",
            "select airports.apt_name, airports.cntry",
            "select airports.City, airports.apt_name",
            "select airports.apt_name, airports.cntry, airports.cntry_abbr"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports",
            "airports flights"
        ],
        "align_scores": [
            0.6597532629966736,
            0.8267641067504883,
            0.0003836826072074473,
            0.0010583229595795274,
            0.00022160203661769629,
            0.0003867373743560165,
            0.00026843397063203156,
            0.0003586051461752504
        ],
        "align_select": "select airports.apt_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which airports do not have departing or arriving flights?",
        "gold_select": "select airports.apt_name",
        "select_candidates": [
            "select airports.apt_name",
            "select airports.apt_name, airports.cntry",
            "select airports.cntry, airports.apt_name",
            "select airports.apt_code, airports.apt_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights",
            "airports"
        ],
        "align_scores": [
            0.1747908890247345,
            0.9392671585083008,
            0.002591913565993309,
            0.00645409245043993,
            0.0009086602949537337,
            0.0029500420205295086,
            0.015415183268487453,
            0.17075277864933014
        ],
        "align_select": "select airports.apt_name",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM"
    },
    {
        "question": "Which country does Airline \"JetBlue Airways\" belong to?",
        "gold_select": "select airlines.cntry",
        "select_candidates": [
            "select airlines.cntry",
            "select airlines.cntry, airlines.abbr",
            "select airlines.cntry, t0.c4",
            "select airlines.cntry, airlines.air"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines",
        "table_candidates": [
            "airlines"
        ],
        "align_scores": [
            0.9162126183509827,
            0.00019699388940352947,
            0.00037768547190353274,
            8.716621232451871e-05,
            0.000419615680584684,
            7.975480548338965e-05,
            0.00020774498989339918,
            7.765938062220812e-05
        ],
        "align_select": "select airlines.cntry",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What country is Jetblue Airways affiliated with?",
        "gold_select": "select airlines.cntry",
        "select_candidates": [
            "select airlines.cntry",
            "select airlines.cntry, airlines.abbr",
            "select distinct airlines.cntry",
            "select airlines.air, airlines.cntry"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines",
        "table_candidates": [
            "airlines"
        ],
        "align_scores": [
            0.5752671360969543,
            0.0001616502704564482,
            0.00036980619188398123,
            7.94625302660279e-05,
            0.09808867424726486,
            0.0005438865628093481,
            0.000217649809201248,
            6.490623491117731e-05
        ],
        "align_select": "select airlines.cntry",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the abbreviation of Airline \"JetBlue Airways\"?",
        "gold_select": "select airlines.abbr",
        "select_candidates": [
            "select airlines.abbr",
            "select airlines.air, airlines.abbr",
            "select airlines.uid, airlines.abbr",
            "select airlines.abbr, airlines.air"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines",
        "table_candidates": [
            "airlines"
        ],
        "align_scores": [
            0.9868082404136658,
            0.0002060777333099395,
            0.0002486358571331948,
            8.048428571783006e-05,
            0.00018073695537168533,
            7.488749542972073e-05,
            0.00044243730371817946,
            8.056614024098963e-05
        ],
        "align_select": "select airlines.abbr",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which abbreviation corresponds to Jetblue Airways?",
        "gold_select": "select airlines.abbr",
        "select_candidates": [
            "select airlines.abbr",
            "select airlines.air, airlines.abbr",
            "select airlines.abbr, airlines.air",
            "select airlines.abbr, airlines.air, airlines.cntry"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines",
        "table_candidates": [
            "airlines"
        ],
        "align_scores": [
            0.9307309985160828,
            0.00010949500574497506,
            0.0002447736624162644,
            6.453642708947882e-05,
            0.0005540276761166751,
            6.762848352082074e-05,
            0.00021846150048077106,
            6.827308243373409e-05
        ],
        "align_select": "select airlines.abbr",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List all airline names and their abbreviations in \"USA\".",
        "gold_select": "select airlines.air, airlines.abbr",
        "select_candidates": [
            "select airlines.air, airlines.abbr",
            "select airlines.air, airlines.abbr,",
            "select airlines.air, airlines.abbr2",
            "select airlines.air, t0.c 2"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines",
        "table_candidates": [
            "airlines"
        ],
        "align_scores": [
            0.9938919544219971,
            0.00020601075084414333,
            0.0012365463189780712,
            7.587240543216467e-05,
            0.1577269434928894,
            0.0001538147625979036,
            0.0004821952315978706,
            9.374563524033874e-05
        ],
        "align_select": "select airlines.air, airlines.abbr",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the airline names and abbreviations for airlines in the USA?",
        "gold_select": "select airlines.air, airlines.abbr",
        "select_candidates": [
            "select airlines.air, airlines.abbr",
            "select airlines.air, airlines.abbr, airlines.cntry",
            "select airlines.air, airlines.abbr, airlines.uid",
            "select avg(airlines.air), airlines.abbr"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines",
        "table_candidates": [
            "airlines"
        ],
        "align_scores": [
            0.9426560997962952,
            0.0002027121081482619,
            0.00032992238993756473,
            7.301423465833068e-05,
            0.0006307821604423225,
            7.062674558255821e-05,
            0.0005120509304106236,
            9.574494470143691e-05
        ],
        "align_select": "select airlines.air, airlines.abbr",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List the airport code and name in the city of Anthony.",
        "gold_select": "select airports.AirportCode, airports.apt_name",
        "select_candidates": [
            "select airports.AirportCode, airports.apt_name",
            "select airports.AirportCode, airports.apt_name, airports.cntry",
            "select airports.AirportCode.c1, airports.apt_name",
            "select airports.AirportCode, airports.apt_name,"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports",
        "table_candidates": [
            "airports",
            "airlines airports"
        ],
        "align_scores": [
            0.009908237494528294,
            0.00010653781646396965,
            0.0002079092664644122,
            6.032682358636521e-05,
            0.0002388384600635618,
            6.683617539238185e-05,
            0.0007862872444093227,
            5.502411659108475e-05
        ],
        "align_select": "select airports.AirportCode, airports.apt_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give the airport code and airport name corresonding to the city Anthony.",
        "gold_select": "select airports.AirportCode, airports.apt_name",
        "select_candidates": [
            "select airports.AirportCode, airports.apt_name",
            "select airports.AirportCode, airports.apt_name, airports.cntry",
            "select airports.AirportCode.c1, airports.apt_name",
            "select airports.City, airports.apt_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports",
        "table_candidates": [
            "airports"
        ],
        "align_scores": [
            0.2945215404033661,
            0.000101661920780316,
            0.0002337539626751095,
            6.92520770826377e-05,
            0.0002807366836350411,
            6.625286914641038e-05,
            0.0006455209222622216,
            0.00010407895751995966
        ],
        "align_select": "select airports.AirportCode, airports.apt_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which airline has abbreviation 'UAL'?",
        "gold_select": "select airlines.air",
        "select_candidates": [
            "select airlines.air",
            "select airlines.air, airlines.cntry",
            "select airlines.air, airlines.abbr",
            "select airlines.uid, airlines.air"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines",
        "table_candidates": [
            "airlines"
        ],
        "align_scores": [
            0.02253851294517517,
            0.00014410560834221542,
            0.00020400482753757387,
            7.590708264615387e-05,
            0.0002513545041438192,
            7.604916027048603e-05,
            0.000207075965590775,
            7.05134152667597e-05
        ],
        "align_select": "select airlines.air",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give the airline with abbreviation 'UAL'.",
        "gold_select": "select airlines.air",
        "select_candidates": [
            "select airlines.air",
            "select airlines.air, airlines.cntry",
            "select airlines.air, airlines.abbr",
            "select airlines.uid, airlines.air"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines",
        "table_candidates": [
            "airlines"
        ],
        "align_scores": [
            0.02442747727036476,
            8.97687568794936e-05,
            0.00020227461936883628,
            6.460785516537726e-05,
            0.00024017663963604718,
            7.158906373661011e-05,
            0.00017482799012213945,
            6.617130566155538e-05
        ],
        "align_select": "select airlines.air",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many airlines are from USA?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), airlines.cntry",
            "select count(*), airlines.uid",
            "select count(*), airlines.uid3"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines",
        "table_candidates": [
            "airlines"
        ],
        "align_scores": [
            0.9947322607040405,
            6.864317401777953e-05,
            0.0002606345806270838,
            5.34739883732982e-05,
            0.00026732016704045236,
            5.709958713850938e-05,
            0.00036789191653952,
            6.025351831340231e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the number of airlines in the USA.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), airlines.cntry",
            "select count(*), airlines.cntry, airlines.abbr",
            "select count(*), airlines.cntry, t0.c4"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines",
        "table_candidates": [
            "airlines"
        ],
        "align_scores": [
            0.9954919815063477,
            0.0005250831018202007,
            0.00023726759536657482,
            0.00011055823415517807,
            0.00011399144568713382,
            8.437253563897684e-05,
            0.0001774469274096191,
            8.28104602987878e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which city and country is the Alton airport at?",
        "gold_select": "select airports.City, airports.cntry",
        "select_candidates": [
            "select airports.City, airports.cntry",
            "select airports.City, airports.cntry)",
            "select t1.co, airports.cntry",
            "select airports.City, airports.cntry."
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports",
        "table_candidates": [
            "airports"
        ],
        "align_scores": [
            0.9948090314865112,
            0.0002911215415224433,
            0.001986798131838441,
            0.00010563013347564265,
            0.0007390477112494409,
            7.438529428327456e-05,
            0.012584321200847626,
            0.00011702374467859045
        ],
        "align_select": "select airports.City, airports.cntry",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give the city and country for the Alton airport.",
        "gold_select": "select airports.City, airports.cntry",
        "select_candidates": [
            "select airports.City, airports.cntry",
            "select airports.City, airports.cntry)",
            "select airports.City, airports.cntry.",
            "select t1.co, airports.cntry"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports",
        "table_candidates": [
            "airports"
        ],
        "align_scores": [
            0.9954978227615356,
            0.00031156197655946016,
            0.0014744021464139223,
            0.00011869579611811787,
            0.009257848374545574,
            0.00013080958160571754,
            0.0005372492596507072,
            8.579350105719641e-05
        ],
        "align_select": "select airports.City, airports.cntry",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the airport name for airport 'AKO'?",
        "gold_select": "select airports.apt_name",
        "select_candidates": [
            "select airports.apt_name",
            "select airports.apt_name, airports.cntry",
            "select avg(airports.apt_name)",
            "select aplairports.apt_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports",
        "table_candidates": [
            "airports"
        ],
        "align_scores": [
            0.9940007328987122,
            0.00011274350981693715,
            0.00022014220303390175,
            6.899802247062325e-05,
            0.0006442618905566633,
            5.775169120170176e-05,
            0.5908523797988892,
            0.00012837354734074324
        ],
        "align_select": "select airports.apt_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the name of the airport with code 'AKO'.",
        "gold_select": "select airports.apt_name",
        "select_candidates": [
            "select airports.apt_name",
            "select airports.apt_name, airports.cntry",
            "select apsairports.apt_name",
            "select aph.c2"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports",
        "table_candidates": [
            "airports"
        ],
        "align_scores": [
            0.9939382076263428,
            0.00013261813728604466,
            0.00020764340297318995,
            6.581385241588578e-05,
            0.6454028487205505,
            0.00014256691792979836,
            0.0006401817663572729,
            7.295396062545478e-05
        ],
        "align_select": "select airports.apt_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are airport names at City 'Aberdeen'?",
        "gold_select": "select airports.apt_name",
        "select_candidates": [
            "select airports.apt_name",
            "select airports.apt_name, airports.AirportCode",
            "select airports.City, airports.apt_name",
            "select airports.apt_name, airports.AirportCode, airports.cntry"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports",
        "table_candidates": [
            "airports"
        ],
        "align_scores": [
            0.9953824877738953,
            0.00014057151565793902,
            0.00020915611821692437,
            7.167411968111992e-05,
            0.00019552810408640653,
            7.030513370409608e-05,
            0.00015991817053873092,
            7.603414269397035e-05
        ],
        "align_select": "select airports.apt_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of airports in Aberdeen?",
        "gold_select": "select airports.apt_name",
        "select_candidates": [
            "select airports.apt_name",
            "select airports.apt_name, airports.AirportCode",
            "select ap_airports.apt_name",
            "select airports.apt_name, airports.cntry"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports",
        "table_candidates": [
            "airports"
        ],
        "align_scores": [
            0.9943922162055969,
            0.0001388854143442586,
            0.00035747786751016974,
            6.643711822107434e-05,
            0.995858371257782,
            0.00013484778173733503,
            0.00028010361711494625,
            7.199998799478635e-05
        ],
        "align_select": "select airports.apt_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many flights have destination ATO?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), flights.SourceAirport, flights.destapt",
            "select count(*), flights.air",
            "select count(*), flights.SourceAirport"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "flights",
        "table_candidates": [
            "flights",
            "airports flights"
        ],
        "align_scores": [
            0.9950729012489319,
            0.00019657363009173423,
            0.00013311389193404466,
            9.32216426008381e-05,
            0.00033289773273281753,
            0.00013459882757160813,
            0.0002916818775702268,
            0.0001938660570885986
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Count the number of flights into ATO.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), flights.SourceAirport",
            "select count(*), flights.air",
            "select count(*), airports.AirportCode"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "flights",
        "table_candidates": [
            "flights",
            "airports flights"
        ],
        "align_scores": [
            0.9801336526870728,
            0.00010939712228719145,
            0.00019855151185765862,
            0.001108467229641974,
            0.00030813764897175133,
            0.00013969361316412687,
            0.00019514872110448778,
            0.0006965980282984674
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many flights arriving in Aberdeen city?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), airports.City",
            "select count(avg(flights.FlightNo)",
            "select count(flights.FlightNo)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights",
            "airlines airports flights"
        ],
        "align_scores": [
            0.9959361553192139,
            0.00016819570737425238,
            0.0002130696811946109,
            0.0006460629520006478,
            0.0002694467839319259,
            0.0001042337971739471,
            0.0015071320813149214,
            0.0001178373713628389
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the number of flights arriving in Aberdeen.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), airports.City",
            "select count(avg(flights.FlightNo)",
            "select count(flights.FlightNo)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights"
        ],
        "align_scores": [
            0.9956936836242676,
            0.00014720798935741186,
            0.00027529223007149994,
            0.0003211100120097399,
            0.00021227158140391111,
            9.037006384460256e-05,
            0.0011604584287852049,
            0.00010028869292000309
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many flights depart from City 'Aberdeen' and have destination City 'Ashley'?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), airports.City, airports.apt_name",
            "select count(*), airports.City",
            "select count(*), airports.City (Aberdeen, airports.apt_name)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights",
            "airlines airports flights"
        ],
        "align_scores": [
            0.9948039650917053,
            0.03101499378681183,
            0.00012817661627195776,
            9.419942216482013e-05,
            0.00023933450574986637,
            0.0002912362106144428,
            0.0002093287039315328,
            0.00013197577209211886
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many flights fly from Aberdeen to Ashley?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), airports.City, airports.apt_name",
            "select count(*), airports.City (Aberdeen, airports.apt_name)",
            "select count(*), airports.City (Aberdeen), airports.apt_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights",
            "airlines airports flights"
        ],
        "align_scores": [
            0.9955410361289978,
            8.609141514170915e-05,
            0.00012082268222002313,
            5.6095930631272495e-05,
            0.0002087538450723514,
            6.9069916207809e-05,
            0.00015800051914993674,
            6.604829832213e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many flights does airline 'JetBlue Airways' have?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), airlines.air",
            "select count(*), airlines.air, airlines.cntry",
            "select count(*), airlines.air, airlines.cntry"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines flights"
        ],
        "align_scores": [
            0.9957541227340698,
            0.00022261004778556526,
            0.00036000748514197767,
            0.00040856568375602365,
            0.0001370124373352155,
            9.969597886083648e-05,
            0.0001370124373352155,
            9.969597886083648e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give the number of Jetblue Airways flights.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), airlines.air",
            "select count(*), airlines.air, airlines.cntry",
            "select count(*), airlines.air, flights.FlightNo"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines flights"
        ],
        "align_scores": [
            0.9959684610366821,
            0.0002755361783783883,
            0.0002935418451670557,
            0.0030598598532378674,
            0.00012329673336353153,
            0.00011278480087639764,
            0.0001272040099138394,
            0.00011216327402507886
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many 'United Airlines' flights go to Airport 'ASY'?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), airlines.air",
            "select count(*), airlines.air, airports.AirportCode",
            "select count(*), flights.SourceAirport, flights.destapt"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines airports flights"
        ],
        "align_scores": [
            0.993281364440918,
            0.00022108116536401212,
            0.00033363769762218,
            0.0002795188338495791,
            0.0001850435510277748,
            9.692861931398511e-05,
            0.00013182812836021185,
            9.30454334593378e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Count the number of United Airlines flights arriving in ASY Airport.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), airlines.air",
            "select count(*), airlines.air, airports.AirportCode",
            "select count(*), airlines.air, airports.AirportCode"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines airports flights"
        ],
        "align_scores": [
            0.9826706051826477,
            0.0001843296631705016,
            0.000251303194090724,
            0.0007933559827506542,
            0.00011405177792767063,
            0.00010598901280900463,
            0.00011405177792767063,
            0.00010598901280900463
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many 'United Airlines' flights depart from Airport 'AHD'?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), airports.AirportCode",
            "select count(*), airlines.air",
            "select count(*), flights.SourceAirport, flights.destapt"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines airports flights"
        ],
        "align_scores": [
            0.9949435591697693,
            0.00022214655473362654,
            0.0002989221829921007,
            0.0003072491381317377,
            0.0003363463911227882,
            0.0006693064933642745,
            0.00013154053885955364,
            0.00011787917901528999
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the number of United Airlines flights leaving from AHD Airport.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), airlines.air",
            "select count(*), airlines.air, airports.AirportCode",
            "select count(*), airlines.air, airports.AirportCode"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines airports flights"
        ],
        "align_scores": [
            0.9861131310462952,
            0.0001793483243091032,
            0.00031195010524243116,
            0.001173855154775083,
            0.00014561283751390874,
            9.880464494926855e-05,
            0.00014561283751390874,
            9.880464494926855e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many United Airlines flights go to City 'Aberdeen'?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), airlines.air",
            "select count(*), airlines.air, airports.City",
            "select count(*), airlines.air, airports.City"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines airports flights",
        "table_candidates": [
            "airlines airports flights",
            "airlines airports airports flights"
        ],
        "align_scores": [
            0.9951984286308289,
            0.0004951676237396896,
            0.0003483522741589695,
            0.00038879335625097156,
            0.0001816434523789212,
            9.58412274485454e-05,
            0.0001816434523789212,
            9.58412274485454e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Count the number of United Airlines flights that arrive in Aberdeen.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), airlines.air",
            "select count(*), airlines.air, airports.City",
            "select count(distinct flights.FlightNo)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines airports flights",
        "table_candidates": [
            "airlines airports flights",
            "airlines airports airports flights"
        ],
        "align_scores": [
            0.9947240948677063,
            0.00024097140703815967,
            0.00032594631193205714,
            0.000988475396297872,
            0.0001464280649088323,
            9.33134215301834e-05,
            0.0010971977608278394,
            9.895078983390704e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which city has most number of arriving flights?",
        "gold_select": "select airports.City",
        "select_candidates": [
            "select airports.City",
            "select airports.City, flights.SourceAirport",
            "select airports.City, airports.cntry",
            "select airports.City, airports.apt_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights"
        ],
        "align_scores": [
            0.992913544178009,
            5.990580393699929e-05,
            0.0005821904051117599,
            6.156974995974451e-05,
            0.001009758678264916,
            6.121893966337666e-05,
            0.0003225490509066731,
            5.8549434470478445e-05
        ],
        "align_select": "select airports.City",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Which city has the most frequent destination airport?",
        "gold_select": "select airports.City",
        "select_candidates": [
            "select airports.City",
            "select airports.City, airports.AirportCode",
            "select airports.City, flights.SourceAirport",
            "select airports.City, airports.AirportCode, airports.apt_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights",
            "airlines flights"
        ],
        "align_scores": [
            0.9944097399711609,
            6.858540291432291e-05,
            0.0021245607640594244,
            7.153666228987277e-05,
            0.00028082344215363264,
            6.536620639963076e-05,
            0.00025236207875423133,
            6.836560351075605e-05
        ],
        "align_select": "select airports.City",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the code of airport that has the highest number of flights?",
        "gold_select": "select airports.AirportCode",
        "select_candidates": [
            "select airports.AirportCode",
            "select airports.AirportCode, flights.SourceAirport",
            "select airports.AirportCode, flights.SourceAirport, flights.destapt",
            "select airports.AirportCode, airports.apt_name, airports.cntry"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights"
        ],
        "align_scores": [
            0.9888505339622498,
            7.189762982307002e-05,
            0.005894104950129986,
            8.117691322695464e-05,
            0.0014472813345491886,
            7.145199197111651e-05,
            0.0006505173514597118,
            7.370054663624614e-05
        ],
        "align_select": "select airports.AirportCode",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the airport code of the airport with the most flights?",
        "gold_select": "select airports.AirportCode",
        "select_candidates": [
            "select airports.AirportCode",
            "select airports.AirportCode, flights.SourceAirport",
            "select airports.AirportCode, flights.SourceAirport, flights.destapt",
            "select airports.AirportCode, airports.cntry"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights"
        ],
        "align_scores": [
            0.9937195777893066,
            8.271331171272323e-05,
            0.0038178658578544855,
            6.764615682186559e-05,
            0.0008149718050844967,
            6.139305332908407e-05,
            0.0023184260353446007,
            6.834122905274853e-05
        ],
        "align_select": "select airports.AirportCode",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the code of airport that has fewest number of flights?",
        "gold_select": "select airports.AirportCode",
        "select_candidates": [
            "select airports.AirportCode",
            "select airports.AirportCode, flights.SourceAirport",
            "select airports.AirportCode, airports.cntry",
            "select airports.AirportCode, airports.apt_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights"
        ],
        "align_scores": [
            0.9908728003501892,
            6.950228271307424e-05,
            0.0031560594215989113,
            7.159548113122582e-05,
            0.0020004126708954573,
            6.980543548706919e-05,
            0.001341954106464982,
            7.191435724962503e-05
        ],
        "align_select": "select airports.AirportCode",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Give the code of the airport with the least flights.",
        "gold_select": "select airports.AirportCode",
        "select_candidates": [
            "select airports.AirportCode",
            "select airports.AirportCode, flights.SourceAirport",
            "select airports.AirportCode, flights.SourceAirport, flights.destapt",
            "select airports.AirportCode, airports.apt_name, airports.cntry"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights"
        ],
        "align_scores": [
            0.9946069121360779,
            7.807342626620084e-05,
            0.0024859795812517405,
            6.0723461501765996e-05,
            0.0006405138410627842,
            5.547300315811299e-05,
            0.0003208707203157246,
            6.205575482454151e-05
        ],
        "align_select": "select airports.AirportCode",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Which airline has most number of flights?",
        "gold_select": "select airlines.air",
        "select_candidates": [
            "select airlines.air",
            "select airlines.air, airlines.cntry",
            "select airlines.air (airlines.abbr), airlines.cntry",
            "select airlines.air, airlines.cntry, airlines.cntry"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines flights"
        ],
        "align_scores": [
            0.9648241996765137,
            5.637802314595319e-05,
            0.0032320404425263405,
            5.521544881048612e-05,
            0.0009812952484935522,
            5.231608884059824e-05,
            0.0002962461730930954,
            5.649362719850615e-05
        ],
        "align_select": "select airlines.air",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What airline serves the most flights?",
        "gold_select": "select airlines.air",
        "select_candidates": [
            "select airlines.air",
            "select airlines.air, airlines.cntry",
            "select airlines.air (airlines.abbr), airlines.cntry",
            "select airlines.uid, airlines.air"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines flights"
        ],
        "align_scores": [
            0.9802573323249817,
            5.428020813269541e-05,
            0.0027556822169572115,
            5.808285277453251e-05,
            0.0010073420125991106,
            5.479058745549992e-05,
            0.0005193940014578402,
            6.104976637288928e-05
        ],
        "align_select": "select airlines.air",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Find the abbreviation and country of the airline that has fewest number of flights?",
        "gold_select": "select airlines.abbr, airlines.cntry",
        "select_candidates": [
            "select airlines.abbr, airlines.cntry",
            "select airlines.air, airlines.cntry",
            "select airlines.cntry, airlines.abbr",
            "select airlines.abbr), airlines.cntry"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines flights"
        ],
        "align_scores": [
            0.9919582605361938,
            8.774063462624326e-05,
            0.9863030314445496,
            9.578548633726314e-05,
            0.9919865131378174,
            9.04741245904006e-05,
            0.010100297629833221,
            7.010243280092254e-05
        ],
        "align_select": "select airlines.abbr, airlines.cntry",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the abbreviation of the airilne has the fewest flights and what country is it in?",
        "gold_select": "select airlines.abbr, airlines.cntry",
        "select_candidates": [
            "select airlines.abbr, airlines.cntry",
            "select airlines.air, airlines.abbr, airlines.cntry",
            "select airlines.uid, airlines.abbr, airlines.cntry",
            "select airlines.air, airlines.cntry"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines flights"
        ],
        "align_scores": [
            0.9900864958763123,
            0.000100505436421372,
            0.0014114361256361008,
            8.95799312274903e-05,
            0.0013170192250981927,
            7.408302190015092e-05,
            0.9777114987373352,
            9.650280117057264e-05
        ],
        "align_select": "select airlines.abbr, airlines.cntry",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What are airlines that have some flight departing from airport 'AHD'?",
        "gold_select": "select airlines.air",
        "select_candidates": [
            "select airlines.air",
            "select airlines.air, airlines.abbr",
            "select airlines.air, airlines.cntry",
            "select distinct airlines.air, airlines.abbr"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines airports flights"
        ],
        "align_scores": [
            0.779681921005249,
            0.004815638065338135,
            0.0003817658289335668,
            0.000143106808536686,
            0.00039637452573515475,
            0.00016147310088854283,
            0.0006307461299002171,
            9.397629037266597e-05
        ],
        "align_select": "select airlines.air",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which airlines have a flight with source airport AHD?",
        "gold_select": "select airlines.air",
        "select_candidates": [
            "select airlines.air",
            "select airlines.air, airlines.abbr",
            "select airlines.air, airlines.cntry",
            "select airlines.air, airlines.abbr, airlines.cntry"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines flights",
            "airlines airports flights"
        ],
        "align_scores": [
            0.7113634347915649,
            0.0003186004178132862,
            0.00036866904702037573,
            8.919176616473123e-05,
            0.0004536079941317439,
            9.742483962327242e-05,
            0.0002490415354259312,
            8.049664756981656e-05
        ],
        "align_select": "select airlines.air",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are airlines that have flights arriving at airport 'AHD'?",
        "gold_select": "select airlines.air",
        "select_candidates": [
            "select airlines.air",
            "select airlines.air, airlines.abbr",
            "select airlines.air, airlines.cntry",
            "select airlines.air, airlines.abbr, airlines.cntry"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines airports flights"
        ],
        "align_scores": [
            0.6247303485870361,
            0.005476123653352261,
            0.0003369577752891928,
            0.00013385608326643705,
            0.00043304034625180066,
            0.0001617782691027969,
            0.0002659020246937871,
            0.00010282170842401683
        ],
        "align_select": "select airlines.air",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which airlines have a flight with destination airport AHD?",
        "gold_select": "select airlines.air",
        "select_candidates": [
            "select airlines.air",
            "select airlines.air, airlines.cntry",
            "select airlines.air, airlines.abbr",
            "select distinct airlines.air"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines airports flights",
            "airlines flights"
        ],
        "align_scores": [
            0.855359673500061,
            0.002687897300347686,
            0.0004208158061373979,
            0.00016303849406540394,
            0.0003088564844802022,
            0.00012652283476199955,
            0.3628523051738739,
            0.0011304731015115976
        ],
        "align_select": "select airlines.air",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find all airlines that have flights from both airports 'APG' and 'CVO'.",
        "gold_select": "select airlines.air",
        "select_candidates": [
            "select airlines.air",
            "select airlines.uid",
            "select airlines.air, airlines.abbr",
            "select airlines.abbr"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines airports flights",
            "airlines flights"
        ],
        "align_scores": [
            0.9873955845832825,
            0.9873955845832825,
            0.9949101805686951,
            0.9949101805686951,
            0.0003819558769464493,
            0.0003819558769464493,
            0.9910869002342224,
            0.9910869002342224
        ],
        "align_select": "select airlines.air",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "Which airlines have departing flights from both APG and CVO airports?",
        "gold_select": "select airlines.air",
        "select_candidates": [
            "select airlines.air",
            "select airlines.air, airlines.cntry",
            "select airlines.air, airlines.abbr",
            "select airlines.abbr, airlines.air"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines airports flights",
            "airlines flights"
        ],
        "align_scores": [
            0.962900698184967,
            0.962900698184967,
            0.00034891278482973576,
            0.00034891278482973576,
            0.00040801201248541474,
            0.00040801201248541474,
            0.00040149062988348305,
            0.00040149062988348305
        ],
        "align_select": "select airlines.air",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "Find all airlines that have flights from airport 'CVO' but not from 'APG'.",
        "gold_select": "select airlines.air",
        "select_candidates": [
            "select airlines.air",
            "select airlines.air, airlines.abbr",
            "select airlines.air, airlines.cntry",
            "select airlines.uid"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines airports flights"
        ],
        "align_scores": [
            0.9854034185409546,
            0.9854034185409546,
            0.0004547301505226642,
            0.0004547301505226642,
            0.00047212393837980926,
            0.00047212393837980926,
            0.9925991296768188,
            0.9925991296768188
        ],
        "align_select": "select airlines.air",
        "align_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "Which airlines have departures from CVO but not from APG airports?",
        "gold_select": "select airlines.air",
        "select_candidates": [
            "select airlines.air",
            "select airlines.air, airlines.abbr",
            "select airlines.air, airlines.cntry",
            "select airlines.uid"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines airports flights"
        ],
        "align_scores": [
            0.9669302105903625,
            0.9196335077285767,
            0.0005769047420471907,
            0.00046848325291648507,
            0.0004601081018336117,
            0.0003948679950553924,
            0.9833977222442627,
            0.9726564288139343
        ],
        "align_select": "select airlines.air",
        "align_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "Find all airlines that have at least 10 flights.",
        "gold_select": "select airlines.air",
        "select_candidates": [
            "select airlines.air",
            "select airlines.air, airlines.cntry",
            "select airlines.air, airlines.abbr",
            "select airlines.air, flights.air"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines flights"
        ],
        "align_scores": [
            0.9458267092704773,
            0.0001236775133293122,
            0.0011672620894387364,
            6.51260997983627e-05,
            0.0026193619705736637,
            8.278526365756989e-05,
            0.000872679753229022,
            6.343477434711531e-05
        ],
        "align_select": "select airlines.air",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Which airlines have at least 10 flights?",
        "gold_select": "select airlines.air",
        "select_candidates": [
            "select airlines.air",
            "select airlines.air, airlines.cntry",
            "select airlines.air, airlines.abbr",
            "select airlines.abbr, airlines.air"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines flights"
        ],
        "align_scores": [
            0.8693066239356995,
            0.00013585433771368116,
            0.001888655824586749,
            7.732994708931074e-05,
            0.008934635668992996,
            9.94908477878198e-05,
            0.007861696183681488,
            9.09410446183756e-05
        ],
        "align_select": "select airlines.air",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Find all airlines that have fewer than 200 flights.",
        "gold_select": "select airlines.air",
        "select_candidates": [
            "select airlines.air",
            "select airlines.air, airlines.cntry",
            "select airlines.air, airlines.abbr",
            "select airlines.cntry, airlines.air"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines flights"
        ],
        "align_scores": [
            0.8970091342926025,
            0.00038465403486043215,
            0.0007511660223826766,
            7.074308814480901e-05,
            0.0019977535121142864,
            0.00012332422193139791,
            0.0006787106394767761,
            7.87785102147609e-05
        ],
        "align_select": "select airlines.air",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Which airlines have less than 200 flights?",
        "gold_select": "select airlines.air",
        "select_candidates": [
            "select airlines.air",
            "select airlines.air, airlines.abbr",
            "select airlines.air, airlines.cntry",
            "select airlines.uid, airlines.air"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines flights"
        ],
        "align_scores": [
            0.7566782236099243,
            0.0005421019741334021,
            0.00582280196249485,
            0.00017731872503645718,
            0.0013565716799348593,
            8.4596176748164e-05,
            0.00045520116691477597,
            9.788933675736189e-05
        ],
        "align_select": "select airlines.air",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are flight numbers of Airline \"United Airlines\"?",
        "gold_select": "select flights.FlightNo",
        "select_candidates": [
            "select flights.FlightNo",
            "select flights.air, flights.FlightNo",
            "select flights.FlightNo, airlines.cntry",
            "select flights.FlightNo, airlines.abbr"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines flights"
        ],
        "align_scores": [
            0.9946150183677673,
            0.0002876225335057825,
            0.00017915040371008217,
            7.678237307118252e-05,
            0.00025737154646776617,
            8.039062959142029e-05,
            0.00027614261489361525,
            8.802246156847104e-05
        ],
        "align_select": "select flights.FlightNo",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which flight numbers correspond to United Airlines flights?",
        "gold_select": "select flights.FlightNo",
        "select_candidates": [
            "select flights.FlightNo",
            "select distinct flights.FlightNo",
            "select flights.air, flights.FlightNo",
            "select flights.FlightNo, airlines.cntry"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines flights",
            "airlines airports flights"
        ],
        "align_scores": [
            0.9935764670372009,
            0.0002191871462855488,
            0.03115139901638031,
            0.0001318991562584415,
            0.0002072972129099071,
            6.819826376158744e-05,
            0.00037704440183006227,
            8.11190257081762e-05
        ],
        "align_select": "select flights.FlightNo",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are flight numbers of flights arriving at Airport \"APG\"?",
        "gold_select": "select flights.FlightNo",
        "select_candidates": [
            "select flights.FlightNo",
            "select flights.air, flights.FlightNo",
            "select flights.FlightNo, airports.AirportCode",
            "select flights.FlightNo, flights.destapt"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "flights",
        "table_candidates": [
            "airports flights",
            "airlines airports flights"
        ],
        "align_scores": [
            0.9874100089073181,
            0.0001610416657058522,
            0.0001532046590000391,
            6.892923556733876e-05,
            0.00015502019959967583,
            6.216870679054409e-05,
            0.00013884251529816538,
            6.238905916688964e-05
        ],
        "align_select": "select flights.FlightNo",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give the flight numbers of flights landing at APG.",
        "gold_select": "select flights.FlightNo",
        "select_candidates": [
            "select flights.FlightNo",
            "select flights.air, flights.FlightNo",
            "select flights.FlightNo, flights.destapt",
            "select flights.FlightNo, flights.SourceAirport"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "flights",
        "table_candidates": [
            "flights",
            "airports flights",
            "airlines airports flights",
            "airlines flights"
        ],
        "align_scores": [
            0.9847153425216675,
            0.0001147416332969442,
            0.0002302216162206605,
            6.422160367947072e-05,
            0.00013073849549982697,
            5.613623216049746e-05,
            0.0002636004937812686,
            5.673706255038269e-05
        ],
        "align_select": "select flights.FlightNo",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are flight numbers of flights arriving at City \"Aberdeen\"?",
        "gold_select": "select flights.FlightNo",
        "select_candidates": [
            "select flights.FlightNo",
            "select flights.FlightNo, airports.City",
            "select flights.air, flights.FlightNo",
            "select flights.FlightNo, airports.cntry"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights",
            "airlines airports flights"
        ],
        "align_scores": [
            0.9910581111907959,
            0.000125487960758619,
            0.00015841778076719493,
            5.925124423811212e-05,
            0.00016421613690908998,
            6.364582804962993e-05,
            0.00022303371224552393,
            6.42999802948907e-05
        ],
        "align_select": "select flights.FlightNo",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give the flight numbers of flights arriving in Aberdeen.",
        "gold_select": "select flights.FlightNo",
        "select_candidates": [
            "select flights.FlightNo",
            "select flights.FlightNo, airports.City",
            "select flights.air, flights.FlightNo",
            "select flights.FlightNo, airports.AirportCode"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights",
            "airlines airports flights"
        ],
        "align_scores": [
            0.9853159785270691,
            0.00012457850971259177,
            0.00017304842185694724,
            5.377477646106854e-05,
            0.00017903906700666994,
            6.00437524553854e-05,
            0.0001480458304286003,
            5.238143785391003e-05
        ],
        "align_select": "select flights.FlightNo",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the number of flights landing in the city of Aberdeen or Abilene.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), airports.City",
            "select count(*) aeroports(flights.FlightNo)",
            "select count(*) aeroport.c0"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights",
            "airlines airports flights"
        ],
        "align_scores": [
            0.993893027305603,
            0.00016658191452734172,
            0.00036688477848656476,
            0.04829047992825508,
            0.00045266590313985944,
            0.00012829866318497807,
            0.0005155702820047736,
            0.0001774973643478006
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many flights land in Aberdeen or Abilene?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), airports.City",
            "select count(*) aeroports(flights.FlightNo)",
            "select count(*) dept. airports.City"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights",
            "airlines airports flights"
        ],
        "align_scores": [
            0.9949042797088623,
            6.928959192009643e-05,
            0.0002676218282431364,
            8.039852400543168e-05,
            0.0003557315212674439,
            7.892845314927399e-05,
            0.0005057652015239,
            7.555429328931496e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the name of airports which do not have any flight in and out.",
        "gold_select": "select airports.apt_name",
        "select_candidates": [
            "select airports.apt_name",
            "select airports.City, airports.apt_name",
            "select airports.apt_name, airports.cntry",
            "select airports.apt_name, airports.cntry, airports.cntry_abbr"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports",
            "airports flights"
        ],
        "align_scores": [
            0.6597532629966736,
            0.8267641067504883,
            0.00022160203661769629,
            0.0003867373743560165,
            0.0003836826072074473,
            0.0010583229595795274,
            0.00026843397063203156,
            0.0003586051461752504
        ],
        "align_select": "select airports.apt_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which airports do not have departing or arriving flights?",
        "gold_select": "select airports.apt_name",
        "select_candidates": [
            "select airports.AirportCode",
            "select airports.apt_name",
            "select airports.AirportCode, airports.apt_name",
            "select airports.apt_name, airports.AirportCode"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights",
            "airports"
        ],
        "align_scores": [
            0.08390932530164719,
            0.9679743647575378,
            0.1747908890247345,
            0.9392671585083008,
            0.003612079657614231,
            0.058844100683927536,
            0.004927918780595064,
            0.0343206450343132
        ],
        "align_select": "select airports.AirportCode",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM"
    },
    {
        "question": "Which country does Airline \"JetBlue Airways\" belong to?",
        "gold_select": "select airlines.cntry",
        "select_candidates": [
            "select airlines.cntry",
            "select airlines.cntry, airlines.abbr",
            "select airlines.cntry, t0.c4",
            "select airlines.cntry, airlines.air"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines",
        "table_candidates": [
            "airlines"
        ],
        "align_scores": [
            0.9162126183509827,
            0.00019699388940352947,
            0.00037768547190353274,
            8.716621232451871e-05,
            0.000419615680584684,
            7.975480548338965e-05,
            0.00020774498989339918,
            7.765938062220812e-05
        ],
        "align_select": "select airlines.cntry",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What country is Jetblue Airways affiliated with?",
        "gold_select": "select airlines.cntry",
        "select_candidates": [
            "select airlines.cntry",
            "select airlines.cntry, airlines.abbr",
            "select distinct airlines.cntry",
            "select airlines.air, airlines.cntry"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines",
        "table_candidates": [
            "airlines"
        ],
        "align_scores": [
            0.5752671360969543,
            0.0001616502704564482,
            0.00036980619188398123,
            7.94625302660279e-05,
            0.09808867424726486,
            0.0005438865628093481,
            0.000217649809201248,
            6.490623491117731e-05
        ],
        "align_select": "select airlines.cntry",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the abbreviation of Airline \"JetBlue Airways\"?",
        "gold_select": "select airlines.abbr",
        "select_candidates": [
            "select airlines.abbr",
            "select airlines.air, airlines.abbr",
            "select airlines.uid, airlines.abbr",
            "select airlines.abbr, airlines.air"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines",
        "table_candidates": [
            "airlines"
        ],
        "align_scores": [
            0.9868082404136658,
            0.0002060777333099395,
            0.0002486358571331948,
            8.048428571783006e-05,
            0.00018073695537168533,
            7.488749542972073e-05,
            0.00044243730371817946,
            8.056614024098963e-05
        ],
        "align_select": "select airlines.abbr",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which abbreviation corresponds to Jetblue Airways?",
        "gold_select": "select airlines.abbr",
        "select_candidates": [
            "select airlines.abbr",
            "select airlines.air, airlines.abbr",
            "select airlines.abbr, airlines.air",
            "select airlines.abbr, airlines.air, airlines.cntry"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines",
        "table_candidates": [
            "airlines"
        ],
        "align_scores": [
            0.9307309985160828,
            0.00010949500574497506,
            0.0002447736624162644,
            6.453642708947882e-05,
            0.0005540276761166751,
            6.762848352082074e-05,
            0.00021846150048077106,
            6.827308243373409e-05
        ],
        "align_select": "select airlines.abbr",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List all airline names and their abbreviations in \"USA\".",
        "gold_select": "select airlines.air, airlines.abbr",
        "select_candidates": [
            "select airlines.air, airlines.abbr",
            "select airlines.air, airlines.abbr,",
            "select airlines.air, airlines.abbr2",
            "select airlines.air, airlines.uid2"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines",
        "table_candidates": [
            "airlines"
        ],
        "align_scores": [
            0.9938919544219971,
            0.00020601075084414333,
            0.0012365463189780712,
            7.587240543216467e-05,
            0.1577269434928894,
            0.0001538147625979036,
            0.0011172258527949452,
            7.277033000718802e-05
        ],
        "align_select": "select airlines.air, airlines.abbr",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the airline names and abbreviations for airlines in the USA?",
        "gold_select": "select airlines.air, airlines.abbr",
        "select_candidates": [
            "select airlines.air, airlines.abbr",
            "select airlines.air, airlines.abbr, airlines.cntry",
            "select avg(airlines.air), airlines.abbr",
            "select airlines.air, airlines.abbr, airlines.uid"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines",
        "table_candidates": [
            "airlines"
        ],
        "align_scores": [
            0.9426560997962952,
            0.0002027121081482619,
            0.00032992238993756473,
            7.301423465833068e-05,
            0.0005120509304106236,
            9.574494470143691e-05,
            0.0006307821604423225,
            7.062674558255821e-05
        ],
        "align_select": "select airlines.air, airlines.abbr",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List the airport code and name in the city of Anthony.",
        "gold_select": "select airports.AirportCode, airports.apt_name",
        "select_candidates": [
            "select airports.AirportCode, airports.apt_name",
            "select airports.AirportCode, airports.apt_name, airports.cntry",
            "select airports.AirportCode.c1, airports.apt_name",
            "select airports.AirportCode, airports.apt_name,"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports",
        "table_candidates": [
            "airports"
        ],
        "align_scores": [
            0.009908237494528294,
            0.00010653781646396965,
            0.0002079092664644122,
            6.032682358636521e-05,
            0.0002388384600635618,
            6.683617539238185e-05,
            0.0007862872444093227,
            5.502411659108475e-05
        ],
        "align_select": "select airports.AirportCode, airports.apt_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give the airport code and airport name corresonding to the city Anthony.",
        "gold_select": "select airports.AirportCode, airports.apt_name",
        "select_candidates": [
            "select airports.AirportCode, airports.apt_name",
            "select airports.AirportCode, airports.apt_name, airports.cntry",
            "select airports.AirportCode.c1, airports.apt_name",
            "select airports.City, airports.apt_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports",
        "table_candidates": [
            "airports"
        ],
        "align_scores": [
            0.2945215404033661,
            0.000101661920780316,
            0.0002337539626751095,
            6.92520770826377e-05,
            0.0002807366836350411,
            6.625286914641038e-05,
            0.0006455209222622216,
            0.00010407895751995966
        ],
        "align_select": "select airports.AirportCode, airports.apt_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which airline has abbreviation 'UAL'?",
        "gold_select": "select airlines.air",
        "select_candidates": [
            "select airlines.air",
            "select airlines.air, airlines.cntry",
            "select airlines.air, airlines.abbr",
            "select airlines.uid, airlines.air"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines",
        "table_candidates": [
            "airlines"
        ],
        "align_scores": [
            0.02253851294517517,
            0.00014410560834221542,
            0.00020400482753757387,
            7.590708264615387e-05,
            0.0002513545041438192,
            7.604916027048603e-05,
            0.000207075965590775,
            7.05134152667597e-05
        ],
        "align_select": "select airlines.air",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give the airline with abbreviation 'UAL'.",
        "gold_select": "select airlines.air",
        "select_candidates": [
            "select airlines.air",
            "select airlines.air, airlines.cntry",
            "select airlines.air, airlines.abbr",
            "select airlines.uid, airlines.air"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines",
        "table_candidates": [
            "airlines"
        ],
        "align_scores": [
            0.02442747727036476,
            8.97687568794936e-05,
            0.00020227461936883628,
            6.460785516537726e-05,
            0.00024017663963604718,
            7.158906373661011e-05,
            0.00017482799012213945,
            6.617130566155538e-05
        ],
        "align_select": "select airlines.air",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many airlines are from USA?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), airlines.cntry",
            "select count(*), airlines.uid",
            "select count(*), airlines.uid3"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines",
        "table_candidates": [
            "airlines"
        ],
        "align_scores": [
            0.9947322607040405,
            6.864317401777953e-05,
            0.0002606345806270838,
            5.34739883732982e-05,
            0.00026732016704045236,
            5.709958713850938e-05,
            0.00036789191653952,
            6.025351831340231e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the number of airlines in the USA.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), airlines.cntry",
            "select count(*), airlines.cntry, airlines.abbr",
            "select count(*), airlines.cntry, t0.c4"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines",
        "table_candidates": [
            "airlines"
        ],
        "align_scores": [
            0.9954919815063477,
            0.0005250831018202007,
            0.00023726759536657482,
            0.00011055823415517807,
            0.00011399144568713382,
            8.437253563897684e-05,
            0.0001774469274096191,
            8.28104602987878e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which city and country is the Alton airport at?",
        "gold_select": "select airports.City, airports.cntry",
        "select_candidates": [
            "select airports.City, airports.cntry",
            "select airports.City, airports.cntry)",
            "select t1.co, airports.cntry",
            "select airports.City, airports.cntry."
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports",
        "table_candidates": [
            "airports"
        ],
        "align_scores": [
            0.9948090314865112,
            0.0002911215415224433,
            0.001986798131838441,
            0.00010563013347564265,
            0.0007390477112494409,
            7.438529428327456e-05,
            0.012584321200847626,
            0.00011702374467859045
        ],
        "align_select": "select airports.City, airports.cntry",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give the city and country for the Alton airport.",
        "gold_select": "select airports.City, airports.cntry",
        "select_candidates": [
            "select airports.City, airports.cntry",
            "select airports.City, airports.cntry)",
            "select airports.City, airports.cntry.",
            "select t1.co, airports.cntry"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports",
        "table_candidates": [
            "airports"
        ],
        "align_scores": [
            0.9954978227615356,
            0.00031156197655946016,
            0.0014744021464139223,
            0.00011869579611811787,
            0.009257848374545574,
            0.00013080958160571754,
            0.0005372492596507072,
            8.579350105719641e-05
        ],
        "align_select": "select airports.City, airports.cntry",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the airport name for airport 'AKO'?",
        "gold_select": "select airports.apt_name",
        "select_candidates": [
            "select airports.apt_name",
            "select airports.apt_name, airports.cntry",
            "select avg(airports.apt_name)",
            "select aplairports.apt_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports",
        "table_candidates": [
            "airports"
        ],
        "align_scores": [
            0.9940007328987122,
            0.00011274350981693715,
            0.00022014220303390175,
            6.899802247062325e-05,
            0.0006442618905566633,
            5.775169120170176e-05,
            0.5908523797988892,
            0.00012837354734074324
        ],
        "align_select": "select airports.apt_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the name of the airport with code 'AKO'.",
        "gold_select": "select airports.apt_name",
        "select_candidates": [
            "select airports.apt_name",
            "select airports.apt_name, airports.cntry",
            "select ap_airports.apt_name",
            "select aplairports.apt_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports",
        "table_candidates": [
            "airports"
        ],
        "align_scores": [
            0.9939382076263428,
            0.00013261813728604466,
            0.00020764340297318995,
            6.581385241588578e-05,
            0.9904578924179077,
            0.00013559496437665075,
            0.34757164120674133,
            0.0001477954792790115
        ],
        "align_select": "select airports.apt_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are airport names at City 'Aberdeen'?",
        "gold_select": "select airports.apt_name",
        "select_candidates": [
            "select airports.apt_name",
            "select airports.apt_name, airports.AirportCode",
            "select airports.City, airports.apt_name",
            "select airports.apt_name, airports.AirportCode, airports.cntry"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports",
        "table_candidates": [
            "airports"
        ],
        "align_scores": [
            0.9953824877738953,
            0.00014057151565793902,
            0.00020915611821692437,
            7.167411968111992e-05,
            0.00019552810408640653,
            7.030513370409608e-05,
            0.00015991817053873092,
            7.603414269397035e-05
        ],
        "align_select": "select airports.apt_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of airports in Aberdeen?",
        "gold_select": "select airports.apt_name",
        "select_candidates": [
            "select airports.apt_name",
            "select airports.apt_name, airports.AirportCode",
            "select airports.apt_name, airports.cntry",
            "select ap_airports.apt_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports",
        "table_candidates": [
            "airports"
        ],
        "align_scores": [
            0.9943922162055969,
            0.0001388854143442586,
            0.00035747786751016974,
            6.643711822107434e-05,
            0.00028010361711494625,
            7.199998799478635e-05,
            0.995858371257782,
            0.00013484778173733503
        ],
        "align_select": "select airports.apt_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many flights depart from 'APG'?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), airports.AirportCode",
            "select count(distinct flights.FlightNo)",
            "select count(departures)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "flights",
        "table_candidates": [
            "airports flights",
            "airlines airports flights"
        ],
        "align_scores": [
            0.9959380626678467,
            0.0001340210874332115,
            0.0003178386250510812,
            0.0001728808565530926,
            0.004394860006868839,
            8.514442015439272e-05,
            0.9209997057914734,
            0.00012476276606321335
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Count the number of flights departing from 'APG'.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), airports.AirportCode",
            "select count(distinct flights.FlightNo)",
            "select count(*), airports.City"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "flights",
        "table_candidates": [
            "airports flights",
            "airlines airports flights"
        ],
        "align_scores": [
            0.9958303570747375,
            0.00011318903125356883,
            0.00030773840262554586,
            0.00015257835912052542,
            0.001561528304591775,
            8.086293382802978e-05,
            0.0003872440429404378,
            0.0009535190765745938
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many flights have destination ATO?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), flights.air",
            "select count(*), flights.FlightNo",
            "select count(*), flights.FlightNo, flights.destapt"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "flights",
        "table_candidates": [
            "flights",
            "airports flights",
            "airlines airports flights",
            "airlines flights"
        ],
        "align_scores": [
            0.9950729012489319,
            0.00019657363009173423,
            0.00033289773273281753,
            0.00013459882757160813,
            0.0002647227665875107,
            0.0002954262599814683,
            0.0001459081977372989,
            9.69165048445575e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Count the number of flights into ATO.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), flights.air",
            "select count(*), airports.AirportCode",
            "select count(*), flights.FlightNo"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "flights",
        "table_candidates": [
            "flights",
            "airports flights",
            "airlines airports flights",
            "airlines flights"
        ],
        "align_scores": [
            0.9801336526870728,
            0.00010939712228719145,
            0.00030813764897175133,
            0.00013969361316412687,
            0.00019514872110448778,
            0.0006965980282984674,
            0.00017925941210705787,
            0.00027394513017497957
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many flights depart from City Aberdeen?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(distinct flights.FlightNo)",
            "select count(*), airports.City",
            "select count(flights.FlightNo)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights",
            "airlines airports flights"
        ],
        "align_scores": [
            0.9956960678100586,
            0.0001549486769363284,
            0.0041637844406068325,
            8.619836444268003e-05,
            0.00021447280596476048,
            0.0007377230213023722,
            0.009391041472554207,
            0.00011573488882277161
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the number of flights departing from Aberdeen.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), airports.City",
            "select count(distinct flights.FlightNo)",
            "select count(flights.FlightNo)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights"
        ],
        "align_scores": [
            0.9956122636795044,
            0.00013118406059220433,
            0.0003008176281582564,
            0.00040345866000279784,
            0.0013719205744564533,
            7.359576557064429e-05,
            0.008027797564864159,
            9.558730380376801e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many flights arriving in Aberdeen city?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), airports.City",
            "select count(avg(flights.FlightNo)",
            "select count(flights.FlightNo)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights",
            "airlines airports flights"
        ],
        "align_scores": [
            0.9959361553192139,
            0.00016819570737425238,
            0.0002130696811946109,
            0.0006460629520006478,
            0.0002694467839319259,
            0.0001042337971739471,
            0.0015071320813149214,
            0.0001178373713628389
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the number of flights arriving in Aberdeen.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), airports.City",
            "select count(avg(flights.FlightNo)",
            "select count(flights.FlightNo)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights",
            "airlines airports flights",
            "airports"
        ],
        "align_scores": [
            0.9956936836242676,
            0.00014720798935741186,
            0.00027529223007149994,
            0.0003211100120097399,
            0.00021227158140391111,
            9.037006384460256e-05,
            0.0011604584287852049,
            0.00010028869292000309
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many flights depart from City 'Aberdeen' and have destination City 'Ashley'?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), airports.City, airports.apt_name",
            "select count(*), airports.City",
            "select count(*), airports.City (Aberdeen, airports.apt_name)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights",
            "airlines airports flights"
        ],
        "align_scores": [
            0.9948039650917053,
            0.03101499378681183,
            0.00012817661627195776,
            9.419942216482013e-05,
            0.00023933450574986637,
            0.0002912362106144428,
            0.0002093287039315328,
            0.00013197577209211886
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many flights fly from Aberdeen to Ashley?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), airports.City, airports.apt_name",
            "select count(*), airports.City (Aberdeen), airports.apt_name",
            "select count(*), airports.City (Aberdeen, airports.apt_name)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights",
            "airlines airports flights"
        ],
        "align_scores": [
            0.9955410361289978,
            0.0002431069442536682,
            0.00012082268222002313,
            9.355541260447353e-05,
            0.00015800051914993674,
            0.00010019117326010019,
            0.0002087538450723514,
            0.00011843056563520804
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many flights does airline 'JetBlue Airways' have?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), airlines.air",
            "select count(*), airlines.air, airlines.cntry",
            "select count(*), airlines.air, airlines.cntry"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines flights",
            "airlines airports flights"
        ],
        "align_scores": [
            0.9957541227340698,
            0.00022261004778556526,
            0.00036000748514197767,
            0.00040856568375602365,
            0.0001370124373352155,
            9.969597886083648e-05,
            0.0001370124373352155,
            9.969597886083648e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give the number of Jetblue Airways flights.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), airlines.air",
            "select count(*), airlines.air, airlines.cntry",
            "select count(*), airlines.air, airlines.cntry"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines flights",
            "airlines airports flights"
        ],
        "align_scores": [
            0.9959684610366821,
            0.0002755361783783883,
            0.0002935418451670557,
            0.0030598598532378674,
            0.00012329673336353153,
            0.00011278480087639764,
            0.00012329673336353153,
            0.00011278480087639764
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many 'United Airlines' flights go to Airport 'ASY'?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), airlines.air",
            "select count(*), airlines.air, airports.AirportCode",
            "select count(*), airlines.air, airports.AirportCode"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines airports flights",
            "airlines airports airports flights"
        ],
        "align_scores": [
            0.993281364440918,
            0.00022108116536401212,
            0.00033363769762218,
            0.0002795188338495791,
            0.0001850435510277748,
            9.692861931398511e-05,
            0.0001850435510277748,
            9.692861931398511e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Count the number of United Airlines flights arriving in ASY Airport.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), airlines.air",
            "select count(*), airlines.air, airports.AirportCode",
            "select count(distinct flights.FlightNo)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines airports flights"
        ],
        "align_scores": [
            0.9826706051826477,
            0.0001843296631705016,
            0.000251303194090724,
            0.0007933559827506542,
            0.00011405177792767063,
            0.00010598901280900463,
            0.0009095974965021014,
            9.643105295253918e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many 'United Airlines' flights depart from Airport 'AHD'?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), airlines.air",
            "select count(*), airports.AirportCode",
            "select count(*), airlines.air, airports.AirportCode"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines airports flights"
        ],
        "align_scores": [
            0.9949435591697693,
            0.00022214655473362654,
            0.0003363463911227882,
            0.0006693064933642745,
            0.0002989221829921007,
            0.0003072491381317377,
            0.00018121341418009251,
            0.00010443996143294498
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the number of United Airlines flights leaving from AHD Airport.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), airlines.air",
            "select count(*), airlines.air, airports.AirportCode",
            "select count(*), airlines.air, airports.AirportCode"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines airports flights"
        ],
        "align_scores": [
            0.9861131310462952,
            0.0001793483243091032,
            0.00031195010524243116,
            0.001173855154775083,
            0.00014561283751390874,
            9.880464494926855e-05,
            0.00014561283751390874,
            9.880464494926855e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many United Airlines flights go to City 'Aberdeen'?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), airlines.air",
            "select count(*), airlines.air, airports.City",
            "select count(*), airlines.air, airports.City"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines airports flights",
        "table_candidates": [
            "airlines airports flights",
            "airlines airports airports flights"
        ],
        "align_scores": [
            0.9951984286308289,
            0.0004951676237396896,
            0.0003483522741589695,
            0.00038879335625097156,
            0.0001816434523789212,
            9.58412274485454e-05,
            0.0001816434523789212,
            9.58412274485454e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Count the number of United Airlines flights that arrive in Aberdeen.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), airlines.air",
            "select count(*), airlines.air, airports.City",
            "select count(distinct flights.FlightNo)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines airports flights",
        "table_candidates": [
            "airlines airports flights",
            "airlines airports airports flights"
        ],
        "align_scores": [
            0.9947240948677063,
            0.00024097140703815967,
            0.00032594631193205714,
            0.000988475396297872,
            0.0001464280649088323,
            9.33134215301834e-05,
            0.0010971977608278394,
            9.895078983390704e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which city has most number of arriving flights?",
        "gold_select": "select airports.City",
        "select_candidates": [
            "select airports.City",
            "select airports.City, flights.destapt",
            "select airports.City, airports.cntry",
            "select airports.City, flights.FlightNo"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights"
        ],
        "align_scores": [
            0.992913544178009,
            5.990580393699929e-05,
            0.0006376899546012282,
            5.7837172789731994e-05,
            0.001009758678264916,
            6.121893966337666e-05,
            0.00021706000552512705,
            5.4550138884224e-05
        ],
        "align_select": "select airports.City",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Which city has the most frequent destination airport?",
        "gold_select": "select airports.City",
        "select_candidates": [
            "select airports.City",
            "select airports.City, airports.AirportCode",
            "select airports.City, airports.AirportCode, airports.apt_name",
            "select airports.City, flights.destapt"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights"
        ],
        "align_scores": [
            0.9944097399711609,
            6.858540291432291e-05,
            0.0021245607640594244,
            7.153666228987277e-05,
            0.00025236207875423133,
            6.836560351075605e-05,
            0.0016947694821283221,
            6.72441819915548e-05
        ],
        "align_select": "select airports.City",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Which city has most number of departing flights?",
        "gold_select": "select airports.City",
        "select_candidates": [
            "select airports.City",
            "select airports.City, flights.destapt",
            "select airports.City, airports.cntry",
            "select airports.City, airports.apt_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights"
        ],
        "align_scores": [
            0.9925544857978821,
            6.0049591411370784e-05,
            0.0017170688370242715,
            6.43203966319561e-05,
            0.0010452475398778915,
            6.16008837823756e-05,
            0.00032616883981972933,
            5.918466194998473e-05
        ],
        "align_select": "select airports.City",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Which city is the most frequent source airport?",
        "gold_select": "select airports.City",
        "select_candidates": [
            "select airports.City",
            "select airports.City, airports.AirportCode",
            "select airports.City, airports.AirportCode, airports.apt_name",
            "select airports.City, airports.AirportCode, airports.cntry"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights"
        ],
        "align_scores": [
            0.9954745173454285,
            6.854263483546674e-05,
            0.0016059491317719221,
            6.456005939980969e-05,
            0.00023228007194120437,
            6.493175169453025e-05,
            0.0002378880453761667,
            6.505000055767596e-05
        ],
        "align_select": "select airports.City",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the code of airport that has the highest number of flights?",
        "gold_select": "select airports.AirportCode",
        "select_candidates": [
            "select airports.AirportCode",
            "select airports.AirportCode, flights.destapt",
            "select airports.AirportCode, airports.cntry",
            "select airports.AirportCode, flights.srcapt"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights"
        ],
        "align_scores": [
            0.9888505339622498,
            7.189762982307002e-05,
            0.0005942037678323686,
            6.944107008166611e-05,
            0.002830571960657835,
            7.568128785351291e-05,
            0.0018455444369465113,
            7.46544828871265e-05
        ],
        "align_select": "select airports.AirportCode",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the airport code of the airport with the most flights?",
        "gold_select": "select airports.AirportCode",
        "select_candidates": [
            "select airports.AirportCode",
            "select airports.AirportCode, airports.cntry",
            "select airports.AirportCode, flights.destapt",
            "select airports.AirportCode, airports.apt_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights"
        ],
        "align_scores": [
            0.9937195777893066,
            8.271331171272323e-05,
            0.0023184260353446007,
            6.834122905274853e-05,
            0.00036785597330890596,
            6.186202517710626e-05,
            0.0012843675212934613,
            6.757947994628921e-05
        ],
        "align_select": "select airports.AirportCode",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the code of airport that has fewest number of flights?",
        "gold_select": "select airports.AirportCode",
        "select_candidates": [
            "select airports.AirportCode",
            "select airports.AirportCode, airports.cntry",
            "select airports.AirportCode, airports.apt_name",
            "select airports.AirportCode, flights.destapt"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights"
        ],
        "align_scores": [
            0.9908728003501892,
            6.950228271307424e-05,
            0.0020004126708954573,
            6.980543548706919e-05,
            0.001341954106464982,
            7.191435724962503e-05,
            0.000504506635479629,
            6.183612276799977e-05
        ],
        "align_select": "select airports.AirportCode",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Give the code of the airport with the least flights.",
        "gold_select": "select airports.AirportCode",
        "select_candidates": [
            "select airports.AirportCode",
            "select airports.AirportCode, flights.destapt",
            "select airports.AirportCode, airports.apt_name",
            "select airports.AirportCode, flights.srcapt"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights"
        ],
        "align_scores": [
            0.9946069121360779,
            7.807342626620084e-05,
            0.0004057230253238231,
            5.7437144278082997e-05,
            0.000911062874365598,
            6.24594758846797e-05,
            0.0008526751189492643,
            5.8037003327626735e-05
        ],
        "align_select": "select airports.AirportCode",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Which airline has most number of flights?",
        "gold_select": "select airlines.air",
        "select_candidates": [
            "select airlines.air",
            "select airlines.air, airlines.cntry",
            "select airlines.air (airlines.abbr), airlines.cntry",
            "select airlines.cntry, airlines.air"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines flights"
        ],
        "align_scores": [
            0.9648241996765137,
            5.637802314595319e-05,
            0.0032320404425263405,
            5.521544881048612e-05,
            0.0009812952484935522,
            5.231608884059824e-05,
            0.0023312289267778397,
            6.211716390680522e-05
        ],
        "align_select": "select airlines.air",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What airline serves the most flights?",
        "gold_select": "select airlines.air",
        "select_candidates": [
            "select airlines.air",
            "select airlines.air, airlines.cntry",
            "select airlines.air (airlines.abbr), airlines.cntry",
            "select airlines.cntry, airlines.air"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines flights"
        ],
        "align_scores": [
            0.9802573323249817,
            5.428020813269541e-05,
            0.0027556822169572115,
            5.808285277453251e-05,
            0.0010073420125991106,
            5.479058745549992e-05,
            0.001881952048279345,
            6.547606608364731e-05
        ],
        "align_select": "select airlines.air",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Find the abbreviation and country of the airline that has fewest number of flights?",
        "gold_select": "select airlines.abbr, airlines.cntry",
        "select_candidates": [
            "select airlines.abbr, airlines.cntry",
            "select airlines.air, airlines.cntry",
            "select airlines.cntry, airlines.abbr",
            "select airlines.abbr), airlines.cntry"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines flights"
        ],
        "align_scores": [
            0.9919582605361938,
            8.774063462624326e-05,
            0.9863030314445496,
            9.578548633726314e-05,
            0.9919865131378174,
            9.04741245904006e-05,
            0.010100297629833221,
            7.010243280092254e-05
        ],
        "align_select": "select airlines.abbr, airlines.cntry",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the abbreviation of the airilne has the fewest flights and what country is it in?",
        "gold_select": "select airlines.abbr, airlines.cntry",
        "select_candidates": [
            "select airlines.abbr, airlines.cntry",
            "select airlines.air, airlines.abbr, airlines.cntry",
            "select airlines.uid, airlines.abbr, airlines.cntry",
            "select airlines.cntry, airlines.abbr"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines flights"
        ],
        "align_scores": [
            0.9900864958763123,
            0.000100505436421372,
            0.0014114361256361008,
            8.95799312274903e-05,
            0.0013170192250981927,
            7.408302190015092e-05,
            0.9900177121162415,
            9.778298408491537e-05
        ],
        "align_select": "select airlines.abbr, airlines.cntry",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What are airlines that have some flight departing from airport 'AHD'?",
        "gold_select": "select airlines.air",
        "select_candidates": [
            "select airlines.air",
            "select airlines.air, airlines.abbr",
            "select airlines.air, airlines.cntry",
            "select airlines.air, airlines.abbr, airlines.cntry"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines airports flights"
        ],
        "align_scores": [
            0.779681921005249,
            0.004815638065338135,
            0.0003817658289335668,
            0.000143106808536686,
            0.00039637452573515475,
            0.00016147310088854283,
            0.00025935351732186973,
            0.00010260917042614892
        ],
        "align_select": "select airlines.air",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which airlines have a flight with source airport AHD?",
        "gold_select": "select airlines.air",
        "select_candidates": [
            "select airlines.air",
            "select airlines.air, airlines.abbr",
            "select airlines.air, airlines.cntry",
            "select distinct airlines.air"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines airports flights"
        ],
        "align_scores": [
            0.7113634347915649,
            0.0003186004178132862,
            0.00036866904702037573,
            8.919176616473123e-05,
            0.0004536079941317439,
            9.742483962327242e-05,
            0.3889181911945343,
            0.0004615572397597134
        ],
        "align_select": "select airlines.air",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are airlines that have flights arriving at airport 'AHD'?",
        "gold_select": "select airlines.air",
        "select_candidates": [
            "select airlines.air",
            "select airlines.air, airlines.abbr",
            "select airlines.air, airlines.cntry",
            "select airlines.air, airlines.abbr, airlines.cntry"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines airports flights"
        ],
        "align_scores": [
            0.6247303485870361,
            0.005476123653352261,
            0.0003369577752891928,
            0.00013385608326643705,
            0.00043304034625180066,
            0.0001617782691027969,
            0.0002659020246937871,
            0.00010282170842401683
        ],
        "align_select": "select airlines.air",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which airlines have a flight with destination airport AHD?",
        "gold_select": "select airlines.air",
        "select_candidates": [
            "select airlines.air",
            "select airlines.air, airlines.cntry",
            "select airlines.air, airlines.abbr",
            "select distinct airlines.air"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines airports flights"
        ],
        "align_scores": [
            0.855359673500061,
            0.00046751071931794286,
            0.0004208158061373979,
            0.00010363144247094169,
            0.0003088564844802022,
            9.306992433266714e-05,
            0.3628523051738739,
            0.0008668094524182379
        ],
        "align_select": "select airlines.air",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find all airlines that have flights from both airports 'APG' and 'CVO'.",
        "gold_select": "select airlines.air",
        "select_candidates": [
            "select airlines.air",
            "select airlines.uid",
            "select airlines.abbr",
            "select airlines.air, airlines.abbr"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines airports flights"
        ],
        "align_scores": [
            0.9873955845832825,
            0.9873955845832825,
            0.9949101805686951,
            0.9949101805686951,
            0.9910869002342224,
            0.9910869002342224,
            0.0003819558769464493,
            0.0003819558769464493
        ],
        "align_select": "select airlines.air",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "Which airlines have departing flights from both APG and CVO airports?",
        "gold_select": "select airlines.air",
        "select_candidates": [
            "select airlines.air",
            "select airlines.air, airlines.abbr",
            "select airlines.air, airlines.cntry",
            "select airlines.air, airlines.abbr, airlines.cntry"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines airports flights"
        ],
        "align_scores": [
            0.962900698184967,
            0.962900698184967,
            0.00040801201248541474,
            0.00040801201248541474,
            0.00034891278482973576,
            0.00034891278482973576,
            0.00028198189102113247,
            0.00028198189102113247
        ],
        "align_select": "select airlines.air",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "Find all airlines that have flights from airport 'CVO' but not from 'APG'.",
        "gold_select": "select airlines.air",
        "select_candidates": [
            "select airlines.air",
            "select airlines.air, airlines.abbr",
            "select airlines.uid",
            "select airlines.air, airlines.cntry"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines airports flights"
        ],
        "align_scores": [
            0.9854034185409546,
            0.9854034185409546,
            0.0004547301505226642,
            0.0004547301505226642,
            0.9925991296768188,
            0.9925991296768188,
            0.00047212393837980926,
            0.00047212393837980926
        ],
        "align_select": "select airlines.air",
        "align_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "Which airlines have departures from CVO but not from APG airports?",
        "gold_select": "select airlines.air",
        "select_candidates": [
            "select airlines.air",
            "select airlines.air, airlines.abbr",
            "select airlines.air, airlines.cntry",
            "select airlines.uid"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines airports flights"
        ],
        "align_scores": [
            0.9669302105903625,
            0.9669302105903625,
            0.0005769047420471907,
            0.0005769047420471907,
            0.0004601081018336117,
            0.0004601081018336117,
            0.9833977222442627,
            0.9833977222442627
        ],
        "align_select": "select airlines.air",
        "align_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "Find all airlines that have at least 10 flights.",
        "gold_select": "select airlines.air",
        "select_candidates": [
            "select airlines.air",
            "select airlines.air, airlines.cntry",
            "select airlines.air, airlines.abbr",
            "select airlines.air, flights.air"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines flights"
        ],
        "align_scores": [
            0.9458267092704773,
            0.0001236775133293122,
            0.0011672620894387364,
            6.51260997983627e-05,
            0.0026193619705736637,
            8.278526365756989e-05,
            0.000872679753229022,
            6.343477434711531e-05
        ],
        "align_select": "select airlines.air",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Which airlines have at least 10 flights?",
        "gold_select": "select airlines.air",
        "select_candidates": [
            "select airlines.air",
            "select airlines.air, airlines.cntry",
            "select airlines.air, airlines.abbr",
            "select airlines.abbr, airlines.air"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines flights"
        ],
        "align_scores": [
            0.8693066239356995,
            0.00013585433771368116,
            0.001888655824586749,
            7.732994708931074e-05,
            0.008934635668992996,
            9.94908477878198e-05,
            0.007861696183681488,
            9.09410446183756e-05
        ],
        "align_select": "select airlines.air",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Find all airlines that have fewer than 200 flights.",
        "gold_select": "select airlines.air",
        "select_candidates": [
            "select airlines.air",
            "select airlines.air, airlines.abbr",
            "select airlines.air, airlines.cntry",
            "select airlines.air, flights.air"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines flights"
        ],
        "align_scores": [
            0.8970091342926025,
            0.00038465403486043215,
            0.0019977535121142864,
            0.00012332422193139791,
            0.0007511660223826766,
            7.074308814480901e-05,
            0.0006644820678047836,
            6.873861275380477e-05
        ],
        "align_select": "select airlines.air",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Which airlines have less than 200 flights?",
        "gold_select": "select airlines.air",
        "select_candidates": [
            "select airlines.air",
            "select airlines.air, airlines.abbr",
            "select airlines.air, airlines.cntry",
            "select airlines.uid, airlines.air"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines flights"
        ],
        "align_scores": [
            0.7566782236099243,
            0.0005421019741334021,
            0.00582280196249485,
            0.00017731872503645718,
            0.0013565716799348593,
            8.4596176748164e-05,
            0.00045520116691477597,
            9.788933675736189e-05
        ],
        "align_select": "select airlines.air",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are flight numbers of Airline \"United Airlines\"?",
        "gold_select": "select flights.FlightNo",
        "select_candidates": [
            "select flights.FlightNo",
            "select flights.air, flights.FlightNo",
            "select flights.FlightNo, airlines.cntry",
            "select flights.FlightNo, airlines.abbr"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines flights"
        ],
        "align_scores": [
            0.9946150183677673,
            0.0002876225335057825,
            0.00017915040371008217,
            7.678237307118252e-05,
            0.00025737154646776617,
            8.039062959142029e-05,
            0.00027614261489361525,
            8.802246156847104e-05
        ],
        "align_select": "select flights.FlightNo",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which flight numbers correspond to United Airlines flights?",
        "gold_select": "select flights.FlightNo",
        "select_candidates": [
            "select flights.FlightNo",
            "select distinct flights.FlightNo",
            "select flights.air, flights.FlightNo",
            "select flights.FlightNo, airlines.cntry"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines flights",
            "airlines airports flights"
        ],
        "align_scores": [
            0.9935764670372009,
            0.0002191871462855488,
            0.03115139901638031,
            0.0001318991562584415,
            0.0002072972129099071,
            6.819826376158744e-05,
            0.00037704440183006227,
            8.11190257081762e-05
        ],
        "align_select": "select flights.FlightNo",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are flight numbers of flights departing from Airport \"APG\"?",
        "gold_select": "select flights.FlightNo",
        "select_candidates": [
            "select flights.FlightNo",
            "select flights.air, flights.FlightNo",
            "select flights.FlightNo, airports.apt_name",
            "select flights.FlightNo, airports.AirportCode"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "flights",
        "table_candidates": [
            "airports flights"
        ],
        "align_scores": [
            0.9953077435493469,
            0.0001876973401522264,
            0.0001696627732599154,
            7.215051300590858e-05,
            0.00017673434922471642,
            6.097889126976952e-05,
            0.0001746089110383764,
            6.563172064488754e-05
        ],
        "align_select": "select flights.FlightNo",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give the flight numbers of flights leaving from APG.",
        "gold_select": "select flights.FlightNo",
        "select_candidates": [
            "select flights.FlightNo",
            "select flights.FlightNo, flights.srcapt",
            "select flights.air, flights.FlightNo",
            "select flights.FlightNo, airports.AirportCode"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "flights",
        "table_candidates": [
            "airports flights",
            "flights",
            "airlines airports flights",
            "airlines flights"
        ],
        "align_scores": [
            0.990564227104187,
            8.05582239991054e-05,
            0.0001480529026594013,
            5.543629958992824e-05,
            0.0002049768081633374,
            5.9926889662165195e-05,
            0.0001933801540872082,
            5.5329615861410275e-05
        ],
        "align_select": "select flights.FlightNo",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are flight numbers of flights arriving at Airport \"APG\"?",
        "gold_select": "select flights.FlightNo",
        "select_candidates": [
            "select flights.FlightNo",
            "select flights.air, flights.FlightNo",
            "select flights.FlightNo, airports.apt_name",
            "select flights.FlightNo, airports.AirportCode"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "flights",
        "table_candidates": [
            "airports flights",
            "airlines airports flights"
        ],
        "align_scores": [
            0.9874100089073181,
            0.0001610416657058522,
            0.0001532046590000391,
            6.892923556733876e-05,
            0.00015419418923556805,
            5.881513425265439e-05,
            0.00015502019959967583,
            6.216870679054409e-05
        ],
        "align_select": "select flights.FlightNo",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give the flight numbers of flights landing at APG.",
        "gold_select": "select flights.FlightNo",
        "select_candidates": [
            "select flights.FlightNo",
            "select flights.FlightNo, flights.srcapt",
            "select flights.FlightNo, flights.destapt",
            "select flights.air, flights.FlightNo"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "flights",
        "table_candidates": [
            "airports flights",
            "airlines airports flights"
        ],
        "align_scores": [
            0.9847153425216675,
            0.0001147416332969442,
            0.0001516992342658341,
            6.000082794344053e-05,
            0.00013073849549982697,
            5.613623216049746e-05,
            0.0002302216162206605,
            6.422160367947072e-05
        ],
        "align_select": "select flights.FlightNo",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are flight numbers of flights departing from City \"Aberdeen \"?",
        "gold_select": "select flights.FlightNo",
        "select_candidates": [
            "select flights.FlightNo",
            "select flights.FlightNo, airports.City",
            "select flights.FlightNo, airports.cntry",
            "select flights.FlightNo, airports.apt_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights",
            "airlines airports flights"
        ],
        "align_scores": [
            0.9940394163131714,
            0.0001435055601177737,
            0.0001754865370457992,
            6.410803325707093e-05,
            0.00025264325086027384,
            7.365543569903821e-05,
            0.00014794705202803016,
            5.7715460570761934e-05
        ],
        "align_select": "select flights.FlightNo",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give the flight numbers of flights leaving from Aberdeen.",
        "gold_select": "select flights.FlightNo",
        "select_candidates": [
            "select flights.FlightNo",
            "select flights.FlightNo, airports.City",
            "select flights.air, flights.FlightNo",
            "select flights.FlightNo, airports.cntry"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights"
        ],
        "align_scores": [
            0.9918286204338074,
            0.0001242067664861679,
            0.00020197128469590098,
            5.4456901125377044e-05,
            0.00018584882491268218,
            6.287438736762851e-05,
            0.00020597479306161404,
            6.0636539274128154e-05
        ],
        "align_select": "select flights.FlightNo",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are flight numbers of flights arriving at City \"Aberdeen\"?",
        "gold_select": "select flights.FlightNo",
        "select_candidates": [
            "select flights.FlightNo",
            "select flights.air, flights.FlightNo",
            "select flights.FlightNo, airports.City",
            "select flights.FlightNo, airports.cntry"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights",
            "airlines airports flights"
        ],
        "align_scores": [
            0.9910581111907959,
            0.000125487960758619,
            0.00016421613690908998,
            6.364582804962993e-05,
            0.00015841778076719493,
            5.925124423811212e-05,
            0.00022303371224552393,
            6.42999802948907e-05
        ],
        "align_select": "select flights.FlightNo",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give the flight numbers of flights arriving in Aberdeen.",
        "gold_select": "select flights.FlightNo",
        "select_candidates": [
            "select flights.FlightNo",
            "select flights.FlightNo, airports.City",
            "select flights.air, flights.FlightNo",
            "select flights.FlightNo, airports.cntry"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights"
        ],
        "align_scores": [
            0.9853159785270691,
            0.00012457850971259177,
            0.00017304842185694724,
            5.377477646106854e-05,
            0.00017903906700666994,
            6.00437524553854e-05,
            0.00017751650011632591,
            5.647713987855241e-05
        ],
        "align_select": "select flights.FlightNo",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the number of flights landing in the city of Aberdeen or Abilene.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), airports.City",
            "select count(*) dept airports.City",
            "select count(*) aeroport.c0"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights",
            "airlines airports flights"
        ],
        "align_scores": [
            0.993893027305603,
            0.00016658191452734172,
            0.00036688477848656476,
            0.04829047992825508,
            0.0005683827330358326,
            0.00015974169946275651,
            0.0005155702820047736,
            0.0001774973643478006
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many flights land in Aberdeen or Abilene?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), airports.City",
            "select count(*) aeroports(flights.FlightNo)",
            "select count(*) dept airports.City"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights",
            "airlines airports flights",
            "airports"
        ],
        "align_scores": [
            0.9949042797088623,
            6.928959192009643e-05,
            0.0002676218282431364,
            8.039852400543168e-05,
            0.0003557315212674439,
            7.892845314927399e-05,
            0.000432636181358248,
            8.173516835086048e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the name of airports which do not have any flight in and out.",
        "gold_select": "select airports.apt_name",
        "select_candidates": [
            "select airports.apt_name",
            "select airports.City, airports.apt_name",
            "select airports.apt_name, airports.cntry",
            "select airports.AirportCode, airports.apt_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports",
            "airports flights"
        ],
        "align_scores": [
            0.6597532629966736,
            0.8267641067504883,
            0.00022160203661769629,
            0.0003867373743560165,
            0.0003836826072074473,
            0.0010583229595795274,
            0.00041325087659060955,
            0.0007071646978147328
        ],
        "align_select": "select airports.apt_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which airports do not have departing or arriving flights?",
        "gold_select": "select airports.apt_name",
        "select_candidates": [
            "select airports.AirportCode",
            "select airports.apt_name",
            "select airports.AirportCode, airports.apt_name",
            "select airports.apt_name, airports.AirportCode"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports",
            "airports flights"
        ],
        "align_scores": [
            0.08390932530164719,
            0.9679743647575378,
            0.1747908890247345,
            0.9392671585083008,
            0.003612079657614231,
            0.058844100683927536,
            0.004927918780595064,
            0.0343206450343132
        ],
        "align_select": "select airports.AirportCode",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM"
    },
    {
        "question": "Find the number of shops in each location.",
        "gold_select": "select count(*), shop.loc",
        "select_candidates": [
            "select shop.loc, count(*)",
            "select count(*), shop.loc",
            "select shop.loc, count(*), shop.dist",
            "select sum(shop.loc), shop.dist"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "shop",
        "table_candidates": [
            "shop"
        ],
        "align_scores": [
            0.996701180934906,
            0.00012275544577278197,
            0.9966346621513367,
            0.00013742079318035394,
            0.00017841906810645014,
            7.026037201285362e-05,
            0.00020047591533511877,
            0.00014244706835597754
        ],
        "align_select": "select shop.loc, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "How many shops are there in each location?",
        "gold_select": "select count(*), shop.loc",
        "select_candidates": [
            "select shop.loc, count(*)",
            "select count(*), shop.loc",
            "select shop.loc, count(*), shop.dist",
            "select shop_shop.loc, count(*)"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "shop",
        "table_candidates": [
            "shop"
        ],
        "align_scores": [
            0.9964442849159241,
            0.00014566117897629738,
            0.9963929057121277,
            0.00015572171832900494,
            0.00019821673049591482,
            7.230948540382087e-05,
            0.0010801891330629587,
            0.0001311510568484664
        ],
        "align_select": "select shop.loc, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "Find the manager name and district of the shop whose number of products is the largest.",
        "gold_select": "select shop.mgr_name, shop.dist",
        "select_candidates": [
            "select shop.mgr_name, shop.dist",
            "select shop.Name, shop.dist",
            "select shop.mgr_name, shop.loc",
            "select shop.mgr_name, shop.dist,"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "shop",
        "table_candidates": [
            "shop"
        ],
        "align_scores": [
            0.9817661046981812,
            7.921225915197283e-05,
            0.020739970728754997,
            7.935317989904433e-05,
            0.9802626967430115,
            8.053894271142781e-05,
            0.005449406802654266,
            8.071856427704915e-05
        ],
        "align_select": "select shop.mgr_name, shop.dist",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What are the manager name and district of the shop that sells the largest number of products?",
        "gold_select": "select shop.mgr_name, shop.dist",
        "select_candidates": [
            "select shop.mgr_name, shop.dist",
            "select shop.Name, shop.dist",
            "select shop.mgr_name, shop.loc",
            "select shop.mgr_name, shop.dist,"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "shop",
        "table_candidates": [
            "shop"
        ],
        "align_scores": [
            0.9822477698326111,
            0.9921725988388062,
            0.020276721566915512,
            0.22141101956367493,
            0.9776818156242371,
            0.9908562898635864,
            0.008113279938697815,
            0.003394071478396654
        ],
        "align_select": "select shop.mgr_name, shop.dist",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "find the minimum and maximum number of products of all stores.",
        "gold_select": "select min(shop.num_prod), max(shop.num_prod)",
        "select_candidates": [
            "select min(shop.num_prod), max(shop.num_prod)",
            "select min(shop.num_prod), max(shop.num_prod), shop.Name",
            "select min(shop.dist), max(shop.num_prod)",
            "select min(shop.loc), max(shop.num_prod)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "shop",
        "table_candidates": [
            "shop"
        ],
        "align_scores": [
            0.995017945766449,
            6.79937147651799e-05,
            0.0001577136426931247,
            4.996468123863451e-05,
            0.0003264933475293219,
            6.587035750271752e-05,
            0.0006524436175823212,
            7.920335337985307e-05
        ],
        "align_select": "select min(shop.num_prod), max(shop.num_prod)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What are the minimum and maximum number of products across all the shops?",
        "gold_select": "select min(shop.num_prod), max(shop.num_prod)",
        "select_candidates": [
            "select min(shop.num_prod), max(shop.num_prod)",
            "select min(shop.num_prod), max(shop.num_prod), shop.Shop_ID",
            "select min(shop.num_prod), max(shop.num_prod), shop.Name",
            "select min(shop.dist), max(shop.num_prod)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "shop",
        "table_candidates": [
            "shop"
        ],
        "align_scores": [
            0.9900021553039551,
            0.00018159288447350264,
            0.00015398555842693895,
            7.499612547690049e-05,
            0.00021531821403186768,
            5.830650115967728e-05,
            0.0003780899860430509,
            6.939790910109878e-05
        ],
        "align_select": "select min(shop.num_prod), max(shop.num_prod)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "Return the name, location and district of all shops in descending order of number of products.",
        "gold_select": "select shop.Name, shop.loc, shop.dist",
        "select_candidates": [
            "select shop.Name, shop.loc, shop.dist",
            "select shop.Name, shop.loc, shop.dist",
            "select shop.Name, shop.dist, shop.loc",
            "select shop.Name, shop.loc, shop.dist"
        ],
        "select_labels": [
            1.0,
            1.0,
            1.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "shop",
        "table_candidates": [
            "shop"
        ],
        "align_scores": [
            0.9949170351028442,
            0.9949170351028442,
            0.9949170351028442,
            0.9949170351028442,
            0.9953886270523071,
            0.9953886270523071,
            0.9949170351028442,
            0.9949170351028442
        ],
        "align_select": "select shop.Name, shop.loc, shop.dist",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "Sort all the shops by number products in descending order, and return the name, location and district of each shop.",
        "gold_select": "select shop.Name, shop.loc, shop.dist",
        "select_candidates": [
            "select shop.Name, shop.loc, shop.dist",
            "select shop.Name, shop.loc, shop.dist",
            "select shop.Name, shop.loc, shop.dist",
            "select shop.Name, shop.dist, shop.loc"
        ],
        "select_labels": [
            1.0,
            1.0,
            1.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "shop",
        "table_candidates": [
            "shop"
        ],
        "align_scores": [
            0.9916389584541321,
            0.9916389584541321,
            0.9916389584541321,
            0.9916389584541321,
            0.9916389584541321,
            0.9916389584541321,
            0.9927380681037903,
            0.9927380681037903
        ],
        "align_select": "select shop.Name, shop.loc, shop.dist",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "Find the names of stores whose number products is more than the average number of products.",
        "gold_select": "select shop.Name",
        "select_candidates": [
            "select shop.Name",
            "select shop.Name, shop.mgr_name",
            "select shop.Name, shop.dist",
            "select shop.Name, shop.loc"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "shop",
        "table_candidates": [
            "shop"
        ],
        "align_scores": [
            0.9843063354492188,
            6.940015737200156e-05,
            0.0002693604910746217,
            8.008502481970936e-05,
            0.00015315339260268956,
            5.8800327678909525e-05,
            0.00020454885088838637,
            5.7249362725997344e-05
        ],
        "align_select": "select shop.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which shops' number products is above the average? Give me the shop names.",
        "gold_select": "select shop.Name",
        "select_candidates": [
            "select shop.Name",
            "select shop.Name, shop.loc",
            "select shop.Name, shop.num_prod",
            "select shop.Name, shop.dist"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "shop",
        "table_candidates": [
            "shop"
        ],
        "align_scores": [
            0.9783323407173157,
            7.434005237882957e-05,
            0.00020533439237624407,
            7.27246078895405e-05,
            0.0002700810437090695,
            6.840068817837164e-05,
            0.00016296574904117733,
            6.782702257623896e-05
        ],
        "align_select": "select shop.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "find the name of employee who was awarded the most times in the evaluation.",
        "gold_select": "select employee.Name",
        "select_candidates": [
            "select employee.Name",
            "select employee.Name, evaluation.Year_awarded",
            "select employee.Name, evaluation.Year_awarded, evaluation.Bonus",
            "select employee.Name, employee.Age"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "employee evaluation",
        "table_candidates": [
            "employee evaluation",
            "employee hiring evaluation",
            "employee shop evaluation",
            "employee hiring"
        ],
        "align_scores": [
            0.9879915118217468,
            6.269178265938535e-05,
            0.0003818300901912153,
            5.6023814977379516e-05,
            0.000161945863510482,
            5.762950604548678e-05,
            0.0003619254275690764,
            5.8179866755381227e-05
        ],
        "align_select": "select employee.Name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Which employee received the most awards in evaluations? Give me the employee name.",
        "gold_select": "select employee.Name",
        "select_candidates": [
            "select employee.Name",
            "select employee.Name, evaluation.Employee_ID",
            "select employee.Name, evaluation.Year_awarded, evaluation.Bonus",
            "select employee.Name, employee.Age"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "employee evaluation",
        "table_candidates": [
            "employee evaluation",
            "employee hiring evaluation",
            "employee shop evaluation",
            "employee hiring"
        ],
        "align_scores": [
            0.982796311378479,
            6.35942560620606e-05,
            0.0010758732678368688,
            7.207170710898936e-05,
            0.0001621906558284536,
            6.200577627168968e-05,
            0.0003046385827474296,
            5.701351255993359e-05
        ],
        "align_select": "select employee.Name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Find the name of the employee who got the highest one time bonus.",
        "gold_select": "select employee.Name",
        "select_candidates": [
            "select employee.Name",
            "select employee.Name, employee.Age",
            "select employee.Name, employee.City",
            "select employee.Name, evaluation.Employee_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "employee evaluation",
        "table_candidates": [
            "employee evaluation",
            "employee hiring evaluation",
            "employee shop evaluation"
        ],
        "align_scores": [
            0.9839634299278259,
            6.15907774772495e-05,
            0.00021702420781366527,
            6.482149910880253e-05,
            0.00026201913715340197,
            6.054819095879793e-05,
            0.00046871727681718767,
            6.329947791527957e-05
        ],
        "align_select": "select employee.Name",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Which employee received the biggest bonus? Give me the employee name.",
        "gold_select": "select employee.Name",
        "select_candidates": [
            "select employee.Name",
            "select employee.Name, evaluation.Employee_ID",
            "select employee.Name, employee.Age",
            "select employee.Name, employee.ee_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "employee evaluation",
        "table_candidates": [
            "employee evaluation",
            "employee hiring evaluation"
        ],
        "align_scores": [
            0.9593497514724731,
            6.782107084291056e-05,
            0.0003924467891920358,
            6.524314812850207e-05,
            0.00024987064534798265,
            6.18133635725826e-05,
            0.00032743721385486424,
            6.397385732270777e-05
        ],
        "align_select": "select employee.Name",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Find the names of employees who never won any award in the evaluation.",
        "gold_select": "select employee.Name",
        "select_candidates": [
            "select employee.Name",
            "select employee.Name, employee.Age",
            "select employee.Name, employee.City",
            "select employee.Name, evaluation.Bonus"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "employee",
        "table_candidates": [
            "employee evaluation",
            "employee",
            "employee hiring evaluation"
        ],
        "align_scores": [
            0.625607967376709,
            0.10179879516363144,
            0.00023114759824238718,
            0.00014527334133163095,
            0.000285918649751693,
            0.0001636028609937057,
            0.00032380703487433493,
            0.000481089431559667
        ],
        "align_select": "select employee.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of the employees who never received any evaluation?",
        "gold_select": "select employee.Name",
        "select_candidates": [
            "select employee.Name",
            "select employee.Name, employee.Age",
            "select employee.Name, employee.City",
            "select employee.Name, employee.Age, employee.City"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "employee",
        "table_candidates": [
            "employee",
            "employee evaluation"
        ],
        "align_scores": [
            0.9830220937728882,
            0.0004068187263328582,
            0.00018153333803638816,
            8.228017395595089e-05,
            0.00020395992032717913,
            8.001929381862283e-05,
            0.00014300258771982044,
            7.237715908559039e-05
        ],
        "align_select": "select employee.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which district has both stores with less than 3000 products and stores with more than 10000 products?",
        "gold_select": "select shop.dist",
        "select_candidates": [
            "select shop.dist",
            "select shop.dist The SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "select shop.dist The SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE (GROUP BY-HAVING",
            "select shop.dist The SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE."
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "shop",
        "table_candidates": [
            "shop"
        ],
        "align_scores": [
            0.9928995370864868,
            0.9928995370864868,
            0.004310799762606621,
            0.004310799762606621,
            0.001219255500473082,
            0.001219255500473082,
            0.005649768281728029,
            0.005649768281728029
        ],
        "align_select": "select shop.dist",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "Find the districts in which there are both shops selling less than 3000 products and shops selling more than 10000 products.",
        "gold_select": "select shop.dist",
        "select_candidates": [
            "select shop.dist",
            "select shop.dist, shop.num_prod",
            "select shop.dist, shop.loc",
            "select shop.dist Then shop.num_prod"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "shop",
        "table_candidates": [
            "shop"
        ],
        "align_scores": [
            0.9917628765106201,
            0.9917628765106201,
            0.0004290853103157133,
            0.0004290853103157133,
            0.00037129162228666246,
            0.00037129162228666246,
            0.003968247678130865,
            0.003968247678130865
        ],
        "align_select": "select shop.dist",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "How many different store locations are there?",
        "gold_select": "select count(distinct shop.loc)",
        "select_candidates": [
            "select count(distinct shop.loc)",
            "select count (distinct shop.loc)",
            "select count(distinct t1.c6)",
            "select count(distinct t1.c 2)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "shop",
        "table_candidates": [
            "shop"
        ],
        "align_scores": [
            0.9957738518714905,
            0.9957738518714905,
            0.01691153459250927,
            0.01691153459250927,
            0.0005023005651310086,
            0.0005023005651310086,
            0.0005815049516968429,
            0.0005815049516968429
        ],
        "align_select": "select count(distinct shop.loc)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "Count the number of distinct store locations.",
        "gold_select": "select count(distinct shop.loc)",
        "select_candidates": [
            "select count(distinct shop.loc)",
            "select count(separate shop.loc)",
            "select count (distinct shop.loc)",
            "select count(distinct t1.c 2)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "shop",
        "table_candidates": [
            "shop"
        ],
        "align_scores": [
            0.9967178702354431,
            0.9967178702354431,
            0.15807202458381653,
            0.15807202458381653,
            0.008107527159154415,
            0.008107527159154415,
            0.0004801246686838567,
            0.0004801246686838567
        ],
        "align_select": "select count(distinct shop.loc)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "Find the number of shops in each location.",
        "gold_select": "select count(*), shop.loc",
        "select_candidates": [
            "select shop.loc, count(*)",
            "select count(*), shop.loc",
            "select shop.loc, count(*), shop.District",
            "select shop_shop.loc, count(*)"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "shop",
        "table_candidates": [
            "shop"
        ],
        "align_scores": [
            0.996701180934906,
            0.00012275544577278197,
            0.9966346621513367,
            0.00013742079318035394,
            0.00022869564418215305,
            8.4632498328574e-05,
            0.0008923833956941962,
            0.0001340517628705129
        ],
        "align_select": "select shop.loc, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "How many shops are there in each location?",
        "gold_select": "select count(*), shop.loc",
        "select_candidates": [
            "select shop.loc, count(*)",
            "select count(*), shop.loc",
            "select shop.loc, count(*), shop.District",
            "select shop_shop.loc, count(*)"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "shop",
        "table_candidates": [
            "shop"
        ],
        "align_scores": [
            0.9964442849159241,
            0.00014566117897629738,
            0.9963929057121277,
            0.00015572171832900494,
            0.00024242045765276998,
            8.86971247382462e-05,
            0.0010801891330629587,
            0.0001311510568484664
        ],
        "align_select": "select shop.loc, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "Find the manager name and district of the shop whose number of products is the largest.",
        "gold_select": "select shop.Manager_name, shop.District",
        "select_candidates": [
            "select shop.Manager_name, shop.District",
            "select shop.Name, shop.District",
            "select shop.loc, shop.Manager_name",
            "select shop.Manager_name, shop.loc"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "shop",
        "table_candidates": [
            "shop"
        ],
        "align_scores": [
            0.9851682186126709,
            7.79138135840185e-05,
            0.013090084306895733,
            8.428980072494596e-05,
            0.9781723022460938,
            8.066184091148898e-05,
            0.9821676015853882,
            7.697399996686727e-05
        ],
        "align_select": "select shop.Manager_name, shop.District",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What are the manager name and district of the shop that sells the largest number of products?",
        "gold_select": "select shop.Manager_name, shop.District",
        "select_candidates": [
            "select shop.Manager_name, shop.District",
            "select shop.Name, shop.District",
            "select shop.loc, shop.Manager_name",
            "select shop.Manager_name, shop.loc"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "shop",
        "table_candidates": [
            "shop"
        ],
        "align_scores": [
            0.9847096800804138,
            0.9917959570884705,
            0.007233886979520321,
            0.14349892735481262,
            0.9716691374778748,
            0.9882135391235352,
            0.9786089062690735,
            0.9890241622924805
        ],
        "align_select": "select shop.Manager_name, shop.District",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "find the minimum and maximum number of products of all stores.",
        "gold_select": "select min(shop.num_prod), max(shop.num_prod)",
        "select_candidates": [
            "select min(shop.num_prod), max(shop.num_prod)",
            "select min(shop.num_prod), max(shop.num_prod), shop.Name",
            "select min(shop.District), max(shop.num_prod)",
            "select min(shop.loc), max(shop.num_prod)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "shop",
        "table_candidates": [
            "shop"
        ],
        "align_scores": [
            0.995017945766449,
            6.79937147651799e-05,
            0.0001577136426931247,
            4.996468123863451e-05,
            0.0005057661910541356,
            7.567385182483122e-05,
            0.0006524436175823212,
            7.920335337985307e-05
        ],
        "align_select": "select min(shop.num_prod), max(shop.num_prod)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What are the minimum and maximum number of products across all the shops?",
        "gold_select": "select min(shop.num_prod), max(shop.num_prod)",
        "select_candidates": [
            "select min(shop.num_prod), max(shop.num_prod)",
            "select min(shop.num_prod), max(shop.num_prod), shop.Shop_ID",
            "select min(shop.num_prod), max(shop.num_prod), shop.Name",
            "select min(shop.District), max(shop.num_prod)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "shop",
        "table_candidates": [
            "shop"
        ],
        "align_scores": [
            0.9900021553039551,
            0.00018159288447350264,
            0.00015398555842693895,
            7.499612547690049e-05,
            0.00021531821403186768,
            5.830650115967728e-05,
            0.0006441526347771287,
            8.106551831588149e-05
        ],
        "align_select": "select min(shop.num_prod), max(shop.num_prod)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "Return the name, location and district of all shops in descending order of number of products.",
        "gold_select": "select shop.Name, shop.loc, shop.District",
        "select_candidates": [
            "select shop.Name, shop.loc, shop.District",
            "select shop.Name, shop.loc, shop.District",
            "select shop.Name, shop.District, shop.loc",
            "select shop.Name, shop.loc, shop.District"
        ],
        "select_labels": [
            1.0,
            1.0,
            1.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "shop",
        "table_candidates": [
            "shop"
        ],
        "align_scores": [
            0.9929177761077881,
            0.9929177761077881,
            0.9929177761077881,
            0.9929177761077881,
            0.9945850968360901,
            0.9945850968360901,
            0.9929177761077881,
            0.9929177761077881
        ],
        "align_select": "select shop.Name, shop.loc, shop.District",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "Sort all the shops by number products in descending order, and return the name, location and district of each shop.",
        "gold_select": "select shop.Name, shop.loc, shop.District",
        "select_candidates": [
            "select shop.Name, shop.loc, shop.District",
            "select shop.Name, shop.loc, shop.District",
            "select shop.Name, shop.loc, shop.District",
            "select shop.Name, shop.District, shop.loc"
        ],
        "select_labels": [
            1.0,
            1.0,
            1.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "shop",
        "table_candidates": [
            "shop"
        ],
        "align_scores": [
            0.9875642657279968,
            0.9875642657279968,
            0.9875642657279968,
            0.9875642657279968,
            0.9875642657279968,
            0.9875642657279968,
            0.9904458522796631,
            0.9904458522796631
        ],
        "align_select": "select shop.Name, shop.loc, shop.District",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "Find the names of stores whose number products is more than the average number of products.",
        "gold_select": "select shop.Name",
        "select_candidates": [
            "select shop.Name",
            "select shop.Name, shop.Manager_name",
            "select shop.Name, shop.District",
            "select shop.Name, shop.loc"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "shop",
        "table_candidates": [
            "shop"
        ],
        "align_scores": [
            0.9843063354492188,
            6.940015737200156e-05,
            0.00022812899260316044,
            7.042209472274408e-05,
            0.00019816153508145362,
            6.638315244344994e-05,
            0.00020454885088838637,
            5.7249362725997344e-05
        ],
        "align_select": "select shop.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which shops' number products is above the average? Give me the shop names.",
        "gold_select": "select shop.Name",
        "select_candidates": [
            "select shop.Name",
            "select shop.Name, shop.loc",
            "select shop.Name, shop.num_prod",
            "select shop.Name, shop.District"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "shop",
        "table_candidates": [
            "shop"
        ],
        "align_scores": [
            0.9783323407173157,
            7.434005237882957e-05,
            0.00020533439237624407,
            7.27246078895405e-05,
            0.0002700810437090695,
            6.840068817837164e-05,
            0.00021500865113921463,
            7.978812209330499e-05
        ],
        "align_select": "select shop.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "find the name of employee who was awarded the most times in the evaluation.",
        "gold_select": "select employee.Name",
        "select_candidates": [
            "select employee.Name",
            "select employee.Name, employee.Employee_ID",
            "select employee.Name, evaluation.Year_awarded",
            "select employee.Name, employee.City"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "employee evaluation",
        "table_candidates": [
            "employee evaluation",
            "employee hiring evaluation"
        ],
        "align_scores": [
            0.9879915118217468,
            6.269178265938535e-05,
            0.00027868966571986675,
            5.791520743514411e-05,
            0.0003818300901912153,
            5.6023814977379516e-05,
            0.0004965645493939519,
            6.574872531928122e-05
        ],
        "align_select": "select employee.Name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Which employee received the most awards in evaluations? Give me the employee name.",
        "gold_select": "select employee.Name",
        "select_candidates": [
            "select employee.Name",
            "select employee.Name, evaluation.ee_id",
            "select employee.Name, employee.Age",
            "select employee.Name, employee.Employee_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "employee evaluation",
        "table_candidates": [
            "employee evaluation",
            "employee hiring evaluation",
            "employee shop evaluation"
        ],
        "align_scores": [
            0.982796311378479,
            6.35942560620606e-05,
            0.001303712953813374,
            7.209452451206744e-05,
            0.0003046385827474296,
            5.701351255993359e-05,
            0.00044985266868025064,
            6.184007361298427e-05
        ],
        "align_select": "select employee.Name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Find the name of the employee who got the highest one time bonus.",
        "gold_select": "select employee.Name",
        "select_candidates": [
            "select employee.Name",
            "select employee.Name, employee.Employee_ID",
            "select employee.Name, employee.Age",
            "select employee.Name, employee.City"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "employee evaluation",
        "table_candidates": [
            "employee evaluation",
            "employee hiring evaluation",
            "employee shop evaluation"
        ],
        "align_scores": [
            0.9839634299278259,
            6.15907774772495e-05,
            0.0003149654367007315,
            6.363501597661525e-05,
            0.00021702420781366527,
            6.482149910880253e-05,
            0.00026201913715340197,
            6.054819095879793e-05
        ],
        "align_select": "select employee.Name",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Which employee received the biggest bonus? Give me the employee name.",
        "gold_select": "select employee.Name",
        "select_candidates": [
            "select employee.Name",
            "select employee.Name, employee.Employee_ID",
            "select employee.Name, evaluation.ee_id",
            "select employee.Name, employee.Age"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "employee evaluation",
        "table_candidates": [
            "employee evaluation",
            "employee hiring evaluation"
        ],
        "align_scores": [
            0.9593497514724731,
            6.782107084291056e-05,
            0.0004004102374892682,
            6.405706517398357e-05,
            0.0003599486080929637,
            6.354163633659482e-05,
            0.00024987064534798265,
            6.18133635725826e-05
        ],
        "align_select": "select employee.Name",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Find the names of employees who never won any award in the evaluation.",
        "gold_select": "select employee.Name",
        "select_candidates": [
            "select employee.Name",
            "select employee.Name, employee.City",
            "select employee.Name, employee.Age",
            "select employee.Name, employee.Employee_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "employee",
        "table_candidates": [
            "employee evaluation",
            "employee",
            "employee hiring evaluation"
        ],
        "align_scores": [
            0.625607967376709,
            0.10179879516363144,
            0.000285918649751693,
            0.0001636028609937057,
            0.00023114759824238718,
            0.00014527334133163095,
            0.00016292350483126938,
            0.00016316602705046535
        ],
        "align_select": "select employee.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of the employees who never received any evaluation?",
        "gold_select": "select employee.Name",
        "select_candidates": [
            "select employee.Name",
            "select employee.Name, employee.Age",
            "select employee.Name, employee.City",
            "select employee.Name, employee.Employee_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "employee",
        "table_candidates": [
            "employee",
            "employee evaluation",
            "employee hiring evaluation"
        ],
        "align_scores": [
            0.9830220937728882,
            0.0004068187263328582,
            0.00018153333803638816,
            8.228017395595089e-05,
            0.00020395992032717913,
            8.001929381862283e-05,
            0.00016376705025322735,
            7.588131120428443e-05
        ],
        "align_select": "select employee.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which district has both stores with less than 3000 products and stores with more than 10000 products?",
        "gold_select": "select shop.District",
        "select_candidates": [
            "select shop.District",
            "select shop.District The SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "select shop.District The SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING",
            "select shop.District The SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE (GROUP BY-HAVING"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "shop",
        "table_candidates": [
            "shop"
        ],
        "align_scores": [
            0.9943463206291199,
            0.9943463206291199,
            0.003745819441974163,
            0.003745819441974163,
            0.0001782001054380089,
            0.0001782001054380089,
            0.0011087640887126327,
            0.0011087640887126327
        ],
        "align_select": "select shop.District",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "Find the districts in which there are both shops selling less than 3000 products and shops selling more than 10000 products.",
        "gold_select": "select shop.District",
        "select_candidates": [
            "select shop.District",
            "select shop.District, shop.num_prod",
            "select shop.District, shop.loc",
            "select shop.District Then shop.num_prod"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "shop",
        "table_candidates": [
            "shop"
        ],
        "align_scores": [
            0.9922119379043579,
            0.9922119379043579,
            0.00028127303812652826,
            0.00028127303812652826,
            0.0003269334847573191,
            0.0003269334847573191,
            0.001828813343308866,
            0.001828813343308866
        ],
        "align_select": "select shop.District",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "How many different store locations are there?",
        "gold_select": "select count(distinct shop.loc)",
        "select_candidates": [
            "select count(distinct shop.loc)",
            "select count (distinct shop.loc)",
            "select count(distinct t1.c6)",
            "select count(distinct t1.c 2)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "shop",
        "table_candidates": [
            "shop"
        ],
        "align_scores": [
            0.9957738518714905,
            0.9957738518714905,
            0.01691153459250927,
            0.01691153459250927,
            0.0005023005651310086,
            0.0005023005651310086,
            0.0005815049516968429,
            0.0005815049516968429
        ],
        "align_select": "select count(distinct shop.loc)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "Count the number of distinct store locations.",
        "gold_select": "select count(distinct shop.loc)",
        "select_candidates": [
            "select count(distinct shop.loc)",
            "select count(separate shop.loc)",
            "select count (distinct shop.loc)",
            "select count(distinct t1.c 2)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "shop",
        "table_candidates": [
            "shop"
        ],
        "align_scores": [
            0.9967178702354431,
            0.9967178702354431,
            0.15807202458381653,
            0.15807202458381653,
            0.008107527159154415,
            0.008107527159154415,
            0.0004801246686838567,
            0.0004801246686838567
        ],
        "align_select": "select count(distinct shop.loc)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "Find the manager name and district of the shop whose number of products is the largest.",
        "gold_select": "select shop.Manager_name, shop.dist",
        "select_candidates": [
            "select shop.Manager_name, shop.dist",
            "select shop.Manager_name, shop.Location",
            "select shop.Name, shop.dist",
            "select shop.Manager_name, shop.dist,"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "shop",
        "table_candidates": [
            "shop"
        ],
        "align_scores": [
            0.9832726716995239,
            7.673419895581901e-05,
            0.9475806355476379,
            8.357258775504306e-05,
            0.020739970728754997,
            7.935317989904433e-05,
            0.0043495954014360905,
            7.743532478343695e-05
        ],
        "align_select": "select shop.Manager_name, shop.dist",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What are the manager name and district of the shop that sells the largest number of products?",
        "gold_select": "select shop.Manager_name, shop.dist",
        "select_candidates": [
            "select shop.Manager_name, shop.dist",
            "select shop.Manager_name, shop.Location",
            "select shop.Name, shop.dist",
            "select shop.Manager_name, shop.dist,"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "shop",
        "table_candidates": [
            "shop"
        ],
        "align_scores": [
            0.9856188297271729,
            9.979804599424824e-05,
            0.9140664339065552,
            0.00011059566168114543,
            0.020276721566915512,
            9.741741087054834e-05,
            0.006303415168076754,
            8.656326826894656e-05
        ],
        "align_select": "select shop.Manager_name, shop.dist",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Return the name, location and district of all shops in descending order of number of products.",
        "gold_select": "select shop.Name, shop.Location, shop.dist",
        "select_candidates": [
            "select shop.Name, shop.Location, shop.dist",
            "select shop.Name, shop.Location, shop.dist",
            "select shop.Name, shop.Location, shop.dist",
            "select shop.Name, shop.dist, shop.Location"
        ],
        "select_labels": [
            1.0,
            1.0,
            1.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "shop",
        "table_candidates": [
            "shop"
        ],
        "align_scores": [
            0.9944105744361877,
            0.9944105744361877,
            0.9944105744361877,
            0.9944105744361877,
            0.9944105744361877,
            0.9944105744361877,
            0.9952489733695984,
            0.9952489733695984
        ],
        "align_select": "select shop.Name, shop.Location, shop.dist",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "Sort all the shops by number products in descending order, and return the name, location and district of each shop.",
        "gold_select": "select shop.Name, shop.Location, shop.dist",
        "select_candidates": [
            "select shop.Name, shop.Location, shop.dist",
            "select shop.Name, shop.Location, shop.dist",
            "select shop.Name, shop.Location, shop.dist",
            "select shop.Name, shop.dist, shop.Location"
        ],
        "select_labels": [
            1.0,
            1.0,
            1.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "shop",
        "table_candidates": [
            "shop"
        ],
        "align_scores": [
            0.9903658628463745,
            0.9903658628463745,
            0.9903658628463745,
            0.9903658628463745,
            0.9903658628463745,
            0.9903658628463745,
            0.9905151128768921,
            0.9905151128768921
        ],
        "align_select": "select shop.Name, shop.Location, shop.dist",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "find the name of employee who was awarded the most times in the evaluation.",
        "gold_select": "select employee.Name",
        "select_candidates": [
            "select employee.Name",
            "select employee.Name, evaluation.Bonus",
            "select employee.Name, evaluation.Employee_ID",
            "select employee.Name, employee.Age"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "employee evaluation",
        "table_candidates": [
            "employee evaluation",
            "employee shop evaluation",
            "employee hiring evaluation",
            "employee hiring"
        ],
        "align_scores": [
            0.9879915118217468,
            6.269178265938535e-05,
            0.002533423714339733,
            6.380942795658484e-05,
            0.0007967454730533063,
            6.49847206659615e-05,
            0.0003619254275690764,
            5.8179866755381227e-05
        ],
        "align_select": "select employee.Name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Which employee received the most awards in evaluations? Give me the employee name.",
        "gold_select": "select employee.Name",
        "select_candidates": [
            "select employee.Name",
            "select employee.Name, evaluation.Employee_ID",
            "select employee.Name, employee.Age",
            "select employee.Name, evaluation.Bonus"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "employee evaluation",
        "table_candidates": [
            "employee evaluation",
            "employee shop evaluation",
            "employee hiring evaluation",
            "employee hiring"
        ],
        "align_scores": [
            0.982796311378479,
            6.35942560620606e-05,
            0.0010758732678368688,
            7.207170710898936e-05,
            0.0003046385827474296,
            5.701351255993359e-05,
            0.001161100808531046,
            6.723334081470966e-05
        ],
        "align_select": "select employee.Name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Find the name of the employee who got the highest one time bonus.",
        "gold_select": "select employee.Name",
        "select_candidates": [
            "select employee.Name",
            "select employee.Name, employee.Age",
            "select employee.Name, employee.City",
            "select employee.Name, evaluation.Employee_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "employee evaluation",
        "table_candidates": [
            "employee evaluation",
            "employee shop evaluation",
            "employee hiring evaluation"
        ],
        "align_scores": [
            0.9839634299278259,
            6.15907774772495e-05,
            0.00021702420781366527,
            6.482149910880253e-05,
            0.00026201913715340197,
            6.054819095879793e-05,
            0.00046871727681718767,
            6.329947791527957e-05
        ],
        "align_select": "select employee.Name",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Which employee received the biggest bonus? Give me the employee name.",
        "gold_select": "select employee.Name",
        "select_candidates": [
            "select employee.Name",
            "select employee.Name, evaluation.Employee_ID",
            "select employee.Name, employee.Age",
            "select employee.Name, employee.ee_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "employee evaluation",
        "table_candidates": [
            "employee evaluation"
        ],
        "align_scores": [
            0.9593497514724731,
            6.782107084291056e-05,
            0.0003924467891920358,
            6.524314812850207e-05,
            0.00024987064534798265,
            6.18133635725826e-05,
            0.00032743721385486424,
            6.397385732270777e-05
        ],
        "align_select": "select employee.Name",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Find the names of employees who never won any award in the evaluation.",
        "gold_select": "select employee.Name",
        "select_candidates": [
            "select employee.Name",
            "select employee.Name, employee.Age",
            "select employee.Name, employee.City",
            "select employee.Name, evaluation.Bonus"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "employee",
        "table_candidates": [
            "employee evaluation",
            "employee",
            "employee hiring evaluation"
        ],
        "align_scores": [
            0.625607967376709,
            0.10179879516363144,
            0.00023114759824238718,
            0.00014527334133163095,
            0.000285918649751693,
            0.0001636028609937057,
            0.00032380703487433493,
            0.000481089431559667
        ],
        "align_select": "select employee.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of the employees who never received any evaluation?",
        "gold_select": "select employee.Name",
        "select_candidates": [
            "select employee.Name",
            "select employee.Name, employee.Age",
            "select employee.Name, employee.City",
            "select employee.Name, employee.Age, employee.City"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "employee",
        "table_candidates": [
            "employee",
            "employee evaluation"
        ],
        "align_scores": [
            0.9830220937728882,
            0.0004068187263328582,
            0.00018153333803638816,
            8.228017395595089e-05,
            0.00020395992032717913,
            8.001929381862283e-05,
            0.00014300258771982044,
            7.237715908559039e-05
        ],
        "align_select": "select employee.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which district has both stores with less than 3000 products and stores with more than 10000 products?",
        "gold_select": "select shop.dist",
        "select_candidates": [
            "select shop.dist",
            "select shop.dist Then-intersect-shop.dist",
            "select shop.dist, shop.Number_products",
            "select shop.dist Then-intersect-shop.Location"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "shop",
        "table_candidates": [
            "shop"
        ],
        "align_scores": [
            0.9928995370864868,
            0.9928995370864868,
            0.00017552853387314826,
            0.00017552853387314826,
            0.00017053323972504586,
            0.00017053323972504586,
            0.00019440027244854718,
            0.00019440027244854718
        ],
        "align_select": "select shop.dist",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "Find the districts in which there are both shops selling less than 3000 products and shops selling more than 10000 products.",
        "gold_select": "select shop.dist",
        "select_candidates": [
            "select shop.dist",
            "select shop.dist, shop.Number_products",
            "select shop.dist, shop.Location",
            "select shop.dist Then shop.Number_products"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "shop",
        "table_candidates": [
            "shop"
        ],
        "align_scores": [
            0.9917628765106201,
            0.9917628765106201,
            0.0002367135602980852,
            0.0002367135602980852,
            0.00027778296498581767,
            0.00027778296498581767,
            0.0015562649350613356,
            0.0015562649350613356
        ],
        "align_select": "select shop.dist",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "Find the number of shops in each location.",
        "gold_select": "select count(*), shop.loc",
        "select_candidates": [
            "select shop.loc, count(*)",
            "select count(*), shop.loc",
            "select shop.loc, count(*), shop.District",
            "select shop_shop.loc, count(*)"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "shop",
        "table_candidates": [
            "shop"
        ],
        "align_scores": [
            0.996701180934906,
            0.00012275544577278197,
            0.9966346621513367,
            0.00013742079318035394,
            0.00022869564418215305,
            8.4632498328574e-05,
            0.0008923833956941962,
            0.0001340517628705129
        ],
        "align_select": "select shop.loc, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "How many shops are there in each location?",
        "gold_select": "select count(*), shop.loc",
        "select_candidates": [
            "select shop.loc, count(*)",
            "select count(*), shop.loc",
            "select shop.loc, count(*), shop.District",
            "select shop_shop.loc, count(*)"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "shop",
        "table_candidates": [
            "shop"
        ],
        "align_scores": [
            0.9964442849159241,
            0.00014566117897629738,
            0.9963929057121277,
            0.00015572171832900494,
            0.00024242045765276998,
            8.86971247382462e-05,
            0.0010801891330629587,
            0.0001311510568484664
        ],
        "align_select": "select shop.loc, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "Return the name, location and district of all shops in descending order of number of products.",
        "gold_select": "select shop.Name, shop.loc, shop.District",
        "select_candidates": [
            "select shop.Name, shop.loc, shop.District",
            "select shop.Name, shop.loc, shop.District",
            "select shop.Name, shop.District, shop.loc",
            "select shop.Name, shop.loc, shop.District"
        ],
        "select_labels": [
            1.0,
            1.0,
            1.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "shop",
        "table_candidates": [
            "shop"
        ],
        "align_scores": [
            0.9929177761077881,
            0.9929177761077881,
            0.9929177761077881,
            0.9929177761077881,
            0.9945850968360901,
            0.9945850968360901,
            0.9929177761077881,
            0.9929177761077881
        ],
        "align_select": "select shop.Name, shop.loc, shop.District",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "Sort all the shops by number products in descending order, and return the name, location and district of each shop.",
        "gold_select": "select shop.Name, shop.loc, shop.District",
        "select_candidates": [
            "select shop.Name, shop.loc, shop.District",
            "select shop.Name, shop.loc, shop.District",
            "select shop.Name, shop.loc, shop.District",
            "select shop.Name, shop.District, shop.loc"
        ],
        "select_labels": [
            1.0,
            1.0,
            1.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "shop",
        "table_candidates": [
            "shop"
        ],
        "align_scores": [
            0.9875642657279968,
            0.9875642657279968,
            0.9875642657279968,
            0.9875642657279968,
            0.9875642657279968,
            0.9875642657279968,
            0.9904458522796631,
            0.9904458522796631
        ],
        "align_select": "select shop.Name, shop.loc, shop.District",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "How many different store locations are there?",
        "gold_select": "select count(distinct shop.loc)",
        "select_candidates": [
            "select count(distinct shop.loc)",
            "select count (distinct shop.loc)",
            "select count(distinct t1.c6)",
            "select count(distinct t1.c 2)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "shop",
        "table_candidates": [
            "shop"
        ],
        "align_scores": [
            0.9957738518714905,
            0.9957738518714905,
            0.01691153459250927,
            0.01691153459250927,
            0.0005023005651310086,
            0.0005023005651310086,
            0.0005815049516968429,
            0.0005815049516968429
        ],
        "align_select": "select count(distinct shop.loc)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "Count the number of distinct store locations.",
        "gold_select": "select count(distinct shop.loc)",
        "select_candidates": [
            "select count(distinct shop.loc)",
            "select count(separate shop.loc)",
            "select count (distinct shop.loc)",
            "select count( distinct shop.loc)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "shop",
        "table_candidates": [
            "shop"
        ],
        "align_scores": [
            0.9967178702354431,
            0.9967178702354431,
            0.15807202458381653,
            0.15807202458381653,
            0.008107527159154415,
            0.008107527159154415,
            0.33241310715675354,
            0.33241310715675354
        ],
        "align_select": "select count(distinct shop.loc)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "How many documents are using the template with type code 'PPT'?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Templates.Template_Type_Code",
            "select count(*), Templates.Template_Details",
            "select count(Documents.Document_ID)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates Documents",
        "table_candidates": [
            "Templates Documents",
            "Ref_Template_Types Templates Documents"
        ],
        "align_scores": [
            0.9945511221885681,
            0.00019862272893078625,
            0.0002512251085136086,
            0.0006027549970895052,
            0.0003582637873478234,
            0.0049310182221233845,
            0.019134892150759697,
            0.0001600728719495237
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Count the number of documents that use the PPT template type.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Templates.Template_Type_Code",
            "select count(Documents.Document_ID)",
            "select count(*), Templates.Template_Details"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates Documents",
        "table_candidates": [
            "Templates Documents",
            "Ref_Template_Types Templates Documents"
        ],
        "align_scores": [
            0.9952329993247986,
            0.00014943860878702253,
            0.00022880928008817136,
            0.0005871880566701293,
            0.0016365601914003491,
            0.00010716178803704679,
            0.0002679647586774081,
            0.0075084492564201355
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the id and type code for the template used by the most documents?",
        "gold_select": "select Documents.Template_ID, Templates.Template_Type_Code",
        "select_candidates": [
            "select Documents.Template_ID, Templates.Template_Type_Code",
            "select Templates.tpl_id, Templates.Template_Type_Code",
            "select Documents.Document_ID, Templates.Template_Type_Code",
            "select Documents.Template_ID, Templates.Template_Type_Code, Templates.Date_Effective_From"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates Documents",
        "table_candidates": [
            "Templates Documents",
            "Ref_Template_Types Templates Documents"
        ],
        "align_scores": [
            0.8109089136123657,
            8.957464888226241e-05,
            0.9922696352005005,
            9.512847464065999e-05,
            0.0003867671766784042,
            8.460667595500126e-05,
            0.0001952548191184178,
            5.429780503618531e-05
        ],
        "align_select": "select Documents.Template_ID, Templates.Template_Type_Code",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Return the id and type code of the template that is used for the greatest number of documents.",
        "gold_select": "select Documents.Template_ID, Templates.Template_Type_Code",
        "select_candidates": [
            "select Documents.Template_ID, Templates.Template_Type_Code",
            "select Templates.tpl_id, Templates.Template_Type_Code",
            "select Documents.Document_ID, Templates.Template_Type_Code",
            "select Documents.Template_ID, Templates.tpl_id, Templates.Template_Type_Code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-UNION-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates Documents",
        "table_candidates": [
            "Templates Documents",
            "Ref_Template_Types Templates Documents"
        ],
        "align_scores": [
            0.9413073062896729,
            0.00010666508751455694,
            0.9925097227096558,
            0.00011494587670313194,
            0.00039263779763132334,
            7.909481064416468e-05,
            0.00035401302739046514,
            7.356586866080761e-05
        ],
        "align_select": "select Documents.Template_ID, Templates.Template_Type_Code",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Show ids for all templates not used by any document.",
        "gold_select": "select Templates.tpl_id",
        "select_candidates": [
            "select Templates.tpl_id",
            "select Documents.Template_ID, Templates.tpl_id",
            "select Documents.Template_ID",
            "select Documents.Template_ID, Templates.Template_Type_Code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates Documents",
        "table_candidates": [
            "Templates Documents",
            "Ref_Template_Types Templates Documents",
            "Ref_Template_Types Documents"
        ],
        "align_scores": [
            0.9889707565307617,
            0.9867048263549805,
            0.00017459027003496885,
            0.00016825311467982829,
            0.9756222367286682,
            0.9884799718856812,
            0.00020997274259570986,
            0.0001934587344294414
        ],
        "align_select": "select Templates.tpl_id",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM"
    },
    {
        "question": "What are the ids for templates that are not used in any documents?",
        "gold_select": "select Templates.tpl_id",
        "select_candidates": [
            "select Templates.tpl_id",
            "select Templates.tpl_id, Documents.Template_ID",
            "select Documents.Template_ID, Templates.tpl_id",
            "select Templates.tpl_id, Templates.Template_Details"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM",
            "SELECT-FROM-EXCEPT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates Documents",
        "table_candidates": [
            "Templates Documents",
            "Ref_Template_Types Templates Documents"
        ],
        "align_scores": [
            0.9913434982299805,
            0.03710426390171051,
            0.00033979577710852027,
            0.00019326069741509855,
            0.000259650667430833,
            0.00016394486010540277,
            0.00038433587178587914,
            0.00033404541318304837
        ],
        "align_select": "select Templates.tpl_id",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM"
    },
    {
        "question": "Show template ids, version numbers, and template type codes for all templates.",
        "gold_select": "select Templates.tpl_id, Templates.ver_no, Templates.Template_Type_Code",
        "select_candidates": [
            "select Templates.tpl_id, Templates.ver_no, Templates.Template_Type_Code",
            "select Templates.tpl_id, Templates.ver_no, Templates.Template_Type_Code",
            "select Templates.tpl_id, Templates.ver_no.c1, Templates.Template_Type_Code",
            "select Templates.tpl_id, t1.1.c1, Templates.Template_Type_Code"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates",
        "table_candidates": [
            "Templates"
        ],
        "align_scores": [
            0.9948338270187378,
            0.00010690295312087983,
            0.9948338270187378,
            0.00010690295312087983,
            0.0007074191817082465,
            9.318857337348163e-05,
            0.0003807073226198554,
            0.00010282052244292572
        ],
        "align_select": "select Templates.tpl_id, Templates.ver_no, Templates.Template_Type_Code",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What are the ids, version numbers, and type codes for each template?",
        "gold_select": "select Templates.tpl_id, Templates.ver_no, Templates.Template_Type_Code",
        "select_candidates": [
            "select Templates.tpl_id, Templates.ver_no, Templates.Template_Type_Code",
            "select Templates.tpl_id, Templates.ver_no, Templates.Template_Type_Code",
            "select Templates.tpl_id, Templates.Template_Type_Code, Templates.ver_no",
            "select Templates.tpl_id, Templates.ver_no.c1, Templates.Template_Type_Code"
        ],
        "select_labels": [
            1.0,
            1.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates",
        "table_candidates": [
            "Templates"
        ],
        "align_scores": [
            0.9933940768241882,
            8.971483475761488e-05,
            0.9933940768241882,
            8.971483475761488e-05,
            0.994288444519043,
            9.168098767986521e-05,
            0.0017134608933702111,
            8.887033618520945e-05
        ],
        "align_select": "select Templates.tpl_id, Templates.ver_no, Templates.Template_Type_Code",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What are the ids of templates with template type code PP or PPT?",
        "gold_select": "select Templates.tpl_id",
        "select_candidates": [
            "select Templates.tpl_id",
            "select Templates.tpl_id, Templates.Template_Type_Code",
            "select Templates.tpl_id, Templates.Template_Details",
            "select Templates.tpl_id, Templates.Date_Effective_From"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates",
        "table_candidates": [
            "Templates"
        ],
        "align_scores": [
            0.9957695007324219,
            0.001650807447731495,
            0.00017171211948152632,
            8.212605462176725e-05,
            0.0001829798857215792,
            8.280042675323784e-05,
            0.00026814310695044696,
            8.150090434355661e-05
        ],
        "align_select": "select Templates.tpl_id",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the ids of templates that have the code PP or PPT.",
        "gold_select": "select Templates.tpl_id",
        "select_candidates": [
            "select Templates.tpl_id",
            "select Templates.tpl_id, Templates.Template_Type_Code",
            "select Templates.tpl_id, Templates.Template_Details",
            "select Templates.tpl_id, Templates.Date_Effective_From"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates",
        "table_candidates": [
            "Templates"
        ],
        "align_scores": [
            0.9954962730407715,
            0.0007247657049447298,
            0.00011178454587934539,
            6.830754136899486e-05,
            0.00018713266763370484,
            7.212567288661376e-05,
            0.00019975293253082782,
            7.053426816128194e-05
        ],
        "align_select": "select Templates.tpl_id",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the version number and template type code for the template with version number later than 5?",
        "gold_select": "select Templates.ver_no, Templates.Template_Type_Code",
        "select_candidates": [
            "select Templates.ver_no, Templates.Template_Type_Code",
            "select Templates.ver_no, Templates.Template_Type_Code, Templates.Date_Effective_From",
            "select Templates.tpl_id, Templates.Template_Type_Code",
            "select Documents.Template_ID, Templates.Template_Type_Code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates",
        "table_candidates": [
            "Templates"
        ],
        "align_scores": [
            0.9906394481658936,
            0.0001921934017445892,
            0.0003285852144472301,
            7.055142486933619e-05,
            0.00048314876039512455,
            0.00012827859609387815,
            0.0003562959027476609,
            0.00010301957809133455
        ],
        "align_select": "select Templates.ver_no, Templates.Template_Type_Code",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the version numbers and template type codes of templates with a version number greater than 5.",
        "gold_select": "select Templates.ver_no, Templates.Template_Type_Code",
        "select_candidates": [
            "select Templates.ver_no, Templates.Template_Type_Code",
            "select Templates.ver_no, Templates.Template_Type_Code, Templates.Date_Effective_From",
            "select Templates.tpl_id, Templates.Template_Type_Code",
            "select Templates.ver_no.c2, Templates.ver_no"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates",
        "table_candidates": [
            "Templates"
        ],
        "align_scores": [
            0.994170069694519,
            0.00018496099801268429,
            0.00019248720491304994,
            6.888403004268184e-05,
            0.00035425106761977077,
            9.79453616309911e-05,
            0.0004833005659747869,
            6.380638660630211e-05
        ],
        "align_select": "select Templates.ver_no, Templates.Template_Type_Code",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What the smallest version number and its template type code?",
        "gold_select": "select min(Templates.ver_no), Templates.Template_Type_Code",
        "select_candidates": [
            "select min(Templates.ver_no), min(Templates.Template_Type_Code)",
            "select Templates.ver_no, Templates.Template_Type_Code",
            "select min(Templates.ver_no), Templates.Template_Type_Code",
            "select min(Templates.ver_no), max(Templates.Template_Type_Code)"
        ],
        "select_labels": [
            0.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "Templates",
        "table_candidates": [
            "Templates"
        ],
        "align_scores": [
            0.0006273563485592604,
            0.0002527977048885077,
            0.9857703447341919,
            0.9852960705757141,
            0.0001056814071489498,
            6.733658665325493e-05,
            0.00024917098926380277,
            0.00018964309128932655
        ],
        "align_select": "select Templates.ver_no, Templates.Template_Type_Code",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Return the lowest version number, along with its corresponding template type code.",
        "gold_select": "select min(Templates.ver_no), Templates.Template_Type_Code",
        "select_candidates": [
            "select Templates.ver_no, Templates.Template_Type_Code",
            "select min(Templates.ver_no), Templates.Template_Type_Code",
            "select min(Templates.ver_no), min(Templates.Template_Type_Code)",
            "select Templates.tpl_id, Templates.Template_Type_Code"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-UNION-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "Templates",
        "table_candidates": [
            "Templates"
        ],
        "align_scores": [
            0.9958032965660095,
            5.9839690948138013e-05,
            8.425178384641185e-05,
            6.481569289462641e-05,
            0.00010925721289822832,
            7.069008279358968e-05,
            0.00029602483846247196,
            7.45612705941312e-05
        ],
        "align_select": "select Templates.ver_no, Templates.Template_Type_Code",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What is the template type code of the template used by document with the name \"Data base\"?",
        "gold_select": "select Templates.Template_Type_Code",
        "select_candidates": [
            "select Templates.Template_Type_Code",
            "select Templates.Template_Type_Code, Documents.Template_ID",
            "select Templates.Template_Type_Code, Templates.Template_Details",
            "select Templates.Template_Type_Code (ref. Templates.Template_Details)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates Documents",
        "table_candidates": [
            "Templates Documents",
            "Ref_Template_Types Templates Documents"
        ],
        "align_scores": [
            0.9945762157440186,
            9.507387585472316e-05,
            0.0001748953654896468,
            6.952296826057136e-05,
            0.00022774931858293712,
            6.736355135217309e-05,
            0.0010720003629103303,
            7.10448730387725e-05
        ],
        "align_select": "select Templates.Template_Type_Code",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the template type code of the template that is used by a document named Data base.",
        "gold_select": "select Templates.Template_Type_Code",
        "select_candidates": [
            "select Templates.Template_Type_Code",
            "select Templates.Template_Type_Code, Documents.Template_ID",
            "select Templates.Template_Type_Code (ref. Templates.Template_Details)",
            "select Templates.Template_Type_Code, Templates.Template_Details"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates Documents",
        "table_candidates": [
            "Templates Documents",
            "Ref_Template_Types Templates Documents"
        ],
        "align_scores": [
            0.9928170442581177,
            9.590046101948246e-05,
            0.00026398428599350154,
            6.991989357629791e-05,
            0.0007491065771318972,
            6.863911403343081e-05,
            0.0003593763685785234,
            6.918917642906308e-05
        ],
        "align_select": "select Templates.Template_Type_Code",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show all document names using templates with template type code BK.",
        "gold_select": "select Documents.Document_Name",
        "select_candidates": [
            "select Documents.Document_Name",
            "select Documents.Document_ID, Documents.Document_Name",
            "select Documents.Document_Name, Documents.Document_Description",
            "select Documents.Document_Name, Templates.Template_Details"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates Documents",
        "table_candidates": [
            "Templates Documents",
            "Ref_Template_Types Templates Documents"
        ],
        "align_scores": [
            0.9965587258338928,
            8.041155524551868e-05,
            0.00013192897313274443,
            6.645396933890879e-05,
            0.0001627322199055925,
            6.371802737703547e-05,
            0.000411804678151384,
            6.391965871443972e-05
        ],
        "align_select": "select Documents.Document_Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of documents that use templates with the code BK?",
        "gold_select": "select Documents.Document_Name",
        "select_candidates": [
            "select Documents.Document_Name",
            "select Documents.Document_Name, Documents.Document_Description",
            "select Documents.Document_ID, Documents.Document_Name",
            "select Documents.Template_ID, Documents.Document_Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates Documents",
        "table_candidates": [
            "Templates Documents",
            "Ref_Template_Types Templates Documents",
            "Documents"
        ],
        "align_scores": [
            0.9201329350471497,
            0.00011450783495092764,
            0.00020106723241042346,
            6.114327698014677e-05,
            0.00015357192023657262,
            6.51714435662143e-05,
            0.00021060554718133062,
            6.656978803221136e-05
        ],
        "align_select": "select Documents.Document_Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show all template type codes and the number of documents using each type.",
        "gold_select": "select Templates.Template_Type_Code, count(*)",
        "select_candidates": [
            "select Templates.Template_Type_Code, count(*)",
            "select Documents.Document_Name, count(*)",
            "select Templates.Template_Type_Code, count(Documents.Template_ID)",
            "select Templates.Template_Type_Code, count(*), Documents.Template_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates Documents",
        "table_candidates": [
            "Templates Documents",
            "Ref_Template_Types Templates Documents"
        ],
        "align_scores": [
            0.9961840510368347,
            0.0002688514650799334,
            0.0003589389962144196,
            0.0001839712931541726,
            0.0010922846850007772,
            0.00019787228666245937,
            0.00019309125491417944,
            0.00010656911763362586
        ],
        "align_select": "select Templates.Template_Type_Code, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "What are the different template type codes, and how many documents use each type?",
        "gold_select": "select Templates.Template_Type_Code, count(*)",
        "select_candidates": [
            "select Templates.Template_Type_Code, count(*)",
            "select Documents.Document_Name, count(*)",
            "select Templates.Template_Type_Code, count(*), Documents.Template_ID",
            "select Templates.Template_Type_Code, count(*), Templates.Date_Effective_From"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates Documents",
        "table_candidates": [
            "Templates Documents",
            "Ref_Template_Types Templates Documents"
        ],
        "align_scores": [
            0.9958231449127197,
            0.0002947412431240082,
            0.00048174249241128564,
            0.0002177405112888664,
            0.00017020753875840455,
            0.00011399829236324877,
            0.0002605188055895269,
            0.00012838408292736858
        ],
        "align_select": "select Templates.Template_Type_Code, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "Which template type code is used by most number of documents?",
        "gold_select": "select Templates.Template_Type_Code",
        "select_candidates": [
            "select Templates.Template_Type_Code",
            "select Templates.Template_Type_Code, Documents.Template_ID",
            "select Templates.Template_Type_Code, Documents.Document_ID",
            "select Documents.Document_Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates Documents",
        "table_candidates": [
            "Templates Documents",
            "Ref_Template_Types Templates Documents"
        ],
        "align_scores": [
            0.9955251812934875,
            6.929249502718449e-05,
            0.00021210768318269402,
            5.79049919906538e-05,
            0.0003848568594548851,
            5.7387271226616576e-05,
            0.00035297509748488665,
            7.29863895685412e-05
        ],
        "align_select": "select Templates.Template_Type_Code",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Return the code of the template type that is most commonly used in documents.",
        "gold_select": "select Templates.Template_Type_Code",
        "select_candidates": [
            "select Templates.Template_Type_Code",
            "select Templates.Template_Type_Code, Documents.Template_ID",
            "select Documents.Document_Name",
            "select Documents.Template_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates Documents",
        "table_candidates": [
            "Templates Documents",
            "Ref_Template_Types Templates Documents",
            "Templates"
        ],
        "align_scores": [
            0.994851291179657,
            7.35255453037098e-05,
            0.0002358264464419335,
            6.052706157788634e-05,
            0.0005823402316309512,
            7.286018080776557e-05,
            0.989750325679779,
            7.829552487237379e-05
        ],
        "align_select": "select Templates.Template_Type_Code",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Show all template type codes that are not used by any document.",
        "gold_select": "select Templates.Template_Type_Code",
        "select_candidates": [
            "select Templates.Template_Type_Code",
            "select Templates.Template_Type_Code, Documents.Template_ID",
            "select Templates.Template_Type_Code SINCE-EXCEPT-SINCE",
            "select Templates.Template_Type_Code, Templates.Date_Effective_From"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM",
            "SELECT-FROM-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates Documents",
        "table_candidates": [
            "Templates Documents",
            "Ref_Template_Types Templates Documents",
            "Templates",
            "Ref_Template_Types Templates"
        ],
        "align_scores": [
            0.9864217042922974,
            0.045277636498212814,
            0.00024089265207294375,
            0.00016452223644591868,
            0.002680939855054021,
            0.0014779205666854978,
            0.0003898344293702394,
            0.00019504250667523593
        ],
        "align_select": "select Templates.Template_Type_Code",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM"
    },
    {
        "question": "What are the codes of template types that are not used for any document?",
        "gold_select": "select Templates.Template_Type_Code",
        "select_candidates": [
            "select Templates.Template_Type_Code",
            "select Templates.Template_Type_Code, Templates.Date_Effective_From",
            "select Templates.ver_no, Templates.Template_Type_Code",
            "select Templates.Template_Type_Code, Documents.Template_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates Documents",
        "table_candidates": [
            "Templates Documents",
            "Ref_Template_Types Templates Documents",
            "Templates",
            "Ref_Template_Types Templates"
        ],
        "align_scores": [
            0.9898394346237183,
            0.9858102202415466,
            0.0006170689011923969,
            0.000639719539321959,
            0.00038086195127107203,
            0.0002905071305576712,
            0.0002815214975271374,
            0.00022262534184847027
        ],
        "align_select": "select Templates.Template_Type_Code",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM"
    },
    {
        "question": "What are the distinct template type descriptions for the templates ever used by any document?",
        "gold_select": "select distinct Ref_Template_Types.Template_Type_Description",
        "select_candidates": [
            "select distinct Ref_Template_Types.Template_Type_Description",
            "select distinct Ref_Template_Types.Template_Type_Description, Templates.Template_Type_Code",
            "select distinct Ref_Template_Types.Template_Type_Description, t0.c2",
            "select distinct Ref_Template_Types.Template_Type_Description, Documents.Template_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Ref_Template_Types Templates Documents",
        "table_candidates": [
            "Ref_Template_Types Templates Documents",
            "Ref_Template_Types Templates"
        ],
        "align_scores": [
            0.9682401418685913,
            0.028136415407061577,
            0.00043601859943009913,
            0.00012723423424176872,
            0.00046559746260754764,
            0.0002099091070704162,
            0.0007657059468328953,
            0.0001501931546954438
        ],
        "align_select": "select distinct Ref_Template_Types.Template_Type_Description",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "Return the different descriptions for templates that have been used in a document.",
        "gold_select": "select distinct Ref_Template_Types.Template_Type_Description",
        "select_candidates": [
            "select distinct Ref_Template_Types.Template_Type_Description",
            "select distinct Ref_Template_Types.Template_Type_Description, Documents.Document_Description",
            "select different Ref_Template_Types.Template_Type_Description",
            "select distinct Ref_Template_Types.Template_Type_Description, Documents.Document_Description"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Ref_Template_Types Templates Documents",
        "table_candidates": [
            "Ref_Template_Types Templates Documents",
            "Ref_Template_Types Documents"
        ],
        "align_scores": [
            0.9785464406013489,
            0.0061761378310620785,
            0.003888395382091403,
            0.00014504994032904506,
            0.09837043285369873,
            0.000307247944874689,
            0.003888395382091403,
            0.00014504994032904506
        ],
        "align_select": "select distinct Ref_Template_Types.Template_Type_Description",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What are the template ids with template type description \"Presentation\".",
        "gold_select": "select Templates.tpl_id",
        "select_candidates": [
            "select Templates.tpl_id",
            "select Templates.tpl_id, Ref_Template_Types.Template_Type_Description",
            "select Templates.tpl_id, Templates.Template_Type_Code",
            "select Templates.tpl_id, Templates.Template_Details"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Ref_Template_Types Templates",
        "table_candidates": [
            "Ref_Template_Types Templates",
            "Ref_Template_Types Templates Documents"
        ],
        "align_scores": [
            0.9964666366577148,
            0.00011273533891653642,
            0.00016431482799816877,
            6.997278978815302e-05,
            0.0001358564040856436,
            6.350032344926149e-05,
            0.00016145725385285914,
            6.347090675262734e-05
        ],
        "align_select": "select Templates.tpl_id",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the ids corresponding to templates with the description 'Presentation'.",
        "gold_select": "select Templates.tpl_id",
        "select_candidates": [
            "select Templates.tpl_id",
            "select Templates.tpl_id, Ref_Template_Types.Template_Type_Description",
            "select Templates.tpl_id, Templates.Template_Details",
            "select Templates.tpl_id, Templates.Template_Type_Code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Ref_Template_Types Templates",
        "table_candidates": [
            "Ref_Template_Types Templates",
            "Ref_Template_Types Templates Documents",
            "Ref_Template_Types Templates Paragraphs"
        ],
        "align_scores": [
            0.9965670108795166,
            0.00010253698565065861,
            0.00018416241800878197,
            6.66730193188414e-05,
            0.00016239429533015937,
            6.189312261994928e-05,
            0.00011787546100094914,
            6.173107249196619e-05
        ],
        "align_select": "select Templates.tpl_id",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many paragraphs for the document with name 'Summer Show'?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Documents.Document_ID",
            "select count(*), Documents.Template_ID",
            "select count(*), Documents.Document_Description"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents Paragraphs",
        "table_candidates": [
            "Documents Paragraphs",
            "Ref_Template_Types Documents Paragraphs",
            "Templates Documents Paragraphs"
        ],
        "align_scores": [
            0.9955456256866455,
            6.71743109705858e-05,
            0.0001688278280198574,
            6.108541128924116e-05,
            0.00019535089086275548,
            6.486392521765083e-05,
            0.00027530299848876894,
            5.9805228374898434e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Count the number of paragraphs in the document named 'Summer Show'.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Documents.Document_ID",
            "select count(distinct Paragraphs.Paragraph_Text)",
            "select count(distinct Paragraphs.Paragraph_ID)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents Paragraphs",
        "table_candidates": [
            "Documents Paragraphs",
            "Ref_Template_Types Documents Paragraphs",
            "Templates Documents Paragraphs"
        ],
        "align_scores": [
            0.996163010597229,
            7.369914965238422e-05,
            0.00016680809494573623,
            6.284310074988753e-05,
            0.0008670634706504643,
            7.776121492497623e-05,
            0.0003239913785364479,
            7.68210447859019e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show paragraph details for paragraph with text 'Korea '.",
        "gold_select": "select Paragraphs.oth_dtl",
        "select_candidates": [
            "select Paragraphs.oth_dtl",
            "select Paragraphs.doc_id, Paragraphs.oth_dtl",
            "select Paragraphs.oth_dtl, Paragraphs.Paragraph_Text",
            "select Paragraphs.oth_dtl, t3.c4"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Paragraphs",
        "table_candidates": [
            "Paragraphs"
        ],
        "align_scores": [
            0.9527084231376648,
            0.00024796323850750923,
            0.00020774398581124842,
            0.00010145873238798231,
            0.0001870241976575926,
            9.109797247219831e-05,
            0.0002752880100160837,
            9.453506936552003e-05
        ],
        "align_select": "select Paragraphs.oth_dtl",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the details for the paragraph that includes the text 'Korea '?",
        "gold_select": "select Paragraphs.oth_dtl",
        "select_candidates": [
            "select Paragraphs.oth_dtl",
            "select t2.c5",
            "select t2.c5, Paragraphs.oth_dtl",
            "select Documents.Document_Name, Documents.Document_Description"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Paragraphs",
        "table_candidates": [
            "Paragraphs",
            "Documents Paragraphs"
        ],
        "align_scores": [
            0.9871311783790588,
            0.00015181515482254326,
            0.0006768464227207005,
            8.2702114013955e-05,
            0.0005655802087858319,
            7.567644934169948e-05,
            0.0005829089204780757,
            8.027135481825098e-05
        ],
        "align_select": "select Paragraphs.oth_dtl",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show all paragraph ids and texts for the document with name 'Welcome to NY'.",
        "gold_select": "select Paragraphs.Paragraph_ID, Paragraphs.Paragraph_Text",
        "select_candidates": [
            "select Paragraphs.Paragraph_ID, Paragraphs.Paragraph_Text",
            "select Documents.Document_ID, Paragraphs.Paragraph_Text",
            "select Documents.Document_ID, Documents.Document_Name",
            "select Paragraphs.doc_id, Paragraphs.Paragraph_Text"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents Paragraphs",
        "table_candidates": [
            "Documents Paragraphs",
            "Ref_Template_Types Documents Paragraphs"
        ],
        "align_scores": [
            0.9957453608512878,
            0.000140949065098539,
            0.0004935350734740496,
            9.035049879457802e-05,
            0.0002868009905796498,
            9.193838195642456e-05,
            0.0006041555316187441,
            8.416939090238884e-05
        ],
        "align_select": "select Paragraphs.Paragraph_ID, Paragraphs.Paragraph_Text",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the ids and texts of paragraphs in the document titled 'Welcome to NY'?",
        "gold_select": "select Paragraphs.Paragraph_ID, Paragraphs.Paragraph_Text",
        "select_candidates": [
            "select Paragraphs.Paragraph_ID, Paragraphs.Paragraph_Text",
            "select Documents.Document_ID, Paragraphs.Paragraph_Text",
            "select param_Paragraphs.Paragraph_ID, Paragraphs.Paragraph_Text",
            "select Paragraphs.Paragraph_ID, Paragraphs.Paragraph_Text, Paragraphs.oth_dtl"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents Paragraphs",
        "table_candidates": [
            "Documents Paragraphs"
        ],
        "align_scores": [
            0.9949996471405029,
            0.00017912274051923305,
            0.0005559312994591892,
            0.00012161563063273206,
            0.0005957873654551804,
            9.011963265947998e-05,
            0.0002644841151777655,
            6.675528857158497e-05
        ],
        "align_select": "select Paragraphs.Paragraph_ID, Paragraphs.Paragraph_Text",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show all paragraph texts for the document \"Customer reviews\".",
        "gold_select": "select Paragraphs.Paragraph_Text",
        "select_candidates": [
            "select Paragraphs.Paragraph_Text",
            "select Paragraphs.Paragraph_Text, Documents.Document_Description",
            "select Paragraphs.doc_id, Paragraphs.Paragraph_Text",
            "select Paragraphs.Paragraph_Text, Paragraphs.oth_dtl"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents Paragraphs",
        "table_candidates": [
            "Documents Paragraphs",
            "Ref_Template_Types Documents Paragraphs",
            "Templates Documents Paragraphs"
        ],
        "align_scores": [
            0.9960095882415771,
            9.113585110753775e-05,
            0.0001990198652492836,
            6.362664862535894e-05,
            0.00019895822333637625,
            7.134603947633877e-05,
            0.00014240387827157974,
            6.188503175508231e-05
        ],
        "align_select": "select Paragraphs.Paragraph_Text",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the paragraph texts for the document with the name 'Customer reviews'?",
        "gold_select": "select Paragraphs.Paragraph_Text",
        "select_candidates": [
            "select Paragraphs.Paragraph_Text",
            "select Paragraphs.Paragraph_Text, Paragraphs.oth_dtl",
            "select Paragraphs.doc_id, Paragraphs.Paragraph_Text",
            "select Paragraphs.Paragraph_Text, Paragraphs.doc_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents Paragraphs",
        "table_candidates": [
            "Documents Paragraphs",
            "Ref_Template_Types Documents Paragraphs"
        ],
        "align_scores": [
            0.9953705668449402,
            0.00011120193084934726,
            0.0001546494895592332,
            6.40147554804571e-05,
            0.00016858587332535535,
            7.110099249985069e-05,
            0.000127831197460182,
            6.320598185993731e-05
        ],
        "align_select": "select Paragraphs.Paragraph_Text",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show all document ids and the number of paragraphs in each document. Order by document id.",
        "gold_select": "select Paragraphs.doc_id, count(*)",
        "select_candidates": [
            "select Paragraphs.doc_id, count(*)",
            "select Documents.Document_ID, count(*)",
            "select Documents.Document_Name, count(*)",
            "select Documents.Template_ID, count(*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Paragraphs",
        "table_candidates": [
            "Paragraphs",
            "Documents Paragraphs"
        ],
        "align_scores": [
            0.9963626265525818,
            0.00018029578495770693,
            0.9948137998580933,
            0.00016884776414372027,
            0.0005795788019895554,
            0.00013033223513048142,
            0.0031806433107703924,
            0.0001382383779855445
        ],
        "align_select": "select Paragraphs.doc_id, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY"
    },
    {
        "question": "Return the different document ids along with the number of paragraphs corresponding to each, ordered by id.",
        "gold_select": "select Paragraphs.doc_id, count(*)",
        "select_candidates": [
            "select Paragraphs.doc_id, count(*)",
            "select Paragraphs.doc_id.c1, count(*)",
            "select Documents.Document_ID, count(*)",
            "select Paragraphs.doc_id, count(**)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Paragraphs",
        "table_candidates": [
            "Paragraphs"
        ],
        "align_scores": [
            0.9954902529716492,
            0.000650721020065248,
            0.00021650749840773642,
            0.0001362352049909532,
            0.9919697642326355,
            0.0006843489827588201,
            0.9944638609886169,
            0.0006362784770317376
        ],
        "align_select": "select Paragraphs.doc_id, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY"
    },
    {
        "question": "Show all document ids, names and the number of paragraphs in each document.",
        "gold_select": "select Paragraphs.doc_id, Documents.Document_Name, count(*)",
        "select_candidates": [
            "select Documents.Document_ID, Documents.Document_Name, count(*)",
            "select Documents.Document_ID, Documents.Document_Name, count(*)",
            "select Paragraphs.doc_id, Documents.Document_Name, count(*)",
            "select Documents.Document_ID, Documents.Document_Name.c2, count(*)"
        ],
        "select_labels": [
            0.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents Paragraphs",
        "table_candidates": [
            "Documents Paragraphs"
        ],
        "align_scores": [
            0.9921510219573975,
            0.00016903913638088852,
            0.9921510219573975,
            0.00016903913638088852,
            0.9829892516136169,
            0.0001615576766198501,
            0.00030563288601115346,
            0.00013900373596698046
        ],
        "align_select": "select Documents.Document_ID, Documents.Document_Name, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "What are the ids and names of each document, as well as the number of paragraphs in each?",
        "gold_select": "select Paragraphs.doc_id, Documents.Document_Name, count(*)",
        "select_candidates": [
            "select Documents.Document_ID, Documents.Document_Name, count(*)",
            "select Documents.Document_ID, Documents.Document_Name, count(*)",
            "select Paragraphs.doc_id, Documents.Document_Name, count(*)",
            "select Documents.Document_ID, Documents.Document_Name, count(*), Paragraphs.doc_id"
        ],
        "select_labels": [
            0.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents Paragraphs",
        "table_candidates": [
            "Documents Paragraphs"
        ],
        "align_scores": [
            0.9909981489181519,
            0.00023780754418112338,
            0.9909981489181519,
            0.00023780754418112338,
            0.7830625772476196,
            0.0002514858788345009,
            0.0008566717733629048,
            0.00012011561921099201
        ],
        "align_select": "select Documents.Document_ID, Documents.Document_Name, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "List all document ids with at least two paragraphs.",
        "gold_select": "select Paragraphs.doc_id",
        "select_candidates": [
            "select Paragraphs.doc_id",
            "select Paragraphs.doc_id, Paragraphs.Paragraph_Text",
            "select Paragraphs.doc_id, Paragraphs.oth_dtl",
            "select Documents.Document_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Paragraphs",
        "table_candidates": [
            "Paragraphs",
            "Documents Paragraphs",
            "Templates Paragraphs",
            "Ref_Template_Types Documents Paragraphs",
            "Ref_Template_Types Paragraphs"
        ],
        "align_scores": [
            0.9955442547798157,
            0.00011168534547323361,
            0.00023690953094046563,
            5.51767079741694e-05,
            0.0002901210682466626,
            5.794918251922354e-05,
            0.994316041469574,
            0.00015084014739841223
        ],
        "align_select": "select Paragraphs.doc_id",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the ids of documents that have 2 or more paragraphs?",
        "gold_select": "select Paragraphs.doc_id",
        "select_candidates": [
            "select Paragraphs.doc_id",
            "select Documents.Document_ID",
            "select Paragraphs.doc_id, Paragraphs.Paragraph_Text",
            "select Paragraphs.doc_id, Documents.Document_Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Paragraphs",
        "table_candidates": [
            "Paragraphs",
            "Documents Paragraphs",
            "Templates Paragraphs",
            "Templates Documents Paragraphs"
        ],
        "align_scores": [
            0.9957555532455444,
            0.0001340067683486268,
            0.9937765598297119,
            0.00010786045459099114,
            0.0003140700573567301,
            6.520569877466187e-05,
            0.001139889471232891,
            7.463014480890706e-05
        ],
        "align_select": "select Paragraphs.doc_id",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What is the document id and name with greatest number of paragraphs?",
        "gold_select": "select Paragraphs.doc_id, Documents.Document_Name",
        "select_candidates": [
            "select Documents.Document_ID, Documents.Document_Name",
            "select Documents.Document_ID, Documents.Document_Name, Documents.Document_Description",
            "select Paragraphs.doc_id, Documents.Document_Name",
            "select Documents.Template_ID, Documents.Document_Name"
        ],
        "select_labels": [
            0.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents Paragraphs",
        "table_candidates": [
            "Documents Paragraphs"
        ],
        "align_scores": [
            0.9948528409004211,
            5.6722779845586047e-05,
            0.00039894887595437467,
            5.4370713769458234e-05,
            0.004364501219242811,
            6.49683570372872e-05,
            0.0013611885951831937,
            5.963802323094569e-05
        ],
        "align_select": "select Documents.Document_ID, Documents.Document_Name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Return the id and name of the document with the most paragraphs.",
        "gold_select": "select Paragraphs.doc_id, Documents.Document_Name",
        "select_candidates": [
            "select Documents.Document_ID, Documents.Document_Name",
            "select Documents.Document_ID, Documents.Document_Name, Documents.Document_Description",
            "select Paragraphs.doc_id, Documents.Document_Name",
            "select Documents.Template_ID, Documents.Document_Name"
        ],
        "select_labels": [
            0.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents Paragraphs",
        "table_candidates": [
            "Documents Paragraphs"
        ],
        "align_scores": [
            0.9955689311027527,
            5.8152072597295046e-05,
            0.00021988585649523884,
            5.453308767755516e-05,
            0.005070516839623451,
            6.272939936025068e-05,
            0.0010823856573551893,
            5.822360253660008e-05
        ],
        "align_select": "select Documents.Document_ID, Documents.Document_Name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the document id with least number of paragraphs?",
        "gold_select": "select Paragraphs.doc_id",
        "select_candidates": [
            "select Documents.Document_ID",
            "select Paragraphs.doc_id",
            "select Documents.Document_ID, Paragraphs.doc_id",
            "select Paragraphs.doc_id, Paragraphs.Paragraph_Text"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Paragraphs",
        "table_candidates": [
            "Documents Paragraphs",
            "Paragraphs",
            "Ref_Template_Types Documents Paragraphs",
            "Templates Paragraphs",
            "Templates Documents Paragraphs",
            "Ref_Template_Types Paragraphs"
        ],
        "align_scores": [
            0.9953823685646057,
            5.527487155632116e-05,
            0.9957733750343323,
            6.45717591396533e-05,
            0.00037474025157280266,
            5.6187971495091915e-05,
            0.0003780118131544441,
            5.3502451919484884e-05
        ],
        "align_select": "select Documents.Document_ID",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Return the id of the document with the fewest paragraphs.",
        "gold_select": "select Paragraphs.doc_id",
        "select_candidates": [
            "select Documents.Document_ID",
            "select Documents.Document_ID, Documents.Document_Name",
            "select Documents.Document_ID, Paragraphs.doc_id",
            "select Paragraphs.doc_id"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Paragraphs",
        "table_candidates": [
            "Documents Paragraphs",
            "Ref_Template_Types Documents Paragraphs",
            "Templates Documents Paragraphs",
            "Templates Paragraphs"
        ],
        "align_scores": [
            0.9962124824523926,
            7.711161742918193e-05,
            0.0003330205217935145,
            5.273091665003449e-05,
            0.00025885202921926975,
            5.966236494714394e-05,
            0.9963990449905396,
            7.580978126497939e-05
        ],
        "align_select": "select Documents.Document_ID",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the document id with 1 to 2 paragraphs?",
        "gold_select": "select Paragraphs.doc_id",
        "select_candidates": [
            "select Paragraphs.doc_id",
            "select Paragraphs.doc_id, Paragraphs.Paragraph_Text",
            "select Paragraphs.doc_id.c1",
            "select Paragraphs.doc_id, Paragraphs.oth_dtl"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Paragraphs",
        "table_candidates": [
            "Paragraphs",
            "Documents Paragraphs",
            "Templates Paragraphs"
        ],
        "align_scores": [
            0.995712399482727,
            0.00027240015333518386,
            0.0002987053885590285,
            7.818950689397752e-05,
            0.0004986239946447313,
            0.00011089591134805232,
            0.00017574074445292354,
            7.998702494660392e-05
        ],
        "align_select": "select Paragraphs.doc_id",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Give the ids of documents that have between one and two paragraphs.",
        "gold_select": "select Paragraphs.doc_id",
        "select_candidates": [
            "select Paragraphs.doc_id",
            "select Documents.Document_ID",
            "select Paragraphs.Paragraph_ID",
            "select Paragraphs.doc_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Paragraphs",
        "table_candidates": [
            "Paragraphs",
            "Documents Paragraphs",
            "Templates Paragraphs",
            "Templates Documents Paragraphs"
        ],
        "align_scores": [
            0.9932159781455994,
            0.00014443356485571712,
            0.9902128577232361,
            0.00013278896221891046,
            0.03913765773177147,
            0.00014844107499811798,
            0.9932159781455994,
            0.00014443356485571712
        ],
        "align_select": "select Paragraphs.doc_id",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Show the document id with paragraph text 'Brazil' and 'Ireland'.",
        "gold_select": "select Paragraphs.doc_id",
        "select_candidates": [
            "select Paragraphs.doc_id",
            "select Paragraphs.doc_id, Paragraphs.Paragraph_Text",
            "select Paragraphs.Paragraph_ID",
            "select Paragraphs.doc_id, Paragraphs.Paragraph_Text, Paragraphs.oth_dtl"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Paragraphs",
        "table_candidates": [
            "Paragraphs",
            "Documents Paragraphs"
        ],
        "align_scores": [
            0.9963803887367249,
            9.905350452754647e-05,
            0.00016069530101958662,
            5.9720201534219086e-05,
            0.0030907539185136557,
            8.442599209956825e-05,
            0.00011936615919694304,
            6.213002052390948e-05
        ],
        "align_select": "select Paragraphs.doc_id",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the ids of documents that contain the paragraph text 'Brazil' and 'Ireland'?",
        "gold_select": "select Paragraphs.doc_id",
        "select_candidates": [
            "select Paragraphs.doc_id",
            "select Paragraphs.Paragraph_ID",
            "select Paragraphs.doc_id, Paragraphs.Paragraph_Text",
            "select Paragraphs.doc_id, Paragraphs.oth_dtl"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Paragraphs",
        "table_candidates": [
            "Paragraphs"
        ],
        "align_scores": [
            0.9945932030677795,
            0.0002450870524626225,
            0.9937969446182251,
            0.00037327874451875687,
            0.00014875874330755323,
            6.443501479225233e-05,
            0.00016806744679342955,
            7.849356188671663e-05
        ],
        "align_select": "select Paragraphs.doc_id",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "List document IDs, document names, and document descriptions for all documents.",
        "gold_select": "select Documents.doc_id, Documents.doc_name, Documents.Document_Description",
        "select_candidates": [
            "select Documents.doc_id, Documents.doc_name, Documents.Document_Description",
            "select Documents.doc_id, Documents.tpl_id, Documents.doc_name, Documents.Document_Description",
            "select Documents.doc_id, Documents.doc_name, Documents.Document_Description",
            "select Documents.tpl_id, Documents.doc_name, Documents.Document_Description"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents",
        "table_candidates": [
            "Documents"
        ],
        "align_scores": [
            0.995027482509613,
            0.00011107030877610669,
            0.0007927709957584739,
            7.250365160871297e-05,
            0.995027482509613,
            0.00011107030877610669,
            0.0012092371471226215,
            0.00011640405136859044
        ],
        "align_select": "select Documents.doc_id, Documents.doc_name, Documents.Document_Description",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What are the ids, names, and descriptions for all documents?",
        "gold_select": "select Documents.doc_id, Documents.doc_name, Documents.Document_Description",
        "select_candidates": [
            "select Documents.doc_id, Documents.doc_name, Documents.Document_Description",
            "select Documents.doc_id, Documents.tpl_id, Documents.doc_name, Documents.Document_Description",
            "select Documents.doc_id, Documents.doc_name, Documents.Document_Description",
            "select Documents.doc_id, Documents.tpl_id, Documents.Document_Description"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents",
        "table_candidates": [
            "Documents"
        ],
        "align_scores": [
            0.9946940541267395,
            0.0001178486054413952,
            0.0010335698025301099,
            7.405039650620893e-05,
            0.9946940541267395,
            0.0001178486054413952,
            0.00043223556713201106,
            7.456262392224744e-05
        ],
        "align_select": "select Documents.doc_id, Documents.doc_name, Documents.Document_Description",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What is the document name and template id for document with description with the letter 'w' in it?",
        "gold_select": "select Documents.doc_name, Documents.tpl_id",
        "select_candidates": [
            "select Documents.doc_name, Documents.tpl_id",
            "select Documents.doc_name, Documents.doc_id",
            "select Documents.doc_id, Documents.doc_name",
            "select Documents.tpl_id, Documents.doc_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents",
        "table_candidates": [
            "Documents"
        ],
        "align_scores": [
            0.9943203926086426,
            0.00015413539949804544,
            0.0008944361470639706,
            9.08578367670998e-05,
            0.0026419770438224077,
            8.960282866610214e-05,
            0.9940209984779358,
            0.00014750219997949898
        ],
        "align_select": "select Documents.doc_name, Documents.tpl_id",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the names and template ids for documents that contain the letter w in their description.",
        "gold_select": "select Documents.doc_name, Documents.tpl_id",
        "select_candidates": [
            "select Documents.doc_name, Documents.tpl_id",
            "select t2.c5, Documents.doc_name, Documents.tpl_id",
            "select Documents.doc_name, Documents.doc_id",
            "select Documents.Document_Description, Documents.doc_name, Documents.tpl_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents",
        "table_candidates": [
            "Documents"
        ],
        "align_scores": [
            0.9953333735466003,
            0.00013889945694245398,
            0.00014536562957800925,
            6.005955583532341e-05,
            0.0015633434522897005,
            9.202855289913714e-05,
            0.0004313865501899272,
            6.334851786959916e-05
        ],
        "align_select": "select Documents.doc_name, Documents.tpl_id",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the document id, template id and description for document named \"Robbin CV\"?",
        "gold_select": "select Documents.doc_id, Documents.tpl_id, Documents.Document_Description",
        "select_candidates": [
            "select Documents.doc_id, Documents.tpl_id, Documents.Document_Description",
            "select Documents.doc_id, Documents.tpl_id.c1, Documents.Document_Description",
            "select Documents.doc_id, Documents.tpl_id, Documents.Document_Description",
            "select Documents.doc_id-, Documents.tpl_id, Documents.Document_Description"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents",
        "table_candidates": [
            "Documents"
        ],
        "align_scores": [
            0.9952724575996399,
            0.00014986669702921063,
            0.0015263458481058478,
            9.57168304012157e-05,
            0.9952724575996399,
            0.00014986669702921063,
            0.0018148246454074979,
            0.0001082161907106638
        ],
        "align_select": "select Documents.doc_id, Documents.tpl_id, Documents.Document_Description",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the document id, template id, and description for the document with the name Robbin CV.",
        "gold_select": "select Documents.doc_id, Documents.tpl_id, Documents.Document_Description",
        "select_candidates": [
            "select Documents.doc_id, Documents.tpl_id, Documents.Document_Description",
            "select Documents.doc_id, Documents.tpl_id.c1, Documents.Document_Description",
            "select Documents.doc_id, Documents.tpl_id, Documents.Document_Description",
            "select Documents.doc_id-, Documents.tpl_id, Documents.Document_Description"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents",
        "table_candidates": [
            "Documents"
        ],
        "align_scores": [
            0.9953321814537048,
            0.00012388266623020172,
            0.0013908910332247615,
            8.859973604558036e-05,
            0.9953321814537048,
            0.00012388266623020172,
            0.0013342845486477017,
            9.84947764663957e-05
        ],
        "align_select": "select Documents.doc_id, Documents.tpl_id, Documents.Document_Description",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many different templates do all document use?",
        "gold_select": "select count(distinct Documents.tpl_id)",
        "select_candidates": [
            "select count(distinct Templates.Template_ID)",
            "select count(distinct Templates.Template_Type_Code)",
            "select count(distinct Templates.Template_Details)",
            "select count(distinct Templates.Version_Number)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents",
        "table_candidates": [
            "Templates",
            "Templates Documents",
            "Ref_Template_Types Templates Documents",
            "Ref_Template_Types Templates",
            "Templates Paragraphs"
        ],
        "align_scores": [
            0.9960108995437622,
            9.90676780929789e-05,
            0.9936874508857727,
            8.568508928874508e-05,
            0.9892227649688721,
            8.057075319811702e-05,
            0.007442135829478502,
            8.152989175869152e-05
        ],
        "align_select": "select count(distinct Templates.Template_ID)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "Count the number of different templates used for documents.",
        "gold_select": "select count(distinct Documents.tpl_id)",
        "select_candidates": [
            "select count(distinct Documents.tpl_id)",
            "select count(distinct Templates.Template_ID)",
            "select count(distinct Documents.doc_id)",
            "select count(different Documents.tpl_id)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "Documents",
        "table_candidates": [
            "Templates Documents",
            "Ref_Template_Types Templates Documents",
            "Documents",
            "Templates"
        ],
        "align_scores": [
            0.9960544109344482,
            0.9960544109344482,
            0.9939767122268677,
            0.9939767122268677,
            0.0005665546050295234,
            0.0005665546050295234,
            0.010711338371038437,
            0.010711338371038437
        ],
        "align_select": "select count(distinct Documents.tpl_id)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "How many documents are using the template with type code 'PPT'?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Templates.Template_Type_Code",
            "select count(*), Templates.Template_Details",
            "select count(Documents.doc_id)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates Documents",
        "table_candidates": [
            "Templates Documents",
            "Ref_Template_Types Templates Documents"
        ],
        "align_scores": [
            0.9945511221885681,
            0.00019862272893078625,
            0.0002512251085136086,
            0.0006027549970895052,
            0.0003582637873478234,
            0.0049310182221233845,
            0.019900519400835037,
            0.0001725443871691823
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Count the number of documents that use the PPT template type.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Templates.Template_Type_Code",
            "select count(Documents.doc_id)",
            "select count(*), Templates.Template_Details"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates Documents",
        "table_candidates": [
            "Templates Documents",
            "Ref_Template_Types Templates Documents"
        ],
        "align_scores": [
            0.9952329993247986,
            0.00014943860878702253,
            0.00022880928008817136,
            0.0005871880566701293,
            0.0020437799394130707,
            0.00011445619747973979,
            0.0002679647586774081,
            0.0075084492564201355
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show all template ids and number of documents using each template.",
        "gold_select": "select Documents.tpl_id, count(*)",
        "select_candidates": [
            "select Documents.tpl_id, count(*)",
            "select Templates.Template_ID, count(*)",
            "select Documents.tpl_id, count(Documents.doc_id)",
            "select Documents.tpl_id, count(**)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents",
        "table_candidates": [
            "Documents",
            "Templates Documents"
        ],
        "align_scores": [
            0.9962056875228882,
            0.0002709669934120029,
            0.9958693385124207,
            0.00030054012313485146,
            0.0021061452571302652,
            0.00015903712483122945,
            0.992939829826355,
            0.0002707676321733743
        ],
        "align_select": "select Documents.tpl_id, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "What are all different template ids used for documents, and how many times were each of them used?",
        "gold_select": "select Documents.tpl_id, count(*)",
        "select_candidates": [
            "select Documents.tpl_id, count(*)",
            "select count(*), Documents.tpl_id",
            "select Documents.tpl_id, count(*), Documents.doc_name",
            "select Documents.tpl_id, count(*), Templates.Template_Type_Code"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents",
        "table_candidates": [
            "Documents"
        ],
        "align_scores": [
            0.9719901084899902,
            0.0006008472992107272,
            0.9492772221565247,
            0.00041366161894984543,
            0.00021374321659095585,
            0.00012173780123703182,
            0.0007410117541439831,
            0.00010788122744997963
        ],
        "align_select": "select Documents.tpl_id, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "What is the id and type code for the template used by the most documents?",
        "gold_select": "select Documents.tpl_id, Templates.Template_Type_Code",
        "select_candidates": [
            "select Templates.Template_ID, Templates.Template_Type_Code",
            "select Documents.tpl_id, Templates.Template_Type_Code",
            "select Templates.Template_ID, Templates.Template_Type_Code, Templates.Template_Details",
            "select Templates.Template_ID, Templates.Template_Type_Code, Templates.date_eff_from"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates Documents",
        "table_candidates": [
            "Templates Documents",
            "Ref_Template_Types Templates Documents"
        ],
        "align_scores": [
            0.994228720664978,
            8.86436682776548e-05,
            0.6068341732025146,
            9.45426436373964e-05,
            0.0003720221866387874,
            7.025501690804958e-05,
            0.00017664016922935843,
            5.818952195113525e-05
        ],
        "align_select": "select Templates.Template_ID, Templates.Template_Type_Code",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Return the id and type code of the template that is used for the greatest number of documents.",
        "gold_select": "select Documents.tpl_id, Templates.Template_Type_Code",
        "select_candidates": [
            "select Templates.Template_ID, Templates.Template_Type_Code",
            "select Documents.tpl_id, Templates.Template_Type_Code",
            "select Templates.Template_ID, Templates.Template_Type_Code, Templates.Template_Details",
            "select Templates.Template_ID, Templates.Template_Type_Code, Templates.date_eff_from"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-UNION-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates Documents",
        "table_candidates": [
            "Templates Documents",
            "Ref_Template_Types Templates Documents"
        ],
        "align_scores": [
            0.9935815334320068,
            0.00010857755114557222,
            0.9345357418060303,
            0.00011210541561013088,
            0.0002625756023917347,
            7.907505641924217e-05,
            0.00011826671106973663,
            5.285285078571178e-05
        ],
        "align_select": "select Templates.Template_ID, Templates.Template_Type_Code",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Show ids for all templates that are used by more than one document.",
        "gold_select": "select Documents.tpl_id",
        "select_candidates": [
            "select Templates.Template_ID",
            "select Documents.tpl_id",
            "select Documents.tpl_id, Templates.Template_ID",
            "select Documents.tpl_id, Templates.Template_Details"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents",
        "table_candidates": [
            "Templates Documents",
            "Ref_Template_Types Templates Documents",
            "Ref_Template_Types Documents"
        ],
        "align_scores": [
            0.994611382484436,
            0.00016078571206890047,
            0.9944473505020142,
            0.00017643129103817046,
            0.0008804808021523058,
            8.315714512718841e-05,
            0.001536675961688161,
            0.00010046489478554577
        ],
        "align_select": "select Templates.Template_ID",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the template ids of any templates used in more than a single document?",
        "gold_select": "select Documents.tpl_id",
        "select_candidates": [
            "select Documents.tpl_id",
            "select Templates.Template_ID",
            "select Documents.tpl_id, Documents.doc_name",
            "select Documents.tpl_id, Templates.Template_Details"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents",
        "table_candidates": [
            "Templates Documents",
            "Documents",
            "Ref_Template_Types Templates Documents",
            "Ref_Template_Types Documents"
        ],
        "align_scores": [
            0.9902108907699585,
            0.00021900662977714092,
            0.9921557903289795,
            0.00017479014059063047,
            0.007217660080641508,
            0.00010342094901716337,
            0.001445065368898213,
            9.697622590465471e-05
        ],
        "align_select": "select Documents.tpl_id",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Show ids for all templates not used by any document.",
        "gold_select": "select Templates.Template_ID",
        "select_candidates": [
            "select Templates.Template_ID",
            "select Templates.Template_ID, Documents.tpl_id",
            "select Documents.tpl_id, Templates.Template_ID",
            "select Templates.Template_ID, Templates.Template_Details"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates Documents",
        "table_candidates": [
            "Templates Documents",
            "Ref_Template_Types Documents"
        ],
        "align_scores": [
            0.9864012598991394,
            0.9876664876937866,
            0.0003387551987543702,
            0.0003335842629894614,
            0.0001883969671325758,
            0.00017603504238650203,
            0.00042401530663482845,
            0.000373011251213029
        ],
        "align_select": "select Templates.Template_ID",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM"
    },
    {
        "question": "What are the ids for templates that are not used in any documents?",
        "gold_select": "select Templates.Template_ID",
        "select_candidates": [
            "select Templates.Template_ID",
            "select Documents.tpl_id, Templates.Template_ID",
            "select Templates.Template_ID, Templates.Template_Details",
            "select Templates.Template_ID, Documents.tpl_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM",
            "SELECT-FROM-EXCEPT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates Documents",
        "table_candidates": [
            "Templates Documents",
            "Ref_Template_Types Templates Documents",
            "Templates"
        ],
        "align_scores": [
            0.9922680258750916,
            0.03395775705575943,
            0.0002904237771872431,
            0.00022651359904557467,
            0.0003700041852425784,
            0.00030657058232463896,
            0.0005662349867634475,
            0.00021033342636656016
        ],
        "align_select": "select Templates.Template_ID",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM"
    },
    {
        "question": "What is the template type code of the template used by document with the name \"Data base\"?",
        "gold_select": "select Templates.Template_Type_Code",
        "select_candidates": [
            "select Templates.Template_Type_Code",
            "select Templates.Template_Type_Code, Documents.tpl_id",
            "select Templates.Template_Type_Code, Templates.Template_Details",
            "select Templates.Template_Type_Code, Documents.Document_Description"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates Documents",
        "table_candidates": [
            "Templates Documents",
            "Ref_Template_Types Templates Documents"
        ],
        "align_scores": [
            0.9945762157440186,
            9.507387585472316e-05,
            0.0001818157033994794,
            7.277545228134841e-05,
            0.00022774931858293712,
            6.736355135217309e-05,
            0.00023529978352598846,
            7.023424404906109e-05
        ],
        "align_select": "select Templates.Template_Type_Code",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the template type code of the template that is used by a document named Data base.",
        "gold_select": "select Templates.Template_Type_Code",
        "select_candidates": [
            "select Templates.Template_Type_Code",
            "select Templates.Template_Type_Code, Documents.tpl_id",
            "select Templates.Template_Type_Code, Documents.Document_Description",
            "select Templates.Template_Type_Code (ref. Templates.Template_Details)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates Documents",
        "table_candidates": [
            "Templates Documents",
            "Ref_Template_Types Templates Documents"
        ],
        "align_scores": [
            0.9928170442581177,
            9.590046101948246e-05,
            0.00025611778255552053,
            7.274465315276757e-05,
            0.0002606877824291587,
            7.202780398074538e-05,
            0.0007491065771318972,
            6.863911403343081e-05
        ],
        "align_select": "select Templates.Template_Type_Code",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show all document names using templates with template type code BK.",
        "gold_select": "select Documents.doc_name",
        "select_candidates": [
            "select Documents.doc_name",
            "select Documents.doc_id, Documents.doc_name",
            "select Documents.doc_name, Documents.Document_Description",
            "select Documents.doc_name, Templates.Template_Details"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates Documents",
        "table_candidates": [
            "Templates Documents",
            "Ref_Template_Types Templates Documents"
        ],
        "align_scores": [
            0.996320366859436,
            7.940413343021646e-05,
            0.0001367833319818601,
            6.830292113590986e-05,
            0.00015804452414158732,
            6.491193198598921e-05,
            0.00046786421444267035,
            6.499358278233558e-05
        ],
        "align_select": "select Documents.doc_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of documents that use templates with the code BK?",
        "gold_select": "select Documents.doc_name",
        "select_candidates": [
            "select Documents.doc_name",
            "select Documents.doc_name, Documents.Document_Description",
            "select Documents.doc_id, Documents.doc_name",
            "select Documents.tpl_id, Documents.doc_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates Documents",
        "table_candidates": [
            "Templates Documents",
            "Ref_Template_Types Templates Documents"
        ],
        "align_scores": [
            0.9398519396781921,
            0.0001186783701996319,
            0.00020479220256675035,
            6.093582487665117e-05,
            0.0001630776678211987,
            6.636973557760939e-05,
            0.0002681755868252367,
            7.25060745025985e-05
        ],
        "align_select": "select Documents.doc_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show all template type codes and the number of documents using each type.",
        "gold_select": "select Templates.Template_Type_Code, count(*)",
        "select_candidates": [
            "select Templates.Template_Type_Code, count(*)",
            "select Templates.Template_Type_Code, count(Documents.tpl_id)",
            "select Templates.Template_Type_Code, count(*), Documents.tpl_id",
            "select Templates.Template_Type_Code, count(**)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates Documents",
        "table_candidates": [
            "Templates Documents",
            "Ref_Template_Types Templates Documents"
        ],
        "align_scores": [
            0.9961840510368347,
            0.0002688514650799334,
            0.0014193592360243201,
            0.00019072549184784293,
            0.00022951896244194359,
            0.00010121561354026198,
            0.9936395287513733,
            0.0002687848173081875
        ],
        "align_select": "select Templates.Template_Type_Code, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "What are the different template type codes, and how many documents use each type?",
        "gold_select": "select Templates.Template_Type_Code, count(*)",
        "select_candidates": [
            "select Templates.Template_Type_Code, count(*)",
            "select Templates.Template_Type_Code, count(*), Documents.tpl_id",
            "select Templates.Template_Type_Code, count(*), Templates.date_eff_from",
            "select Templates.Template_Type_Code, count(**)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates Documents",
        "table_candidates": [
            "Templates Documents",
            "Ref_Template_Types Templates Documents",
            "Templates"
        ],
        "align_scores": [
            0.9958231449127197,
            0.0002947412431240082,
            0.00019769350183196366,
            0.00010455903975525871,
            0.0001747656788211316,
            0.00016586788115091622,
            0.9935617446899414,
            0.0003035157569684088
        ],
        "align_select": "select Templates.Template_Type_Code, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "Which template type code is used by most number of documents?",
        "gold_select": "select Templates.Template_Type_Code",
        "select_candidates": [
            "select Templates.Template_Type_Code",
            "select Templates.Template_Type_Code, Documents.tpl_id",
            "select Templates.Template_Type_Code, Documents.Document_Description",
            "select Templates.Template_Type_Code (http://Templates.Template_Type_Code)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates Documents",
        "table_candidates": [
            "Templates Documents",
            "Ref_Template_Types Templates Documents",
            "Templates"
        ],
        "align_scores": [
            0.9955251812934875,
            6.929249502718449e-05,
            0.00026990933110937476,
            6.061630483600311e-05,
            0.0007662705611437559,
            5.638226866722107e-05,
            0.0025403122417628765,
            6.55449039186351e-05
        ],
        "align_select": "select Templates.Template_Type_Code",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Return the code of the template type that is most commonly used in documents.",
        "gold_select": "select Templates.Template_Type_Code",
        "select_candidates": [
            "select Templates.Template_Type_Code",
            "select Templates.Template_Type_Code, Documents.Document_Description",
            "select Templates.Template_Type_Code, Documents.tpl_id",
            "select Templates.Template_Type_Code, Templates.date_eff_from"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates Documents",
        "table_candidates": [
            "Templates Documents",
            "Templates"
        ],
        "align_scores": [
            0.994851291179657,
            7.35255453037098e-05,
            0.0005722290370613337,
            5.883358244318515e-05,
            0.0004113670438528061,
            6.231508450582623e-05,
            0.0001310759107582271,
            5.248388697509654e-05
        ],
        "align_select": "select Templates.Template_Type_Code",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Show all template type codes that are not used by any document.",
        "gold_select": "select Templates.Template_Type_Code",
        "select_candidates": [
            "select Templates.Template_Type_Code",
            "select Templates.Template_Type_Code, Templates.date_eff_from",
            "select Templates.Template_Type_Code, Documents.Document_Description",
            "select Templates.Template_Type_Code, Documents.tpl_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM",
            "SELECT-FROM-GROUP BY-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates Documents",
        "table_candidates": [
            "Templates",
            "Templates Documents",
            "Ref_Template_Types Templates Documents",
            "Ref_Template_Types Templates"
        ],
        "align_scores": [
            0.9864217042922974,
            0.9645727872848511,
            0.00018323009135201573,
            0.0001860154588939622,
            0.0007106510456651449,
            0.0019013608107343316,
            0.00039549166103824973,
            0.00043906018254347146
        ],
        "align_select": "select Templates.Template_Type_Code",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM"
    },
    {
        "question": "What are the codes of template types that are not used for any document?",
        "gold_select": "select Templates.Template_Type_Code",
        "select_candidates": [
            "select Templates.Template_Type_Code",
            "select Templates.Template_Type_Code, Templates.date_eff_from",
            "select Templates.Version_Number, Templates.Template_Type_Code",
            "select tpl_type_c0"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates Documents",
        "table_candidates": [
            "Templates",
            "Templates Documents",
            "Ref_Template_Types Templates",
            "Ref_Template_Types Templates Documents"
        ],
        "align_scores": [
            0.9898394346237183,
            0.9858102202415466,
            0.00024419347755610943,
            0.0002409307489870116,
            0.0003620412026066333,
            0.0002628037182148546,
            0.43249017000198364,
            0.39803776144981384
        ],
        "align_select": "select Templates.Template_Type_Code",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM"
    },
    {
        "question": "Show all template type codes and descriptions.",
        "gold_select": "select Ref_Template_Types.tpl_type_code, Ref_Template_Types.Template_Type_Description",
        "select_candidates": [
            "select Ref_Template_Types.tpl_type_code, Ref_Template_Types.Template_Type_Description",
            "select Ref_Template_Types.Template_Type_Description, Ref_Template_Types.tpl_type_code",
            "select Ref_Template_Types.tpl_type_code, Ref_Template_Types.Template_Type_Description,",
            "select tc0, Ref_Template_Types.Template_Type_Description"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Ref_Template_Types",
        "table_candidates": [
            "Ref_Template_Types"
        ],
        "align_scores": [
            0.9852418303489685,
            0.0006783097051084042,
            0.9825101494789124,
            0.0014101853594183922,
            0.000605553446803242,
            0.0001337179128313437,
            0.0006356442463584244,
            0.00028064599609933794
        ],
        "align_select": "select Ref_Template_Types.tpl_type_code, Ref_Template_Types.Template_Type_Description",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What are the type codes and descriptions for all template types?",
        "gold_select": "select Ref_Template_Types.tpl_type_code, Ref_Template_Types.Template_Type_Description",
        "select_candidates": [
            "select Ref_Template_Types.tpl_type_code, Ref_Template_Types.Template_Type_Description",
            "select Ref_Template_Types.Template_Type_Description, Ref_Template_Types.tpl_type_code",
            "select tpl_c0, Ref_Template_Types.Template_Type_Description",
            "select Documents.doc_id, Ref_Template_Types.Template_Type_Description"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Ref_Template_Types",
        "table_candidates": [
            "Ref_Template_Types"
        ],
        "align_scores": [
            0.9847053289413452,
            0.000673449772875756,
            0.9890556335449219,
            0.001226934022270143,
            0.0005906862206757069,
            0.0002178032445954159,
            0.00031836176640354097,
            0.00017070535977836698
        ],
        "align_select": "select Ref_Template_Types.tpl_type_code, Ref_Template_Types.Template_Type_Description",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What is the template type descriptions for template type code \"AD\".",
        "gold_select": "select Ref_Template_Types.Template_Type_Description",
        "select_candidates": [
            "select Ref_Template_Types.Template_Type_Description",
            "select Ref_Template_Types.tpl_type_code, Ref_Template_Types.Template_Type_Description",
            "select Ref_Template_Types.Template_Type_Description, t0.c2",
            "select Ref_Template_Types.Template_Type_Description, Ref_Template_Types.tpl_type_code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Ref_Template_Types",
        "table_candidates": [
            "Ref_Template_Types",
            "Ref_Template_Types Templates"
        ],
        "align_scores": [
            0.995912492275238,
            9.373902139486745e-05,
            0.00015709766012150794,
            8.055185026023537e-05,
            0.00025155828916467726,
            7.785455090925097e-05,
            0.00014971315977163613,
            7.53669228288345e-05
        ],
        "align_select": "select Ref_Template_Types.Template_Type_Description",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the template type description of the template type with the code AD.",
        "gold_select": "select Ref_Template_Types.Template_Type_Description",
        "select_candidates": [
            "select Ref_Template_Types.Template_Type_Description",
            "select Ref_Template_Types.tpl_type_code, Ref_Template_Types.Template_Type_Description",
            "select Ref_Template_Types.Template_Type_Description, t0.c2",
            "select Ref_Template_Types.Template_Type_Description, Ref_Template_Types.tpl_type_code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Ref_Template_Types",
        "table_candidates": [
            "Ref_Template_Types",
            "Ref_Template_Types Templates"
        ],
        "align_scores": [
            0.9961712956428528,
            6.975772703299299e-05,
            0.00016894795408006757,
            6.274088082136586e-05,
            0.00020736560691148043,
            6.963755731703714e-05,
            0.0001111432138714008,
            6.409642082871869e-05
        ],
        "align_select": "select Ref_Template_Types.Template_Type_Description",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the template type code for template type description \"Book\".",
        "gold_select": "select Ref_Template_Types.tpl_type_code",
        "select_candidates": [
            "select Templates.Template_Type_Code",
            "select Templates.Version_Number",
            "select Templates.Template_ID",
            "select Ref_Template_Types.tpl_type_code"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Ref_Template_Types",
        "table_candidates": [
            "Ref_Template_Types",
            "Ref_Template_Types Templates"
        ],
        "align_scores": [
            0.9962376356124878,
            7.919186464278027e-05,
            0.00042059263796545565,
            7.0587957452517e-05,
            0.001119897235184908,
            8.995263488031924e-05,
            0.9961757659912109,
            7.66411903896369e-05
        ],
        "align_select": "select Templates.Template_Type_Code",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the type code of the template type with the description \"Book\".",
        "gold_select": "select Ref_Template_Types.tpl_type_code",
        "select_candidates": [
            "select Ref_Template_Types.tpl_type_code",
            "select Templates.Template_Type_Code",
            "select t0.c, Ref_Template_Types.Template_Type_Description",
            "select Ref_Template_Types.Template_Type_Description, Templates.Template_Type_Code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Ref_Template_Types",
        "table_candidates": [
            "Ref_Template_Types",
            "Ref_Template_Types Templates"
        ],
        "align_scores": [
            0.9962045550346375,
            8.348441770067438e-05,
            0.9968827962875366,
            0.0001015287998598069,
            0.00016603482072241604,
            8.082685235422105e-05,
            0.0001649815822020173,
            7.100707443896681e-05
        ],
        "align_select": "select Ref_Template_Types.tpl_type_code",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the distinct template type descriptions for the templates ever used by any document?",
        "gold_select": "select distinct Ref_Template_Types.Template_Type_Description",
        "select_candidates": [
            "select distinct Ref_Template_Types.Template_Type_Description",
            "select distinct Ref_Template_Types.Template_Type_Description, Templates.Template_Type_Code",
            "select distinct Ref_Template_Types.Template_Type_Description, t0.c2",
            "select distinct Ref_Template_Types.Template_Type_Description (Ref_Template_Types.tpl_type_code)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Ref_Template_Types Templates Documents",
        "table_candidates": [
            "Ref_Template_Types Templates",
            "Ref_Template_Types Templates Documents"
        ],
        "align_scores": [
            0.9682401418685913,
            0.028136415407061577,
            0.00043601859943009913,
            0.00012723423424176872,
            0.00046559746260754764,
            0.0002099091070704162,
            0.0037543720100075006,
            0.0001931179576786235
        ],
        "align_select": "select distinct Ref_Template_Types.Template_Type_Description",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "Return the different descriptions for templates that have been used in a document.",
        "gold_select": "select distinct Ref_Template_Types.Template_Type_Description",
        "select_candidates": [
            "select distinct Ref_Template_Types.Template_Type_Description",
            "select distinct Ref_Template_Types.Template_Type_Description, Documents.Document_Description",
            "select distinct Ref_Template_Types.Template_Type_Description, Templates.Template_Details",
            "select different Ref_Template_Types.Template_Type_Description"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Ref_Template_Types Templates Documents",
        "table_candidates": [
            "Ref_Template_Types Templates Documents",
            "Ref_Template_Types Templates"
        ],
        "align_scores": [
            0.9785464406013489,
            0.0061761378310620785,
            0.003888395382091403,
            0.00014504994032904506,
            0.0005502857966348529,
            0.00013341798330657184,
            0.09837043285369873,
            0.000307247944874689
        ],
        "align_select": "select distinct Ref_Template_Types.Template_Type_Description",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What are the template ids with template type description \"Presentation\".",
        "gold_select": "select Templates.Template_ID",
        "select_candidates": [
            "select Templates.Template_ID",
            "select Templates.Template_ID, Ref_Template_Types.Template_Type_Description",
            "select Templates.Template_ID, Templates.Template_Type_Code",
            "select Templates.Template_ID, Templates.Template_Details"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Ref_Template_Types Templates",
        "table_candidates": [
            "Ref_Template_Types Templates"
        ],
        "align_scores": [
            0.9966046810150146,
            0.00011624456237768754,
            0.0001506450935266912,
            6.927268259460106e-05,
            0.00012799195246770978,
            6.351340562105179e-05,
            0.000139736250275746,
            6.459478754550219e-05
        ],
        "align_select": "select Templates.Template_ID",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the ids corresponding to templates with the description 'Presentation'.",
        "gold_select": "select Templates.Template_ID",
        "select_candidates": [
            "select Templates.Template_ID",
            "select Templates.Template_ID, Ref_Template_Types.Template_Type_Description",
            "select Templates.Template_ID, Templates.Template_Type_Code",
            "select t1.c, Templates.Template_Type_Code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Ref_Template_Types Templates",
        "table_candidates": [
            "Ref_Template_Types Templates"
        ],
        "align_scores": [
            0.9966578483581543,
            0.00011376210750313476,
            0.0001644223229959607,
            6.652904266957194e-05,
            0.00010692069918150082,
            6.236181070562452e-05,
            0.00016813476395327598,
            6.913481774972752e-05
        ],
        "align_select": "select Templates.Template_ID",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many paragraphs for the document with name 'Summer Show'?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Documents.doc_id",
            "select count(*), Documents.tpl_id",
            "select count(*), Documents.Document_Description"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents Paragraphs",
        "table_candidates": [
            "Documents Paragraphs",
            "Ref_Template_Types Documents Paragraphs",
            "Templates Documents Paragraphs"
        ],
        "align_scores": [
            0.9955456256866455,
            6.71743109705858e-05,
            0.00017645586922299117,
            6.206362741068006e-05,
            0.00022594201436731964,
            6.315019709290937e-05,
            0.00027530299848876894,
            5.9805228374898434e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Count the number of paragraphs in the document named 'Summer Show'.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Documents.doc_id",
            "select count(distinct Paragraphs.para_id)",
            "select count(*), Documents.tpl_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents Paragraphs",
        "table_candidates": [
            "Documents Paragraphs",
            "Ref_Template_Types Documents Paragraphs",
            "Templates Documents Paragraphs"
        ],
        "align_scores": [
            0.996163010597229,
            7.369914965238422e-05,
            0.00017337541794404387,
            6.292117905104533e-05,
            0.00038372521521523595,
            7.357927097473294e-05,
            0.00022522448853123933,
            6.470934022217989e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show paragraph details for paragraph with text 'Korea '.",
        "gold_select": "select Paragraphs.Other_Details",
        "select_candidates": [
            "select Paragraphs.Other_Details",
            "select Paragraphs.para_txt, Paragraphs.Other_Details",
            "select Paragraphs.doc_id, Paragraphs.Other_Details",
            "select Paragraphs.doc_id, Paragraphs.para_txt"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Paragraphs",
        "table_candidates": [
            "Paragraphs"
        ],
        "align_scores": [
            0.9958556294441223,
            0.0001748289942042902,
            0.00024012142966967076,
            8.66070986376144e-05,
            0.0002798686909954995,
            8.843142859404907e-05,
            0.0003287462459411472,
            0.00010962758824462071
        ],
        "align_select": "select Paragraphs.Other_Details",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the details for the paragraph that includes the text 'Korea '?",
        "gold_select": "select Paragraphs.Other_Details",
        "select_candidates": [
            "select Paragraphs.Other_Details",
            "select Paragraphs.para_txt, Paragraphs.Other_Details",
            "select Paragraphs.doc_id, Paragraphs.Other_Details",
            "select Paragraphs.doc_id, Paragraphs.para_txt"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Paragraphs",
        "table_candidates": [
            "Paragraphs",
            "Documents Paragraphs",
            "Templates Paragraphs"
        ],
        "align_scores": [
            0.9943655729293823,
            0.0001441605854779482,
            0.00031804258469492197,
            8.400709339184687e-05,
            0.000500460562761873,
            8.7259519204963e-05,
            0.001077756634913385,
            8.941658597905189e-05
        ],
        "align_select": "select Paragraphs.Other_Details",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show all paragraph ids and texts for the document with name 'Welcome to NY'.",
        "gold_select": "select Paragraphs.para_id, Paragraphs.para_txt",
        "select_candidates": [
            "select Paragraphs.para_id, Paragraphs.para_txt",
            "select Documents.doc_id, Paragraphs.para_txt",
            "select Documents.doc_id, Documents.doc_name",
            "select Paragraphs.doc_id, Paragraphs.para_txt"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents Paragraphs",
        "table_candidates": [
            "Documents Paragraphs",
            "Ref_Template_Types Documents Paragraphs"
        ],
        "align_scores": [
            0.9958159327507019,
            0.00016445557412225753,
            0.000427837367169559,
            9.266425331588835e-05,
            0.0002677831216715276,
            8.421530947089195e-05,
            0.0008875986095517874,
            8.583834278397262e-05
        ],
        "align_select": "select Paragraphs.para_id, Paragraphs.para_txt",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the ids and texts of paragraphs in the document titled 'Welcome to NY'?",
        "gold_select": "select Paragraphs.para_id, Paragraphs.para_txt",
        "select_candidates": [
            "select Paragraphs.para_id, Paragraphs.para_txt",
            "select Documents.doc_id, Paragraphs.para_txt",
            "select para_Paragraphs.para_id, Paragraphs.para_txt",
            "select Paragraphs.doc_id, Paragraphs.para_txt"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents Paragraphs",
        "table_candidates": [
            "Documents Paragraphs"
        ],
        "align_scores": [
            0.9951990246772766,
            0.00019743391021620482,
            0.0005300606717355549,
            0.00011508142779348418,
            0.00044762404286302626,
            8.539779082639143e-05,
            0.0010990387527272105,
            9.845740714808926e-05
        ],
        "align_select": "select Paragraphs.para_id, Paragraphs.para_txt",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show all paragraph texts for the document \"Customer reviews\".",
        "gold_select": "select Paragraphs.para_txt",
        "select_candidates": [
            "select Paragraphs.para_txt",
            "select Paragraphs.doc_id, Paragraphs.para_txt",
            "select Paragraphs.para_id, Paragraphs.para_txt",
            "select Paragraphs.para_txt, Documents.Document_Description"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents Paragraphs",
        "table_candidates": [
            "Documents Paragraphs",
            "Ref_Template_Types Documents Paragraphs",
            "Templates Documents Paragraphs"
        ],
        "align_scores": [
            0.9950435161590576,
            0.0001131918397732079,
            0.00022318556148093194,
            7.280405407072976e-05,
            0.00015959188749548048,
            6.32787196082063e-05,
            0.00026858190540224314,
            6.525764911202714e-05
        ],
        "align_select": "select Paragraphs.para_txt",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the paragraph texts for the document with the name 'Customer reviews'?",
        "gold_select": "select Paragraphs.para_txt",
        "select_candidates": [
            "select Paragraphs.para_txt",
            "select Paragraphs.doc_id, Paragraphs.para_txt",
            "select Paragraphs.para_txt, Documents.Document_Description",
            "select Paragraphs.para_txt, Paragraphs.doc_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents Paragraphs",
        "table_candidates": [
            "Documents Paragraphs",
            "Ref_Template_Types Documents Paragraphs",
            "Templates Documents Paragraphs"
        ],
        "align_scores": [
            0.994537889957428,
            0.00013571165618486702,
            0.00018782014376483858,
            7.28690720279701e-05,
            0.0002677729062270373,
            6.509214290417731e-05,
            0.00013929535634815693,
            6.377250247169286e-05
        ],
        "align_select": "select Paragraphs.para_txt",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show all document ids and the number of paragraphs in each document. Order by document id.",
        "gold_select": "select Paragraphs.doc_id, count(*)",
        "select_candidates": [
            "select Paragraphs.doc_id, count(*)",
            "select Documents.doc_id, count(*)",
            "select Documents.tpl_id, count(*)",
            "select Documents.doc_name, count(*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Paragraphs",
        "table_candidates": [
            "Paragraphs",
            "Documents Paragraphs"
        ],
        "align_scores": [
            0.9963626265525818,
            0.00018029578495770693,
            0.994176983833313,
            0.00017065572319552302,
            0.02984762191772461,
            0.00013401111937128007,
            0.0005198087892495096,
            0.00014448066940531135
        ],
        "align_select": "select Paragraphs.doc_id, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY"
    },
    {
        "question": "Return the different document ids along with the number of paragraphs corresponding to each, ordered by id.",
        "gold_select": "select Paragraphs.doc_id, count(*)",
        "select_candidates": [
            "select Paragraphs.doc_id, count(*)",
            "select Paragraphs.doc_id.c1, count(*)",
            "select Paragraphs.doc_id, count(**)",
            "select Paragraphs.doc_id, count(*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Paragraphs",
        "table_candidates": [
            "Paragraphs"
        ],
        "align_scores": [
            0.9954902529716492,
            0.000650721020065248,
            0.00021650749840773642,
            0.0001362352049909532,
            0.9944638609886169,
            0.0006362784770317376,
            0.9954902529716492,
            0.000650721020065248
        ],
        "align_select": "select Paragraphs.doc_id, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY"
    },
    {
        "question": "Show all document ids, names and the number of paragraphs in each document.",
        "gold_select": "select Paragraphs.doc_id, Documents.doc_name, count(*)",
        "select_candidates": [
            "select Documents.doc_id, Documents.doc_name, count(*)",
            "select Documents.doc_id, Documents.doc_name, count(*)",
            "select Paragraphs.doc_id, Documents.doc_name, count(*)",
            "select Documents.doc_id, Documents.doc_name.c2, count(*)"
        ],
        "select_labels": [
            0.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents Paragraphs",
        "table_candidates": [
            "Documents Paragraphs"
        ],
        "align_scores": [
            0.9925111532211304,
            0.00017818922060541809,
            0.9925111532211304,
            0.00017818922060541809,
            0.9659574031829834,
            0.0001655681262491271,
            0.0003355861408635974,
            0.00014618673594668508
        ],
        "align_select": "select Documents.doc_id, Documents.doc_name, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "What are the ids and names of each document, as well as the number of paragraphs in each?",
        "gold_select": "select Paragraphs.doc_id, Documents.doc_name, count(*)",
        "select_candidates": [
            "select Documents.doc_id, Documents.doc_name, count(*)",
            "select Paragraphs.doc_id, Documents.doc_name, count(*)",
            "select Documents.doc_id, Documents.doc_name, count(*)",
            "select Documents.doc_id, Documents.doc_name, count(*), Paragraphs.doc_id"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents Paragraphs",
        "table_candidates": [
            "Documents Paragraphs"
        ],
        "align_scores": [
            0.9908789992332458,
            0.00026495277415961027,
            0.46955159306526184,
            0.00024884502636268735,
            0.9908789992332458,
            0.00026495277415961027,
            0.0010185489663854241,
            0.00012373981007840484
        ],
        "align_select": "select Documents.doc_id, Documents.doc_name, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "List all document ids with at least two paragraphs.",
        "gold_select": "select Paragraphs.doc_id",
        "select_candidates": [
            "select Paragraphs.doc_id",
            "select Paragraphs.doc_id, Paragraphs.para_txt",
            "select Paragraphs.doc_id (Paragraphs.para_id)",
            "select Paragraphs.doc_id,"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Paragraphs",
        "table_candidates": [
            "Paragraphs",
            "Documents Paragraphs",
            "Templates Paragraphs"
        ],
        "align_scores": [
            0.9955442547798157,
            0.00011168534547323361,
            0.0005743982037529349,
            5.913490895181894e-05,
            0.0005760714993812144,
            5.953665095148608e-05,
            0.0017312783747911453,
            6.203972588991746e-05
        ],
        "align_select": "select Paragraphs.doc_id",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the ids of documents that have 2 or more paragraphs?",
        "gold_select": "select Paragraphs.doc_id",
        "select_candidates": [
            "select Paragraphs.doc_id",
            "select Documents.doc_id",
            "select Paragraphs.doc_id, Documents.doc_name",
            "select Documents.doc_id, Documents.tpl_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Paragraphs",
        "table_candidates": [
            "Paragraphs",
            "Documents Paragraphs",
            "Templates Documents Paragraphs",
            "Templates Paragraphs"
        ],
        "align_scores": [
            0.9957555532455444,
            0.0001340067683486268,
            0.9918176531791687,
            0.00010799475421663374,
            0.0012691286392509937,
            7.601253309985623e-05,
            0.0005842911778017879,
            7.681307033635676e-05
        ],
        "align_select": "select Paragraphs.doc_id",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What is the document id and name with greatest number of paragraphs?",
        "gold_select": "select Paragraphs.doc_id, Documents.doc_name",
        "select_candidates": [
            "select Documents.doc_id, Documents.doc_name",
            "select Documents.doc_id, Documents.doc_name, Documents.Document_Description",
            "select Paragraphs.doc_id, Documents.doc_name",
            "select Documents.tpl_id, Documents.doc_name"
        ],
        "select_labels": [
            0.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-UNION-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents Paragraphs",
        "table_candidates": [
            "Documents Paragraphs"
        ],
        "align_scores": [
            0.9947392344474792,
            7.609058229718357e-05,
            0.0004491230065468699,
            5.712856363970786e-05,
            0.004414736293256283,
            8.361771324416623e-05,
            0.004136804025620222,
            9.087325452128425e-05
        ],
        "align_select": "select Documents.doc_id, Documents.doc_name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Return the id and name of the document with the most paragraphs.",
        "gold_select": "select Paragraphs.doc_id, Documents.doc_name",
        "select_candidates": [
            "select Documents.doc_id, Documents.doc_name",
            "select Documents.doc_id, Documents.doc_name, Documents.Document_Description",
            "select Paragraphs.doc_id, Documents.doc_name",
            "select Documents.tpl_id, Documents.doc_name"
        ],
        "select_labels": [
            0.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents Paragraphs",
        "table_candidates": [
            "Documents Paragraphs"
        ],
        "align_scores": [
            0.9955073595046997,
            6.85048071318306e-05,
            0.0002260544861201197,
            5.5870106734801084e-05,
            0.004475708119571209,
            7.136945350794122e-05,
            0.08662112802267075,
            8.083193824859336e-05
        ],
        "align_select": "select Documents.doc_id, Documents.doc_name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the document id with least number of paragraphs?",
        "gold_select": "select Paragraphs.doc_id",
        "select_candidates": [
            "select Documents.doc_id",
            "select Paragraphs.doc_id",
            "select Documents.doc_id, Paragraphs.doc_id",
            "select Documents.doc_id, Documents.Document_Description"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Paragraphs",
        "table_candidates": [
            "Documents Paragraphs",
            "Paragraphs",
            "Ref_Template_Types Documents Paragraphs",
            "Templates Paragraphs",
            "Templates Documents Paragraphs"
        ],
        "align_scores": [
            0.9949970245361328,
            5.6573735491838306e-05,
            0.9957733750343323,
            6.45717591396533e-05,
            0.00040003826143220067,
            5.659672024194151e-05,
            0.0002648262889124453,
            5.229683665675111e-05
        ],
        "align_select": "select Documents.doc_id",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Return the id of the document with the fewest paragraphs.",
        "gold_select": "select Paragraphs.doc_id",
        "select_candidates": [
            "select Documents.doc_id",
            "select Paragraphs.doc_id",
            "select Documents.doc_id, Paragraphs.doc_id",
            "select Documents.doc_id, Documents.Document_Description"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Paragraphs",
        "table_candidates": [
            "Documents Paragraphs",
            "Ref_Template_Types Documents Paragraphs",
            "Templates Documents Paragraphs",
            "Templates Paragraphs"
        ],
        "align_scores": [
            0.9959620833396912,
            8.08768963906914e-05,
            0.9963990449905396,
            7.580978126497939e-05,
            0.0002805456751957536,
            6.068918446544558e-05,
            0.00018781586550176144,
            5.227748624747619e-05
        ],
        "align_select": "select Documents.doc_id",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the document id with 1 to 2 paragraphs?",
        "gold_select": "select Paragraphs.doc_id",
        "select_candidates": [
            "select Paragraphs.doc_id",
            "select Paragraphs.doc_id, Paragraphs.para_txt",
            "select Paragraphs.doc_id (Paragraphs.para_txt)",
            "select Paragraphs.para_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Paragraphs",
        "table_candidates": [
            "Paragraphs",
            "Documents Paragraphs",
            "Templates Paragraphs"
        ],
        "align_scores": [
            0.995712399482727,
            0.00027240015333518386,
            0.0005890097818337381,
            8.106907625915483e-05,
            0.0011510628974065185,
            0.0001161606633104384,
            0.0006321145920082927,
            0.00013275540550239384
        ],
        "align_select": "select Paragraphs.doc_id",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Give the ids of documents that have between one and two paragraphs.",
        "gold_select": "select Paragraphs.doc_id",
        "select_candidates": [
            "select Documents.doc_id",
            "select Paragraphs.doc_id",
            "select Documents.doc_id, Documents.tpl_id",
            "select Documents.doc_id, Paragraphs.doc_id"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Paragraphs",
        "table_candidates": [
            "Documents Paragraphs",
            "Paragraphs",
            "Templates Paragraphs",
            "Templates Documents Paragraphs"
        ],
        "align_scores": [
            0.9855971932411194,
            0.00013143522664904594,
            0.9932159781455994,
            0.00014443356485571712,
            0.000529802346136421,
            7.224497676361352e-05,
            0.00043714206549338996,
            6.774764187866822e-05
        ],
        "align_select": "select Documents.doc_id",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Show the document id with paragraph text 'Brazil' and 'Ireland'.",
        "gold_select": "select Paragraphs.doc_id",
        "select_candidates": [
            "select Paragraphs.doc_id",
            "select Paragraphs.para_id",
            "select Paragraphs.doc_id, Paragraphs.para_txt",
            "select Paragraphs.doc_id, Paragraphs.para_txt, Paragraphs.Other_Details"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Paragraphs",
        "table_candidates": [
            "Paragraphs",
            "Documents Paragraphs"
        ],
        "align_scores": [
            0.9963803887367249,
            9.905350452754647e-05,
            0.002234364626929164,
            8.973280637292191e-05,
            0.00020488926384132355,
            6.1011469369987026e-05,
            0.0001604761928319931,
            6.0014677728759125e-05
        ],
        "align_select": "select Paragraphs.doc_id",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the ids of documents that contain the paragraph text 'Brazil' and 'Ireland'?",
        "gold_select": "select Paragraphs.doc_id",
        "select_candidates": [
            "select Paragraphs.doc_id",
            "select Paragraphs.para_id",
            "select Paragraphs.doc_id, Paragraphs.para_txt",
            "select Paragraphs.doc_id, Paragraphs.Other_Details"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Paragraphs",
        "table_candidates": [
            "Paragraphs"
        ],
        "align_scores": [
            0.9945932030677795,
            0.0002450870524626225,
            0.9936894178390503,
            0.0005898344679735601,
            0.00017286076035816222,
            6.582665810128674e-05,
            0.0001616515073692426,
            6.254553591134027e-05
        ],
        "align_select": "select Paragraphs.doc_id",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "List document IDs, document names, and document descriptions for all documents.",
        "gold_select": "select Documents.doc_id, Documents.doc_name, Documents.doc_desc",
        "select_candidates": [
            "select Documents.doc_id, Documents.doc_name, Documents.doc_desc",
            "select Documents.doc_id, Documents.tpl_id, Documents.doc_name, Documents.doc_desc",
            "select Documents.doc_id-, Documents.doc_name, Documents.doc_desc",
            "select Documents.doc_id, Documents.doc_name, Documents.doc_desc"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents",
        "table_candidates": [
            "Documents"
        ],
        "align_scores": [
            0.9953922033309937,
            0.00012157584569649771,
            0.0008551112259738147,
            7.897633622633293e-05,
            0.003168586641550064,
            0.00010901389759965241,
            0.9953922033309937,
            0.00012157584569649771
        ],
        "align_select": "select Documents.doc_id, Documents.doc_name, Documents.doc_desc",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What are the ids, names, and descriptions for all documents?",
        "gold_select": "select Documents.doc_id, Documents.doc_name, Documents.doc_desc",
        "select_candidates": [
            "select Documents.doc_id, Documents.doc_name, Documents.doc_desc",
            "select Documents.doc_id, Documents.tpl_id, Documents.doc_name, Documents.doc_desc",
            "select Documents.doc_id, Documents.doc_name, Documents.doc_desc",
            "select Documents.doc_id, Documents.tpl_id, Documents.doc_desc"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents",
        "table_candidates": [
            "Documents"
        ],
        "align_scores": [
            0.9950323104858398,
            0.0001369908859487623,
            0.0013257849495857954,
            7.897053001215681e-05,
            0.9950323104858398,
            0.0001369908859487623,
            0.0004577453073579818,
            8.348553819814697e-05
        ],
        "align_select": "select Documents.doc_id, Documents.doc_name, Documents.doc_desc",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What is the document name and template id for document with description with the letter 'w' in it?",
        "gold_select": "select Documents.doc_name, Documents.tpl_id",
        "select_candidates": [
            "select Documents.doc_name, Documents.tpl_id",
            "select Documents.doc_name, Documents.doc_id",
            "select Documents.doc_id, Documents.doc_name",
            "select Documents.tpl_id, Documents.doc_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents",
        "table_candidates": [
            "Ref_Template_Types Templates Documents",
            "Ref_Template_Types Documents",
            "Templates Documents",
            "Documents",
            "Ref_Template_Types Templates"
        ],
        "align_scores": [
            0.9943203926086426,
            0.00015413539949804544,
            0.0008944361470639706,
            9.08578367670998e-05,
            0.0026419770438224077,
            8.960282866610214e-05,
            0.9940209984779358,
            0.00014750219997949898
        ],
        "align_select": "select Documents.doc_name, Documents.tpl_id",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the names and template ids for documents that contain the letter w in their description.",
        "gold_select": "select Documents.doc_name, Documents.tpl_id",
        "select_candidates": [
            "select Documents.doc_name, Documents.tpl_id",
            "select Documents.doc_name, Documents.doc_id",
            "select Documents.oth_dtl, Documents.doc_name, Documents.tpl_id",
            "select t2.c5, Documents.doc_name, Documents.tpl_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents",
        "table_candidates": [
            "Ref_Template_Types Templates Documents",
            "Ref_Template_Types Documents",
            "Templates Documents",
            "Documents",
            "Ref_Template_Types Templates"
        ],
        "align_scores": [
            0.9953333735466003,
            0.00013889945694245398,
            0.0015633434522897005,
            9.202855289913714e-05,
            0.00029245545738376677,
            6.376659439411014e-05,
            0.00014536562957800925,
            6.005955583532341e-05
        ],
        "align_select": "select Documents.doc_name, Documents.tpl_id",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the document id, template id and description for document named \"Robbin CV\"?",
        "gold_select": "select Documents.doc_id, Documents.tpl_id, Documents.doc_desc",
        "select_candidates": [
            "select Documents.doc_id, Documents.tpl_id, Documents.doc_desc",
            "select Documents.doc_id, Documents.tpl_id.c1, Documents.doc_desc",
            "select Documents.doc_id-, Documents.tpl_id, Documents.doc_desc",
            "select Documents.doc_id, Documents.tpl_id, Documents.doc_desc"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents",
        "table_candidates": [
            "Ref_Template_Types Templates Documents",
            "Documents",
            "Ref_Template_Types Documents"
        ],
        "align_scores": [
            0.9956234097480774,
            0.0001595763606019318,
            0.001292866189032793,
            9.512284304946661e-05,
            0.0021931701339781284,
            0.00010890625708270818,
            0.9956234097480774,
            0.0001595763606019318
        ],
        "align_select": "select Documents.doc_id, Documents.tpl_id, Documents.doc_desc",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the document id, template id, and description for the document with the name Robbin CV.",
        "gold_select": "select Documents.doc_id, Documents.tpl_id, Documents.doc_desc",
        "select_candidates": [
            "select Documents.doc_id, Documents.tpl_id, Documents.doc_desc",
            "select Documents.doc_id, Documents.tpl_id.c1, Documents.doc_desc",
            "select Documents.doc_id, Documents.tpl_id, Documents.doc_desc",
            "select Documents.doc_id-, Documents.tpl_id, Documents.doc_desc"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents",
        "table_candidates": [
            "Documents",
            "Ref_Template_Types Templates Documents",
            "Ref_Template_Types Documents"
        ],
        "align_scores": [
            0.9956086277961731,
            0.00012391667405609041,
            0.0015477808192372322,
            8.552199142286554e-05,
            0.9956086277961731,
            0.00012391667405609041,
            0.0015745687996968627,
            9.683568350737914e-05
        ],
        "align_select": "select Documents.doc_id, Documents.tpl_id, Documents.doc_desc",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many different templates do all document use?",
        "gold_select": "select count(distinct Documents.tpl_id)",
        "select_candidates": [
            "select count(distinct Templates.Template_ID)",
            "select count(distinct Documents.tpl_id)",
            "select count(distinct Templates.ver_no)",
            "select count(distinct Templates.tpl_tpye_code)"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents",
        "table_candidates": [
            "Templates",
            "Templates Documents",
            "Ref_Template_Types Templates Documents",
            "Ref_Template_Types Templates",
            "Templates Paragraphs"
        ],
        "align_scores": [
            0.9960108995437622,
            9.90676780929789e-05,
            0.9952829480171204,
            0.00017159002891276032,
            0.02322477288544178,
            8.423972758464515e-05,
            0.0388316735625267,
            7.267933688126504e-05
        ],
        "align_select": "select count(distinct Templates.Template_ID)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "Count the number of different templates used for documents.",
        "gold_select": "select count(distinct Documents.tpl_id)",
        "select_candidates": [
            "select count(distinct Documents.tpl_id)",
            "select count(distinct Documents.doc_id)",
            "select count(distinct Templates.Template_ID)",
            "select count(different Documents.tpl_id)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "Documents",
        "table_candidates": [
            "Templates Documents",
            "Documents",
            "Ref_Template_Types Templates Documents",
            "Templates",
            "Ref_Template_Types Documents"
        ],
        "align_scores": [
            0.9960544109344482,
            0.9960544109344482,
            0.0005665546050295234,
            0.0005665546050295234,
            0.9939767122268677,
            0.9939767122268677,
            0.010711338371038437,
            0.010711338371038437
        ],
        "align_select": "select count(distinct Documents.tpl_id)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "How many documents are using the template with type code 'PPT'?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Templates.Template_ID",
            "select count(Documents.doc_id)",
            "select count(*), Templates.tpl_tpye_code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates Documents",
        "table_candidates": [
            "Templates Documents",
            "Ref_Template_Types Templates Documents"
        ],
        "align_scores": [
            0.9945511221885681,
            0.00019862272893078625,
            0.00022490217816084623,
            0.0004028333642054349,
            0.019900519400835037,
            0.0001725443871691823,
            0.0002500718110240996,
            0.0002061850536847487
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Count the number of documents that use the PPT template type.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Templates.tpl_tpye_code",
            "select count(Documents.doc_id)",
            "select count(*), Templates.Template_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates Documents",
        "table_candidates": [
            "Templates Documents",
            "Ref_Template_Types Templates Documents"
        ],
        "align_scores": [
            0.9952329993247986,
            0.00014943860878702253,
            0.00019226691802032292,
            0.0006537233712151647,
            0.0020437799394130707,
            0.00011445619747973979,
            0.00020055484492331743,
            0.0009050993830896914
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show all template ids and number of documents using each template.",
        "gold_select": "select Documents.tpl_id, count(*)",
        "select_candidates": [
            "select Documents.tpl_id, count(*)",
            "select Templates.Template_ID, count(*)",
            "select Documents.tpl_id, count(Documents.doc_id)",
            "select Documents.tpl_id, count(**)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents",
        "table_candidates": [
            "Documents",
            "Templates Documents"
        ],
        "align_scores": [
            0.9962056875228882,
            0.0002709669934120029,
            0.9958693385124207,
            0.00030054012313485146,
            0.0021061452571302652,
            0.00015903712483122945,
            0.992939829826355,
            0.0002707676321733743
        ],
        "align_select": "select Documents.tpl_id, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "What are all different template ids used for documents, and how many times were each of them used?",
        "gold_select": "select Documents.tpl_id, count(*)",
        "select_candidates": [
            "select Documents.tpl_id, count(*)",
            "select count(*), Documents.tpl_id",
            "select Documents.tpl_id, count(*), Documents.doc_name",
            "select Documents.tpl_id, count(*), Documents.doc_desc"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents",
        "table_candidates": [
            "Documents"
        ],
        "align_scores": [
            0.9719901084899902,
            0.0006008472992107272,
            0.9492772221565247,
            0.00041366161894984543,
            0.00021374321659095585,
            0.00012173780123703182,
            0.0001742411986924708,
            0.00010447004024172202
        ],
        "align_select": "select Documents.tpl_id, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "What is the id and type code for the template used by the most documents?",
        "gold_select": "select Documents.tpl_id, Templates.tpl_tpye_code",
        "select_candidates": [
            "select Templates.Template_ID, Templates.tpl_tpye_code",
            "select Templates.Template_ID, Templates.Template_ID",
            "select Documents.tpl_id, Templates.tpl_tpye_code",
            "select Templates.Template_ID, Templates.tplt_dtl"
        ],
        "select_labels": [
            0.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates Documents",
        "table_candidates": [
            "Templates Documents",
            "Ref_Template_Types Templates Documents"
        ],
        "align_scores": [
            0.07500366866588593,
            0.00011490247561596334,
            0.00027055368991568685,
            7.854343130020425e-05,
            0.003399863373488188,
            0.00010161531099583954,
            0.002674305345863104,
            0.00010420916078146547
        ],
        "align_select": "select Templates.Template_ID, Templates.tpl_tpye_code",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Return the id and type code of the template that is used for the greatest number of documents.",
        "gold_select": "select Documents.tpl_id, Templates.tpl_tpye_code",
        "select_candidates": [
            "select Templates.Template_ID, Templates.tpl_tpye_code",
            "select Templates.Template_ID, Templates.Template_ID",
            "select Templates.Template_ID, Templates.tplt_dtl",
            "select Documents.tpl_id, Templates.tpl_tpye_code"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-UNION-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates Documents",
        "table_candidates": [
            "Templates Documents",
            "Ref_Template_Types Templates Documents"
        ],
        "align_scores": [
            0.024990171194076538,
            0.00012157863238826394,
            0.0002108575135935098,
            6.399051926564425e-05,
            0.0014799231430515647,
            0.00011128933692816645,
            0.004603755660355091,
            0.00010699126141844317
        ],
        "align_select": "select Templates.Template_ID, Templates.tpl_tpye_code",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Show ids for all templates that are used by more than one document.",
        "gold_select": "select Documents.tpl_id",
        "select_candidates": [
            "select Templates.Template_ID",
            "select Documents.tpl_id, Templates.Template_ID",
            "select Templates.Template_ID, Documents.tpl_id",
            "select Documents.tpl_id"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents",
        "table_candidates": [
            "Templates Documents",
            "Ref_Template_Types Templates Documents"
        ],
        "align_scores": [
            0.994611382484436,
            0.00016078571206890047,
            0.0008804808021523058,
            8.315714512718841e-05,
            0.0018522145692259073,
            8.331859135068953e-05,
            0.9944473505020142,
            0.00017643129103817046
        ],
        "align_select": "select Templates.Template_ID",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the template ids of any templates used in more than a single document?",
        "gold_select": "select Documents.tpl_id",
        "select_candidates": [
            "select Documents.tpl_id",
            "select Templates.Template_ID",
            "select Documents.tpl_id, Templates.Template_ID",
            "select Documents.tpl_id, Documents.doc_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents",
        "table_candidates": [
            "Templates Documents",
            "Ref_Template_Types Templates Documents",
            "Documents",
            "Ref_Template_Types Documents"
        ],
        "align_scores": [
            0.9902108907699585,
            0.00021900662977714092,
            0.9921557903289795,
            0.00017479014059063047,
            0.0007652758504264057,
            8.491535118082538e-05,
            0.007217660080641508,
            0.00010342094901716337
        ],
        "align_select": "select Documents.tpl_id",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Show ids for all templates not used by any document.",
        "gold_select": "select Templates.Template_ID",
        "select_candidates": [
            "select Templates.Template_ID",
            "select Templates.Template_ID, Documents.tpl_id",
            "select Documents.tpl_id, Templates.Template_ID",
            "select Templates.Template_ID, Templates.tplt_dtl"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates Documents",
        "table_candidates": [
            "Templates Documents",
            "Templates",
            "Ref_Template_Types Documents"
        ],
        "align_scores": [
            0.9864012598991394,
            0.9876664876937866,
            0.0003387551987543702,
            0.0003335842629894614,
            0.0001883969671325758,
            0.00017603504238650203,
            0.00026611099019646645,
            0.00022470670228358358
        ],
        "align_select": "select Templates.Template_ID",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM"
    },
    {
        "question": "What are the ids for templates that are not used in any documents?",
        "gold_select": "select Templates.Template_ID",
        "select_candidates": [
            "select Templates.Template_ID",
            "select Templates.Template_ID, Documents.tpl_id",
            "select Templates.Template_ID, Templates.tplt_dtl",
            "select Documents.tpl_id, Templates.Template_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM",
            "SELECT-FROM-EXCEPT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates Documents",
        "table_candidates": [
            "Templates Documents",
            "Ref_Template_Types Templates Documents",
            "Templates"
        ],
        "align_scores": [
            0.9922680258750916,
            0.03395775705575943,
            0.0005662349867634475,
            0.00021033342636656016,
            0.0003559224714990705,
            0.00018487144552636892,
            0.0002904237771872431,
            0.00022651359904557467
        ],
        "align_select": "select Templates.Template_ID",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM"
    },
    {
        "question": "Show template ids, version numbers, and template type codes for all templates.",
        "gold_select": "select Templates.Template_ID, Templates.ver_no, Templates.tpl_tpye_code",
        "select_candidates": [
            "select Templates.Template_ID, Templates.ver_no, Templates.tpl_tpye_code",
            "select Templates.Template_ID, Templates.ver_no, Templates.tplt_dtl",
            "select Templates.Template_ID, Templates.ver_no, Templates.tpl_tpye_code",
            "select Templates.Template_ID, t1.1.c1, Templates.tpl_tpye_code"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "Templates",
        "table_candidates": [
            "Templates",
            "Ref_Template_Types Templates"
        ],
        "align_scores": [
            0.07784362882375717,
            0.07784362882375717,
            0.000615776632912457,
            0.000615776632912457,
            0.07784362882375717,
            0.07784362882375717,
            0.0004913803422823548,
            0.0004913803422823548
        ],
        "align_select": "select Templates.Template_ID, Templates.ver_no, Templates.tpl_tpye_code",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What are the ids, version numbers, and type codes for each template?",
        "gold_select": "select Templates.Template_ID, Templates.ver_no, Templates.tpl_tpye_code",
        "select_candidates": [
            "select Templates.Template_ID, Templates.ver_no, Templates.tpl_tpye_code",
            "select Templates.Template_ID, Templates.ver_no, Templates.Template_ID",
            "select Templates.Template_ID, Templates.ver_no, Templates.tpl_tpye_code",
            "select Templates.Template_ID, t1.1.c1, Templates.tpl_tpye_code"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates",
        "table_candidates": [
            "Ref_Template_Types Templates",
            "Templates"
        ],
        "align_scores": [
            0.011683104559779167,
            0.0009147392120212317,
            0.0004471467691473663,
            0.00021124670456629246,
            0.011683104559779167,
            0.0009147392120212317,
            0.000584837980568409,
            0.0008174684480763972
        ],
        "align_select": "select Templates.Template_ID, Templates.ver_no, Templates.tpl_tpye_code",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "Show all distinct template type codes for all templates.",
        "gold_select": "select distinct Templates.tpl_tpye_code",
        "select_candidates": [
            "select distinct Templates.tpl_tpye_code",
            "select distinct Templates.tpl_tpye_code, Templates.tplt_dtl",
            "select distinct Templates.tpl_tpye_code, Templates.Date_Effective_From",
            "select distinct Templates.tplt_dtl"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates",
        "table_candidates": [
            "Templates"
        ],
        "align_scores": [
            0.1312602311372757,
            0.00040513096610084176,
            0.00016248848987743258,
            8.047169831115752e-05,
            0.0002784320677164942,
            9.409581980435178e-05,
            0.9679849743843079,
            0.001039733993820846
        ],
        "align_select": "select distinct Templates.tplt_dtl",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What are the different template type codes?",
        "gold_select": "select distinct Templates.tpl_tpye_code",
        "select_candidates": [
            "select distinct Ref_Template_Types.tpl_type_code",
            "select distinct tpl_type_code",
            "select distinct tpl_type_c0",
            "select distinct tpl_Ref_Template_Types.tpl_type_code"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates",
        "table_candidates": [
            "Ref_Template_Types",
            "Ref_Template_Types Templates"
        ],
        "align_scores": [
            0.9963405132293701,
            6.696772470604628e-05,
            0.9907412528991699,
            7.545449625467882e-05,
            0.00929825659841299,
            9.309762390330434e-05,
            0.9874266386032104,
            7.27529768482782e-05
        ],
        "align_select": "select distinct Ref_Template_Types.tpl_type_code",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What are the ids of templates with template type code PP or PPT?",
        "gold_select": "select Templates.Template_ID",
        "select_candidates": [
            "select Templates.Template_ID",
            "select Templates.Template_ID, Templates.tpl_tpye_code",
            "select Templates.Template_ID, Templates.Date_Effective_From",
            "select Templates.Template_ID, Templates.ver_no"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates",
        "table_candidates": [
            "Templates",
            "Ref_Template_Types Templates"
        ],
        "align_scores": [
            0.9960924983024597,
            0.0013654031790792942,
            0.00011740443005692214,
            7.344265031861141e-05,
            0.00019706755119841546,
            7.910958811407909e-05,
            0.0001540454977657646,
            8.855936175677925e-05
        ],
        "align_select": "select Templates.Template_ID",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the ids of templates that have the code PP or PPT.",
        "gold_select": "select Templates.Template_ID",
        "select_candidates": [
            "select Templates.Template_ID",
            "select Templates.Template_ID, Templates.tpl_tpye_code",
            "select Templates.Template_ID, Templates.Date_Effective_From",
            "select Templates.Template_ID, Templates.ver_no"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates",
        "table_candidates": [
            "Templates"
        ],
        "align_scores": [
            0.995911717414856,
            0.0006334008648991585,
            9.770823089638725e-05,
            6.225147808436304e-05,
            0.00018068285135086626,
            6.855557876406237e-05,
            0.00012644055823329836,
            7.2014685429167e-05
        ],
        "align_select": "select Templates.Template_ID",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many templates have template type code CV?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Templates.Template_ID",
            "select count(*), Templates.ver_no",
            "select count(*), Ref_Template_Types.Template_Type_Description"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates",
        "table_candidates": [
            "Templates"
        ],
        "align_scores": [
            0.9942767024040222,
            0.0001025287710945122,
            0.00019795096886809915,
            6.638258491875604e-05,
            0.0001968992582987994,
            6.526822107844055e-05,
            0.00024762609973549843,
            8.134282688843086e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Count the number of templates of the type CV.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Templates.Template_ID",
            "select count(*), Ref_Template_Types.Template_Type_Description",
            "select count(*), Templates.ver_no"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates",
        "table_candidates": [
            "Templates"
        ],
        "align_scores": [
            0.9959606528282166,
            0.00010813934204634279,
            0.00017387475236319005,
            0.00011130420170957223,
            0.00014685328642372042,
            0.00036233573337085545,
            0.00014593603555113077,
            0.00020941194088663906
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the version number and template type code for the template with version number later than 5?",
        "gold_select": "select Templates.ver_no, Templates.tpl_tpye_code",
        "select_candidates": [
            "select Templates.ver_no, Templates.Template_ID",
            "select Templates.ver_no, Templates.tpl_tpye_code",
            "select Templates.ver_no, Templates.ver_no",
            "select Templates.ver_no, Ref_Template_Types.tpl_type_code"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates",
        "table_candidates": [
            "Templates",
            "Ref_Template_Types Templates"
        ],
        "align_scores": [
            0.0008441897807642817,
            0.00011533464567037299,
            0.07769447565078735,
            0.00016826772480271757,
            0.0002661696635186672,
            7.024817750789225e-05,
            0.9924920201301575,
            0.0001712797675281763
        ],
        "align_select": "select Templates.ver_no, Ref_Template_Types.tpl_type_code",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the version numbers and template type codes of templates with a version number greater than 5.",
        "gold_select": "select Templates.ver_no, Templates.tpl_tpye_code",
        "select_candidates": [
            "select Templates.ver_no, Templates.tpl_tpye_code",
            "select Templates.ver_no, Templates.Template_ID",
            "select Templates.ver_no, Templates.ver_no",
            "select Templates.ver_no, Templates.Template_ID2"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates",
        "table_candidates": [
            "Templates",
            "Ref_Template_Types Templates"
        ],
        "align_scores": [
            0.019758647307753563,
            0.00017230732191819698,
            0.0005002009565941989,
            0.00010386233770987019,
            0.00022995597100816667,
            6.357085658237338e-05,
            0.0004757488495670259,
            9.536316065350547e-05
        ],
        "align_select": "select Templates.ver_no, Templates.tpl_tpye_code",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show all template type codes and number of templates for each.",
        "gold_select": "select Templates.tpl_tpye_code, count(*)",
        "select_candidates": [
            "select Templates.tpl_tpye_code, count(*)",
            "select tpl_tpye_code, count(*)",
            "select tpl_tpye_c2, count(*)",
            "select Templates.tpl_tpye_code, count(Templates.Template_ID)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates",
        "table_candidates": [
            "Templates"
        ],
        "align_scores": [
            0.0033154133707284927,
            0.0002452885382808745,
            0.0011809320421889424,
            0.00016124494140967727,
            0.0002457122318446636,
            0.00015170038386713713,
            0.0012174765579402447,
            0.00019617704674601555
        ],
        "align_select": "select Templates.tpl_tpye_code, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "What are the different template type codes, and how many templates correspond to each?",
        "gold_select": "select Templates.tpl_tpye_code, count(*)",
        "select_candidates": [
            "select Templates.tpl_tpye_code, count(*)",
            "select tpl_tpye_code, count(*)",
            "select tpl_tpye_c2, count(*)",
            "select Templates.tpl_tpye_code, count(*), Templates.Date_Effective_From"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates",
        "table_candidates": [
            "Templates"
        ],
        "align_scores": [
            0.017995206639170647,
            0.0002779954229481518,
            0.002561981789767742,
            0.00018567044753581285,
            0.00038240765570662916,
            0.00014669710071757436,
            0.00028899963945150375,
            0.00013310513168107718
        ],
        "align_select": "select Templates.tpl_tpye_code, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "Which template type code has most number of templates?",
        "gold_select": "select Templates.tpl_tpye_code",
        "select_candidates": [
            "select Templates.tpl_tpye_code",
            "select tpl_tpye_c2",
            "select tpl_tpl_c2",
            "select tpl_tpl_c0"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates",
        "table_candidates": [
            "Templates"
        ],
        "align_scores": [
            0.00853672344237566,
            8.610733493696898e-05,
            0.0005007066065445542,
            7.612098124809563e-05,
            0.00028207950526848435,
            7.185115100583062e-05,
            0.00038423697696998715,
            6.95914204698056e-05
        ],
        "align_select": "select Templates.tpl_tpye_code",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Return the type code of the template type that the most templates belong to.",
        "gold_select": "select Templates.tpl_tpye_code",
        "select_candidates": [
            "select tpl.c0",
            "select Templates.tpl_tpye_code",
            "select tpl_c0",
            "select tpl_tpl_c0"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates",
        "table_candidates": [
            "Templates"
        ],
        "align_scores": [
            0.11457595229148865,
            9.016252442961559e-05,
            0.004577864892780781,
            7.968888530740514e-05,
            0.05853977054357529,
            7.531855953857303e-05,
            0.0009436629479750991,
            6.755332287866622e-05
        ],
        "align_select": "select tpl.c0",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Show all template type codes with less than three templates.",
        "gold_select": "select Templates.tpl_tpye_code",
        "select_candidates": [
            "select Templates.tpl_tpye_code",
            "select tpl_tpye_c2",
            "select tpl_tpye_c0",
            "select tpl_tpl_c2"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates",
        "table_candidates": [
            "Templates"
        ],
        "align_scores": [
            0.011737308464944363,
            0.00021748965082224458,
            0.00029810279374942183,
            0.00012596629676409066,
            0.0008872924372553825,
            0.00018445168097969145,
            0.00024738162755966187,
            0.00011030583118554205
        ],
        "align_select": "select Templates.tpl_tpye_code",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the codes of template types that have fewer than 3 templates?",
        "gold_select": "select Templates.tpl_tpye_code",
        "select_candidates": [
            "select tpl_tpl_c0",
            "select tpl_c0",
            "select tpl_tpye_c0",
            "select tpl_tpl_type_c0"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates",
        "table_candidates": [
            "Templates",
            "Ref_Template_Types Templates",
            "Documents Templates",
            "Paragraphs Templates"
        ],
        "align_scores": [
            0.000809817633125931,
            0.00010713726078392938,
            0.08740869909524918,
            0.00021327051217667758,
            0.0007105867261998355,
            0.00016225577564910054,
            0.0004884747904725373,
            0.00011079887190135196
        ],
        "align_select": "select tpl_tpl_c0",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What the smallest version number and its template type code?",
        "gold_select": "select min(Templates.ver_no), Templates.tpl_tpye_code",
        "select_candidates": [
            "select min(Templates.ver_no), Templates.tpl_tpye_code",
            "select min(Templates.ver_no), min(Templates.tpl_tpye_code)",
            "select Templates.ver_no, Templates.tpl_tpye_code",
            "select min(Templates.ver_no), tpl_tpye"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "Templates",
        "table_candidates": [
            "Templates",
            "Ref_Template_Types Templates"
        ],
        "align_scores": [
            0.00011020499368896708,
            7.075860048644245e-05,
            0.00032996112713590264,
            0.00017986929742619395,
            0.05158400908112526,
            0.054726917296648026,
            0.00011377901682863012,
            7.626150181749836e-05
        ],
        "align_select": "select min(Templates.ver_no), Templates.tpl_tpye_code",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Return the lowest version number, along with its corresponding template type code.",
        "gold_select": "select min(Templates.ver_no), Templates.tpl_tpye_code",
        "select_candidates": [
            "select Templates.ver_no, Templates.tpl_tpye_code",
            "select min(Templates.ver_no), Templates.tpl_tpye_code",
            "select min(Templates.ver_no), tpl_tpye",
            "select min(Templates.ver_no), tpl.c2"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "Templates",
        "table_candidates": [
            "Templates"
        ],
        "align_scores": [
            0.023006215691566467,
            0.000101867837656755,
            9.062351455213502e-05,
            8.383687236346304e-05,
            0.00010397649748483673,
            8.033108315430582e-05,
            0.0001367529621347785,
            9.841769497143105e-05
        ],
        "align_select": "select Templates.ver_no, Templates.tpl_tpye_code",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What is the template type code of the template used by document with the name \"Data base\"?",
        "gold_select": "select Templates.tpl_tpye_code",
        "select_candidates": [
            "select Templates.tpl_tpye_code",
            "select Templates.tplt_dtl",
            "select Templates.tpl_tpye_code, Templates.tplt_dtl",
            "select Templates.Template_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates Documents",
        "table_candidates": [
            "Templates Documents",
            "Ref_Template_Types Templates Documents"
        ],
        "align_scores": [
            0.0074556730687618256,
            0.00010484977246960625,
            0.2820822298526764,
            0.00013831646356265992,
            0.00016478647012263536,
            7.091085717547685e-05,
            0.010345050133764744,
            0.00010065678361570463
        ],
        "align_select": "select Templates.tplt_dtl",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the template type code of the template that is used by a document named Data base.",
        "gold_select": "select Templates.tpl_tpye_code",
        "select_candidates": [
            "select Templates.tpl_tpye_code",
            "select Templates.tplt_dtl",
            "select Templates.Template_ID",
            "select t1.c6"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates Documents",
        "table_candidates": [
            "Templates Documents",
            "Ref_Template_Types Templates Documents"
        ],
        "align_scores": [
            0.004688779823482037,
            0.00010749624925665557,
            0.31143438816070557,
            0.00017269764794036746,
            0.018479501828551292,
            9.846923057921231e-05,
            0.0007414097781293094,
            9.796853555599228e-05
        ],
        "align_select": "select Templates.tplt_dtl",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show all document names using templates with template type code BK.",
        "gold_select": "select Documents.doc_name",
        "select_candidates": [
            "select Documents.doc_name",
            "select Documents.doc_id, Documents.doc_name",
            "select Documents.doc_name, Templates.tplt_dtl",
            "select Documents.doc_name, Documents.doc_desc"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates Documents",
        "table_candidates": [
            "Templates Documents",
            "Ref_Template_Types Templates Documents"
        ],
        "align_scores": [
            0.996320366859436,
            7.940413343021646e-05,
            0.0001367833319818601,
            6.830292113590986e-05,
            0.00033232345595024526,
            6.0714191931765527e-05,
            0.00016360472363885492,
            6.407429464161396e-05
        ],
        "align_select": "select Documents.doc_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of documents that use templates with the code BK?",
        "gold_select": "select Documents.doc_name",
        "select_candidates": [
            "select Documents.doc_name",
            "select Documents.doc_id, Documents.doc_name",
            "select Documents.doc_name, Documents.doc_desc",
            "select Documents.doc_name, Templates.tplt_dtl"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates Documents",
        "table_candidates": [
            "Templates Documents",
            "Ref_Template_Types Templates Documents"
        ],
        "align_scores": [
            0.9398519396781921,
            0.0001186783701996319,
            0.0001630776678211987,
            6.636973557760939e-05,
            0.00034136237809434533,
            6.547119119204581e-05,
            0.0002806898846756667,
            5.851236710441299e-05
        ],
        "align_select": "select Documents.doc_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show all template type codes and the number of documents using each type.",
        "gold_select": "select Templates.tpl_tpye_code, count(*)",
        "select_candidates": [
            "select Templates.tpl_tpye_code, count(*)",
            "select Documents.doc_name, count(*)",
            "select Templates.tpl_tpye_code, count(Documents.tpl_id)",
            "select tpl_tpye_code, count(*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates Documents",
        "table_candidates": [
            "Templates Documents",
            "Ref_Template_Types Templates Documents",
            "Templates"
        ],
        "align_scores": [
            0.0029928942676633596,
            0.0002715406008064747,
            0.0004156708309892565,
            0.00017770023259799927,
            0.0013660573167726398,
            0.0001779233425622806,
            0.0012396613601595163,
            0.00015508598880842328
        ],
        "align_select": "select Templates.tpl_tpye_code, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "What are the different template type codes, and how many documents use each type?",
        "gold_select": "select Templates.tpl_tpye_code, count(*)",
        "select_candidates": [
            "select Templates.tpl_tpye_code, count(*)",
            "select Documents.doc_name, count(*)",
            "select tpl_tpye_code, count(*)",
            "select Templates.tpl_tpye_code, count(*), Documents.tpl_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates Documents",
        "table_candidates": [
            "Templates Documents",
            "Ref_Template_Types Templates Documents",
            "Templates"
        ],
        "align_scores": [
            0.005919904448091984,
            0.00029267804347909987,
            0.0005646779318340123,
            0.00020763192151207477,
            0.0018861244898289442,
            0.00019242738198954612,
            0.00021820064284838736,
            0.00011670302774291486
        ],
        "align_select": "select Templates.tpl_tpye_code, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "Which template type code is used by most number of documents?",
        "gold_select": "select Templates.tpl_tpye_code",
        "select_candidates": [
            "select Templates.tpl_tpye_code",
            "select Templates.tpl_tpye_code, Documents.tpl_id",
            "select Templates.tpl_tpye_code, Templates.tplt_dtl",
            "select Templates.tpl_tpye_code, Documents.doc_desc"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates Documents",
        "table_candidates": [
            "Templates Documents",
            "Ref_Template_Types Templates Documents",
            "Templates"
        ],
        "align_scores": [
            0.03382166102528572,
            8.175216498784721e-05,
            0.00026143898139707744,
            6.054132245481014e-05,
            0.000332221738062799,
            6.570524419657886e-05,
            0.0005591113585978746,
            6.0003858379786834e-05
        ],
        "align_select": "select Templates.tpl_tpye_code",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Return the code of the template type that is most commonly used in documents.",
        "gold_select": "select Templates.tpl_tpye_code",
        "select_candidates": [
            "select Templates.tpl_tpye_code",
            "select Templates.tplt_dtl",
            "select Documents.doc_name",
            "select Templates.Template_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates Documents",
        "table_candidates": [
            "Templates Documents",
            "Templates",
            "Ref_Template_Types Templates Documents"
        ],
        "align_scores": [
            0.05888570100069046,
            8.165547478711233e-05,
            0.2371247261762619,
            8.504962170263752e-05,
            0.0008075013174675405,
            7.941207877593115e-05,
            0.9554327726364136,
            8.033644553506747e-05
        ],
        "align_select": "select Templates.Template_ID",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Show all template type codes that are not used by any document.",
        "gold_select": "select Templates.tpl_tpye_code",
        "select_candidates": [
            "select Ref_Template_Types.tpl_type_code",
            "select Templates.tpl_tpye_code",
            "select tpl_tpl_c0",
            "select tpl_c0"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM",
            "SELECT-FROM-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates Documents",
        "table_candidates": [
            "Templates",
            "Ref_Template_Types Templates",
            "Templates Documents",
            "Ref_Template_Types Templates Documents"
        ],
        "align_scores": [
            0.9868490695953369,
            0.07796771079301834,
            0.049504343420267105,
            0.0020078057423233986,
            0.0008420523372478783,
            0.0003521084727253765,
            0.5702579617500305,
            0.008351326920092106
        ],
        "align_select": "select Ref_Template_Types.tpl_type_code",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM"
    },
    {
        "question": "What are the codes of template types that are not used for any document?",
        "gold_select": "select Templates.tpl_tpye_code",
        "select_candidates": [
            "select tpl_type_c0",
            "select tpl_tpl_c0",
            "select Ref_Template_Types.tpl_type_code",
            "select tpl_Ref_Template_Types.tpl_type_code"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates Documents",
        "table_candidates": [
            "Ref_Template_Types Templates",
            "Ref_Template_Types Templates Documents",
            "Templates Documents",
            "Templates"
        ],
        "align_scores": [
            0.43249017000198364,
            0.39803776144981384,
            0.0012484327889978886,
            0.0012619940098375082,
            0.9891691207885742,
            0.9885026216506958,
            0.9323039650917053,
            0.9215055704116821
        ],
        "align_select": "select Ref_Template_Types.tpl_type_code",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM"
    },
    {
        "question": "Show all template type codes and descriptions.",
        "gold_select": "select Ref_Template_Types.tpl_type_code, Ref_Template_Types.Template_Type_Description",
        "select_candidates": [
            "select Ref_Template_Types.tpl_type_code, Ref_Template_Types.Template_Type_Description",
            "select Ref_Template_Types.Template_Type_Description, Ref_Template_Types.tpl_type_code",
            "select Ref_Template_Types.tpl_type_code, Ref_Template_Types.Template_Type_Description,",
            "select Documents.doc_id, Ref_Template_Types.Template_Type_Description"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Ref_Template_Types",
        "table_candidates": [
            "Ref_Template_Types"
        ],
        "align_scores": [
            0.9852418303489685,
            0.00010345932969357818,
            0.9825101494789124,
            9.067917562788352e-05,
            0.000605553446803242,
            8.818646165309474e-05,
            0.00024495410616509616,
            0.00010492719593457878
        ],
        "align_select": "select Ref_Template_Types.tpl_type_code, Ref_Template_Types.Template_Type_Description",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What are the type codes and descriptions for all template types?",
        "gold_select": "select Ref_Template_Types.tpl_type_code, Ref_Template_Types.Template_Type_Description",
        "select_candidates": [
            "select Ref_Template_Types.tpl_type_code, Ref_Template_Types.Template_Type_Description",
            "select Ref_Template_Types.Template_Type_Description, Ref_Template_Types.tpl_type_code",
            "select tpl_c0, Ref_Template_Types.Template_Type_Description",
            "select Documents.doc_id, Ref_Template_Types.Template_Type_Description"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Ref_Template_Types",
        "table_candidates": [
            "Ref_Template_Types"
        ],
        "align_scores": [
            0.9847053289413452,
            0.00010896681487793103,
            0.9890556335449219,
            0.00011086904851254076,
            0.0005906862206757069,
            0.00010030035628005862,
            0.00031836176640354097,
            0.00012016374239465222
        ],
        "align_select": "select Ref_Template_Types.tpl_type_code, Ref_Template_Types.Template_Type_Description",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What is the template type descriptions for template type code \"AD\".",
        "gold_select": "select Ref_Template_Types.Template_Type_Description",
        "select_candidates": [
            "select Ref_Template_Types.Template_Type_Description",
            "select Ref_Template_Types.tpl_type_code, Ref_Template_Types.Template_Type_Description",
            "select Ref_Template_Types.Template_Type_Description, t0.c2",
            "select Ref_Template_Types.Template_Type_Description, Ref_Template_Types.tpl_type_code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Ref_Template_Types",
        "table_candidates": [
            "Ref_Template_Types"
        ],
        "align_scores": [
            0.995912492275238,
            9.373902139486745e-05,
            0.00015709766012150794,
            8.055185026023537e-05,
            0.00025155828916467726,
            7.785455090925097e-05,
            0.00014971315977163613,
            7.53669228288345e-05
        ],
        "align_select": "select Ref_Template_Types.Template_Type_Description",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the template type description of the template type with the code AD.",
        "gold_select": "select Ref_Template_Types.Template_Type_Description",
        "select_candidates": [
            "select Ref_Template_Types.Template_Type_Description",
            "select Ref_Template_Types.tpl_type_code, Ref_Template_Types.Template_Type_Description",
            "select Ref_Template_Types.Template_Type_Description, t0.c2",
            "select Ref_Template_Types.Template_Type_Description, Ref_Template_Types.tpl_type_code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Ref_Template_Types",
        "table_candidates": [
            "Ref_Template_Types",
            "Ref_Template_Types Templates"
        ],
        "align_scores": [
            0.9961712956428528,
            6.975772703299299e-05,
            0.00016894795408006757,
            6.274088082136586e-05,
            0.00020736560691148043,
            6.963755731703714e-05,
            0.0001111432138714008,
            6.409642082871869e-05
        ],
        "align_select": "select Ref_Template_Types.Template_Type_Description",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the template type code for template type description \"Book\".",
        "gold_select": "select Ref_Template_Types.tpl_type_code",
        "select_candidates": [
            "select Ref_Template_Types.tpl_type_code",
            "select tpl_type_code",
            "select tpl_Ref_Template_Types.tpl_type_code",
            "select t0.c, Ref_Template_Types.Template_Type_Description"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Ref_Template_Types",
        "table_candidates": [
            "Ref_Template_Types"
        ],
        "align_scores": [
            0.9961757659912109,
            7.66411903896369e-05,
            0.8840280771255493,
            7.443404319928959e-05,
            0.9895289540290833,
            7.70420883782208e-05,
            0.00017870648298412561,
            7.546652341261506e-05
        ],
        "align_select": "select Ref_Template_Types.tpl_type_code",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the type code of the template type with the description \"Book\".",
        "gold_select": "select Ref_Template_Types.tpl_type_code",
        "select_candidates": [
            "select Ref_Template_Types.tpl_type_code",
            "select tpl_Ref_Template_Types.tpl_type_code",
            "select tpl_c0",
            "select tpl.c0"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Ref_Template_Types",
        "table_candidates": [
            "Ref_Template_Types"
        ],
        "align_scores": [
            0.9962045550346375,
            8.348441770067438e-05,
            0.9881966710090637,
            8.252792758867145e-05,
            0.004610189702361822,
            7.704510062467307e-05,
            0.03315131366252899,
            8.935733785619959e-05
        ],
        "align_select": "select Ref_Template_Types.tpl_type_code",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the distinct template type descriptions for the templates ever used by any document?",
        "gold_select": "select distinct Ref_Template_Types.Template_Type_Description",
        "select_candidates": [
            "select distinct Ref_Template_Types.Template_Type_Description",
            "select distinct Ref_Template_Types.Template_Type_Description, Templates.tplt_dtl",
            "select distinct Ref_Template_Types.Template_Type_Description, Templates.tpl_tpye_code",
            "select distinct Ref_Template_Types.Template_Type_Description, Templates.Template_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Ref_Template_Types Templates Documents",
        "table_candidates": [
            "Ref_Template_Types Templates",
            "Ref_Template_Types Templates Documents"
        ],
        "align_scores": [
            0.9682401418685913,
            0.028136415407061577,
            0.0008253801497630775,
            0.00021396097145043314,
            0.00039263907819986343,
            0.00017314398428425193,
            0.00040125512168742716,
            0.00012601990601979196
        ],
        "align_select": "select distinct Ref_Template_Types.Template_Type_Description",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "Return the different descriptions for templates that have been used in a document.",
        "gold_select": "select distinct Ref_Template_Types.Template_Type_Description",
        "select_candidates": [
            "select distinct Ref_Template_Types.Template_Type_Description",
            "select distinct Ref_Template_Types.Template_Type_Description, Documents.doc_desc",
            "select distinct Ref_Template_Types.Template_Type_Description, Templates.tplt_dtl",
            "select distinct Ref_Template_Types.Template_Type_Description, Templates.Date_Effective_From"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Ref_Template_Types Templates Documents",
        "table_candidates": [
            "Ref_Template_Types Templates Documents",
            "Ref_Template_Types Templates"
        ],
        "align_scores": [
            0.9785464406013489,
            7.599101081723347e-05,
            0.0018782127881422639,
            6.657733320025727e-05,
            0.0006193910376168787,
            6.0000944358762354e-05,
            0.00034511234844103456,
            5.5986965890042484e-05
        ],
        "align_select": "select distinct Ref_Template_Types.Template_Type_Description",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What are the template ids with template type description \"Presentation\".",
        "gold_select": "select Templates.Template_ID",
        "select_candidates": [
            "select Templates.Template_ID",
            "select Templates.Template_ID, Ref_Template_Types.Template_Type_Description",
            "select Templates.Template_ID, Templates.tpl_tpye_code",
            "select Templates.Template_ID, Templates.tplt_dtl"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Ref_Template_Types Templates",
        "table_candidates": [
            "Ref_Template_Types Templates"
        ],
        "align_scores": [
            0.9966046810150146,
            0.00011624456237768754,
            0.0001506450935266912,
            6.927268259460106e-05,
            0.00013199842942412943,
            6.77239295328036e-05,
            0.00013181277608964592,
            6.634784222114831e-05
        ],
        "align_select": "select Templates.Template_ID",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the ids corresponding to templates with the description 'Presentation'.",
        "gold_select": "select Templates.Template_ID",
        "select_candidates": [
            "select Templates.Template_ID",
            "select Templates.Template_ID, Ref_Template_Types.Template_Type_Description",
            "select t1.c, Templates.tpl_tpye_code",
            "select Templates.Template_ID - Ref_Template_Types.Template_Type_Description"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Ref_Template_Types Templates",
        "table_candidates": [
            "Ref_Template_Types Templates"
        ],
        "align_scores": [
            0.9966578483581543,
            0.00011376210750313476,
            0.0001644223229959607,
            6.652904266957194e-05,
            0.00021669111447408795,
            6.434549868572503e-05,
            0.0002768031554296613,
            7.403789641102776e-05
        ],
        "align_select": "select Templates.Template_ID",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many paragraphs for the document with name 'Summer Show'?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Documents.doc_id",
            "select count(*), Documents.tpl_id",
            "select count(*), Documents.oth_dtl"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents Paragraphs",
        "table_candidates": [
            "Documents Paragraphs",
            "Ref_Template_Types Documents Paragraphs"
        ],
        "align_scores": [
            0.9955456256866455,
            6.71743109705858e-05,
            0.00017645586922299117,
            6.206362741068006e-05,
            0.00022594201436731964,
            6.315019709290937e-05,
            0.00025259220274165273,
            6.134359864518046e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Count the number of paragraphs in the document named 'Summer Show'.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Documents.doc_id",
            "select count(distinct Paragraphs.Paragraph_Text)",
            "select count(*), Documents.tpl_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents Paragraphs",
        "table_candidates": [
            "Documents Paragraphs",
            "Ref_Template_Types Documents Paragraphs"
        ],
        "align_scores": [
            0.996163010597229,
            6.970465619815513e-05,
            0.00017337541794404387,
            5.801160659757443e-05,
            0.0008670634706504643,
            6.708744331263006e-05,
            0.00022522448853123933,
            6.160993507364765e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show all paragraph ids and texts for the document with name 'Welcome to NY'.",
        "gold_select": "select Paragraphs.para_id, Paragraphs.Paragraph_Text",
        "select_candidates": [
            "select Paragraphs.para_id, Paragraphs.Paragraph_Text",
            "select Documents.doc_id, Paragraphs.Paragraph_Text",
            "select Paragraphs.doc_id, Paragraphs.Paragraph_Text",
            "select Documents.doc_id, Documents.doc_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents Paragraphs",
        "table_candidates": [
            "Documents Paragraphs",
            "Ref_Template_Types Documents Paragraphs"
        ],
        "align_scores": [
            0.989418089389801,
            0.00014144250599201769,
            0.00037684800918214023,
            8.910861652111635e-05,
            0.0006041555316187441,
            8.416939090238884e-05,
            0.0002677831216715276,
            8.421530947089195e-05
        ],
        "align_select": "select Paragraphs.para_id, Paragraphs.Paragraph_Text",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the ids and texts of paragraphs in the document titled 'Welcome to NY'?",
        "gold_select": "select Paragraphs.para_id, Paragraphs.Paragraph_Text",
        "select_candidates": [
            "select Paragraphs.para_id, Paragraphs.Paragraph_Text",
            "select Documents.doc_id, Paragraphs.Paragraph_Text",
            "select para_Paragraphs.para_id, Paragraphs.Paragraph_Text",
            "select param_Paragraphs.para_id, Paragraphs.Paragraph_Text"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents Paragraphs",
        "table_candidates": [
            "Documents Paragraphs"
        ],
        "align_scores": [
            0.9742658138275146,
            0.0001741475280141458,
            0.0003996468149125576,
            0.00012493383837863803,
            0.00043962954077869654,
            8.308533142553642e-05,
            0.0005221454193815589,
            9.129084355663508e-05
        ],
        "align_select": "select Paragraphs.para_id, Paragraphs.Paragraph_Text",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show all paragraph texts for the document \"Customer reviews\".",
        "gold_select": "select Paragraphs.Paragraph_Text",
        "select_candidates": [
            "select Paragraphs.Paragraph_Text",
            "select Paragraphs.Paragraph_Text, Documents.doc_desc",
            "select Paragraphs.doc_id, Paragraphs.Paragraph_Text",
            "select Paragraphs.para_id, Paragraphs.Paragraph_Text"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents Paragraphs",
        "table_candidates": [
            "Documents Paragraphs",
            "Ref_Template_Types Documents Paragraphs",
            "Templates Documents Paragraphs"
        ],
        "align_scores": [
            0.9960095882415771,
            9.113585110753775e-05,
            0.00017841652152128518,
            6.472298264270648e-05,
            0.00019895822333637625,
            7.134603947633877e-05,
            0.00015458432608284056,
            6.159818440210074e-05
        ],
        "align_select": "select Paragraphs.Paragraph_Text",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the paragraph texts for the document with the name 'Customer reviews'?",
        "gold_select": "select Paragraphs.Paragraph_Text",
        "select_candidates": [
            "select Paragraphs.Paragraph_Text",
            "select Paragraphs.Paragraph_Text, Documents.doc_desc",
            "select Paragraphs.doc_id, Paragraphs.Paragraph_Text",
            "select Paragraphs.Paragraph_Text, Documents.tpl_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents Paragraphs",
        "table_candidates": [
            "Documents Paragraphs",
            "Ref_Template_Types Documents Paragraphs",
            "Templates Documents Paragraphs"
        ],
        "align_scores": [
            0.9953705668449402,
            0.00011120193084934726,
            0.00019325519679114223,
            6.44838873995468e-05,
            0.00016858587332535535,
            7.110099249985069e-05,
            0.00019488207180984318,
            6.568550452357158e-05
        ],
        "align_select": "select Paragraphs.Paragraph_Text",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show all document ids and the number of paragraphs in each document. Order by document id.",
        "gold_select": "select Paragraphs.doc_id, count(*)",
        "select_candidates": [
            "select Paragraphs.doc_id, count(*)",
            "select Documents.doc_id, count(*)",
            "select Documents.tpl_id, count(*)",
            "select Documents.doc_name, count(*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Paragraphs",
        "table_candidates": [
            "Paragraphs",
            "Documents Paragraphs"
        ],
        "align_scores": [
            0.9963626265525818,
            0.0006870927172712982,
            0.994176983833313,
            0.0006265111151151359,
            0.02984762191772461,
            0.0009766133734956384,
            0.0005198087892495096,
            0.0001502220839029178
        ],
        "align_select": "select Paragraphs.doc_id, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY"
    },
    {
        "question": "Return the different document ids along with the number of paragraphs corresponding to each, ordered by id.",
        "gold_select": "select Paragraphs.doc_id, count(*)",
        "select_candidates": [
            "select Paragraphs.doc_id, count(*)",
            "select Paragraphs.doc_id.c1, count(*)",
            "select Paragraphs.para_id, count(*)",
            "select Paragraphs.doc_id, count(**)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Paragraphs",
        "table_candidates": [
            "Paragraphs"
        ],
        "align_scores": [
            0.9954902529716492,
            0.000650721020065248,
            0.00021650749840773642,
            0.0001362352049909532,
            0.00036649135290645063,
            0.00016491158748976886,
            0.9944638609886169,
            0.0006362784770317376
        ],
        "align_select": "select Paragraphs.doc_id, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY"
    },
    {
        "question": "Show all document ids, names and the number of paragraphs in each document.",
        "gold_select": "select Paragraphs.doc_id, Documents.doc_name, count(*)",
        "select_candidates": [
            "select Documents.doc_id, Documents.doc_name, count(*)",
            "select Documents.doc_id, Documents.doc_name, count(*)",
            "select Documents.doc_id, Documents.doc_name.c2, count(*)",
            "select Paragraphs.doc_id, Documents.doc_name, count(*)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents Paragraphs",
        "table_candidates": [
            "Documents Paragraphs",
            "Templates Documents Paragraphs",
            "Ref_Template_Types Documents Paragraphs"
        ],
        "align_scores": [
            0.9925111532211304,
            0.00017818922060541809,
            0.9925111532211304,
            0.00017818922060541809,
            0.0003355861408635974,
            0.00014618673594668508,
            0.9659574031829834,
            0.0001655681262491271
        ],
        "align_select": "select Documents.doc_id, Documents.doc_name, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "What are the ids and names of each document, as well as the number of paragraphs in each?",
        "gold_select": "select Paragraphs.doc_id, Documents.doc_name, count(*)",
        "select_candidates": [
            "select Documents.doc_id, Documents.doc_name, count(*)",
            "select Documents.doc_id, Documents.doc_name, count(*)",
            "select Documents.doc_id, Documents.doc_name, count(*), Paragraphs.doc_id",
            "select Paragraphs.doc_id, Documents.doc_name, count(*)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents Paragraphs",
        "table_candidates": [
            "Documents Paragraphs"
        ],
        "align_scores": [
            0.9908789992332458,
            0.00026495277415961027,
            0.9908789992332458,
            0.00026495277415961027,
            0.0010185489663854241,
            0.00012373981007840484,
            0.46955159306526184,
            0.00024884502636268735
        ],
        "align_select": "select Documents.doc_id, Documents.doc_name, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "List all document ids with at least two paragraphs.",
        "gold_select": "select Paragraphs.doc_id",
        "select_candidates": [
            "select Paragraphs.doc_id",
            "select Paragraphs.doc_id, Paragraphs.Paragraph_Text",
            "select Documents.doc_id",
            "select Paragraphs.doc_id (Paragraphs.para_id)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Paragraphs",
        "table_candidates": [
            "Paragraphs",
            "Documents Paragraphs",
            "Templates Paragraphs",
            "Ref_Template_Types Documents Paragraphs",
            "Ref_Template_Types Paragraphs"
        ],
        "align_scores": [
            0.9955442547798157,
            0.00011168534547323361,
            0.00023690953094046563,
            5.51767079741694e-05,
            0.993125319480896,
            0.00013024550571572036,
            0.0005760714993812144,
            5.953665095148608e-05
        ],
        "align_select": "select Paragraphs.doc_id",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the ids of documents that have 2 or more paragraphs?",
        "gold_select": "select Paragraphs.doc_id",
        "select_candidates": [
            "select Paragraphs.doc_id",
            "select Documents.doc_id",
            "select Documents.doc_id, Documents.tpl_id",
            "select Documents.doc_id, Paragraphs.doc_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Paragraphs",
        "table_candidates": [
            "Paragraphs",
            "Documents Paragraphs",
            "Templates Documents Paragraphs",
            "Templates Paragraphs"
        ],
        "align_scores": [
            0.9957555532455444,
            0.0001340067683486268,
            0.9918176531791687,
            0.00010799475421663374,
            0.0005842911778017879,
            7.681307033635676e-05,
            0.0005709770484827459,
            7.366007048403844e-05
        ],
        "align_select": "select Paragraphs.doc_id",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What is the document id and name with greatest number of paragraphs?",
        "gold_select": "select Paragraphs.doc_id, Documents.doc_name",
        "select_candidates": [
            "select Documents.doc_id, Documents.doc_name",
            "select Documents.doc_id, Documents.doc_name, Documents.doc_desc",
            "select Documents.tpl_id, Documents.doc_name",
            "select Paragraphs.doc_id, Documents.doc_name"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents Paragraphs",
        "table_candidates": [
            "Documents Paragraphs"
        ],
        "align_scores": [
            0.9947392344474792,
            6.384873267961666e-05,
            0.0003828803892247379,
            5.646723002428189e-05,
            0.004136804025620222,
            7.280793943209574e-05,
            0.004414736293256283,
            6.926158675923944e-05
        ],
        "align_select": "select Documents.doc_id, Documents.doc_name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Return the id and name of the document with the most paragraphs.",
        "gold_select": "select Paragraphs.doc_id, Documents.doc_name",
        "select_candidates": [
            "select Documents.doc_id, Documents.doc_name",
            "select Documents.doc_id, Documents.doc_name, Documents.doc_desc",
            "select Documents.tpl_id, Documents.doc_name",
            "select Paragraphs.doc_id, Documents.doc_name"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents Paragraphs",
        "table_candidates": [
            "Documents Paragraphs"
        ],
        "align_scores": [
            0.9955073595046997,
            6.85048071318306e-05,
            0.00021622757776640356,
            6.0896261857124045e-05,
            0.08662112802267075,
            8.083193824859336e-05,
            0.004475708119571209,
            7.136945350794122e-05
        ],
        "align_select": "select Documents.doc_id, Documents.doc_name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the document id with least number of paragraphs?",
        "gold_select": "select Paragraphs.doc_id",
        "select_candidates": [
            "select Documents.doc_id",
            "select Paragraphs.doc_id",
            "select Documents.doc_id, Paragraphs.doc_id",
            "select Documents.doc_id, Documents.tpl_id"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Paragraphs",
        "table_candidates": [
            "Documents Paragraphs",
            "Ref_Template_Types Documents Paragraphs",
            "Templates Documents Paragraphs",
            "Templates Paragraphs"
        ],
        "align_scores": [
            0.9949970245361328,
            7.18727387720719e-05,
            0.9957733750343323,
            7.725720206508413e-05,
            0.00040003826143220067,
            6.0824186220997944e-05,
            0.0008936159429140389,
            6.604698864975944e-05
        ],
        "align_select": "select Documents.doc_id",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Return the id of the document with the fewest paragraphs.",
        "gold_select": "select Paragraphs.doc_id",
        "select_candidates": [
            "select Documents.doc_id",
            "select Paragraphs.doc_id",
            "select Documents.doc_id, Paragraphs.doc_id",
            "select Documents.doc_id, Documents.doc_name"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Paragraphs",
        "table_candidates": [
            "Documents Paragraphs",
            "Templates Documents Paragraphs",
            "Ref_Template_Types Documents Paragraphs",
            "Templates Paragraphs"
        ],
        "align_scores": [
            0.9959620833396912,
            8.08768963906914e-05,
            0.9963990449905396,
            7.580978126497939e-05,
            0.0002805456751957536,
            6.068918446544558e-05,
            0.0006109896348789334,
            5.382895324146375e-05
        ],
        "align_select": "select Documents.doc_id",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the document id with 1 to 2 paragraphs?",
        "gold_select": "select Paragraphs.doc_id",
        "select_candidates": [
            "select Paragraphs.doc_id",
            "select Paragraphs.doc_id, Paragraphs.Paragraph_Text",
            "select Paragraphs.doc_id (Paragraphs.para_id)",
            "select Paragraphs.doc_id.c1"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Paragraphs",
        "table_candidates": [
            "Paragraphs",
            "Documents Paragraphs",
            "Templates Paragraphs"
        ],
        "align_scores": [
            0.995712399482727,
            0.00027240015333518386,
            0.0002987053885590285,
            7.818950689397752e-05,
            0.001016675028949976,
            0.00010123241372639313,
            0.0004986239946447313,
            0.00011089591134805232
        ],
        "align_select": "select Paragraphs.doc_id",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Give the ids of documents that have between one and two paragraphs.",
        "gold_select": "select Paragraphs.doc_id",
        "select_candidates": [
            "select Documents.doc_id",
            "select Paragraphs.doc_id",
            "select Paragraphs.para_id",
            "select t4.c1"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Paragraphs",
        "table_candidates": [
            "Documents Paragraphs",
            "Paragraphs",
            "Templates Documents Paragraphs",
            "Templates Paragraphs"
        ],
        "align_scores": [
            0.9855971932411194,
            0.00013143522664904594,
            0.9932159781455994,
            0.00014443356485571712,
            0.6856418251991272,
            0.0001933650637511164,
            0.0013193029444664717,
            7.626578735653311e-05
        ],
        "align_select": "select Documents.doc_id",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Show the document id with paragraph text 'Brazil' and 'Ireland'.",
        "gold_select": "select Paragraphs.doc_id",
        "select_candidates": [
            "select Paragraphs.doc_id",
            "select Paragraphs.doc_id, Paragraphs.Paragraph_Text",
            "select Paragraphs.para_id",
            "select Paragraphs.doc_id, Paragraphs.Paragraph_Text, Paragraphs.Other_Details"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Paragraphs",
        "table_candidates": [
            "Paragraphs",
            "Documents Paragraphs"
        ],
        "align_scores": [
            0.9963803887367249,
            9.905350452754647e-05,
            0.00016069530101958662,
            5.9720201534219086e-05,
            0.002234364626929164,
            8.973280637292191e-05,
            0.00015158341557253152,
            6.0508420574478805e-05
        ],
        "align_select": "select Paragraphs.doc_id",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the ids of documents that contain the paragraph text 'Brazil' and 'Ireland'?",
        "gold_select": "select Paragraphs.doc_id",
        "select_candidates": [
            "select Paragraphs.doc_id",
            "select Paragraphs.para_id",
            "select Paragraphs.doc_id, Paragraphs.Paragraph_Text",
            "select Paragraphs.doc_id, Paragraphs.para_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Paragraphs",
        "table_candidates": [
            "Paragraphs",
            "Documents Paragraphs"
        ],
        "align_scores": [
            0.9945932030677795,
            0.0002450870524626225,
            0.9936894178390503,
            0.0005898344679735601,
            0.00014875874330755323,
            6.443501479225233e-05,
            0.00017725754878483713,
            7.439706678269431e-05
        ],
        "align_select": "select Paragraphs.doc_id",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "List document IDs, document names, and document descriptions for all documents.",
        "gold_select": "select Documents.doc_id, Documents.Document_Name, Documents.Document_Description",
        "select_candidates": [
            "select Documents.doc_id, Documents.Document_Name, Documents.Document_Description",
            "select Documents.doc_id, Documents.Template_ID, Documents.Document_Name, Documents.Document_Description",
            "select Documents.doc_id, Documents.Document_Name, Documents.Document_Description",
            "select Documents.doc_id, Documents.Document_Name.c2, Documents.Document_Description"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents",
        "table_candidates": [
            "Documents"
        ],
        "align_scores": [
            0.9946669340133667,
            0.00010971302981488407,
            0.0002962636935990304,
            7.230713526951149e-05,
            0.9946669340133667,
            0.00010971302981488407,
            0.0007467918912880123,
            8.70047661010176e-05
        ],
        "align_select": "select Documents.doc_id, Documents.Document_Name, Documents.Document_Description",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What are the ids, names, and descriptions for all documents?",
        "gold_select": "select Documents.doc_id, Documents.Document_Name, Documents.Document_Description",
        "select_candidates": [
            "select Documents.doc_id, Documents.Document_Name, Documents.Document_Description",
            "select Documents.doc_id, Documents.Template_ID, Documents.Document_Name, Documents.Document_Description",
            "select Documents.doc_id, Documents.Document_Name, Documents.Document_Description",
            "select Documents.doc_id, Documents.Document_Name.c3, Documents.Document_Description"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents",
        "table_candidates": [
            "Documents"
        ],
        "align_scores": [
            0.9944283962249756,
            0.00011937615636270493,
            0.0002766873221844435,
            7.276533142430708e-05,
            0.9944283962249756,
            0.00011937615636270493,
            0.0014742609346285462,
            8.618462743470445e-05
        ],
        "align_select": "select Documents.doc_id, Documents.Document_Name, Documents.Document_Description",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What is the document id, template id and description for document named \"Robbin CV\"?",
        "gold_select": "select Documents.doc_id, Documents.Template_ID, Documents.Document_Description",
        "select_candidates": [
            "select Documents.doc_id, Documents.Template_ID, Documents.Document_Description",
            "select Documents.doc_id, Documents.Template_ID.c1, Documents.Document_Description",
            "select Documents.doc_id-, Documents.Template_ID, Documents.Document_Description",
            "select Documents.doc_id, Documents.Template_ID, Documents.Document_Description."
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents",
        "table_candidates": [
            "Documents"
        ],
        "align_scores": [
            0.9946960210800171,
            0.0001308120699832216,
            0.0015149610117077827,
            9.170336852548644e-05,
            0.0012688544811680913,
            9.494712139712647e-05,
            0.0014863868709653616,
            8.584521856391802e-05
        ],
        "align_select": "select Documents.doc_id, Documents.Template_ID, Documents.Document_Description",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the document id, template id, and description for the document with the name Robbin CV.",
        "gold_select": "select Documents.doc_id, Documents.Template_ID, Documents.Document_Description",
        "select_candidates": [
            "select Documents.doc_id, Documents.Template_ID, Documents.Document_Description",
            "select Documents.doc_id, Documents.Template_ID.c1, Documents.Document_Description",
            "select Documents.doc_id, Documents.Template_ID, Documents.Document_Description.",
            "select Documents.doc_id-, Documents.Template_ID, Documents.Document_Description"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents",
        "table_candidates": [
            "Documents"
        ],
        "align_scores": [
            0.9948329925537109,
            0.00011436575732659549,
            0.0019381580641493201,
            8.666444773552939e-05,
            0.001870775711722672,
            8.069523755693808e-05,
            0.0010319891152903438,
            9.222339576808736e-05
        ],
        "align_select": "select Documents.doc_id, Documents.Template_ID, Documents.Document_Description",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many paragraphs for the document with name 'Summer Show'?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Documents.doc_id",
            "select count(*), Documents.Document_Description",
            "select count(*), Documents.Template_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents Paragraphs",
        "table_candidates": [
            "Documents Paragraphs",
            "Ref_Template_Types Documents Paragraphs",
            "Templates Documents Paragraphs"
        ],
        "align_scores": [
            0.9955456256866455,
            6.71743109705858e-05,
            0.00017645586922299117,
            6.206362741068006e-05,
            0.00027530299848876894,
            5.9805228374898434e-05,
            0.00019535089086275548,
            6.486392521765083e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Count the number of paragraphs in the document named 'Summer Show'.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Documents.doc_id",
            "select count(*), Documents.Template_ID",
            "select count(*), Documents.Document_Description"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents Paragraphs",
        "table_candidates": [
            "Documents Paragraphs",
            "Ref_Template_Types Documents Paragraphs",
            "Templates Documents Paragraphs"
        ],
        "align_scores": [
            0.996163010597229,
            7.369914965238422e-05,
            0.00017337541794404387,
            6.292117905104533e-05,
            0.00020684055925812572,
            6.825225136708468e-05,
            0.00028465306968428195,
            5.807260822621174e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show all paragraph ids and texts for the document with name 'Welcome to NY'.",
        "gold_select": "select Paragraphs.Paragraph_ID, Paragraphs.Paragraph_Text",
        "select_candidates": [
            "select Paragraphs.Paragraph_ID, Paragraphs.Paragraph_Text",
            "select Documents.doc_id, Paragraphs.Paragraph_Text",
            "select Documents.doc_id, Documents.Document_Name",
            "select Paragraphs.Document_ID, Paragraphs.Paragraph_Text"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents Paragraphs",
        "table_candidates": [
            "Documents Paragraphs",
            "Ref_Template_Types Documents Paragraphs",
            "Templates Documents Paragraphs"
        ],
        "align_scores": [
            0.9957453608512878,
            0.000140949065098539,
            0.00037684800918214023,
            8.910861652111635e-05,
            0.00031141110230237246,
            9.555722499499097e-05,
            0.0008069605682976544,
            9.101894829655066e-05
        ],
        "align_select": "select Paragraphs.Paragraph_ID, Paragraphs.Paragraph_Text",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the ids and texts of paragraphs in the document titled 'Welcome to NY'?",
        "gold_select": "select Paragraphs.Paragraph_ID, Paragraphs.Paragraph_Text",
        "select_candidates": [
            "select Paragraphs.Paragraph_ID, Paragraphs.Paragraph_Text",
            "select Documents.doc_id, Paragraphs.Paragraph_Text",
            "select Documents.doc_id, Documents.Document_Name",
            "select param_Paragraphs.Paragraph_ID, Paragraphs.Paragraph_Text"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents Paragraphs",
        "table_candidates": [
            "Documents Paragraphs"
        ],
        "align_scores": [
            0.9949996471405029,
            0.00017912274051923305,
            0.0003996468149125576,
            0.00012493383837863803,
            0.000486182194435969,
            7.54385328036733e-05,
            0.0005957873654551804,
            9.011963265947998e-05
        ],
        "align_select": "select Paragraphs.Paragraph_ID, Paragraphs.Paragraph_Text",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show all paragraph texts for the document \"Customer reviews\".",
        "gold_select": "select Paragraphs.Paragraph_Text",
        "select_candidates": [
            "select Paragraphs.Paragraph_Text",
            "select Paragraphs.Document_ID, Paragraphs.Paragraph_Text",
            "select Paragraphs.Paragraph_Text, Documents.Document_Description",
            "select Paragraphs.Paragraph_Text, Paragraphs.Document_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents Paragraphs",
        "table_candidates": [
            "Documents Paragraphs",
            "Ref_Template_Types Documents Paragraphs",
            "Templates Documents Paragraphs"
        ],
        "align_scores": [
            0.9960095882415771,
            9.113585110753775e-05,
            0.00019150432490278035,
            7.043599907774478e-05,
            0.0001990198652492836,
            6.362664862535894e-05,
            0.0001371978287352249,
            6.275482883211225e-05
        ],
        "align_select": "select Paragraphs.Paragraph_Text",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the paragraph texts for the document with the name 'Customer reviews'?",
        "gold_select": "select Paragraphs.Paragraph_Text",
        "select_candidates": [
            "select Paragraphs.Paragraph_Text",
            "select Paragraphs.Paragraph_Text, Documents.Document_Description",
            "select Paragraphs.Document_ID, Paragraphs.Paragraph_Text",
            "select Paragraphs.Paragraph_Text, Paragraphs.Document_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents Paragraphs",
        "table_candidates": [
            "Documents Paragraphs",
            "Ref_Template_Types Documents Paragraphs",
            "Templates Documents Paragraphs"
        ],
        "align_scores": [
            0.9953705668449402,
            0.00011120193084934726,
            0.0002199835580540821,
            6.446864426834509e-05,
            0.00016113689343910664,
            6.931549432920292e-05,
            0.0001290451327804476,
            6.177041359478608e-05
        ],
        "align_select": "select Paragraphs.Paragraph_Text",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show all document ids, names and the number of paragraphs in each document.",
        "gold_select": "select Paragraphs.Document_ID, Documents.Document_Name, count(*)",
        "select_candidates": [
            "select Documents.doc_id, Documents.Document_Name, count(*)",
            "select Documents.doc_id, Documents.Document_Name, count(*)",
            "select Paragraphs.Document_ID, Documents.Document_Name, count(*)",
            "select Documents.doc_id, Documents.Document_Name.c2, count(*)"
        ],
        "select_labels": [
            0.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents Paragraphs",
        "table_candidates": [
            "Documents Paragraphs"
        ],
        "align_scores": [
            0.9896152019500732,
            0.00016853862325660884,
            0.9896152019500732,
            0.00016853862325660884,
            0.9763216972351074,
            0.00015715413610450923,
            0.0003252159513067454,
            0.00014076022489462048
        ],
        "align_select": "select Documents.doc_id, Documents.Document_Name, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "What are the ids and names of each document, as well as the number of paragraphs in each?",
        "gold_select": "select Paragraphs.Document_ID, Documents.Document_Name, count(*)",
        "select_candidates": [
            "select Documents.doc_id, Documents.Document_Name, count(*)",
            "select Paragraphs.Document_ID, Documents.Document_Name, count(*)",
            "select Documents.doc_id, Documents.Document_Name, count(*)",
            "select Documents.doc_id, Documents.Document_Name.c2, count(*)"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents Paragraphs",
        "table_candidates": [
            "Documents Paragraphs"
        ],
        "align_scores": [
            0.9857655763626099,
            0.00024724536342546344,
            0.6818997263908386,
            0.00024372198095079511,
            0.9857655763626099,
            0.00024724536342546344,
            0.00031498074531555176,
            0.00016270382911898196
        ],
        "align_select": "select Documents.doc_id, Documents.Document_Name, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "What is the document id and name with greatest number of paragraphs?",
        "gold_select": "select Paragraphs.Document_ID, Documents.Document_Name",
        "select_candidates": [
            "select Documents.doc_id, Documents.Document_Name",
            "select Paragraphs.Document_ID, Documents.Document_Name",
            "select Documents.Template_ID, Documents.Document_Name",
            "select Documents.doc_id, Documents.Document_Name, Documents.Document_Description"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents Paragraphs",
        "table_candidates": [
            "Documents Paragraphs"
        ],
        "align_scores": [
            0.9925657510757446,
            6.331179611152038e-05,
            0.006718419026583433,
            6.717142969137058e-05,
            0.0013611885951831937,
            6.462830788223073e-05,
            0.000415075512137264,
            5.4013918997952715e-05
        ],
        "align_select": "select Documents.doc_id, Documents.Document_Name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Return the id and name of the document with the most paragraphs.",
        "gold_select": "select Paragraphs.Document_ID, Documents.Document_Name",
        "select_candidates": [
            "select Documents.doc_id, Documents.Document_Name",
            "select Paragraphs.Document_ID, Documents.Document_Name",
            "select Documents.Template_ID, Documents.Document_Name",
            "select Documents.doc_id, Documents.Document_Name, Documents.Document_Description"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents Paragraphs",
        "table_candidates": [
            "Documents Paragraphs"
        ],
        "align_scores": [
            0.9936287999153137,
            6.793978536734357e-05,
            0.006038125604391098,
            7.027618266874924e-05,
            0.0010823856573551893,
            6.535778811667114e-05,
            0.0002161826123483479,
            5.660190436174162e-05
        ],
        "align_select": "select Documents.doc_id, Documents.Document_Name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "List document IDs, document names, and document descriptions for all documents.",
        "gold_select": "select Documents.doc_id, Documents.doc_name, Documents.Document_Description",
        "select_candidates": [
            "select Documents.doc_id, Documents.doc_name, Documents.Document_Description",
            "select Documents.doc_id, Documents.Template_ID, Documents.doc_name, Documents.Document_Description",
            "select Documents.Template_ID, Documents.doc_name, Documents.Document_Description",
            "select Documents.doc_id, Documents.doc_name.c3, Documents.doc_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents",
        "table_candidates": [
            "Documents"
        ],
        "align_scores": [
            0.995027482509613,
            0.00011107030877610669,
            0.0003063721815124154,
            7.271808863151819e-05,
            0.0005594087997451425,
            8.789237472228706e-05,
            0.0022310989443212748,
            9.265021071769297e-05
        ],
        "align_select": "select Documents.doc_id, Documents.doc_name, Documents.Document_Description",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What are the ids, names, and descriptions for all documents?",
        "gold_select": "select Documents.doc_id, Documents.doc_name, Documents.Document_Description",
        "select_candidates": [
            "select Documents.doc_id, Documents.doc_name, Documents.Document_Description",
            "select Documents.doc_id, Documents.doc_name, Documents.Document_Description",
            "select Documents.doc_id, Documents.Template_ID, Documents.doc_name, Documents.Document_Description",
            "select Documents.doc_id, Documents.Document_Description, Documents.doc_name"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents",
        "table_candidates": [
            "Documents"
        ],
        "align_scores": [
            0.9946940541267395,
            0.0001178486054413952,
            0.9946940541267395,
            0.0001178486054413952,
            0.00032785613439045846,
            7.156627543736249e-05,
            0.9950921535491943,
            0.00011249059753026813
        ],
        "align_select": "select Documents.doc_id, Documents.doc_name, Documents.Document_Description",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What is the document name and template id for document with description with the letter 'w' in it?",
        "gold_select": "select Documents.doc_name, Documents.Template_ID",
        "select_candidates": [
            "select Documents.doc_name, Documents.Template_ID",
            "select Documents.Template_ID, Documents.doc_name",
            "select Documents.doc_id, Documents.doc_name",
            "select Documents.oth_dtl, Documents.doc_name"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents",
        "table_candidates": [
            "Documents"
        ],
        "align_scores": [
            0.9938828945159912,
            0.0001397239975631237,
            0.9939544796943665,
            0.00013939647760707885,
            0.0026419770438224077,
            8.960282866610214e-05,
            0.9773454666137695,
            0.00016031651466619223
        ],
        "align_select": "select Documents.doc_name, Documents.Template_ID",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the names and template ids for documents that contain the letter w in their description.",
        "gold_select": "select Documents.doc_name, Documents.Template_ID",
        "select_candidates": [
            "select Documents.doc_name, Documents.Template_ID",
            "select Documents.oth_dtl, Documents.doc_name, Documents.Template_ID",
            "select t2.c5, Documents.doc_name, Documents.Template_ID",
            "select Documents.Document_Description, Documents.doc_name, Documents.Template_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents",
        "table_candidates": [
            "Documents"
        ],
        "align_scores": [
            0.9952319264411926,
            0.0001287511404370889,
            0.0002384005201747641,
            6.384861626429483e-05,
            0.00012831382628064603,
            5.855166455148719e-05,
            0.00036682692007161677,
            6.072878386476077e-05
        ],
        "align_select": "select Documents.doc_name, Documents.Template_ID",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the document id, template id and description for document named \"Robbin CV\"?",
        "gold_select": "select Documents.doc_id, Documents.Template_ID, Documents.Document_Description",
        "select_candidates": [
            "select Documents.doc_id, Documents.Template_ID, Documents.Document_Description",
            "select Documents.doc_id, Documents.Template_ID.c1, Documents.Document_Description",
            "select Documents.doc_id-, Documents.Template_ID, Documents.Document_Description",
            "select Documents.doc_id, Documents.Template_ID & Documents.Document_Description"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents",
        "table_candidates": [
            "Documents"
        ],
        "align_scores": [
            0.9946960210800171,
            0.0001308120699832216,
            0.0015149610117077827,
            9.170336852548644e-05,
            0.0012688544811680913,
            9.494712139712647e-05,
            0.9263109564781189,
            8.434309711446986e-05
        ],
        "align_select": "select Documents.doc_id, Documents.Template_ID, Documents.Document_Description",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the document id, template id, and description for the document with the name Robbin CV.",
        "gold_select": "select Documents.doc_id, Documents.Template_ID, Documents.Document_Description",
        "select_candidates": [
            "select Documents.doc_id, Documents.Template_ID, Documents.Document_Description",
            "select Documents.doc_id, Documents.Template_ID.c1, Documents.Document_Description",
            "select Documents.doc_id-, Documents.Template_ID, Documents.Document_Description",
            "select Documents.doc_id, Documents.Template_ID, Documents.Document_Description."
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents",
        "table_candidates": [
            "Documents"
        ],
        "align_scores": [
            0.9948329925537109,
            0.00011436575732659549,
            0.0019381580641493201,
            8.666444773552939e-05,
            0.0010319891152903438,
            9.222339576808736e-05,
            0.001870775711722672,
            8.069523755693808e-05
        ],
        "align_select": "select Documents.doc_id, Documents.Template_ID, Documents.Document_Description",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many documents are using the template with type code 'PPT'?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Templates.tpl_tpye_code",
            "select count(*), Templates.Template_Details",
            "select count(Documents.doc_id)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates Documents",
        "table_candidates": [
            "Templates Documents",
            "Ref_Template_Types Templates Documents"
        ],
        "align_scores": [
            0.9945511221885681,
            0.00019862272893078625,
            0.0002500718110240996,
            0.0002061850536847487,
            0.0003582637873478234,
            0.0049310182221233845,
            0.019900519400835037,
            0.0001725443871691823
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Count the number of documents that use the PPT template type.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Templates.tpl_tpye_code",
            "select count(Documents.doc_id)",
            "select count(no.2 Documents.doc_id)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates Documents",
        "table_candidates": [
            "Templates Documents",
            "Ref_Template_Types Templates Documents"
        ],
        "align_scores": [
            0.9952329993247986,
            0.00014943860878702253,
            0.00019226691802032292,
            0.0006537233712151647,
            0.0020437799394130707,
            0.00011445619747973979,
            0.0004725286562461406,
            0.0002072031347779557
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the id and type code for the template used by the most documents?",
        "gold_select": "select Documents.Template_ID, Templates.tpl_tpye_code",
        "select_candidates": [
            "select Templates.Template_ID, Templates.tpl_tpye_code",
            "select Documents.Template_ID, Templates.tpl_tpye_code",
            "select Templates.Template_ID, Templates.Template_ID",
            "select Documents.Template_ID, t0.c2"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates Documents",
        "table_candidates": [
            "Templates Documents",
            "Ref_Template_Types Templates Documents"
        ],
        "align_scores": [
            0.07500366866588593,
            0.00011490247561596334,
            0.021063819527626038,
            0.00011772078869398683,
            0.00027055368991568685,
            7.854343130020425e-05,
            0.000467375764856115,
            7.745888433419168e-05
        ],
        "align_select": "select Templates.Template_ID, Templates.tpl_tpye_code",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Return the id and type code of the template that is used for the greatest number of documents.",
        "gold_select": "select Documents.Template_ID, Templates.tpl_tpye_code",
        "select_candidates": [
            "select Templates.Template_ID, Templates.tpl_tpye_code",
            "select Documents.Template_ID, Templates.tpl_tpye_code",
            "select Templates.Template_ID, Templates.Template_ID",
            "select Documents.Template_ID, Templates.Template_ID"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-UNION-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates Documents",
        "table_candidates": [
            "Templates Documents",
            "Ref_Template_Types Templates Documents"
        ],
        "align_scores": [
            0.024990171194076538,
            0.00012157863238826394,
            0.022146454080939293,
            0.00012308632722124457,
            0.0002108575135935098,
            6.399051926564425e-05,
            0.00019831350073218346,
            6.685479456791654e-05
        ],
        "align_select": "select Templates.Template_ID, Templates.tpl_tpye_code",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Show template ids, version numbers, and template type codes for all templates.",
        "gold_select": "select Templates.Template_ID, Templates.ver_no, Templates.tpl_tpye_code",
        "select_candidates": [
            "select Templates.Template_ID, Templates.ver_no, Templates.tpl_tpye_code",
            "select Templates.Template_ID, Templates.ver_no, Templates.tpl_tpye_code",
            "select Templates.Template_ID, t1.1.c1, Templates.tpl_tpye_code",
            "select Templates.Template_ID, Templates.ver_no.c1, Templates.tpl_tpye_code"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates",
        "table_candidates": [
            "Templates",
            "Ref_Template_Types Templates"
        ],
        "align_scores": [
            0.07784362882375717,
            0.00012378972314763814,
            0.07784362882375717,
            0.00012378972314763814,
            0.0004913803422823548,
            0.0001319980510743335,
            0.0006751389009878039,
            0.0001042387739289552
        ],
        "align_select": "select Templates.Template_ID, Templates.ver_no, Templates.tpl_tpye_code",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What are the ids, version numbers, and type codes for each template?",
        "gold_select": "select Templates.Template_ID, Templates.ver_no, Templates.tpl_tpye_code",
        "select_candidates": [
            "select Templates.Template_ID, Templates.ver_no, Templates.tpl_tpye_code",
            "select Templates.Template_ID, Templates.ver_no, Templates.tpl_tpye_code",
            "select Templates.Template_ID, t1.1.c1, Templates.tpl_tpye_code",
            "select Templates.Template_ID, Templates.ver_no, Templates.Template_ID"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates",
        "table_candidates": [
            "Templates",
            "Ref_Template_Types Templates"
        ],
        "align_scores": [
            0.011683104559779167,
            0.0009147392120212317,
            0.011683104559779167,
            0.0009147392120212317,
            0.000584837980568409,
            0.0008174684480763972,
            0.0004471467691473663,
            0.00021124670456629246
        ],
        "align_select": "select Templates.Template_ID, Templates.ver_no, Templates.tpl_tpye_code",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "Show all distinct template type codes for all templates.",
        "gold_select": "select distinct Templates.tpl_tpye_code",
        "select_candidates": [
            "select distinct Templates.tpl_tpye_code",
            "select distinct Templates.tpl_tpye_code, Templates.date_eff_from",
            "select distinct t1.ctpye",
            "select distinct Templates.tpl_tpye_code,"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates",
        "table_candidates": [
            "Templates"
        ],
        "align_scores": [
            0.1312602311372757,
            0.00040513096610084176,
            0.00019091053400188684,
            9.380965639138594e-05,
            0.04576844349503517,
            0.003407079726457596,
            0.0006367304595187306,
            0.00016162346582859755
        ],
        "align_select": "select distinct Templates.tpl_tpye_code",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What are the different template type codes?",
        "gold_select": "select distinct Templates.tpl_tpye_code",
        "select_candidates": [
            "select distinct Ref_Template_Types.tpl_type_code",
            "select distinct tpl_type_code",
            "select distinct tpl_type_c0",
            "select distinct tpl_code"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates",
        "table_candidates": [
            "Ref_Template_Types",
            "Ref_Template_Types Templates"
        ],
        "align_scores": [
            0.9963405132293701,
            0.000346922519383952,
            0.9907412528991699,
            0.00041148270247504115,
            0.00929825659841299,
            0.00027248746482655406,
            0.9851812124252319,
            0.001214784337207675
        ],
        "align_select": "select distinct Ref_Template_Types.tpl_type_code",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What are the ids of templates with template type code PP or PPT?",
        "gold_select": "select Templates.Template_ID",
        "select_candidates": [
            "select Templates.Template_ID",
            "select Templates.Template_ID, Templates.tpl_tpye_code",
            "select Templates.Template_ID, Templates.Template_Details",
            "select Templates.Template_ID, Templates.date_eff_from"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates",
        "table_candidates": [
            "Templates",
            "Ref_Template_Types Templates"
        ],
        "align_scores": [
            0.9960924983024597,
            0.0013654031790792942,
            0.00011740443005692214,
            7.344265031861141e-05,
            0.00016818159201648086,
            8.213514229282737e-05,
            0.00013948677224107087,
            8.314129081554711e-05
        ],
        "align_select": "select Templates.Template_ID",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the ids of templates that have the code PP or PPT.",
        "gold_select": "select Templates.Template_ID",
        "select_candidates": [
            "select Templates.Template_ID",
            "select Templates.Template_ID, Templates.tpl_tpye_code",
            "select Templates.Template_ID, Templates.date_eff_from",
            "select Templates.Template_ID, Templates.Template_Details"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates",
        "table_candidates": [
            "Templates"
        ],
        "align_scores": [
            0.995911717414856,
            0.0006334008648991585,
            9.770823089638725e-05,
            6.225147808436304e-05,
            0.0001321253803325817,
            7.344636105699465e-05,
            0.00017226117779500782,
            7.299760181922466e-05
        ],
        "align_select": "select Templates.Template_ID",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many templates have template type code CV?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Templates.Template_ID",
            "select count(*), Templates.tpl_tpye_code",
            "select count(*), Templates.ver_no"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates",
        "table_candidates": [
            "Templates"
        ],
        "align_scores": [
            0.9942767024040222,
            0.0001025287710945122,
            0.00019795096886809915,
            6.638258491875604e-05,
            0.0001894126762636006,
            5.8672787417890504e-05,
            0.0001968992582987994,
            6.526822107844055e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Count the number of templates of the type CV.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Templates.Template_ID",
            "select count(*), Templates.tpl_tpye_code",
            "select count(*), Templates.ver_no"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates",
        "table_candidates": [
            "Templates"
        ],
        "align_scores": [
            0.9959606528282166,
            0.00010813934204634279,
            0.00017387475236319005,
            0.00011130420170957223,
            0.00016548890562262386,
            0.0001944329123944044,
            0.00014593603555113077,
            0.00020941194088663906
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the version number and template type code for the template with version number later than 5?",
        "gold_select": "select Templates.ver_no, Templates.tpl_tpye_code",
        "select_candidates": [
            "select Templates.ver_no, Templates.tpl_tpye_code",
            "select Templates.ver_no, Templates.Template_ID",
            "select Templates.ver_no, Templates.Template_ID2",
            "select Templates.ver_no, Templates.ver_no"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates",
        "table_candidates": [
            "Templates",
            "Ref_Template_Types Templates"
        ],
        "align_scores": [
            0.07769447565078735,
            0.00016826772480271757,
            0.0008441897807642817,
            0.00011533464567037299,
            0.0006267336430028081,
            0.00010386550275143236,
            0.0002661696635186672,
            7.024817750789225e-05
        ],
        "align_select": "select Templates.ver_no, Templates.tpl_tpye_code",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the version numbers and template type codes of templates with a version number greater than 5.",
        "gold_select": "select Templates.ver_no, Templates.tpl_tpye_code",
        "select_candidates": [
            "select Templates.ver_no, Templates.tpl_tpye_code",
            "select Templates.ver_no, Templates.Template_ID",
            "select Templates.ver_no, Templates.Template_ID2",
            "select Templates.Template_ID, Templates.tpl_tpye_code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates",
        "table_candidates": [
            "Templates",
            "Ref_Template_Types Templates"
        ],
        "align_scores": [
            0.019758647307753563,
            0.00017230732191819698,
            0.0005002009565941989,
            0.00010386233770987019,
            0.0004757488495670259,
            9.536316065350547e-05,
            0.00031018583104014397,
            9.547252557240427e-05
        ],
        "align_select": "select Templates.ver_no, Templates.tpl_tpye_code",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show all template type codes and number of templates for each.",
        "gold_select": "select Templates.tpl_tpye_code, count(*)",
        "select_candidates": [
            "select Templates.tpl_tpye_code, count(*)",
            "select tpl_tpye_code, count(*)",
            "select tpl_tpye_c2, count(*)",
            "select Templates.tpl_tpye_code, count(*), Templates.date_eff_from"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates",
        "table_candidates": [
            "Templates"
        ],
        "align_scores": [
            0.0033154133707284927,
            0.0002452885382808745,
            0.0011809320421889424,
            0.00016124494140967727,
            0.0002457122318446636,
            0.00015170038386713713,
            0.0002654420677572489,
            0.0002715224982239306
        ],
        "align_select": "select Templates.tpl_tpye_code, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "What are the different template type codes, and how many templates correspond to each?",
        "gold_select": "select Templates.tpl_tpye_code, count(*)",
        "select_candidates": [
            "select Templates.tpl_tpye_code, count(*)",
            "select tpl_tpye_code, count(*)",
            "select Templates.tpl_tpye_code, count(*), Templates.date_eff_from",
            "select t1, Templates.tpl_tpye_code, count(*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates",
        "table_candidates": [
            "Templates"
        ],
        "align_scores": [
            0.017995206639170647,
            0.0002779954229481518,
            0.002561981789767742,
            0.00018567044753581285,
            0.00023329573741648346,
            0.00016433802375104278,
            0.0003959350869990885,
            0.00013677982497029006
        ],
        "align_select": "select Templates.tpl_tpye_code, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "Which template type code has most number of templates?",
        "gold_select": "select Templates.tpl_tpye_code",
        "select_candidates": [
            "select Templates.tpl_tpye_code",
            "select tpl_tpye_c2",
            "select tpl_tpye_code",
            "select tpl_tpye_cont.c2"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates",
        "table_candidates": [
            "Templates"
        ],
        "align_scores": [
            0.00853672344237566,
            8.610733493696898e-05,
            0.0005007066065445542,
            7.612098124809563e-05,
            0.0028277914971113205,
            7.532365998486057e-05,
            0.0013077715411782265,
            8.27275071060285e-05
        ],
        "align_select": "select Templates.tpl_tpye_code",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Return the type code of the template type that the most templates belong to.",
        "gold_select": "select Templates.tpl_tpye_code",
        "select_candidates": [
            "select Templates.tpl_tpye_code",
            "select tpl_c0",
            "select tpl_tpl_c0",
            "select tpl_tpye_c2"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates",
        "table_candidates": [
            "Templates"
        ],
        "align_scores": [
            0.004577864892780781,
            7.968888530740514e-05,
            0.05853977054357529,
            7.531855953857303e-05,
            0.0009436629479750991,
            6.755332287866622e-05,
            0.00032944936538115144,
            7.193561759777367e-05
        ],
        "align_select": "select Templates.tpl_tpye_code",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Show all template type codes with less than three templates.",
        "gold_select": "select Templates.tpl_tpye_code",
        "select_candidates": [
            "select Templates.tpl_tpye_code",
            "select tpl_tpye_c2",
            "select tpl_tpye_code",
            "select tpl_tpye_cod"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates",
        "table_candidates": [
            "Templates"
        ],
        "align_scores": [
            0.011737308464944363,
            0.00021748965082224458,
            0.00029810279374942183,
            0.00012596629676409066,
            0.005282541271299124,
            0.00015263640671037138,
            0.021885408088564873,
            0.00015479688590858132
        ],
        "align_select": "select Templates.tpl_tpye_code",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the codes of template types that have fewer than 3 templates?",
        "gold_select": "select Templates.tpl_tpye_code",
        "select_candidates": [
            "select tpl_tpl_c0",
            "select tpl_c0",
            "select tpl_tpye_c0",
            "select tpl_tpye_c2"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates",
        "table_candidates": [
            "Templates",
            "Ref_Template_Types Templates",
            "Documents Templates",
            "Paragraphs Templates"
        ],
        "align_scores": [
            0.000809817633125931,
            0.00010713726078392938,
            0.08740869909524918,
            0.00021327051217667758,
            0.0007105867261998355,
            0.00016225577564910054,
            0.00036475970409810543,
            8.94754339242354e-05
        ],
        "align_select": "select tpl_tpl_c0",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What the smallest version number and its template type code?",
        "gold_select": "select min(Templates.ver_no), Templates.tpl_tpye_code",
        "select_candidates": [
            "select min(Templates.ver_no), Templates.tpl_tpye_code",
            "select min(Templates.ver_no), min(Templates.tpl_tpye_code)",
            "select Templates.ver_no, Templates.tpl_tpye_code",
            "select min(Templates.ver_no), max(Templates.tpl_tpye_code)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "Templates",
        "table_candidates": [
            "Templates",
            "Ref_Template_Types Templates"
        ],
        "align_scores": [
            0.00011020499368896708,
            7.075860048644245e-05,
            0.00032996112713590264,
            0.00017986929742619395,
            0.05158400908112526,
            0.054726917296648026,
            0.00031444724299944937,
            0.0002018859813688323
        ],
        "align_select": "select min(Templates.ver_no), Templates.tpl_tpye_code",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Return the lowest version number, along with its corresponding template type code.",
        "gold_select": "select min(Templates.ver_no), Templates.tpl_tpye_code",
        "select_candidates": [
            "select min(Templates.ver_no), Templates.tpl_tpye_code",
            "select Templates.ver_no, Templates.tpl_tpye_code",
            "select min(Templates.ver_no), tpl_tpye",
            "select min(Templates.ver_no), tpl.c2"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "Templates",
        "table_candidates": [
            "Templates"
        ],
        "align_scores": [
            9.062351455213502e-05,
            8.383687236346304e-05,
            0.023006215691566467,
            0.000101867837656755,
            0.00010397649748483673,
            8.033108315430582e-05,
            0.0001367529621347785,
            9.841769497143105e-05
        ],
        "align_select": "select min(Templates.ver_no), Templates.tpl_tpye_code",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What is the template type code of the template used by document with the name \"Data base\"?",
        "gold_select": "select Templates.tpl_tpye_code",
        "select_candidates": [
            "select Templates.tpl_tpye_code",
            "select Templates.Template_ID",
            "select Templates.tpl_tpye_code, Ref_Template_Types.Template_Type_Description",
            "select Templates.tpl_tpye_code, Templates.Template_Details"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates Documents",
        "table_candidates": [
            "Templates Documents",
            "Ref_Template_Types Templates Documents",
            "Paragraphs Templates Documents"
        ],
        "align_scores": [
            0.0074556730687618256,
            0.00010484977246960625,
            0.010345050133764744,
            0.00010065678361570463,
            0.0002522107679396868,
            7.367496436927468e-05,
            0.0002118962729582563,
            6.927975482540205e-05
        ],
        "align_select": "select Templates.tpl_tpye_code",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the template type code of the template that is used by a document named Data base.",
        "gold_select": "select Templates.tpl_tpye_code",
        "select_candidates": [
            "select Templates.tpl_tpye_code",
            "select Templates.Template_ID",
            "select Templates.ver_no",
            "select Templates.Template_Details"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates Documents",
        "table_candidates": [
            "Templates Documents",
            "Ref_Template_Types Templates Documents"
        ],
        "align_scores": [
            0.004688779823482037,
            0.00010749624925665557,
            0.018479501828551292,
            9.846923057921231e-05,
            0.0005914974026381969,
            8.011458703549579e-05,
            0.011885966174304485,
            0.00011577142868191004
        ],
        "align_select": "select Templates.tpl_tpye_code",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show all document names using templates with template type code BK.",
        "gold_select": "select Documents.doc_name",
        "select_candidates": [
            "select Documents.doc_name",
            "select Documents.doc_id, Documents.doc_name",
            "select Documents.doc_name, Documents.Document_Description",
            "select Documents.doc_name, Templates.Template_Details"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates Documents",
        "table_candidates": [
            "Templates Documents",
            "Ref_Template_Types Templates Documents"
        ],
        "align_scores": [
            0.996320366859436,
            7.940413343021646e-05,
            0.0001367833319818601,
            6.830292113590986e-05,
            0.00015804452414158732,
            6.491193198598921e-05,
            0.00046786421444267035,
            6.499358278233558e-05
        ],
        "align_select": "select Documents.doc_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of documents that use templates with the code BK?",
        "gold_select": "select Documents.doc_name",
        "select_candidates": [
            "select Documents.doc_name",
            "select Documents.doc_name, Documents.Document_Description",
            "select Documents.doc_id, Documents.doc_name",
            "select Documents.Template_ID, Documents.doc_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates Documents",
        "table_candidates": [
            "Templates Documents",
            "Ref_Template_Types Templates Documents"
        ],
        "align_scores": [
            0.9398519396781921,
            0.0001186783701996319,
            0.00020479220256675035,
            6.093582487665117e-05,
            0.0001630776678211987,
            6.636973557760939e-05,
            0.0002256216830573976,
            6.827197648817673e-05
        ],
        "align_select": "select Documents.doc_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show all template type codes and the number of documents using each type.",
        "gold_select": "select Templates.tpl_tpye_code, count(*)",
        "select_candidates": [
            "select Templates.tpl_tpye_code, count(*)",
            "select Documents.doc_name, count(*)",
            "select Documents.Template_ID, count(*)",
            "select tpl_tpye_code, count(*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates Documents",
        "table_candidates": [
            "Templates Documents",
            "Ref_Template_Types Templates Documents",
            "Documents",
            "Paragraphs Documents"
        ],
        "align_scores": [
            0.0029928942676633596,
            0.0002715406008064747,
            0.0004156708309892565,
            0.00017770023259799927,
            0.016072668135166168,
            0.0003684736730065197,
            0.0012396613601595163,
            0.00015508598880842328
        ],
        "align_select": "select Templates.tpl_tpye_code, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "What are the different template type codes, and how many documents use each type?",
        "gold_select": "select Templates.tpl_tpye_code, count(*)",
        "select_candidates": [
            "select Templates.tpl_tpye_code, count(*)",
            "select Documents.doc_name, count(*)",
            "select tpl_tpye_code, count(*)",
            "select Templates.tpl_tpye_code, count(*), Documents.Template_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates Documents",
        "table_candidates": [
            "Templates Documents",
            "Ref_Template_Types Templates Documents",
            "Documents"
        ],
        "align_scores": [
            0.005919904448091984,
            0.00029267804347909987,
            0.0005646779318340123,
            0.00020763192151207477,
            0.0018861244898289442,
            0.00019242738198954612,
            0.00018023101438302547,
            0.00012446558685041964
        ],
        "align_select": "select Templates.tpl_tpye_code, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "Which template type code is used by most number of documents?",
        "gold_select": "select Templates.tpl_tpye_code",
        "select_candidates": [
            "select Templates.tpl_tpye_code",
            "select Templates.tpl_tpye_code, Documents.Template_ID",
            "select Templates.tpl_tpye_code (ref. Templates.date_eff_from)",
            "select Templates.tpl_tpye_code, Templates.date_eff_from"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates Documents",
        "table_candidates": [
            "Templates Documents",
            "Ref_Template_Types Templates Documents",
            "Templates"
        ],
        "align_scores": [
            0.03382166102528572,
            8.175216498784721e-05,
            0.0002565894683357328,
            6.354036304401234e-05,
            0.00033016689121723175,
            7.771465607220307e-05,
            0.0002034921635640785,
            6.208091508597136e-05
        ],
        "align_select": "select Templates.tpl_tpye_code",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Return the code of the template type that is most commonly used in documents.",
        "gold_select": "select Templates.tpl_tpye_code",
        "select_candidates": [
            "select Templates.tpl_tpye_code",
            "select Documents.doc_name",
            "select Templates.Template_ID",
            "select Documents.Template_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates Documents",
        "table_candidates": [
            "Templates Documents",
            "Ref_Template_Types Templates Documents",
            "Templates"
        ],
        "align_scores": [
            0.05888570100069046,
            8.165547478711233e-05,
            0.0008075013174675405,
            7.941207877593115e-05,
            0.9554327726364136,
            8.033644553506747e-05,
            0.989750325679779,
            7.829552487237379e-05
        ],
        "align_select": "select Documents.Template_ID",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Show all template type codes that are not used by any document.",
        "gold_select": "select Templates.tpl_tpye_code",
        "select_candidates": [
            "select Templates.tpl_tpye_code",
            "select Ref_Template_Types.tpl_type_code",
            "select tpl_tpye_code",
            "select tpl_tpl_def_Templates.tpl_tpye_code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM",
            "SELECT-FROM-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates Documents",
        "table_candidates": [
            "Templates Documents",
            "Ref_Template_Types Templates Documents",
            "Ref_Template_Types Templates",
            "Templates"
        ],
        "align_scores": [
            0.049504343420267105,
            0.0020078057423233986,
            0.9868490695953369,
            0.07796771079301834,
            0.015348419547080994,
            0.0008813756285235286,
            0.0003379080444574356,
            0.00023713393602520227
        ],
        "align_select": "select Ref_Template_Types.tpl_type_code",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM"
    },
    {
        "question": "What are the codes of template types that are not used for any document?",
        "gold_select": "select Templates.tpl_tpye_code",
        "select_candidates": [
            "select Ref_Template_Types.tpl_type_code",
            "select tpl_Ref_Template_Types.tpl_type_code",
            "select tpl_tpl_c0",
            "select tpl_type_c0"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates Documents",
        "table_candidates": [
            "Ref_Template_Types Templates Documents",
            "Ref_Template_Types Templates",
            "Templates Documents"
        ],
        "align_scores": [
            0.9891691207885742,
            0.9885026216506958,
            0.9323039650917053,
            0.9215055704116821,
            0.0012484327889978886,
            0.0012619940098375082,
            0.43249017000198364,
            0.39803776144981384
        ],
        "align_select": "select Ref_Template_Types.tpl_type_code",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM"
    },
    {
        "question": "Show all template type codes and descriptions.",
        "gold_select": "select Ref_Template_Types.tpl_type_code, Ref_Template_Types.Template_Type_Description",
        "select_candidates": [
            "select Ref_Template_Types.tpl_type_code, Ref_Template_Types.Template_Type_Description",
            "select Ref_Template_Types.Template_Type_Description, Ref_Template_Types.tpl_type_code",
            "select Ref_Template_Types.tpl_type_code, Ref_Template_Types.Template_Type_Description,",
            "select Ref_Template_Types.tpl_type_code, Ref_Template_Types.Template_Type_Description."
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Ref_Template_Types",
        "table_candidates": [
            "Ref_Template_Types"
        ],
        "align_scores": [
            0.9852418303489685,
            0.00010345932969357818,
            0.9825101494789124,
            9.067917562788352e-05,
            0.000605553446803242,
            8.818646165309474e-05,
            0.0015603231731802225,
            9.238015627488494e-05
        ],
        "align_select": "select Ref_Template_Types.tpl_type_code, Ref_Template_Types.Template_Type_Description",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What are the type codes and descriptions for all template types?",
        "gold_select": "select Ref_Template_Types.tpl_type_code, Ref_Template_Types.Template_Type_Description",
        "select_candidates": [
            "select Ref_Template_Types.tpl_type_code, Ref_Template_Types.Template_Type_Description",
            "select Ref_Template_Types.Template_Type_Description, Ref_Template_Types.tpl_type_code",
            "select tpl_c0, Ref_Template_Types.Template_Type_Description",
            "select Documents.doc_id, Ref_Template_Types.Template_Type_Description"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Ref_Template_Types",
        "table_candidates": [
            "Ref_Template_Types"
        ],
        "align_scores": [
            0.9847053289413452,
            0.00010896681487793103,
            0.9890556335449219,
            0.00011086904851254076,
            0.0005906862206757069,
            0.00010030035628005862,
            0.00031836176640354097,
            0.00012016374239465222
        ],
        "align_select": "select Ref_Template_Types.tpl_type_code, Ref_Template_Types.Template_Type_Description",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What is the template type descriptions for template type code \"AD\".",
        "gold_select": "select Ref_Template_Types.Template_Type_Description",
        "select_candidates": [
            "select Ref_Template_Types.Template_Type_Description",
            "select Ref_Template_Types.tpl_type_code, Ref_Template_Types.Template_Type_Description",
            "select Ref_Template_Types.Template_Type_Description, t0.c2",
            "select Ref_Template_Types.Template_Type_Description, Ref_Template_Types.tpl_type_code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Ref_Template_Types",
        "table_candidates": [
            "Ref_Template_Types"
        ],
        "align_scores": [
            0.995912492275238,
            9.373902139486745e-05,
            0.00015709766012150794,
            8.055185026023537e-05,
            0.00025155828916467726,
            7.785455090925097e-05,
            0.00014971315977163613,
            7.53669228288345e-05
        ],
        "align_select": "select Ref_Template_Types.Template_Type_Description",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the template type description of the template type with the code AD.",
        "gold_select": "select Ref_Template_Types.Template_Type_Description",
        "select_candidates": [
            "select Ref_Template_Types.Template_Type_Description",
            "select Ref_Template_Types.tpl_type_code, Ref_Template_Types.Template_Type_Description",
            "select Ref_Template_Types.Template_Type_Description, t0.c2",
            "select Ref_Template_Types.Template_Type_Description, Ref_Template_Types.tpl_type_code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Ref_Template_Types",
        "table_candidates": [
            "Ref_Template_Types",
            "Ref_Template_Types Templates"
        ],
        "align_scores": [
            0.9961712956428528,
            6.975772703299299e-05,
            0.00016894795408006757,
            6.274088082136586e-05,
            0.00020736560691148043,
            6.963755731703714e-05,
            0.0001111432138714008,
            6.409642082871869e-05
        ],
        "align_select": "select Ref_Template_Types.Template_Type_Description",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the template type code for template type description \"Book\".",
        "gold_select": "select Ref_Template_Types.tpl_type_code",
        "select_candidates": [
            "select Ref_Template_Types.tpl_type_code",
            "select tpl_type_code",
            "select t0.c, Ref_Template_Types.Template_Type_Description",
            "select tpl_Ref_Template_Types.tpl_type_code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Ref_Template_Types",
        "table_candidates": [
            "Ref_Template_Types"
        ],
        "align_scores": [
            0.9961757659912109,
            7.66411903896369e-05,
            0.8840280771255493,
            7.443404319928959e-05,
            0.00017870648298412561,
            7.546652341261506e-05,
            0.9895289540290833,
            7.70420883782208e-05
        ],
        "align_select": "select Ref_Template_Types.tpl_type_code",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the type code of the template type with the description \"Book\".",
        "gold_select": "select Ref_Template_Types.tpl_type_code",
        "select_candidates": [
            "select Ref_Template_Types.tpl_type_code",
            "select tpl_Ref_Template_Types.tpl_type_code",
            "select tpl_c0",
            "select t0.c, Ref_Template_Types.Template_Type_Description"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Ref_Template_Types",
        "table_candidates": [
            "Ref_Template_Types"
        ],
        "align_scores": [
            0.9962045550346375,
            8.348441770067438e-05,
            0.9881966710090637,
            8.252792758867145e-05,
            0.004610189702361822,
            7.704510062467307e-05,
            0.00016603482072241604,
            8.082685235422105e-05
        ],
        "align_select": "select Ref_Template_Types.tpl_type_code",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the distinct template type descriptions for the templates ever used by any document?",
        "gold_select": "select distinct Ref_Template_Types.Template_Type_Description",
        "select_candidates": [
            "select distinct Ref_Template_Types.Template_Type_Description",
            "select distinct Ref_Template_Types.Template_Type_Description, Templates.Template_Details",
            "select distinct Ref_Template_Types.Template_Type_Description, Templates.tpl_tpye_code",
            "select distinct Ref_Template_Types.Template_Type_Description, t0.c2"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Ref_Template_Types Templates Documents",
        "table_candidates": [
            "Ref_Template_Types Templates Documents",
            "Ref_Template_Types Templates"
        ],
        "align_scores": [
            0.9682401418685913,
            0.028136415407061577,
            0.000363407947588712,
            0.000132026121718809,
            0.00039263907819986343,
            0.00017314398428425193,
            0.00046559746260754764,
            0.0002099091070704162
        ],
        "align_select": "select distinct Ref_Template_Types.Template_Type_Description",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "Return the different descriptions for templates that have been used in a document.",
        "gold_select": "select distinct Ref_Template_Types.Template_Type_Description",
        "select_candidates": [
            "select distinct Ref_Template_Types.Template_Type_Description",
            "select distinct Ref_Template_Types.Template_Type_Description, Documents.Document_Description",
            "select different Ref_Template_Types.Template_Type_Description",
            "select distinct Documents.Document_Description"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Ref_Template_Types Templates Documents",
        "table_candidates": [
            "Ref_Template_Types Templates Documents",
            "Templates Documents",
            "Ref_Template_Types Templates"
        ],
        "align_scores": [
            0.9785464406013489,
            0.0061761378310620785,
            0.003888395382091403,
            0.00014504994032904506,
            0.09837043285369873,
            0.000307247944874689,
            0.04052594304084778,
            0.004137503448873758
        ],
        "align_select": "select distinct Ref_Template_Types.Template_Type_Description",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What are the template ids with template type description \"Presentation\".",
        "gold_select": "select Templates.Template_ID",
        "select_candidates": [
            "select Templates.Template_ID",
            "select Templates.Template_ID, Ref_Template_Types.Template_Type_Description",
            "select Templates.Template_ID, Templates.Template_Details",
            "select Templates.Template_ID, Templates.tpl_tpye_code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Ref_Template_Types Templates",
        "table_candidates": [
            "Ref_Template_Types Templates",
            "Ref_Template_Types Templates Documents",
            "Ref_Template_Types Templates Paragraphs"
        ],
        "align_scores": [
            0.9966046810150146,
            0.00011624456237768754,
            0.0001506450935266912,
            6.927268259460106e-05,
            0.000139736250275746,
            6.459478754550219e-05,
            0.00013199842942412943,
            6.77239295328036e-05
        ],
        "align_select": "select Templates.Template_ID",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the ids corresponding to templates with the description 'Presentation'.",
        "gold_select": "select Templates.Template_ID",
        "select_candidates": [
            "select Templates.Template_ID",
            "select Templates.Template_ID ",
            "select Templates.Template_IDs",
            "select Templates.ver_no"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Ref_Template_Types Templates",
        "table_candidates": [
            "Ref_Template_Types Templates",
            "Ref_Template_Types Templates Documents",
            "Ref_Template_Types Templates Paragraphs"
        ],
        "align_scores": [
            0.9966578483581543,
            0.00011376210750313476,
            0.9966578483581543,
            0.00011376210750313476,
            0.9965102076530457,
            0.00010146202839678153,
            0.014982116408646107,
            7.684221054660156e-05
        ],
        "align_select": "select Templates.Template_ID",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many paragraphs for the document with name 'Summer Show'?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Documents.doc_id",
            "select count(*), Documents.Template_ID",
            "select count(*), Documents.Document_Description"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents Paragraphs",
        "table_candidates": [
            "Documents Paragraphs",
            "Ref_Template_Types Documents Paragraphs",
            "Templates Documents Paragraphs"
        ],
        "align_scores": [
            0.9955456256866455,
            6.71743109705858e-05,
            0.00017645586922299117,
            6.206362741068006e-05,
            0.00019535089086275548,
            6.486392521765083e-05,
            0.00027530299848876894,
            5.9805228374898434e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Count the number of paragraphs in the document named 'Summer Show'.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Documents.doc_id",
            "select count(*), Documents.Template_ID",
            "select count(*), Documents.doc_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents Paragraphs",
        "table_candidates": [
            "Documents Paragraphs",
            "Ref_Template_Types Documents Paragraphs",
            "Templates Documents Paragraphs"
        ],
        "align_scores": [
            0.996163010597229,
            7.369914965238422e-05,
            0.00017337541794404387,
            6.292117905104533e-05,
            0.00020684055925812572,
            6.825225136708468e-05,
            0.00020467604917939752,
            5.8125628129346296e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show paragraph details for paragraph with text 'Korea '.",
        "gold_select": "select Paragraphs.Other_Details",
        "select_candidates": [
            "select Paragraphs.Other_Details",
            "select Paragraphs.para_txt, Paragraphs.Other_Details",
            "select Paragraphs.Document_ID, Paragraphs.Other_Details",
            "select Paragraphs.Document_ID, Paragraphs.para_txt"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Paragraphs",
        "table_candidates": [
            "Paragraphs"
        ],
        "align_scores": [
            0.9958556294441223,
            0.00031484413193538785,
            0.00024012142966967076,
            0.00010284347808919847,
            0.00022336268739309162,
            0.00013198245142120868,
            0.0002640580350998789,
            0.00014044235285837203
        ],
        "align_select": "select Paragraphs.Other_Details",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the details for the paragraph that includes the text 'Korea '?",
        "gold_select": "select Paragraphs.Other_Details",
        "select_candidates": [
            "select Paragraphs.Other_Details",
            "select Paragraphs.para_txt, Paragraphs.Other_Details",
            "select Paragraphs.Document_ID, Paragraphs.para_txt",
            "select Paragraphs.Document_ID, Paragraphs.Other_Details"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Paragraphs",
        "table_candidates": [
            "Paragraphs",
            "Documents Paragraphs",
            "Templates Paragraphs"
        ],
        "align_scores": [
            0.9943655729293823,
            0.0001441605854779482,
            0.00031804258469492197,
            8.400709339184687e-05,
            0.00045163623872213066,
            8.532737410860136e-05,
            0.00040178082417696714,
            8.531443745596334e-05
        ],
        "align_select": "select Paragraphs.Other_Details",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show all paragraph ids and texts for the document with name 'Welcome to NY'.",
        "gold_select": "select Paragraphs.para_id, Paragraphs.para_txt",
        "select_candidates": [
            "select Paragraphs.para_id, Paragraphs.para_txt",
            "select Documents.doc_id, Paragraphs.para_txt",
            "select Documents.doc_id, Documents.doc_name",
            "select Paragraphs.Document_ID, Paragraphs.para_txt"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents Paragraphs",
        "table_candidates": [
            "Documents Paragraphs",
            "Ref_Template_Types Documents Paragraphs"
        ],
        "align_scores": [
            0.9958159327507019,
            0.00016445557412225753,
            0.000427837367169559,
            9.266425331588835e-05,
            0.0002677831216715276,
            8.421530947089195e-05,
            0.0010669896146282554,
            9.036048868438229e-05
        ],
        "align_select": "select Paragraphs.para_id, Paragraphs.para_txt",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the ids and texts of paragraphs in the document titled 'Welcome to NY'?",
        "gold_select": "select Paragraphs.para_id, Paragraphs.para_txt",
        "select_candidates": [
            "select Paragraphs.para_id, Paragraphs.para_txt",
            "select Documents.doc_id, Paragraphs.para_txt",
            "select Documents.doc_id, Documents.doc_name",
            "select para_Paragraphs.para_id, Paragraphs.para_txt"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents Paragraphs",
        "table_candidates": [
            "Documents Paragraphs"
        ],
        "align_scores": [
            0.9951990246772766,
            0.00019743391021620482,
            0.0005300606717355549,
            0.00011508142779348418,
            0.0006079637678340077,
            7.643303251825273e-05,
            0.00044762404286302626,
            8.539779082639143e-05
        ],
        "align_select": "select Paragraphs.para_id, Paragraphs.para_txt",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show all paragraph texts for the document \"Customer reviews\".",
        "gold_select": "select Paragraphs.para_txt",
        "select_candidates": [
            "select Paragraphs.para_txt",
            "select Paragraphs.Document_ID, Paragraphs.para_txt",
            "select Paragraphs.para_id, Paragraphs.para_txt",
            "select Paragraphs.para_txt, Documents.Document_Description"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents Paragraphs",
        "table_candidates": [
            "Documents Paragraphs",
            "Ref_Template_Types Documents Paragraphs",
            "Templates Documents Paragraphs"
        ],
        "align_scores": [
            0.9950435161590576,
            0.0001131918397732079,
            0.00022474012803286314,
            7.182175613706931e-05,
            0.00015959188749548048,
            6.32787196082063e-05,
            0.00026858190540224314,
            6.525764911202714e-05
        ],
        "align_select": "select Paragraphs.para_txt",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the paragraph texts for the document with the name 'Customer reviews'?",
        "gold_select": "select Paragraphs.para_txt",
        "select_candidates": [
            "select Paragraphs.para_txt",
            "select Paragraphs.para_txt, Documents.Document_Description",
            "select Paragraphs.Document_ID, Paragraphs.para_txt",
            "select Paragraphs.para_id, Paragraphs.para_txt"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents Paragraphs",
        "table_candidates": [
            "Documents Paragraphs",
            "Ref_Template_Types Documents Paragraphs",
            "Templates Documents Paragraphs"
        ],
        "align_scores": [
            0.994537889957428,
            0.00013571165618486702,
            0.0002677729062270373,
            6.509214290417731e-05,
            0.0001864823279902339,
            7.084489334374666e-05,
            0.0001544016704428941,
            6.517877773148939e-05
        ],
        "align_select": "select Paragraphs.para_txt",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show all document ids, names and the number of paragraphs in each document.",
        "gold_select": "select Paragraphs.Document_ID, Documents.doc_name, count(*)",
        "select_candidates": [
            "select Documents.doc_id, Documents.doc_name, count(*)",
            "select Paragraphs.Document_ID, Documents.doc_name, count(*)",
            "select Documents.doc_id, Documents.doc_name, count(*)",
            "select Documents.doc_id, Documents.doc_name.c2, count(*)"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents Paragraphs",
        "table_candidates": [
            "Documents Paragraphs"
        ],
        "align_scores": [
            0.9925111532211304,
            0.00017818922060541809,
            0.9221317768096924,
            0.00016280764248222113,
            0.9925111532211304,
            0.00017818922060541809,
            0.0003355861408635974,
            0.00014618673594668508
        ],
        "align_select": "select Documents.doc_id, Documents.doc_name, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "What are the ids and names of each document, as well as the number of paragraphs in each?",
        "gold_select": "select Paragraphs.Document_ID, Documents.doc_name, count(*)",
        "select_candidates": [
            "select Documents.doc_id, Documents.doc_name, count(*)",
            "select Paragraphs.Document_ID, Documents.doc_name, count(*)",
            "select Documents.doc_id, Documents.doc_name, count(*)",
            "select Documents.doc_id, Documents.doc_name, count(*), Paragraphs.Document_ID"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents Paragraphs",
        "table_candidates": [
            "Documents Paragraphs"
        ],
        "align_scores": [
            0.9908789992332458,
            0.00026495277415961027,
            0.08546283841133118,
            0.0002247019874630496,
            0.9908789992332458,
            0.00026495277415961027,
            0.0006341384723782539,
            0.0001637367531657219
        ],
        "align_select": "select Documents.doc_id, Documents.doc_name, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "What is the document id and name with greatest number of paragraphs?",
        "gold_select": "select Paragraphs.Document_ID, Documents.doc_name",
        "select_candidates": [
            "select Documents.doc_id, Documents.doc_name",
            "select Paragraphs.Document_ID, Documents.doc_name",
            "select Documents.doc_id, Documents.doc_name, Documents.Document_Description",
            "select Documents.Template_ID, Documents.doc_name"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-UNION-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents Paragraphs",
        "table_candidates": [
            "Documents Paragraphs"
        ],
        "align_scores": [
            0.9947392344474792,
            7.609058229718357e-05,
            0.0035695675760507584,
            8.429493755102158e-05,
            0.0004491230065468699,
            5.712856363970786e-05,
            0.0008899333188310266,
            7.154785271268338e-05
        ],
        "align_select": "select Documents.doc_id, Documents.doc_name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Return the id and name of the document with the most paragraphs.",
        "gold_select": "select Paragraphs.Document_ID, Documents.doc_name",
        "select_candidates": [
            "select Documents.doc_id, Documents.doc_name",
            "select Paragraphs.Document_ID, Documents.doc_name",
            "select Documents.doc_id, Documents.doc_name, Documents.Document_Description",
            "select Documents.Template_ID, Documents.doc_name"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents Paragraphs",
        "table_candidates": [
            "Documents Paragraphs"
        ],
        "align_scores": [
            0.9955073595046997,
            6.85048071318306e-05,
            0.0029508923180401325,
            7.175282371463254e-05,
            0.0002260544861201197,
            5.5870106734801084e-05,
            0.0007748628850094974,
            6.556791049661115e-05
        ],
        "align_select": "select Documents.doc_id, Documents.doc_name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Show the document id with paragraph text 'Brazil' and 'Ireland'.",
        "gold_select": "select Paragraphs.Document_ID",
        "select_candidates": [
            "select Paragraphs.Document_ID",
            "select Paragraphs.para_id",
            "select Paragraphs.Document_ID, Paragraphs.para_txt",
            "select Paragraphs.Document_ID, Paragraphs.para_txt, Paragraphs.Other_Details"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Paragraphs",
        "table_candidates": [
            "Paragraphs",
            "Documents Paragraphs"
        ],
        "align_scores": [
            0.9963451027870178,
            9.076387505047023e-05,
            0.002234364626929164,
            8.973280637292191e-05,
            0.0002062621060758829,
            6.043864777893759e-05,
            0.00016056158347055316,
            5.9550329751800746e-05
        ],
        "align_select": "select Paragraphs.Document_ID",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the ids of documents that contain the paragraph text 'Brazil' and 'Ireland'?",
        "gold_select": "select Paragraphs.Document_ID",
        "select_candidates": [
            "select Paragraphs.Document_ID",
            "select Paragraphs.para_id",
            "select Paragraphs.Document_ID, Paragraphs.para_txt",
            "select Paragraphs.Document_ID, Paragraphs.para_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Paragraphs",
        "table_candidates": [
            "Paragraphs"
        ],
        "align_scores": [
            0.9941238760948181,
            0.00020039983792230487,
            0.9936894178390503,
            0.0005898344679735601,
            0.00016487432003486902,
            6.466863123932853e-05,
            0.00016626660362817347,
            7.489663403248414e-05
        ],
        "align_select": "select Paragraphs.Document_ID",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "Show names of teachers and the courses they are arranged to teach.",
        "gold_select": "select teacher.Name, course.crs",
        "select_candidates": [
            "select teacher.Name, course.crs",
            "select teacher.Name, course.start_date",
            "select teacher.Name, course.crs_id",
            "select teacher.Name, t0.c3"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "course teacher course_arrange",
        "table_candidates": [
            "course teacher course_arrange"
        ],
        "align_scores": [
            0.3812161684036255,
            0.3740254342556,
            0.0003650282451417297,
            0.00034816315746866167,
            0.9000645875930786,
            0.7480942010879517,
            0.016156380996108055,
            0.0036427853628993034
        ],
        "align_select": "select teacher.Name, course.crs_id",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What is the name of each teacher and what course they teach?",
        "gold_select": "select teacher.Name, course.crs",
        "select_candidates": [
            "select teacher.Name, course.crs",
            "select teacher.Name, course.start_date",
            "select teacher.Name, course.crs, course_arrange.Teacher_ID",
            "select course_arrange.Teacher_ID, course.crs"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "course teacher course_arrange",
        "table_candidates": [
            "course teacher course_arrange",
            "course teacher"
        ],
        "align_scores": [
            0.5212497115135193,
            0.2432388961315155,
            0.0007019730401225388,
            0.0004670412454288453,
            0.00020478067744988948,
            0.00015217588224913925,
            0.0003266397106926888,
            0.0006043772445991635
        ],
        "align_select": "select teacher.Name, course.crs",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "Show names of teachers and the courses they are arranged to teach in ascending alphabetical order of the teacher's name.",
        "gold_select": "select teacher.Name, course.crs",
        "select_candidates": [
            "select teacher.Name, course.crs",
            "select teacher.Name, course_arrange.crs_id",
            "select teacher.Name, course.start_date",
            "select teacher.Name, course.crs_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "course teacher course_arrange",
        "table_candidates": [
            "course teacher course_arrange"
        ],
        "align_scores": [
            0.8430609107017517,
            0.8430609107017517,
            0.8275251388549805,
            0.8275251388549805,
            0.0003513782867230475,
            0.0003513782867230475,
            0.927665650844574,
            0.927665650844574
        ],
        "align_select": "select teacher.Name, course.crs",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "What are the names of the teachers and the courses they teach in ascending alphabetical order by the name of the teacher?",
        "gold_select": "select teacher.Name, course.crs",
        "select_candidates": [
            "select teacher.Name, course.crs",
            "select teacher.Name, course.start_date",
            "select teacher.Name, course.crs_id",
            "select teacher.Name, t0.c3"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "course teacher course_arrange",
        "table_candidates": [
            "course teacher course_arrange",
            "course teacher"
        ],
        "align_scores": [
            0.8673587441444397,
            0.8673587441444397,
            0.0014141228748485446,
            0.0014141228748485446,
            0.8804427981376648,
            0.8804427981376648,
            0.002198783215135336,
            0.002198783215135336
        ],
        "align_select": "select teacher.Name, course.crs",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "Show the name of the teacher for the math course.",
        "gold_select": "select teacher.Name",
        "select_candidates": [
            "select teacher.Name",
            "select teacher.Name, course_arrange.Teacher_ID",
            "select teacher.Name, course.crs",
            "select teacher.Name, course_arrange.Grade"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "course teacher course_arrange",
        "table_candidates": [
            "course teacher course_arrange",
            "course teacher"
        ],
        "align_scores": [
            0.9946358799934387,
            6.710286834277213e-05,
            0.00013250159099698067,
            5.937528476351872e-05,
            0.0001879355259006843,
            6.388778274413198e-05,
            0.00015997154696378857,
            6.094651689636521e-05
        ],
        "align_select": "select teacher.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of the people who teach math courses?",
        "gold_select": "select teacher.Name",
        "select_candidates": [
            "select teacher.Name",
            "select distinct teacher.Name",
            "select distinct teacher.Name, course.crs",
            "select teacher.Name, course.crs"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "course teacher course_arrange",
        "table_candidates": [
            "course teacher course_arrange",
            "course teacher"
        ],
        "align_scores": [
            0.9871556758880615,
            0.00010206464503426105,
            0.12088047713041306,
            0.00011233893019380048,
            0.0005217434372752905,
            6.178691546665505e-05,
            0.00022330135107040405,
            6.925517664058134e-05
        ],
        "align_select": "select teacher.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show names of teachers and the courses they are arranged to teach.",
        "gold_select": "select teacher.Name, course.crs",
        "select_candidates": [
            "select teacher.Name, course.crs",
            "select teacher.Name, course.Staring_Date",
            "select teacher.Name, course.crs_id",
            "select teacher.Name, course_arrange.crs_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "course teacher course_arrange",
        "table_candidates": [
            "course teacher course_arrange"
        ],
        "align_scores": [
            0.3812161684036255,
            0.3740254342556,
            0.0014373194426298141,
            0.0009776958031579852,
            0.9000645875930786,
            0.7480942010879517,
            0.4931512475013733,
            0.3784966766834259
        ],
        "align_select": "select teacher.Name, course.crs_id",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What is the name of each teacher and what course they teach?",
        "gold_select": "select teacher.Name, course.crs",
        "select_candidates": [
            "select teacher.Name, course.crs",
            "select teacher.Name, course.Staring_Date",
            "select teacher.Name, course.crs, course_arrange.crs_id",
            "select teacher.Name, course.crs, teacher.tchr_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "course teacher course_arrange",
        "table_candidates": [
            "course teacher course_arrange",
            "course teacher"
        ],
        "align_scores": [
            0.2432388961315155,
            0.5212497115135193,
            0.0020077195949852467,
            0.009149373508989811,
            0.00021512573584914207,
            0.00034781449357979,
            0.00017195100372191519,
            0.00026179663836956024
        ],
        "align_select": "select teacher.Name, course.crs",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "Show names of teachers and the courses they are arranged to teach in ascending alphabetical order of the teacher's name.",
        "gold_select": "select teacher.Name, course.crs",
        "select_candidates": [
            "select teacher.Name, course.crs",
            "select teacher.Name, course.Staring_Date",
            "select teacher.Name, course_arrange.crs_id",
            "select teacher.Name, course.crs_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "course teacher course_arrange",
        "table_candidates": [
            "course teacher course_arrange"
        ],
        "align_scores": [
            0.8430609107017517,
            0.8430609107017517,
            0.000777684967033565,
            0.000777684967033565,
            0.8275251388549805,
            0.8275251388549805,
            0.927665650844574,
            0.927665650844574
        ],
        "align_select": "select teacher.Name, course.crs",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "What are the names of the teachers and the courses they teach in ascending alphabetical order by the name of the teacher?",
        "gold_select": "select teacher.Name, course.crs",
        "select_candidates": [
            "select teacher.Name, course.crs",
            "select teacher.Name, course.Staring_Date",
            "select teacher.Name, course.crs_id",
            "select teacher.Name, t0.c3"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "course teacher course_arrange",
        "table_candidates": [
            "course teacher course_arrange",
            "course teacher"
        ],
        "align_scores": [
            0.8673587441444397,
            0.8673587441444397,
            0.0017826121766120195,
            0.0017826121766120195,
            0.8804427981376648,
            0.8804427981376648,
            0.002198783215135336,
            0.002198783215135336
        ],
        "align_select": "select teacher.Name, course.crs",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "Show the name of the teacher for the math course.",
        "gold_select": "select teacher.Name",
        "select_candidates": [
            "select teacher.Name",
            "select teacher.Name, course.crs",
            "select teacher.Name, teacher.Age",
            "select teacher.Name, course_arrange.grd"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "course teacher course_arrange",
        "table_candidates": [
            "course teacher course_arrange",
            "course teacher"
        ],
        "align_scores": [
            0.9946358799934387,
            0.0002172359818359837,
            0.0001879355259006843,
            8.274083666037768e-05,
            0.00016266395687125623,
            9.37336590141058e-05,
            0.00021197991736698896,
            8.368950511794537e-05
        ],
        "align_select": "select teacher.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of the people who teach math courses?",
        "gold_select": "select teacher.Name",
        "select_candidates": [
            "select teacher.Name",
            "select distinct teacher.Name",
            "select teacher.Name, course.crs",
            "select distinct teacher.Name, course.crs"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "course teacher course_arrange",
        "table_candidates": [
            "course teacher",
            "course teacher course_arrange"
        ],
        "align_scores": [
            0.9871556758880615,
            0.00010206464503426105,
            0.12088047713041306,
            0.00011233893019380048,
            0.00022330135107040405,
            6.925517664058134e-05,
            0.0005217434372752905,
            6.178691546665505e-05
        ],
        "align_select": "select teacher.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show names of teachers and the number of courses they teach.",
        "gold_select": "select teacher.Name, count(*)",
        "select_candidates": [
            "select teacher.Name, count(*)",
            "select teacher.Name, count(distinct course.crs)",
            "select teacher.Name, count(*), course.crs",
            "select teacher.Name, count(distinct course.crs_id)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher course_arrange",
        "table_candidates": [
            "course teacher",
            "course teacher course_arrange"
        ],
        "align_scores": [
            0.9918602108955383,
            0.0001537667994853109,
            0.0007885710219852626,
            0.0001206349115818739,
            0.0010564704425632954,
            9.419654088560492e-05,
            0.0010482409270480275,
            9.688323189038783e-05
        ],
        "align_select": "select teacher.Name, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "What are the names of the teachers and how many courses do they teach?",
        "gold_select": "select teacher.Name, count(*)",
        "select_candidates": [
            "select teacher.Name, count(*)",
            "select teacher.Name, count(distinct course.crs)",
            "select teacher.Name, count(*), course.crs",
            "select teacher.Name, count(course.crs)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher course_arrange",
        "table_candidates": [
            "course teacher",
            "course teacher course_arrange"
        ],
        "align_scores": [
            0.98040372133255,
            0.00021888053743168712,
            0.0016061310889199376,
            0.00011403687676647678,
            0.0009335411014035344,
            0.00010805675992742181,
            0.015768419951200485,
            0.00015960786549840122
        ],
        "align_select": "select teacher.Name, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "Show names of teachers that teach at least two courses.",
        "gold_select": "select teacher.Name",
        "select_candidates": [
            "select teacher.Name",
            "select teacher.Name, course.crs",
            "select teacher.Name, course.Staring_Date",
            "select teacher.Name, t0.c3"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher course_arrange",
        "table_candidates": [
            "course teacher",
            "course teacher course_arrange"
        ],
        "align_scores": [
            0.986960768699646,
            7.999122317414731e-05,
            0.0013335122494027019,
            7.379338057944551e-05,
            0.0010651848278939724,
            6.509554805234075e-05,
            0.0008662418113090098,
            6.814482185291126e-05
        ],
        "align_select": "select teacher.Name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the names of the teachers who teach at least two courses?",
        "gold_select": "select teacher.Name",
        "select_candidates": [
            "select teacher.Name",
            "select teacher.Name, course.crs",
            "select teacher.Name, course.Staring_Date",
            "select teacher.Name, t0.c3"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher course_arrange",
        "table_candidates": [
            "course teacher",
            "course teacher course_arrange"
        ],
        "align_scores": [
            0.9740442037582397,
            9.988612146116793e-05,
            0.0018024516757577658,
            6.940188177395612e-05,
            0.0011960759293287992,
            6.489164661616087e-05,
            0.0009242877713404596,
            6.429108907468617e-05
        ],
        "align_select": "select teacher.Name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "List the names of teachers who have not been arranged to teach courses.",
        "gold_select": "select teacher.Name",
        "select_candidates": [
            "select teacher.Name",
            "select teacher.Name, teacher.Age",
            "select teacher.Name, teacher.Age, teacher.Hometown",
            "select teacher.Name, teacher.Hometown"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher",
        "table_candidates": [
            "teacher",
            "teacher course_arrange"
        ],
        "align_scores": [
            0.9044564366340637,
            0.00048131696530617774,
            0.00021128941443748772,
            8.408556459471583e-05,
            0.00017755321459844708,
            7.239725528052077e-05,
            0.00022802352032158524,
            9.805376612348482e-05
        ],
        "align_select": "select teacher.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of the teachers whose courses have not been arranged?",
        "gold_select": "select teacher.Name",
        "select_candidates": [
            "select teacher.Name",
            "select teacher.Name, course.crs",
            "select teacher.Name, teacher.Age",
            "select teacher.Name, course.Staring_Date"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher",
        "table_candidates": [
            "course teacher",
            "course teacher course_arrange"
        ],
        "align_scores": [
            0.9635009169578552,
            0.00024183568893931806,
            0.00040059941238723695,
            0.00010025483788922429,
            0.00020075251813977957,
            7.097417255863547e-05,
            0.0004181133408565074,
            9.221697837347165e-05
        ],
        "align_select": "select teacher.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show names of teachers and the courses they are arranged to teach.",
        "gold_select": "select teacher.Name, course.crs",
        "select_candidates": [
            "select teacher.Name, course.crs",
            "select teacher.Name, course.start_date",
            "select teacher.Name, course.Course_ID",
            "select teacher.Name, course_arrange.crs_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "course teacher course_arrange",
        "table_candidates": [
            "course teacher course_arrange",
            "course teacher"
        ],
        "align_scores": [
            0.3812161684036255,
            0.3740254342556,
            0.0003650282451417297,
            0.00034816315746866167,
            0.9673560857772827,
            0.8435764908790588,
            0.4931512475013733,
            0.3784966766834259
        ],
        "align_select": "select teacher.Name, course.Course_ID",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What is the name of each teacher and what course they teach?",
        "gold_select": "select teacher.Name, course.crs",
        "select_candidates": [
            "select teacher.Name, course.crs",
            "select teacher.Name, course.start_date",
            "select teacher.Name, course.Course_ID",
            "select teacher.Name, t0.c3"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "course teacher course_arrange",
        "table_candidates": [
            "course teacher course_arrange",
            "course teacher"
        ],
        "align_scores": [
            0.5212497115135193,
            0.2432388961315155,
            0.0007019730401225388,
            0.0004670412454288453,
            0.9914377331733704,
            0.9559098482131958,
            0.003851181361824274,
            0.002627129666507244
        ],
        "align_select": "select teacher.Name, course.Course_ID",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "Show names of teachers and the courses they are arranged to teach in ascending alphabetical order of the teacher's name.",
        "gold_select": "select teacher.Name, course.crs",
        "select_candidates": [
            "select teacher.Name, course.crs",
            "select teacher.Name, course.start_date",
            "select teacher.Name, course_arrange.crs_id",
            "select teacher.Name, course.Course_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "course teacher course_arrange",
        "table_candidates": [
            "course teacher course_arrange"
        ],
        "align_scores": [
            0.8430609107017517,
            0.8430609107017517,
            0.0003513782867230475,
            0.0003513782867230475,
            0.8275251388549805,
            0.8275251388549805,
            0.9696752429008484,
            0.9696752429008484
        ],
        "align_select": "select teacher.Name, course.crs",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "What are the names of the teachers and the courses they teach in ascending alphabetical order by the name of the teacher?",
        "gold_select": "select teacher.Name, course.crs",
        "select_candidates": [
            "select teacher.Name, course.crs",
            "select teacher.Name, course.Course_ID",
            "select teacher.Name, course.start_date",
            "select teacher.Name, t0.c3"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "course teacher course_arrange",
        "table_candidates": [
            "course teacher course_arrange",
            "course teacher"
        ],
        "align_scores": [
            0.8673587441444397,
            0.8673587441444397,
            0.9499488472938538,
            0.9499488472938538,
            0.0014141228748485446,
            0.0014141228748485446,
            0.002198783215135336,
            0.002198783215135336
        ],
        "align_select": "select teacher.Name, course.crs",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "Show the name of the teacher for the math course.",
        "gold_select": "select teacher.Name",
        "select_candidates": [
            "select teacher.Name",
            "select teacher.Name, course.crs",
            "select teacher.Name, teacher.Age",
            "select teacher.Name, course_arrange.Grade"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "course teacher course_arrange",
        "table_candidates": [
            "course teacher course_arrange",
            "course teacher"
        ],
        "align_scores": [
            0.9946358799934387,
            0.0002172359818359837,
            0.0001879355259006843,
            8.274083666037768e-05,
            0.00016266395687125623,
            9.37336590141058e-05,
            0.00015997154696378857,
            8.443097613053396e-05
        ],
        "align_select": "select teacher.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of the people who teach math courses?",
        "gold_select": "select teacher.Name",
        "select_candidates": [
            "select teacher.Name",
            "select distinct teacher.Name",
            "select distinct teacher.Name, course.crs",
            "select teacher.Name, course.crs"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "course teacher course_arrange",
        "table_candidates": [
            "course teacher",
            "course teacher course_arrange"
        ],
        "align_scores": [
            0.9871556758880615,
            0.00010206464503426105,
            0.12088047713041306,
            0.00011233893019380048,
            0.0005217434372752905,
            6.178691546665505e-05,
            0.00022330135107040405,
            6.925517664058134e-05
        ],
        "align_select": "select teacher.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show names of teachers and the number of courses they teach.",
        "gold_select": "select teacher.Name, count(*)",
        "select_candidates": [
            "select teacher.Name, count(*)",
            "select teacher.Name, count(distinct course.crs)",
            "select teacher.Name, count(distinct course.Course_ID)",
            "select teacher.Name, count(*), course.crs"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher course_arrange",
        "table_candidates": [
            "course teacher",
            "course teacher course_arrange"
        ],
        "align_scores": [
            0.9918602108955383,
            0.0001537667994853109,
            0.0007885710219852626,
            0.0001206349115818739,
            0.03301680460572243,
            0.00011319691111566499,
            0.0010564704425632954,
            9.419654088560492e-05
        ],
        "align_select": "select teacher.Name, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "What are the names of the teachers and how many courses do they teach?",
        "gold_select": "select teacher.Name, count(*)",
        "select_candidates": [
            "select teacher.Name, count(*)",
            "select teacher.Name, count(distinct course.crs)",
            "select teacher.Name, count(distinct course.Course_ID)",
            "select teacher.Name, count(*), course.crs"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher course_arrange",
        "table_candidates": [
            "course teacher",
            "course teacher course_arrange"
        ],
        "align_scores": [
            0.98040372133255,
            0.00021888053743168712,
            0.0016061310889199376,
            0.00011403687676647678,
            0.17211215198040009,
            0.00013156213390175253,
            0.0009335411014035344,
            0.00010805675992742181
        ],
        "align_select": "select teacher.Name, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "Show names of teachers that teach at least two courses.",
        "gold_select": "select teacher.Name",
        "select_candidates": [
            "select teacher.Name",
            "select teacher.Name, course.crs",
            "select teacher.Name, course.start_date",
            "select teacher.Name, t0.c3"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher course_arrange",
        "table_candidates": [
            "course teacher",
            "course teacher course_arrange"
        ],
        "align_scores": [
            0.986960768699646,
            7.999122317414731e-05,
            0.0013335122494027019,
            7.379338057944551e-05,
            0.00031129593844525516,
            5.524800144485198e-05,
            0.0008662418113090098,
            6.814482185291126e-05
        ],
        "align_select": "select teacher.Name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the names of the teachers who teach at least two courses?",
        "gold_select": "select teacher.Name",
        "select_candidates": [
            "select teacher.Name",
            "select teacher.Name, course.crs",
            "select teacher.Name, course.start_date",
            "select teacher.Name, t0.c3"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher course_arrange",
        "table_candidates": [
            "course teacher",
            "course teacher course_arrange"
        ],
        "align_scores": [
            0.9740442037582397,
            9.988612146116793e-05,
            0.0018024516757577658,
            6.940188177395612e-05,
            0.0003544905630405992,
            5.726301242248155e-05,
            0.0009242877713404596,
            6.429108907468617e-05
        ],
        "align_select": "select teacher.Name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "List the names of teachers who have not been arranged to teach courses.",
        "gold_select": "select teacher.Name",
        "select_candidates": [
            "select teacher.Name",
            "select teacher.Name, teacher.Age",
            "select teacher.Name, teacher.Age, teacher.Hometown",
            "select teacher.Name, teacher.Hometown"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher",
        "table_candidates": [
            "teacher"
        ],
        "align_scores": [
            0.9044564366340637,
            0.00048131696530617774,
            0.00021128941443748772,
            8.408556459471583e-05,
            0.00017755321459844708,
            7.239725528052077e-05,
            0.00022802352032158524,
            9.805376612348482e-05
        ],
        "align_select": "select teacher.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of the teachers whose courses have not been arranged?",
        "gold_select": "select teacher.Name",
        "select_candidates": [
            "select teacher.Name",
            "select teacher.Name, course.crs",
            "select teacher.Name, teacher.Age",
            "select teacher.Name, course.start_date"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher",
        "table_candidates": [
            "course teacher",
            "course teacher course_arrange"
        ],
        "align_scores": [
            0.9635009169578552,
            0.00024183568893931806,
            0.00040059941238723695,
            0.00010025483788922429,
            0.00020075251813977957,
            7.097417255863547e-05,
            0.0003018645220436156,
            8.709799294592813e-05
        ],
        "align_select": "select teacher.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show names of teachers and the courses they are arranged to teach.",
        "gold_select": "select teacher.Name, course.crs",
        "select_candidates": [
            "select teacher.Name, course.crs",
            "select teacher.Name, t0.c3",
            "select teacher.Name, course.Staring_Date",
            "select teacher.Name, course.crs_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "course teacher course_arrange",
        "table_candidates": [
            "course teacher course_arrange"
        ],
        "align_scores": [
            0.3812161684036255,
            0.3740254342556,
            0.016156380996108055,
            0.0036427853628993034,
            0.0014373194426298141,
            0.0009776958031579852,
            0.9000645875930786,
            0.7480942010879517
        ],
        "align_select": "select teacher.Name, course.crs_id",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What is the name of each teacher and what course they teach?",
        "gold_select": "select teacher.Name, course.crs",
        "select_candidates": [
            "select teacher.Name, course.crs",
            "select teacher.Name, t0.c3",
            "select teacher.Name, course.crs, course_arrange.Course_ID",
            "select teacher.Name, course.Staring_Date"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "course teacher course_arrange",
        "table_candidates": [
            "course teacher course_arrange",
            "course teacher"
        ],
        "align_scores": [
            0.5212497115135193,
            0.2432388961315155,
            0.003851181361824274,
            0.002627129666507244,
            0.00031818178831599653,
            0.00027049772324971855,
            0.009149373508989811,
            0.0020077195949852467
        ],
        "align_select": "select teacher.Name, course.crs",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "Show names of teachers and the courses they are arranged to teach in ascending alphabetical order of the teacher's name.",
        "gold_select": "select teacher.Name, course.crs",
        "select_candidates": [
            "select teacher.Name, course.crs",
            "select teacher.Name, course_arrange.Course_ID",
            "select teacher.Name, t0.c3",
            "select teacher.Name, course.Staring_Date"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "course teacher course_arrange",
        "table_candidates": [
            "course teacher course_arrange"
        ],
        "align_scores": [
            0.8430609107017517,
            0.8430609107017517,
            0.9823017120361328,
            0.9823017120361328,
            0.0034888642840087414,
            0.0034888642840087414,
            0.000777684967033565,
            0.000777684967033565
        ],
        "align_select": "select teacher.Name, course.crs",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "What are the names of the teachers and the courses they teach in ascending alphabetical order by the name of the teacher?",
        "gold_select": "select teacher.Name, course.crs",
        "select_candidates": [
            "select teacher.Name, course.crs",
            "select teacher.Name, t0.c3",
            "select teacher.Name, course.Staring_Date",
            "select teacher.Name, course.crs_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "course teacher course_arrange",
        "table_candidates": [
            "course teacher course_arrange",
            "course teacher"
        ],
        "align_scores": [
            0.8673587441444397,
            0.8673587441444397,
            0.002198783215135336,
            0.002198783215135336,
            0.0017826121766120195,
            0.0017826121766120195,
            0.8804427981376648,
            0.8804427981376648
        ],
        "align_select": "select teacher.Name, course.crs",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "Show the name of the teacher for the math course.",
        "gold_select": "select teacher.Name",
        "select_candidates": [
            "select teacher.Name",
            "select teacher.Name, course_arrange.Teacher_ID",
            "select teacher.Name, course.crs",
            "select teacher.Name, course_arrange.Course_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "course teacher course_arrange",
        "table_candidates": [
            "course teacher course_arrange",
            "course teacher"
        ],
        "align_scores": [
            0.9946358799934387,
            6.710286834277213e-05,
            0.00013250159099698067,
            5.937528476351872e-05,
            0.0001879355259006843,
            6.388778274413198e-05,
            0.00012452648661565036,
            5.822049206472002e-05
        ],
        "align_select": "select teacher.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of the people who teach math courses?",
        "gold_select": "select teacher.Name",
        "select_candidates": [
            "select teacher.Name",
            "select distinct teacher.Name",
            "select distinct teacher.Name, course.crs",
            "select teacher.Name, course.crs"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "course teacher course_arrange",
        "table_candidates": [
            "course teacher course_arrange",
            "course teacher"
        ],
        "align_scores": [
            0.9871556758880615,
            0.00010206464503426105,
            0.12088047713041306,
            0.00011233893019380048,
            0.0005217434372752905,
            6.178691546665505e-05,
            0.00022330135107040405,
            6.925517664058134e-05
        ],
        "align_select": "select teacher.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show names of teachers and the number of courses they teach.",
        "gold_select": "select teacher.Name, count(*)",
        "select_candidates": [
            "select teacher.Name, count(*)",
            "select teacher.Name, count(distinct course_arrange.Course_ID)",
            "select teacher.Name, count(*), course_arrange.Teacher_ID",
            "select teacher.Name, count(*), course.crs"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher course_arrange",
        "table_candidates": [
            "course teacher course_arrange",
            "course teacher"
        ],
        "align_scores": [
            0.9918602108955383,
            0.0001537667994853109,
            0.03797755017876625,
            0.00011914189963135868,
            0.0001967761490959674,
            9.098025475395843e-05,
            0.0010564704425632954,
            9.419654088560492e-05
        ],
        "align_select": "select teacher.Name, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "What are the names of the teachers and how many courses do they teach?",
        "gold_select": "select teacher.Name, count(*)",
        "select_candidates": [
            "select teacher.Name, count(*)",
            "select teacher.Name, count(distinct course_arrange.Course_ID)",
            "select teacher.Name, count(*), course_arrange.Teacher_ID",
            "select teacher.Name, count(course_arrange.Course_ID)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher course_arrange",
        "table_candidates": [
            "course teacher course_arrange",
            "course teacher"
        ],
        "align_scores": [
            0.98040372133255,
            0.00021888053743168712,
            0.19830471277236938,
            0.00012576310837175697,
            0.0001903094962472096,
            9.827224857872352e-05,
            0.030461812391877174,
            0.0001686569448793307
        ],
        "align_select": "select teacher.Name, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "Show names of teachers that teach at least two courses.",
        "gold_select": "select teacher.Name",
        "select_candidates": [
            "select teacher.Name",
            "select teacher.Name, course_arrange.Teacher_ID",
            "select teacher.Name, course.crs",
            "select teacher.Name, course_arrange.Grade"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher course_arrange",
        "table_candidates": [
            "teacher course_arrange",
            "course teacher course_arrange",
            "course teacher"
        ],
        "align_scores": [
            0.986960768699646,
            7.999122317414731e-05,
            0.00035537389339879155,
            5.7223543990403414e-05,
            0.0013335122494027019,
            7.379338057944551e-05,
            0.00022634631022810936,
            5.5321808758890256e-05
        ],
        "align_select": "select teacher.Name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the names of the teachers who teach at least two courses?",
        "gold_select": "select teacher.Name",
        "select_candidates": [
            "select teacher.Name",
            "select teacher.Name, course_arrange.Teacher_ID",
            "select teacher.Name, course.crs",
            "select teacher.Name, teacher.Age"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher course_arrange",
        "table_candidates": [
            "teacher course_arrange",
            "course teacher course_arrange",
            "course teacher"
        ],
        "align_scores": [
            0.9740442037582397,
            9.988612146116793e-05,
            0.0004132004687562585,
            6.0634920373559e-05,
            0.0018024516757577658,
            6.940188177395612e-05,
            0.0001853428693721071,
            5.57036000827793e-05
        ],
        "align_select": "select teacher.Name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "List the names of teachers who have not been arranged to teach courses.",
        "gold_select": "select teacher.Name",
        "select_candidates": [
            "select teacher.Name",
            "select teacher.Name, teacher.Age",
            "select teacher.Name, teacher.Age, teacher.Hometown",
            "select teacher.Name, teacher.Hometown"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher",
        "table_candidates": [
            "teacher"
        ],
        "align_scores": [
            0.9044564366340637,
            0.00048131696530617774,
            0.00021128941443748772,
            8.408556459471583e-05,
            0.00017755321459844708,
            7.239725528052077e-05,
            0.00022802352032158524,
            9.805376612348482e-05
        ],
        "align_select": "select teacher.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of the teachers whose courses have not been arranged?",
        "gold_select": "select teacher.Name",
        "select_candidates": [
            "select teacher.Name",
            "select teacher.Name, course.crs",
            "select teacher.Name, teacher.Age",
            "select teacher.Name, course_arrange.Teacher_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher",
        "table_candidates": [
            "course teacher",
            "course teacher course_arrange",
            "teacher",
            "teacher course_arrange"
        ],
        "align_scores": [
            0.9635009169578552,
            0.0005190891097299755,
            0.00040059941238723695,
            0.00010719439887907356,
            0.00020075251813977957,
            7.381308387266472e-05,
            0.00018197178724221885,
            9.730507736094296e-05
        ],
        "align_select": "select teacher.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show names of teachers and the courses they are arranged to teach.",
        "gold_select": "select teacher.Name, course.Course",
        "select_candidates": [
            "select teacher.Name, course.Course",
            "select course_arrange.tchr_id, course.Course",
            "select teacher.Name, course.Staring_Date",
            "select teacher.Name, t0.c4"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "course teacher course_arrange",
        "table_candidates": [
            "course teacher course_arrange",
            "course teacher"
        ],
        "align_scores": [
            0.992511510848999,
            0.9566658735275269,
            0.0016118161147460341,
            0.0016642006812617183,
            0.0014373194426298141,
            0.0009776958031579852,
            0.01843353733420372,
            0.004588344134390354
        ],
        "align_select": "select teacher.Name, course.Course",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What is the name of each teacher and what course they teach?",
        "gold_select": "select teacher.Name, course.Course",
        "select_candidates": [
            "select teacher.Name, course.Course",
            "select teacher.Name, course.Course, teacher.Teacher_ID",
            "select teacher.Name, course.Course, teacher.Hometown",
            "select distinct teacher.Name, course.Course"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "course teacher course_arrange",
        "table_candidates": [
            "course teacher",
            "course teacher course_arrange"
        ],
        "align_scores": [
            0.9909411072731018,
            0.9930261373519897,
            0.00014974585792515427,
            0.00020966648298781365,
            0.0003437952254898846,
            0.0004929227870889008,
            0.0062410165555775166,
            0.0007865667575970292
        ],
        "align_select": "select teacher.Name, course.Course",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "Show names of teachers and the courses they are arranged to teach in ascending alphabetical order of the teacher's name.",
        "gold_select": "select teacher.Name, course.Course",
        "select_candidates": [
            "select teacher.Name, course.Course",
            "select teacher.Name, course.Course, course_arrange.Course_ID",
            "select course_arrange.tchr_id, course.Course",
            "select teacher.Name, course.Staring_Date"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "course teacher course_arrange",
        "table_candidates": [
            "course teacher course_arrange",
            "course teacher"
        ],
        "align_scores": [
            0.992408037185669,
            0.992408037185669,
            0.0002562897279858589,
            0.0002562897279858589,
            0.0010665527079254389,
            0.0010665527079254389,
            0.000777684967033565,
            0.000777684967033565
        ],
        "align_select": "select teacher.Name, course.Course",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "What are the names of the teachers and the courses they teach in ascending alphabetical order by the name of the teacher?",
        "gold_select": "select teacher.Name, course.Course",
        "select_candidates": [
            "select teacher.Name, course.Course",
            "select teacher.Name, t0.c4",
            "select teacher.Name, course.Course,",
            "select teacher.Name, course.Staring_Date"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "course teacher course_arrange",
        "table_candidates": [
            "course teacher",
            "course teacher course_arrange"
        ],
        "align_scores": [
            0.9945691823959351,
            0.9945691823959351,
            0.0028684716671705246,
            0.0028684716671705246,
            0.0007640942349098623,
            0.0007640942349098623,
            0.0017826121766120195,
            0.0017826121766120195
        ],
        "align_select": "select teacher.Name, course.Course",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "Show the name of the teacher for the math course.",
        "gold_select": "select teacher.Name",
        "select_candidates": [
            "select teacher.Name",
            "select teacher.Name, course.Course",
            "select teacher.Name, teacher.Age",
            "select teacher.Name, teacher.Teacher_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "course teacher course_arrange",
        "table_candidates": [
            "course teacher",
            "course teacher course_arrange"
        ],
        "align_scores": [
            0.9946358799934387,
            6.710286834277213e-05,
            0.00014988271868787706,
            5.934058572165668e-05,
            0.00016266395687125623,
            5.923638673266396e-05,
            0.0001308628561673686,
            5.7579949498176575e-05
        ],
        "align_select": "select teacher.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of the people who teach math courses?",
        "gold_select": "select teacher.Name",
        "select_candidates": [
            "select teacher.Name",
            "select distinct teacher.Name",
            "select teacher.Name, course.Course",
            "select distinct teacher.Name, course.Course"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "course teacher course_arrange",
        "table_candidates": [
            "course teacher",
            "course teacher course_arrange"
        ],
        "align_scores": [
            0.9871556758880615,
            0.00010206464503426105,
            0.12088047713041306,
            0.00011233893019380048,
            0.00016786118794698268,
            5.673538544215262e-05,
            0.0003262180252932012,
            5.5666798289166763e-05
        ],
        "align_select": "select teacher.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show names of teachers and the number of courses they teach.",
        "gold_select": "select teacher.Name, count(*)",
        "select_candidates": [
            "select teacher.Name, count(*)",
            "select teacher.Name, count(distinct course.Course)",
            "select teacher.Name, count(*), course.Course",
            "select teacher.Name, count(course.Course)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher course_arrange",
        "table_candidates": [
            "course teacher",
            "course teacher course_arrange"
        ],
        "align_scores": [
            0.9918602108955383,
            0.0001537667994853109,
            0.00830671563744545,
            0.00012297053763177246,
            0.0008653824916109443,
            9.996252629207447e-05,
            0.02059834636747837,
            0.0001586136786499992
        ],
        "align_select": "select teacher.Name, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "What are the names of the teachers and how many courses do they teach?",
        "gold_select": "select teacher.Name, count(*)",
        "select_candidates": [
            "select teacher.Name, count(*)",
            "select teacher.Name, count(distinct course.Course)",
            "select teacher.Name, count(*), course.Course",
            "select teacher.Name, count(course.Course)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher course_arrange",
        "table_candidates": [
            "course teacher",
            "course teacher course_arrange"
        ],
        "align_scores": [
            0.98040372133255,
            0.00021888053743168712,
            0.02731647714972496,
            0.00010815439600264654,
            0.0013727530604228377,
            0.00010849765385501087,
            0.07967399805784225,
            0.00014939956599846482
        ],
        "align_select": "select teacher.Name, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "Show names of teachers that teach at least two courses.",
        "gold_select": "select teacher.Name",
        "select_candidates": [
            "select teacher.Name",
            "select teacher.Name, course.Course",
            "select teacher.Name, course.Staring_Date",
            "select teacher.Name, t0.c3"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher course_arrange",
        "table_candidates": [
            "course teacher",
            "course teacher course_arrange"
        ],
        "align_scores": [
            0.986960768699646,
            7.999122317414731e-05,
            0.0003111348196398467,
            6.675521581200883e-05,
            0.0010651848278939724,
            6.509554805234075e-05,
            0.0008662418113090098,
            6.814482185291126e-05
        ],
        "align_select": "select teacher.Name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the names of the teachers who teach at least two courses?",
        "gold_select": "select teacher.Name",
        "select_candidates": [
            "select teacher.Name",
            "select teacher.Name, course.Course",
            "select teacher.Name, course.Staring_Date",
            "select teacher.Name, t0.c3"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher course_arrange",
        "table_candidates": [
            "course teacher",
            "course teacher course_arrange"
        ],
        "align_scores": [
            0.9740442037582397,
            9.988612146116793e-05,
            0.0003829862689599395,
            6.278810906223953e-05,
            0.0011960759293287992,
            6.489164661616087e-05,
            0.0009242877713404596,
            6.429108907468617e-05
        ],
        "align_select": "select teacher.Name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "List the names of teachers who have not been arranged to teach courses.",
        "gold_select": "select teacher.Name",
        "select_candidates": [
            "select teacher.Name",
            "select teacher.Name, teacher.Age",
            "select teacher.Name, teacher.Age, teacher.Hometown",
            "select teacher.Name, teacher.Hometown"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher",
        "table_candidates": [
            "teacher"
        ],
        "align_scores": [
            0.9044564366340637,
            0.00048131696530617774,
            0.00021128941443748772,
            8.408556459471583e-05,
            0.00017755321459844708,
            7.239725528052077e-05,
            0.00022802352032158524,
            9.805376612348482e-05
        ],
        "align_select": "select teacher.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of the teachers whose courses have not been arranged?",
        "gold_select": "select teacher.Name",
        "select_candidates": [
            "select teacher.Name",
            "select teacher.Name, course.Course",
            "select teacher.Name, teacher.Age",
            "select teacher.Name, course_arrange.Grade"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher",
        "table_candidates": [
            "course teacher",
            "course teacher course_arrange"
        ],
        "align_scores": [
            0.9635009169578552,
            0.00024183568893931806,
            0.0004041105567011982,
            8.676449942868203e-05,
            0.00020075251813977957,
            7.097417255863547e-05,
            0.00023523808340542018,
            8.35532191558741e-05
        ],
        "align_select": "select teacher.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the names of the visitors whose membership level is higher than 4, and order the results by the level from high to low.",
        "gold_select": "select visitor.Name",
        "select_candidates": [
            "select visitor.Name",
            "select visitor.Name, visitor.lvl_mem",
            "select visitor.Name, visitor.lvl_mem, visitor.Age",
            "select visitor.Name, visitor.lvl_mem - visitor.Age"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY",
            "SELECT-FROM-WHERE-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "visitor",
        "table_candidates": [
            "visitor"
        ],
        "align_scores": [
            0.7516910433769226,
            0.7516910433769226,
            0.00031725826556794345,
            0.00031725826556794345,
            0.00012374382640700787,
            0.00012374382640700787,
            0.000139718918944709,
            0.000139718918944709
        ],
        "align_select": "select visitor.Name",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY"
    },
    {
        "question": "What is the average age of the visitors whose membership level is not higher than 4?",
        "gold_select": "select avg(visitor.Age)",
        "select_candidates": [
            "select avg(visitor.Age)",
            "select an avg(visitor.Age)",
            "select  avg(visitor.Age)",
            "select the avg(visitor.Age)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "visitor",
        "table_candidates": [
            "visitor"
        ],
        "align_scores": [
            0.9946604371070862,
            0.00010646896407706663,
            0.0005353149608708918,
            0.00010390611714683473,
            0.9946604371070862,
            0.00010646896407706663,
            0.0005787585396319628,
            0.00011905081919394433
        ],
        "align_select": "select avg(visitor.Age)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the name and membership level of the visitors whose membership level is higher than 4, and sort by their age from old to young.",
        "gold_select": "select visitor.Name, visitor.lvl_mem",
        "select_candidates": [
            "select visitor.Name, visitor.lvl_mem",
            "select visitor.Name, visitor.lvl_mem, visitor.Age",
            "select visitor.Name, visitor.lvl_mem sort by visitor.Age",
            "select visitor.Name, visitor.lvl_mem sort visitor.Age"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY",
            "SELECT-FROM-WHERE-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "visitor",
        "table_candidates": [
            "visitor"
        ],
        "align_scores": [
            0.9936741590499878,
            0.0003870246291626245,
            0.0010632267221808434,
            0.0001071601509465836,
            0.002642604988068342,
            0.00013101543299853802,
            0.011625688523054123,
            0.00017127553292084485
        ],
        "align_select": "select visitor.Name, visitor.lvl_mem",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY"
    },
    {
        "question": "Find the id and name of the museum that has the most staff members?",
        "gold_select": "select museum.Museum_ID, museum.Name",
        "select_candidates": [
            "select museum.Museum_ID, museum.Name",
            "select museum.Name, museum.Museum_ID",
            "select museum.Museum_ID, museum.Name, museum.num_stf",
            "select museum.num_stf, museum.Name"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-UNION-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "museum",
        "table_candidates": [
            "museum"
        ],
        "align_scores": [
            0.9901532530784607,
            0.0001283244782825932,
            0.9905842542648315,
            0.00013405494973994792,
            0.005107752978801727,
            9.617547766538337e-05,
            0.5421723127365112,
            0.00012976402649655938
        ],
        "align_select": "select museum.Museum_ID, museum.Name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Find the average number of staff working for the museums that were open before 2009.",
        "gold_select": "select avg(museum.num_stf)",
        "select_candidates": [
            "select avg(museum.num_stf)",
            "select  avg(museum.num_stf)",
            "select avg(t0.c4)",
            "select an avg(museum.num_stf)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "museum",
        "table_candidates": [
            "museum"
        ],
        "align_scores": [
            0.9905760288238525,
            0.000260568514931947,
            0.9905760288238525,
            0.000260568514931947,
            0.0011398721253499389,
            0.00018135305435862392,
            0.0005076007801108062,
            0.00012996711302548647
        ],
        "align_select": "select avg(museum.num_stf)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the opening year and staff number of the museum named Plaza Museum?",
        "gold_select": "select museum.num_stf, museum.Open_Year",
        "select_candidates": [
            "select museum.Open_Year, museum.num_stf",
            "select museum.Museum_ID, museum.Open_Year, museum.num_stf",
            "select museum.Name, museum.num_stf",
            "select museum.Museum_ID, museum.Open_Year"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "museum",
        "table_candidates": [
            "museum"
        ],
        "align_scores": [
            0.9933618307113647,
            0.000103741382190492,
            0.00018797065422404557,
            7.08746156306006e-05,
            0.001566215418279171,
            0.0001567842991789803,
            0.0005353624583221972,
            7.879015902290121e-05
        ],
        "align_select": "select museum.Open_Year, museum.num_stf",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "find the names of museums which have more staff than the minimum staff number of all museums opened after 2010.",
        "gold_select": "select museum.Name",
        "select_candidates": [
            "select museum.Name",
            "select museum.Name, museum.num_stf",
            "select museum.Name, museum.Open_Year",
            "select museum.Name (or museum.num_stf)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "museum",
        "table_candidates": [
            "museum"
        ],
        "align_scores": [
            0.7708609104156494,
            0.00015849663759581745,
            0.0002764550445135683,
            7.203660061350092e-05,
            0.00022806655033491552,
            7.115145126590505e-05,
            0.003209189511835575,
            9.138630412053317e-05
        ],
        "align_select": "select museum.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the id, name and membership level of visitors who have spent the largest amount of money in total in all museum tickets?",
        "gold_select": "select visit.visitor_ID, visitor.Name, visitor.lvl_mem",
        "select_candidates": [
            "select visit.visitor_ID, visitor.Name, visitor.lvl_mem",
            "select visitor.ID, visitor.Name, visitor.lvl_mem",
            "select visit.Museum_ID, visitor.Name, visitor.lvl_mem",
            "select visitor.ID, visitor.Name, visitor.lvl_mem"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "visitor visit",
        "table_candidates": [
            "visitor visit"
        ],
        "align_scores": [
            0.836185097694397,
            0.5348323583602905,
            0.938644528388977,
            0.8583662509918213,
            0.0008023649570532143,
            0.0009857513941824436,
            0.938644528388977,
            0.8583662509918213
        ],
        "align_select": "select visit.visitor_ID, visitor.Name, visitor.lvl_mem",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Find the name and age of the visitor who bought the most tickets at once.",
        "gold_select": "select visitor.Name, visitor.Age",
        "select_candidates": [
            "select visitor.Name, visitor.Age",
            "select visitor.Name, visitor.Age, visitor.ID",
            "select visitor.Name, visitor.Age, visitor.lvl_mem",
            "select visitor.Name, visitor.Age, t1.c4"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "visitor visit",
        "table_candidates": [
            "visitor visit"
        ],
        "align_scores": [
            0.9879531264305115,
            6.614815356442705e-05,
            0.00019628593872766942,
            5.8652422012528405e-05,
            0.0002472156484145671,
            5.4375326726585627e-05,
            0.00034145600511692464,
            5.494158904184587e-05
        ],
        "align_select": "select visitor.Name, visitor.Age",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What are the average and maximum number of tickets bought in all visits?",
        "gold_select": "select avg(visit.num_tkt), max(visit.num_tkt)",
        "select_candidates": [
            "select avg(visit.num_tkt), max(visit.num_tkt)",
            "select max(visit.num_tkt), avg(visit.num_tkt)",
            "select avg(t2.c6), max(visit.num_tkt)",
            "select avg(t2.c5), max(visit.num_tkt)"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "visit",
        "table_candidates": [
            "visit"
        ],
        "align_scores": [
            0.9929817914962769,
            8.245586650446057e-05,
            0.993915855884552,
            7.541911327280104e-05,
            0.0006218581693246961,
            0.00011768376134568825,
            0.0005995527026243508,
            0.00011708268721122295
        ],
        "align_select": "select avg(visit.num_tkt), max(visit.num_tkt)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What is the total ticket expense of the visitors whose membership level is 1?",
        "gold_select": "select sum(visit.Total_spent)",
        "select_candidates": [
            "select sum(visit.Total_spent)",
            "select sum(visit.Total_spent), visitor.ID",
            "select sum(visit.Total_spent)avg(visit.Total_spent)",
            "select sum(visit.Total_spent)aft visitor.ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "visitor visit",
        "table_candidates": [
            "visitor visit"
        ],
        "align_scores": [
            0.990676760673523,
            7.741864101262763e-05,
            0.00015764671843498945,
            5.842026075697504e-05,
            0.00011616509436862543,
            7.169305172283202e-05,
            0.0002890861651394516,
            7.928859122330323e-05
        ],
        "align_select": "select sum(visit.Total_spent)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the names of the visitors whose membership level is higher than 4, and order the results by the level from high to low.",
        "gold_select": "select visitor.Name",
        "select_candidates": [
            "select visitor.Name",
            "select visitor.Name, visitor.lvl_mem",
            "select visitor.Name, visitor.lvl_mem, visitor.Age",
            "select visitor.Name, visitor.lvl_mem - visitor.Age"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY",
            "SELECT-FROM-WHERE-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "visitor",
        "table_candidates": [
            "visitor"
        ],
        "align_scores": [
            0.7516910433769226,
            0.0003068161604460329,
            0.00031725826556794345,
            0.00010853882849914953,
            0.00012374382640700787,
            0.0001042719668475911,
            0.000139718918944709,
            0.00011989912309218198
        ],
        "align_select": "select visitor.Name",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY"
    },
    {
        "question": "What is the average age of the visitors whose membership level is not higher than 4?",
        "gold_select": "select avg(visitor.Age)",
        "select_candidates": [
            "select avg(visitor.Age)",
            "select an avg(visitor.Age)",
            "select  avg(visitor.Age)",
            "select the avg(visitor.Age)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "visitor",
        "table_candidates": [
            "visitor"
        ],
        "align_scores": [
            0.9946604371070862,
            0.00010646896407706663,
            0.0005353149608708918,
            0.00010390611714683473,
            0.9946604371070862,
            0.00010646896407706663,
            0.0005787585396319628,
            0.00011905081919394433
        ],
        "align_select": "select avg(visitor.Age)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the name and membership level of the visitors whose membership level is higher than 4, and sort by their age from old to young.",
        "gold_select": "select visitor.Name, visitor.lvl_mem",
        "select_candidates": [
            "select visitor.Name, visitor.lvl_mem",
            "select visitor.Name, visitor.lvl_mem, visitor.Age",
            "select visitor.Name, visitor.lvl_mem sort by visitor.Age",
            "select visitor.Name, visitor.lvl_mem sort visitor.Age"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY",
            "SELECT-FROM-WHERE-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "visitor",
        "table_candidates": [
            "visitor"
        ],
        "align_scores": [
            0.9936741590499878,
            0.0003870246291626245,
            0.0010632267221808434,
            0.0001071601509465836,
            0.002642604988068342,
            0.00013101543299853802,
            0.011625688523054123,
            0.00017127553292084485
        ],
        "align_select": "select visitor.Name, visitor.lvl_mem",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY"
    },
    {
        "question": "Find the id and name of the museum that has the most staff members?",
        "gold_select": "select museum.mus_id, museum.Name",
        "select_candidates": [
            "select museum.mus_id, museum.Name",
            "select museum.Name, museum.mus_id",
            "select museum.mus_id, museum.Name, museum.Num_of_Staff",
            "select museum.Num_of_Staff, museum.Name"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "museum",
        "table_candidates": [
            "museum"
        ],
        "align_scores": [
            0.8716130256652832,
            9.41670878091827e-05,
            0.9248210787773132,
            9.980632603401318e-05,
            0.0003996407031081617,
            6.726502033416182e-05,
            0.01571020483970642,
            7.524727698182687e-05
        ],
        "align_select": "select museum.mus_id, museum.Name",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What are the id, name and membership level of visitors who have spent the largest amount of money in total in all museum tickets?",
        "gold_select": "select visit.visitor_ID, visitor.Name, visitor.lvl_mem",
        "select_candidates": [
            "select visit.visitor_ID, visitor.Name, visitor.lvl_mem",
            "select visitor.ID, visitor.Name, visitor.lvl_mem",
            "select visit.mus_id, visitor.Name, visitor.lvl_mem",
            "select visit.visitor_ID, visitor.ID, visitor.Name, visitor.lvl_mem"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "visitor visit",
        "table_candidates": [
            "visitor visit"
        ],
        "align_scores": [
            0.836185097694397,
            0.5348323583602905,
            0.938644528388977,
            0.8583662509918213,
            0.003996990621089935,
            0.003629046957939863,
            0.0008475617505609989,
            0.0006724134436808527
        ],
        "align_select": "select visit.visitor_ID, visitor.Name, visitor.lvl_mem",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What are the id and name of the museum visited most times?",
        "gold_select": "select visit.mus_id, museum.Name",
        "select_candidates": [
            "select museum.mus_id, museum.Name",
            "select museum.Name, museum.mus_id",
            "select visit.mus_id, museum.Name",
            "select visit.visitor_ID, museum.Name"
        ],
        "select_labels": [
            0.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "museum visit",
        "table_candidates": [
            "museum visit"
        ],
        "align_scores": [
            0.9932833909988403,
            7.828499656170607e-05,
            0.9930889010429382,
            8.36510444059968e-05,
            0.9832475781440735,
            7.754571561235934e-05,
            0.006399238482117653,
            7.745821494609118e-05
        ],
        "align_select": "select museum.mus_id, museum.Name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the name of the museum that had no visitor yet?",
        "gold_select": "select museum.Name",
        "select_candidates": [
            "select museum.Name",
            "select museum.Name, museum.mus_id",
            "select museum.Name, museum.Num_of_Staff",
            "select museum.Name, museum.Open_Year"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "museum",
        "table_candidates": [
            "museum",
            "museum visit"
        ],
        "align_scores": [
            0.9693405032157898,
            0.0006745153805240989,
            0.00017572396609466523,
            9.038539428729564e-05,
            0.0001505998516222462,
            8.255681314039975e-05,
            0.00021415077208075672,
            9.795601363293827e-05
        ],
        "align_select": "select museum.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the total ticket expense of the visitors whose membership level is 1?",
        "gold_select": "select sum(visit.tot_spent)",
        "select_candidates": [
            "select sum(visit.tot_spent)",
            "select sum(visit.tot_spent), visitor.ID",
            "select sum(visit.Num_of_Ticket)",
            "select sum(visit.Num_of_Ticket), sum(visit.tot_spent)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "visitor visit",
        "table_candidates": [
            "visitor visit"
        ],
        "align_scores": [
            0.9939239621162415,
            8.196581620723009e-05,
            0.00017230781668331474,
            6.0498150560306385e-05,
            0.21342526376247406,
            7.47269150451757e-05,
            0.00012566638179123402,
            6.104609929025173e-05
        ],
        "align_select": "select sum(visit.tot_spent)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the name of the visitor who visited both a museum opened before 2009 and a museum opened after 2011?",
        "gold_select": "select visitor.Name",
        "select_candidates": [
            "select visitor.Name",
            "select visitor.Name, museum.Name",
            "select visitor.Name, museum.Open_Year",
            "select visitor.Name, museum.Num_of_Staff"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "museum visitor visit",
        "table_candidates": [
            "museum visitor visit"
        ],
        "align_scores": [
            0.990402102470398,
            0.990402102470398,
            0.0004460875934455544,
            0.0004460875934455544,
            0.0006641148356720805,
            0.0006641148356720805,
            0.00013208026939537376,
            0.00013208026939537376
        ],
        "align_select": "select visitor.Name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "Find the number of visitors who did not visit any museum opened after 2010.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), museum.Name",
            "select count(*), museum.Open_Year",
            "select count(*), museum.mus_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "museum visitor visit",
        "table_candidates": [
            "museum visitor visit",
            "museum visitor"
        ],
        "align_scores": [
            0.9358334541320801,
            0.0014483993873000145,
            0.0003375688393134624,
            0.0028836228884756565,
            0.0003182579530403018,
            0.00244702841155231,
            0.00024038672563619912,
            0.00034965237136930227
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the names of the visitors whose membership level is higher than 4, and order the results by the level from high to low.",
        "gold_select": "select visitor.Name",
        "select_candidates": [
            "select visitor.Name",
            "select visitor.Name, visitor.lvl_mem",
            "select visitor.Name, visitor.lvl_mem, visitor.Age",
            "select visitor.Name, visitor.lvl_mem - visitor.Age"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY",
            "SELECT-FROM-WHERE-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "visitor",
        "table_candidates": [
            "visitor"
        ],
        "align_scores": [
            0.7516910433769226,
            0.7516910433769226,
            0.00031725826556794345,
            0.00031725826556794345,
            0.00012374382640700787,
            0.00012374382640700787,
            0.000139718918944709,
            0.000139718918944709
        ],
        "align_select": "select visitor.Name",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY"
    },
    {
        "question": "What is the average age of the visitors whose membership level is not higher than 4?",
        "gold_select": "select avg(visitor.Age)",
        "select_candidates": [
            "select avg(visitor.Age)",
            "select an avg(visitor.Age)",
            "select  avg(visitor.Age)",
            "select the avg(visitor.Age)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "visitor",
        "table_candidates": [
            "visitor"
        ],
        "align_scores": [
            0.9946604371070862,
            0.00010646896407706663,
            0.0005353149608708918,
            0.00010390611714683473,
            0.9946604371070862,
            0.00010646896407706663,
            0.0005787585396319628,
            0.00011905081919394433
        ],
        "align_select": "select avg(visitor.Age)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the name and membership level of the visitors whose membership level is higher than 4, and sort by their age from old to young.",
        "gold_select": "select visitor.Name, visitor.lvl_mem",
        "select_candidates": [
            "select visitor.Name, visitor.lvl_mem",
            "select visitor.Name, visitor.lvl_mem, visitor.Age",
            "select visitor.Name, visitor.lvl_mem sort by visitor.Age",
            "select visitor.Name, visitor.lvl_mem sort visitor.Age"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY",
            "SELECT-FROM-WHERE-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "visitor",
        "table_candidates": [
            "visitor"
        ],
        "align_scores": [
            0.9936741590499878,
            0.0003870246291626245,
            0.0010632267221808434,
            0.0001071601509465836,
            0.002642604988068342,
            0.00013101543299853802,
            0.011625688523054123,
            0.00017127553292084485
        ],
        "align_select": "select visitor.Name, visitor.lvl_mem",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY"
    },
    {
        "question": "Find the id and name of the museum that has the most staff members?",
        "gold_select": "select museum.Museum_ID, museum.Name",
        "select_candidates": [
            "select museum.Museum_ID, museum.Name",
            "select museum.Name, museum.Museum_ID",
            "select museum.num_stf, museum.Name",
            "select museum.Museum_ID, museum.Name,"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "museum",
        "table_candidates": [
            "museum"
        ],
        "align_scores": [
            0.9901532530784607,
            0.9386711120605469,
            0.9905842542648315,
            0.9532191753387451,
            0.5421723127365112,
            0.09285946935415268,
            0.0034286000300198793,
            0.006936598103493452
        ],
        "align_select": "select museum.Museum_ID, museum.Name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Find the average number of staff working for the museums that were open before 2009.",
        "gold_select": "select avg(museum.num_stf)",
        "select_candidates": [
            "select avg(museum.num_stf)",
            "select  avg(museum.num_stf)",
            "select an avg(museum.num_stf)",
            "select avg(t0.c4)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "museum",
        "table_candidates": [
            "museum"
        ],
        "align_scores": [
            0.9905760288238525,
            0.000260568514931947,
            0.9905760288238525,
            0.000260568514931947,
            0.0005076007801108062,
            0.00012996711302548647,
            0.0011398721253499389,
            0.00018135305435862392
        ],
        "align_select": "select avg(museum.num_stf)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the opening year and staff number of the museum named Plaza Museum?",
        "gold_select": "select museum.num_stf, museum.Open_Year",
        "select_candidates": [
            "select museum.Open_Year, museum.num_stf",
            "select museum.Museum_ID, museum.Open_Year, museum.num_stf",
            "select museum.Name, museum.num_stf",
            "select museum.Museum_ID, museum.Open_Year"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "museum",
        "table_candidates": [
            "museum"
        ],
        "align_scores": [
            0.9933618307113647,
            0.000103741382190492,
            0.00018797065422404557,
            7.08746156306006e-05,
            0.001566215418279171,
            0.0001567842991789803,
            0.0005353624583221972,
            7.879015902290121e-05
        ],
        "align_select": "select museum.Open_Year, museum.num_stf",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "find the names of museums which have more staff than the minimum staff number of all museums opened after 2010.",
        "gold_select": "select museum.Name",
        "select_candidates": [
            "select museum.Name",
            "select museum.Name, museum.num_stf",
            "select museum.Name, museum.Open_Year",
            "select museum.Name, museum.num_stf, museum.Open_Year"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "museum",
        "table_candidates": [
            "museum"
        ],
        "align_scores": [
            0.7708609104156494,
            0.00015849663759581745,
            0.0002764550445135683,
            7.203660061350092e-05,
            0.00022806655033491552,
            7.115145126590505e-05,
            0.00016250305634457618,
            6.34629832347855e-05
        ],
        "align_select": "select museum.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the id, name and membership level of visitors who have spent the largest amount of money in total in all museum tickets?",
        "gold_select": "select visit.visitor_ID, visitor.Name, visitor.lvl_mem",
        "select_candidates": [
            "select visit.visitor_ID, visitor.Name, visitor.lvl_mem",
            "select visitor.ID, visitor.Name, visitor.lvl_mem",
            "select visit.mus_id, visitor.Name, visitor.lvl_mem",
            "select visit.visitor_ID, visitor.ID, visitor.Name, visitor.lvl_mem"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "visitor visit",
        "table_candidates": [
            "visitor visit"
        ],
        "align_scores": [
            0.836185097694397,
            0.5348323583602905,
            0.938644528388977,
            0.8583662509918213,
            0.003996990621089935,
            0.003629046957939863,
            0.0008475617505609989,
            0.0006724134436808527
        ],
        "align_select": "select visit.visitor_ID, visitor.Name, visitor.lvl_mem",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What are the id and name of the museum visited most times?",
        "gold_select": "select visit.mus_id, museum.Name",
        "select_candidates": [
            "select museum.Museum_ID, museum.Name",
            "select museum.Name, museum.Museum_ID",
            "select visit.visitor_ID, museum.Name",
            "select visit.mus_id, museum.Name"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "museum visit",
        "table_candidates": [
            "museum visit"
        ],
        "align_scores": [
            0.9937154650688171,
            7.513112359447405e-05,
            0.9933851361274719,
            7.850889960536733e-05,
            0.006399238482117653,
            7.745821494609118e-05,
            0.9832475781440735,
            7.754571561235934e-05
        ],
        "align_select": "select museum.Museum_ID, museum.Name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the name of the museum that had no visitor yet?",
        "gold_select": "select museum.Name",
        "select_candidates": [
            "select museum.Name",
            "select museum.Name, museum.num_stf",
            "select museum.Name, museum.Open_Year",
            "select museum.Name, museum.Museum_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "museum",
        "table_candidates": [
            "museum",
            "museum visit"
        ],
        "align_scores": [
            0.9693405032157898,
            0.0006745153805240989,
            0.000182653937372379,
            7.938808266771957e-05,
            0.00021415077208075672,
            9.795601363293827e-05,
            0.00018763437401503325,
            9.639960626373067e-05
        ],
        "align_select": "select museum.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the total ticket expense of the visitors whose membership level is 1?",
        "gold_select": "select sum(visit.Total_spent)",
        "select_candidates": [
            "select sum(visit.Total_spent)",
            "select sum(visit.Total_spent), visitor.ID",
            "select sum(visit.Num_of_Ticket)",
            "select sum(visit.Total_spent)aft visitor.ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "visitor visit",
        "table_candidates": [
            "visitor visit"
        ],
        "align_scores": [
            0.990676760673523,
            7.741864101262763e-05,
            0.00015764671843498945,
            5.842026075697504e-05,
            0.21342526376247406,
            7.47269150451757e-05,
            0.0002890861651394516,
            7.928859122330323e-05
        ],
        "align_select": "select sum(visit.Total_spent)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the name of the visitor who visited both a museum opened before 2009 and a museum opened after 2011?",
        "gold_select": "select visitor.Name",
        "select_candidates": [
            "select visitor.Name",
            "select visitor.Name, museum.Open_Year",
            "select visitor.Name, museum.Name",
            "select visitor.Name, museum.num_stf"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "museum visitor visit",
        "table_candidates": [
            "museum visitor visit"
        ],
        "align_scores": [
            0.990402102470398,
            0.990402102470398,
            0.0006641148356720805,
            0.0006641148356720805,
            0.0004460875934455544,
            0.0004460875934455544,
            0.00017719903553370386,
            0.00017719903553370386
        ],
        "align_select": "select visitor.Name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "Find the number of visitors who did not visit any museum opened after 2010.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), museum.Name",
            "select count(*), museum.num_stf",
            "select count(*), museum.Open_Year"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "museum visitor visit",
        "table_candidates": [
            "museum visitor visit",
            "museum visitor",
            "visitor visit"
        ],
        "align_scores": [
            0.9358334541320801,
            0.0014483993873000145,
            0.0003375688393134624,
            0.0028836228884756565,
            0.0002926618617493659,
            0.0009626251994632185,
            0.0003182579530403018,
            0.00244702841155231
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the id and name of the museum visited most times?",
        "gold_select": "select visit.mus_id, museum.Name",
        "select_candidates": [
            "select museum.Museum_ID, museum.Name",
            "select museum.Name, museum.Museum_ID",
            "select visit.mus_id, museum.Name",
            "select visit.visitor_ID, museum.Name"
        ],
        "select_labels": [
            0.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "museum visit",
        "table_candidates": [
            "museum visit"
        ],
        "align_scores": [
            0.9937154650688171,
            7.513112359447405e-05,
            0.9933851361274719,
            7.850889960536733e-05,
            0.9832475781440735,
            7.754571561235934e-05,
            0.006399238482117653,
            7.745821494609118e-05
        ],
        "align_select": "select museum.Museum_ID, museum.Name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the name of the museum that had no visitor yet?",
        "gold_select": "select museum.Name",
        "select_candidates": [
            "select museum.Name",
            "select museum.Name, museum.Museum_ID",
            "select museum.Name, museum.Num_of_Staff",
            "select museum.Name, museum.Open_Year"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "museum",
        "table_candidates": [
            "museum",
            "museum visit"
        ],
        "align_scores": [
            0.9693405032157898,
            0.0006745153805240989,
            0.00018763437401503325,
            9.639960626373067e-05,
            0.0001505998516222462,
            8.255681314039975e-05,
            0.00021415077208075672,
            9.795601363293827e-05
        ],
        "align_select": "select museum.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the name of the visitor who visited both a museum opened before 2009 and a museum opened after 2011?",
        "gold_select": "select visitor.Name",
        "select_candidates": [
            "select visitor.Name",
            "select visitor.Name, museum.Name",
            "select visitor.Name, museum.Open_Year",
            "select visitor.Name, museum.Num_of_Staff"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "museum visitor visit",
        "table_candidates": [
            "museum visitor visit",
            "museum visitor"
        ],
        "align_scores": [
            0.990402102470398,
            0.990402102470398,
            0.0004460875934455544,
            0.0004460875934455544,
            0.0006641148356720805,
            0.0006641148356720805,
            0.00013208026939537376,
            0.00013208026939537376
        ],
        "align_select": "select visitor.Name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "Find the number of visitors who did not visit any museum opened after 2010.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), museum.Name",
            "select count(*), museum.Open_Year",
            "select count(*), museum.Museum_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "museum visitor visit",
        "table_candidates": [
            "museum visitor visit",
            "museum visitor"
        ],
        "align_scores": [
            0.9358334541320801,
            0.0014483993873000145,
            0.0003375688393134624,
            0.0028836228884756565,
            0.0003182579530403018,
            0.00244702841155231,
            0.00020464581029955298,
            0.00037563120713457465
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the id and name of the museum that has the most staff members?",
        "gold_select": "select museum.mus_id, museum.Name",
        "select_candidates": [
            "select museum.mus_id, museum.Name",
            "select museum.Name, museum.mus_id",
            "select museum.mus_id, museum.Name, museum.num_stf",
            "select museum.num_stf, museum.Name"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "museum",
        "table_candidates": [
            "museum"
        ],
        "align_scores": [
            0.8716130256652832,
            0.9877029061317444,
            0.9248210787773132,
            0.9906399250030518,
            0.0004963428946211934,
            0.004960926715284586,
            0.09285946935415268,
            0.5421723127365112
        ],
        "align_select": "select museum.mus_id, museum.Name",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Find the average number of staff working for the museums that were open before 2009.",
        "gold_select": "select avg(museum.num_stf)",
        "select_candidates": [
            "select avg(museum.num_stf)",
            "select an avg(museum.num_stf)",
            "select avg(t0.c4)",
            "select  avg(museum.num_stf)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "museum",
        "table_candidates": [
            "museum"
        ],
        "align_scores": [
            0.9905760288238525,
            0.000260568514931947,
            0.0005076007801108062,
            0.00012996711302548647,
            0.0011398721253499389,
            0.00018135305435862392,
            0.9905760288238525,
            0.000260568514931947
        ],
        "align_select": "select avg(museum.num_stf)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the opening year and staff number of the museum named Plaza Museum?",
        "gold_select": "select museum.num_stf, museum.Open_Year",
        "select_candidates": [
            "select museum.Open_Year, museum.num_stf",
            "select museum.mus_id, museum.Open_Year, museum.num_stf",
            "select museum.Name, museum.num_stf",
            "select museum.mus_id, museum.Open_Year"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "museum",
        "table_candidates": [
            "museum"
        ],
        "align_scores": [
            0.9933618307113647,
            0.000103741382190492,
            0.000216867818380706,
            7.03174082445912e-05,
            0.001566215418279171,
            0.0001567842991789803,
            0.0004340475134085864,
            8.083718421403319e-05
        ],
        "align_select": "select museum.Open_Year, museum.num_stf",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "find the names of museums which have more staff than the minimum staff number of all museums opened after 2010.",
        "gold_select": "select museum.Name",
        "select_candidates": [
            "select museum.Name",
            "select museum.Name, museum.num_stf",
            "select museum.Name, museum.Open_Year",
            "select museum.Name, museum.num_stf, museum.Open_Year"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "museum",
        "table_candidates": [
            "museum"
        ],
        "align_scores": [
            0.7708609104156494,
            0.00015849663759581745,
            0.0002764550445135683,
            7.203660061350092e-05,
            0.00022806655033491552,
            7.115145126590505e-05,
            0.00016250305634457618,
            6.34629832347855e-05
        ],
        "align_select": "select museum.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the id and name of the museum visited most times?",
        "gold_select": "select visit.Museum_ID, museum.Name",
        "select_candidates": [
            "select museum.mus_id, museum.Name",
            "select museum.Name, museum.mus_id",
            "select visit.Museum_ID, museum.Name",
            "select museum.num_stf, museum.Name"
        ],
        "select_labels": [
            0.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "museum visit",
        "table_candidates": [
            "museum visit"
        ],
        "align_scores": [
            0.9932833909988403,
            7.828499656170607e-05,
            0.9930889010429382,
            8.36510444059968e-05,
            0.9822213053703308,
            7.605618884554133e-05,
            0.7973602414131165,
            8.235238783527166e-05
        ],
        "align_select": "select museum.mus_id, museum.Name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the name of the museum that had no visitor yet?",
        "gold_select": "select museum.Name",
        "select_candidates": [
            "select museum.Name",
            "select museum.Name, museum.num_stf",
            "select museum.Name, museum.Open_Year",
            "select museum.Name, museum.mus_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "museum",
        "table_candidates": [
            "museum",
            "museum visit"
        ],
        "align_scores": [
            0.9693405032157898,
            0.0006745153805240989,
            0.000182653937372379,
            7.938808266771957e-05,
            0.00021415077208075672,
            9.795601363293827e-05,
            0.00017572396609466523,
            9.038539428729564e-05
        ],
        "align_select": "select museum.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the name of the visitor who visited both a museum opened before 2009 and a museum opened after 2011?",
        "gold_select": "select visitor.Name",
        "select_candidates": [
            "select visitor.Name",
            "select visitor.Name, museum.Name",
            "select visitor.Name, museum.Open_Year",
            "select visitor.Name, museum.num_stf"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "museum visitor visit",
        "table_candidates": [
            "museum visitor visit"
        ],
        "align_scores": [
            0.990402102470398,
            0.990402102470398,
            0.0004460875934455544,
            0.0004460875934455544,
            0.0006641148356720805,
            0.0006641148356720805,
            0.00017719903553370386,
            0.00017719903553370386
        ],
        "align_select": "select visitor.Name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "Find the number of visitors who did not visit any museum opened after 2010.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), museum.Name",
            "select count(*), museum.num_stf",
            "select count(*), museum.mus_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "museum visitor visit",
        "table_candidates": [
            "museum visitor visit",
            "museum visitor"
        ],
        "align_scores": [
            0.9358334541320801,
            0.0014483993873000145,
            0.0003375688393134624,
            0.0028836228884756565,
            0.0002926618617493659,
            0.0009626251994632185,
            0.00024038672563619912,
            0.00034965237136930227
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List the first name and birth date of all players from the country with code USA.",
        "gold_select": "select players.first_name, players.dob",
        "select_candidates": [
            "select players.first_name, players.dob",
            "select players.first_name, players.last_name",
            "select distinct players.first_name, players.dob",
            "select players.first_name, players.last_name, players.dob"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "players",
        "table_candidates": [
            "players"
        ],
        "align_scores": [
            0.9807925820350647,
            0.0001942307426361367,
            0.0002665904466994107,
            8.22701258584857e-05,
            0.01592888869345188,
            0.00011423147952882573,
            0.000326269306242466,
            7.283988816197962e-05
        ],
        "align_select": "select players.first_name, players.dob",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the first names and birth dates of players from the USA?",
        "gold_select": "select players.first_name, players.dob",
        "select_candidates": [
            "select players.first_name, players.dob",
            "select players.first_name, players.last_name, players.dob",
            "select players.first_name, players.last_name",
            "select players.first_name, players.hand, players.dob"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "players",
        "table_candidates": [
            "players"
        ],
        "align_scores": [
            0.9749631285667419,
            0.0001611977641005069,
            0.0003823726437985897,
            6.573094287887216e-05,
            0.00022804352920502424,
            0.00014767276297789067,
            0.00036560604348778725,
            8.079171675490215e-05
        ],
        "align_select": "select players.first_name, players.dob",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "find the number of distinct country codes of all players.",
        "gold_select": "select count(distinct players.cntry_code)",
        "select_candidates": [
            "select count(distinct players.cntry_code)",
            "select count(distinct t0.c6)",
            "select count(distinct players.cntry_code),",
            "select count(distinct players.last_name)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "players",
        "table_candidates": [
            "players"
        ],
        "align_scores": [
            0.9962485432624817,
            0.9962485432624817,
            0.0008434344199486077,
            0.0008434344199486077,
            0.00028613326139748096,
            0.00028613326139748096,
            0.00040847688796930015,
            0.00040847688796930015
        ],
        "align_select": "select count(distinct players.cntry_code)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "How many distinct countries do players come from?",
        "gold_select": "select count(distinct players.cntry_code)",
        "select_candidates": [
            "select count(distinct players.cntry_code)",
            "select count(distinct t0.c6)",
            "select count(distinct players.dob)",
            "select count(distinct players.cntry_code),"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "players",
        "table_candidates": [
            "players"
        ],
        "align_scores": [
            0.9941270351409912,
            0.9941270351409912,
            0.0008065497386269271,
            0.0008065497386269271,
            0.0008126217289827764,
            0.0008126217289827764,
            0.0005225820932537317,
            0.0005225820932537317
        ],
        "align_select": "select count(distinct players.cntry_code)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What are the country code and first name of the players who won in both tourney WTA Championships and Australian Open?",
        "gold_select": "select players.cntry_code, players.first_name",
        "select_candidates": [
            "select players.cntry_code, players.first_name",
            "select players.first_name, players.cntry_code",
            "select players.player_id, players.first_name",
            "select t 0.c5, players.first_name"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "players matches",
        "table_candidates": [
            "players matches"
        ],
        "align_scores": [
            0.9761857390403748,
            0.002966546919196844,
            0.9811051487922668,
            0.0006907106726430357,
            0.0004277028201613575,
            0.00014551595086231828,
            0.0004543471150100231,
            0.0001703283196548
        ],
        "align_select": "select players.cntry_code, players.first_name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the first names and country codes for players who won both the WTA Championships and the Australian Open?",
        "gold_select": "select players.cntry_code, players.first_name",
        "select_candidates": [
            "select players.first_name, players.cntry_code",
            "select players.first_name, players.cntry_code, players.player_id",
            "select t0, players.first_name, players.cntry_code",
            "select players.first_name, players.cntry_code,"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "players matches",
        "table_candidates": [
            "players matches"
        ],
        "align_scores": [
            0.9924325942993164,
            0.001897066249512136,
            0.00014979069237597287,
            9.373696957482025e-05,
            0.00038873666198924184,
            0.00016480847261846066,
            0.0017366302199661732,
            0.0002948809415102005
        ],
        "align_select": "select players.first_name, players.cntry_code",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "Find the first name and country code of the oldest player.",
        "gold_select": "select players.first_name, players.cntry_code",
        "select_candidates": [
            "select players.first_name, players.cntry_code",
            "select players.player_id, players.first_name, players.cntry_code",
            "select players.first_name, players.cntry_code, players.player_id",
            "select players.first_name, players.cntry_code, max(players.dob)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "players",
        "table_candidates": [
            "players"
        ],
        "align_scores": [
            0.9947933554649353,
            8.308731048600748e-05,
            0.00018684062524698675,
            8.15260864328593e-05,
            0.0001467627298552543,
            6.378764373948798e-05,
            0.00028801930602639914,
            5.8260866353521124e-05
        ],
        "align_select": "select players.first_name, players.cntry_code",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What is the first name and country code of the oldest player?",
        "gold_select": "select players.first_name, players.cntry_code",
        "select_candidates": [
            "select players.first_name, players.cntry_code",
            "select players.player_id, players.first_name, players.cntry_code",
            "select players.first_name, players.cntry_code, players.player_id",
            "select players.first_name, players.cntry_code, max(players.dob)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "players",
        "table_candidates": [
            "players"
        ],
        "align_scores": [
            0.9947518706321716,
            8.5768464487046e-05,
            0.00020457146456465125,
            8.684072963660583e-05,
            0.00013848325761500746,
            6.55700423521921e-05,
            0.00032200952409766614,
            6.039116851752624e-05
        ],
        "align_select": "select players.first_name, players.cntry_code",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "List the first and last name of all players in the order of birth date.",
        "gold_select": "select players.first_name, players.last_name",
        "select_candidates": [
            "select players.first_name, players.last_name",
            "select players.first_name, players.last_name, players.dob",
            "select players.first_name, players.last_name (Date, Last)",
            "select players.first_name, players.last_name (Order BY"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "players",
        "table_candidates": [
            "players"
        ],
        "align_scores": [
            0.9942867159843445,
            0.9942867159843445,
            0.00029480617376975715,
            0.00029480617376975715,
            0.000437383190728724,
            0.000437383190728724,
            0.002409797627478838,
            0.002409797627478838
        ],
        "align_select": "select players.first_name, players.last_name",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "What are the full names of all players, sorted by birth date?",
        "gold_select": "select players.first_name, players.last_name",
        "select_candidates": [
            "select players.first_name, players.last_name",
            "select players.first_name, players.last_name, players.dob",
            "select players.first_name, players.last_name (ORDER BY",
            "select players.first_name, players.last_name, players.dob"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "players",
        "table_candidates": [
            "players"
        ],
        "align_scores": [
            0.9941303133964539,
            0.9941303133964539,
            0.005198163446038961,
            0.005198163446038961,
            0.00595741905272007,
            0.00595741905272007,
            0.005198163446038961,
            0.005198163446038961
        ],
        "align_select": "select players.first_name, players.last_name",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "List the first and last name of all players who are left / L hand in the order of birth date.",
        "gold_select": "select players.first_name, players.last_name",
        "select_candidates": [
            "select players.first_name, players.last_name",
            "select players.first_name, players.last_name (Date, Last)",
            "select players.first_name, players.last_name, players.hand",
            "select players.first_name, players.last_name (Date, Last), players.hand"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY",
            "SELECT-FROM-GROUP BY-HAVING-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "players",
        "table_candidates": [
            "players"
        ],
        "align_scores": [
            0.991958498954773,
            0.0025385769549757242,
            0.0003840624412987381,
            0.00018694221216719598,
            0.0004893218283541501,
            0.0003152117715217173,
            0.00020015235350001603,
            0.0001262870355276391
        ],
        "align_select": "select players.first_name, players.last_name",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY"
    },
    {
        "question": "What are the full names of all left handed players, in order of birth date?",
        "gold_select": "select players.first_name, players.last_name",
        "select_candidates": [
            "select players.first_name, players.last_name",
            "select players.first_name, players.last_name, players.hand",
            "select players.first_name, players.hand, players.last_name",
            "select players.first_name, players.last_name (players.dob)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "players",
        "table_candidates": [
            "players"
        ],
        "align_scores": [
            0.9946016073226929,
            0.00011765245290007442,
            0.00022014220303390175,
            7.788975926814601e-05,
            0.00030286109540611506,
            8.86840934981592e-05,
            0.011758523061871529,
            8.872757462086156e-05
        ],
        "align_select": "select players.first_name, players.last_name",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY"
    },
    {
        "question": "Find the first name and country code of the player who did the most number of tours.",
        "gold_select": "select players.cntry_code, players.first_name",
        "select_candidates": [
            "select players.first_name, players.cntry_code",
            "select players.first_name, players.last_name, players.cntry_code",
            "select players.first_name, players.cntry_code, players.player_id",
            "select players.first_name, players.cntry_code, t0.c6"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "players rankings",
        "table_candidates": [
            "players rankings"
        ],
        "align_scores": [
            0.9886121153831482,
            0.00010940379434032366,
            0.0014338884502649307,
            9.56234143814072e-05,
            0.00018710733274929225,
            6.66275154799223e-05,
            0.00029286593780852854,
            6.91451714374125e-05
        ],
        "align_select": "select players.first_name, players.cntry_code",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the first name and country code of the player with the most tours?",
        "gold_select": "select players.cntry_code, players.first_name",
        "select_candidates": [
            "select players.first_name, players.cntry_code",
            "select players.player_id, players.first_name, players.cntry_code",
            "select players.first_name, players.cntry_code, players.player_id",
            "select players.first_name, players.last_name, players.cntry_code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "players rankings",
        "table_candidates": [
            "players rankings"
        ],
        "align_scores": [
            0.9933040738105774,
            0.00010491728608030826,
            0.0002955691306851804,
            8.410824375459924e-05,
            0.00015806728333700448,
            6.685275002382696e-05,
            0.0013929404085502028,
            9.408882033312693e-05
        ],
        "align_select": "select players.first_name, players.cntry_code",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "find the number of players for each country.",
        "gold_select": "select count(*), players.cntry_code",
        "select_candidates": [
            "select players.cntry_code, count(*)",
            "select count(*), players.cntry_code",
            "select country players.cntry_code, count(*)",
            "select players.cntry_code.c5, count(*)"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "players",
        "table_candidates": [
            "players"
        ],
        "align_scores": [
            0.9962959885597229,
            0.00015090229862835258,
            0.9962598085403442,
            0.00015292924945242703,
            0.0006493388209491968,
            0.00015763574629090726,
            0.0005238038720563054,
            0.0001403122441843152
        ],
        "align_select": "select players.cntry_code, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "How many players are from each country?",
        "gold_select": "select count(*), players.cntry_code",
        "select_candidates": [
            "select players.cntry_code, count(*)",
            "select count(*), players.cntry_code",
            "select country players.cntry_code, count(*)",
            "select distinct players.cntry_code, count(*)"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "players",
        "table_candidates": [
            "players"
        ],
        "align_scores": [
            0.9956057667732239,
            0.00017587229376658797,
            0.9952095150947571,
            0.00017609716451261193,
            0.0007836931035853922,
            0.00014699310122523457,
            0.00029032357269898057,
            9.673700697021559e-05
        ],
        "align_select": "select players.cntry_code, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "find the code of the country where has the greatest number of players.",
        "gold_select": "select players.cntry_code",
        "select_candidates": [
            "select players.cntry_code",
            "select players.cntry_code, players.dob",
            "select players.cntry_code, t0.c6",
            "select players.cntry_code, players.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "players",
        "table_candidates": [
            "players"
        ],
        "align_scores": [
            0.9102492928504944,
            0.00010037516767624766,
            0.00031957871397025883,
            6.516361463582143e-05,
            0.0009869927307590842,
            6.570668483618647e-05,
            0.00031826552003622055,
            6.350934563670307e-05
        ],
        "align_select": "select players.cntry_code",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the code of the country with the most players?",
        "gold_select": "select players.cntry_code",
        "select_candidates": [
            "select players.cntry_code",
            "select players.cntry_code, t0.c6",
            "select players.cntry_code, players.dob",
            "select players.cntry_code, players.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "players",
        "table_candidates": [
            "players"
        ],
        "align_scores": [
            0.9950454235076904,
            9.340360702481121e-05,
            0.0009965308709070086,
            7.316491974052042e-05,
            0.0003006214974448085,
            6.540267349919304e-05,
            0.00029220044962130487,
            6.399369158316404e-05
        ],
        "align_select": "select players.cntry_code",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Find the codes of countries that have more than 50 players.",
        "gold_select": "select players.cntry_code",
        "select_candidates": [
            "select players.cntry_code",
            "select players.cntry_code, t0.c6",
            "select players.cntry_code, count(*)",
            "select players.cntry_code, max(players.cntry_code)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "players",
        "table_candidates": [
            "players",
            "players matches",
            "players rankings"
        ],
        "align_scores": [
            0.9936501383781433,
            0.00016348822100553662,
            0.0007700070273131132,
            7.470646960427985e-05,
            0.005944778677076101,
            9.035704715643078e-05,
            0.00013750625657849014,
            6.482360186055303e-05
        ],
        "align_select": "select players.cntry_code",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the codes of countries with more than 50 players?",
        "gold_select": "select players.cntry_code",
        "select_candidates": [
            "select players.cntry_code",
            "select players.cntry_code, t0.c6",
            "select players.cntry_code, max(players.cntry_code)",
            "select players.cntry_code, t0.c7"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "players",
        "table_candidates": [
            "players",
            "players matches",
            "players rankings",
            "players matches rankings"
        ],
        "align_scores": [
            0.9845372438430786,
            0.0001831624686019495,
            0.0007869558758102357,
            7.189021562226117e-05,
            0.00015309017908293754,
            6.605415546800941e-05,
            0.0008227865328080952,
            7.173626363510266e-05
        ],
        "align_select": "select players.cntry_code",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Find the first name, country code and birth date of the winner who has the highest rank points in all matches.",
        "gold_select": "select players.first_name, players.cntry_code, players.dob",
        "select_candidates": [
            "select players.first_name, players.cntry_code, players.dob",
            "select players.first_name, players.dob, players.cntry_code",
            "select players.first_name, players.last_name, players.dob",
            "select players.first_name, players.hand, players.dob"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "players matches",
        "table_candidates": [
            "players matches",
            "players matches rankings"
        ],
        "align_scores": [
            0.9565648436546326,
            0.0013067300897091627,
            0.9516309499740601,
            0.001728937029838562,
            0.0005455159698612988,
            0.00011544698645593598,
            0.0009720840607769787,
            0.00013751740334555507
        ],
        "align_select": "select players.first_name, players.cntry_code, players.dob",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What is the first name, country code, and birth date of the player with the most winner rank points across all matches?",
        "gold_select": "select players.first_name, players.cntry_code, players.dob",
        "select_candidates": [
            "select players.first_name, players.cntry_code, players.dob",
            "select players.first_name, players.dob, players.cntry_code",
            "select players.first_name, players.last_name, players.dob",
            "select players.first_name, players.hand, players.dob"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "players matches",
        "table_candidates": [
            "players matches"
        ],
        "align_scores": [
            0.9866633415222168,
            0.0002401771052973345,
            0.987097442150116,
            0.00027375351055525243,
            0.0004904376692138612,
            0.00011464505951153114,
            0.0008245622157119215,
            0.00013849211973138154
        ],
        "align_select": "select players.first_name, players.cntry_code, players.dob",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "List the first name and birth date of all players from the country with code USA.",
        "gold_select": "select players.first_name, players.birth_date",
        "select_candidates": [
            "select players.first_name, players.birth_date",
            "select distinct players.first_name, players.birth_date",
            "select players.first_name, players.last_name",
            "select players.first_name, players.hand"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "players",
        "table_candidates": [
            "players"
        ],
        "align_scores": [
            0.9921793937683105,
            0.00015172065468505025,
            0.014160873368382454,
            8.706387598067522e-05,
            0.0002665904466994107,
            8.22701258584857e-05,
            0.00044230828643776476,
            7.851077680243179e-05
        ],
        "align_select": "select players.first_name, players.birth_date",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the first names and birth dates of players from the USA?",
        "gold_select": "select players.first_name, players.birth_date",
        "select_candidates": [
            "select players.first_name, players.birth_date",
            "select players.first_name, players.last_name, players.birth_date",
            "select players.first_name, players.hand, players.birth_date",
            "select distinct players.first_name, players.birth_date"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "players",
        "table_candidates": [
            "players"
        ],
        "align_scores": [
            0.9906479716300964,
            0.0001275347312912345,
            0.00033479908597655594,
            6.419441342586651e-05,
            0.0003045650664716959,
            8.044606511248276e-05,
            0.004014370962977409,
            7.641539559699595e-05
        ],
        "align_select": "select players.first_name, players.birth_date",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "find the number of distinct country codes of all players.",
        "gold_select": "select count(distinct players.cntry_code)",
        "select_candidates": [
            "select count(distinct players.cntry_code)",
            "select count(distinct t0.c6)",
            "select count(distinct players.birth_date)",
            "select count(distinct players.cntry_code),"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "players",
        "table_candidates": [
            "players"
        ],
        "align_scores": [
            0.9962485432624817,
            0.9962485432624817,
            0.0008434344199486077,
            0.0008434344199486077,
            0.0002724261430557817,
            0.0002724261430557817,
            0.00028613326139748096,
            0.00028613326139748096
        ],
        "align_select": "select count(distinct players.cntry_code)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "How many distinct countries do players come from?",
        "gold_select": "select count(distinct players.cntry_code)",
        "select_candidates": [
            "select count(distinct players.cntry_code)",
            "select count(distinct t0.c6)",
            "select count(distinct players.birth_date)",
            "select count(distinct players.cntry_code),"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "players",
        "table_candidates": [
            "players"
        ],
        "align_scores": [
            0.9941270351409912,
            0.9941270351409912,
            0.0008065497386269271,
            0.0008065497386269271,
            0.0003660692018456757,
            0.0003660692018456757,
            0.0005225820932537317,
            0.0005225820932537317
        ],
        "align_select": "select count(distinct players.cntry_code)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What are the country code and first name of the players who won in both tourney WTA Championships and Australian Open?",
        "gold_select": "select players.cntry_code, players.first_name",
        "select_candidates": [
            "select players.cntry_code, players.first_name",
            "select players.first_name, players.cntry_code",
            "select players.player_id, players.first_name",
            "select t 0.c5, players.first_name"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "players matches",
        "table_candidates": [
            "players matches"
        ],
        "align_scores": [
            0.9761857390403748,
            0.002966546919196844,
            0.9811051487922668,
            0.0006907106726430357,
            0.0004277028201613575,
            0.00014551595086231828,
            0.0004543471150100231,
            0.0001703283196548
        ],
        "align_select": "select players.cntry_code, players.first_name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the first names and country codes for players who won both the WTA Championships and the Australian Open?",
        "gold_select": "select players.cntry_code, players.first_name",
        "select_candidates": [
            "select players.first_name, players.cntry_code",
            "select players.player_id, players.first_name, players.cntry_code",
            "select players.first_name, players.cntry_code, players.player_id",
            "select t0, players.first_name, players.cntry_code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "players matches",
        "table_candidates": [
            "players matches"
        ],
        "align_scores": [
            0.9924325942993164,
            0.001897066249512136,
            0.00019493706349749118,
            0.00012987431546207517,
            0.00014979069237597287,
            9.373696957482025e-05,
            0.00038873666198924184,
            0.00016480847261846066
        ],
        "align_select": "select players.first_name, players.cntry_code",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "Find the first name and country code of the oldest player.",
        "gold_select": "select players.first_name, players.cntry_code",
        "select_candidates": [
            "select players.first_name, players.cntry_code",
            "select players.player_id, players.first_name, players.cntry_code",
            "select players.first_name, players.cntry_code, players.player_id",
            "select players.first_name, players.cntry_code, max(players.birth_date)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "players",
        "table_candidates": [
            "players"
        ],
        "align_scores": [
            0.9947933554649353,
            8.308731048600748e-05,
            0.00018684062524698675,
            8.15260864328593e-05,
            0.0001467627298552543,
            6.378764373948798e-05,
            0.00029901167727075517,
            5.795150718768127e-05
        ],
        "align_select": "select players.first_name, players.cntry_code",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What is the first name and country code of the oldest player?",
        "gold_select": "select players.first_name, players.cntry_code",
        "select_candidates": [
            "select players.first_name, players.cntry_code",
            "select players.player_id, players.first_name, players.cntry_code",
            "select players.first_name, players.cntry_code, players.player_id",
            "select players.first_name, players.cntry_code, max(players.birth_date)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "players",
        "table_candidates": [
            "players"
        ],
        "align_scores": [
            0.9947518706321716,
            8.5768464487046e-05,
            0.00020457146456465125,
            8.684072963660583e-05,
            0.00013848325761500746,
            6.55700423521921e-05,
            0.00032129560713656247,
            5.969469202682376e-05
        ],
        "align_select": "select players.first_name, players.cntry_code",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Find the first name and country code of the player who did the most number of tours.",
        "gold_select": "select players.cntry_code, players.first_name",
        "select_candidates": [
            "select players.first_name, players.cntry_code",
            "select players.first_name, players.last_name, players.cntry_code",
            "select players.first_name, players.cntry_code, players.player_id",
            "select players.first_name, players.cntry_code, players.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "players rankings",
        "table_candidates": [
            "players rankings"
        ],
        "align_scores": [
            0.9886121153831482,
            0.00010940379434032366,
            0.0014338884502649307,
            9.56234143814072e-05,
            0.00018710733274929225,
            6.66275154799223e-05,
            0.00086981151252985,
            8.35968239698559e-05
        ],
        "align_select": "select players.first_name, players.cntry_code",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the first name and country code of the player with the most tours?",
        "gold_select": "select players.cntry_code, players.first_name",
        "select_candidates": [
            "select players.first_name, players.cntry_code",
            "select players.player_id, players.first_name, players.cntry_code",
            "select players.first_name, players.cntry_code, players.player_id",
            "select players.first_name, players.last_name, players.cntry_code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "players rankings",
        "table_candidates": [
            "players rankings"
        ],
        "align_scores": [
            0.9933040738105774,
            0.00010491728608030826,
            0.0002955691306851804,
            8.410824375459924e-05,
            0.00015806728333700448,
            6.685275002382696e-05,
            0.0013929404085502028,
            9.408882033312693e-05
        ],
        "align_select": "select players.first_name, players.cntry_code",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Find the name and rank points of the winner who won the most times.",
        "gold_select": "select matches.winner_name, matches.winner_rank_pts",
        "select_candidates": [
            "select matches.winner_name, rankings.ranking_points",
            "select matches.winner_name, rankings.player_id9",
            "select rankings.player_id7, rankings.player_id9",
            "select matches.winner_name, rankings.ranking_points3"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "matches",
        "table_candidates": [
            "matches rankings",
            "players matches rankings",
            "rankings"
        ],
        "align_scores": [
            0.9935289025306702,
            8.955680095823482e-05,
            0.00044437168980948627,
            8.902708941604942e-05,
            0.0002081861748592928,
            6.060451778466813e-05,
            0.982833743095398,
            9.619639604352415e-05
        ],
        "align_select": "select matches.winner_name, rankings.ranking_points",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the name of the winner who has won the most matches, and how many rank points does this player have?",
        "gold_select": "select matches.winner_name, matches.winner_rank_pts",
        "select_candidates": [
            "select matches.winner_name, rankings.ranking_points",
            "select matches.winner_name, rankings.player_id",
            "select matches.winner_name, rankings.ranking_points3",
            "select matches.loser_ioc, rankings.ranking_points"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "matches",
        "table_candidates": [
            "matches rankings",
            "players matches rankings",
            "matches"
        ],
        "align_scores": [
            0.9866359829902649,
            0.00010104857938131317,
            0.7743555903434753,
            0.00011992152576567605,
            0.6660407781600952,
            0.0001143214904004708,
            0.008370496332645416,
            8.156582771334797e-05
        ],
        "align_select": "select matches.winner_name, rankings.ranking_points",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Find the name of the winner who has the highest rank points and participated in the Australian Open tourney.",
        "gold_select": "select matches.winner_name",
        "select_candidates": [
            "select matches.winner_name",
            "select matches.winner_name, rankings.ranking_points",
            "select matches.tourney_name, matches.winner_name",
            "select matches.winner_name, matches.winner_ent"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "matches",
        "table_candidates": [
            "matches rankings",
            "players matches rankings"
        ],
        "align_scores": [
            0.6889166831970215,
            0.36898404359817505,
            0.0005781035870313644,
            0.0007609747699461877,
            0.00037328069447539747,
            0.0003144955262541771,
            0.00040901676402427256,
            0.0005112861981615424
        ],
        "align_select": "select matches.winner_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the name of the winner with the most rank points who participated in the Australian Open tournament?",
        "gold_select": "select matches.winner_name",
        "select_candidates": [
            "select matches.winner_name",
            "select matches.winner_name, rankings.ranking_points",
            "select matches.winner_name.c1, matches.loser_age",
            "select matches.winner_name, rankings.ranking_points"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "matches",
        "table_candidates": [
            "matches rankings",
            "players matches rankings"
        ],
        "align_scores": [
            0.9603970050811768,
            0.0015967199578881264,
            0.001251803245395422,
            0.00018518583965487778,
            0.0002482412091922015,
            0.00018392095807939768,
            0.001251803245395422,
            0.00018518583965487778
        ],
        "align_select": "select matches.winner_name",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT"
    },
    {
        "question": "find the number of players for each country.",
        "gold_select": "select count(*), players.cntry_code",
        "select_candidates": [
            "select players.cntry_code, count(*)",
            "select count(*), players.cntry_code",
            "select country players.cntry_code, count(*)",
            "select sum(players.cntry_code), players.cntry_code"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "players",
        "table_candidates": [
            "players"
        ],
        "align_scores": [
            0.9962959885597229,
            0.00015090229862835258,
            0.9962598085403442,
            0.00015292924945242703,
            0.0006493388209491968,
            0.00015763574629090726,
            0.00015771288599353284,
            7.18929004506208e-05
        ],
        "align_select": "select players.cntry_code, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "How many players are from each country?",
        "gold_select": "select count(*), players.cntry_code",
        "select_candidates": [
            "select players.cntry_code, count(*)",
            "select count(*), players.cntry_code",
            "select country players.cntry_code, count(*)",
            "select distinct players.cntry_code, count(*)"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "players",
        "table_candidates": [
            "players"
        ],
        "align_scores": [
            0.9956057667732239,
            0.00017587229376658797,
            0.9952095150947571,
            0.00017609716451261193,
            0.0007836931035853922,
            0.00014699310122523457,
            0.00029032357269898057,
            9.673700697021559e-05
        ],
        "align_select": "select players.cntry_code, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "find the code of the country where has the greatest number of players.",
        "gold_select": "select players.cntry_code",
        "select_candidates": [
            "select players.cntry_code",
            "select players.cntry_code, t0.c6",
            "select players.cntry_code, players.birth_date",
            "select players.cntry_code, players.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "players",
        "table_candidates": [
            "players"
        ],
        "align_scores": [
            0.9102492928504944,
            0.00010037516767624766,
            0.0009869927307590842,
            6.570668483618647e-05,
            0.0002338680933462456,
            5.9840600442839786e-05,
            0.00031826552003622055,
            6.350934563670307e-05
        ],
        "align_select": "select players.cntry_code",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the code of the country with the most players?",
        "gold_select": "select players.cntry_code",
        "select_candidates": [
            "select players.cntry_code",
            "select players.cntry_code, t0.c6",
            "select players.cntry_code, players.birth_date",
            "select players.cntry_code, players.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "players",
        "table_candidates": [
            "players"
        ],
        "align_scores": [
            0.9950454235076904,
            9.694442996988073e-05,
            0.0009965308709070086,
            6.802724237786606e-05,
            0.00021279075008351356,
            5.9620280808303505e-05,
            0.00029220044962130487,
            6.253963510971516e-05
        ],
        "align_select": "select players.cntry_code",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Find the codes of countries that have more than 50 players.",
        "gold_select": "select players.cntry_code",
        "select_candidates": [
            "select players.cntry_code",
            "select players.cntry_code, t0.c6",
            "select players.cntry_code, count(*)",
            "select players.cntry_code, max(players.cntry_code)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "players",
        "table_candidates": [
            "players",
            "players matches"
        ],
        "align_scores": [
            0.9936501383781433,
            0.00016348822100553662,
            0.0007700070273131132,
            7.470646960427985e-05,
            0.005944778677076101,
            9.035704715643078e-05,
            0.00013750625657849014,
            6.482360186055303e-05
        ],
        "align_select": "select players.cntry_code",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the codes of countries with more than 50 players?",
        "gold_select": "select players.cntry_code",
        "select_candidates": [
            "select players.cntry_code",
            "select players.cntry_code, t0.c6",
            "select players.cntry_code, max(players.cntry_code)",
            "select players.cntry_code, t0.c7"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "players",
        "table_candidates": [
            "players",
            "players matches"
        ],
        "align_scores": [
            0.9845372438430786,
            0.0001831624686019495,
            0.0007869558758102357,
            7.189021562226117e-05,
            0.00015309017908293754,
            6.605415546800941e-05,
            0.0008227865328080952,
            7.173626363510266e-05
        ],
        "align_select": "select players.cntry_code",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Find the first name, country code and birth date of the winner who has the highest rank points in all matches.",
        "gold_select": "select players.first_name, players.cntry_code, players.birth_date",
        "select_candidates": [
            "select players.first_name, players.cntry_code, players.birth_date",
            "select players.first_name, players.birth_date, players.cntry_code",
            "select players.first_name, players.last_name, players.birth_date",
            "select players.first_name, players.hand, players.birth_date"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "players matches",
        "table_candidates": [
            "players matches rankings",
            "players matches"
        ],
        "align_scores": [
            0.9668123126029968,
            0.0008046309230849147,
            0.9651126861572266,
            0.0009512705146335065,
            0.00048142095329239964,
            0.00010270978964399546,
            0.000823166046757251,
            0.00011347488180035725
        ],
        "align_select": "select players.first_name, players.cntry_code, players.birth_date",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What is the first name, country code, and birth date of the player with the most winner rank points across all matches?",
        "gold_select": "select players.first_name, players.cntry_code, players.birth_date",
        "select_candidates": [
            "select players.first_name, players.cntry_code, players.birth_date",
            "select players.first_name, players.birth_date, players.cntry_code",
            "select players.first_name, players.last_name, players.birth_date",
            "select players.first_name, players.hand, players.birth_date"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "players matches",
        "table_candidates": [
            "players matches",
            "players matches rankings"
        ],
        "align_scores": [
            0.9876761436462402,
            0.0001986683637369424,
            0.9881817698478699,
            0.0002173773100366816,
            0.00048609921941533685,
            0.00010268737241858616,
            0.0006390141206793487,
            0.00011762541544158012
        ],
        "align_select": "select players.first_name, players.cntry_code, players.birth_date",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "List the first name and birth date of all players from the country with code USA.",
        "gold_select": "select players.first_name, players.dob",
        "select_candidates": [
            "select players.first_name, players.dob",
            "select players.first_name, players.last_name",
            "select distinct players.first_name, players.dob",
            "select players.first_name, players.hand"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "players",
        "table_candidates": [
            "players"
        ],
        "align_scores": [
            0.9807925820350647,
            0.0001942307426361367,
            0.0002665904466994107,
            8.22701258584857e-05,
            0.01592888869345188,
            0.00011423147952882573,
            0.00044230828643776476,
            7.851077680243179e-05
        ],
        "align_select": "select players.first_name, players.dob",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the first names and birth dates of players from the USA?",
        "gold_select": "select players.first_name, players.dob",
        "select_candidates": [
            "select players.first_name, players.dob",
            "select players.first_name, players.last_name, players.dob",
            "select players.first_name, players.last_name",
            "select players.first_name, players.hand, players.dob"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "players",
        "table_candidates": [
            "players"
        ],
        "align_scores": [
            0.9749631285667419,
            0.0001611977641005069,
            0.0003823726437985897,
            6.573094287887216e-05,
            0.00022804352920502424,
            0.00014767276297789067,
            0.00036560604348778725,
            8.079171675490215e-05
        ],
        "align_select": "select players.first_name, players.dob",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the first name and country code of the oldest player.",
        "gold_select": "select players.first_name, players.country_code",
        "select_candidates": [
            "select players.first_name, players.country_code",
            "select players.player_id, players.first_name, players.country_code",
            "select players.first_name, players.country_code, players.player_id",
            "select players.first_name, players.country_code, players.hand"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "players",
        "table_candidates": [
            "players"
        ],
        "align_scores": [
            0.994071900844574,
            8.050086762523279e-05,
            0.00017776904860511422,
            7.865038787713274e-05,
            0.00014389415446203202,
            6.239024514798075e-05,
            0.00021990136883687228,
            6.911392119945958e-05
        ],
        "align_select": "select players.first_name, players.country_code",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What is the first name and country code of the oldest player?",
        "gold_select": "select players.first_name, players.country_code",
        "select_candidates": [
            "select players.first_name, players.country_code",
            "select players.player_id, players.first_name, players.country_code",
            "select players.first_name, players.country_code, players.player_id",
            "select players.first_name, players.country_code, players.dob"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "players",
        "table_candidates": [
            "players"
        ],
        "align_scores": [
            0.9948209524154663,
            8.24480812298134e-05,
            0.00018639079644344747,
            8.332646393682808e-05,
            0.0001414391299476847,
            6.45388281554915e-05,
            0.0007414825377054513,
            6.411616777768359e-05
        ],
        "align_select": "select players.first_name, players.country_code",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "List the first and last name of all players in the order of birth date.",
        "gold_select": "select players.first_name, players.last_name",
        "select_candidates": [
            "select players.first_name, players.last_name",
            "select players.first_name, players.last_name, players.dob",
            "select players.first_name, players.last_name (Date, Last)",
            "select players.first_name, players.last_name (Order BY"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "players",
        "table_candidates": [
            "players"
        ],
        "align_scores": [
            0.9942867159843445,
            0.9942867159843445,
            0.00029480617376975715,
            0.00029480617376975715,
            0.000437383190728724,
            0.000437383190728724,
            0.002409797627478838,
            0.002409797627478838
        ],
        "align_select": "select players.first_name, players.last_name",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "What are the full names of all players, sorted by birth date?",
        "gold_select": "select players.first_name, players.last_name",
        "select_candidates": [
            "select players.first_name, players.last_name",
            "select players.first_name, players.last_name, players.dob",
            "select players.first_name, players.last_name (ORDER BY",
            "select players.first_name, players.last_name, players.dob"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "players",
        "table_candidates": [
            "players"
        ],
        "align_scores": [
            0.9941303133964539,
            0.9941303133964539,
            0.005198163446038961,
            0.005198163446038961,
            0.00595741905272007,
            0.00595741905272007,
            0.005198163446038961,
            0.005198163446038961
        ],
        "align_select": "select players.first_name, players.last_name",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "List the first and last name of all players who are left / L hand in the order of birth date.",
        "gold_select": "select players.first_name, players.last_name",
        "select_candidates": [
            "select players.first_name, players.last_name",
            "select players.first_name, players.last_name (Date, Last)",
            "select players.first_name, players.last_name, players.hand",
            "select players.first_name, players.last_name (Date, Last), players.hand"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY",
            "SELECT-FROM-GROUP BY-HAVING-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "players",
        "table_candidates": [
            "players"
        ],
        "align_scores": [
            0.991958498954773,
            0.0025385769549757242,
            0.0003840624412987381,
            0.00018694221216719598,
            0.0004893218283541501,
            0.0003152117715217173,
            0.00020015235350001603,
            0.0001262870355276391
        ],
        "align_select": "select players.first_name, players.last_name",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY"
    },
    {
        "question": "What are the full names of all left handed players, in order of birth date?",
        "gold_select": "select players.first_name, players.last_name",
        "select_candidates": [
            "select players.first_name, players.last_name",
            "select players.first_name, players.last_name, players.hand",
            "select players.first_name, players.last_name (players.dob)",
            "select players.first_name, players.hand, players.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "players",
        "table_candidates": [
            "players"
        ],
        "align_scores": [
            0.9946016073226929,
            0.00011765245290007442,
            0.00022014220303390175,
            7.788975926814601e-05,
            0.011758523061871529,
            8.872757462086156e-05,
            0.00030286109540611506,
            8.86840934981592e-05
        ],
        "align_select": "select players.first_name, players.last_name",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY"
    },
    {
        "question": "Find the total ranking points for each player and their first name.",
        "gold_select": "select sum(rankings.ranking_pts), players.first_name",
        "select_candidates": [
            "select sum(rankings.ranking_pts), players.first_name",
            "select rankings.player_id, sum(rankings.ranking_pts)",
            "select players.player_id, sum(rankings.ranking_pts)",
            "select total(rankings.ranking_pts), players.first_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "players rankings",
        "table_candidates": [
            "players rankings"
        ],
        "align_scores": [
            0.9961297512054443,
            0.0002185065095545724,
            0.00028737582033500075,
            0.00015103141777217388,
            0.00023040609085001051,
            0.00013839614985045046,
            0.0005943272262811661,
            0.0001260570134036243
        ],
        "align_select": "select sum(rankings.ranking_pts), players.first_name",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "What are the first names of all players, and their total ranking points?",
        "gold_select": "select sum(rankings.ranking_pts), players.first_name",
        "select_candidates": [
            "select players.first_name, sum(rankings.ranking_pts)",
            "select rankings.player_id, sum(rankings.ranking_pts)",
            "select sum(rankings.ranking_pts), players.first_name",
            "select players.first_name, sum(rankings.ranking_pts)"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "players rankings",
        "table_candidates": [
            "players rankings"
        ],
        "align_scores": [
            0.761721134185791,
            0.000251107761869207,
            0.0002761826617643237,
            0.00015525511116720736,
            0.9922618865966797,
            0.00026898784562945366,
            0.761721134185791,
            0.000251107761869207
        ],
        "align_select": "select sum(rankings.ranking_pts), players.first_name",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "Find the first name, country code and birth date of the winner who has the highest rank points in all matches.",
        "gold_select": "select players.first_name, players.country_code, players.dob",
        "select_candidates": [
            "select players.first_name, players.country_code, players.dob",
            "select players.first_name, players.dob, players.country_code",
            "select players.first_name, players.last_name, players.dob",
            "select players.first_name, players.hand, players.dob"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "players matches",
        "table_candidates": [
            "players matches"
        ],
        "align_scores": [
            0.9516220092773438,
            0.0010828947415575385,
            0.9561536908149719,
            0.0012876391410827637,
            0.0005455159698612988,
            0.00011544698645593598,
            0.0009720840607769787,
            0.00013751740334555507
        ],
        "align_select": "select players.first_name, players.country_code, players.dob",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What is the first name, country code, and birth date of the player with the most winner rank points across all matches?",
        "gold_select": "select players.first_name, players.country_code, players.dob",
        "select_candidates": [
            "select players.first_name, players.country_code, players.dob",
            "select players.first_name, players.dob, players.country_code",
            "select players.first_name, players.last_name, players.dob",
            "select players.first_name, players.country_code, players.dob"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "players matches",
        "table_candidates": [
            "players matches"
        ],
        "align_scores": [
            0.9848706126213074,
            0.00019752280786633492,
            0.9858869314193726,
            0.00023595824313815683,
            0.0004904376692138612,
            0.00011464505951153114,
            0.9848706126213074,
            0.00019752280786633492
        ],
        "align_select": "select players.first_name, players.country_code, players.dob",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "List the first name and birth date of all players from the country with code USA.",
        "gold_select": "select players.first_name, players.birth_date",
        "select_candidates": [
            "select players.first_name, players.birth_date",
            "select distinct players.first_name, players.birth_date",
            "select players.first_name, players.last_name",
            "select players.first_name, players.hand"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "players",
        "table_candidates": [
            "players"
        ],
        "align_scores": [
            0.9921793937683105,
            0.00015172065468505025,
            0.014160873368382454,
            8.706387598067522e-05,
            0.0002665904466994107,
            8.22701258584857e-05,
            0.00044230828643776476,
            7.851077680243179e-05
        ],
        "align_select": "select players.first_name, players.birth_date",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the first names and birth dates of players from the USA?",
        "gold_select": "select players.first_name, players.birth_date",
        "select_candidates": [
            "select players.first_name, players.birth_date",
            "select players.first_name, players.last_name, players.birth_date",
            "select players.first_name, players.hand, players.birth_date",
            "select players.first_name, players.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "players",
        "table_candidates": [
            "players"
        ],
        "align_scores": [
            0.9906479716300964,
            0.0001275347312912345,
            0.00033479908597655594,
            6.419441342586651e-05,
            0.0003045650664716959,
            8.044606511248276e-05,
            0.00022804352920502424,
            0.00014767276297789067
        ],
        "align_select": "select players.first_name, players.birth_date",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "find the number of distinct country codes of all players.",
        "gold_select": "select count(distinct players.cntry_code)",
        "select_candidates": [
            "select count(distinct players.cntry_code)",
            "select count(distinct t0.c6)",
            "select count(distinct players.cntry_code),",
            "select count(distinct players.birth_date)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "players",
        "table_candidates": [
            "players",
            "players rankings",
            "players matches",
            "players matches rankings"
        ],
        "align_scores": [
            0.9962485432624817,
            0.9962485432624817,
            0.0008434344199486077,
            0.0008434344199486077,
            0.00028613326139748096,
            0.00028613326139748096,
            0.0002724261430557817,
            0.0002724261430557817
        ],
        "align_select": "select count(distinct players.cntry_code)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "How many distinct countries do players come from?",
        "gold_select": "select count(distinct players.cntry_code)",
        "select_candidates": [
            "select count(distinct players.cntry_code)",
            "select count(distinct t0.c6)",
            "select count(distinct players.birth_date)",
            "select count(distinct players.cntry_code),"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "players",
        "table_candidates": [
            "players"
        ],
        "align_scores": [
            0.9941270351409912,
            0.9941270351409912,
            0.0008065497386269271,
            0.0008065497386269271,
            0.0003660692018456757,
            0.0003660692018456757,
            0.0005225820932537317,
            0.0005225820932537317
        ],
        "align_select": "select count(distinct players.cntry_code)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What are the country code and first name of the players who won in both tourney WTA Championships and Australian Open?",
        "gold_select": "select players.cntry_code, players.first_name",
        "select_candidates": [
            "select players.cntry_code, players.first_name",
            "select players.first_name, players.cntry_code",
            "select players.player_id, players.first_name",
            "select t0-c5, players.first_name"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "players matches",
        "table_candidates": [
            "players matches"
        ],
        "align_scores": [
            0.9761857390403748,
            0.002966546919196844,
            0.9811051487922668,
            0.0006907106726430357,
            0.0004277028201613575,
            0.00014551595086231828,
            0.00030442519346252084,
            0.00016979158681351691
        ],
        "align_select": "select players.cntry_code, players.first_name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the first names and country codes for players who won both the WTA Championships and the Australian Open?",
        "gold_select": "select players.cntry_code, players.first_name",
        "select_candidates": [
            "select players.first_name, players.cntry_code",
            "select players.player_id, players.first_name, players.cntry_code",
            "select players.first_name, players.cntry_code, players.player_id",
            "select t0, players.first_name, players.cntry_code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "players matches",
        "table_candidates": [
            "players matches"
        ],
        "align_scores": [
            0.9924325942993164,
            0.001897066249512136,
            0.00019493706349749118,
            0.00012987431546207517,
            0.00014979069237597287,
            9.373696957482025e-05,
            0.00038873666198924184,
            0.00016480847261846066
        ],
        "align_select": "select players.first_name, players.cntry_code",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "Find the first name and country code of the oldest player.",
        "gold_select": "select players.first_name, players.cntry_code",
        "select_candidates": [
            "select players.first_name, players.cntry_code",
            "select players.player_id, players.first_name, players.cntry_code",
            "select players.first_name, players.cntry_code, players.player_id",
            "select players.first_name, players.cntry_code, max(players.birth_date)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "players",
        "table_candidates": [
            "players"
        ],
        "align_scores": [
            0.9947933554649353,
            8.308731048600748e-05,
            0.00018684062524698675,
            8.15260864328593e-05,
            0.0001467627298552543,
            6.378764373948798e-05,
            0.00029901167727075517,
            5.795150718768127e-05
        ],
        "align_select": "select players.first_name, players.cntry_code",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What is the first name and country code of the oldest player?",
        "gold_select": "select players.first_name, players.cntry_code",
        "select_candidates": [
            "select players.first_name, players.cntry_code",
            "select players.player_id, players.first_name, players.cntry_code",
            "select players.first_name, players.cntry_code, players.player_id",
            "select players.first_name, players.cntry_code, max(players.birth_date)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "players",
        "table_candidates": [
            "players"
        ],
        "align_scores": [
            0.9947518706321716,
            8.5768464487046e-05,
            0.00020457146456465125,
            8.684072963660583e-05,
            0.00013848325761500746,
            6.55700423521921e-05,
            0.00032129560713656247,
            5.969469202682376e-05
        ],
        "align_select": "select players.first_name, players.cntry_code",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Find the first name and country code of the player who did the most number of tours.",
        "gold_select": "select players.cntry_code, players.first_name",
        "select_candidates": [
            "select players.first_name, players.cntry_code",
            "select players.first_name, players.cntry_code, players.player_id",
            "select players.first_name, players.last_name, players.cntry_code",
            "select players.first_name, players.cntry_code, t0.c6"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "players rankings",
        "table_candidates": [
            "players rankings"
        ],
        "align_scores": [
            0.9886121153831482,
            0.00010940379434032366,
            0.00018710733274929225,
            6.66275154799223e-05,
            0.0014338884502649307,
            9.56234143814072e-05,
            0.00029286593780852854,
            6.91451714374125e-05
        ],
        "align_select": "select players.first_name, players.cntry_code",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the first name and country code of the player with the most tours?",
        "gold_select": "select players.cntry_code, players.first_name",
        "select_candidates": [
            "select players.first_name, players.cntry_code",
            "select players.player_id, players.first_name, players.cntry_code",
            "select players.first_name, players.cntry_code, players.player_id",
            "select players.first_name, players.last_name, players.cntry_code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "players rankings",
        "table_candidates": [
            "players rankings"
        ],
        "align_scores": [
            0.9933040738105774,
            0.00010491728608030826,
            0.0002955691306851804,
            8.410824375459924e-05,
            0.00015806728333700448,
            6.685275002382696e-05,
            0.0013929404085502028,
            9.408882033312693e-05
        ],
        "align_select": "select players.first_name, players.cntry_code",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "find the number of players for each country.",
        "gold_select": "select count(*), players.cntry_code",
        "select_candidates": [
            "select players.cntry_code, count(*)",
            "select count(*), players.cntry_code",
            "select country players.cntry_code, count(*)",
            "select players.cntry_code.c5, count(*)"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "players",
        "table_candidates": [
            "players"
        ],
        "align_scores": [
            0.9962959885597229,
            0.00015090229862835258,
            0.9962598085403442,
            0.00015292924945242703,
            0.0006493388209491968,
            0.00015763574629090726,
            0.0005238038720563054,
            0.0001403122441843152
        ],
        "align_select": "select players.cntry_code, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "How many players are from each country?",
        "gold_select": "select count(*), players.cntry_code",
        "select_candidates": [
            "select players.cntry_code, count(*)",
            "select count(*), players.cntry_code",
            "select country players.cntry_code, count(*)",
            "select distinct players.cntry_code, count(*)"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "players",
        "table_candidates": [
            "players"
        ],
        "align_scores": [
            0.9956057667732239,
            0.00017587229376658797,
            0.9952095150947571,
            0.00017609716451261193,
            0.0007836931035853922,
            0.00014699310122523457,
            0.00029032357269898057,
            9.673700697021559e-05
        ],
        "align_select": "select players.cntry_code, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "find the code of the country where has the greatest number of players.",
        "gold_select": "select players.cntry_code",
        "select_candidates": [
            "select players.cntry_code",
            "select players.cntry_code, t0.c6",
            "select players.cntry_code, players.birth_date",
            "select players.cntry_code, players.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "players",
        "table_candidates": [
            "players",
            "players matches",
            "players rankings"
        ],
        "align_scores": [
            0.9102492928504944,
            0.00010037516767624766,
            0.0009869927307590842,
            6.570668483618647e-05,
            0.0002338680933462456,
            5.9840600442839786e-05,
            0.00031826552003622055,
            6.350934563670307e-05
        ],
        "align_select": "select players.cntry_code",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the code of the country with the most players?",
        "gold_select": "select players.cntry_code",
        "select_candidates": [
            "select players.cntry_code",
            "select players.cntry_code, t0.c6",
            "select players.cntry_code, players.birth_date",
            "select players.cntry_code, players.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "players",
        "table_candidates": [
            "players",
            "players matches",
            "players rankings"
        ],
        "align_scores": [
            0.9950454235076904,
            9.694442996988073e-05,
            0.0009965308709070086,
            6.802724237786606e-05,
            0.00021279075008351356,
            5.9620280808303505e-05,
            0.00029220044962130487,
            6.253963510971516e-05
        ],
        "align_select": "select players.cntry_code",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Find the codes of countries that have more than 50 players.",
        "gold_select": "select players.cntry_code",
        "select_candidates": [
            "select players.cntry_code",
            "select players.cntry_code, t0.c6",
            "select players.cntry_code, count(*)",
            "select players.cntry_code, max(players.cntry_code)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "players",
        "table_candidates": [
            "players",
            "players matches",
            "players rankings"
        ],
        "align_scores": [
            0.9936501383781433,
            0.00016348822100553662,
            0.0007700070273131132,
            7.470646960427985e-05,
            0.005944778677076101,
            9.035704715643078e-05,
            0.00013750625657849014,
            6.482360186055303e-05
        ],
        "align_select": "select players.cntry_code",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the codes of countries with more than 50 players?",
        "gold_select": "select players.cntry_code",
        "select_candidates": [
            "select players.cntry_code",
            "select players.cntry_code, t0.c6",
            "select players.cntry_code, max(players.cntry_code)",
            "select players.cntry_code, t0.c7"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "players",
        "table_candidates": [
            "players",
            "players matches",
            "players rankings",
            "players matches rankings"
        ],
        "align_scores": [
            0.9845372438430786,
            0.0001831624686019495,
            0.0007869558758102357,
            7.189021562226117e-05,
            0.00015309017908293754,
            6.605415546800941e-05,
            0.0008227865328080952,
            7.173626363510266e-05
        ],
        "align_select": "select players.cntry_code",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Find the first name, country code and birth date of the winner who has the highest rank points in all matches.",
        "gold_select": "select players.first_name, players.cntry_code, players.birth_date",
        "select_candidates": [
            "select players.first_name, players.cntry_code, players.birth_date",
            "select players.first_name, players.birth_date, players.cntry_code",
            "select players.first_name, players.last_name, players.birth_date",
            "select players.first_name, players.cntry_code), players.birth_date"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "players matches",
        "table_candidates": [
            "players matches",
            "players matches rankings"
        ],
        "align_scores": [
            0.9668123126029968,
            0.0008046309230849147,
            0.9651126861572266,
            0.0009512705146335065,
            0.00048142095329239964,
            0.00010270978964399546,
            0.014208306558430195,
            0.0002350389986531809
        ],
        "align_select": "select players.first_name, players.cntry_code, players.birth_date",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What is the first name, country code, and birth date of the player with the most winner rank points across all matches?",
        "gold_select": "select players.first_name, players.cntry_code, players.birth_date",
        "select_candidates": [
            "select players.first_name, players.cntry_code, players.birth_date",
            "select players.first_name, players.birth_date, players.cntry_code",
            "select players.first_name, players.last_name, players.birth_date",
            "select players.first_name, players.cntry_code, players.birth_date"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "players matches",
        "table_candidates": [
            "players matches"
        ],
        "align_scores": [
            0.9876761436462402,
            0.0001986683637369424,
            0.9881817698478699,
            0.0002173773100366816,
            0.00048609921941533685,
            0.00010268737241858616,
            0.9876761436462402,
            0.0001986683637369424
        ],
        "align_select": "select players.first_name, players.cntry_code, players.birth_date",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What are the name and results of the battles when the bulgarian commander is not 'Boril'",
        "gold_select": "select battle.name, battle.result",
        "select_candidates": [
            "select battle.name, battle.result",
            "select battle.id, battle.name, battle.result",
            "select battle.name, battle.result, battle.date",
            "select battle.name, battle.result, battle.bg_cdr"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "battle",
        "table_candidates": [
            "battle"
        ],
        "align_scores": [
            0.9941502213478088,
            0.0002084932930301875,
            0.00025184504920616746,
            9.430304635316133e-05,
            0.0001679021370364353,
            8.35583996376954e-05,
            0.00025028028176166117,
            7.830023241695017e-05
        ],
        "align_select": "select battle.name, battle.result",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the different ids and names of the battles that lost any 'Brig' type shipes?",
        "gold_select": "select distinct battle.id, battle.name",
        "select_candidates": [
            "select distinct battle.id, battle.name",
            "select distinct battle.name, battle.id",
            "select unique battle.id, battle.name",
            "select different battle.id, battle.name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "battle ship",
        "table_candidates": [
            "battle ship",
            "battle ship death"
        ],
        "align_scores": [
            0.9802969694137573,
            0.01701049506664276,
            0.9791715741157532,
            0.003009061561897397,
            0.0006231222650967538,
            0.00020448409486562014,
            0.002327371621504426,
            0.00036799031659029424
        ],
        "align_select": "select distinct battle.id, battle.name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the ids and names of the battles that led to more than 10 people killed in total.",
        "gold_select": "select battle.id, battle.name",
        "select_candidates": [
            "select battle.id, battle.name",
            "select battle.name, battle.id",
            "select battle.date, battle.name",
            "select death.id, battle.name"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "battle ship death",
        "table_candidates": [
            "battle death"
        ],
        "align_scores": [
            0.8700404167175293,
            0.00014375592581927776,
            0.8943005204200745,
            0.0001447382674086839,
            0.0005957760149613023,
            6.981875048950315e-05,
            0.0019184896955266595,
            0.00011819026985904202
        ],
        "align_select": "select battle.id, battle.name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the distinct battle names which are between bulgarian commander 'Kaloyan' and latin commander 'Baldwin I'?",
        "gold_select": "select battle.name",
        "select_candidates": [
            "select distinct battle.name",
            "select distinct battle.name, battle.date",
            "select distinct battle.name, battle.bg_cdr, battle.latin_cdr",
            "select distinct battle.name, battle.latin_cdr"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "battle",
        "table_candidates": [
            "battle"
        ],
        "align_scores": [
            0.9951838850975037,
            0.00022994258324615657,
            0.0002246008807560429,
            8.024227281566709e-05,
            0.00033672238350845873,
            8.16922402009368e-05,
            0.00039633785490877926,
            8.45700633362867e-05
        ],
        "align_select": "select distinct battle.name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many battles did not lose any ship with tonnage '225'?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), ship.tonnage",
            "select count(*), ship.tonnage, battle.name",
            "select count(*), ship.tonnage, ship.name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "battle ship",
        "table_candidates": [
            "battle ship",
            "battle ship death"
        ],
        "align_scores": [
            0.9934126734733582,
            0.01841524802148342,
            0.00034067025990225375,
            0.00018263580568600446,
            0.0002088482433464378,
            9.426644828636199e-05,
            0.00014484208077192307,
            9.071031672647223e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List the name and date the battle that has lost the ship named 'Lettice' and the ship named 'HMS Atalanta'",
        "gold_select": "select battle.name, battle.date",
        "select_candidates": [
            "select battle.name, battle.date",
            "select battle.name, battle.date, ship.name",
            "select battle.name, battle.date, ship.lib",
            "select battle.name, battle.date, ship.ship_type"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "battle ship",
        "table_candidates": [
            "battle ship death"
        ],
        "align_scores": [
            0.3886212408542633,
            0.0002051686169579625,
            0.0004926958936266601,
            0.00011873678158735856,
            0.00015079614240676165,
            7.930175343062729e-05,
            0.00016462912026327103,
            7.794755947543308e-05
        ],
        "align_select": "select battle.name, battle.date",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "Show names, results and bulgarian commanders of the battles with no ships lost in the 'English Channel'.",
        "gold_select": "select battle.name, battle.result, battle.bg_cdr",
        "select_candidates": [
            "select battle.name, battle.result, battle.bg_cdr",
            "select battle.name, battle.bg_cdr, battle.result",
            "select battle.name, battle.result, battle.bg_cdr",
            "select battle.name, battle.date, battle.bg_cdr"
        ],
        "select_labels": [
            1.0,
            1.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "battle ship",
        "table_candidates": [
            "battle ship"
        ],
        "align_scores": [
            0.0015074722468852997,
            0.9940150380134583,
            0.001050284132361412,
            0.9937058091163635,
            0.0015074722468852997,
            0.9940150380134583,
            0.0003763882559724152,
            0.008578726090490818
        ],
        "align_select": "select battle.name, battle.result, battle.bg_cdr",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many ships ended up being 'Captured'?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), ship.dos",
            "select count(*), ship.lib",
            "select count(*), ship.id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "ship",
        "table_candidates": [
            "ship"
        ],
        "align_scores": [
            0.9933013916015625,
            0.002904759254306555,
            0.00032721130992285907,
            0.0012136567384004593,
            0.00028649219893850386,
            0.00022006413200870156,
            0.00024764405679889023,
            0.0003916096466127783
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the death and injury situations caused by the ship with tonnage 't'?",
        "gold_select": "select death.killed, death.injured",
        "select_candidates": [
            "select death.killed, death.injured",
            "select death.cbs, death.killed, death.injured",
            "select distinct death.killed, death.injured",
            "select the death.killed, death.injured"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "ship death",
        "table_candidates": [
            "ship death",
            "battle ship death"
        ],
        "align_scores": [
            0.9803609848022461,
            8.932633500080556e-05,
            0.0002193790569435805,
            7.228866161312908e-05,
            0.004292175639420748,
            7.66831508371979e-05,
            0.0009036517585627735,
            8.895275095710531e-05
        ],
        "align_select": "select death.killed, death.injured",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the name and results of the battles when the bulgarian commander is not 'Boril'",
        "gold_select": "select battle.name, battle.result",
        "select_candidates": [
            "select battle.name, battle.result",
            "select battle.id, battle.name, battle.result",
            "select battle.name, battle.date, battle.result",
            "select battle.name, battle.bg_cdr, battle.result"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "battle",
        "table_candidates": [
            "battle"
        ],
        "align_scores": [
            0.9941502213478088,
            0.0002084932930301875,
            0.00025184504920616746,
            9.430304635316133e-05,
            0.0003242561942897737,
            9.190875425701961e-05,
            0.00040049347444437444,
            8.530141349183396e-05
        ],
        "align_select": "select battle.name, battle.result",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the different ids and names of the battles that lost any 'Brig' type shipes?",
        "gold_select": "select distinct battle.id, battle.name",
        "select_candidates": [
            "select distinct battle.id, battle.name",
            "select distinct battle.name, battle.id",
            "select unique battle.id, battle.name",
            "select distinct battle.name, battle.date"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "battle ship",
        "table_candidates": [
            "battle ship"
        ],
        "align_scores": [
            0.9802969694137573,
            0.01701049506664276,
            0.9791715741157532,
            0.003009061561897397,
            0.0006231222650967538,
            0.00020448409486562014,
            0.00037008197978138924,
            0.000121563789434731
        ],
        "align_select": "select distinct battle.id, battle.name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the ids and names of the battles that led to more than 10 people killed in total.",
        "gold_select": "select battle.id, battle.name",
        "select_candidates": [
            "select battle.id, battle.name",
            "select battle.name, battle.id",
            "select battle.date, battle.name",
            "select death.id, battle.name"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "battle ship death",
        "table_candidates": [
            "battle death"
        ],
        "align_scores": [
            0.8700404167175293,
            0.00014375592581927776,
            0.8943005204200745,
            0.0001447382674086839,
            0.0005957760149613023,
            6.981875048950315e-05,
            0.0019184896955266595,
            0.00011819026985904202
        ],
        "align_select": "select battle.id, battle.name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What is the ship id and name that caused most total injuries?",
        "gold_select": "select ship.id, ship.name",
        "select_candidates": [
            "select ship.id, ship.name",
            "select ship.id, ship.name, ship.lib",
            "select ship.id, ship.name, ship.tonnage",
            "select ship.id, ship.name, ship.st"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "ship death",
        "table_candidates": [
            "ship death"
        ],
        "align_scores": [
            0.9909361004829407,
            7.37186855985783e-05,
            0.00026367238024249673,
            5.5246793635888025e-05,
            0.0002740611380431801,
            5.925039658905007e-05,
            0.00037261974648572505,
            5.9570382290985435e-05
        ],
        "align_select": "select ship.id, ship.name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What are the distinct battle names which are between bulgarian commander 'Kaloyan' and latin commander 'Baldwin I'?",
        "gold_select": "select battle.name",
        "select_candidates": [
            "select distinct battle.name",
            "select distinct battle.name, battle.date",
            "select distinct battle.name, battle.bg_cdr, battle.latin_commander",
            "select distinct battle.name de battle.bg_cdr, battle.latin_commander"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "battle",
        "table_candidates": [
            "battle"
        ],
        "align_scores": [
            0.9951838850975037,
            0.00022994258324615657,
            0.0002246008807560429,
            8.024227281566709e-05,
            0.00019616282952483743,
            7.253669900819659e-05,
            0.0003072470717597753,
            8.65450274432078e-05
        ],
        "align_select": "select distinct battle.name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many battles did not lose any ship with tonnage '225'?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), ship.tonnage",
            "select count(*), ship.tonnage, battle.name",
            "select count(distinct battle.name)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "battle ship",
        "table_candidates": [
            "battle ship"
        ],
        "align_scores": [
            0.9934126734733582,
            0.01841524802148342,
            0.00034067025990225375,
            0.00018263580568600446,
            0.0002088482433464378,
            9.426644828636199e-05,
            0.29839229583740234,
            0.0005823552492074668
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List the name and date the battle that has lost the ship named 'Lettice' and the ship named 'HMS Atalanta'",
        "gold_select": "select battle.name, battle.date",
        "select_candidates": [
            "select battle.name, battle.date",
            "select battle.name, battle.date, ship.lib",
            "select battle.name, battle.date, ship.name",
            "select battle.name, battle.date, ship.st"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "battle ship",
        "table_candidates": [
            "battle ship",
            "battle ship death"
        ],
        "align_scores": [
            0.9423300623893738,
            0.3886212408542633,
            0.00027337323990650475,
            0.00015079614240676165,
            0.0003644007083494216,
            0.0004926958936266601,
            0.00030070464708842337,
            0.0001469219132559374
        ],
        "align_select": "select battle.name, battle.date",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show names, results and bulgarian commanders of the battles with no ships lost in the 'English Channel'.",
        "gold_select": "select battle.name, battle.result, battle.bg_cdr",
        "select_candidates": [
            "select battle.name, battle.result, battle.bg_cdr",
            "select battle.name, battle.bg_cdr, battle.result",
            "select battle.name, battle.result, battle.latin_commander",
            "select battle.name, battle.result, battle.date"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "battle ship",
        "table_candidates": [
            "battle ship"
        ],
        "align_scores": [
            0.0015074722468852997,
            0.9940150380134583,
            0.001050284132361412,
            0.9937058091163635,
            0.0005083389696665108,
            0.004791088867932558,
            0.0002500207629054785,
            0.0004845485382247716
        ],
        "align_select": "select battle.name, battle.result, battle.bg_cdr",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many ships ended up being 'Captured'?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), ship.dos",
            "select count(*), ship.lib",
            "select count(*), ship.id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "ship",
        "table_candidates": [
            "ship"
        ],
        "align_scores": [
            0.9933013916015625,
            0.002904759254306555,
            0.00032721130992285907,
            0.0012136567384004593,
            0.00028649219893850386,
            0.00022006413200870156,
            0.00024764405679889023,
            0.0003916096466127783
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the different ids and names of the battles that lost any 'Brig' type shipes?",
        "gold_select": "select distinct battle.id, battle.name",
        "select_candidates": [
            "select distinct battle.id, battle.name",
            "select distinct battle.name, battle.id",
            "select distinct battle.name, battle.date",
            "select unique battle.id, battle.name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "battle ship",
        "table_candidates": [
            "battle ship",
            "battle ship death"
        ],
        "align_scores": [
            0.9802969694137573,
            0.01701049506664276,
            0.9791715741157532,
            0.003009061561897397,
            0.00037008197978138924,
            0.000121563789434731,
            0.0006231222650967538,
            0.00020448409486562014
        ],
        "align_select": "select distinct battle.id, battle.name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the ids and names of the battles that led to more than 10 people killed in total.",
        "gold_select": "select battle.id, battle.name",
        "select_candidates": [
            "select battle.id, battle.name",
            "select battle.name, battle.id",
            "select battle.date, battle.name",
            "select death.id, battle.name"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "battle ship death",
        "table_candidates": [
            "battle death"
        ],
        "align_scores": [
            0.8700404167175293,
            0.00014375592581927776,
            0.8943005204200745,
            0.0001447382674086839,
            0.0005957760149613023,
            6.981875048950315e-05,
            0.0019184896955266595,
            0.00011819026985904202
        ],
        "align_select": "select battle.id, battle.name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the distinct battle names which are between bulgarian commander 'Kaloyan' and latin commander 'Baldwin I'?",
        "gold_select": "select battle.name",
        "select_candidates": [
            "select distinct battle.name",
            "select distinct battle.name, battle.date",
            "select distinct battle.name, battle.bulgarian_commander, battle.latin_cdr",
            "select distinct battle.name, battle.date, battle.bulgarian_commander"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "battle",
        "table_candidates": [
            "battle"
        ],
        "align_scores": [
            0.9951838850975037,
            0.00022994258324615657,
            0.0002246008807560429,
            8.024227281566709e-05,
            0.00020500883692875504,
            7.092302985256538e-05,
            0.00011905763676622882,
            6.232922896742821e-05
        ],
        "align_select": "select distinct battle.name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many battles did not lose any ship with tonnage '225'?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), ship.tonnage",
            "select count(distinct battle.name)",
            "select count(*), ship.id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "battle ship",
        "table_candidates": [
            "battle ship",
            "battle ship death"
        ],
        "align_scores": [
            0.9934126734733582,
            0.01841524802148342,
            0.00034067025990225375,
            0.00018263580568600446,
            0.29839229583740234,
            0.0005823552492074668,
            0.0003227895649615675,
            0.00017452087195124477
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List the name and date the battle that has lost the ship named 'Lettice' and the ship named 'HMS Atalanta'",
        "gold_select": "select battle.name, battle.date",
        "select_candidates": [
            "select battle.name, battle.date",
            "select battle.name, battle.date, ship.lib",
            "select battle.name, battle.date, ship.name",
            "select battle.name, battle.date, ship.st"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "battle ship",
        "table_candidates": [
            "battle ship death",
            "battle ship"
        ],
        "align_scores": [
            0.9423300623893738,
            0.3886212408542633,
            0.00027337323990650475,
            0.00015079614240676165,
            0.0003644007083494216,
            0.0004926958936266601,
            0.00030070464708842337,
            0.0001469219132559374
        ],
        "align_select": "select battle.name, battle.date",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show names, results and bulgarian commanders of the battles with no ships lost in the 'English Channel'.",
        "gold_select": "select battle.name, battle.result, battle.bulgarian_commander",
        "select_candidates": [
            "select battle.name, battle.result, battle.bulgarian_commander",
            "select battle.name, battle.bulgarian_commander, battle.result",
            "select battle.name, battle.date, battle.bulgarian_commander",
            "select battle.name, battle.result, battle.bulgarian_commander"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "battle ship",
        "table_candidates": [
            "battle ship"
        ],
        "align_scores": [
            0.00038508878787979484,
            0.0004213523061480373,
            0.00039429060416296124,
            0.0003457696584518999,
            0.0003009943466167897,
            0.00016077315376605839,
            0.00038508878787979484,
            0.0004213523061480373
        ],
        "align_select": "select battle.name, battle.result, battle.bulgarian_commander",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the name and results of the battles when the bulgarian commander is not 'Boril'",
        "gold_select": "select battle.name, battle.result",
        "select_candidates": [
            "select battle.name, battle.result",
            "select battle.id, battle.name, battle.result",
            "select battle.name, battle.date, battle.result",
            "select battle.name, battle.bg_cdr, battle.result"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "battle",
        "table_candidates": [
            "battle"
        ],
        "align_scores": [
            0.9941502213478088,
            0.0002084932930301875,
            0.00025184504920616746,
            9.430304635316133e-05,
            0.0003242561942897737,
            9.190875425701961e-05,
            0.00040049347444437444,
            8.530141349183396e-05
        ],
        "align_select": "select battle.name, battle.result",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the different ids and names of the battles that lost any 'Brig' type shipes?",
        "gold_select": "select distinct battle.id, battle.name",
        "select_candidates": [
            "select distinct battle.id, battle.name",
            "select distinct battle.name, battle.id",
            "select distinct battle.name, battle.date",
            "select unique battle.id, battle.name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "battle ship",
        "table_candidates": [
            "battle ship",
            "battle ship death"
        ],
        "align_scores": [
            0.9802969694137573,
            0.01701049506664276,
            0.9791715741157532,
            0.003009061561897397,
            0.00037008197978138924,
            0.000121563789434731,
            0.0006231222650967538,
            0.00020448409486562014
        ],
        "align_select": "select distinct battle.id, battle.name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the ids and names of the battles that led to more than 10 people killed in total.",
        "gold_select": "select battle.id, battle.name",
        "select_candidates": [
            "select battle.id, battle.name",
            "select battle.name, battle.id",
            "select battle.date, battle.name",
            "select death.id, battle.name"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "battle ship death",
        "table_candidates": [
            "battle death"
        ],
        "align_scores": [
            0.8700404167175293,
            0.00014375592581927776,
            0.8943005204200745,
            0.0001447382674086839,
            0.0005957760149613023,
            6.981875048950315e-05,
            0.0019184896955266595,
            0.00011819026985904202
        ],
        "align_select": "select battle.id, battle.name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the distinct battle names which are between bulgarian commander 'Kaloyan' and latin commander 'Baldwin I'?",
        "gold_select": "select battle.name",
        "select_candidates": [
            "select distinct battle.name",
            "select distinct battle.name, battle.date",
            "select distinct battle.name, battle.bg_cdr, battle.latin_commander",
            "select distinct battle.name de battle.bg_cdr, battle.latin_commander"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "battle",
        "table_candidates": [
            "battle"
        ],
        "align_scores": [
            0.9951838850975037,
            0.00022994258324615657,
            0.0002246008807560429,
            8.024227281566709e-05,
            0.00019616282952483743,
            7.253669900819659e-05,
            0.0003072470717597753,
            8.65450274432078e-05
        ],
        "align_select": "select distinct battle.name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many battles did not lose any ship with tonnage '225'?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), ship.tonnage",
            "select count(*), ship.id",
            "select count(distinct battle.name)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "battle ship",
        "table_candidates": [
            "battle ship",
            "battle ship death"
        ],
        "align_scores": [
            0.9934126734733582,
            0.01841524802148342,
            0.00034067025990225375,
            0.00018263580568600446,
            0.0003227895649615675,
            0.00017452087195124477,
            0.29839229583740234,
            0.0005823552492074668
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List the name and date the battle that has lost the ship named 'Lettice' and the ship named 'HMS Atalanta'",
        "gold_select": "select battle.name, battle.date",
        "select_candidates": [
            "select battle.name, battle.date",
            "select battle.name, battle.date, ship.lib",
            "select battle.name, battle.date, ship.name",
            "select battle.name, battle.date, ship.st"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "battle ship",
        "table_candidates": [
            "battle ship death"
        ],
        "align_scores": [
            0.9423300623893738,
            0.3886212408542633,
            0.00027337323990650475,
            0.00015079614240676165,
            0.0003644007083494216,
            0.0004926958936266601,
            0.00030070464708842337,
            0.0001469219132559374
        ],
        "align_select": "select battle.name, battle.date",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show names, results and bulgarian commanders of the battles with no ships lost in the 'English Channel'.",
        "gold_select": "select battle.name, battle.result, battle.bg_cdr",
        "select_candidates": [
            "select battle.name, battle.result, battle.bg_cdr",
            "select battle.name, battle.bg_cdr, battle.result",
            "select battle.name, battle.result, battle.latin_commander",
            "select battle.name, battle.result, battle.date"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "battle ship",
        "table_candidates": [
            "battle ship"
        ],
        "align_scores": [
            0.0015074722468852997,
            0.9940150380134583,
            0.001050284132361412,
            0.9937058091163635,
            0.0005083389696665108,
            0.004791088867932558,
            0.0002500207629054785,
            0.0004845485382247716
        ],
        "align_select": "select battle.name, battle.result, battle.bg_cdr",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many ships ended up being 'Captured'?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), ship.dos",
            "select count(*), ship.lost_in_battle",
            "select count(*), ship.id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "ship",
        "table_candidates": [
            "ship"
        ],
        "align_scores": [
            0.9933013916015625,
            0.002904759254306555,
            0.00032721130992285907,
            0.0012136567384004593,
            0.0001856009039329365,
            0.000502985727507621,
            0.00024764405679889023,
            0.0003916096466127783
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How is the math course described?",
        "gold_select": "select Courses.course_description",
        "select_candidates": [
            "select Courses.course_description",
            "select Courses.course_description, Courses.oth_dtl",
            "select Courses.course_description, Courses.crs_name",
            "select Courses.course_description, t1.c4"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Courses",
        "table_candidates": [
            "Courses"
        ],
        "align_scores": [
            0.9960052371025085,
            8.554767555324361e-05,
            0.0001739293074933812,
            7.303032180061564e-05,
            0.0001727160852169618,
            6.857552943984047e-05,
            0.0004211956693325192,
            8.28708871267736e-05
        ],
        "align_select": "select Courses.course_description",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the descriptions for all the math courses?",
        "gold_select": "select Courses.course_description",
        "select_candidates": [
            "select Courses.course_description",
            "select Courses.course_description, Courses.oth_dtl",
            "select t1.c5, Courses.course_description",
            "select Courses.course_description, Courses.crs_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Courses",
        "table_candidates": [
            "Courses",
            "Courses Student_Enrolment_Courses"
        ],
        "align_scores": [
            0.9948550462722778,
            0.00011960999108850956,
            0.00019797758432105184,
            7.244565495057032e-05,
            0.0002770883438643068,
            7.825313514331356e-05,
            0.00015445185999851674,
            6.636087346123531e-05
        ],
        "align_select": "select Courses.course_description",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the zip code of the address in the city Port Chelsea?",
        "gold_select": "select Addresses.zipcode",
        "select_candidates": [
            "select Addresses.zipcode",
            "select Addresses.zipcode, Addresses.state_province_county",
            "select Addresses.zipcode, Addresses.other_address_details",
            "select Addresses.zipcode, Addresses.country"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Addresses",
        "table_candidates": [
            "Addresses"
        ],
        "align_scores": [
            0.9839406609535217,
            0.0001019331393763423,
            0.00023175821115728468,
            6.524693890241906e-05,
            0.00017968894098885357,
            5.856082498212345e-05,
            0.0001717306295176968,
            5.653868356603198e-05
        ],
        "align_select": "select Addresses.zipcode",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the zip code for Port Chelsea?",
        "gold_select": "select Addresses.zipcode",
        "select_candidates": [
            "select Addresses.zipcode",
            "select Addresses.zipcode, Addresses.city",
            "select Addresses.zipcode, Addresses.state_province_county",
            "select Addresses.zipcode, Addresses.country"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Addresses",
        "table_candidates": [
            "Addresses"
        ],
        "align_scores": [
            0.9911419153213501,
            0.00016120036889333278,
            0.00016645187861286104,
            5.5997483286773786e-05,
            0.00023954271455295384,
            6.796927482355386e-05,
            0.00015985155187081546,
            5.645700002787635e-05
        ],
        "align_select": "select Addresses.zipcode",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which department offers the most number of degrees? List department name and id.",
        "gold_select": "select Departments.department_name, Degree_Programs.dept_id",
        "select_candidates": [
            "select Departments.department_name, Degree_Programs.dept_id",
            "select Departments.department_name, Departments.department_id",
            "select Departments.department_name, Degree_Programs.degree_pmg_id",
            "select Departments.department_name, t03.c1"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-UNION-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Departments Degree_Programs",
        "table_candidates": [
            "Departments Degree_Programs"
        ],
        "align_scores": [
            0.989300012588501,
            0.00015387401799671352,
            0.9885138869285583,
            0.0001262761070393026,
            0.011763349175453186,
            0.00014646926138084382,
            0.0003632967418525368,
            7.857399759814143e-05
        ],
        "align_select": "select Departments.department_name, Degree_Programs.dept_id",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the name and id of the department with the most number of degrees?",
        "gold_select": "select Departments.department_name, Degree_Programs.dept_id",
        "select_candidates": [
            "select Departments.department_name, Degree_Programs.dept_id",
            "select Departments.department_name, Departments.department_id",
            "select Departments.department_name, t03.c1",
            "select Departments.department_name, Degree_Programs.dept_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Departments Degree_Programs",
        "table_candidates": [
            "Departments Degree_Programs"
        ],
        "align_scores": [
            0.9915696978569031,
            8.266812073998153e-05,
            0.9938051700592041,
            6.756240327376872e-05,
            0.00032264008768834174,
            6.236479384824634e-05,
            0.9915696978569031,
            8.266812073998153e-05
        ],
        "align_select": "select Departments.department_name, Degree_Programs.dept_id",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "How many departments offer any degree?",
        "gold_select": "select count(distinct Degree_Programs.dept_id)",
        "select_candidates": [
            "select count(distinct Degree_Programs.dept_id)",
            "select count(distinct Degree_Programs.dept_id)",
            "select count(distinct Degree_Programs.dept_id )",
            "select count(distinct Degree_Programs.dept_id"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Degree_Programs",
        "table_candidates": [
            "Degree_Programs",
            "Departments Degree_Programs",
            "Addresses Departments Degree_Programs"
        ],
        "align_scores": [
            0.9763538837432861,
            0.00015637700562365353,
            0.9763538837432861,
            0.00015637700562365353,
            0.8812103867530823,
            0.0001254468079423532,
            0.3932388722896576,
            0.00014539835683535784
        ],
        "align_select": "select count(distinct Degree_Programs.dept_id)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "How many different departments offer degrees?",
        "gold_select": "select count(distinct Degree_Programs.dept_id)",
        "select_candidates": [
            "select count(distinct Degree_Programs.dept_id)",
            "select count(distinct Degree_Programs.dept_id)",
            "select count(distinct Degree_Programs.dept_id )",
            "select count(distinct t3, Degree_Programs.dept_id)"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "Degree_Programs",
        "table_candidates": [
            "Degree_Programs",
            "Departments Degree_Programs"
        ],
        "align_scores": [
            0.9947707056999207,
            0.9947707056999207,
            0.9947707056999207,
            0.9947707056999207,
            0.9534288048744202,
            0.9534288048744202,
            0.0007552235620096326,
            0.0007552235620096326
        ],
        "align_select": "select count(distinct Degree_Programs.dept_id)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "How many different degree names are offered?",
        "gold_select": "select count(distinct Degree_Programs.degree_smry_name)",
        "select_candidates": [
            "select count(distinct Degree_Programs.degree_smry_name)",
            "select count(distinct Degree_Programs.degree_smry_name",
            "select count(distinct t3.c6)",
            "select count(distinct Degree_Programs.dept_id)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "Degree_Programs",
        "table_candidates": [
            "Degree_Programs"
        ],
        "align_scores": [
            0.7469585537910461,
            0.7469585537910461,
            0.016932480037212372,
            0.016932480037212372,
            0.0006718829390592873,
            0.0006718829390592873,
            0.0010099461069330573,
            0.0010099461069330573
        ],
        "align_select": "select count(distinct Degree_Programs.degree_smry_name)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "How many different degrees are offered?",
        "gold_select": "select count(distinct Degree_Programs.degree_smry_name)",
        "select_candidates": [
            "select count(distinct Degree_Programs.degree_smry_name)",
            "select count(distinct Degree_Programs.degree_pmg_id)",
            "select count(distinct Degree_Programs.dept_id)",
            "select count(distinct Degree_Programs.degree_smry_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "Degree_Programs",
        "table_candidates": [
            "Degree_Programs"
        ],
        "align_scores": [
            0.5669377446174622,
            0.5669377446174622,
            0.04923822730779648,
            0.04923822730779648,
            0.0065006073564291,
            0.0065006073564291,
            0.01963476464152336,
            0.01963476464152336
        ],
        "align_select": "select count(distinct Degree_Programs.degree_smry_name)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "How many degrees does the engineering department offer?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(distinct Degree_Programs.degree_smry_name)",
            "select count(distinct Degree_Programs.degree_pmg_id)",
            "select count(distinct Degree_Programs.dept_id)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Departments Degree_Programs",
        "table_candidates": [
            "Departments Degree_Programs",
            "Courses Departments Degree_Programs",
            "Addresses Departments Degree_Programs"
        ],
        "align_scores": [
            0.9851910471916199,
            0.00030581100145354867,
            0.0013812684919685125,
            7.682353316340595e-05,
            0.0005709254182875156,
            7.783777255099267e-05,
            0.0008483996498398483,
            0.00010765278420876712
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many degrees does the engineering department have?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Departments.department_name",
            "select count(*), Departments.department_id",
            "select count(distinct Degree_Programs.degree_pmg_id)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Departments Degree_Programs",
        "table_candidates": [
            "Departments Degree_Programs",
            "Courses Departments Degree_Programs",
            "Addresses Departments Degree_Programs"
        ],
        "align_scores": [
            0.9927553534507751,
            0.0006525854696519673,
            0.00019344138854648918,
            0.0004833164275623858,
            0.000218888686504215,
            0.00022428545344155282,
            0.00041897076880559325,
            8.27432086225599e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names and descriptions of all the sections?",
        "gold_select": "select Sections.section_name, Sections.sect_desc",
        "select_candidates": [
            "select Sections.section_name, Sections.sect_desc",
            "select Sections.section_name, Sections.sect_desc, Sections.other_dtl",
            "select Sections.section_name, sect_Sections.sect_desc",
            "select Sections.section_name, Sections.sect_desc, Sections.section_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Sections",
        "table_candidates": [
            "Sections",
            "Departments Sections",
            "Courses Sections",
            "Addresses Courses Sections",
            "Degree_Programs Sections"
        ],
        "align_scores": [
            0.9895166754722595,
            0.00018299472867511213,
            0.00034055591095238924,
            7.281169382622465e-05,
            0.0008641206077300012,
            0.00013273756485432386,
            0.00026005375548265874,
            7.935076428111643e-05
        ],
        "align_select": "select Sections.section_name, Sections.sect_desc",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What are the names and descriptions for all the sections?",
        "gold_select": "select Sections.section_name, Sections.sect_desc",
        "select_candidates": [
            "select Sections.section_name, Sections.sect_desc",
            "select Sections.section_id, Sections.section_name, Sections.sect_desc",
            "select Sections.section_name, Sections.sect_desc, Sections.other_dtl",
            "select Sections.section_name, Sections.sect_desc, Sections.section_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Sections",
        "table_candidates": [
            "Sections",
            "Courses Sections",
            "Departments Sections",
            "Addresses Courses Sections",
            "Addresses Courses Departments Sections",
            "Degree_Programs Sections"
        ],
        "align_scores": [
            0.9906795620918274,
            0.00017071237380150706,
            0.00022528335102833807,
            8.070455078268424e-05,
            0.00030646007508039474,
            7.330717926379293e-05,
            0.00026106281438842416,
            7.860674668336287e-05
        ],
        "align_select": "select Sections.section_name, Sections.sect_desc",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What are the names and id of courses having at most 2 sections?",
        "gold_select": "select Courses.crs_name, Courses.course_id",
        "select_candidates": [
            "select Courses.crs_name, Sections.course_id",
            "select Courses.crs_name, Courses.course_id",
            "select Courses.crs_name, Sections.section_id",
            "select Courses.crs_name, Departments.department_id"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Courses Sections",
        "table_candidates": [
            "Courses Sections",
            "Courses Departments Sections",
            "Courses Degree_Programs Sections"
        ],
        "align_scores": [
            0.08541390299797058,
            0.00012229185085743666,
            0.004258350003510714,
            0.00014827639097347856,
            0.0013363480102270842,
            0.0001018498805933632,
            0.00033082696609199047,
            9.172165300697088e-05
        ],
        "align_select": "select Courses.crs_name, Sections.course_id",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the names and ids of every course with less than 2 sections?",
        "gold_select": "select Courses.crs_name, Courses.course_id",
        "select_candidates": [
            "select Courses.crs_name, Sections.course_id",
            "select Courses.crs_name, Courses.course_id",
            "select Courses.crs_name, Sections.section_id",
            "select Courses.course_description, Courses.course_id"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Courses Sections",
        "table_candidates": [
            "Courses Sections",
            "Courses Departments Sections"
        ],
        "align_scores": [
            0.049219902604818344,
            0.00013601157115772367,
            0.008238225243985653,
            0.00014845833356957883,
            0.000737199152354151,
            0.0001346681237919256,
            0.8946622014045715,
            0.00010647160524968058
        ],
        "align_select": "select Courses.course_description, Courses.course_id",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What is the description of the department whose name has the substring the computer?",
        "gold_select": "select Departments.dept_desc",
        "select_candidates": [
            "select Departments.dept_desc",
            "select Departments.department_name, Departments.dept_desc",
            "select Departments.dept_desc, Departments.oth_dtl",
            "select Departments.dept_desc, Departments.department_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Departments",
        "table_candidates": [
            "Departments",
            "Addresses Courses Departments",
            "Courses Departments",
            "Addresses Departments",
            "Departments Degree_Programs",
            "Departments Student_Enrolment",
            "Departments Degree_Programs Sections",
            "Departments Transcripts"
        ],
        "align_scores": [
            0.9591444134712219,
            0.00010964065586449578,
            0.0002356625918764621,
            6.943300104467198e-05,
            0.0001649719924898818,
            7.506294059567153e-05,
            0.00018788913439493626,
            6.173637666506693e-05
        ],
        "align_select": "select Departments.dept_desc",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the department description for the one whose name has the word computer?",
        "gold_select": "select Departments.dept_desc",
        "select_candidates": [
            "select Departments.dept_desc",
            "select Departments.department_name, Departments.dept_desc",
            "select Departments.dept_desc, Departments.oth_dtl",
            "select Departments.dept_desc, Departments.department_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Departments",
        "table_candidates": [
            "Departments",
            "Courses Departments",
            "Addresses Departments",
            "Departments Transcripts",
            "Departments Degree_Programs",
            "Departments Student_Enrolment_Courses",
            "Departments Student_Enrolment",
            "Departments Sections"
        ],
        "align_scores": [
            0.9947039484977722,
            8.869915473042056e-05,
            0.00021022235159762204,
            6.661150109721348e-05,
            0.00014185093459673226,
            6.90446249791421e-05,
            0.00017754831060301512,
            5.920103285461664e-05
        ],
        "align_select": "select Departments.dept_desc",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Who is enrolled in a Bachelor degree program? List the first name, middle name, last name.",
        "gold_select": "select distinct Students.first_name, Students.middle_name, Students.last_name",
        "select_candidates": [
            "select Students.first_name, Students.middle_name, Students.last_name",
            "select Students.student_id, Students.first_name, Students.middle_name, Students.last_name",
            "select distinct Students.first_name, Students.middle_name, Students.last_name",
            "select Students.first_name., Students.middle_name, Students.last_name"
        ],
        "select_labels": [
            0.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Degree_Programs Students Student_Enrolment",
        "table_candidates": [
            "Degree_Programs Students Student_Enrolment",
            "Degree_Programs Students",
            "Courses Degree_Programs Students Student_Enrolment",
            "Departments Degree_Programs Students Student_Enrolment",
            "Addresses Degree_Programs Students Student_Enrolment",
            "Degree_Programs Students Student_Enrolment_Courses"
        ],
        "align_scores": [
            0.986777126789093,
            0.00014054845087230206,
            0.00022958552290219814,
            9.157980821328238e-05,
            0.027531510218977928,
            6.963796477066353e-05,
            0.009021847508847713,
            0.00012906407937407494
        ],
        "align_select": "select Students.first_name, Students.middle_name, Students.last_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the first, middle, and last names for everybody enrolled in a Bachelors program?",
        "gold_select": "select distinct Students.first_name, Students.middle_name, Students.last_name",
        "select_candidates": [
            "select Students.first_name, Students.middle_name, Students.last_name",
            "select Students.student_id, Students.first_name, Students.middle_name, Students.last_name",
            "select Students.first_name, Students.middle_name, Students.last_name",
            "select Students.first_name., Students.middle_name, Students.last_name"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Degree_Programs Students Student_Enrolment",
        "table_candidates": [
            "Degree_Programs Students Student_Enrolment",
            "Students Student_Enrolment",
            "Departments Degree_Programs Students Student_Enrolment",
            "Addresses Degree_Programs Students Student_Enrolment",
            "Semesters Students Student_Enrolment",
            "Courses Students Student_Enrolment",
            "Sections Students Student_Enrolment",
            "Courses Degree_Programs Students Student_Enrolment"
        ],
        "align_scores": [
            0.9808099865913391,
            0.00011929730681004003,
            0.00017432561435271055,
            8.177719428204e-05,
            0.9808099865913391,
            0.00011929730681004003,
            0.009363340213894844,
            0.00010620704415487126
        ],
        "align_select": "select Students.first_name, Students.middle_name, Students.last_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the kind of program which most number of students are enrolled in?",
        "gold_select": "select Degree_Programs.degree_smry_name",
        "select_candidates": [
            "select Degree_Programs.degree_smry_name",
            "select Degree_Programs.degree_smry_name, Student_Enrolment.degree_program_id",
            "select Degree_Programs.degree_smry_name, Student_Enrolment.student_id",
            "select Degree_Programs.dept_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Degree_Programs Student_Enrolment",
        "table_candidates": [
            "Degree_Programs Student_Enrolment",
            "Courses Degree_Programs Student_Enrolment",
            "Departments Degree_Programs Student_Enrolment",
            "Courses Departments Degree_Programs Student_Enrolment",
            "Addresses Degree_Programs Student_Enrolment",
            "Sections Student_Enrolment",
            "Semesters Student_Enrolment"
        ],
        "align_scores": [
            0.6106048822402954,
            0.00011522482964210212,
            0.0031892266124486923,
            8.89586954144761e-05,
            0.0002782439114525914,
            7.288254710147157e-05,
            0.08700103312730789,
            9.449738718103617e-05
        ],
        "align_select": "select Degree_Programs.degree_smry_name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the degree summary name that has the most number of students enrolled?",
        "gold_select": "select Degree_Programs.degree_smry_name",
        "select_candidates": [
            "select Degree_Programs.degree_smry_name",
            "select Degree_Programs.degree_smry_name, Student_Enrolment.student_id",
            "select Degree_Programs.degree_smry_name, Degree_Programs.degree_smry_desc",
            "select Degree_Programs.degree_smry_name, Student_Enrolment.degree_program_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Degree_Programs Student_Enrolment",
        "table_candidates": [
            "Degree_Programs Student_Enrolment",
            "Courses Degree_Programs Student_Enrolment",
            "Addresses Degree_Programs Student_Enrolment",
            "Departments Student_Enrolment",
            "Departments Degree_Programs Student_Enrolment"
        ],
        "align_scores": [
            0.9436674118041992,
            0.00011609301145654172,
            0.00027519487775862217,
            9.107920777751133e-05,
            0.00037375520332716405,
            7.214618381112814e-05,
            0.0010153497569262981,
            8.797916234470904e-05
        ],
        "align_select": "select Degree_Programs.degree_smry_name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Find the program which most number of students are enrolled in. List both the id and the summary.",
        "gold_select": "select Degree_Programs.degree_pmg_id, Degree_Programs.degree_smry_name",
        "select_candidates": [
            "select Degree_Programs.dept_id, Degree_Programs.degree_smry_name",
            "select Degree_Programs.degree_pmg_id, Degree_Programs.degree_smry_name",
            "select Degree_Programs.dept_id, Courses.course_description",
            "select Degree_Programs.degree_pmg_id, Courses.course_description"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Degree_Programs Student_Enrolment",
        "table_candidates": [
            "Degree_Programs Students",
            "Courses Degree_Programs Students",
            "Degree_Programs Students Student_Enrolment_Courses",
            "Degree_Programs Students Student_Enrolment",
            "Students Student_Enrolment_Courses",
            "Courses Degree_Programs Students Student_Enrolment",
            "Courses Degree_Programs Students Student_Enrolment_Courses"
        ],
        "align_scores": [
            0.005025828257203102,
            9.972402040148154e-05,
            0.03151069954037666,
            0.00010671820200514048,
            0.16219952702522278,
            0.00011189694487256929,
            0.5687587857246399,
            0.00012414080265443772
        ],
        "align_select": "select Degree_Programs.degree_pmg_id, Courses.course_description",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the program id and the summary of the degree that has the most students enrolled?",
        "gold_select": "select Degree_Programs.degree_pmg_id, Degree_Programs.degree_smry_name",
        "select_candidates": [
            "select Degree_Programs.degree_pmg_id, Degree_Programs.degree_smry_desc",
            "select Degree_Programs.dept_id, Degree_Programs.degree_smry_desc",
            "select Degree_Programs.degree_pmg_id, Degree_Programs.degree_smry_name",
            "select Degree_Programs.degree_smry_name, Degree_Programs.degree_smry_desc"
        ],
        "select_labels": [
            0.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-UNION-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Degree_Programs Student_Enrolment",
        "table_candidates": [
            "Degree_Programs Student_Enrolment",
            "Departments Degree_Programs Student_Enrolment",
            "Courses Degree_Programs Student_Enrolment"
        ],
        "align_scores": [
            0.9705052971839905,
            0.00017759892216417938,
            0.0017882719403132796,
            9.710429003462195e-05,
            0.9650827050209045,
            0.00018100306624546647,
            0.00026801376952789724,
            7.911789725767449e-05
        ],
        "align_select": "select Degree_Programs.degree_pmg_id, Degree_Programs.degree_smry_desc",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What are all the course names of the courses which ever have students enrolled in?",
        "gold_select": "select distinct Courses.crs_name",
        "select_candidates": [
            "select Courses.crs_name",
            "select distinct Courses.crs_name",
            "select Courses.crs_name, Student_Enrolment.semester_id",
            "select distinct Courses.crs_name, Student_Enrolment.semester_id"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Courses Student_Enrolment_Courses",
        "table_candidates": [
            "Courses Student_Enrolment",
            "Courses Sections Student_Enrolment",
            "Courses Students Student_Enrolment",
            "Addresses Courses Student_Enrolment",
            "Addresses Courses Sections Student_Enrolment"
        ],
        "align_scores": [
            0.05802886560559273,
            0.2508277893066406,
            0.3849372863769531,
            0.10622004419565201,
            0.0002485825098119676,
            0.00017501380352769047,
            0.00046953384298831224,
            0.0002345189859624952
        ],
        "align_select": "select distinct Courses.crs_name",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What are the names of all courses that have some students enrolled?",
        "gold_select": "select distinct Courses.crs_name",
        "select_candidates": [
            "select Courses.crs_name",
            "select Courses.crs_name, Student_Enrolment.semester_id",
            "select distinct Courses.crs_name",
            "select distinct Courses.crs_name, Student_Enrolment.semester_id"
        ],
        "select_labels": [
            0.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Courses Student_Enrolment_Courses",
        "table_candidates": [
            "Courses Student_Enrolment",
            "Courses Sections Student_Enrolment",
            "Courses Students Student_Enrolment",
            "Courses Semesters Student_Enrolment",
            "Addresses Courses Student_Enrolment",
            "Addresses Courses Sections Student_Enrolment",
            "Courses Student_Enrolment_Courses",
            "Courses Student_Enrolment Sections Student_Enrolment"
        ],
        "align_scores": [
            0.3033795952796936,
            0.0021319370716810226,
            0.0003078305162489414,
            0.0001325520279351622,
            0.7246595025062561,
            0.018600977957248688,
            0.00022226224245969206,
            0.0001112619720515795
        ],
        "align_select": "select distinct Courses.crs_name",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What's the name of the course with most number of enrollments?",
        "gold_select": "select Courses.crs_name",
        "select_candidates": [
            "select Courses.crs_name",
            "select Courses.crs_name, Student_Enrolment.semester_id",
            "select Courses.crs_name, Courses.course_description",
            "select Courses.crs_name (Courses.course_description)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Courses Student_Enrolment_Courses",
        "table_candidates": [
            "Courses Student_Enrolment",
            "Courses Sections Student_Enrolment",
            "Courses Degree_Programs Sections Student_Enrolment",
            "Courses Students Student_Enrolment",
            "Courses Departments Student_Enrolment",
            "Courses Semesters Student_Enrolment",
            "Courses Departments Sections Student_Enrolment",
            "Courses Student_Enrolment_Courses"
        ],
        "align_scores": [
            0.9912784695625305,
            8.767857070779428e-05,
            0.00021719539654441178,
            6.36725380900316e-05,
            0.0008165704784914851,
            7.526823901571333e-05,
            0.0015604443615302444,
            6.580958870472386e-05
        ],
        "align_select": "select Courses.crs_name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the name of the course with the most students enrolled?",
        "gold_select": "select Courses.crs_name",
        "select_candidates": [
            "select Courses.crs_name",
            "select Courses.crs_name, Student_Enrolment.semester_id",
            "select Courses.course_description",
            "select Courses.crs_name, Student_Enrolment.student_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Courses Student_Enrolment_Courses",
        "table_candidates": [
            "Courses Sections Student_Enrolment",
            "Courses Student_Enrolment",
            "Courses Departments Sections Student_Enrolment",
            "Courses Degree_Programs Sections Student_Enrolment",
            "Addresses Courses Sections Student_Enrolment",
            "Courses Departments Student_Enrolment",
            "Courses Students Student_Enrolment",
            "Courses Semesters Student_Enrolment"
        ],
        "align_scores": [
            0.9909927845001221,
            0.0001040921633830294,
            0.00023856102779973298,
            6.576842133654281e-05,
            0.9833294153213501,
            9.292475442634895e-05,
            0.0003091587277594954,
            7.199312676675618e-05
        ],
        "align_select": "select Courses.crs_name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Find the last name of the students who currently live in the state of North Carolina but have not registered in any degree program.",
        "gold_select": "select Students.last_name",
        "select_candidates": [
            "select Students.last_name",
            "select Students.last_name, Students.date_first_registered",
            "select Students.last_name, Students.ca_id3",
            "select Students.last_name, Students.ssn"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Addresses Students Student_Enrolment",
        "table_candidates": [
            "Addresses Students",
            "Addresses Degree_Programs Students",
            "Addresses Students Student_Enrolment",
            "Addresses Degree_Programs Students Student_Enrolment",
            "Addresses Departments Degree_Programs Students",
            "Addresses Students Student_Enrolment_Courses",
            "Addresses Courses Students",
            "Addresses Semesters Students"
        ],
        "align_scores": [
            0.7493164539337158,
            0.8573399186134338,
            0.000587664486374706,
            0.00043994945008307695,
            0.00032076917705126107,
            0.00029264064505696297,
            0.0006546663935296237,
            0.0005656217108480632
        ],
        "align_select": "select Students.last_name",
        "align_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM"
    },
    {
        "question": "What are the last name of the students who live in North Carolina but have not registered in any degree programs?",
        "gold_select": "select Students.last_name",
        "select_candidates": [
            "select Students.last_name",
            "select Students.last_name, Students.date_first_registered",
            "select Students.last_name, Students.ssn",
            "select Students.last_name, Students.date_left"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Addresses Students Student_Enrolment",
        "table_candidates": [
            "Addresses Degree_Programs Students",
            "Addresses Degree_Programs Students Student_Enrolment",
            "Addresses Departments Degree_Programs Students",
            "Addresses Courses Degree_Programs Students",
            "Addresses Departments Degree_Programs Students Student_Enrolment",
            "Addresses Degree_Programs Students Student_Enrolment_Courses",
            "Addresses Courses Students",
            "Addresses Courses Students Student_Enrolment"
        ],
        "align_scores": [
            0.7939284443855286,
            0.893947184085846,
            0.0003416531253606081,
            0.0002842562971636653,
            0.00045751978177577257,
            0.0004085684195160866,
            0.0002123776648659259,
            0.0001987295545404777
        ],
        "align_select": "select Students.last_name",
        "align_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM"
    },
    {
        "question": "What is the phone number of the man with the first name Timmothy and the last name Ward?",
        "gold_select": "select Students.cell",
        "select_candidates": [
            "select Students.cell",
            "select Students.cell, Students.ca_id3",
            "select Students.cell, Students.email_address",
            "select Students.cell, Students.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Students",
        "table_candidates": [
            "Students",
            "Addresses Students",
            "Degree_Programs Students",
            "Semesters Students",
            "Students Student_Enrolment",
            "Courses Students",
            "Addresses Courses Students",
            "Sections Students"
        ],
        "align_scores": [
            0.4738241732120514,
            8.500763215124607e-05,
            0.00019692067871801555,
            7.085833931341767e-05,
            0.00021677211043424904,
            7.30691899661906e-05,
            0.0001865524100139737,
            7.065760291879997e-05
        ],
        "align_select": "select Students.cell",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the mobile phone number of the student named Timmothy Ward?",
        "gold_select": "select Students.cell",
        "select_candidates": [
            "select Students.cell",
            "select Students.cell, Students.email_address",
            "select Students.cell, Students.ssn",
            "select Students.cell, Students.date_first_registered"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Students",
        "table_candidates": [
            "Students",
            "Students Student_Enrolment",
            "Addresses Students",
            "Addresses Students Student_Enrolment",
            "Semesters Students",
            "Courses Students Student_Enrolment",
            "Semesters Students Student_Enrolment",
            "Degree_Programs Students Student_Enrolment"
        ],
        "align_scores": [
            0.9767071008682251,
            8.081336272880435e-05,
            0.00016909184341784567,
            5.684038842446171e-05,
            0.00022044758952688426,
            6.411219510482624e-05,
            0.0001255085226148367,
            5.325028905645013e-05
        ],
        "align_select": "select Students.cell",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Whose permanent address is different from his or her current address? List his or her first name.",
        "gold_select": "select Students.first_name",
        "select_candidates": [
            "select distinct Students.first_name",
            "select Students.first_name",
            "select Students.student_id, Students.first_name",
            "select distinct Students.first_name, Students.middle_name"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Students",
        "table_candidates": [
            "Addresses Students",
            "Departments Students",
            "Addresses Departments Students",
            "Courses Students",
            "Addresses Students Student_Enrolment_Courses",
            "Degree_Programs Students",
            "Addresses Courses Students",
            "Addresses Courses"
        ],
        "align_scores": [
            0.03285570815205574,
            0.00017483266128692776,
            0.6903728246688843,
            0.0002553312515374273,
            0.00024635496083647013,
            0.00012393109500408173,
            0.00032214028760790825,
            8.044376590987667e-05
        ],
        "align_select": "select Students.first_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the first name of the student whose permanent address is different from his or her current one?",
        "gold_select": "select Students.first_name",
        "select_candidates": [
            "select Students.first_name",
            "select Students.first_name, Students.middle_name, Students.last_name",
            "select distinct Students.first_name",
            "select Students.first_name, Students.middle_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Students",
        "table_candidates": [
            "Addresses Students",
            "Students",
            "Departments Students",
            "Addresses Courses Students",
            "Degree_Programs Students",
            "Courses Students",
            "Semesters Students",
            "Sections Students"
        ],
        "align_scores": [
            0.7999458312988281,
            0.00028177606873214245,
            0.00021157608716748655,
            7.55442088120617e-05,
            0.027247946709394455,
            0.00019756121037062258,
            0.0001950415753526613,
            8.037100633373484e-05
        ],
        "align_select": "select Students.first_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which address holds the most number of students currently? List the address id and all lines.",
        "gold_select": "select Addresses.adr_id, Addresses.line_1, Addresses.line_2",
        "select_candidates": [
            "select Addresses.adr_id, Addresses.line_1, Addresses.line_2",
            "select Addresses.adr_id, Addresses.line_1, Addresses.line_3",
            "select Addresses.adr_id, Addresses.line_1",
            "select Addresses.adr_id, Addresses.line_1, Addresses.line_2, Addresses.line_3"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-UNION-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Addresses Students",
        "table_candidates": [
            "Addresses Students",
            "Addresses Students Student_Enrolment",
            "Addresses Semesters Students",
            "Addresses Students Student_Enrolment_Courses",
            "Addresses Courses Students",
            "Addresses Departments Students",
            "Addresses Student_Enrolment"
        ],
        "align_scores": [
            0.9773598313331604,
            0.0001180723265861161,
            0.1464536041021347,
            0.0001093487226171419,
            0.12243764847517014,
            0.00014992615615483373,
            0.9857978224754333,
            0.00012491419329307973
        ],
        "align_select": "select Addresses.adr_id, Addresses.line_1, Addresses.line_2",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the id, line 1, and line 2 of the address with the most students?",
        "gold_select": "select Addresses.adr_id, Addresses.line_1, Addresses.line_2",
        "select_candidates": [
            "select Addresses.adr_id, Addresses.line_1, Addresses.line_2",
            "select student_Addresses.adr_id, Addresses.line_1, Addresses.line_2",
            "select Students.permanent_address_id, Addresses.line_1, Addresses.line_2",
            "select Students.student_id, Addresses.line_1, Addresses.line_2"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Addresses Students",
        "table_candidates": [
            "Addresses Students",
            "Addresses Students Student_Enrolment_Courses",
            "Addresses Students Student_Enrolment",
            "Addresses Semesters Students",
            "Addresses Student_Enrolment",
            "Addresses Courses Students",
            "Addresses Students Transcripts"
        ],
        "align_scores": [
            0.9936116337776184,
            8.28628326416947e-05,
            0.9760463833808899,
            0.00011414414620958269,
            0.984434187412262,
            9.180749475490302e-05,
            0.007924465462565422,
            8.093853830359876e-05
        ],
        "align_select": "select Addresses.adr_id, Addresses.line_1, Addresses.line_2",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Find the semester when both Master students and Bachelor students got enrolled in.",
        "gold_select": "select distinct Student_Enrolment.semester_id",
        "select_candidates": [
            "select Semesters.semester_name",
            "select Semesters.semester_name, Degree_Programs.degree_smry_name",
            "select Semesters.semester_name, Students.date_first_registered",
            "select Semesters.semester_name, Semesters.semester_description"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-GROUP BY-HAVING-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Degree_Programs Student_Enrolment",
        "table_candidates": [
            "Degree_Programs Students Student_Enrolment",
            "Departments Degree_Programs Semesters Students Student_Enrolment",
            "Departments Degree_Programs Semesters Student_Enrolment",
            "Degree_Programs Semesters Students Student_Enrolment",
            "Courses Degree_Programs Students Student_Enrolment",
            "Departments Degree_Programs Students Student_Enrolment",
            "Semesters Students Student_Enrolment",
            "Courses Students Student_Enrolment"
        ],
        "align_scores": [
            0.9899665117263794,
            0.05180245265364647,
            0.0001986639981623739,
            0.0002901384432334453,
            0.00033447108580730855,
            0.0005164453177712858,
            0.000607820984441787,
            0.0006071219104342163
        ],
        "align_select": "select Semesters.semester_name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "What is the id of the semester that had both Masters and Bachelors students enrolled?",
        "gold_select": "select distinct Student_Enrolment.semester_id",
        "select_candidates": [
            "select Semesters.semester_id",
            "select Students.student_id",
            "select Semesters.semester_name",
            "select Students.ca_id"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-GROUP BY-HAVING-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Degree_Programs Student_Enrolment",
        "table_candidates": [
            "Student_Enrolment",
            "Semesters Students Student_Enrolment",
            "Students Student_Enrolment",
            "Degree_Programs Students Student_Enrolment",
            "Departments Degree_Programs Students Student_Enrolment",
            "Sections Students Student_Enrolment",
            "Courses Students Student_Enrolment",
            "Semesters Student_Enrolment"
        ],
        "align_scores": [
            0.9945153594017029,
            0.0005660871975123882,
            0.0017202097224071622,
            0.00014752316928934306,
            0.699305534362793,
            0.0003016881528310478,
            0.25533998012542725,
            0.0002875369682442397
        ],
        "align_select": "select Semesters.semester_id",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "How many different addresses do the students currently live?",
        "gold_select": "select count(distinct Students.ca_id)",
        "select_candidates": [
            "select count(distinct Addresses.other_address_details)",
            "select count(distinct Students.permanent_address_id)",
            "select count(distinct Addresses.line_2)",
            "select count(distinct Addresses.adr_id)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Students",
        "table_candidates": [
            "Addresses Students",
            "Addresses Students Student_Enrolment_Courses",
            "Students",
            "Courses Students",
            "Departments Students"
        ],
        "align_scores": [
            0.7249465584754944,
            0.00012356930528767407,
            0.4497816860675812,
            0.00013980675430502743,
            0.0014212839305400848,
            0.00014062043919693679,
            0.4204637408256531,
            0.000154105422552675
        ],
        "align_select": "select count(distinct Addresses.other_address_details)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What are the different addresses that have students living there?",
        "gold_select": "select count(distinct Students.ca_id)",
        "select_candidates": [
            "select distinct Addresses.other_address_details",
            "select distinct Addresses.zipcode, Addresses.other_address_details",
            "select count(distinct Addresses.other_address_details)",
            "select distinct Addresses.country, Addresses.other_address_details"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Students",
        "table_candidates": [
            "Addresses Students",
            "Addresses Students Student_Enrolment_Courses",
            "Addresses Students Transcripts",
            "Addresses Students Student_Enrolment",
            "Courses Students",
            "Addresses Transcripts",
            "Departments Students"
        ],
        "align_scores": [
            0.9408681392669678,
            0.005703948438167572,
            0.0012285734992474318,
            0.0005583285237662494,
            0.01482387538999319,
            0.00033737841295078397,
            0.0006889612413942814,
            0.0002096654789056629
        ],
        "align_select": "select distinct Addresses.other_address_details",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "Describe the section h.",
        "gold_select": "select Sections.sect_desc",
        "select_candidates": [
            "select Sections.sect_desc",
            "select Sections.section_name",
            "select Sections.course_id, Sections.sect_desc",
            "select Sections.section_name, Sections.sect_desc"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Sections",
        "table_candidates": [
            "Sections",
            "Departments Sections",
            "Degree_Programs Sections",
            "Courses Sections",
            "Addresses Courses Sections",
            "Addresses Courses Departments Sections",
            "Addresses Sections",
            "Addresses Courses Degree_Programs Sections"
        ],
        "align_scores": [
            0.9962348341941833,
            7.904180529294536e-05,
            0.9927198886871338,
            7.44370263419114e-05,
            0.00014802861551288515,
            6.190215208334848e-05,
            0.0001586173166288063,
            6.166307139210403e-05
        ],
        "align_select": "select Sections.sect_desc",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the description for the section named h?",
        "gold_select": "select Sections.sect_desc",
        "select_candidates": [
            "select Sections.sect_desc",
            "select Sections.sect_desc, Sections.other_dtl",
            "select Sections.section_name, Sections.sect_desc",
            "select Sections.sect_desc, Sections.section_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Sections",
        "table_candidates": [
            "Sections",
            "Departments Sections",
            "Courses Sections",
            "Addresses Courses Sections",
            "Addresses Courses Departments Sections",
            "Degree_Programs Sections",
            "Addresses Courses Degree_Programs Sections",
            "Courses Departments Sections"
        ],
        "align_scores": [
            0.9961890578269958,
            7.94658626546152e-05,
            0.00013547632261179388,
            6.759791722288355e-05,
            0.0001518982753623277,
            6.456184200942516e-05,
            0.00014757903409190476,
            6.030554141034372e-05
        ],
        "align_select": "select Sections.sect_desc",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the first name of the students who permanently live in the country Haiti or have the cell phone number 09700166582.",
        "gold_select": "select Students.first_name",
        "select_candidates": [
            "select Students.first_name",
            "select Students.first_name, Students.last_name",
            "select Students.student_id, Students.first_name",
            "select Addresses.country, Students.first_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Addresses Students",
        "table_candidates": [
            "Addresses Students",
            "Addresses Semesters Students",
            "Addresses Courses Students",
            "Addresses Students Student_Enrolment"
        ],
        "align_scores": [
            0.8337135910987854,
            0.9670388102531433,
            0.00018483759777154773,
            0.00013477924221660942,
            0.00020183615561109036,
            0.00013494567247107625,
            0.000662964943330735,
            0.0003692499303724617
        ],
        "align_select": "select Students.first_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the first names of the students who live in Haiti permanently or have the cell phone number 09700166582?",
        "gold_select": "select Students.first_name",
        "select_candidates": [
            "select Students.first_name",
            "select Students.first_name, Students.last_name",
            "select Students.first_name, Students.last_name, Students.cell",
            "select Students.student_id, Students.first_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Addresses Students",
        "table_candidates": [
            "Addresses Students",
            "Addresses Courses Students",
            "Addresses Semesters Students",
            "Addresses Degree_Programs Students"
        ],
        "align_scores": [
            0.837342381477356,
            0.9902886152267456,
            0.00022654082567896694,
            0.00020840582146774977,
            0.00016331607184838504,
            0.00013621182006318122,
            0.0002141524018952623,
            0.0001665131567278877
        ],
        "align_select": "select Students.first_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How is the math course described?",
        "gold_select": "select Courses.crs_desc",
        "select_candidates": [
            "select Courses.crs_desc",
            "select t1.c6, Courses.crs_desc",
            "select Courses.crs_desc, Courses.crs_name",
            "select Courses.crs_desc, Courses.oth_dtl"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Courses",
        "table_candidates": [
            "Courses",
            "Courses Departments",
            "Courses Students",
            "Addresses Courses",
            "Courses Degree_Programs",
            "Courses Student_Enrolment",
            "Courses Student_Enrolment_Courses"
        ],
        "align_scores": [
            0.9955258965492249,
            8.066715236054733e-05,
            0.00032675210968591273,
            6.725815910613164e-05,
            0.00018036716210190207,
            7.00374657753855e-05,
            0.00019756933033932,
            7.599224773002788e-05
        ],
        "align_select": "select Courses.crs_desc",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the descriptions for all the math courses?",
        "gold_select": "select Courses.crs_desc",
        "select_candidates": [
            "select Courses.crs_desc",
            "select t1.c5, Courses.crs_desc",
            "select t1.c6, Courses.crs_desc",
            "select Courses.crs_desc, Courses.oth_dtl"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Courses",
        "table_candidates": [
            "Courses",
            "Courses Departments",
            "Courses Departments Degree_Programs",
            "Courses Degree_Programs Sections",
            "Courses Degree_Programs"
        ],
        "align_scores": [
            0.972409725189209,
            0.00015616542077623308,
            0.0003089648671448231,
            7.13346162228845e-05,
            0.00030486492323689163,
            6.942915206309408e-05,
            0.0003243143146391958,
            8.709973917575553e-05
        ],
        "align_select": "select Courses.crs_desc",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the zip code of the address in the city Port Chelsea?",
        "gold_select": "select Addresses.zipcode",
        "select_candidates": [
            "select Addresses.zipcode",
            "select Addresses.zipcode, Addresses.city",
            "select Addresses.zipcode, Addresses.state_province_county",
            "select Addresses.zipcode, Addresses.cntry"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Addresses",
        "table_candidates": [
            "Addresses"
        ],
        "align_scores": [
            0.9839406609535217,
            0.0001019331393763423,
            0.00020385220705065876,
            5.959220288787037e-05,
            0.00023175821115728468,
            6.524693890241906e-05,
            0.00022694942890666425,
            6.011376899550669e-05
        ],
        "align_select": "select Addresses.zipcode",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the zip code for Port Chelsea?",
        "gold_select": "select Addresses.zipcode",
        "select_candidates": [
            "select Addresses.zipcode",
            "select Addresses.zipcode, Addresses.city",
            "select Addresses.zipcode, Addresses.state_province_county",
            "select Addresses.zipcode, Addresses.cntry"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Addresses",
        "table_candidates": [
            "Addresses",
            "Addresses Student_Enrolment"
        ],
        "align_scores": [
            0.9911419153213501,
            0.00016120036889333278,
            0.00016645187861286104,
            5.5997483286773786e-05,
            0.00023954271455295384,
            6.796927482355386e-05,
            0.0001772933464962989,
            6.826273602200672e-05
        ],
        "align_select": "select Addresses.zipcode",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which department offers the most number of degrees? List department name and id.",
        "gold_select": "select Departments.dept_name, Degree_Programs.dept_id",
        "select_candidates": [
            "select Departments.dept_name, Degree_Programs.dept_id",
            "select Departments.dept_name, Departments.dept_id",
            "select Departments.dept_name, Degree_Programs.degree_pmg_id",
            "select Departments.dept_name, t03.c1"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-UNION-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Departments Degree_Programs",
        "table_candidates": [
            "Departments Degree_Programs"
        ],
        "align_scores": [
            0.9918866753578186,
            0.00014265408390201628,
            0.9877409338951111,
            0.0001248079934157431,
            0.026927758008241653,
            0.00015632093709427863,
            0.00040690653258934617,
            7.977184577612206e-05
        ],
        "align_select": "select Departments.dept_name, Degree_Programs.dept_id",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the name and id of the department with the most number of degrees?",
        "gold_select": "select Departments.dept_name, Degree_Programs.dept_id",
        "select_candidates": [
            "select Departments.dept_name, Degree_Programs.dept_id",
            "select Departments.dept_name, Departments.dept_id",
            "select Departments.dept_name, t03.c1",
            "select Departments.dept_name, Degree_Programs.degree_pmg_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Departments Degree_Programs",
        "table_candidates": [
            "Departments Degree_Programs",
            "Addresses Departments Degree_Programs",
            "Courses Degree_Programs"
        ],
        "align_scores": [
            0.9934046864509583,
            7.802981417626143e-05,
            0.9936591982841492,
            6.77364005241543e-05,
            0.00034327429602853954,
            6.318211671896279e-05,
            0.005468024406582117,
            9.256860357709229e-05
        ],
        "align_select": "select Departments.dept_name, Degree_Programs.dept_id",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "How many departments offer any degree?",
        "gold_select": "select count(distinct Degree_Programs.dept_id)",
        "select_candidates": [
            "select count(distinct Degree_Programs.dept_id)",
            "select count(distinct Degree_Programs.dept_id)",
            "select count(distinct Degree_Programs.dept_id )",
            "select count(distinct t3, Degree_Programs.dept_id)"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Degree_Programs",
        "table_candidates": [
            "Degree_Programs",
            "Departments Degree_Programs",
            "Addresses Departments Degree_Programs"
        ],
        "align_scores": [
            0.9763538837432861,
            0.00015649992565158755,
            0.9763538837432861,
            0.00015649992565158755,
            0.8812103867530823,
            0.00016348619828931987,
            0.000997859868220985,
            9.139588655671105e-05
        ],
        "align_select": "select count(distinct Degree_Programs.dept_id)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "How many different departments offer degrees?",
        "gold_select": "select count(distinct Degree_Programs.dept_id)",
        "select_candidates": [
            "select count(distinct Degree_Programs.dept_id)",
            "select count(distinct Degree_Programs.dept_id)",
            "select count(distinct t3, Degree_Programs.dept_id)",
            "select count(distinct Degree_Programs.dept_id), Degree_Programs.degree_smry_name"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "Degree_Programs",
        "table_candidates": [
            "Degree_Programs",
            "Departments Degree_Programs"
        ],
        "align_scores": [
            0.9947707056999207,
            0.9947707056999207,
            0.9947707056999207,
            0.9947707056999207,
            0.0007552235620096326,
            0.0007552235620096326,
            0.00044143825653009117,
            0.00044143825653009117
        ],
        "align_select": "select count(distinct Degree_Programs.dept_id)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "How many different degree names are offered?",
        "gold_select": "select count(distinct Degree_Programs.degree_smry_name)",
        "select_candidates": [
            "select count(distinct Degree_Programs.degree_smry_name)",
            "select count(distinct Degree_Programs.degree_smry_name",
            "select count(distinct t3.c6)",
            "select count(distinct Degree_Programs.degree_smry_name)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "Degree_Programs",
        "table_candidates": [
            "Degree_Programs"
        ],
        "align_scores": [
            0.7469585537910461,
            0.7469585537910461,
            0.016932480037212372,
            0.016932480037212372,
            0.0006718829390592873,
            0.0006718829390592873,
            0.7469585537910461,
            0.7469585537910461
        ],
        "align_select": "select count(distinct Degree_Programs.degree_smry_name)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "How many different degrees are offered?",
        "gold_select": "select count(distinct Degree_Programs.degree_smry_name)",
        "select_candidates": [
            "select count(distinct Degree_Programs.degree_smry_name)",
            "select count(distinct Degree_Programs.degree_pmg_id)",
            "select count(distinct Degree_Programs.dept_id)",
            "select count(distinct Degree_Programs.degree_smry_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "Degree_Programs",
        "table_candidates": [
            "Degree_Programs"
        ],
        "align_scores": [
            0.5669377446174622,
            0.5669377446174622,
            0.04923822730779648,
            0.04923822730779648,
            0.0065006073564291,
            0.0065006073564291,
            0.01963476464152336,
            0.01963476464152336
        ],
        "align_select": "select count(distinct Degree_Programs.degree_smry_name)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "How many degrees does the engineering department offer?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(distinct Degree_Programs.degree_smry_name)",
            "select count(distinct Degree_Programs.dept_id)",
            "select count(distinct Degree_Programs.degree_pmg_id)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Departments Degree_Programs",
        "table_candidates": [
            "Departments Degree_Programs",
            "Courses Departments Degree_Programs",
            "Addresses Departments Degree_Programs"
        ],
        "align_scores": [
            0.9851910471916199,
            0.0002429869055049494,
            0.0013812684919685125,
            7.840139733161777e-05,
            0.0008483996498398483,
            0.00011134709347970784,
            0.0005709254182875156,
            7.840528269298375e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many degrees does the engineering department have?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Departments.dept_id",
            "select count(*), Departments.dept_name",
            "select count(distinct Degree_Programs.dept_id)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Departments Degree_Programs",
        "table_candidates": [
            "Departments Degree_Programs",
            "Courses Departments Degree_Programs",
            "Addresses Departments Degree_Programs",
            "Departments Degree_Programs Sections",
            "Degree_Programs Departments Degree_Programs",
            "Degree_Programs Departments Student_Enrolment"
        ],
        "align_scores": [
            0.9927553534507751,
            0.0006525854696519673,
            0.00021773781918454915,
            0.00031940359622240067,
            0.0002284308720845729,
            0.0004522471281234175,
            0.0007208476890809834,
            9.822015272220597e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names and descriptions of all the sections?",
        "gold_select": "select Sections.sect_name, Sections.sect_desc",
        "select_candidates": [
            "select Sections.sect_name, Sections.sect_desc",
            "select Sections.sect_name, Sections.sect_desc, Sections.sect_id",
            "select sect_Sections.sect_name, Sections.sect_desc",
            "select Sections.crs_id, Sections.sect_desc"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Sections",
        "table_candidates": [
            "Sections",
            "Departments Sections",
            "Degree_Programs Sections",
            "Departments Degree_Programs Sections"
        ],
        "align_scores": [
            0.9910879731178284,
            0.0001852377608884126,
            0.0002570076903793961,
            7.770131196593866e-05,
            0.0006289105513133109,
            9.209632116835564e-05,
            0.0006480343290604651,
            0.00013743403542321175
        ],
        "align_select": "select Sections.sect_name, Sections.sect_desc",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What are the names and descriptions for all the sections?",
        "gold_select": "select Sections.sect_name, Sections.sect_desc",
        "select_candidates": [
            "select Sections.sect_name, Sections.sect_desc",
            "select sect_Sections.sect_name, Sections.sect_desc",
            "select Sections.sect_name, Sections.sect_desc, Sections.sect_id",
            "select sect_c2, Sections.sect_desc"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Sections",
        "table_candidates": [
            "Sections",
            "Departments Sections",
            "Degree_Programs Sections",
            "Courses Sections",
            "Departments Degree_Programs Sections"
        ],
        "align_scores": [
            0.9922956228256226,
            0.00016745574248488992,
            0.0005879606469534338,
            9.122350456891581e-05,
            0.00025657773949205875,
            7.708102202741429e-05,
            0.00041705326293595135,
            0.0001013347864500247
        ],
        "align_select": "select Sections.sect_name, Sections.sect_desc",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What are the names and id of courses having at most 2 sections?",
        "gold_select": "select Courses.crs_name, Courses.crs_id",
        "select_candidates": [
            "select Courses.crs_name, Courses.crs_id",
            "select Courses.crs_name, Sections.crs_id",
            "select Courses.crs_name, Sections.sect_id",
            "select Courses.crs_name, Departments.dept_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Courses Sections",
        "table_candidates": [
            "Courses Sections",
            "Courses Departments Sections"
        ],
        "align_scores": [
            0.9945003986358643,
            0.00010383499466115609,
            0.02101908065378666,
            9.046274499269202e-05,
            0.002836340805515647,
            0.0001161627660621889,
            0.0004951105220243335,
            0.0001184873835882172
        ],
        "align_select": "select Courses.crs_name, Courses.crs_id",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the names and ids of every course with less than 2 sections?",
        "gold_select": "select Courses.crs_name, Courses.crs_id",
        "select_candidates": [
            "select Courses.crs_name, Courses.crs_id",
            "select Courses.crs_name, Sections.crs_id",
            "select Courses.crs_name, Sections.sect_id",
            "select Courses.crs_name, Departments.dept_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Courses Sections",
        "table_candidates": [
            "Courses Sections",
            "Courses Departments Sections"
        ],
        "align_scores": [
            0.9123533964157104,
            0.0001176469522761181,
            0.007671760395169258,
            0.00010979288344969973,
            0.0014942098641768098,
            0.00014607566117774695,
            0.0004330298106651753,
            0.00016089492419268936
        ],
        "align_select": "select Courses.crs_name, Courses.crs_id",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "List the section_name in reversed lexicographical order.",
        "gold_select": "select Sections.sect_name",
        "select_candidates": [
            "select Sections.sect_name",
            "select Sections.sect_name, Sections.sect_desc",
            "select Sections.sect_name, Sections.crs_id",
            "select Sections.crs_id, Sections.sect_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-WHERE-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Sections",
        "table_candidates": [
            "Sections",
            "Degree_Programs Sections",
            "Departments Sections",
            "Addresses Courses Sections",
            "Addresses Sections"
        ],
        "align_scores": [
            0.9958156943321228,
            0.9582713842391968,
            0.00012006937322439626,
            0.00010447779641253874,
            0.00011222778266528621,
            0.0001169876049971208,
            0.00013375490379985422,
            0.00012273015454411507
        ],
        "align_select": "select Sections.sect_name",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "What are the names of the sections in reverse alphabetical order?",
        "gold_select": "select Sections.sect_name",
        "select_candidates": [
            "select Sections.sect_name",
            "select Sections.sect_name, Sections.sect_desc",
            "select Sections.crs_id, Sections.sect_name",
            "select Sections.sect_name (ordnance Sections.sect_desc)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "Sections",
        "table_candidates": [
            "Sections",
            "Departments Sections"
        ],
        "align_scores": [
            0.9953238368034363,
            0.9953238368034363,
            0.0001935303007485345,
            0.0001935303007485345,
            0.00018080313748214394,
            0.00018080313748214394,
            0.0008015850326046348,
            0.0008015850326046348
        ],
        "align_select": "select Sections.sect_name",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "What is the semester which most student registered in? Show both the name and the id.",
        "gold_select": "select Semesters.sem_name, Semesters.sem_id",
        "select_candidates": [
            "select Semesters.sem_name, Semesters.sem_id",
            "select Semesters.sem_name, Students.stuid",
            "select Semesters.sem_name, sem_Semesters.sem_id",
            "select Semesters.sem_name, t5c0"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Semesters Student_Enrolment",
        "table_candidates": [
            "Semesters Students",
            "Semesters Students Student_Enrolment_Courses",
            "Semesters Student_Enrolment_Courses",
            "Semesters Students Student_Enrolment",
            "Semesters Student_Enrolment"
        ],
        "align_scores": [
            0.99269038438797,
            7.684932643314824e-05,
            0.9884395599365234,
            9.803956345422193e-05,
            0.0012164284707978368,
            9.639078052714467e-05,
            0.0004326974740251899,
            8.352980512427166e-05
        ],
        "align_select": "select Semesters.sem_name, Semesters.sem_id",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "For each semester, what is the name and id of the one with the most students registered?",
        "gold_select": "select Semesters.sem_name, Semesters.sem_id",
        "select_candidates": [
            "select Semesters.sem_name, Semesters.sem_id",
            "select Semesters.sem_name, sem_Semesters.sem_id",
            "select Semesters.sem_name, Semesters.sem_id, Students.ca_id",
            "select Semesters.sem_name, Semesters.sem_id, Students.stuid"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Semesters Student_Enrolment",
        "table_candidates": [
            "Semesters Students",
            "Courses Semesters Students",
            "Departments Semesters Students",
            "Semesters Student_Enrolment_Courses",
            "Semesters Student_Enrolment",
            "Semesters Students Student_Enrolment_Courses"
        ],
        "align_scores": [
            0.9934636950492859,
            9.493654215475544e-05,
            0.0030689151026308537,
            0.00011552418436622247,
            0.0003304490528535098,
            7.51577754272148e-05,
            0.0013840477913618088,
            8.16537722130306e-05
        ],
        "align_select": "select Semesters.sem_name, Semesters.sem_id",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the description of the department whose name has the substring the computer?",
        "gold_select": "select Departments.dept_desc",
        "select_candidates": [
            "select Departments.dept_desc",
            "select Departments.dept_name, Departments.dept_desc",
            "select Departments.dept_desc, Departments.oth_dtl",
            "select Departments.dept_desc, Departments.dept_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Departments",
        "table_candidates": [
            "Departments",
            "Addresses Courses Departments",
            "Courses Departments",
            "Addresses Departments",
            "Departments Degree_Programs"
        ],
        "align_scores": [
            0.9591444134712219,
            0.00010964065586449578,
            0.00020246932399459183,
            6.862491136416793e-05,
            0.0001649719924898818,
            7.506294059567153e-05,
            0.0001440273190382868,
            6.591617420781404e-05
        ],
        "align_select": "select Departments.dept_desc",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the department description for the one whose name has the word computer?",
        "gold_select": "select Departments.dept_desc",
        "select_candidates": [
            "select Departments.dept_desc",
            "select Departments.dept_name, Departments.dept_desc",
            "select Departments.dept_desc, Departments.oth_dtl",
            "select Departments.dept_desc, Departments.dept_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Departments",
        "table_candidates": [
            "Departments",
            "Addresses Courses Departments",
            "Addresses Departments",
            "Courses Departments",
            "Departments Degree_Programs"
        ],
        "align_scores": [
            0.9947039484977722,
            8.869915473042056e-05,
            0.00018783843552228063,
            6.905101326992735e-05,
            0.00014185093459673226,
            6.90446249791421e-05,
            0.00015930512745399028,
            6.048200521036051e-05
        ],
        "align_select": "select Departments.dept_desc",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Who are enrolled in 2 degree programs in one semester? List the first name, middle name and last name and the id.",
        "gold_select": "select Students.first_name, Students.middle_name, Students.last_name, Students.stuid",
        "select_candidates": [
            "select Students.first_name, Students.middle_name, Students.last_name, Students.stuid",
            "select Students.first_name, Students.middle_name, Students.last_name and Students.stuid",
            "select Students.first_name, Students.middle_name, Students.last_name",
            "select Students.first_name, Students.middle_name, Students.last_name, ca_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "Students Student_Enrolment",
        "table_candidates": [
            "Students Student_Enrolment_Courses",
            "Students Student_Enrolment",
            "Students",
            "Degree_Programs Students",
            "Students Degree_Programs Semesters Students",
            "Semesters Students",
            "Degree_Programs Students Student_Enrolment_Courses"
        ],
        "align_scores": [
            0.28903838992118835,
            0.004496018867939711,
            0.5122132897377014,
            0.005084384232759476,
            0.2581307888031006,
            0.0005297372117638588,
            0.0634055808186531,
            0.002311909105628729
        ],
        "align_select": "select Students.first_name, Students.middle_name, Students.last_name and Students.stuid",
        "align_structure": "SELECT-FROM-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the first, middle, and last names, along with the ids, of all students who enrolled in 2 degree programs in one semester?",
        "gold_select": "select Students.first_name, Students.middle_name, Students.last_name, Students.stuid",
        "select_candidates": [
            "select Students.first_name, Students.middle_name, Students.last_name, Students.stuid",
            "select Students.first_name, Students.middle_name, Students.last_name",
            "select Students.first_name, Students.middle_name, Students.last_name, Students.stuid",
            "select Students.first_name, Students.middle_name, Students.last_name plus Students.stuid"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "Students Student_Enrolment",
        "table_candidates": [
            "Degree_Programs Students",
            "Students Student_Enrolment",
            "Students",
            "Students Student_Enrolment_Courses",
            "Semesters Students",
            "Departments Degree_Programs Students",
            "Students Degree_Programs Students",
            "Sections Students"
        ],
        "align_scores": [
            0.9093809127807617,
            0.006537233013659716,
            0.5131357908248901,
            0.0011025328421965241,
            0.9093809127807617,
            0.006537233013659716,
            0.9695213437080383,
            0.01087363250553608
        ],
        "align_select": "select Students.first_name, Students.middle_name, Students.last_name, Students.stuid",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "Who is enrolled in a Bachelor degree program? List the first name, middle name, last name.",
        "gold_select": "select distinct Students.first_name, Students.middle_name, Students.last_name",
        "select_candidates": [
            "select Students.first_name, Students.middle_name, Students.last_name",
            "select Students.stuid, Students.first_name, Students.middle_name, Students.last_name",
            "select distinct Students.first_name, Students.middle_name, Students.last_name",
            "select Students.ca_id, Students.middle_name, Students.last_name"
        ],
        "select_labels": [
            0.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Degree_Programs Students Student_Enrolment",
        "table_candidates": [
            "Degree_Programs Students",
            "Addresses Degree_Programs Students",
            "Courses Degree_Programs Students",
            "Degree_Programs Students Student_Enrolment_Courses",
            "Departments Degree_Programs Students",
            "Degree_Programs Students Student_Enrolment"
        ],
        "align_scores": [
            0.986777126789093,
            0.00014054845087230206,
            0.00021438163821585476,
            8.866497955750674e-05,
            0.027531510218977928,
            6.963796477066353e-05,
            0.0003115595900453627,
            9.10566232050769e-05
        ],
        "align_select": "select Students.first_name, Students.middle_name, Students.last_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the first, middle, and last names for everybody enrolled in a Bachelors program?",
        "gold_select": "select distinct Students.first_name, Students.middle_name, Students.last_name",
        "select_candidates": [
            "select Students.first_name, Students.middle_name, Students.last_name",
            "select Students.stuid, Students.first_name, Students.middle_name, Students.last_name",
            "select Students.first_name, Students.middle_name, Students.last_name",
            "select Students.first_name., Students.middle_name, Students.last_name"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Degree_Programs Students Student_Enrolment",
        "table_candidates": [
            "Degree_Programs Students",
            "Courses Degree_Programs Students",
            "Departments Degree_Programs Students",
            "Addresses Degree_Programs Students",
            "Degree_Programs Students Student_Enrolment",
            "Degree_Programs Students Student_Enrolment_Courses"
        ],
        "align_scores": [
            0.9808099865913391,
            0.00011929730681004003,
            0.00018778220692183822,
            7.672512583667412e-05,
            0.9808099865913391,
            0.00011929730681004003,
            0.009363340213894844,
            0.00010620704415487126
        ],
        "align_select": "select Students.first_name, Students.middle_name, Students.last_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the kind of program which most number of students are enrolled in?",
        "gold_select": "select Degree_Programs.degree_smry_name",
        "select_candidates": [
            "select Degree_Programs.degree_smry_name",
            "select Degree_Programs.dept_id",
            "select Degree_Programs.degree_smry_name, Students.ca_id",
            "select Degree_Programs.degree_smry_name, Students.ca_id3"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Degree_Programs Student_Enrolment",
        "table_candidates": [
            "Degree_Programs Students",
            "Courses Degree_Programs Students",
            "Departments Degree_Programs Students",
            "Courses Departments Degree_Programs Students",
            "Sections Students",
            "Semesters Students",
            "Courses Degree_Programs Sections Students",
            "Courses Degree_Programs Semesters Students"
        ],
        "align_scores": [
            0.6106048822402954,
            0.00011522482964210212,
            0.08700103312730789,
            9.449738718103617e-05,
            0.0004801013274118304,
            7.418765017064288e-05,
            0.0006643649539910257,
            7.599274977110326e-05
        ],
        "align_select": "select Degree_Programs.degree_smry_name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the degree summary name that has the most number of students enrolled?",
        "gold_select": "select Degree_Programs.degree_smry_name",
        "select_candidates": [
            "select Degree_Programs.degree_smry_name",
            "select Degree_Programs.degree_smry_name, Degree_Programs.degree_smry_desc",
            "select Degree_Programs.degree_smry_name, Students.ca_id, Students.pa_id",
            "select Degree_Programs.degree_smry_name, Students.ca_id3"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-UNION-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Degree_Programs Student_Enrolment",
        "table_candidates": [
            "Degree_Programs Students",
            "Departments Degree_Programs Students",
            "Courses Degree_Programs Students",
            "Addresses Degree_Programs Students",
            "Degree_Programs Student_Enrolment_Courses",
            "Degree_Programs Students Student_Enrolment_Courses",
            "Degree_Programs Student_Enrolment",
            "Departments Students"
        ],
        "align_scores": [
            0.9436674118041992,
            0.00019369315123185515,
            0.00037375520332716405,
            7.187260052887723e-05,
            0.0004223067662678659,
            0.00010275252134306356,
            0.0006221599760465324,
            9.87400344456546e-05
        ],
        "align_select": "select Degree_Programs.degree_smry_name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Find the program which most number of students are enrolled in. List both the id and the summary.",
        "gold_select": "select Degree_Programs.degree_pmg_id, Degree_Programs.degree_smry_name",
        "select_candidates": [
            "select Degree_Programs.dept_id, Degree_Programs.degree_smry_name",
            "select Degree_Programs.degree_pmg_id, Degree_Programs.degree_smry_name",
            "select Degree_Programs.dept_id, Degree_Programs.oth_dtl",
            "select Degree_Programs.dept_id, Degree_Programs.degree_smry_desc"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Degree_Programs Student_Enrolment",
        "table_candidates": [
            "Courses Degree_Programs Students",
            "Degree_Programs Students",
            "Departments Degree_Programs Students",
            "Courses Departments Degree_Programs Students",
            "Sections Students",
            "Semesters Students",
            "Students",
            "Courses Students"
        ],
        "align_scores": [
            0.005025828257203102,
            9.972402040148154e-05,
            0.03151069954037666,
            0.00010671820200514048,
            0.0018658664776012301,
            8.234735287260264e-05,
            0.015023226849734783,
            9.308466542279348e-05
        ],
        "align_select": "select Degree_Programs.dept_id, Degree_Programs.degree_smry_name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the program id and the summary of the degree that has the most students enrolled?",
        "gold_select": "select Degree_Programs.degree_pmg_id, Degree_Programs.degree_smry_name",
        "select_candidates": [
            "select Degree_Programs.degree_pmg_id, Degree_Programs.degree_smry_desc",
            "select Degree_Programs.dept_id, Degree_Programs.degree_smry_desc",
            "select Degree_Programs.degree_pmg_id, Degree_Programs.degree_smry_name",
            "select Degree_Programs.degree_pmg_id, Degree_Programs.dept_id, Degree_Programs.degree_smry_desc"
        ],
        "select_labels": [
            0.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-UNION-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Degree_Programs Student_Enrolment",
        "table_candidates": [
            "Degree_Programs Students",
            "Courses Degree_Programs Students",
            "Degree_Programs Student_Enrolment_Courses",
            "Departments Degree_Programs Students",
            "Degree_Programs Student_Enrolment",
            "Degree_Programs Students Student_Enrolment_Courses",
            "Degree_Programs Transcripts",
            "Degree_Programs Semesters"
        ],
        "align_scores": [
            0.9705052971839905,
            0.00017759892216417938,
            0.0017882719403132796,
            9.710429003462195e-05,
            0.9650827050209045,
            0.00018100306624546647,
            0.0018365172436460853,
            0.00010109002323588356
        ],
        "align_select": "select Degree_Programs.degree_pmg_id, Degree_Programs.degree_smry_desc",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Which student has enrolled for the most times in any program? List the id, first name, middle name, last name, the number of enrollments and student id.",
        "gold_select": "select Students.stuid, Students.first_name, Students.middle_name, Students.last_name, count(*), Students.stuid",
        "select_candidates": [
            "select Students.stuid, Students.first_name, Students.middle_name, Students.last_name, count(*)",
            "select Students.stuid, Students.first_name, Students.middle_name, Students.last_name",
            "select Students.stuid, Students.ca_id, Students.middle_name, Students.last_name, count(*)",
            "select Students.stuid, Students.first_name, Students.middle_name, Students.last_name, count(*)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "Students Student_Enrolment",
        "table_candidates": [
            "Students Student_Enrolment",
            "Students"
        ],
        "align_scores": [
            0.09578730911016464,
            0.09578730911016464,
            0.04428907111287117,
            0.04428907111287117,
            0.0003213274758309126,
            0.0003213274758309126,
            0.09578730911016464,
            0.09578730911016464
        ],
        "align_select": "select Students.stuid, Students.first_name, Students.middle_name, Students.last_name, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the first, middle, and last name, along with the id and number of enrollments, for the student who enrolled the most in any program?",
        "gold_select": "select Students.stuid, Students.first_name, Students.middle_name, Students.last_name, count(*), Students.stuid",
        "select_candidates": [
            "select Students.first_name, Students.middle_name, Students.last_name, Students.stuid, count(*)",
            "select Students.first_name, Students.middle_name, Students.last_name, Students.stuid, count(Students.stuid)",
            "select Students.first_name, Students.middle_name, Students.last_name, Students.ca_id, count(*)",
            "select Students.first_name, Students.middle_name, Students.last_name ainsi Students.stuid, count(*)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-UNION-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Students Student_Enrolment",
        "table_candidates": [
            "Students Student_Enrolment",
            "Students"
        ],
        "align_scores": [
            0.9595895409584045,
            0.0003957879380322993,
            0.49410536885261536,
            0.0001710628712316975,
            0.696304202079773,
            0.0002673591661732644,
            0.09529571235179901,
            0.00020029820734634995
        ],
        "align_select": "select Students.first_name, Students.middle_name, Students.last_name, Students.stuid, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Which semesters do not have any student enrolled? List the semester name.",
        "gold_select": "select Semesters.sem_name",
        "select_candidates": [
            "select Semesters.sem_name",
            "select Semesters.sem_name, Students.ca_id",
            "select Semesters.sem_name, Semesters.sem_desc",
            "select Semesters.sem_name, Students.ca_id3"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Semesters",
        "table_candidates": [
            "Semesters",
            "Semesters Students"
        ],
        "align_scores": [
            0.7194136381149292,
            0.001904711127281189,
            0.00029116624500602484,
            0.00013441976625472307,
            0.0004322614404372871,
            0.00022392818937078118,
            0.00028251472394913435,
            0.00014849229773972183
        ],
        "align_select": "select Semesters.sem_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the name of the semester with no students enrolled?",
        "gold_select": "select Semesters.sem_name",
        "select_candidates": [
            "select Semesters.sem_name",
            "select Semesters.sem_name, Students.ca_id",
            "select Semesters.sem_name, Students.ca_id3",
            "select Semesters.sem_name, Students.ca_id2"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Semesters",
        "table_candidates": [
            "Semesters Students",
            "Semesters Student_Enrolment_Courses",
            "Semesters Student_Enrolment",
            "Semesters Transcripts",
            "Semesters"
        ],
        "align_scores": [
            0.915947675704956,
            0.9034005403518677,
            0.00026197542320005596,
            0.00031076924642547965,
            0.0002636452263686806,
            0.0003678566718008369,
            0.00028020754689350724,
            0.0003570782137103379
        ],
        "align_select": "select Semesters.sem_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are all the course names of the courses which ever have students enrolled in?",
        "gold_select": "select distinct Courses.crs_name",
        "select_candidates": [
            "select Courses.crs_name",
            "select distinct Courses.crs_name",
            "select distinct Courses.crs_name, Courses.crs_desc",
            "select Courses.crs_name, Students.stuid"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Courses Student_Enrolment_Courses",
        "table_candidates": [
            "Courses Students",
            "Addresses Courses Students",
            "Courses"
        ],
        "align_scores": [
            0.05802886560559273,
            0.2508277893066406,
            0.3849372863769531,
            0.10622004419565201,
            0.0015893587842583656,
            0.001525845262221992,
            0.00046223244862630963,
            0.0002214184933109209
        ],
        "align_select": "select distinct Courses.crs_name",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What are the names of all courses that have some students enrolled?",
        "gold_select": "select distinct Courses.crs_name",
        "select_candidates": [
            "select Courses.crs_name",
            "select distinct Courses.crs_name",
            "select Courses.crs_name, Students.stuid",
            "select Courses.crs_name, Students.ca_id"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Courses Student_Enrolment_Courses",
        "table_candidates": [
            "Courses Students",
            "Courses Student_Enrolment_Courses",
            "Addresses Courses Students",
            "Courses"
        ],
        "align_scores": [
            0.3033795952796936,
            0.0021319370716810226,
            0.7246595025062561,
            0.018600977957248688,
            0.0005043000564910471,
            0.0001768107176758349,
            0.0004515002074185759,
            0.00014772800204809755
        ],
        "align_select": "select distinct Courses.crs_name",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What's the name of the course with most number of enrollments?",
        "gold_select": "select Courses.crs_name",
        "select_candidates": [
            "select Courses.crs_name",
            "select Courses.crs_name, Students.ca_id3",
            "select Courses.crs_name, Sections.sect_name",
            "select Courses.crs_name, Students.ca_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Courses Student_Enrolment_Courses",
        "table_candidates": [
            "Courses Students",
            "Courses Sections",
            "Courses Student_Enrolment_Courses",
            "Courses Student_Enrolment",
            "Courses Transcripts",
            "Courses Sections Students",
            "Courses Semesters"
        ],
        "align_scores": [
            0.9912784695625305,
            8.767857070779428e-05,
            0.0002841815003193915,
            6.984564970480278e-05,
            0.0004534437321126461,
            7.883435318944976e-05,
            0.0002549842756707221,
            6.655322067672387e-05
        ],
        "align_select": "select Courses.crs_name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the name of the course with the most students enrolled?",
        "gold_select": "select Courses.crs_name",
        "select_candidates": [
            "select Courses.crs_name",
            "select Courses.crs_name, Students.ca_id3",
            "select Courses.crs_name, Students.ca_id",
            "select Courses.crs_name, Students.stuid"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Courses Student_Enrolment_Courses",
        "table_candidates": [
            "Courses Students",
            "Courses Sections Students",
            "Addresses Courses Students",
            "Courses Student_Enrolment_Courses",
            "Addresses Courses Sections Students",
            "Courses Student_Enrolment"
        ],
        "align_scores": [
            0.9909927845001221,
            0.0001040921633830294,
            0.0003645829565357417,
            7.505663961637765e-05,
            0.0003793446230702102,
            7.432515849359334e-05,
            0.0012511064996942878,
            7.360502786468714e-05
        ],
        "align_select": "select Courses.crs_name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Find the last name of the students who currently live in the state of North Carolina but have not registered in any degree program.",
        "gold_select": "select Students.last_name",
        "select_candidates": [
            "select Students.last_name",
            "select Students.last_name, Students.date_left",
            "select Students.last_name, Students.stuid",
            "select Students.last_name, Students.ssn"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Addresses Students Student_Enrolment",
        "table_candidates": [
            "Addresses Students",
            "Addresses Degree_Programs Students",
            "Addresses Departments Degree_Programs Students",
            "Addresses Semesters Students",
            "Addresses Courses Students",
            "Addresses Sections Students",
            "Addresses Courses Degree_Programs Students",
            "Addresses Degree_Programs Sections Students"
        ],
        "align_scores": [
            0.7493164539337158,
            0.8573399186134338,
            0.0002818335487972945,
            0.00025999275385402143,
            0.0005211512325331569,
            0.0004966732230968773,
            0.0006546663935296237,
            0.0005656217108480632
        ],
        "align_select": "select Students.last_name",
        "align_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM"
    },
    {
        "question": "What are the last name of the students who live in North Carolina but have not registered in any degree programs?",
        "gold_select": "select Students.last_name",
        "select_candidates": [
            "select Students.last_name",
            "select Students.last_name, Students.ca_id3",
            "select Students.last_name, Students.ca_id2",
            "select Students.last_name, Students.ssn"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Addresses Students Student_Enrolment",
        "table_candidates": [
            "Addresses Degree_Programs Students",
            "Addresses Departments Degree_Programs Students",
            "Addresses Courses Degree_Programs Students",
            "Addresses Degree_Programs Sections Students",
            "Addresses Departments Degree_Programs Sections Students",
            "Addresses Courses Students",
            "Addresses Semesters Students"
        ],
        "align_scores": [
            0.7939284443855286,
            0.893947184085846,
            0.0002494091459084302,
            0.00024056760594248772,
            0.0002401915262453258,
            0.00022582290694117546,
            0.00045751978177577257,
            0.0004085684195160866
        ],
        "align_select": "select Students.last_name",
        "align_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM"
    },
    {
        "question": "What is the phone number of the man with the first name Timmothy and the last name Ward?",
        "gold_select": "select Students.cell",
        "select_candidates": [
            "select Students.cell",
            "select Students.cell, Students.email",
            "select Students.cell, Students.ssn",
            "select Students.cell, Students.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Students",
        "table_candidates": [
            "Students",
            "Addresses Students",
            "Degree_Programs Students",
            "Semesters Students",
            "Courses Students",
            "Sections Students",
            "Addresses Courses Students",
            "Students Student_Enrolment"
        ],
        "align_scores": [
            0.4738241732120514,
            8.500763215124607e-05,
            0.00019481184426695108,
            6.965576176298782e-05,
            0.0002486825396772474,
            6.717316136928275e-05,
            0.0001865524100139737,
            7.065760291879997e-05
        ],
        "align_select": "select Students.cell",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the mobile phone number of the student named Timmothy Ward?",
        "gold_select": "select Students.cell",
        "select_candidates": [
            "select Students.cell",
            "select Students.cell, Students.email",
            "select Students.cell, Students.email, Students.ssn",
            "select Students.cell, Students.email, Students.ssn"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Students",
        "table_candidates": [
            "Students",
            "Addresses Students",
            "Addresses Courses Students",
            "Semesters Students",
            "Degree_Programs Students",
            "Courses Students",
            "Departments Students"
        ],
        "align_scores": [
            0.9767071008682251,
            8.081336272880435e-05,
            0.00017194902466144413,
            5.5759614042472094e-05,
            0.0001705678878352046,
            5.607764614978805e-05,
            0.0001705678878352046,
            5.607764614978805e-05
        ],
        "align_select": "select Students.cell",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Whose permanent address is different from his or her current address? List his or her first name.",
        "gold_select": "select Students.first_name",
        "select_candidates": [
            "select distinct Students.first_name",
            "select Students.first_name",
            "select Students.stuid, Students.first_name",
            "select distinct Students.first_name, Students.last_name"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Students",
        "table_candidates": [
            "Addresses Students",
            "Addresses Students Student_Enrolment_Courses",
            "Addresses Students Student_Enrolment",
            "Addresses Semesters Students",
            "Addresses Sections Students",
            "Addresses Transcripts",
            "Addresses Student_Enrolment_Courses",
            "Addresses Student_Enrolment"
        ],
        "align_scores": [
            0.03285570815205574,
            0.00017483266128692776,
            0.6903728246688843,
            0.0002553312515374273,
            0.00022185085981618613,
            0.000105110346339643,
            0.0006135323783382773,
            7.789540541125461e-05
        ],
        "align_select": "select Students.first_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the first name of the student whose permanent address is different from his or her current one?",
        "gold_select": "select Students.first_name",
        "select_candidates": [
            "select Students.first_name",
            "select distinct Students.first_name",
            "select Students.stuid, Students.first_name",
            "select Students.first_name, Students.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Students",
        "table_candidates": [
            "Addresses Students",
            "Addresses Students Student_Enrolment",
            "Addresses Students Student_Enrolment_Courses",
            "Addresses Semesters Students",
            "Addresses Courses Students"
        ],
        "align_scores": [
            0.7999458312988281,
            0.00018232017464470118,
            0.027247946709394455,
            0.0003597263421397656,
            0.0002122940495610237,
            7.359927258221433e-05,
            0.00016462503117509186,
            7.645606820005924e-05
        ],
        "align_select": "select Students.first_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which address holds the most number of students currently? List the address id and all lines.",
        "gold_select": "select Addresses.adr_id, Addresses.line_1, Addresses.line_2",
        "select_candidates": [
            "select Addresses.adr_id, Addresses.line_1, Addresses.line_2",
            "select Addresses.adr_id, Addresses.line_1, Addresses.line_3",
            "select Addresses.adr_id, Addresses.line_1",
            "select Addresses.adr_id, Addresses.line_1, Addresses.line_2, Addresses.line_3"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-UNION-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Addresses Students",
        "table_candidates": [
            "Addresses Students"
        ],
        "align_scores": [
            0.9773598313331604,
            0.0001180723265861161,
            0.1464536041021347,
            0.0001093487226171419,
            0.12243764847517014,
            0.00014992615615483373,
            0.9857978224754333,
            0.00012491419329307973
        ],
        "align_select": "select Addresses.adr_id, Addresses.line_1, Addresses.line_2",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the id, line 1, and line 2 of the address with the most students?",
        "gold_select": "select Addresses.adr_id, Addresses.line_1, Addresses.line_2",
        "select_candidates": [
            "select Addresses.adr_id, Addresses.line_1, Addresses.line_2",
            "select Students.ca_id, Addresses.line_1, Addresses.line_2",
            "select Students.stuid, Addresses.line_1, Addresses.line_2",
            "select Students.pa_id, Addresses.line_1, Addresses.line_2"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Addresses Students",
        "table_candidates": [
            "Addresses Students",
            "Addresses Courses Departments Degree_Programs Students",
            "Addresses Courses Departments Students",
            "Addresses Courses Departments Degree_Programs Sections Students",
            "Addresses Semesters Students",
            "Addresses Courses Departments Degree_Programs Sections",
            "Addresses Courses Students",
            "Addresses Sections Students"
        ],
        "align_scores": [
            0.9936116337776184,
            8.28628326416947e-05,
            0.550898015499115,
            8.396449266001582e-05,
            0.9779226779937744,
            8.55498801684007e-05,
            0.07091277837753296,
            7.621802797075361e-05
        ],
        "align_select": "select Addresses.adr_id, Addresses.line_1, Addresses.line_2",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "When is the first transcript released? List the date and details.",
        "gold_select": "select Transcripts.transcript_date, Transcripts.oth_dtl",
        "select_candidates": [
            "select t12.c5, t12.c6",
            "select t8.c5, t8.c6",
            "select t13.c5, t13.c6",
            "select t1.c5, t1.c6"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Transcripts",
        "table_candidates": [
            "Courses",
            "Transcripts",
            "Courses Student_Enrolment_Courses",
            "Addresses",
            "Transcript_Contents",
            "Semesters Student_Enrolment"
        ],
        "align_scores": [
            0.003432188183069229,
            6.500201561721042e-05,
            0.0027010105550289154,
            6.559818575624377e-05,
            0.003920059651136398,
            6.355231016641483e-05,
            0.0008275230065919459,
            6.621246575377882e-05
        ],
        "align_select": "select t12.c5, t12.c6",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What is the earliest date of a transcript release, and what details can you tell me?",
        "gold_select": "select Transcripts.transcript_date, Transcripts.oth_dtl",
        "select_candidates": [
            "select t13.c5, t13.c6",
            "select t12.c5, t12.c6",
            "select t8.c5, t8.c6",
            "select t10.c5, t10.c6"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Transcripts",
        "table_candidates": [
            "Transcripts",
            "Transcript_Contents",
            "Student_Enrolment",
            "Student_Enrolment_Courses"
        ],
        "align_scores": [
            0.007361322641372681,
            5.832986062159762e-05,
            0.006982778199017048,
            5.8834990340983495e-05,
            0.0048663136549293995,
            5.8931236708303913e-05,
            0.006500896532088518,
            5.907070590183139e-05
        ],
        "align_select": "select t13.c5, t13.c6",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "How many times at most can a course enrollment result show in different transcripts? Also show the course enrollment id.",
        "gold_select": "select count(*), Transcript_Contents.stu_crs_id",
        "select_candidates": [
            "select count(*), Students.stuid",
            "select count(*), Students.ca_id",
            "select count(distinct Student_Enrolment_Courses.stu_crs_id), Student_Enrolment_Courses.stu_crs_id",
            "select count(distinct Student_Enrolment_Courses.stu_crs_id), Student_Enrolment_Courses.crs_id"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "Transcript_Contents",
        "table_candidates": [
            "Student_Enrolment",
            "Student_Enrolment_Courses",
            "Transcripts",
            "Students Student_Enrolment_Courses",
            "Semesters Student_Enrolment",
            "Semesters Student_Enrolment_Courses",
            "Students Student_Enrolment",
            "Semesters Students"
        ],
        "align_scores": [
            0.002087836852297187,
            0.003059481270611286,
            0.0009614125010557473,
            0.0021630371920764446,
            0.001219404162839055,
            8.441390673397109e-05,
            0.0021549721714109182,
            0.00011964773875661194
        ],
        "align_select": "select count(*), Students.stuid",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What is the maximum number of times that a course shows up in different transcripts and what is that course's enrollment id?",
        "gold_select": "select count(*), Transcript_Contents.stu_crs_id",
        "select_candidates": [
            "select max(Transcript_Contents.stu_crs_id), Transcript_Contents.stu_crs_id",
            "select max(Student_Enrolment_Courses.stu_crs_id), Courses.crs_id",
            "select max(t13.c0), t13.c0",
            "select max(t10.c6), Transcript_Contents.stu_crs_id"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Transcript_Contents",
        "table_candidates": [
            "Courses Student_Enrolment_Courses",
            "Courses Student_Enrolment",
            "Courses Students",
            "Courses Transcript_Contents",
            "Addresses Courses Student_Enrolment_Courses",
            "Addresses Courses Student_Enrolment",
            "Departments Student_Enrolment_Courses"
        ],
        "align_scores": [
            0.0001381801557727158,
            0.0004896659520454705,
            0.00041618250543251634,
            0.009393765591084957,
            9.37093427637592e-05,
            0.0003405585011932999,
            0.00018882322183344513,
            0.0004464962403289974
        ],
        "align_select": "select max(Transcript_Contents.stu_crs_id), Transcript_Contents.stu_crs_id",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Find the semester when both Master students and Bachelor students got enrolled in.",
        "gold_select": "select distinct Student_Enrolment.sem_id",
        "select_candidates": [
            "select Semesters.sem_name",
            "select Semesters.sem_name, Students.ca_id3",
            "select Semesters.sem_name, Degree_Programs.degree_smry_name",
            "select Semesters.sem_name, Students.stuid"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-GROUP BY-HAVING-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Degree_Programs Student_Enrolment",
        "table_candidates": [
            "Degree_Programs Semesters Students",
            "Degree_Programs Students",
            "Departments Degree_Programs Semesters Students",
            "Courses Degree_Programs Semesters Students",
            "Addresses Degree_Programs Semesters Students",
            "Degree_Programs Sections Students"
        ],
        "align_scores": [
            0.9224002957344055,
            0.13964524865150452,
            0.00034157937625423074,
            0.0008478771196678281,
            0.0002467315352987498,
            0.0004458454786799848,
            0.0009774764766916633,
            0.0024460500571876764
        ],
        "align_select": "select Semesters.sem_name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "What is the id of the semester that had both Masters and Bachelors students enrolled?",
        "gold_select": "select distinct Student_Enrolment.sem_id",
        "select_candidates": [
            "select Semesters.sem_id",
            "select Semesters.sem_name",
            "select Students.ca_id",
            "select Students.stuid"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-GROUP BY-HAVING-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Degree_Programs Student_Enrolment",
        "table_candidates": [
            "Students",
            "Semesters Students",
            "Degree_Programs Students",
            "Sections Students",
            "Students Student_Enrolment_Courses",
            "Courses Students",
            "Student_Enrolment_Courses"
        ],
        "align_scores": [
            0.9937989115715027,
            0.0008995043463073671,
            0.9126336574554443,
            0.0004944700049236417,
            0.25533998012542725,
            0.0002875369682442397,
            0.9807742238044739,
            0.000819654087536037
        ],
        "align_select": "select Semesters.sem_id",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "How many different addresses do the students currently live?",
        "gold_select": "select count(distinct Students.ca_id)",
        "select_candidates": [
            "select count(distinct Addresses.adr_id)",
            "select count(distinct Addresses.line_2)",
            "select count(distinct Addresses.line_1)",
            "select count(distinct Addresses.city)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Students",
        "table_candidates": [
            "Addresses Students Student_Enrolment",
            "Addresses Semesters Students Student_Enrolment",
            "Addresses Students",
            "Addresses Student_Enrolment",
            "Courses Students Student_Enrolment",
            "Departments Students Student_Enrolment"
        ],
        "align_scores": [
            0.4204637408256531,
            0.000154105422552675,
            0.0014212839305400848,
            0.00014062043919693679,
            0.0023112150374799967,
            0.00014796879258938134,
            0.0005671129329130054,
            0.00010091165313497186
        ],
        "align_select": "select count(distinct Addresses.adr_id)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What are the different addresses that have students living there?",
        "gold_select": "select count(distinct Students.ca_id)",
        "select_candidates": [
            "select distinct Addresses.adr_id",
            "select distinct Addresses.line_1, Addresses.line_2",
            "select distinct Addresses.line_1",
            "select distinct Addresses.line_1, Addresses.line_3"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Students",
        "table_candidates": [
            "Addresses Students Student_Enrolment",
            "Addresses Students",
            "Addresses Students Student_Enrolment_Courses",
            "Addresses Semesters Students Student_Enrolment",
            "Addresses Students Transcripts"
        ],
        "align_scores": [
            0.5676317811012268,
            0.11266438663005829,
            0.4760448634624481,
            0.002861098386347294,
            0.3320234715938568,
            0.0072839935310184956,
            0.20920270681381226,
            0.0021617726888507605
        ],
        "align_select": "select distinct Addresses.adr_id",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "List all the student details in reversed lexicographical order.",
        "gold_select": "select Students.oth_stu_dtl",
        "select_candidates": [
            "select Students.stuid, Students.last_name",
            "select Students.ca_id, Students.last_name",
            "select Students.last_name, Students.cell",
            "select Students.stuid, Students.middle_name"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-WHERE-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Students",
        "table_candidates": [
            "Students",
            "Courses Students",
            "Semesters Students",
            "Students Student_Enrolment",
            "Addresses Students",
            "Sections Students",
            "Degree_Programs Students",
            "Departments Students"
        ],
        "align_scores": [
            0.00038939667865633965,
            0.00019902079657185823,
            0.00030599033925682306,
            0.00017338120960630476,
            0.00042422270053066313,
            0.0001752564567141235,
            0.0003795681695919484,
            0.00018802584963850677
        ],
        "align_select": "select Students.stuid, Students.last_name",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "What other details can you tell me about students in reverse alphabetical order?",
        "gold_select": "select Students.oth_stu_dtl",
        "select_candidates": [
            "select *",
            "select Students.ca_id3, Students.ca_id4",
            "select Students.last_name, Students.first_name",
            "select Students.last_name, Students.cell"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Students",
        "table_candidates": [
            "Students",
            "Semesters Students",
            "Students Student_Enrolment",
            "Addresses Students",
            "Degree_Programs Students",
            "Courses Students",
            "Sections Students"
        ],
        "align_scores": [
            0.9839914441108704,
            0.00028148663113825023,
            0.0033484192099422216,
            0.00015565252397209406,
            0.0011038670781999826,
            0.00015433746739290655,
            0.0002484126598574221,
            0.00027335184859111905
        ],
        "align_select": "select *",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "Describe the section h.",
        "gold_select": "select Sections.sect_desc",
        "select_candidates": [
            "select Sections.sect_name",
            "select Sections.sect_name, Sections.sect_desc",
            "select Sections.crs_id, Sections.sect_name",
            "select Sections.sect_id, Sections.sect_name"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Sections",
        "table_candidates": [
            "Sections",
            "Degree_Programs Sections",
            "Departments Sections",
            "Addresses Sections",
            "Courses Sections",
            "Sections Student_Enrolment",
            "Courses Student_Enrolment",
            "Degree_Programs Student_Enrolment"
        ],
        "align_scores": [
            0.9874743223190308,
            7.678017573198304e-05,
            0.00017271938850171864,
            6.249945727176964e-05,
            0.00014660815941169858,
            5.9267240430926904e-05,
            0.00012499616423156112,
            5.966611934127286e-05
        ],
        "align_select": "select Sections.sect_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the description for the section named h?",
        "gold_select": "select Sections.sect_desc",
        "select_candidates": [
            "select Sections.sect_desc",
            "select Sections.sect_desc, Sections.sect_name",
            "select Sections.sect_desc, Sections.sect_name, Sections.sect_desc",
            "select Sections.sect_desc, Sections.sect_name, Sections.sect_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Sections",
        "table_candidates": [
            "Sections",
            "Departments Sections",
            "Degree_Programs Sections",
            "Addresses Courses Sections",
            "Addresses Courses Departments Sections",
            "Courses Sections",
            "Addresses Courses Degree_Programs Sections",
            "Addresses Sections"
        ],
        "align_scores": [
            0.9961890578269958,
            7.94658626546152e-05,
            0.0001343926996923983,
            6.055748963262886e-05,
            0.0001397048035869375,
            7.864183135097846e-05,
            0.00012042230082442984,
            6.538446177728474e-05
        ],
        "align_select": "select Sections.sect_desc",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the first name of the students who permanently live in the country Haiti or have the cell phone number 09700166582.",
        "gold_select": "select Students.first_name",
        "select_candidates": [
            "select Students.first_name",
            "select distinct Students.first_name",
            "select Students.first_name, Students.last_name",
            "select Students.stuid, Students.first_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Addresses Students",
        "table_candidates": [
            "Addresses Students",
            "Addresses Semesters Students",
            "Addresses Students Student_Enrolment"
        ],
        "align_scores": [
            0.8337135910987854,
            0.9670388102531433,
            0.06273207813501358,
            0.0009215530008077621,
            0.00018483759777154773,
            0.00013477924221660942,
            0.00021736569760832936,
            0.00012497400166466832
        ],
        "align_select": "select Students.first_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the first names of the students who live in Haiti permanently or have the cell phone number 09700166582?",
        "gold_select": "select Students.first_name",
        "select_candidates": [
            "select Students.first_name",
            "select distinct Students.first_name",
            "select Students.first_name, Students.last_name",
            "select Students.stuid, Students.first_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Addresses Students",
        "table_candidates": [
            "Addresses Students",
            "Addresses Semesters Students",
            "Addresses Courses Students",
            "Addresses Students Student_Enrolment"
        ],
        "align_scores": [
            0.837342381477356,
            0.9902886152267456,
            0.03512663021683693,
            0.0016945266397669911,
            0.00022654082567896694,
            0.00020840582146774977,
            0.00022084101510699838,
            0.00018042133888229728
        ],
        "align_select": "select Students.first_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How is the math course described?",
        "gold_select": "select Courses.crs_desc",
        "select_candidates": [
            "select Departments.department_description",
            "select Departments.dept_id, Departments.department_description",
            "select Departments.department_description, Courses.course_name",
            "select Departments.dept_name, Departments.department_description"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Courses",
        "table_candidates": [
            "Courses Departments",
            "Courses"
        ],
        "align_scores": [
            0.7164965867996216,
            7.545234257122502e-05,
            0.0001343846379313618,
            6.800077972002327e-05,
            0.00016400613822042942,
            6.179269257700071e-05,
            0.00017305833171121776,
            6.91604072926566e-05
        ],
        "align_select": "select Departments.department_description",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the descriptions for all the math courses?",
        "gold_select": "select Courses.crs_desc",
        "select_candidates": [
            "select Courses.crs_desc",
            "select Courses.course_name, Departments.department_description",
            "select Departments.department_description",
            "select Courses.course_name, Courses.crs_desc"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Courses",
        "table_candidates": [
            "Courses Departments",
            "Courses",
            "Courses Departments Degree_Programs"
        ],
        "align_scores": [
            0.972409725189209,
            0.00015616542077623308,
            0.00019576167687773705,
            6.77635325700976e-05,
            0.02394074574112892,
            0.00012364829308353364,
            0.00022728160547558218,
            7.702056609559804e-05
        ],
        "align_select": "select Courses.crs_desc",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the zip code of the address in the city Port Chelsea?",
        "gold_select": "select Addresses.zipcode",
        "select_candidates": [
            "select Addresses.zipcode",
            "select Addresses.zipcode, Addresses.other_address_details",
            "select Addresses.zipcode, Addresses.country",
            "select Addresses.zipcode, Addresses.state_province_county"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Addresses",
        "table_candidates": [
            "Addresses"
        ],
        "align_scores": [
            0.9839406609535217,
            0.0001019331393763423,
            0.00017968894098885357,
            5.856082498212345e-05,
            0.0001717306295176968,
            5.653868356603198e-05,
            0.00023175821115728468,
            6.524693890241906e-05
        ],
        "align_select": "select Addresses.zipcode",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the zip code for Port Chelsea?",
        "gold_select": "select Addresses.zipcode",
        "select_candidates": [
            "select Addresses.zipcode",
            "select Addresses.zipcode, Addresses.city",
            "select Addresses.zipcode, Addresses.state_province_county",
            "select Addresses.zipcode, Addresses.country"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Addresses",
        "table_candidates": [
            "Addresses"
        ],
        "align_scores": [
            0.9911419153213501,
            0.00016120036889333278,
            0.00016645187861286104,
            5.5997483286773786e-05,
            0.00023954271455295384,
            6.796927482355386e-05,
            0.00015985155187081546,
            5.645700002787635e-05
        ],
        "align_select": "select Addresses.zipcode",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which department offers the most number of degrees? List department name and id.",
        "gold_select": "select Departments.dept_name, Degree_Programs.department_id",
        "select_candidates": [
            "select Departments.dept_name, Degree_Programs.department_id",
            "select Departments.dept_name, Departments.dept_id",
            "select Departments.dept_name, t03.c1",
            "select Departments.dept_name, Degree_Programs.department_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-UNION-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Departments Degree_Programs",
        "table_candidates": [
            "Departments Degree_Programs"
        ],
        "align_scores": [
            0.9908702969551086,
            0.00015693805471528322,
            0.9877409338951111,
            0.0001248079934157431,
            0.00040690653258934617,
            7.977184577612206e-05,
            0.9908702969551086,
            0.00015693805471528322
        ],
        "align_select": "select Departments.dept_name, Degree_Programs.department_id",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the name and id of the department with the most number of degrees?",
        "gold_select": "select Departments.dept_name, Degree_Programs.department_id",
        "select_candidates": [
            "select Departments.dept_name, Degree_Programs.department_id",
            "select Departments.dept_name, Departments.dept_id",
            "select Departments.dept_name, t03.c1",
            "select Departments.dept_name, Degree_Programs.department_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Departments Degree_Programs",
        "table_candidates": [
            "Departments Degree_Programs"
        ],
        "align_scores": [
            0.9925984144210815,
            8.118357072817162e-05,
            0.9936591982841492,
            6.77364005241543e-05,
            0.00034327429602853954,
            6.318211671896279e-05,
            0.9925984144210815,
            8.118357072817162e-05
        ],
        "align_select": "select Departments.dept_name, Degree_Programs.department_id",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "How many different degree names are offered?",
        "gold_select": "select count(distinct Degree_Programs.degree_smry_name)",
        "select_candidates": [
            "select count(distinct Degree_Programs.degree_smry_name)",
            "select count(distinct Degree_Programs.degree_smry_name",
            "select count(distinct t3.c6)",
            "select count(distinct Degree_Programs.degree_smry_name)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "Degree_Programs",
        "table_candidates": [
            "Degree_Programs"
        ],
        "align_scores": [
            0.7469585537910461,
            0.7469585537910461,
            0.016932480037212372,
            0.016932480037212372,
            0.0006718829390592873,
            0.0006718829390592873,
            0.7469585537910461,
            0.7469585537910461
        ],
        "align_select": "select count(distinct Degree_Programs.degree_smry_name)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "How many different degrees are offered?",
        "gold_select": "select count(distinct Degree_Programs.degree_smry_name)",
        "select_candidates": [
            "select count(distinct Degree_Programs.degree_smry_name)",
            "select count(distinct Degree_Programs.degree_pmg_id)",
            "select count(distinct Degree_Programs.department_id)",
            "select count(distinct Degree_Programs.degree_smry_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "Degree_Programs",
        "table_candidates": [
            "Degree_Programs"
        ],
        "align_scores": [
            0.5669377446174622,
            0.5669377446174622,
            0.04923822730779648,
            0.04923822730779648,
            0.0015694212634116411,
            0.0015694212634116411,
            0.01963476464152336,
            0.01963476464152336
        ],
        "align_select": "select count(distinct Degree_Programs.degree_smry_name)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "How many degrees does the engineering department offer?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(distinct Degree_Programs.degree_smry_name)",
            "select count(distinct Degree_Programs.degree_pmg_id)",
            "select count(*), Departments.dept_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Departments Degree_Programs",
        "table_candidates": [
            "Departments Degree_Programs",
            "Courses Departments Degree_Programs",
            "Addresses Departments Degree_Programs"
        ],
        "align_scores": [
            0.9851910471916199,
            7.64167052693665e-05,
            0.0013812684919685125,
            5.798313213745132e-05,
            0.0005709254182875156,
            5.797273479402065e-05,
            0.00023026509734336287,
            7.191202894318849e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many degrees does the engineering department have?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Departments.dept_name",
            "select count(distinct Degree_Programs.degree_smry_name)",
            "select count(distinct Degree_Programs.degree_pmg_id)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Departments Degree_Programs",
        "table_candidates": [
            "Departments Degree_Programs",
            "Courses Departments Degree_Programs",
            "Addresses Departments Degree_Programs",
            "Degree_Programs Departments Degree_Programs",
            "Departments Degree_Programs Sections"
        ],
        "align_scores": [
            0.9927553534507751,
            7.581780664622784e-05,
            0.0002284308720845729,
            6.775900692446157e-05,
            0.0006878235726617277,
            5.760999920312315e-05,
            0.00041897076880559325,
            5.563670856645331e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names and descriptions of all the sections?",
        "gold_select": "select Sections.section_name, Sections.sect_desc",
        "select_candidates": [
            "select Sections.section_name, Sections.sect_desc",
            "select Sections.section_name, Departments.oth_dtl",
            "select Sections.sect_id, Sections.section_name, Sections.sect_desc",
            "select Sections.section_name, Sections.sect_desc, Sections.other_dtl"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Sections",
        "table_candidates": [
            "Sections",
            "Departments Sections",
            "Degree_Programs Sections",
            "Addresses Departments Sections"
        ],
        "align_scores": [
            0.9895166754722595,
            0.004197136498987675,
            0.004090949892997742,
            0.0009359732503071427,
            0.00024679178022779524,
            0.0001300670555792749,
            0.00034055591095238924,
            0.00013999683142174035
        ],
        "align_select": "select Sections.section_name, Sections.sect_desc",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What are the names and descriptions for all the sections?",
        "gold_select": "select Sections.section_name, Sections.sect_desc",
        "select_candidates": [
            "select Sections.section_name, Sections.sect_desc",
            "select Sections.section_name, Departments.oth_dtl",
            "select Sections.section_name, Sections.sect_desc, Sections.other_dtl",
            "select Sections.section_name, Sections.sect_desc, Sections.sect_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Sections",
        "table_candidates": [
            "Sections",
            "Departments Sections",
            "Degree_Programs Sections",
            "Addresses Departments Sections"
        ],
        "align_scores": [
            0.9906795620918274,
            0.00017071237380150706,
            0.003217433812096715,
            0.00013157066132407635,
            0.00030646007508039474,
            7.330717926379293e-05,
            0.0002507972239982337,
            7.79174588387832e-05
        ],
        "align_select": "select Sections.section_name, Sections.sect_desc",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What are the names and id of courses having at most 2 sections?",
        "gold_select": "select Courses.course_name, Courses.crs_id",
        "select_candidates": [
            "select Courses.course_name, Courses.crs_id",
            "select Courses.course_name, Sections.crs_id",
            "select Courses.course_name, Sections.sect_id",
            "select Courses.course_name, Departments.dept_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Courses Sections",
        "table_candidates": [
            "Courses Sections",
            "Courses Departments Sections",
            "Courses Degree_Programs Sections"
        ],
        "align_scores": [
            0.05586997792124748,
            0.00013149893493391573,
            0.6978820562362671,
            0.00010781890159705654,
            0.0011123651638627052,
            7.760349399177358e-05,
            0.0007698804838582873,
            0.00010288546036463231
        ],
        "align_select": "select Courses.course_name, Sections.crs_id",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the names and ids of every course with less than 2 sections?",
        "gold_select": "select Courses.course_name, Courses.crs_id",
        "select_candidates": [
            "select Courses.course_name, Courses.crs_id",
            "select Courses.course_name, Sections.crs_id",
            "select Courses.course_name, Sections.sect_id",
            "select Courses.course_name, Departments.dept_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Courses Sections",
        "table_candidates": [
            "Courses Sections",
            "Courses Departments Sections"
        ],
        "align_scores": [
            0.034512318670749664,
            0.00014726106019224972,
            0.26277175545692444,
            0.0001409848191542551,
            0.0008584002498537302,
            0.00010323778406018391,
            0.0005622609169222414,
            0.00014040070527698845
        ],
        "align_select": "select Courses.course_name, Sections.crs_id",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What is the semester which most student registered in? Show both the name and the id.",
        "gold_select": "select Semesters.semester_name, Semesters.sem_id",
        "select_candidates": [
            "select Semesters.semester_name, Semesters.sem_id",
            "select Semesters.semester_name, Students.stuid",
            "select Semesters.semester_name, sem_Semesters.sem_id",
            "select Semesters.semester_name, t5c0"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Semesters Student_Enrolment",
        "table_candidates": [
            "Semesters Student_Enrolment",
            "Departments Semesters Student_Enrolment"
        ],
        "align_scores": [
            0.9799116253852844,
            7.680610724491999e-05,
            0.9761576652526855,
            9.899062570184469e-05,
            0.0010480777127668262,
            8.977174729807302e-05,
            0.0004310691438149661,
            8.073610661085695e-05
        ],
        "align_select": "select Semesters.semester_name, Semesters.sem_id",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "For each semester, what is the name and id of the one with the most students registered?",
        "gold_select": "select Semesters.semester_name, Semesters.sem_id",
        "select_candidates": [
            "select Semesters.semester_name, Semesters.sem_id",
            "select Semesters.semester_name, sem_Semesters.sem_id",
            "select Semesters.semester_name, Semesters.sem_id, Students.ca_id",
            "select Semesters.semester_name, Students.stuid"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-UNION-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Semesters Student_Enrolment",
        "table_candidates": [
            "Semesters Student_Enrolment",
            "Semesters Students Student_Enrolment",
            "Departments Semesters Student_Enrolment",
            "Degree_Programs Semesters Student_Enrolment",
            "Semesters Student_Enrolment_Courses",
            "Semesters Student_Enrolment Students"
        ],
        "align_scores": [
            0.9609584808349609,
            0.00014708480739500374,
            0.0022442813497036695,
            0.00011361986253177747,
            0.0004291078366804868,
            8.77605561981909e-05,
            0.609606921672821,
            0.00016188842710107565
        ],
        "align_select": "select Semesters.semester_name, Semesters.sem_id",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the description of the department whose name has the substring the computer?",
        "gold_select": "select Departments.department_description",
        "select_candidates": [
            "select Departments.department_description",
            "select Departments.department_description, Departments.oth_dtl",
            "select Departments.dept_name, Departments.department_description",
            "select Departments.department_description, Departments.dept_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Departments",
        "table_candidates": [
            "Departments",
            "Addresses Courses Departments",
            "Addresses Departments",
            "Courses Departments",
            "Departments Student_Enrolment",
            "Departments Student_Enrolment_Courses",
            "Departments Degree_Programs"
        ],
        "align_scores": [
            0.9707513451576233,
            0.00010075415775645524,
            0.0001721455919323489,
            7.3776907811407e-05,
            0.00021637730242218822,
            6.807376485085115e-05,
            0.0001792970288079232,
            6.207251135492697e-05
        ],
        "align_select": "select Departments.department_description",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the department description for the one whose name has the word computer?",
        "gold_select": "select Departments.department_description",
        "select_candidates": [
            "select Departments.department_description",
            "select Departments.dept_name, Departments.department_description",
            "select Departments.department_description, Departments.oth_dtl",
            "select Departments.department_description, Departments.dept_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Departments",
        "table_candidates": [
            "Departments",
            "Addresses Departments",
            "Courses Departments",
            "Departments Degree_Programs",
            "Departments Transcripts",
            "Departments Student_Enrolment",
            "Departments Student_Enrolment_Courses"
        ],
        "align_scores": [
            0.994844913482666,
            8.863944822223857e-05,
            0.0002072557108476758,
            6.901684537297115e-05,
            0.00016072869766503572,
            6.757638766430318e-05,
            0.00017529705655761063,
            6.137349555501714e-05
        ],
        "align_select": "select Departments.department_description",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Who are enrolled in 2 degree programs in one semester? List the first name, middle name and last name and the id.",
        "gold_select": "select Students.first_name, Students.middle_name, Students.last_name, Students.stuid",
        "select_candidates": [
            "select Students.first_name, Students.middle_name, Students.last_name, Students.stuid",
            "select Students.first_name, Students.middle_name, Students.last_name",
            "select Students.first_name, Students.middle_name, Students.last_name and Students.stuid",
            "select Students.first_name, Students.middle_name, Students.last_name, sem_Students.stuid"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "Students Student_Enrolment",
        "table_candidates": [
            "Students",
            "Degree_Programs Students",
            "Students Student_Enrolment",
            "Students Student_Enrolment_Courses",
            "Semesters Students",
            "Departments Degree_Programs Students",
            "Sections Students"
        ],
        "align_scores": [
            0.28903838992118835,
            0.004496018867939711,
            0.2581307888031006,
            0.0005297372117638588,
            0.5122132897377014,
            0.005084384232759476,
            0.40865322947502136,
            0.011134675703942776
        ],
        "align_select": "select Students.first_name, Students.middle_name, Students.last_name and Students.stuid",
        "align_structure": "SELECT-FROM-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the first, middle, and last names, along with the ids, of all students who enrolled in 2 degree programs in one semester?",
        "gold_select": "select Students.first_name, Students.middle_name, Students.last_name, Students.stuid",
        "select_candidates": [
            "select Students.first_name, Students.middle_name, Students.last_name, Students.stuid",
            "select Students.first_name, Students.middle_name, Students.last_name",
            "select Students.first_name, Students.middle_name, Students.last_name, Students.stuid",
            "select Students.first_name, Students.middle_name, Students.last_name plus Students.stuid"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "Students Student_Enrolment",
        "table_candidates": [
            "Degree_Programs Students",
            "Students Student_Enrolment",
            "Students Student_Enrolment_Courses",
            "Semesters Students",
            "Students",
            "Degree_Programs Students Student_Enrolment_Courses",
            "Departments Degree_Programs Students",
            "Degree_Programs Students Student_Enrolment"
        ],
        "align_scores": [
            0.9093809127807617,
            0.006537233013659716,
            0.5131357908248901,
            0.0011025328421965241,
            0.9093809127807617,
            0.006537233013659716,
            0.9695213437080383,
            0.01087363250553608
        ],
        "align_select": "select Students.first_name, Students.middle_name, Students.last_name, Students.stuid",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "Who is enrolled in a Bachelor degree program? List the first name, middle name, last name.",
        "gold_select": "select distinct Students.first_name, Students.middle_name, Students.last_name",
        "select_candidates": [
            "select Students.first_name, Students.middle_name, Students.last_name",
            "select Students.stuid, Students.first_name, Students.middle_name, Students.last_name",
            "select distinct Students.first_name, Students.middle_name, Students.last_name",
            "select Students.ca_id, Students.middle_name, Students.last_name"
        ],
        "select_labels": [
            0.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Degree_Programs Students Student_Enrolment",
        "table_candidates": [
            "Degree_Programs Students Student_Enrolment",
            "Degree_Programs Students",
            "Addresses Degree_Programs Students Student_Enrolment",
            "Courses Degree_Programs Students Student_Enrolment",
            "Departments Degree_Programs Students Student_Enrolment",
            "Degree_Programs Students Student_Enrolment_Courses"
        ],
        "align_scores": [
            0.986777126789093,
            0.00014054845087230206,
            0.00021438163821585476,
            8.866497955750674e-05,
            0.027531510218977928,
            6.963796477066353e-05,
            0.0003115595900453627,
            9.10566232050769e-05
        ],
        "align_select": "select Students.first_name, Students.middle_name, Students.last_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the first, middle, and last names for everybody enrolled in a Bachelors program?",
        "gold_select": "select distinct Students.first_name, Students.middle_name, Students.last_name",
        "select_candidates": [
            "select Students.first_name, Students.middle_name, Students.last_name",
            "select Students.stuid, Students.first_name, Students.middle_name, Students.last_name",
            "select Students.first_name, Students.middle_name, Students.last_name",
            "select distinct Students.first_name, Students.middle_name, Students.last_name"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Degree_Programs Students Student_Enrolment",
        "table_candidates": [
            "Degree_Programs Students Student_Enrolment",
            "Students Student_Enrolment",
            "Departments Degree_Programs Students Student_Enrolment",
            "Addresses Degree_Programs Students Student_Enrolment",
            "Courses Degree_Programs Students Student_Enrolment",
            "Semesters Students Student_Enrolment",
            "Courses Students Student_Enrolment",
            "Sections Students Student_Enrolment"
        ],
        "align_scores": [
            0.9808099865913391,
            0.00011929730681004003,
            0.00018778220692183822,
            7.672512583667412e-05,
            0.9808099865913391,
            0.00011929730681004003,
            0.014467473141849041,
            6.694857438560575e-05
        ],
        "align_select": "select Students.first_name, Students.middle_name, Students.last_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the kind of program which most number of students are enrolled in?",
        "gold_select": "select Degree_Programs.degree_smry_name",
        "select_candidates": [
            "select Degree_Programs.degree_smry_name",
            "select Degree_Programs.degree_smry_name, Student_Enrolment.degree_program_id",
            "select Degree_Programs.department_id",
            "select Degree_Programs.degree_smry_name, Student_Enrolment.stu_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Degree_Programs Student_Enrolment",
        "table_candidates": [
            "Degree_Programs Student_Enrolment",
            "Courses Degree_Programs Student_Enrolment",
            "Courses Departments Degree_Programs Student_Enrolment",
            "Departments Degree_Programs Student_Enrolment",
            "Addresses Courses Degree_Programs Student_Enrolment",
            "Addresses Courses Departments Degree_Programs Student_Enrolment",
            "Addresses Courses Courses Degree_Programs Student_Enrolment",
            "Sections Student_Enrolment"
        ],
        "align_scores": [
            0.6106048822402954,
            0.00011522482964210212,
            0.0031892266124486923,
            8.89586954144761e-05,
            0.054438136518001556,
            9.796816448215395e-05,
            0.0003040825540665537,
            7.376663415925577e-05
        ],
        "align_select": "select Degree_Programs.degree_smry_name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the degree summary name that has the most number of students enrolled?",
        "gold_select": "select Degree_Programs.degree_smry_name",
        "select_candidates": [
            "select Degree_Programs.degree_smry_name",
            "select Degree_Programs.degree_smry_name, Degree_Programs.degree_smry_desc",
            "select Degree_Programs.degree_smry_name, Student_Enrolment.stu_id",
            "select Degree_Programs.degree_smry_name, Degree_Programs.degree_smry_desc"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Degree_Programs Student_Enrolment",
        "table_candidates": [
            "Degree_Programs Student_Enrolment",
            "Departments Degree_Programs Student_Enrolment",
            "Courses Degree_Programs Student_Enrolment",
            "Addresses Degree_Programs Student_Enrolment",
            "Departments Student_Enrolment"
        ],
        "align_scores": [
            0.9436674118041992,
            0.00011609301145654172,
            0.00037375520332716405,
            7.214618381112814e-05,
            0.0003767774032894522,
            9.077625145437196e-05,
            0.00037375520332716405,
            7.214618381112814e-05
        ],
        "align_select": "select Degree_Programs.degree_smry_name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Find the program which most number of students are enrolled in. List both the id and the summary.",
        "gold_select": "select Degree_Programs.degree_pmg_id, Degree_Programs.degree_smry_name",
        "select_candidates": [
            "select Degree_Programs.department_id, Departments.department_description",
            "select Departments.dept_id, Departments.department_description",
            "select Degree_Programs.degree_pmg_id, Departments.department_description",
            "select Departments.dept_name, Departments.department_description"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Degree_Programs Student_Enrolment",
        "table_candidates": [
            "Courses Departments Degree_Programs Students",
            "Departments Degree_Programs Students",
            "Degree_Programs Students",
            "Courses Degree_Programs Students",
            "Courses Departments Degree_Programs Students Student_Enrolment",
            "Departments Degree_Programs Students Student_Enrolment",
            "Degree_Programs Students Student_Enrolment_Courses",
            "Courses Departments Degree_Programs Students Student_Enrolment_Courses"
        ],
        "align_scores": [
            0.18790052831172943,
            9.162120113614947e-05,
            0.9897140860557556,
            8.746219828026369e-05,
            0.0025944418739527464,
            0.0001077068955055438,
            0.00037890547537244856,
            7.098013156792149e-05
        ],
        "align_select": "select Departments.dept_id, Departments.department_description",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the program id and the summary of the degree that has the most students enrolled?",
        "gold_select": "select Degree_Programs.degree_pmg_id, Degree_Programs.degree_smry_name",
        "select_candidates": [
            "select Degree_Programs.degree_pmg_id, Degree_Programs.degree_smry_desc",
            "select Degree_Programs.department_id, Degree_Programs.degree_smry_desc",
            "select Degree_Programs.degree_smry_name, Degree_Programs.degree_smry_desc",
            "select Degree_Programs.degree_pmg_id, Degree_Programs.degree_smry_name"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-UNION-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Degree_Programs Student_Enrolment",
        "table_candidates": [
            "Degree_Programs Student_Enrolment",
            "Departments Degree_Programs Student_Enrolment",
            "Courses Degree_Programs Student_Enrolment"
        ],
        "align_scores": [
            0.9705052971839905,
            0.00017759892216417938,
            0.0008339931955561042,
            0.00010197873052675277,
            0.00026801376952789724,
            7.911789725767449e-05,
            0.9650827050209045,
            0.00018100306624546647
        ],
        "align_select": "select Degree_Programs.degree_pmg_id, Degree_Programs.degree_smry_desc",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Which student has enrolled for the most times in any program? List the id, first name, middle name, last name, the number of enrollments and student id.",
        "gold_select": "select Students.stuid, Students.first_name, Students.middle_name, Students.last_name, count(*), Students.stuid",
        "select_candidates": [
            "select Students.stuid, Students.first_name, Students.middle_name, Students.last_name, count(*)",
            "select Students.stuid, Students.first_name, Students.middle_name, Students.last_name",
            "select Students.stuid, Students.ca_id, Students.middle_name, Students.last_name, count(*)",
            "select Students.stuid, Students.first_name, Students.middle_name, Students.last_name, count(*)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "Students Student_Enrolment",
        "table_candidates": [
            "Students Student_Enrolment",
            "Students",
            "Students Student_Enrolment_Courses"
        ],
        "align_scores": [
            0.09578730911016464,
            0.09578730911016464,
            0.04428907111287117,
            0.04428907111287117,
            0.0003213274758309126,
            0.0003213274758309126,
            0.09578730911016464,
            0.09578730911016464
        ],
        "align_select": "select Students.stuid, Students.first_name, Students.middle_name, Students.last_name, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the first, middle, and last name, along with the id and number of enrollments, for the student who enrolled the most in any program?",
        "gold_select": "select Students.stuid, Students.first_name, Students.middle_name, Students.last_name, count(*), Students.stuid",
        "select_candidates": [
            "select Students.first_name, Students.middle_name, Students.last_name, Students.stuid, count(*)",
            "select Students.first_name, Students.middle_name, Students.last_name, Students.stuid, count(Students.stuid)",
            "select Students.first_name, Students.middle_name, Students.last_name, Students.ca_id, count(*)",
            "select Students.first_name, Students.middle_name, Students.last_name ainsi Students.stuid, count(*)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Students Student_Enrolment",
        "table_candidates": [
            "Students Student_Enrolment",
            "Students Student_Enrolment_Courses"
        ],
        "align_scores": [
            0.9595895409584045,
            0.00021766145073343068,
            0.49410536885261536,
            0.00011940144759137183,
            0.696304202079773,
            0.000194989494048059,
            0.09529571235179901,
            0.00013024351210333407
        ],
        "align_select": "select Students.first_name, Students.middle_name, Students.last_name, Students.stuid, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Which semesters do not have any student enrolled? List the semester name.",
        "gold_select": "select Semesters.semester_name",
        "select_candidates": [
            "select Semesters.semester_name",
            "select Semesters.semester_name, Student_Enrolment.semester_id",
            "select Semesters.semester_name, Semesters.sem_desc, t5.dtl",
            "select Semesters.semester_name, Students.ca_id, Student_Enrolment.semester_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Semesters",
        "table_candidates": [
            "Semesters Student_Enrolment",
            "Semesters"
        ],
        "align_scores": [
            0.844752848148346,
            0.7668913006782532,
            0.00020667001081164926,
            0.00045856807264499366,
            0.00014697894221171737,
            0.00021508430654648691,
            0.00014133923104964197,
            0.00013745659089181572
        ],
        "align_select": "select Semesters.semester_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the name of the semester with no students enrolled?",
        "gold_select": "select Semesters.semester_name",
        "select_candidates": [
            "select Semesters.semester_name",
            "select Semesters.semester_name, Student_Enrolment.semester_id",
            "select Semesters.semester_name, Semesters.sem_desc",
            "select Semesters.semester_name, Students.ca_id, Student_Enrolment.semester_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Semesters",
        "table_candidates": [
            "Semesters Student_Enrolment",
            "Semesters Students Student_Enrolment",
            "Semesters"
        ],
        "align_scores": [
            0.9793596267700195,
            0.7486101388931274,
            0.0001563919213367626,
            0.0003412145306356251,
            0.00026624754536896944,
            0.0005106462049297988,
            0.00012696359772235155,
            0.00010049786214949563
        ],
        "align_select": "select Semesters.semester_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are all the course names of the courses which ever have students enrolled in?",
        "gold_select": "select distinct Courses.course_name",
        "select_candidates": [
            "select Courses.course_name",
            "select distinct Courses.course_name",
            "select Courses.course_name, Student_Enrolment.semester_id",
            "select distinct Courses.course_name, Student_Enrolment.semester_id"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Courses Student_Enrolment_Courses",
        "table_candidates": [
            "Courses Student_Enrolment",
            "Addresses Courses Student_Enrolment",
            "Courses"
        ],
        "align_scores": [
            0.2931239604949951,
            0.5346075892448425,
            0.6637301445007324,
            0.23494678735733032,
            0.00018574146088212729,
            0.00013357096759136766,
            0.0007133462349884212,
            0.0002844832488335669
        ],
        "align_select": "select distinct Courses.course_name",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What are the names of all courses that have some students enrolled?",
        "gold_select": "select distinct Courses.course_name",
        "select_candidates": [
            "select Courses.course_name",
            "select distinct Courses.course_name",
            "select Courses.course_name, Student_Enrolment.semester_id",
            "select distinct Courses.course_name, Student_Enrolment.semester_id"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Courses Student_Enrolment_Courses",
        "table_candidates": [
            "Courses Student_Enrolment",
            "Addresses Courses Student_Enrolment"
        ],
        "align_scores": [
            0.551201581954956,
            0.002212381921708584,
            0.7273216247558594,
            0.02663128636777401,
            0.00021062884479761124,
            9.988849342335016e-05,
            0.00024171975383069366,
            0.00012243886885698885
        ],
        "align_select": "select Courses.course_name",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What's the name of the course with most number of enrollments?",
        "gold_select": "select Courses.course_name",
        "select_candidates": [
            "select Courses.course_name",
            "select Courses.course_name, Student_Enrolment.semester_id",
            "select Courses.course_name, Student_Enrolment.degree_program_id",
            "select Courses.course_name (Student_Enrolment.semester_id)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Courses Student_Enrolment_Courses",
        "table_candidates": [
            "Courses Student_Enrolment",
            "Addresses Courses Student_Enrolment"
        ],
        "align_scores": [
            0.993316650390625,
            9.062489698408172e-05,
            0.00018518335127737373,
            5.9332887758500874e-05,
            0.00032359748729504645,
            6.87214414938353e-05,
            0.00045713703730143607,
            6.739150558132678e-05
        ],
        "align_select": "select Courses.course_name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the name of the course with the most students enrolled?",
        "gold_select": "select Courses.course_name",
        "select_candidates": [
            "select Courses.course_name",
            "select Courses.course_name, Student_Enrolment.semester_id",
            "select Courses.course_name, Student_Enrolment.semester_id, Courses.oth_dtl",
            "select Courses.course_name, Student_Enrolment.semester_id, Student_Enrolment.stu_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Courses Student_Enrolment_Courses",
        "table_candidates": [
            "Courses Student_Enrolment",
            "Addresses Courses Student_Enrolment"
        ],
        "align_scores": [
            0.9938240051269531,
            9.257812780560926e-05,
            0.0002235152351204306,
            5.977906403131783e-05,
            0.0001734043617034331,
            5.906097067054361e-05,
            0.00018460264254827052,
            6.588467658730224e-05
        ],
        "align_select": "select Courses.course_name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Find the last name of the students who currently live in the state of North Carolina but have not registered in any degree program.",
        "gold_select": "select Students.last_name",
        "select_candidates": [
            "select Students.last_name",
            "select Students.last_name, Students.stuid",
            "select Students.last_name, Students.date_left",
            "select Students.last_name, Students.ssn"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Addresses Students Student_Enrolment",
        "table_candidates": [
            "Addresses Students",
            "Addresses Students Student_Enrolment",
            "Addresses Degree_Programs Students",
            "Addresses Degree_Programs Students Student_Enrolment",
            "Addresses Departments Degree_Programs Students",
            "Addresses Students Student_Enrolment_Courses",
            "Addresses Courses Students",
            "Addresses Semesters Students"
        ],
        "align_scores": [
            0.7493164539337158,
            0.8573399186134338,
            0.0005211512325331569,
            0.0004966732230968773,
            0.0002818335487972945,
            0.00025999275385402143,
            0.0006546663935296237,
            0.0005656217108480632
        ],
        "align_select": "select Students.last_name",
        "align_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM"
    },
    {
        "question": "What are the last name of the students who live in North Carolina but have not registered in any degree programs?",
        "gold_select": "select Students.last_name",
        "select_candidates": [
            "select Students.last_name",
            "select Students.last_name, Students.date_first_registered",
            "select Students.last_name, Students.date_left",
            "select Students.last_name, Students.ssn"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Addresses Students Student_Enrolment",
        "table_candidates": [
            "Addresses Degree_Programs Students",
            "Addresses Degree_Programs Students Student_Enrolment",
            "Addresses Departments Degree_Programs Students",
            "Addresses Students",
            "Addresses Students Student_Enrolment",
            "Addresses Courses Degree_Programs Students",
            "Addresses Departments Degree_Programs Students Student_Enrolment",
            "Addresses Courses Students"
        ],
        "align_scores": [
            0.7939284443855286,
            0.893947184085846,
            0.0003416531253606081,
            0.0002842562971636653,
            0.0002123776648659259,
            0.0001987295545404777,
            0.00045751978177577257,
            0.0004085684195160866
        ],
        "align_select": "select Students.last_name",
        "align_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM"
    },
    {
        "question": "What is the phone number of the man with the first name Timmothy and the last name Ward?",
        "gold_select": "select Students.cell",
        "select_candidates": [
            "select Students.cell",
            "select Students.cell, Students.email",
            "select Students.cell, Students.ca_id3",
            "select Students.cell, Students.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Students",
        "table_candidates": [
            "Students",
            "Addresses Students",
            "Degree_Programs Students",
            "Semesters Students",
            "Courses Students",
            "Addresses Courses Students",
            "Sections Students",
            "Students Student_Enrolment"
        ],
        "align_scores": [
            0.4738241732120514,
            8.500763215124607e-05,
            0.00019481184426695108,
            6.965576176298782e-05,
            0.00019692067871801555,
            7.085833931341767e-05,
            0.0001865524100139737,
            7.065760291879997e-05
        ],
        "align_select": "select Students.cell",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the mobile phone number of the student named Timmothy Ward?",
        "gold_select": "select Students.cell",
        "select_candidates": [
            "select Students.cell",
            "select Students.cell, Students.email",
            "select Students.cell, Students.email, Students.ssn",
            "select Students.cell, Students.email, Students.ssn"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Students",
        "table_candidates": [
            "Students",
            "Students Student_Enrolment",
            "Addresses Students",
            "Addresses Students Student_Enrolment",
            "Semesters Students",
            "Courses Students",
            "Degree_Programs Students",
            "Courses Students Student_Enrolment"
        ],
        "align_scores": [
            0.9767071008682251,
            8.081336272880435e-05,
            0.00017194902466144413,
            5.5759614042472094e-05,
            0.0001705678878352046,
            5.607764614978805e-05,
            0.0001705678878352046,
            5.607764614978805e-05
        ],
        "align_select": "select Students.cell",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Whose permanent address is different from his or her current address? List his or her first name.",
        "gold_select": "select Students.first_name",
        "select_candidates": [
            "select Students.first_name",
            "select distinct Students.first_name",
            "select Students.stuid, Students.first_name",
            "select Students.first_name, Students.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Students",
        "table_candidates": [
            "Addresses Students",
            "Addresses Students Student_Enrolment_Courses",
            "Addresses Students Student_Enrolment",
            "Addresses Transcripts",
            "Addresses Students Transcripts"
        ],
        "align_scores": [
            0.6903728246688843,
            0.0002553312515374273,
            0.03285570815205574,
            0.00017483266128692776,
            0.00022185085981618613,
            0.000105110346339643,
            0.00019943532242905349,
            9.109727398026735e-05
        ],
        "align_select": "select Students.first_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the first name of the student whose permanent address is different from his or her current one?",
        "gold_select": "select Students.first_name",
        "select_candidates": [
            "select Students.first_name",
            "select Students.stuid, Students.first_name",
            "select Students.first_name, Addresses.other_address_details",
            "select Students.first_name, Students.middle_name, Students.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Students",
        "table_candidates": [
            "Addresses Students",
            "Addresses Students Student_Enrolment",
            "Addresses Students Student_Enrolment_Courses",
            "Addresses Semesters Students",
            "Addresses Courses Students"
        ],
        "align_scores": [
            0.7999458312988281,
            0.00018232017464470118,
            0.0002122940495610237,
            7.359927258221433e-05,
            0.00042254029540345073,
            7.72563143982552e-05,
            0.00021157608716748655,
            7.297692354768515e-05
        ],
        "align_select": "select Students.first_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which address holds the most number of students currently? List the address id and all lines.",
        "gold_select": "select Addresses.adr_id, Addresses.line_1, Addresses.line_2",
        "select_candidates": [
            "select Addresses.adr_id, Addresses.line_1, Addresses.line_2",
            "select Addresses.adr_id, Addresses.line_1, Addresses.line_3",
            "select Addresses.adr_id, Addresses.line_1",
            "select Addresses.adr_id, Addresses.line_1, Addresses.line_2, Addresses.line_3"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-UNION-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Addresses Students",
        "table_candidates": [
            "Addresses Students",
            "Addresses Students Student_Enrolment",
            "Addresses Student_Enrolment",
            "Addresses Semesters Students",
            "Addresses Students Student_Enrolment_Courses",
            "Addresses Courses Students",
            "Addresses Sections Students",
            "Addresses Departments Students"
        ],
        "align_scores": [
            0.9773598313331604,
            0.0001180723265861161,
            0.1464536041021347,
            0.0001093487226171419,
            0.12243764847517014,
            0.00014992615615483373,
            0.9857978224754333,
            0.00012491419329307973
        ],
        "align_select": "select Addresses.adr_id, Addresses.line_1, Addresses.line_2",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the id, line 1, and line 2 of the address with the most students?",
        "gold_select": "select Addresses.adr_id, Addresses.line_1, Addresses.line_2",
        "select_candidates": [
            "select Addresses.adr_id, Addresses.line_1, Addresses.line_2",
            "select student_Addresses.adr_id, Addresses.line_1, Addresses.line_2",
            "select Addresses.line_1, Addresses.line_2, Addresses.line_3",
            "select Addresses.other_address_details, Addresses.line_1, Addresses.line_2"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Addresses Students",
        "table_candidates": [
            "Addresses Students",
            "Addresses Students Student_Enrolment_Courses",
            "Addresses Students Student_Enrolment",
            "Addresses Semesters Students",
            "Addresses Student_Enrolment",
            "Addresses Courses Students",
            "Addresses Students Transcripts",
            "Addresses Sections Students"
        ],
        "align_scores": [
            0.9936116337776184,
            8.28628326416947e-05,
            0.9760463833808899,
            0.00011414414620958269,
            0.00022677033848594874,
            6.980416947044432e-05,
            0.0003611649153754115,
            7.046851533232257e-05
        ],
        "align_select": "select Addresses.adr_id, Addresses.line_1, Addresses.line_2",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "How many times at most can a course enrollment result show in different transcripts? Also show the course enrollment id.",
        "gold_select": "select count(*), Transcript_Contents.stu_crs_id",
        "select_candidates": [
            "select count(*), Courses.crs_id",
            "select count(*), Students.stuid",
            "select count(*), Semesters.sem_id",
            "select count(*), Transcript_Contents.stu_crs_id"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "Transcript_Contents",
        "table_candidates": [
            "Student_Enrolment_Courses",
            "Transcripts",
            "Student_Enrolment",
            "Semesters Student_Enrolment",
            "Transcript_Contents",
            "Semesters Student_Enrolment_Courses",
            "Students Student_Enrolment_Courses",
            "Semesters Transcript_Contents"
        ],
        "align_scores": [
            0.46299511194229126,
            0.34566155076026917,
            0.002087836852297187,
            0.003059481270611286,
            0.0014768934343010187,
            0.0029453278984874487,
            0.6308535933494568,
            0.2574864327907562
        ],
        "align_select": "select count(*), Courses.crs_id",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What is the maximum number of times that a course shows up in different transcripts and what is that course's enrollment id?",
        "gold_select": "select count(*), Transcript_Contents.stu_crs_id",
        "select_candidates": [
            "select max(Courses.crs_id), Courses.crs_id",
            "select max(Courses.crs_id), Courses.oth_dtl",
            "select max(Courses.crs_id), Courses.crs_desc",
            "select max(Courses.crs_id), Courses.course_name"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Transcript_Contents",
        "table_candidates": [
            "Courses Student_Enrolment_Courses",
            "Courses Students",
            "Courses Student_Enrolment",
            "Courses Transcript_Contents",
            "Courses Sections",
            "Courses Transcripts",
            "Addresses Courses"
        ],
        "align_scores": [
            0.0001439528859918937,
            0.0007403119234368205,
            0.0002461481199134141,
            0.0009508300572633743,
            0.00011583270679693669,
            0.00019029951363336295,
            0.0003633398737292737,
            0.0008674555574543774
        ],
        "align_select": "select max(Courses.crs_id), Courses.crs_id",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Find the semester when both Master students and Bachelor students got enrolled in.",
        "gold_select": "select distinct Student_Enrolment.semester_id",
        "select_candidates": [
            "select Semesters.semester_name",
            "select Semesters.semester_name, Students.date_first_registered",
            "select Semesters.semester_name, Degree_Programs.degree_smry_name",
            "select Semesters.semester_name, Semesters.sem_desc"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-GROUP BY-HAVING-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Degree_Programs Student_Enrolment",
        "table_candidates": [
            "Degree_Programs Students Student_Enrolment",
            "Degree_Programs Semesters Students Student_Enrolment",
            "Departments Degree_Programs Semesters Students Student_Enrolment",
            "Degree_Programs Sections Semesters Students Student_Enrolment",
            "Degree_Programs Sections Students Student_Enrolment",
            "Degree_Programs Semesters Student_Enrolment",
            "Departments Degree_Programs Semesters Student_Enrolment",
            "Courses Degree_Programs Students Student_Enrolment"
        ],
        "align_scores": [
            0.9899665117263794,
            0.05180245265364647,
            0.00033447108580730855,
            0.0005164453177712858,
            0.0001986639981623739,
            0.0002901384432334453,
            0.0007717619300819933,
            0.0004948564455844462
        ],
        "align_select": "select Semesters.semester_name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "What is the id of the semester that had both Masters and Bachelors students enrolled?",
        "gold_select": "select distinct Student_Enrolment.semester_id",
        "select_candidates": [
            "select Semesters.sem_id",
            "select Semesters.semester_name",
            "select Semesters.sem_id, Students.ca_id",
            "select Semesters.semester_name, Students.stuid"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-GROUP BY-HAVING-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Degree_Programs Student_Enrolment",
        "table_candidates": [
            "Semesters Students Student_Enrolment",
            "Student_Enrolment",
            "Students Student_Enrolment",
            "Degree_Programs Students Student_Enrolment",
            "Sections Students Student_Enrolment",
            "Courses Students Student_Enrolment",
            "Departments Students Student_Enrolment",
            "Semesters Student_Enrolment"
        ],
        "align_scores": [
            0.9937989115715027,
            0.0008995043463073671,
            0.699305534362793,
            0.0003016881528310478,
            0.0003235197509638965,
            0.00011262681073276326,
            0.0008506994927302003,
            0.00016523378144484013
        ],
        "align_select": "select Semesters.sem_id",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "How many different addresses do the students currently live?",
        "gold_select": "select count(distinct Students.ca_id)",
        "select_candidates": [
            "select count(distinct Addresses.other_address_details)",
            "select count(distinct Addresses.other_address_details",
            "select count(distinct Addresses.state_province_county)",
            "select count(distinct Addresses.line_2)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Students",
        "table_candidates": [
            "Addresses Students",
            "Addresses Students Student_Enrolment_Courses",
            "Addresses Students Transcripts",
            "Students Student_Enrolment_Courses",
            "Addresses Students Student_Enrolment"
        ],
        "align_scores": [
            0.7249465584754944,
            0.00012356930528767407,
            0.012206016108393669,
            0.00013547063281293958,
            0.23632806539535522,
            0.0001075633117579855,
            0.0014212839305400848,
            0.00014062043919693679
        ],
        "align_select": "select count(distinct Addresses.other_address_details)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What are the different addresses that have students living there?",
        "gold_select": "select count(distinct Students.ca_id)",
        "select_candidates": [
            "select distinct Addresses.other_address_details",
            "select count(distinct Addresses.other_address_details)",
            "select distinct Addresses.other_address_details, Students.ca_id",
            "select distinct Addresses.state_province_county, Addresses.other_address_details"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Students",
        "table_candidates": [
            "Addresses Students",
            "Addresses Students Student_Enrolment_Courses",
            "Addresses Students Transcripts",
            "Addresses Students Student_Enrolment",
            "Addresses Semesters Students",
            "Students Student_Enrolment_Courses",
            "Departments Students Student_Enrolment_Courses"
        ],
        "align_scores": [
            0.9408681392669678,
            0.005703948438167572,
            0.01482387538999319,
            0.00033737841295078397,
            0.0004946720437146723,
            0.0002175991830881685,
            0.0009476745617575943,
            0.00028187144198454916
        ],
        "align_select": "select distinct Addresses.other_address_details",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "List all the student details in reversed lexicographical order.",
        "gold_select": "select Students.oth_stu_dtl",
        "select_candidates": [
            "select Students.stuid, Students.last_name",
            "select Students.email",
            "select Students.last_name, Students.cell",
            "select t8.c5"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "Students",
        "table_candidates": [
            "Students",
            "Students Student_Enrolment",
            "Students Student_Enrolment_Courses",
            "Semesters Students Student_Enrolment",
            "Courses Students Student_Enrolment",
            "Semesters Students",
            "Courses Students",
            "Degree_Programs Students Student_Enrolment"
        ],
        "align_scores": [
            0.00038939667865633965,
            0.00038939667865633965,
            0.0006164176156744361,
            0.0006164176156744361,
            0.00042422270053066313,
            0.00042422270053066313,
            0.001200490165501833,
            0.001200490165501833
        ],
        "align_select": "select Students.stuid, Students.last_name",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "What other details can you tell me about students in reverse alphabetical order?",
        "gold_select": "select Students.oth_stu_dtl",
        "select_candidates": [
            "select Students.last_name, Students.first_name",
            "select Students.ssn",
            "select Students.middle_name",
            "select Students.email"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "Students",
        "table_candidates": [
            "Students",
            "Students Student_Enrolment",
            "Students Student_Enrolment_Courses",
            "Addresses Students Student_Enrolment",
            "Semesters Students Student_Enrolment_Courses",
            "Addresses Students",
            "Semesters Students"
        ],
        "align_scores": [
            0.0011038670781999826,
            0.0011038670781999826,
            0.024125566706061363,
            0.024125566706061363,
            0.008776291273534298,
            0.008776291273534298,
            0.0012004550080746412,
            0.0012004550080746412
        ],
        "align_select": "select Students.last_name, Students.first_name",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "Describe the section h.",
        "gold_select": "select Sections.sect_desc",
        "select_candidates": [
            "select Departments.department_description",
            "select Sections.sect_desc",
            "select Departments.department_description, Sections.sect_desc",
            "select Sections.section_name"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Sections",
        "table_candidates": [
            "Sections",
            "Departments Sections",
            "Degree_Programs Sections",
            "Addresses Departments Sections",
            "Courses Departments Sections",
            "Courses Sections",
            "Addresses Sections",
            "Degree_Programs Student_Enrolment"
        ],
        "align_scores": [
            0.9963175058364868,
            8.457681542495266e-05,
            0.9962348341941833,
            7.904180529294536e-05,
            0.000241151632508263,
            5.556205360335298e-05,
            0.9927198886871338,
            7.44370263419114e-05
        ],
        "align_select": "select Departments.department_description",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the description for the section named h?",
        "gold_select": "select Sections.sect_desc",
        "select_candidates": [
            "select Departments.department_description",
            "select Sections.sect_desc",
            "select Departments.department_description, Sections.sect_desc",
            "select Departments.oth_dtl"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Sections",
        "table_candidates": [
            "Sections",
            "Departments Sections",
            "Degree_Programs Sections",
            "Addresses Departments Sections",
            "Courses Departments Sections",
            "Courses Sections",
            "Students Student_Enrolment_Courses",
            "Semesters Student_Enrolment"
        ],
        "align_scores": [
            0.9959354400634766,
            7.178088708315045e-05,
            0.9961890578269958,
            7.94658626546152e-05,
            0.00020265068451408297,
            5.59608124603983e-05,
            0.9880071878433228,
            7.298367563635111e-05
        ],
        "align_select": "select Departments.department_description",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the first name of the students who permanently live in the country Haiti or have the cell phone number 09700166582.",
        "gold_select": "select Students.first_name",
        "select_candidates": [
            "select Students.first_name",
            "select Students.first_name, Students.last_name",
            "select distinct Students.first_name",
            "select Students.stuid, Students.first_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Addresses Students",
        "table_candidates": [
            "Addresses Students",
            "Addresses Semesters Students",
            "Addresses Courses Students",
            "Addresses Students Student_Enrolment"
        ],
        "align_scores": [
            0.8337135910987854,
            0.9670388102531433,
            0.00018483759777154773,
            0.00013477924221660942,
            0.06273207813501358,
            0.0009215530008077621,
            0.00021736569760832936,
            0.00012497400166466832
        ],
        "align_select": "select Students.first_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the first names of the students who live in Haiti permanently or have the cell phone number 09700166582?",
        "gold_select": "select Students.first_name",
        "select_candidates": [
            "select Students.first_name",
            "select distinct Students.first_name",
            "select Students.first_name, Students.last_name",
            "select Students.stuid, Students.first_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Addresses Students",
        "table_candidates": [
            "Addresses Students",
            "Addresses Semesters Students",
            "Addresses Courses Students",
            "Addresses Students Student_Enrolment"
        ],
        "align_scores": [
            0.837342381477356,
            0.9902886152267456,
            0.03512663021683693,
            0.0016945266397669911,
            0.00022654082567896694,
            0.00020840582146774977,
            0.00022084101510699838,
            0.00018042133888229728
        ],
        "align_select": "select Students.first_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How is the math course described?",
        "gold_select": "select Courses.crs_desc",
        "select_candidates": [
            "select Courses.crs_desc",
            "select t1.c4",
            "select t1.c5",
            "select Courses.oth_dtl"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Courses",
        "table_candidates": [
            "Courses",
            "Courses Student_Enrolment",
            "Courses Student_Enrolment_Courses"
        ],
        "align_scores": [
            0.9955258965492249,
            8.066715236054733e-05,
            0.0009320364333689213,
            7.81064954935573e-05,
            0.0008313990547321737,
            8.127125329338014e-05,
            0.9713752269744873,
            8.975934179034084e-05
        ],
        "align_select": "select Courses.crs_desc",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the descriptions for all the math courses?",
        "gold_select": "select Courses.crs_desc",
        "select_candidates": [
            "select Courses.crs_desc",
            "select t1.c4",
            "select t1.c5",
            "select Courses.crs_desc-"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Courses",
        "table_candidates": [
            "Courses",
            "Courses Departments",
            "Courses Departments Degree_Programs",
            "Courses Degree_Programs",
            "Courses Students",
            "Courses Sections",
            "Courses Degree_Programs Sections"
        ],
        "align_scores": [
            0.972409725189209,
            0.00015616542077623308,
            0.0012551125837489963,
            0.00015706948761362582,
            0.0010862910421565175,
            0.00017161358846351504,
            0.00771945109590888,
            7.774815458105877e-05
        ],
        "align_select": "select Courses.crs_desc",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the zip code of the address in the city Port Chelsea?",
        "gold_select": "select Addresses.zipcode",
        "select_candidates": [
            "select Addresses.zipcode",
            "select Addresses.zipcode, Addresses.city",
            "select Addresses.zipcode, Addresses.state_province_county",
            "select Addresses.zipcode, Addresses.cntry"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Addresses",
        "table_candidates": [
            "Addresses"
        ],
        "align_scores": [
            0.9839406609535217,
            0.0001019331393763423,
            0.00020385220705065876,
            5.959220288787037e-05,
            0.00023175821115728468,
            6.524693890241906e-05,
            0.00022694942890666425,
            6.011376899550669e-05
        ],
        "align_select": "select Addresses.zipcode",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the zip code for Port Chelsea?",
        "gold_select": "select Addresses.zipcode",
        "select_candidates": [
            "select Addresses.zipcode",
            "select Addresses.zipcode, Addresses.city",
            "select Addresses.zipcode, Addresses.state_province_county",
            "select Addresses.zipcode, Addresses.cntry"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Addresses",
        "table_candidates": [
            "Addresses",
            "Addresses Student_Enrolment"
        ],
        "align_scores": [
            0.9911419153213501,
            0.00016120036889333278,
            0.00016645187861286104,
            5.5997483286773786e-05,
            0.00023954271455295384,
            6.796927482355386e-05,
            0.0001772933464962989,
            6.826273602200672e-05
        ],
        "align_select": "select Addresses.zipcode",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which department offers the most number of degrees? List department name and id.",
        "gold_select": "select Departments.dept_name, Degree_Programs.dept_id",
        "select_candidates": [
            "select Departments.dept_name, Degree_Programs.dept_id",
            "select Departments.dept_name, Departments.department_id",
            "select Departments.dept_name, Degree_Programs.degree_pmg_id",
            "select Departments.dept_name, t03.c1"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-UNION-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Departments Degree_Programs",
        "table_candidates": [
            "Departments Degree_Programs"
        ],
        "align_scores": [
            0.9918866753578186,
            0.00014265408390201628,
            0.9851256608963013,
            0.00013876349839847535,
            0.026927758008241653,
            0.00015632093709427863,
            0.00040690653258934617,
            7.977184577612206e-05
        ],
        "align_select": "select Departments.dept_name, Degree_Programs.dept_id",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the name and id of the department with the most number of degrees?",
        "gold_select": "select Departments.dept_name, Degree_Programs.dept_id",
        "select_candidates": [
            "select Departments.dept_name, Degree_Programs.dept_id",
            "select Departments.dept_name, Departments.department_id",
            "select Departments.dept_name, t03.c1",
            "select Departments.dept_name, Degree_Programs.dept_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Departments Degree_Programs",
        "table_candidates": [
            "Departments Degree_Programs"
        ],
        "align_scores": [
            0.9934046864509583,
            7.802981417626143e-05,
            0.9924192428588867,
            7.144789560697973e-05,
            0.00034327429602853954,
            6.318211671896279e-05,
            0.9934046864509583,
            7.802981417626143e-05
        ],
        "align_select": "select Departments.dept_name, Degree_Programs.dept_id",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "How many departments offer any degree?",
        "gold_select": "select count(distinct Degree_Programs.dept_id)",
        "select_candidates": [
            "select count(distinct Degree_Programs.dept_id)",
            "select count(distinct Degree_Programs.dept_id)",
            "select count(distinct Degree_Programs.dept_id )",
            "select count(distinct Degree_Programs.dept_id), Departments.dept_name"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Degree_Programs",
        "table_candidates": [
            "Degree_Programs",
            "Departments Degree_Programs",
            "Addresses Departments Degree_Programs"
        ],
        "align_scores": [
            0.9763538837432861,
            0.00015649992565158755,
            0.9763538837432861,
            0.00015649992565158755,
            0.8812103867530823,
            0.00016348619828931987,
            0.00029603950679302216,
            7.125153206288815e-05
        ],
        "align_select": "select count(distinct Degree_Programs.dept_id)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "How many different departments offer degrees?",
        "gold_select": "select count(distinct Degree_Programs.dept_id)",
        "select_candidates": [
            "select count(distinct Degree_Programs.dept_id)",
            "select count(distinct Degree_Programs.dept_id)",
            "select count(distinct Degree_Programs.dept_id), Degree_Programs.degree_smry_name",
            "select count(distinct Degree_Programs.dept_id )"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "Degree_Programs",
        "table_candidates": [
            "Degree_Programs",
            "Departments Degree_Programs"
        ],
        "align_scores": [
            0.9947707056999207,
            0.9947707056999207,
            0.9947707056999207,
            0.9947707056999207,
            0.00044143825653009117,
            0.00044143825653009117,
            0.9534288048744202,
            0.9534288048744202
        ],
        "align_select": "select count(distinct Degree_Programs.dept_id)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "How many different degree names are offered?",
        "gold_select": "select count(distinct Degree_Programs.degree_smry_name)",
        "select_candidates": [
            "select count(distinct Degree_Programs.degree_smry_name)",
            "select count(distinct Degree_Programs.degree_smry_name",
            "select count(distinct t3.c6)",
            "select count(distinct t3.c)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "Degree_Programs",
        "table_candidates": [
            "Degree_Programs"
        ],
        "align_scores": [
            0.7469585537910461,
            0.7469585537910461,
            0.016932480037212372,
            0.016932480037212372,
            0.0006718829390592873,
            0.0006718829390592873,
            0.0020460335072129965,
            0.0020460335072129965
        ],
        "align_select": "select count(distinct Degree_Programs.degree_smry_name)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "How many different degrees are offered?",
        "gold_select": "select count(distinct Degree_Programs.degree_smry_name)",
        "select_candidates": [
            "select count(distinct Degree_Programs.degree_smry_name)",
            "select count(distinct Degree_Programs.degree_pmg_id)",
            "select count(distinct Degree_Programs.dept_id)",
            "select count(distinct t3.c6)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "Degree_Programs",
        "table_candidates": [
            "Degree_Programs"
        ],
        "align_scores": [
            0.5669377446174622,
            0.5669377446174622,
            0.04923822730779648,
            0.04923822730779648,
            0.0065006073564291,
            0.0065006073564291,
            0.0007675060187466443,
            0.0007675060187466443
        ],
        "align_select": "select count(distinct Degree_Programs.degree_smry_name)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "How many degrees does the engineering department offer?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(distinct Degree_Programs.degree_smry_name)",
            "select count(distinct Degree_Programs.degree_pmg_id)",
            "select count(distinct Degree_Programs.dept_id)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Departments Degree_Programs",
        "table_candidates": [
            "Departments Degree_Programs",
            "Courses Departments Degree_Programs"
        ],
        "align_scores": [
            0.9851910471916199,
            0.0002429869055049494,
            0.0013812684919685125,
            7.840139733161777e-05,
            0.0005709254182875156,
            7.840528269298375e-05,
            0.0008483996498398483,
            0.00011134709347970784
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many degrees does the engineering department have?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Departments.dept_name",
            "select count(*), Departments.department_id",
            "select count(distinct Degree_Programs.dept_id)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Departments Degree_Programs",
        "table_candidates": [
            "Departments Degree_Programs",
            "Courses Departments Degree_Programs"
        ],
        "align_scores": [
            0.9927553534507751,
            0.0006525854696519673,
            0.0002284308720845729,
            0.0004522471281234175,
            0.000218888686504215,
            0.00022428545344155282,
            0.0007208476890809834,
            9.822015272220597e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names and descriptions of all the sections?",
        "gold_select": "select Sections.sect_name, Sections.sect_desc",
        "select_candidates": [
            "select Sections.sect_name, Sections.sect_desc",
            "select Sections.sect_name, Sections.sect_desc, Sections.sect_id",
            "select sect_Sections.sect_name, Sections.sect_desc",
            "select Sections.sect_name, Sections.sect_desc, Sections.other_dtl"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Sections",
        "table_candidates": [
            "Sections",
            "Departments Sections",
            "Degree_Programs Sections"
        ],
        "align_scores": [
            0.9910879731178284,
            0.0001852377608884126,
            0.0002570076903793961,
            7.770131196593866e-05,
            0.0006289105513133109,
            9.209632116835564e-05,
            0.00033596152206882834,
            6.914226833032444e-05
        ],
        "align_select": "select Sections.sect_name, Sections.sect_desc",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What are the names and descriptions for all the sections?",
        "gold_select": "select Sections.sect_name, Sections.sect_desc",
        "select_candidates": [
            "select Sections.sect_name, Sections.sect_desc",
            "select sect_Sections.sect_name, Sections.sect_desc",
            "select Sections.sect_name, Sections.sect_desc, Sections.sect_id",
            "select Sections.sect_name, Sections.sect_desc, Sections.other_dtl"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Sections",
        "table_candidates": [
            "Sections",
            "Departments Sections",
            "Degree_Programs Sections"
        ],
        "align_scores": [
            0.9922956228256226,
            0.00016745574248488992,
            0.0005879606469534338,
            9.122350456891581e-05,
            0.00025657773949205875,
            7.708102202741429e-05,
            0.00030441529816016555,
            6.936548743396997e-05
        ],
        "align_select": "select Sections.sect_name, Sections.sect_desc",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What are the names and id of courses having at most 2 sections?",
        "gold_select": "select Courses.crs_name, Courses.crs_id",
        "select_candidates": [
            "select Courses.crs_name, Courses.crs_id",
            "select Courses.crs_name, Sections.crs_id",
            "select Courses.crs_name, Sections.sect_id",
            "select Courses.crs_name, Departments.department_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Courses Sections",
        "table_candidates": [
            "Courses Sections",
            "Courses Departments Sections"
        ],
        "align_scores": [
            0.9945003986358643,
            0.00010383499466115609,
            0.02101908065378666,
            9.046274499269202e-05,
            0.002836340805515647,
            0.0001161627660621889,
            0.00033082696609199047,
            9.172165300697088e-05
        ],
        "align_select": "select Courses.crs_name, Courses.crs_id",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the names and ids of every course with less than 2 sections?",
        "gold_select": "select Courses.crs_name, Courses.crs_id",
        "select_candidates": [
            "select Courses.crs_name, Courses.crs_id",
            "select Courses.crs_name, Sections.crs_id",
            "select Courses.crs_name, Sections.sect_id",
            "select Courses.crs_name, Departments.department_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Courses Sections",
        "table_candidates": [
            "Courses Sections",
            "Courses Departments Sections"
        ],
        "align_scores": [
            0.9123533964157104,
            0.0001176469522761181,
            0.007671760395169258,
            0.00010979288344969973,
            0.0014942098641768098,
            0.00014607566117774695,
            0.0002488431055098772,
            0.0001365718198940158
        ],
        "align_select": "select Courses.crs_name, Courses.crs_id",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "List the section_name in reversed lexicographical order.",
        "gold_select": "select Sections.sect_name",
        "select_candidates": [
            "select Sections.sect_name",
            "select Sections.sect_name, Sections.sect_desc",
            "select Sections.crs_id, Sections.sect_name",
            "select Sections.sect_name, Sections.crs_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-WHERE-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Sections",
        "table_candidates": [
            "Sections"
        ],
        "align_scores": [
            0.9958156943321228,
            0.9582713842391968,
            0.00012006937322439626,
            0.00010447779641253874,
            0.00013375490379985422,
            0.00012273015454411507,
            0.00011222778266528621,
            0.0001169876049971208
        ],
        "align_select": "select Sections.sect_name",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "What are the names of the sections in reverse alphabetical order?",
        "gold_select": "select Sections.sect_name",
        "select_candidates": [
            "select Sections.sect_name",
            "select Sections.sect_name, Sections.sect_desc",
            "select Sections.crs_id, Sections.sect_name",
            "select Sections.sect_name (ordnance Sections.sect_desc)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "Sections",
        "table_candidates": [
            "Sections",
            "Departments Sections"
        ],
        "align_scores": [
            0.9953238368034363,
            0.9953238368034363,
            0.0001935303007485345,
            0.0001935303007485345,
            0.00018080313748214394,
            0.00018080313748214394,
            0.0008015850326046348,
            0.0008015850326046348
        ],
        "align_select": "select Sections.sect_name",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "What is the semester which most student registered in? Show both the name and the id.",
        "gold_select": "select Semesters.sem_name, Semesters.sem_id",
        "select_candidates": [
            "select Semesters.sem_name, Semesters.sem_id",
            "select Semesters.sem_name, Students.stuid",
            "select Semesters.sem_name, sem_Semesters.sem_id",
            "select Semesters.sem_name, t5c0"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Semesters Student_Enrolment",
        "table_candidates": [
            "Semesters Students",
            "Semesters Students Student_Enrolment_Courses",
            "Semesters Student_Enrolment_Courses",
            "Semesters Student_Enrolment",
            "Semesters Students Student_Enrolment"
        ],
        "align_scores": [
            0.99269038438797,
            7.684932643314824e-05,
            0.9884395599365234,
            9.803956345422193e-05,
            0.0012164284707978368,
            9.639078052714467e-05,
            0.0004326974740251899,
            8.352980512427166e-05
        ],
        "align_select": "select Semesters.sem_name, Semesters.sem_id",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "For each semester, what is the name and id of the one with the most students registered?",
        "gold_select": "select Semesters.sem_name, Semesters.sem_id",
        "select_candidates": [
            "select Semesters.sem_name, Semesters.sem_id",
            "select Semesters.sem_name, sem_Semesters.sem_id",
            "select Semesters.sem_name, Semesters.sem_id, Students.ca_id",
            "select Semesters.sem_name, Semesters.sem_id, Students.stuid"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Semesters Student_Enrolment",
        "table_candidates": [
            "Semesters Students",
            "Courses Semesters Students",
            "Departments Semesters Students",
            "Semesters Student_Enrolment_Courses",
            "Semesters Student_Enrolment",
            "Semesters Students Student_Enrolment_Courses"
        ],
        "align_scores": [
            0.9934636950492859,
            9.493654215475544e-05,
            0.0030689151026308537,
            0.00011552418436622247,
            0.0003304490528535098,
            7.51577754272148e-05,
            0.0013840477913618088,
            8.16537722130306e-05
        ],
        "align_select": "select Semesters.sem_name, Semesters.sem_id",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the description of the department whose name has the substring the computer?",
        "gold_select": "select Departments.dept_desc",
        "select_candidates": [
            "select Departments.dept_desc",
            "select Departments.dept_name, Departments.dept_desc",
            "select Departments.dept_desc, Departments.oth_dtl",
            "select Departments.dept_desc, Departments.department_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Departments",
        "table_candidates": [
            "Departments",
            "Addresses Courses Departments",
            "Addresses Departments",
            "Courses Departments",
            "Departments Degree_Programs",
            "Departments Degree_Programs Sections"
        ],
        "align_scores": [
            0.9591444134712219,
            0.00010964065586449578,
            0.00020246932399459183,
            6.862491136416793e-05,
            0.0001649719924898818,
            7.506294059567153e-05,
            0.00015352228365372866,
            6.467732600867748e-05
        ],
        "align_select": "select Departments.dept_desc",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the department description for the one whose name has the word computer?",
        "gold_select": "select Departments.dept_desc",
        "select_candidates": [
            "select Departments.dept_desc",
            "select Departments.dept_name, Departments.dept_desc",
            "select Departments.dept_desc, Departments.oth_dtl",
            "select Departments.dept_desc, Departments.dept_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Departments",
        "table_candidates": [
            "Departments",
            "Addresses Courses Departments",
            "Addresses Departments",
            "Departments Degree_Programs",
            "Courses Departments"
        ],
        "align_scores": [
            0.9947039484977722,
            8.869915473042056e-05,
            0.00018783843552228063,
            6.905101326992735e-05,
            0.00014185093459673226,
            6.90446249791421e-05,
            0.00015930512745399028,
            6.048200521036051e-05
        ],
        "align_select": "select Departments.dept_desc",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Who are enrolled in 2 degree programs in one semester? List the first name, middle name and last name and the id.",
        "gold_select": "select Students.first_name, Students.middle_name, Students.last_name, Students.stuid",
        "select_candidates": [
            "select Students.first_name, Students.middle_name, Students.last_name, Students.stuid",
            "select Students.first_name, Students.middle_name, Students.last_name",
            "select Students.first_name, Students.middle_name, Students.last_name and Students.stuid",
            "select Students.stuid, Students.first_name, Students.middle_name, Students.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "Students Student_Enrolment",
        "table_candidates": [
            "Students Student_Enrolment_Courses",
            "Students Student_Enrolment",
            "Students",
            "Degree_Programs Students",
            "Semesters Students",
            "Sections Students"
        ],
        "align_scores": [
            0.28903838992118835,
            0.9718315601348877,
            0.2581307888031006,
            0.8822416067123413,
            0.5122132897377014,
            0.9741025567054749,
            0.025146935135126114,
            0.25571438670158386
        ],
        "align_select": "select Students.first_name, Students.middle_name, Students.last_name and Students.stuid",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the first, middle, and last names, along with the ids, of all students who enrolled in 2 degree programs in one semester?",
        "gold_select": "select Students.first_name, Students.middle_name, Students.last_name, Students.stuid",
        "select_candidates": [
            "select Students.first_name, Students.middle_name, Students.last_name, Students.stuid",
            "select Students.first_name, Students.middle_name, Students.last_name",
            "select Students.first_name, Students.middle_name, Students.last_name, Students.stuid",
            "select Students.first_name, Students.middle_name, Students.last_name plus Students.stuid"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "Students Student_Enrolment",
        "table_candidates": [
            "Degree_Programs Students",
            "Students Student_Enrolment",
            "Students",
            "Students Student_Enrolment_Courses",
            "Semesters Students",
            "Sections Students"
        ],
        "align_scores": [
            0.9093809127807617,
            0.006537233013659716,
            0.5131357908248901,
            0.0011025328421965241,
            0.9093809127807617,
            0.006537233013659716,
            0.9695213437080383,
            0.01087363250553608
        ],
        "align_select": "select Students.first_name, Students.middle_name, Students.last_name, Students.stuid",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "Who is enrolled in a Bachelor degree program? List the first name, middle name, last name.",
        "gold_select": "select distinct Students.first_name, Students.middle_name, Students.last_name",
        "select_candidates": [
            "select Students.first_name, Students.middle_name, Students.last_name",
            "select Students.stuid, Students.first_name, Students.middle_name, Students.last_name",
            "select distinct Students.first_name, Students.middle_name, Students.last_name",
            "select Students.ca_id, Students.middle_name, Students.last_name"
        ],
        "select_labels": [
            0.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Degree_Programs Students Student_Enrolment",
        "table_candidates": [
            "Degree_Programs Students",
            "Addresses Degree_Programs Students",
            "Courses Degree_Programs Students",
            "Departments Degree_Programs Students",
            "Degree_Programs Students Student_Enrolment_Courses",
            "Degree_Programs Students Student_Enrolment"
        ],
        "align_scores": [
            0.986777126789093,
            0.00014054845087230206,
            0.00021438163821585476,
            8.866497955750674e-05,
            0.027531510218977928,
            6.963796477066353e-05,
            0.0003115595900453627,
            9.10566232050769e-05
        ],
        "align_select": "select Students.first_name, Students.middle_name, Students.last_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the first, middle, and last names for everybody enrolled in a Bachelors program?",
        "gold_select": "select distinct Students.first_name, Students.middle_name, Students.last_name",
        "select_candidates": [
            "select Students.first_name, Students.middle_name, Students.last_name",
            "select Students.stuid, Students.first_name, Students.middle_name, Students.last_name",
            "select Students.first_name, Students.middle_name, Students.last_name",
            "select distinct Students.first_name, Students.middle_name, Students.last_name"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Degree_Programs Students Student_Enrolment",
        "table_candidates": [
            "Degree_Programs Students",
            "Departments Degree_Programs Students",
            "Courses Degree_Programs Students",
            "Addresses Degree_Programs Students",
            "Sections Students",
            "Degree_Programs Students Student_Enrolment",
            "Degree_Programs Students Student_Enrolment_Courses"
        ],
        "align_scores": [
            0.9808099865913391,
            0.00011929730681004003,
            0.00018778220692183822,
            7.672512583667412e-05,
            0.9808099865913391,
            0.00011929730681004003,
            0.014467473141849041,
            6.694857438560575e-05
        ],
        "align_select": "select Students.first_name, Students.middle_name, Students.last_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the kind of program which most number of students are enrolled in?",
        "gold_select": "select Degree_Programs.degree_smry_name",
        "select_candidates": [
            "select Degree_Programs.degree_smry_name",
            "select Degree_Programs.dept_id",
            "select Degree_Programs.degree_smry_name, Students.ca_id",
            "select Degree_Programs.degree_smry_name, Students.stuid"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Degree_Programs Student_Enrolment",
        "table_candidates": [
            "Degree_Programs Students",
            "Courses Degree_Programs Students",
            "Departments Degree_Programs Students",
            "Sections Students",
            "Degree_Programs Students Student_Enrolment_Courses",
            "Semesters Students",
            "Students",
            "Degree_Programs Student_Enrolment_Courses"
        ],
        "align_scores": [
            0.6106048822402954,
            0.00011522482964210212,
            0.08700103312730789,
            9.449738718103617e-05,
            0.0004801013274118304,
            7.418765017064288e-05,
            0.0012815977679565549,
            7.393523992504925e-05
        ],
        "align_select": "select Degree_Programs.degree_smry_name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the degree summary name that has the most number of students enrolled?",
        "gold_select": "select Degree_Programs.degree_smry_name",
        "select_candidates": [
            "select Degree_Programs.degree_smry_name",
            "select Degree_Programs.degree_smry_name, Degree_Programs.degree_summary_description",
            "select Degree_Programs.degree_smry_name, Degree_Programs.degree_summary_description, Students.stuid",
            "select Degree_Programs.degree_summary_description"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-UNION-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Degree_Programs Student_Enrolment",
        "table_candidates": [
            "Degree_Programs Students",
            "Departments Degree_Programs Students",
            "Courses Degree_Programs Students",
            "Addresses Degree_Programs Students",
            "Departments Students",
            "Degree_Programs Student_Enrolment_Courses",
            "Degree_Programs Student_Enrolment"
        ],
        "align_scores": [
            0.9436674118041992,
            0.00019369315123185515,
            0.00039581055170856416,
            7.807796646375209e-05,
            0.0004123298858758062,
            7.365923374891281e-05,
            0.9669055938720703,
            0.0001307834027102217
        ],
        "align_select": "select Degree_Programs.degree_smry_name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Find the program which most number of students are enrolled in. List both the id and the summary.",
        "gold_select": "select Degree_Programs.degree_pmg_id, Degree_Programs.degree_smry_name",
        "select_candidates": [
            "select Degree_Programs.degree_pmg_id, Degree_Programs.degree_summary_description",
            "select Degree_Programs.dept_id, Degree_Programs.degree_summary_description",
            "select Degree_Programs.degree_smry_name, Degree_Programs.degree_summary_description",
            "select Degree_Programs.degree_pmg_id, Degree_Programs.degree_smry_name"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Degree_Programs Student_Enrolment",
        "table_candidates": [
            "Degree_Programs Students",
            "Courses Degree_Programs Students",
            "Departments Degree_Programs Students",
            "Degree_Programs Semesters Students",
            "Degree_Programs Students Student_Enrolment_Courses",
            "Degree_Programs Student_Enrolment_Courses"
        ],
        "align_scores": [
            0.9443829655647278,
            9.485363989369944e-05,
            0.09414652734994888,
            9.366896119900048e-05,
            0.00017024356930051,
            7.460772030754015e-05,
            0.03151069954037666,
            0.00010671820200514048
        ],
        "align_select": "select Degree_Programs.degree_pmg_id, Degree_Programs.degree_summary_description",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the program id and the summary of the degree that has the most students enrolled?",
        "gold_select": "select Degree_Programs.degree_pmg_id, Degree_Programs.degree_smry_name",
        "select_candidates": [
            "select Degree_Programs.degree_pmg_id, Degree_Programs.degree_summary_description",
            "select Degree_Programs.dept_id, Degree_Programs.degree_summary_description",
            "select Degree_Programs.degree_smry_name, Degree_Programs.degree_summary_description",
            "select Degree_Programs.degree_pmg_id, Degree_Programs.degree_smry_name"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-UNION-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Degree_Programs Student_Enrolment",
        "table_candidates": [
            "Degree_Programs Students",
            "Departments Degree_Programs Students",
            "Degree_Programs Student_Enrolment_Courses",
            "Degree_Programs Student_Enrolment",
            "Courses Degree_Programs Students",
            "Degree_Programs Semesters Students",
            "Degree_Programs Students Student_Enrolment_Courses",
            "Degree_Programs Semesters"
        ],
        "align_scores": [
            0.9932742118835449,
            0.00013959042553324252,
            0.013750634156167507,
            0.00010662309068720788,
            0.0002097366377711296,
            7.376635767286643e-05,
            0.9650827050209045,
            0.00018100306624546647
        ],
        "align_select": "select Degree_Programs.degree_pmg_id, Degree_Programs.degree_summary_description",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Which student has enrolled for the most times in any program? List the id, first name, middle name, last name, the number of enrollments and student id.",
        "gold_select": "select Students.stuid, Students.first_name, Students.middle_name, Students.last_name, count(*), Students.stuid",
        "select_candidates": [
            "select Students.stuid, Students.first_name, Students.middle_name, Students.last_name, count(*)",
            "select Students.stuid, Students.first_name, Students.middle_name, Students.last_name",
            "select Students.stuid, Students.ca_id, Students.middle_name, Students.last_name, count(*)",
            "select Students.stuid, Students.first_name, Students.middle_name, Students.last_name, count(*)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "Students Student_Enrolment",
        "table_candidates": [
            "Students Student_Enrolment",
            "Students"
        ],
        "align_scores": [
            0.09578730911016464,
            0.09578730911016464,
            0.04428907111287117,
            0.04428907111287117,
            0.0003213274758309126,
            0.0003213274758309126,
            0.09578730911016464,
            0.09578730911016464
        ],
        "align_select": "select Students.stuid, Students.first_name, Students.middle_name, Students.last_name, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the first, middle, and last name, along with the id and number of enrollments, for the student who enrolled the most in any program?",
        "gold_select": "select Students.stuid, Students.first_name, Students.middle_name, Students.last_name, count(*), Students.stuid",
        "select_candidates": [
            "select Students.first_name, Students.middle_name, Students.last_name, Students.stuid, count(*)",
            "select Students.first_name, Students.middle_name, Students.last_name, Students.stuid, count(Students.stuid)",
            "select Students.first_name, Students.middle_name, Students.last_name, Students.ca_id, count(*)",
            "select Students.first_name, Students.middle_name, Students.last_name, Students.stuid, count(s)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-UNION-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Students Student_Enrolment",
        "table_candidates": [
            "Students Student_Enrolment",
            "Students"
        ],
        "align_scores": [
            0.9595895409584045,
            0.0003957879380322993,
            0.49410536885261536,
            0.0001710628712316975,
            0.696304202079773,
            0.0002673591661732644,
            0.07699654251337051,
            0.00019900297047570348
        ],
        "align_select": "select Students.first_name, Students.middle_name, Students.last_name, Students.stuid, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Which semesters do not have any student enrolled? List the semester name.",
        "gold_select": "select Semesters.sem_name",
        "select_candidates": [
            "select Semesters.sem_name",
            "select Semesters.sem_name, Students.ca_id",
            "select Semesters.sem_name, Semesters.sem_desc",
            "select Semesters.sem_name, Students.ca_id3"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Semesters",
        "table_candidates": [
            "Semesters"
        ],
        "align_scores": [
            0.7194136381149292,
            0.001904711127281189,
            0.00029116624500602484,
            0.00013441976625472307,
            0.0004322614404372871,
            0.00022392818937078118,
            0.00028251472394913435,
            0.00014849229773972183
        ],
        "align_select": "select Semesters.sem_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the name of the semester with no students enrolled?",
        "gold_select": "select Semesters.sem_name",
        "select_candidates": [
            "select Semesters.sem_name",
            "select Semesters.sem_name, Students.ca_id3",
            "select Semesters.sem_name, Students.ca_id",
            "select Semesters.sem_name, Semesters.sem_desc"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Semesters",
        "table_candidates": [
            "Semesters Students",
            "Semesters Students Student_Enrolment",
            "Semesters Student_Enrolment",
            "Semesters Student_Enrolment_Courses",
            "Semesters Students Student_Enrolment_Courses",
            "Semesters"
        ],
        "align_scores": [
            0.915947675704956,
            0.9034005403518677,
            0.0002636452263686806,
            0.0003678566718008369,
            0.00026197542320005596,
            0.00031076924642547965,
            0.0003412664227653295,
            0.001824700622819364
        ],
        "align_select": "select Semesters.sem_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are all the course names of the courses which ever have students enrolled in?",
        "gold_select": "select distinct Courses.crs_name",
        "select_candidates": [
            "select Courses.crs_name",
            "select distinct Courses.crs_name",
            "select distinct Courses.crs_name, Courses.crs_desc",
            "select Courses.crs_name, Students.stuid"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Courses Student_Enrolment_Courses",
        "table_candidates": [
            "Courses Students",
            "Addresses Courses Students",
            "Courses"
        ],
        "align_scores": [
            0.05802886560559273,
            0.2508277893066406,
            0.3849372863769531,
            0.10622004419565201,
            0.0015893587842583656,
            0.001525845262221992,
            0.00046223244862630963,
            0.0002214184933109209
        ],
        "align_select": "select distinct Courses.crs_name",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What are the names of all courses that have some students enrolled?",
        "gold_select": "select distinct Courses.crs_name",
        "select_candidates": [
            "select Courses.crs_name",
            "select distinct Courses.crs_name",
            "select Courses.crs_name, Students.stuid",
            "select Courses.crs_name, Students.ca_id3"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Courses Student_Enrolment_Courses",
        "table_candidates": [
            "Courses Students",
            "Courses Students Student_Enrolment",
            "Courses Students Student_Enrolment_Courses",
            "Courses Student_Enrolment_Courses",
            "Courses Student_Enrolment",
            "Addresses Courses Students",
            "Courses Students Transcript_Contents"
        ],
        "align_scores": [
            0.3033795952796936,
            0.0021319370716810226,
            0.7246595025062561,
            0.018600977957248688,
            0.0005043000564910471,
            0.0001768107176758349,
            0.0004425332590471953,
            0.0001600588293513283
        ],
        "align_select": "select distinct Courses.crs_name",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What's the name of the course with most number of enrollments?",
        "gold_select": "select Courses.crs_name",
        "select_candidates": [
            "select Courses.crs_name",
            "select Courses.crs_name, Students.ca_id3",
            "select Courses.crs_name, Students.ca_id",
            "select Courses.crs_name, Sections.sect_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Courses Student_Enrolment_Courses",
        "table_candidates": [
            "Courses Student_Enrolment",
            "Courses Student_Enrolment_Courses",
            "Courses Students",
            "Courses Sections",
            "Courses Transcripts",
            "Courses Transcript_Contents",
            "Courses Semesters"
        ],
        "align_scores": [
            0.9912784695625305,
            8.767857070779428e-05,
            0.0002841815003193915,
            6.984564970480278e-05,
            0.0002549842756707221,
            6.655322067672387e-05,
            0.0004534437321126461,
            7.883435318944976e-05
        ],
        "align_select": "select Courses.crs_name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the name of the course with the most students enrolled?",
        "gold_select": "select Courses.crs_name",
        "select_candidates": [
            "select Courses.crs_name",
            "select Courses.crs_name, Students.ca_id3",
            "select Courses.crs_name, Students.ca_id",
            "select Courses.crs_name, Students.date_left"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Courses Student_Enrolment_Courses",
        "table_candidates": [
            "Courses Students",
            "Courses Students Student_Enrolment",
            "Courses Sections Students",
            "Courses Students Student_Enrolment_Courses",
            "Addresses Courses Students",
            "Courses Student_Enrolment_Courses",
            "Courses Student_Enrolment"
        ],
        "align_scores": [
            0.9909927845001221,
            0.0001040921633830294,
            0.0003645829565357417,
            7.505663961637765e-05,
            0.0003793446230702102,
            7.432515849359334e-05,
            0.00037701992550864816,
            6.038662468199618e-05
        ],
        "align_select": "select Courses.crs_name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Find the last name of the students who currently live in the state of North Carolina but have not registered in any degree program.",
        "gold_select": "select Students.last_name",
        "select_candidates": [
            "select Students.last_name",
            "select Students.last_name, Students.stuid",
            "select Students.last_name, Students.ca_id3",
            "select Students.last_name, Students.date_left"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Addresses Students Student_Enrolment",
        "table_candidates": [
            "Addresses Students",
            "Addresses Degree_Programs Students",
            "Addresses Departments Degree_Programs Students",
            "Addresses Semesters Students",
            "Addresses Courses Students",
            "Addresses Sections Students",
            "Addresses Departments Degree_Programs Sections Students",
            "Addresses Courses Degree_Programs Students"
        ],
        "align_scores": [
            0.7493164539337158,
            0.8573399186134338,
            0.0005211512325331569,
            0.0004966732230968773,
            0.00032076917705126107,
            0.00029264064505696297,
            0.0002818335487972945,
            0.00025999275385402143
        ],
        "align_select": "select Students.last_name",
        "align_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM"
    },
    {
        "question": "What are the last name of the students who live in North Carolina but have not registered in any degree programs?",
        "gold_select": "select Students.last_name",
        "select_candidates": [
            "select Students.last_name",
            "select Students.last_name, Students.ca_id3",
            "select Students.last_name, Students.date_left",
            "select Students.last_name, Students.ssn"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Addresses Students Student_Enrolment",
        "table_candidates": [
            "Addresses Degree_Programs Students",
            "Addresses Departments Degree_Programs Students",
            "Addresses Courses Degree_Programs Students",
            "Addresses Degree_Programs Sections Students",
            "Addresses Courses Students",
            "Addresses Semesters Students",
            "Addresses Students",
            "Addresses Sections Students"
        ],
        "align_scores": [
            0.7939284443855286,
            0.893947184085846,
            0.0002494091459084302,
            0.00024056760594248772,
            0.0002123776648659259,
            0.0001987295545404777,
            0.00045751978177577257,
            0.0004085684195160866
        ],
        "align_select": "select Students.last_name",
        "align_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM"
    },
    {
        "question": "What is the phone number of the man with the first name Timmothy and the last name Ward?",
        "gold_select": "select Students.cell",
        "select_candidates": [
            "select Students.cell",
            "select Students.cell, Students.email",
            "select Students.cell, Students.ssn",
            "select Students.cell, Students.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Students",
        "table_candidates": [
            "Students",
            "Addresses Students",
            "Degree_Programs Students",
            "Semesters Students",
            "Courses Students",
            "Sections Students",
            "Students Student_Enrolment",
            "Departments Students"
        ],
        "align_scores": [
            0.4738241732120514,
            8.500763215124607e-05,
            0.00019481184426695108,
            6.965576176298782e-05,
            0.0002486825396772474,
            6.717316136928275e-05,
            0.0001865524100139737,
            7.065760291879997e-05
        ],
        "align_select": "select Students.cell",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the mobile phone number of the student named Timmothy Ward?",
        "gold_select": "select Students.cell",
        "select_candidates": [
            "select Students.cell",
            "select Students.cell, Students.email",
            "select Students.cell, Students.ssn",
            "select Students.ca_id, Students.pa_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Students",
        "table_candidates": [
            "Students",
            "Addresses Students",
            "Addresses Courses Students",
            "Semesters Students",
            "Courses Students",
            "Degree_Programs Students",
            "Departments Students"
        ],
        "align_scores": [
            0.9767071008682251,
            8.081336272880435e-05,
            0.00017194902466144413,
            5.5759614042472094e-05,
            0.00022044758952688426,
            6.411219510482624e-05,
            0.0003404935996513814,
            8.958283433457837e-05
        ],
        "align_select": "select Students.cell",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Whose permanent address is different from his or her current address? List his or her first name.",
        "gold_select": "select Students.first_name",
        "select_candidates": [
            "select distinct Students.first_name",
            "select Students.first_name",
            "select Students.stuid, Students.first_name",
            "select distinct Students.first_name, Students.last_name"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Students",
        "table_candidates": [
            "Addresses Students",
            "Addresses Students Student_Enrolment",
            "Addresses Students Student_Enrolment_Courses",
            "Addresses Semesters Students",
            "Addresses Sections Students",
            "Addresses Transcripts",
            "Addresses Student_Enrolment_Courses",
            "Addresses Courses"
        ],
        "align_scores": [
            0.03285570815205574,
            0.00017483266128692776,
            0.6903728246688843,
            0.0002553312515374273,
            0.00022185085981618613,
            0.000105110346339643,
            0.0006135323783382773,
            7.789540541125461e-05
        ],
        "align_select": "select Students.first_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the first name of the student whose permanent address is different from his or her current one?",
        "gold_select": "select Students.first_name",
        "select_candidates": [
            "select Students.first_name",
            "select distinct Students.first_name",
            "select Students.stuid, Students.first_name",
            "select Students.first_name, Students.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Students",
        "table_candidates": [
            "Addresses Students",
            "Addresses Students Student_Enrolment",
            "Addresses Students Student_Enrolment_Courses",
            "Addresses Semesters Students",
            "Addresses Courses Students"
        ],
        "align_scores": [
            0.7999458312988281,
            0.00018232017464470118,
            0.027247946709394455,
            0.0003597263421397656,
            0.0002122940495610237,
            7.359927258221433e-05,
            0.00016462503117509186,
            7.645606820005924e-05
        ],
        "align_select": "select Students.first_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which address holds the most number of students currently? List the address id and all lines.",
        "gold_select": "select Addresses.adr_id, Addresses.line_1, Addresses.line_2",
        "select_candidates": [
            "select Addresses.adr_id, Addresses.line_1, Addresses.line_2",
            "select Addresses.adr_id, Addresses.line_1, Addresses.line_3",
            "select Addresses.adr_id, Addresses.line_1",
            "select Addresses.adr_id, Addresses.line_1, Addresses.line_2, Addresses.line_3"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-UNION-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Addresses Students",
        "table_candidates": [
            "Addresses Students"
        ],
        "align_scores": [
            0.9773598313331604,
            0.0001180723265861161,
            0.1464536041021347,
            0.0001093487226171419,
            0.12243764847517014,
            0.00014992615615483373,
            0.9857978224754333,
            0.00012491419329307973
        ],
        "align_select": "select Addresses.adr_id, Addresses.line_1, Addresses.line_2",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the id, line 1, and line 2 of the address with the most students?",
        "gold_select": "select Addresses.adr_id, Addresses.line_1, Addresses.line_2",
        "select_candidates": [
            "select Addresses.adr_id, Addresses.line_1, Addresses.line_2",
            "select Students.ca_id, Addresses.line_1, Addresses.line_2",
            "select Students.stuid, Addresses.line_1, Addresses.line_2",
            "select student_Addresses.adr_id, Addresses.line_1, Addresses.line_2"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Addresses Students",
        "table_candidates": [
            "Addresses Students",
            "Addresses Courses Departments Students",
            "Addresses Courses Departments Degree_Programs Students"
        ],
        "align_scores": [
            0.9936116337776184,
            8.28628326416947e-05,
            0.550898015499115,
            8.396449266001582e-05,
            0.9779226779937744,
            8.55498801684007e-05,
            0.9760463833808899,
            0.00011414414620958269
        ],
        "align_select": "select Addresses.adr_id, Addresses.line_1, Addresses.line_2",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "When is the first transcript released? List the date and details.",
        "gold_select": "select Transcripts.transcript_date, Transcripts.oth_dtl",
        "select_candidates": [
            "select t12.c5, t12.c6",
            "select t13.c5, t13.c6",
            "select t8.c5, t8.c6",
            "select t1.c5, t1.c6"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Transcripts",
        "table_candidates": [
            "Transcripts",
            "Student_Enrolment_Courses",
            "Courses",
            "Courses Student_Enrolment_Courses",
            "Courses Student_Enrolment",
            "Semesters Student_Enrolment",
            "Transcript_Contents",
            "Student_Enrolment"
        ],
        "align_scores": [
            0.003432188183069229,
            6.500201561721042e-05,
            0.003920059651136398,
            6.355231016641483e-05,
            0.0027010105550289154,
            6.559818575624377e-05,
            0.0008275230065919459,
            6.621246575377882e-05
        ],
        "align_select": "select t12.c5, t12.c6",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What is the earliest date of a transcript release, and what details can you tell me?",
        "gold_select": "select Transcripts.transcript_date, Transcripts.oth_dtl",
        "select_candidates": [
            "select t13.c5, t13.c6",
            "select t12.c5, t12.c6",
            "select t8.c5, t8.c6",
            "select t14.c5, t14.c6"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Transcripts",
        "table_candidates": [
            "Transcripts",
            "Transcript_Contents",
            "Degree_Programs Transcripts",
            "Degree_Programs"
        ],
        "align_scores": [
            0.007361322641372681,
            5.832986062159762e-05,
            0.006982778199017048,
            5.8834990340983495e-05,
            0.0048663136549293995,
            5.8931236708303913e-05,
            0.005738364066928625,
            5.916339432587847e-05
        ],
        "align_select": "select t13.c5, t13.c6",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "How many times at most can a course enrollment result show in different transcripts? Also show the course enrollment id.",
        "gold_select": "select count(*), Transcript_Contents.stu_crs_id",
        "select_candidates": [
            "select count(*), Students.stuid",
            "select count(*), Students.ca_id",
            "select count(distinct Student_Enrolment_Courses.stu_crs_id), Student_Enrolment_Courses.stu_crs_id",
            "select count(distinct Student_Enrolment_Courses.stu_crs_id), Student_Enrolment_Courses.course_id"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "Transcript_Contents",
        "table_candidates": [
            "Student_Enrolment",
            "Student_Enrolment_Courses",
            "Students Student_Enrolment_Courses",
            "Transcripts",
            "Semesters Student_Enrolment",
            "Semesters Student_Enrolment_Courses",
            "Degree_Programs Students",
            "Semesters Students"
        ],
        "align_scores": [
            0.002087836852297187,
            0.003059481270611286,
            0.0009614125010557473,
            0.0021630371920764446,
            0.001219404162839055,
            8.441390673397109e-05,
            0.0037862847093492746,
            0.00015372911002486944
        ],
        "align_select": "select count(*), Students.stuid",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What is the maximum number of times that a course shows up in different transcripts and what is that course's enrollment id?",
        "gold_select": "select count(*), Transcript_Contents.stu_crs_id",
        "select_candidates": [
            "select max(Transcript_Contents.stu_crs_id), Transcript_Contents.stu_crs_id",
            "select max(t13.c0), t13.c0",
            "select max(Student_Enrolment_Courses.stu_crs_id), Courses.crs_id",
            "select max(Semesters.sem_id), Semesters.sem_id"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Transcript_Contents",
        "table_candidates": [
            "Courses Student_Enrolment_Courses",
            "Courses Student_Enrolment",
            "Courses Students",
            "Courses Transcript_Contents",
            "Degree_Programs Students",
            "Departments Student_Enrolment_Courses",
            "Degree_Programs Student_Enrolment_Courses"
        ],
        "align_scores": [
            0.0001381801557727158,
            0.0004896659520454705,
            9.37093427637592e-05,
            0.0003405585011932999,
            0.00041618250543251634,
            0.009393765591084957,
            0.00011533310316735879,
            0.0006507879588752985
        ],
        "align_select": "select max(Transcript_Contents.stu_crs_id), Transcript_Contents.stu_crs_id",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Find the semester when both Master students and Bachelor students got enrolled in.",
        "gold_select": "select distinct Student_Enrolment.sem_id",
        "select_candidates": [
            "select Semesters.sem_name",
            "select Semesters.sem_name, Students.date_first_registered",
            "select Semesters.sem_name, Students.ca_id3",
            "select Semesters.sem_name, Degree_Programs.degree_smry_name"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-GROUP BY-HAVING-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Degree_Programs Student_Enrolment",
        "table_candidates": [
            "Degree_Programs Semesters Students",
            "Degree_Programs Students",
            "Departments Degree_Programs Semesters Students",
            "Courses Degree_Programs Semesters Students",
            "Addresses Degree_Programs Semesters Students",
            "Degree_Programs Sections Students",
            "Degree_Programs Sections Semesters Students"
        ],
        "align_scores": [
            0.9224002957344055,
            0.13964524865150452,
            0.0005891307373531163,
            0.001512486138381064,
            0.00034157937625423074,
            0.0008478771196678281,
            0.0002467315352987498,
            0.0004458454786799848
        ],
        "align_select": "select Semesters.sem_name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "What is the id of the semester that had both Masters and Bachelors students enrolled?",
        "gold_select": "select distinct Student_Enrolment.sem_id",
        "select_candidates": [
            "select Semesters.sem_id",
            "select Semesters.sem_name",
            "select Students.ca_id",
            "select Students.stuid"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-GROUP BY-HAVING-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Degree_Programs Student_Enrolment",
        "table_candidates": [
            "Students",
            "Semesters Students",
            "Degree_Programs Students",
            "Sections Students",
            "Students Student_Enrolment_Courses",
            "Courses Students",
            "Student_Enrolment_Courses"
        ],
        "align_scores": [
            0.9937989115715027,
            0.0008995043463073671,
            0.9126336574554443,
            0.0004944700049236417,
            0.25533998012542725,
            0.0002875369682442397,
            0.9807742238044739,
            0.000819654087536037
        ],
        "align_select": "select Semesters.sem_id",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "How many different addresses do the students currently live?",
        "gold_select": "select count(distinct Students.ca_id)",
        "select_candidates": [
            "select count(distinct Addresses.adr_id)",
            "select count(distinct Addresses.line_2)",
            "select count(distinct Addresses.line_1)",
            "select count(distinct Addresses.city)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Students",
        "table_candidates": [
            "Addresses Students Student_Enrolment",
            "Addresses Students",
            "Addresses Students Student_Enrolment_Courses",
            "Courses Students Student_Enrolment",
            "Departments Students Student_Enrolment",
            "Degree_Programs Students Student_Enrolment"
        ],
        "align_scores": [
            0.4204637408256531,
            0.000154105422552675,
            0.0014212839305400848,
            0.00014062043919693679,
            0.0023112150374799967,
            0.00014796879258938134,
            0.0005671129329130054,
            0.00010091165313497186
        ],
        "align_select": "select count(distinct Addresses.adr_id)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What are the different addresses that have students living there?",
        "gold_select": "select count(distinct Students.ca_id)",
        "select_candidates": [
            "select distinct Addresses.adr_id",
            "select distinct Addresses.line_1, Addresses.line_2",
            "select distinct Addresses.line_1",
            "select distinct Addresses.line_1, Addresses.line_3"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Students",
        "table_candidates": [
            "Addresses Students Student_Enrolment",
            "Addresses Students",
            "Addresses Semesters Students Student_Enrolment",
            "Addresses Courses Students Student_Enrolment",
            "Addresses Student_Enrolment",
            "Addresses Students Student_Enrolment_Courses",
            "Courses Students Student_Enrolment"
        ],
        "align_scores": [
            0.5676317811012268,
            0.11266438663005829,
            0.4760448634624481,
            0.002861098386347294,
            0.3320234715938568,
            0.0072839935310184956,
            0.20920270681381226,
            0.0021617726888507605
        ],
        "align_select": "select distinct Addresses.adr_id",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "List all the student details in reversed lexicographical order.",
        "gold_select": "select Students.oth_stu_dtl",
        "select_candidates": [
            "select Students.stuid, Students.last_name",
            "select Students.ca_id, Students.last_name",
            "select Students.last_name, Students.cell",
            "select Students.stuid, Students.middle_name"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-WHERE-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Students",
        "table_candidates": [
            "Students",
            "Students Student_Enrolment",
            "Semesters Students Student_Enrolment",
            "Courses Students Student_Enrolment",
            "Semesters Students",
            "Courses Students",
            "Addresses Students Student_Enrolment",
            "Sections Students Student_Enrolment"
        ],
        "align_scores": [
            0.00038939667865633965,
            0.00019902079657185823,
            0.00030599033925682306,
            0.00017338120960630476,
            0.00042422270053066313,
            0.0001752564567141235,
            0.0003795681695919484,
            0.00018802584963850677
        ],
        "align_select": "select Students.stuid, Students.last_name",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "What other details can you tell me about students in reverse alphabetical order?",
        "gold_select": "select Students.oth_stu_dtl",
        "select_candidates": [
            "select *",
            "select Students.ca_id3, Students.ca_id4",
            "select Students.last_name, Students.first_name",
            "select Students.last_name, Students.cell"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Students",
        "table_candidates": [
            "Students",
            "Students Student_Enrolment",
            "Students Student_Enrolment_Courses",
            "Semesters Students"
        ],
        "align_scores": [
            0.9839914441108704,
            0.00028148663113825023,
            0.0033484192099422216,
            0.00015565252397209406,
            0.0011038670781999826,
            0.00015433746739290655,
            0.0002484126598574221,
            0.00027335184859111905
        ],
        "align_select": "select *",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "Describe the section h.",
        "gold_select": "select Sections.sect_desc",
        "select_candidates": [
            "select Sections.sect_name",
            "select Sections.sect_name, Sections.sect_desc",
            "select Sections.crs_id, Sections.sect_name",
            "select Sections.crs_id, Sections.sect_desc"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Sections",
        "table_candidates": [
            "Sections",
            "Degree_Programs Sections",
            "Departments Sections",
            "Courses Sections",
            "Addresses Sections",
            "Sections Transcripts",
            "Sections Student_Enrolment_Courses",
            "Sections Student_Enrolment"
        ],
        "align_scores": [
            0.9874743223190308,
            7.678017573198304e-05,
            0.00017271938850171864,
            6.249945727176964e-05,
            0.00014660815941169858,
            5.9267240430926904e-05,
            0.00013684388250112534,
            5.9255369706079364e-05
        ],
        "align_select": "select Sections.sect_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the description for the section named h?",
        "gold_select": "select Sections.sect_desc",
        "select_candidates": [
            "select Sections.sect_desc",
            "select Sections.sect_desc, Sections.sect_name",
            "select Sections.crs_id, Sections.sect_desc",
            "select sect_Sections.sect_desc"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Sections",
        "table_candidates": [
            "Sections",
            "Departments Sections",
            "Degree_Programs Sections",
            "Addresses Courses Sections",
            "Addresses Courses Departments Sections",
            "Addresses Courses Degree_Programs Sections",
            "Courses Sections",
            "Addresses Sections"
        ],
        "align_scores": [
            0.9961890578269958,
            7.94658626546152e-05,
            0.0001343926996923983,
            6.055748963262886e-05,
            0.0001458981860196218,
            5.923265416640788e-05,
            0.0017949952743947506,
            6.635612953687087e-05
        ],
        "align_select": "select Sections.sect_desc",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the first name of the students who permanently live in the country Haiti or have the cell phone number 09700166582.",
        "gold_select": "select Students.first_name",
        "select_candidates": [
            "select Students.first_name",
            "select distinct Students.first_name",
            "select Students.first_name, Students.last_name",
            "select Students.stuid, Students.first_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Addresses Students",
        "table_candidates": [
            "Addresses Students",
            "Addresses Semesters Students",
            "Addresses Courses Students",
            "Addresses Students Student_Enrolment"
        ],
        "align_scores": [
            0.8337135910987854,
            0.9670388102531433,
            0.06273207813501358,
            0.0009215530008077621,
            0.00018483759777154773,
            0.00013477924221660942,
            0.00021736569760832936,
            0.00012497400166466832
        ],
        "align_select": "select Students.first_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the first names of the students who live in Haiti permanently or have the cell phone number 09700166582?",
        "gold_select": "select Students.first_name",
        "select_candidates": [
            "select Students.first_name",
            "select distinct Students.first_name",
            "select Students.first_name, Students.last_name",
            "select Students.stuid, Students.first_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Addresses Students",
        "table_candidates": [
            "Addresses Students",
            "Addresses Semesters Students",
            "Addresses Courses Students",
            "Addresses Students Student_Enrolment"
        ],
        "align_scores": [
            0.837342381477356,
            0.9902886152267456,
            0.03512663021683693,
            0.0016945266397669911,
            0.00022654082567896694,
            0.00020840582146774977,
            0.00022084101510699838,
            0.00018042133888229728
        ],
        "align_select": "select Students.first_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which department offers the most number of degrees? List department name and id.",
        "gold_select": "select Departments.department_name, Degree_Programs.dept_id",
        "select_candidates": [
            "select Departments.department_name, Degree_Programs.dept_id",
            "select Departments.department_name, Departments.dept_id",
            "select Departments.department_name, Degree_Programs.degree_pmg_id",
            "select Departments.department_name, t03.c1"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-UNION-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Departments Degree_Programs",
        "table_candidates": [
            "Departments Degree_Programs"
        ],
        "align_scores": [
            0.989300012588501,
            0.00015387401799671352,
            0.9871485829353333,
            0.00013789701915811747,
            0.011763349175453186,
            0.00014646926138084382,
            0.0003632967418525368,
            7.857399759814143e-05
        ],
        "align_select": "select Departments.department_name, Degree_Programs.dept_id",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the name and id of the department with the most number of degrees?",
        "gold_select": "select Departments.department_name, Degree_Programs.dept_id",
        "select_candidates": [
            "select Departments.department_name, Degree_Programs.dept_id",
            "select Departments.department_name, Departments.dept_id",
            "select Departments.department_name, t03.c1",
            "select Departments.department_name, Degree_Programs.dept_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Departments Degree_Programs",
        "table_candidates": [
            "Departments Degree_Programs",
            "Addresses Departments Degree_Programs",
            "Courses Degree_Programs"
        ],
        "align_scores": [
            0.9915696978569031,
            8.266812073998153e-05,
            0.9925103187561035,
            7.217474194476381e-05,
            0.00032264008768834174,
            6.236479384824634e-05,
            0.9915696978569031,
            8.266812073998153e-05
        ],
        "align_select": "select Departments.department_name, Degree_Programs.dept_id",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "How many departments offer any degree?",
        "gold_select": "select count(distinct Degree_Programs.dept_id)",
        "select_candidates": [
            "select count(distinct Degree_Programs.dept_id)",
            "select count(distinct Degree_Programs.dept_id)",
            "select count(distinct Degree_Programs.dept_id )",
            "select count(distinct t3, Degree_Programs.dept_id)"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Degree_Programs",
        "table_candidates": [
            "Degree_Programs",
            "Departments Degree_Programs",
            "Addresses Departments Degree_Programs"
        ],
        "align_scores": [
            0.9763538837432861,
            0.00015649992565158755,
            0.9763538837432861,
            0.00015649992565158755,
            0.8812103867530823,
            0.00016348619828931987,
            0.000997859868220985,
            9.139588655671105e-05
        ],
        "align_select": "select count(distinct Degree_Programs.dept_id)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "How many different departments offer degrees?",
        "gold_select": "select count(distinct Degree_Programs.dept_id)",
        "select_candidates": [
            "select count(distinct Degree_Programs.dept_id)",
            "select count(distinct Degree_Programs.dept_id)",
            "select count(distinct Degree_Programs.dept_id), Degree_Programs.degree_smry_name",
            "select count(distinct Degree_Programs.dept_id )"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "Degree_Programs",
        "table_candidates": [
            "Degree_Programs",
            "Departments Degree_Programs"
        ],
        "align_scores": [
            0.9947707056999207,
            0.9947707056999207,
            0.9947707056999207,
            0.9947707056999207,
            0.00044143825653009117,
            0.00044143825653009117,
            0.9534288048744202,
            0.9534288048744202
        ],
        "align_select": "select count(distinct Degree_Programs.dept_id)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "How many different degree names are offered?",
        "gold_select": "select count(distinct Degree_Programs.degree_smry_name)",
        "select_candidates": [
            "select count(distinct Degree_Programs.degree_smry_name)",
            "select count(distinct Degree_Programs.degree_smry_name",
            "select count(distinct t3.c6)",
            "select count(distinct t3.c)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "Degree_Programs",
        "table_candidates": [
            "Degree_Programs"
        ],
        "align_scores": [
            0.7469585537910461,
            0.7469585537910461,
            0.016932480037212372,
            0.016932480037212372,
            0.0006718829390592873,
            0.0006718829390592873,
            0.0020460335072129965,
            0.0020460335072129965
        ],
        "align_select": "select count(distinct Degree_Programs.degree_smry_name)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "How many different degrees are offered?",
        "gold_select": "select count(distinct Degree_Programs.degree_smry_name)",
        "select_candidates": [
            "select count(distinct Degree_Programs.degree_smry_name)",
            "select count(distinct Degree_Programs.degree_pmg_id)",
            "select count(distinct Degree_Programs.dept_id)",
            "select count(distinct t3.c6)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "Degree_Programs",
        "table_candidates": [
            "Degree_Programs"
        ],
        "align_scores": [
            0.5669377446174622,
            0.5669377446174622,
            0.04923822730779648,
            0.04923822730779648,
            0.0065006073564291,
            0.0065006073564291,
            0.0007675060187466443,
            0.0007675060187466443
        ],
        "align_select": "select count(distinct Degree_Programs.degree_smry_name)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "How many degrees does the engineering department offer?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(distinct Degree_Programs.degree_pmg_id)",
            "select count(distinct Degree_Programs.degree_smry_name)",
            "select count(distinct Degree_Programs.dept_id)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Departments Degree_Programs",
        "table_candidates": [
            "Departments Degree_Programs",
            "Courses Departments Degree_Programs",
            "Addresses Departments Degree_Programs"
        ],
        "align_scores": [
            0.9851910471916199,
            0.00030581100145354867,
            0.0005709254182875156,
            7.783777255099267e-05,
            0.0013812684919685125,
            7.682353316340595e-05,
            0.0008483996498398483,
            0.00010765278420876712
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many degrees does the engineering department have?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Departments.dept_id",
            "select count(*), Departments.department_name",
            "select count(distinct Degree_Programs.degree_pmg_id)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Departments Degree_Programs",
        "table_candidates": [
            "Departments Degree_Programs",
            "Courses Departments Degree_Programs",
            "Degree_Programs Departments Degree_Programs",
            "Degree_Programs Departments Student_Enrolment",
            "Addresses Departments Degree_Programs",
            "Departments Degree_Programs Sections",
            "Degree_Programs Departments Transcripts"
        ],
        "align_scores": [
            0.9927553534507751,
            0.0006525854696519673,
            0.00021773781918454915,
            0.00031940359622240067,
            0.00019344138854648918,
            0.0004833164275623858,
            0.00041897076880559325,
            8.27432086225599e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names and descriptions of all the sections?",
        "gold_select": "select Sections.section_name, Sections.sect_desc",
        "select_candidates": [
            "select Sections.section_name, Sections.sect_desc",
            "select Sections.section_name, Sections.sect_desc, Sections.other_dtl",
            "select Sections.section_name, sect_Sections.sect_desc",
            "select Sections.section_name, Sections.sect_desc, Sections.section_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Sections",
        "table_candidates": [
            "Sections",
            "Courses Sections",
            "Addresses Courses Sections",
            "Departments Sections",
            "Courses Departments Sections",
            "Degree_Programs Sections"
        ],
        "align_scores": [
            0.9895166754722595,
            0.00018299472867511213,
            0.00034055591095238924,
            7.281169382622465e-05,
            0.0008641206077300012,
            0.00013273756485432386,
            0.00026005375548265874,
            7.935076428111643e-05
        ],
        "align_select": "select Sections.section_name, Sections.sect_desc",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What are the names and descriptions for all the sections?",
        "gold_select": "select Sections.section_name, Sections.sect_desc",
        "select_candidates": [
            "select Sections.section_name, Sections.sect_desc",
            "select Sections.section_name, Sections.sect_desc, Sections.other_dtl",
            "select Sections.section_name, Sections.sect_desc, Sections.section_id",
            "select Sections.section_name, sect_Sections.sect_desc"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Sections",
        "table_candidates": [
            "Courses Sections",
            "Sections",
            "Courses Departments Sections",
            "Addresses Courses Sections",
            "Departments Sections",
            "Degree_Programs Sections"
        ],
        "align_scores": [
            0.9906795620918274,
            0.00017071237380150706,
            0.00030646007508039474,
            7.330717926379293e-05,
            0.00026106281438842416,
            7.860674668336287e-05,
            0.0008255571592599154,
            0.0001339442969765514
        ],
        "align_select": "select Sections.section_name, Sections.sect_desc",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What are the names and id of courses having at most 2 sections?",
        "gold_select": "select Courses.course_name, Courses.course_id",
        "select_candidates": [
            "select Courses.course_name, Courses.course_id",
            "select Courses.course_name, Sections.section_id",
            "select Courses.course_name, Departments.dept_id",
            "select Courses.course_name, Addresses.adr_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Courses Sections",
        "table_candidates": [
            "Courses Sections",
            "Courses Departments Sections"
        ],
        "align_scores": [
            0.9954016208648682,
            9.882877202471718e-05,
            0.0014302070485427976,
            7.769982767058536e-05,
            0.0007698804838582873,
            0.00010288546036463231,
            0.027708595618605614,
            0.00010962852684315294
        ],
        "align_select": "select Courses.course_name, Courses.course_id",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the names and ids of every course with less than 2 sections?",
        "gold_select": "select Courses.course_name, Courses.course_id",
        "select_candidates": [
            "select Courses.course_name, Courses.course_id",
            "select Courses.course_name, Sections.section_id",
            "select Courses.course_name, Addresses.adr_id",
            "select Courses.course_name, Sections.crs_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Courses Sections",
        "table_candidates": [
            "Courses Sections",
            "Courses Departments Sections",
            "Courses Degree_Programs Sections"
        ],
        "align_scores": [
            0.9871925115585327,
            0.00010415927681606263,
            0.0009976641740649939,
            0.00010564413241809234,
            0.007614371832460165,
            0.0001722953311400488,
            0.26277175545692444,
            0.0001409848191542551
        ],
        "align_select": "select Courses.course_name, Courses.course_id",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What is the semester which most student registered in? Show both the name and the id.",
        "gold_select": "select Semesters.sem_name, Semesters.sem_id",
        "select_candidates": [
            "select Semesters.sem_name, Semesters.sem_id",
            "select Semesters.sem_name, Students.stuid",
            "select Semesters.sem_name, t5c0",
            "select Semesters.sem_name, sem_Semesters.sem_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Semesters Student_Enrolment",
        "table_candidates": [
            "Semesters Students",
            "Semesters Students Student_Enrolment_Courses",
            "Semesters Student_Enrolment_Courses",
            "Semesters Students Student_Enrolment",
            "Semesters Student_Enrolment",
            "Semesters Transcripts"
        ],
        "align_scores": [
            0.99269038438797,
            7.684932643314824e-05,
            0.9884395599365234,
            9.803956345422193e-05,
            0.0004326974740251899,
            8.352980512427166e-05,
            0.0012164284707978368,
            9.639078052714467e-05
        ],
        "align_select": "select Semesters.sem_name, Semesters.sem_id",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "For each semester, what is the name and id of the one with the most students registered?",
        "gold_select": "select Semesters.sem_name, Semesters.sem_id",
        "select_candidates": [
            "select Semesters.sem_name, Semesters.sem_id",
            "select Semesters.sem_name, sem_Semesters.sem_id",
            "select Semesters.sem_name, Semesters.sem_id, Students.ca_id",
            "select Semesters.sem_name, Semesters.sem_id, Students.stuid"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Semesters Student_Enrolment",
        "table_candidates": [
            "Semesters Students",
            "Semesters Student_Enrolment_Courses",
            "Courses Semesters Students",
            "Semesters Student_Enrolment",
            "Semesters Students Student_Enrolment_Courses"
        ],
        "align_scores": [
            0.9934636950492859,
            9.493654215475544e-05,
            0.0030689151026308537,
            0.00011552418436622247,
            0.0003304490528535098,
            7.51577754272148e-05,
            0.0013840477913618088,
            8.16537722130306e-05
        ],
        "align_select": "select Semesters.sem_name, Semesters.sem_id",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the description of the department whose name has the substring the computer?",
        "gold_select": "select Departments.dept_desc",
        "select_candidates": [
            "select Departments.dept_desc",
            "select Departments.department_name, Departments.dept_desc",
            "select Departments.dept_desc, Departments.oth_dtl",
            "select Departments.dept_desc, Departments.department_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Departments",
        "table_candidates": [
            "Departments",
            "Addresses Courses Departments",
            "Courses Departments",
            "Addresses Departments"
        ],
        "align_scores": [
            0.9591444134712219,
            0.00010964065586449578,
            0.0002356625918764621,
            6.943300104467198e-05,
            0.0001649719924898818,
            7.506294059567153e-05,
            0.00018788913439493626,
            6.173637666506693e-05
        ],
        "align_select": "select Departments.dept_desc",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the department description for the one whose name has the word computer?",
        "gold_select": "select Departments.dept_desc",
        "select_candidates": [
            "select Departments.dept_desc",
            "select Departments.department_name, Departments.dept_desc",
            "select Departments.dept_desc, Departments.oth_dtl",
            "select Departments.dept_desc, Departments.department_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Departments",
        "table_candidates": [
            "Departments",
            "Addresses Courses Departments",
            "Courses Departments"
        ],
        "align_scores": [
            0.9947039484977722,
            8.869915473042056e-05,
            0.00021022235159762204,
            6.661150109721348e-05,
            0.00014185093459673226,
            6.90446249791421e-05,
            0.00017754831060301512,
            5.920103285461664e-05
        ],
        "align_select": "select Departments.dept_desc",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Who are enrolled in 2 degree programs in one semester? List the first name, middle name and last name and the id.",
        "gold_select": "select Students.first_name, Students.middle_name, Students.last_name, Students.stuid",
        "select_candidates": [
            "select Students.first_name, Students.middle_name, Students.last_name, Students.stuid",
            "select Students.first_name, Students.middle_name, Students.last_name",
            "select Students.first_name, Students.middle_name, Students.last_name and Students.stuid",
            "select Students.first_name, Students.middle_name, Students.last_name, ca_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "Students Student_Enrolment",
        "table_candidates": [
            "Students",
            "Students Student_Enrolment",
            "Students Student_Enrolment_Courses",
            "Degree_Programs Students",
            "Semesters Students",
            "Sections Students"
        ],
        "align_scores": [
            0.28903838992118835,
            0.004496018867939711,
            0.2581307888031006,
            0.0005297372117638588,
            0.5122132897377014,
            0.005084384232759476,
            0.0634055808186531,
            0.002311909105628729
        ],
        "align_select": "select Students.first_name, Students.middle_name, Students.last_name and Students.stuid",
        "align_structure": "SELECT-FROM-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the first, middle, and last names, along with the ids, of all students who enrolled in 2 degree programs in one semester?",
        "gold_select": "select Students.first_name, Students.middle_name, Students.last_name, Students.stuid",
        "select_candidates": [
            "select Students.first_name, Students.middle_name, Students.last_name, Students.stuid",
            "select Students.first_name, Students.middle_name, Students.last_name",
            "select Students.first_name, Students.middle_name, Students.last_name, Students.stuid",
            "select Students.first_name, Students.middle_name, Students.last_name plus Students.stuid"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "Students Student_Enrolment",
        "table_candidates": [
            "Degree_Programs Students",
            "Students Student_Enrolment",
            "Students",
            "Semesters Students",
            "Students Student_Enrolment_Courses",
            "Departments Degree_Programs Students",
            "Sections Students",
            "Degree_Programs Students Student_Enrolment"
        ],
        "align_scores": [
            0.9093809127807617,
            0.006537233013659716,
            0.5131357908248901,
            0.0011025328421965241,
            0.9093809127807617,
            0.006537233013659716,
            0.9695213437080383,
            0.01087363250553608
        ],
        "align_select": "select Students.first_name, Students.middle_name, Students.last_name, Students.stuid",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "Who is enrolled in a Bachelor degree program? List the first name, middle name, last name.",
        "gold_select": "select distinct Students.first_name, Students.middle_name, Students.last_name",
        "select_candidates": [
            "select Students.first_name, Students.middle_name, Students.last_name",
            "select Students.stuid, Students.first_name, Students.middle_name, Students.last_name",
            "select distinct Students.first_name, Students.middle_name, Students.last_name",
            "select selcStudents.first_name, Students.middle_name, Students.last_name"
        ],
        "select_labels": [
            0.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Degree_Programs Students Student_Enrolment",
        "table_candidates": [
            "Degree_Programs Students",
            "Degree_Programs Students Student_Enrolment_Courses",
            "Addresses Degree_Programs Students",
            "Courses Degree_Programs Students",
            "Departments Degree_Programs Students",
            "Degree_Programs Students Student_Enrolment"
        ],
        "align_scores": [
            0.986777126789093,
            0.00014054845087230206,
            0.00021438163821585476,
            8.866497955750674e-05,
            0.027531510218977928,
            6.963796477066353e-05,
            0.0012369974283501506,
            8.924280700739473e-05
        ],
        "align_select": "select Students.first_name, Students.middle_name, Students.last_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the first, middle, and last names for everybody enrolled in a Bachelors program?",
        "gold_select": "select distinct Students.first_name, Students.middle_name, Students.last_name",
        "select_candidates": [
            "select Students.first_name, Students.middle_name, Students.last_name",
            "select Students.stuid, Students.first_name, Students.middle_name, Students.last_name",
            "select Students.first_name, Students.middle_name, Students.last_name",
            "select distinct Students.first_name, Students.middle_name, Students.last_name"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Degree_Programs Students Student_Enrolment",
        "table_candidates": [
            "Degree_Programs Students",
            "Departments Degree_Programs Students",
            "Courses Degree_Programs Students",
            "Sections Students",
            "Degree_Programs Students Student_Enrolment",
            "Courses Students",
            "Semesters Students"
        ],
        "align_scores": [
            0.9808099865913391,
            0.00011929730681004003,
            0.00018778220692183822,
            7.672512583667412e-05,
            0.9808099865913391,
            0.00011929730681004003,
            0.014467473141849041,
            6.694857438560575e-05
        ],
        "align_select": "select Students.first_name, Students.middle_name, Students.last_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the kind of program which most number of students are enrolled in?",
        "gold_select": "select Degree_Programs.degree_smry_name",
        "select_candidates": [
            "select Degree_Programs.degree_smry_name",
            "select Degree_Programs.dept_id",
            "select Degree_Programs.degree_smry_name, Students.ca_id",
            "select Degree_Programs.degree_smry_name, Students.ca_id3"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Degree_Programs Student_Enrolment",
        "table_candidates": [
            "Degree_Programs Students",
            "Courses Degree_Programs Students",
            "Departments Degree_Programs Students",
            "Degree_Programs Semesters Students",
            "Sections Students",
            "Semesters Students",
            "Degree_Programs Student_Enrolment_Courses"
        ],
        "align_scores": [
            0.6106048822402954,
            0.00011522482964210212,
            0.08700103312730789,
            9.449738718103617e-05,
            0.0004801013274118304,
            7.418765017064288e-05,
            0.0006643649539910257,
            7.599274977110326e-05
        ],
        "align_select": "select Degree_Programs.degree_smry_name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the degree summary name that has the most number of students enrolled?",
        "gold_select": "select Degree_Programs.degree_smry_name",
        "select_candidates": [
            "select Degree_Programs.degree_smry_name",
            "select Degree_Programs.degree_smry_name, Degree_Programs.degree_summary_description",
            "select Degree_Programs.degree_smry_name, Degree_Programs.degree_summary_description, Students.stuid",
            "select Degree_Programs.degree_smry_name, Degree_Programs.degree_summary_description, Students.ca_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-UNION-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Degree_Programs Student_Enrolment",
        "table_candidates": [
            "Degree_Programs Students",
            "Degree_Programs Semesters Students",
            "Degree_Programs Sections Students",
            "Departments Degree_Programs Students",
            "Degree_Programs Student_Enrolment_Courses",
            "Degree_Programs Student_Enrolment",
            "Departments Students",
            "Degree_Programs Transcripts"
        ],
        "align_scores": [
            0.9436674118041992,
            0.00019369315123185515,
            0.00039581055170856416,
            7.807796646375209e-05,
            0.0004123298858758062,
            7.365923374891281e-05,
            0.00024264704552479088,
            7.124779949663207e-05
        ],
        "align_select": "select Degree_Programs.degree_smry_name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Find the program which most number of students are enrolled in. List both the id and the summary.",
        "gold_select": "select Degree_Programs.degree_pmg_id, Degree_Programs.degree_smry_name",
        "select_candidates": [
            "select Degree_Programs.degree_pmg_id, Degree_Programs.degree_summary_description",
            "select Degree_Programs.dept_id, Degree_Programs.degree_summary_description",
            "select Degree_Programs.degree_pmg_id, Degree_Programs.degree_smry_name",
            "select Degree_Programs.degree_smry_name, Degree_Programs.degree_summary_description"
        ],
        "select_labels": [
            0.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Degree_Programs Student_Enrolment",
        "table_candidates": [
            "Degree_Programs Students",
            "Courses Degree_Programs Students",
            "Departments Degree_Programs Students",
            "Degree_Programs Semesters Students",
            "Degree_Programs Student_Enrolment_Courses",
            "Degree_Programs Students Student_Enrolment_Courses",
            "Degree_Programs Student_Enrolment",
            "Degree_Programs Transcripts"
        ],
        "align_scores": [
            0.9443829655647278,
            9.485363989369944e-05,
            0.09414652734994888,
            9.366896119900048e-05,
            0.03151069954037666,
            0.00010671820200514048,
            0.00017024356930051,
            7.460772030754015e-05
        ],
        "align_select": "select Degree_Programs.degree_pmg_id, Degree_Programs.degree_summary_description",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the program id and the summary of the degree that has the most students enrolled?",
        "gold_select": "select Degree_Programs.degree_pmg_id, Degree_Programs.degree_smry_name",
        "select_candidates": [
            "select Degree_Programs.degree_pmg_id, Degree_Programs.degree_summary_description",
            "select Degree_Programs.dept_id, Degree_Programs.degree_summary_description",
            "select Degree_Programs.degree_pmg_id, Degree_Programs.degree_smry_name",
            "select Degree_Programs.degree_smry_name, Degree_Programs.degree_summary_description"
        ],
        "select_labels": [
            0.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-UNION-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Degree_Programs Student_Enrolment",
        "table_candidates": [
            "Degree_Programs Students",
            "Degree_Programs Student_Enrolment_Courses",
            "Degree_Programs Sections",
            "Degree_Programs Student_Enrolment",
            "Degree_Programs Sections Students",
            "Degree_Programs Semesters",
            "Degree_Programs Transcripts",
            "Departments Degree_Programs Students"
        ],
        "align_scores": [
            0.9932742118835449,
            0.00013959042553324252,
            0.013750634156167507,
            0.00010662309068720788,
            0.9650827050209045,
            0.00018100306624546647,
            0.0002097366377711296,
            7.376635767286643e-05
        ],
        "align_select": "select Degree_Programs.degree_pmg_id, Degree_Programs.degree_summary_description",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Which student has enrolled for the most times in any program? List the id, first name, middle name, last name, the number of enrollments and student id.",
        "gold_select": "select Students.stuid, Students.first_name, Students.middle_name, Students.last_name, count(*), Students.stuid",
        "select_candidates": [
            "select Students.stuid, Students.first_name, Students.middle_name, Students.last_name, count(*)",
            "select Students.stuid, Students.first_name, Students.middle_name, Students.last_name",
            "select Students.stuid, Students.ca_id, Students.middle_name, Students.last_name, count(*)",
            "select Students.stuid, Students.first_name, Students.middle_name, Students.last_name, count(*)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "Students Student_Enrolment",
        "table_candidates": [
            "Students Student_Enrolment",
            "Students Student_Enrolment_Courses"
        ],
        "align_scores": [
            0.09578730911016464,
            0.09578730911016464,
            0.04428907111287117,
            0.04428907111287117,
            0.0003213274758309126,
            0.0003213274758309126,
            0.09578730911016464,
            0.09578730911016464
        ],
        "align_select": "select Students.stuid, Students.first_name, Students.middle_name, Students.last_name, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the first, middle, and last name, along with the id and number of enrollments, for the student who enrolled the most in any program?",
        "gold_select": "select Students.stuid, Students.first_name, Students.middle_name, Students.last_name, count(*), Students.stuid",
        "select_candidates": [
            "select Students.first_name, Students.middle_name, Students.last_name, Students.stuid, count(*)",
            "select Students.first_name, Students.middle_name, Students.last_name, Students.stuid, count(Students.stuid)",
            "select Students.first_name, Students.middle_name, Students.last_name, Students.pa_id, count(*)",
            "select Students.first_name, Students.middle_name, Students.last_name ainsi Students.stuid, count(*)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-UNION-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Students Student_Enrolment",
        "table_candidates": [
            "Students Student_Enrolment",
            "Students Student_Enrolment_Courses"
        ],
        "align_scores": [
            0.9595895409584045,
            0.0003957879380322993,
            0.49410536885261536,
            0.0001710628712316975,
            0.2873416841030121,
            0.00026580673875287175,
            0.09529571235179901,
            0.00020029820734634995
        ],
        "align_select": "select Students.first_name, Students.middle_name, Students.last_name, Students.stuid, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Which semesters do not have any student enrolled? List the semester name.",
        "gold_select": "select Semesters.sem_name",
        "select_candidates": [
            "select Semesters.sem_name",
            "select Semesters.sem_name, Semesters.sem_desc",
            "select Semesters.sem_name, Students.ca_id",
            "select Semesters.sem_name, Students.ca_id3"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Semesters",
        "table_candidates": [
            "Semesters",
            "Semesters Students"
        ],
        "align_scores": [
            0.7194136381149292,
            0.001904711127281189,
            0.0004322614404372871,
            0.00022392818937078118,
            0.00029116624500602484,
            0.00013441976625472307,
            0.00028251472394913435,
            0.00014849229773972183
        ],
        "align_select": "select Semesters.sem_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the name of the semester with no students enrolled?",
        "gold_select": "select Semesters.sem_name",
        "select_candidates": [
            "select Semesters.sem_name",
            "select Semesters.sem_name, Students.ca_id",
            "select Semesters.sem_name, Semesters.sem_desc",
            "select Semesters.sem_name, Students.ca_id3"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Semesters",
        "table_candidates": [
            "Semesters Students",
            "Semesters Students Student_Enrolment",
            "Semesters Student_Enrolment",
            "Semesters Student_Enrolment_Courses",
            "Semesters Students Student_Enrolment_Courses",
            "Semesters",
            "Semesters Transcripts"
        ],
        "align_scores": [
            0.915947675704956,
            0.9034005403518677,
            0.00026197542320005596,
            0.00031076924642547965,
            0.0003412664227653295,
            0.001824700622819364,
            0.0002636452263686806,
            0.0003678566718008369
        ],
        "align_select": "select Semesters.sem_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the last name of the students who currently live in the state of North Carolina but have not registered in any degree program.",
        "gold_select": "select Students.last_name",
        "select_candidates": [
            "select Students.last_name",
            "select Students.last_name, Students.stuid",
            "select Students.last_name, Students.ssn",
            "select Students.last_name, Students.ca_id3"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Addresses Students Student_Enrolment",
        "table_candidates": [
            "Addresses Students",
            "Addresses Degree_Programs Students",
            "Addresses Departments Degree_Programs Students",
            "Addresses Semesters Students",
            "Addresses Courses Students",
            "Addresses Sections Students",
            "Addresses Departments Degree_Programs Sections Students",
            "Addresses Courses Degree_Programs Students"
        ],
        "align_scores": [
            0.7493164539337158,
            0.8573399186134338,
            0.0005211512325331569,
            0.0004966732230968773,
            0.0006546663935296237,
            0.0005656217108480632,
            0.00032076917705126107,
            0.00029264064505696297
        ],
        "align_select": "select Students.last_name",
        "align_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM"
    },
    {
        "question": "What are the last name of the students who live in North Carolina but have not registered in any degree programs?",
        "gold_select": "select Students.last_name",
        "select_candidates": [
            "select Students.last_name",
            "select Students.last_name, Students.ssn",
            "select Students.last_name, Students.date_left",
            "select Students.last_name, Students.cell_mobile_number"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Addresses Students Student_Enrolment",
        "table_candidates": [
            "Addresses Degree_Programs Students",
            "Addresses Departments Degree_Programs Students",
            "Addresses Courses Degree_Programs Students",
            "Addresses Degree_Programs Sections Students",
            "Addresses Courses Students",
            "Addresses Departments Degree_Programs Sections Students",
            "Addresses Sections Students",
            "Addresses Semesters Students"
        ],
        "align_scores": [
            0.7939284443855286,
            0.893947184085846,
            0.00045751978177577257,
            0.0004085684195160866,
            0.0002123776648659259,
            0.0001987295545404777,
            0.0002681280311662704,
            0.00023465565755032003
        ],
        "align_select": "select Students.last_name",
        "align_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM"
    },
    {
        "question": "Whose permanent address is different from his or her current address? List his or her first name.",
        "gold_select": "select Students.first_name",
        "select_candidates": [
            "select distinct Students.first_name",
            "select Students.first_name",
            "select Students.stuid, Students.first_name",
            "select distinct Students.first_name, Students.last_name"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Students",
        "table_candidates": [
            "Addresses Students",
            "Addresses Students Student_Enrolment",
            "Addresses Students Student_Enrolment_Courses",
            "Addresses Semesters Students",
            "Addresses Sections Students",
            "Addresses Transcripts",
            "Addresses Courses",
            "Addresses Student_Enrolment_Courses"
        ],
        "align_scores": [
            0.03285570815205574,
            0.00017483266128692776,
            0.6903728246688843,
            0.0002553312515374273,
            0.00022185085981618613,
            0.000105110346339643,
            0.0006135323783382773,
            7.789540541125461e-05
        ],
        "align_select": "select Students.first_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the first name of the student whose permanent address is different from his or her current one?",
        "gold_select": "select Students.first_name",
        "select_candidates": [
            "select Students.first_name",
            "select distinct Students.first_name",
            "select Students.stuid, Students.first_name",
            "select Students.first_name, Students.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Students",
        "table_candidates": [
            "Addresses Students",
            "Addresses Students Student_Enrolment",
            "Addresses Students Student_Enrolment_Courses",
            "Addresses Semesters Students",
            "Addresses Sections Students",
            "Addresses Courses Students"
        ],
        "align_scores": [
            0.7999458312988281,
            0.00018232017464470118,
            0.027247946709394455,
            0.0003597263421397656,
            0.0002122940495610237,
            7.359927258221433e-05,
            0.00016462503117509186,
            7.645606820005924e-05
        ],
        "align_select": "select Students.first_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which address holds the most number of students currently? List the address id and all lines.",
        "gold_select": "select Addresses.adr_id, Addresses.line_1, Addresses.line_2",
        "select_candidates": [
            "select Addresses.adr_id, Addresses.line_1, Addresses.line_2",
            "select Addresses.adr_id, Addresses.line_1, Addresses.line_3",
            "select Addresses.adr_id, Addresses.line_1",
            "select Addresses.adr_id, Addresses.line_1, Addresses.line_2, Addresses.line_3"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-UNION-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Addresses Students",
        "table_candidates": [
            "Addresses Students"
        ],
        "align_scores": [
            0.9773598313331604,
            0.0001180723265861161,
            0.1464536041021347,
            0.0001093487226171419,
            0.12243764847517014,
            0.00014992615615483373,
            0.9857978224754333,
            0.00012491419329307973
        ],
        "align_select": "select Addresses.adr_id, Addresses.line_1, Addresses.line_2",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the id, line 1, and line 2 of the address with the most students?",
        "gold_select": "select Addresses.adr_id, Addresses.line_1, Addresses.line_2",
        "select_candidates": [
            "select Addresses.adr_id, Addresses.line_1, Addresses.line_2",
            "select Students.ca_id, Addresses.line_1, Addresses.line_2",
            "select Students.stuid, Addresses.line_1, Addresses.line_2",
            "select student_Addresses.adr_id, Addresses.line_1, Addresses.line_2"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Addresses Students",
        "table_candidates": [
            "Addresses Students",
            "Addresses Courses Departments Students",
            "Addresses Courses Departments Degree_Programs Students",
            "Addresses Sections Students",
            "Addresses Semesters Students",
            "Addresses Courses Departments Degree_Programs Sections"
        ],
        "align_scores": [
            0.9936116337776184,
            8.28628326416947e-05,
            0.550898015499115,
            8.396449266001582e-05,
            0.9779226779937744,
            8.55498801684007e-05,
            0.9760463833808899,
            0.00011414414620958269
        ],
        "align_select": "select Addresses.adr_id, Addresses.line_1, Addresses.line_2",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "When is the first transcript released? List the date and details.",
        "gold_select": "select Transcripts.transcript_date, Transcripts.oth_dtl",
        "select_candidates": [
            "select t12.c5, t12.c6",
            "select t8.c5, t8.c6",
            "select t13.c5, t13.c6",
            "select t1.c5, t1.c6"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Transcripts",
        "table_candidates": [
            "Transcripts",
            "Semesters Student_Enrolment",
            "Courses Student_Enrolment_Courses",
            "Transcript_Contents",
            "Student_Enrolment_Courses",
            "Courses Student_Enrolment",
            "Courses",
            "Student_Enrolment"
        ],
        "align_scores": [
            0.003432188183069229,
            6.500201561721042e-05,
            0.0027010105550289154,
            6.559818575624377e-05,
            0.003920059651136398,
            6.355231016641483e-05,
            0.0008275230065919459,
            6.621246575377882e-05
        ],
        "align_select": "select t12.c5, t12.c6",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What is the earliest date of a transcript release, and what details can you tell me?",
        "gold_select": "select Transcripts.transcript_date, Transcripts.oth_dtl",
        "select_candidates": [
            "select t12.c5, t12.c6",
            "select t13.c5, t13.c6",
            "select t8.c5, t8.c6",
            "select t14.c5, t14.c6"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Transcripts",
        "table_candidates": [
            "Transcripts",
            "Student_Enrolment",
            "Transcript_Contents",
            "Student_Enrolment_Courses"
        ],
        "align_scores": [
            0.006982778199017048,
            5.8834990340983495e-05,
            0.007361322641372681,
            5.832986062159762e-05,
            0.0048663136549293995,
            5.8931236708303913e-05,
            0.005738364066928625,
            5.916339432587847e-05
        ],
        "align_select": "select t12.c5, t12.c6",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "How many times at most can a course enrollment result show in different transcripts? Also show the course enrollment id.",
        "gold_select": "select count(*), Transcript_Contents.stu_crs_id",
        "select_candidates": [
            "select count(*), Students.stuid",
            "select count(distinct Student_Enrolment_Courses.stu_crs_id), Student_Enrolment_Courses.stu_crs_id",
            "select count(*), Students.ca_id",
            "select count(distinct Students.stuid), Students.stuid"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "Transcript_Contents",
        "table_candidates": [
            "Student_Enrolment_Courses",
            "Students Student_Enrolment_Courses",
            "Transcripts",
            "Semesters Student_Enrolment",
            "Student_Enrolment",
            "Semesters Student_Enrolment_Courses",
            "Sections",
            "Semesters Students"
        ],
        "align_scores": [
            0.002087836852297187,
            0.003059481270611286,
            0.001219404162839055,
            8.441390673397109e-05,
            0.0009614125010557473,
            0.0021630371920764446,
            0.012566918507218361,
            0.00013512167788576335
        ],
        "align_select": "select count(*), Students.stuid",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What is the maximum number of times that a course shows up in different transcripts and what is that course's enrollment id?",
        "gold_select": "select count(*), Transcript_Contents.stu_crs_id",
        "select_candidates": [
            "select max(Sections.crs_id), Sections.section_id",
            "select max(Sections.section_id), Sections.section_id",
            "select max(Student_Enrolment_Courses.stu_crs_id), Sections.section_id",
            "select max(Student_Enrolment_Courses.stu_crs_id), Sections.crs_id"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Transcript_Contents",
        "table_candidates": [
            "Courses Sections",
            "Sections Students",
            "Courses Student_Enrolment_Courses",
            "Courses Student_Enrolment",
            "Departments Sections",
            "Courses Students",
            "Degree_Programs Sections",
            "Sections Student_Enrolment_Courses"
        ],
        "align_scores": [
            0.00012882075679954141,
            0.00015932762471493334,
            0.00013240749831311405,
            0.0003561789053492248,
            0.00013051528367213905,
            0.00021181386546231806,
            0.0002935060183517635,
            0.0020917889196425676
        ],
        "align_select": "select max(Sections.crs_id), Sections.section_id",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Find the semester when both Master students and Bachelor students got enrolled in.",
        "gold_select": "select distinct Student_Enrolment.sem_id",
        "select_candidates": [
            "select Semesters.sem_name",
            "select Semesters.sem_name, Students.ca_id3",
            "select Semesters.sem_name, Students.stuid",
            "select Semesters.sem_name, Students.ca_id"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-GROUP BY-HAVING-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Degree_Programs Student_Enrolment",
        "table_candidates": [
            "Degree_Programs Semesters Students",
            "Degree_Programs Students",
            "Departments Degree_Programs Semesters Students",
            "Courses Degree_Programs Semesters Students",
            "Addresses Degree_Programs Semesters Students",
            "Degree_Programs Sections Semesters Students",
            "Degree_Programs Sections Students"
        ],
        "align_scores": [
            0.9224002957344055,
            0.13964524865150452,
            0.00034157937625423074,
            0.0008478771196678281,
            0.0009774764766916633,
            0.0024460500571876764,
            0.0005202283500693738,
            0.0008931111078709364
        ],
        "align_select": "select Semesters.sem_name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "What is the id of the semester that had both Masters and Bachelors students enrolled?",
        "gold_select": "select distinct Student_Enrolment.sem_id",
        "select_candidates": [
            "select Semesters.sem_id",
            "select Semesters.sem_name",
            "select Students.ca_id",
            "select Semesters.sem_id, Students.ca_id"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-GROUP BY-HAVING-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Degree_Programs Student_Enrolment",
        "table_candidates": [
            "Students",
            "Semesters Students",
            "Degree_Programs Students",
            "Departments Degree_Programs Students",
            "Sections Students",
            "Students Student_Enrolment_Courses",
            "Transcripts Students",
            "Semesters Student_Enrolment"
        ],
        "align_scores": [
            0.9937989115715027,
            0.0008995043463073671,
            0.9126336574554443,
            0.0004944700049236417,
            0.25533998012542725,
            0.0002875369682442397,
            0.0003235197509638965,
            0.00011262681073276326
        ],
        "align_select": "select Semesters.sem_id",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "How many different addresses do the students currently live?",
        "gold_select": "select count(distinct Students.ca_id)",
        "select_candidates": [
            "select count(distinct Addresses.adr_id)",
            "select count(distinct Students.email_address)",
            "select count(distinct Addresses.line_2)",
            "select count(distinct Addresses.line_1)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "Students",
        "table_candidates": [
            "Addresses Students",
            "Addresses Students Student_Enrolment",
            "Students Student_Enrolment",
            "Departments Students Student_Enrolment",
            "Addresses Students Student_Enrolment_Courses",
            "Degree_Programs Students Student_Enrolment",
            "Sections Students Student_Enrolment",
            "Courses Students Student_Enrolment"
        ],
        "align_scores": [
            0.4204637408256531,
            0.4204637408256531,
            0.0014763879589736462,
            0.0014763879589736462,
            0.0014212839305400848,
            0.0014212839305400848,
            0.0023112150374799967,
            0.0023112150374799967
        ],
        "align_select": "select count(distinct Addresses.adr_id)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What are the different addresses that have students living there?",
        "gold_select": "select count(distinct Students.ca_id)",
        "select_candidates": [
            "select distinct Addresses.adr_id",
            "select distinct Addresses.line_1, Addresses.line_2",
            "select distinct Addresses.line_1",
            "select distinct Addresses.line_1, Addresses.line_3"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Students",
        "table_candidates": [
            "Addresses Students Student_Enrolment",
            "Addresses Students",
            "Addresses Semesters Students Student_Enrolment",
            "Addresses Courses Students Student_Enrolment",
            "Courses Students Student_Enrolment",
            "Addresses Student_Enrolment",
            "Addresses Students Student_Enrolment_Courses"
        ],
        "align_scores": [
            0.5676317811012268,
            0.0005352333537302911,
            0.4760448634624481,
            9.645037062000483e-05,
            0.3320234715938568,
            0.00017193461826536804,
            0.20920270681381226,
            8.639675797894597e-05
        ],
        "align_select": "select distinct Addresses.adr_id",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "Describe the section h.",
        "gold_select": "select Sections.sect_desc",
        "select_candidates": [
            "select Sections.sect_desc",
            "select Sections.section_name",
            "select Sections.crs_id, Sections.sect_desc",
            "select Sections.section_name, Sections.sect_desc"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Sections",
        "table_candidates": [
            "Sections",
            "Departments Sections",
            "Degree_Programs Sections",
            "Courses Sections",
            "Addresses Courses Sections",
            "Addresses Courses Departments Sections",
            "Addresses Sections",
            "Addresses Courses Degree_Programs Sections"
        ],
        "align_scores": [
            0.9962348341941833,
            7.904180529294536e-05,
            0.9927198886871338,
            7.44370263419114e-05,
            0.00013684388250112534,
            5.9255369706079364e-05,
            0.0001586173166288063,
            6.166307139210403e-05
        ],
        "align_select": "select Sections.sect_desc",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the description for the section named h?",
        "gold_select": "select Sections.sect_desc",
        "select_candidates": [
            "select Sections.sect_desc",
            "select Sections.crs_id, Sections.sect_desc",
            "select Sections.sect_desc, Sections.other_dtl",
            "select Sections.crs_id, Sections.section_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Sections",
        "table_candidates": [
            "Sections",
            "Courses Sections",
            "Addresses Courses Sections",
            "Courses Departments Sections",
            "Departments Sections",
            "Degree_Programs Sections",
            "Addresses Courses Departments Sections",
            "Courses Degree_Programs Sections"
        ],
        "align_scores": [
            0.9961890578269958,
            7.94658626546152e-05,
            0.0001458981860196218,
            5.923265416640788e-05,
            0.00013547632261179388,
            6.759791722288355e-05,
            0.0001441883505322039,
            5.9550842706812546e-05
        ],
        "align_select": "select Sections.sect_desc",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the first name of the students who permanently live in the country Haiti or have the cell phone number 09700166582.",
        "gold_select": "select Students.first_name",
        "select_candidates": [
            "select Students.first_name",
            "select distinct Students.first_name",
            "select Students.first_name, Students.last_name",
            "select Students.stuid, Students.first_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Addresses Students",
        "table_candidates": [
            "Addresses Students",
            "Addresses Semesters Students",
            "Addresses Courses Students",
            "Addresses Students Student_Enrolment"
        ],
        "align_scores": [
            0.8337135910987854,
            0.9670388102531433,
            0.06273207813501358,
            0.0009215530008077621,
            0.00018483759777154773,
            0.00013477924221660942,
            0.00021736569760832936,
            0.00012497400166466832
        ],
        "align_select": "select Students.first_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the first names of the students who live in Haiti permanently or have the cell phone number 09700166582?",
        "gold_select": "select Students.first_name",
        "select_candidates": [
            "select Students.first_name",
            "select distinct Students.first_name",
            "select Students.first_name, Students.last_name",
            "select Students.stuid, Students.first_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Addresses Students",
        "table_candidates": [
            "Addresses Students",
            "Addresses Semesters Students",
            "Addresses Courses Students",
            "Addresses Students Student_Enrolment"
        ],
        "align_scores": [
            0.837342381477356,
            0.9902886152267456,
            0.03512663021683693,
            0.0016945266397669911,
            0.00022654082567896694,
            0.00020840582146774977,
            0.00022084101510699838,
            0.00018042133888229728
        ],
        "align_select": "select Students.first_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List all cartoon directed by \"Ben Jones\".",
        "gold_select": "select Cartoon.Title",
        "select_candidates": [
            "select Cartoon.Title",
            "select Cartoon.id",
            "select Cartoon.Title, Cartoon.dir",
            "select Cartoon.id, Cartoon.Title"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Cartoon",
        "table_candidates": [
            "Cartoon"
        ],
        "align_scores": [
            0.9943062663078308,
            0.00010172252950724214,
            0.005234546959400177,
            6.321888940874487e-05,
            0.00018158199964091182,
            6.633518933085725e-05,
            0.0002051809278782457,
            6.234504689928144e-05
        ],
        "align_select": "select Cartoon.Title",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of all cartoons directed by Ben Jones?",
        "gold_select": "select Cartoon.Title",
        "select_candidates": [
            "select Cartoon.Title",
            "select Cartoon.Title, Cartoon.dir",
            "select Cartoon.Title, Cartoon.chnl",
            "select Cartoon.Title, Cartoon.wr"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Cartoon",
        "table_candidates": [
            "Cartoon"
        ],
        "align_scores": [
            0.9936460256576538,
            0.0001680139102973044,
            0.00021287718845997006,
            5.739864718634635e-05,
            0.0003943484916817397,
            7.538891077274457e-05,
            0.00021608966926578432,
            6.020285945851356e-05
        ],
        "align_select": "select Cartoon.Title",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many cartoons were written by \"Joseph Kuhr\"?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Cartoon.id",
            "select count(*), Cartoon.Title",
            "select count(*), Cartoon.wr"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Cartoon",
        "table_candidates": [
            "Cartoon",
            "TV_series Cartoon",
            "TV_Channel Cartoon"
        ],
        "align_scores": [
            0.9933307766914368,
            0.00012517865980044007,
            0.00028623611433431506,
            6.700509402435273e-05,
            0.00025870694662444293,
            6.813623622292653e-05,
            0.0003834681410808116,
            7.70619953982532e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the number of cartoones written by Joseph Kuhr?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Cartoon.id",
            "select count(*), Cartoon.Title",
            "select count(*), Cartoon.wr"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Cartoon",
        "table_candidates": [
            "Cartoon",
            "TV_series Cartoon",
            "TV_Channel Cartoon"
        ],
        "align_scores": [
            0.9892503023147583,
            0.0003021026204805821,
            0.00025901402113959193,
            0.0001740011211950332,
            0.00024879994452930987,
            0.0006547386874444783,
            0.0003174821613356471,
            0.022964539006352425
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "list all cartoon titles and their directors ordered by their air date",
        "gold_select": "select Cartoon.Title, Cartoon.dir",
        "select_candidates": [
            "select Cartoon.Title, Cartoon.dir",
            "select Cartoon.Title, Cartoon.dir, Cartoon.Original_air_date",
            "select Cartoon.Title, Cartoon.dir (ordered by",
            "select Cartoon.Title, Cartoon.dir, Cartoon.wr"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "Cartoon",
        "table_candidates": [
            "Cartoon"
        ],
        "align_scores": [
            0.9944643378257751,
            0.9944643378257751,
            0.00022764119785279036,
            0.00022764119785279036,
            0.03155336529016495,
            0.03155336529016495,
            0.00030531606171280146,
            0.00030531606171280146
        ],
        "align_select": "select Cartoon.Title, Cartoon.dir",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "What is the name and directors of all the cartoons that are ordered by air date?",
        "gold_select": "select Cartoon.Title, Cartoon.dir",
        "select_candidates": [
            "select Cartoon.Title, Cartoon.dir",
            "select Cartoon.Title, Cartoon.dir, Cartoon.Original_air_date",
            "select Cartoon.Title, Cartoon.dir, Cartoon.wr",
            "select Cartoon.Title, Cartoon.dir, Cartoon.id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "Cartoon",
        "table_candidates": [
            "Cartoon"
        ],
        "align_scores": [
            0.1829545646905899,
            0.1829545646905899,
            0.00015878134581726044,
            0.00015878134581726044,
            0.00031421438325196505,
            0.00031421438325196505,
            0.0002859551750589162,
            0.0002859551750589162
        ],
        "align_select": "select Cartoon.Title, Cartoon.dir",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "List the title of all cartoon directed by \"Ben Jones\" or \"Brandon Vietti\".",
        "gold_select": "select Cartoon.Title",
        "select_candidates": [
            "select Cartoon.Title",
            "select Cartoon.Title, Cartoon.dir",
            "select Cartoon.Title, Cartoon.chnl",
            "select Cartoon.Title, Cartoon.id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Cartoon",
        "table_candidates": [
            "Cartoon"
        ],
        "align_scores": [
            0.9806109666824341,
            0.0002984514576382935,
            0.00019016947771888226,
            7.476519385818392e-05,
            0.0003319602401461452,
            8.954467193689197e-05,
            0.00020439247600734234,
            7.153775368351489e-05
        ],
        "align_select": "select Cartoon.Title",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the titles of all cartoons directed by Ben Jones or Brandon Vietti?",
        "gold_select": "select Cartoon.Title",
        "select_candidates": [
            "select Cartoon.Title",
            "select Cartoon.Title, Cartoon.dir",
            "select Cartoon.Title, Cartoon.chnl",
            "select Cartoon.Title, Cartoon.id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Cartoon",
        "table_candidates": [
            "Cartoon"
        ],
        "align_scores": [
            0.9900957345962524,
            0.0008301984635181725,
            0.00021926636691205204,
            7.393749547190964e-05,
            0.0004427201929502189,
            9.047344065038487e-05,
            0.00022923860524315387,
            7.53697968320921e-05
        ],
        "align_select": "select Cartoon.Title",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which country has the most of TV Channels? List the country and number of TV Channels it has.",
        "gold_select": "select TV_Channel.cntry, count(*)",
        "select_candidates": [
            "select TV_Channel.cntry, count(*)",
            "select TV_Channel.cntry, count(TV_Channel.cont)",
            "select TV_Channel.cntry, count(*), TV_Channel.lang",
            "select TV_Channel.cntry.c2, count(*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-UNION-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel"
        ],
        "align_scores": [
            0.5638079643249512,
            0.00010268512414768338,
            0.003501883940771222,
            9.113689156947657e-05,
            0.00014146353350952268,
            7.124174589989707e-05,
            0.0005253689596429467,
            8.220392919611186e-05
        ],
        "align_select": "select TV_Channel.cntry, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the country with the most number of TV Channels and how many does it have?",
        "gold_select": "select TV_Channel.cntry, count(*)",
        "select_candidates": [
            "select TV_Channel.cntry, count(*)",
            "select TV_Channel.cntry, count(*), TV_Channel.lang",
            "select TV_Channel.cntry.c2, count(*)",
            "select TV_Channel.cntry.c0, count(*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel"
        ],
        "align_scores": [
            0.9871417284011841,
            8.450145105598494e-05,
            0.00017699270392768085,
            5.7720088079804555e-05,
            0.0024934117682278156,
            6.545059295604005e-05,
            0.0019766846671700478,
            6.978554301895201e-05
        ],
        "align_select": "select TV_Channel.cntry, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "List the number of different series names and contents in the TV Channel table.",
        "gold_select": "select count(distinct TV_Channel.ser_name), count(distinct TV_Channel.cont)",
        "select_candidates": [
            "select count(distinct TV_Channel.ser_name), count(distinct TV_series.chnl)",
            "select count(distinct TV_Channel.ser_name), count(distinct TV_series.Share)",
            "select count(distinct TV_Channel.ser_name), count(distinct TV_series.Viewers_m)",
            "select count(distinct TV_Channel.ser_name), count(distinct TV_Channel.cont)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel TV_series"
        ],
        "align_scores": [
            0.0012108208611607552,
            0.0012108208611607552,
            0.003241347847506404,
            0.003241347847506404,
            0.0002780463546514511,
            0.0002780463546514511,
            0.9956740736961365,
            0.9956740736961365
        ],
        "align_select": "select count(distinct TV_Channel.ser_name), count(distinct TV_Channel.cont)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "How many different series and contents are listed in the TV Channel table?",
        "gold_select": "select count(distinct TV_Channel.ser_name), count(distinct TV_Channel.cont)",
        "select_candidates": [
            "select count(distinct TV_series.id), count(distinct TV_Channel.cont)",
            "select count(distinct TV_series.ep), count(distinct TV_Channel.cont)",
            "select count(distinct TV_series.Air_Date), count(distinct TV_Channel.cont)",
            "select count(distinct TV_series.Viewers_m), count(distinct TV_Channel.cont)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel TV_series",
            "TV_Channel TV_series Cartoon",
            "TV_series Cartoon"
        ],
        "align_scores": [
            0.007463451009243727,
            9.14968695724383e-05,
            0.0016127433627843857,
            8.535692177247256e-05,
            0.00037091923877596855,
            9.948780643753707e-05,
            0.00045098509872332215,
            8.870304736774415e-05
        ],
        "align_select": "select count(distinct TV_series.id), count(distinct TV_Channel.cont)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What is the content of TV Channel with serial name \"Sky Radio\"?",
        "gold_select": "select TV_Channel.cont",
        "select_candidates": [
            "select TV_Channel.cont",
            "select TV_Channel.cont, TV_Channel.par",
            "select TV_Channel.lang, TV_Channel.cont",
            "select TV_Channel.cont, TV_Channel.lang"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel",
            "TV_Channel TV_series"
        ],
        "align_scores": [
            0.993359386920929,
            0.0001383041962981224,
            0.000161799238412641,
            6.369999027810991e-05,
            0.00016007592785172164,
            6.467381172114983e-05,
            0.00015014273230917752,
            6.344755092868581e-05
        ],
        "align_select": "select TV_Channel.cont",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the content of the series Sky Radio?",
        "gold_select": "select TV_Channel.cont",
        "select_candidates": [
            "select TV_series.ep",
            "select TV_series.ep, TV_series.Air_Date",
            "select TV_series.ep, TV_Channel.cntry",
            "select TV_series.ep, TV_series.rtg"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel TV_series"
        ],
        "align_scores": [
            0.23594866693019867,
            7.97328248154372e-05,
            0.00014308634854387492,
            6.112433038651943e-05,
            0.00015643428196199238,
            6.244154792511836e-05,
            0.000416464899899438,
            7.146601274143904e-05
        ],
        "align_select": "select TV_series.ep",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the Package Option of TV Channel with serial name \"Sky Radio\"?",
        "gold_select": "select TV_Channel.Package_Option",
        "select_candidates": [
            "select TV_Channel.Package_Option",
            "select TV_Channel.Package_Option, TV_Channel.ppv",
            "select TV_Channel.Package_Option, TV_Channel.ser_name",
            "select TV_Channel.Package_Option, t0.c9"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel"
        ],
        "align_scores": [
            0.9931334853172302,
            9.729913290357217e-05,
            0.00018323969561606646,
            7.01321114320308e-05,
            0.00015071564121171832,
            7.334019028348848e-05,
            0.0004742058226838708,
            7.333655230468139e-05
        ],
        "align_select": "select TV_Channel.Package_Option",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the Package Options of the TV Channels whose series names are Sky Radio?",
        "gold_select": "select TV_Channel.Package_Option",
        "select_candidates": [
            "select TV_Channel.Package_Option",
            "select TV_Channel.Package_Option, TV_Channel.ser_name",
            "select TV_Channel.hd, TV_Channel.Package_Option",
            "select TV_Channel.par, TV_Channel.Package_Option"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel",
            "TV_Channel TV_series"
        ],
        "align_scores": [
            0.8821687698364258,
            7.68877289374359e-05,
            0.000190506485523656,
            6.524252239614725e-05,
            0.00018254491442348808,
            6.0163198213558644e-05,
            0.00017812178703024983,
            6.286719144554809e-05
        ],
        "align_select": "select TV_Channel.Package_Option",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many TV Channel using language English?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), TV_Channel.lang",
            "select count(*), TV_Channel.cntry",
            "select count(*), TV_Channel.id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel"
        ],
        "align_scores": [
            0.9956632256507874,
            0.000262858608039096,
            0.0002586929185781628,
            0.00016466881788801402,
            0.00028138034394942224,
            0.0001085311669157818,
            0.00023922020045574754,
            0.00017211833619512618
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many TV Channels use the English language?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), TV_Channel.lang",
            "select count(*), TV_Channel.lang, TV_Channel.cntry",
            "select count(*), TV_Channel.lang, TV_Channel.cont"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel"
        ],
        "align_scores": [
            0.9932244420051575,
            9.938672883436084e-05,
            0.0003005343896802515,
            6.993395800236613e-05,
            0.00010301957809133455,
            5.3925756219541654e-05,
            0.00010750506044132635,
            5.3977928473614156e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List the language used least number of TV Channel. List language and number of TV Channel.",
        "gold_select": "select TV_Channel.lang, count(*)",
        "select_candidates": [
            "select TV_Channel.lang, count(*)",
            "select TV_Channel.lang, count(TV_Channel.id)",
            "select TV_Channel.lang, count(*), TV_Channel.cntry",
            "select TV_Channel.ser_name, count(*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-UNION-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel"
        ],
        "align_scores": [
            0.9942020773887634,
            0.00012261095980647951,
            0.0015422741416841745,
            8.485237776767462e-05,
            0.0004299090651329607,
            7.737841224297881e-05,
            0.9558736085891724,
            0.0001274964160984382
        ],
        "align_select": "select TV_Channel.lang, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What are the languages used by the least number of TV Channels and how many channels use it?",
        "gold_select": "select TV_Channel.lang, count(*)",
        "select_candidates": [
            "select TV_Channel.lang, count(*)",
            "select TV_Channel.cntry, count(*)",
            "select TV_Channel.ser_name, count(*)",
            "select TV_Channel.lang, count(*), TV_Channel.cntry"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-UNION-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel"
        ],
        "align_scores": [
            0.9943998456001282,
            0.00016609895101282746,
            0.014457492157816887,
            0.00015660544158890843,
            0.8788560628890991,
            0.00018867183825932443,
            0.00036522597656585276,
            8.48222043714486e-05
        ],
        "align_select": "select TV_Channel.lang, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "List each language and the number of TV Channels using it.",
        "gold_select": "select TV_Channel.lang, count(*)",
        "select_candidates": [
            "select TV_Channel.lang, count(*)",
            "select TV_Channel.lang, count(*), TV_Channel.cntry",
            "select TV_Channel.lang.c3, count(*)",
            "select TV_Channel.lang, count(TV_Channel.id)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel"
        ],
        "align_scores": [
            0.995805025100708,
            0.00018615936278365552,
            0.0002580096188466996,
            8.785717363934964e-05,
            0.000982859288342297,
            0.00014862419629935175,
            0.000354836811311543,
            0.00018353818450123072
        ],
        "align_select": "select TV_Channel.lang, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "For each language, list the number of TV Channels that use it.",
        "gold_select": "select TV_Channel.lang, count(*)",
        "select_candidates": [
            "select TV_Channel.lang, count(*)",
            "select count(*), TV_Channel.lang",
            "select TV_Channel.lang, count(*), TV_Channel.cntry",
            "select TV_Channel.lang.c3, count(*)"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel"
        ],
        "align_scores": [
            0.9949833154678345,
            0.00019844099006149918,
            0.9944419264793396,
            0.0001984069385798648,
            0.00032540233223699033,
            8.9644207037054e-05,
            0.0008958900580182672,
            0.00016214426432270557
        ],
        "align_select": "select TV_Channel.lang, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "What is the TV Channel that shows the cartoon \"The Rise of the Blue Beetle!\"? List the TV Channel's series name.",
        "gold_select": "select TV_Channel.ser_name",
        "select_candidates": [
            "select TV_Channel.ser_name",
            "select Cartoon.chnl, TV_Channel.ser_name",
            "select TV_Channel.ser_name, Cartoon.chnl",
            "select TV_Channel.ser_name, TV_series.chnl"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel TV_series Cartoon",
            "TV_Channel TV_Channel TV_series Cartoon",
            "TV_Channel Cartoon"
        ],
        "align_scores": [
            0.9874131679534912,
            0.0001234675437444821,
            0.001004390069283545,
            0.00012200892524560913,
            0.0032656826078891754,
            0.00012340117245912552,
            0.0021251693833619356,
            9.936455171555281e-05
        ],
        "align_select": "select TV_Channel.ser_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the series name of the TV Channel that shows the cartoon \"The Rise of the Blue Beetle\"?",
        "gold_select": "select TV_Channel.ser_name",
        "select_candidates": [
            "select TV_Channel.ser_name",
            "select TV_Channel.ser_name, Cartoon.chnl",
            "select Cartoon.Title, TV_Channel.ser_name",
            "select TV_Channel.ser_name, TV_series.chnl"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel TV_series Cartoon",
            "TV_Channel Cartoon"
        ],
        "align_scores": [
            0.991803765296936,
            8.685588545631617e-05,
            0.0018114487174898386,
            7.689631456742063e-05,
            0.0003112057165708393,
            7.372738764388487e-05,
            0.0006002130685374141,
            6.727971776854247e-05
        ],
        "align_select": "select TV_Channel.ser_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List the title of all Cartoons showed on TV Channel with series name \"Sky Radio\".",
        "gold_select": "select Cartoon.Title",
        "select_candidates": [
            "select Cartoon.Title",
            "select Cartoon.Title, TV_Channel.ser_name",
            "select Cartoon.Title, TV_Channel.cntry",
            "select Cartoon.Title, TV_Channel.cont"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel TV_series Cartoon"
        ],
        "align_scores": [
            0.6704760789871216,
            0.0001531713642179966,
            0.000231568468734622,
            6.42530940240249e-05,
            0.00021974938863422722,
            6.550410034833476e-05,
            0.0001881668285932392,
            5.9721001889556646e-05
        ],
        "align_select": "select Cartoon.Title",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the title of all the cartools that are on the TV Channel with the series name \"Sky Radio\"?",
        "gold_select": "select Cartoon.Title",
        "select_candidates": [
            "select Cartoon.Title",
            "select Cartoon.Title, TV_Channel.cntry",
            "select Cartoon.Title, TV_Channel.lang",
            "select Cartoon.Title, TV_Channel.ser_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel TV_series Cartoon"
        ],
        "align_scores": [
            0.093967504799366,
            0.0001493901654612273,
            0.0002501967828720808,
            6.907505303388461e-05,
            0.00018320090021006763,
            6.649472925346345e-05,
            0.0003168247640132904,
            6.855734682176262e-05
        ],
        "align_select": "select Cartoon.Title",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List the Episode of all TV series sorted by rating.",
        "gold_select": "select TV_series.ep",
        "select_candidates": [
            "select TV_series.ep",
            "select TV_series.ep, TV_series.18_49_Rating_Share",
            "select TV_series.ep, TV_series.Viewers_m",
            "select TV_series.ep, TV_series.rtg"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "TV_series",
        "table_candidates": [
            "TV_series"
        ],
        "align_scores": [
            0.9937540888786316,
            0.9937540888786316,
            0.00015892584633547813,
            0.00015892584633547813,
            0.00019109886488877237,
            0.00019109886488877237,
            0.00028380623552948236,
            0.00028380623552948236
        ],
        "align_select": "select TV_series.ep",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "What are all of the episodes ordered by ratings?",
        "gold_select": "select TV_series.ep",
        "select_candidates": [
            "select TV_series.ep",
            "select TV_series.ep, TV_series.18_49_Rating_Share",
            "select TV_series.ep, TV_series.Air_Date",
            "select TV_series.ep, TV_series.rtg"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "TV_series",
        "table_candidates": [
            "TV_series"
        ],
        "align_scores": [
            0.8212205767631531,
            0.8212205767631531,
            0.000254963175393641,
            0.000254963175393641,
            0.00015746390272397548,
            0.00015746390272397548,
            0.00031305305310525,
            0.00031305305310525
        ],
        "align_select": "select TV_series.ep",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "List top 3 highest Rating TV series. List the TV series's Episode and Rating.",
        "gold_select": "select TV_series.ep, TV_series.rtg",
        "select_candidates": [
            "select TV_series.ep, TV_series.18_49_Rating_Share",
            "select TV_series.ep, TV_series.18_49_Rating_Share.",
            "select TV_series.ep, TV_series.Viewers_m",
            "select TV_series.ep, TV_series.rtg"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_series",
        "table_candidates": [
            "TV_series"
        ],
        "align_scores": [
            0.9925507307052612,
            8.924782741814852e-05,
            0.0026834949385374784,
            8.732494461582974e-05,
            0.9918166995048523,
            8.045412687351927e-05,
            0.988440752029419,
            7.20317184459418e-05
        ],
        "align_select": "select TV_series.ep, TV_series.18_49_Rating_Share",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What are 3 most highly rated episodes in the TV series table and what were those ratings?",
        "gold_select": "select TV_series.ep, TV_series.rtg",
        "select_candidates": [
            "select TV_series.ep, TV_series.18_49_Rating_Share",
            "select TV_series.ep, TV_series.rtg",
            "select TV_series.ep, TV_series.Air_Date",
            "select TV_series.ep, TV_series.Viewers_m"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_series",
        "table_candidates": [
            "TV_series"
        ],
        "align_scores": [
            0.9904442429542542,
            7.3954914114438e-05,
            0.9896727800369263,
            6.324179412331432e-05,
            0.00031710765324532986,
            7.064129749778658e-05,
            0.9196351170539856,
            6.179569754749537e-05
        ],
        "align_select": "select TV_series.ep, TV_series.18_49_Rating_Share",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What is the air date of TV series with Episode \"A Love of a Lifetime\"?",
        "gold_select": "select TV_series.Air_Date",
        "select_candidates": [
            "select TV_series.Air_Date",
            "select TV_series.id, TV_series.Air_Date",
            "select TV_series.Air_Date (or TV_series.rtg)",
            "select TV_series.Air_Date, TV_series.rtg"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_series",
        "table_candidates": [
            "TV_series"
        ],
        "align_scores": [
            0.9956091046333313,
            8.290804544230923e-05,
            0.00014862604439258575,
            6.464298348873854e-05,
            0.11075843125581741,
            7.087272388162091e-05,
            0.0001662491704337299,
            6.0870483139296994e-05
        ],
        "align_select": "select TV_series.Air_Date",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "When did the episode \"A Love of a Lifetime\" air?",
        "gold_select": "select TV_series.Air_Date",
        "select_candidates": [
            "select TV_series.Air_Date",
            "select TV_series.id, TV_series.Air_Date",
            "select avg(TV_series.Air_Date)",
            "select TV_series.Air_Date, TV_series.rtg"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_series",
        "table_candidates": [
            "TV_series"
        ],
        "align_scores": [
            0.993253767490387,
            8.067315502557904e-05,
            0.00015598905156366527,
            6.49498324492015e-05,
            0.01239099632948637,
            6.695661431876943e-05,
            0.00018983232439495623,
            6.640696665272117e-05
        ],
        "align_select": "select TV_series.Air_Date",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is Weekly Rank of TV series with Episode \"A Love of a Lifetime\"?",
        "gold_select": "select TV_series.wkly_rank",
        "select_candidates": [
            "select TV_series.wkly_rank",
            "select TV_series.id, TV_series.wkly_rank",
            "select TV_series.wkly_rank, TV_series.Viewers_m",
            "select TV_series.wkly_rank, TV_series.chnl"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_series",
        "table_candidates": [
            "TV_series"
        ],
        "align_scores": [
            0.9959543943405151,
            0.00010792969987960532,
            0.0001587916340213269,
            6.926620699232444e-05,
            0.0001591511827427894,
            6.240559014258906e-05,
            0.0002514299703761935,
            6.66658379486762e-05
        ],
        "align_select": "select TV_series.wkly_rank",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the weekly rank for the episode \"A Love of a Lifetime\"?",
        "gold_select": "select TV_series.wkly_rank",
        "select_candidates": [
            "select TV_series.wkly_rank",
            "select avg(TV_series.wkly_rank)",
            "select TV_series.wkly_rank, TV_series.Viewers_m",
            "select TV_series.wkly_rank, TV_series.chnl"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_series",
        "table_candidates": [
            "TV_series"
        ],
        "align_scores": [
            0.9957355260848999,
            8.096756209852174e-05,
            0.0031248368322849274,
            6.104540079832077e-05,
            0.00016555124602746218,
            6.248021236388013e-05,
            0.0002602390304673463,
            6.50531001156196e-05
        ],
        "align_select": "select TV_series.wkly_rank",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the TV Channel of TV series with Episode \"A Love of a Lifetime\"? List the TV Channel's series name.",
        "gold_select": "select TV_Channel.ser_name",
        "select_candidates": [
            "select TV_Channel.ser_name",
            "select TV_Channel.ser_name, TV_series.chnl",
            "select TV_Channel.ser_name, TV_series.chnl",
            "select TV_Channel.id, TV_Channel.ser_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel TV_series",
        "table_candidates": [
            "TV_Channel TV_series"
        ],
        "align_scores": [
            0.9906676411628723,
            9.956602298188955e-05,
            0.0011745677329599857,
            8.239511225838214e-05,
            0.0011745677329599857,
            8.239511225838214e-05,
            0.00024473306257277727,
            9.319852688349783e-05
        ],
        "align_select": "select TV_Channel.ser_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the name of the series that has the episode \"A Love of a Lifetime\"?",
        "gold_select": "select TV_Channel.ser_name",
        "select_candidates": [
            "select TV_Channel.ser_name",
            "select TV_Channel.ser_name, TV_series.chnl",
            "select TV_series.chnl",
            "select TV_series.ep"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel TV_series",
        "table_candidates": [
            "TV_series",
            "TV_Channel TV_series"
        ],
        "align_scores": [
            0.9770551919937134,
            0.00010379213927080855,
            0.0003843531012535095,
            7.137680222513154e-05,
            0.10724593698978424,
            0.00010109233699040487,
            0.5167618989944458,
            8.523304859409109e-05
        ],
        "align_select": "select TV_Channel.ser_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List the Episode of all TV series showed on TV Channel with series name \"Sky Radio\".",
        "gold_select": "select TV_series.ep",
        "select_candidates": [
            "select TV_series.ep",
            "select TV_series.ep, TV_Channel.cntry",
            "select TV_series.ep, TV_Channel.lang",
            "select TV_series.ep, TV_Channel.cont"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel TV_series",
        "table_candidates": [
            "TV_Channel TV_series"
        ],
        "align_scores": [
            0.6319696307182312,
            0.00013292768562678248,
            0.00016272073844447732,
            6.913158722454682e-05,
            0.00015522817557211965,
            6.538770685438067e-05,
            0.00017673132242634892,
            6.257119821384549e-05
        ],
        "align_select": "select TV_series.ep",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the episode for the TV series named \"Sky Radio\"?",
        "gold_select": "select TV_series.ep",
        "select_candidates": [
            "select TV_series.ep",
            "select TV_series.ep, TV_Channel.cntry",
            "select TV_series.ep, TV_Channel.ser_name",
            "select TV_series.ep, TV_Channel.lang"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel TV_series",
        "table_candidates": [
            "TV_Channel TV_series",
            "TV_Channel TV_series"
        ],
        "align_scores": [
            0.9872199296951294,
            7.332158565986902e-05,
            0.0001329872611677274,
            5.808856076328084e-05,
            0.00013005589426029474,
            6.017984196660109e-05,
            0.00014221607125364244,
            5.5494958360213786e-05
        ],
        "align_select": "select TV_series.ep",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the number of cartoons directed by each of the listed directors.",
        "gold_select": "select count(*), Cartoon.dir",
        "select_candidates": [
            "select Cartoon.dir, count(*)",
            "select count(*), Cartoon.dir",
            "select Cartoon.dir, count(*), Cartoon.wr",
            "select Cartoon.dir.c2, count(*)"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Cartoon",
        "table_candidates": [
            "Cartoon"
        ],
        "align_scores": [
            0.994952917098999,
            0.00023891887394711375,
            0.9942739605903625,
            0.0002060325350612402,
            0.00018576695583760738,
            7.807342626620084e-05,
            0.0005636318237520754,
            0.00013353761460166425
        ],
        "align_select": "select Cartoon.dir, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "How many cartoons did each director create?",
        "gold_select": "select count(*), Cartoon.dir",
        "select_candidates": [
            "select Cartoon.dir, count(*)",
            "select Cartoon.dir, count(*), Cartoon.wr",
            "select Cartoon.dir, count(*), Cartoon.prod_code",
            "select Cartoon.dir, count(*), Cartoon.Original_air_date"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Cartoon",
        "table_candidates": [
            "Cartoon"
        ],
        "align_scores": [
            0.9962950348854065,
            0.00019397333380766213,
            0.000344486819813028,
            7.822180486982688e-05,
            0.00019225812866352499,
            7.897587784100324e-05,
            0.0002683597558643669,
            6.690166628686711e-05
        ],
        "align_select": "select Cartoon.dir, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "Find the production code and channel of the most recently aired cartoon.",
        "gold_select": "select Cartoon.prod_code, Cartoon.chnl",
        "select_candidates": [
            "select Cartoon.prod_code, Cartoon.chnl",
            "select max(Cartoon.prod_code), max(Cartoon.chnl)",
            "select Cartoon.prod_code, Cartoon.chnl, t2.c7",
            "select Cartoon.prod_code, Cartoon.chnl, Cartoon.wr"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Cartoon",
        "table_candidates": [
            "Cartoon",
            "TV_Channel Cartoon",
            "TV_Channel TV_series Cartoon",
            "TV_series Cartoon"
        ],
        "align_scores": [
            0.9810268878936768,
            0.00010714318341342732,
            0.0015364798018708825,
            0.00013274274533614516,
            0.0002714559668675065,
            7.072858716128394e-05,
            0.0007516572950407863,
            8.747947140363976e-05
        ],
        "align_select": "select Cartoon.prod_code, Cartoon.chnl",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What is the produdction code and channel of the most recent cartoon?",
        "gold_select": "select Cartoon.prod_code, Cartoon.chnl",
        "select_candidates": [
            "select Cartoon.prod_code, Cartoon.chnl",
            "select max(Cartoon.prod_code), max(Cartoon.chnl)",
            "select Cartoon.prod_code, Cartoon.chnl, t2.c7",
            "select Cartoon.prod_code.c5, Cartoon.chnl"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Cartoon",
        "table_candidates": [
            "Cartoon",
            "TV_Channel Cartoon",
            "TV_Channel TV_series Cartoon",
            "TV_series Cartoon"
        ],
        "align_scores": [
            0.9611536860466003,
            0.00010368173388997093,
            0.0013492980506271124,
            8.10856290627271e-05,
            0.00022676773369312286,
            7.489520794479176e-05,
            0.00044085411354899406,
            8.863184484653175e-05
        ],
        "align_select": "select Cartoon.prod_code, Cartoon.chnl",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Find the package choice and series name of the TV channel that has high definition TV.",
        "gold_select": "select TV_Channel.Package_Option, TV_Channel.ser_name",
        "select_candidates": [
            "select TV_Channel.Package_Option, TV_Channel.ser_name",
            "select TV_Channel.ser_name, TV_Channel.Package_Option",
            "select TV_Channel.ppv, TV_Channel.ser_name",
            "select TV_Channel.par, TV_Channel.ser_name"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel",
            "TV_Channel TV_series"
        ],
        "align_scores": [
            0.9870135188102722,
            0.00016715105448383838,
            0.989661455154419,
            0.00016585348930675536,
            0.41800999641418457,
            0.00019613963377196342,
            0.9379777312278748,
            0.00016678331303410232
        ],
        "align_select": "select TV_Channel.Package_Option, TV_Channel.ser_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the package options and the name of the series for the TV Channel that supports high definition TV?",
        "gold_select": "select TV_Channel.Package_Option, TV_Channel.ser_name",
        "select_candidates": [
            "select TV_Channel.Package_Option, TV_Channel.ser_name",
            "select TV_Channel.ser_name, TV_Channel.Package_Option",
            "select TV_series.chnl, TV_series.ep",
            "select TV_series.chnl, TV_Channel.ser_name"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel TV_series"
        ],
        "align_scores": [
            0.989364504814148,
            0.00020365422824397683,
            0.9906488060951233,
            0.0001717697741696611,
            0.14551343023777008,
            0.00013384383055381477,
            0.0013885358348488808,
            0.00011647468636510894
        ],
        "align_select": "select TV_Channel.Package_Option, TV_Channel.ser_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "which countries' tv channels are playing some cartoon written by Todd Casey?",
        "gold_select": "select TV_Channel.cntry",
        "select_candidates": [
            "select TV_Channel.cntry",
            "select distinct TV_Channel.cntry",
            "select TV_Channel.cntry, TV_Channel.lang",
            "select distinct TV_Channel.cntry, TV_Channel.lang"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel Cartoon"
        ],
        "align_scores": [
            0.7608389258384705,
            0.945426344871521,
            0.52366703748703,
            0.0013387110084295273,
            0.0003301090036984533,
            0.00045193638652563095,
            0.0006347073358483613,
            0.00019039899052586406
        ],
        "align_select": "select TV_Channel.cntry",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the countries that have cartoons on TV that were written by Todd Casey?",
        "gold_select": "select TV_Channel.cntry",
        "select_candidates": [
            "select TV_Channel.cntry",
            "select distinct TV_Channel.cntry",
            "select count(distinct TV_Channel.cntry)",
            "select count(*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel Cartoon"
        ],
        "align_scores": [
            0.7297619581222534,
            0.007363712880760431,
            0.6099151968955994,
            0.09970931708812714,
            0.06129808723926544,
            0.00047357927542179823,
            0.07950031757354736,
            0.0017871387535706162
        ],
        "align_select": "select TV_Channel.cntry",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "which countries' tv channels are not playing any cartoon written by Todd Casey?",
        "gold_select": "select TV_Channel.cntry",
        "select_candidates": [
            "select TV_Channel.cntry",
            "select TV_Channel.cntry, TV_Channel.lang",
            "select distinct TV_Channel.cntry",
            "select TV_Channel.cntry, Cartoon.wr"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel Cartoon"
        ],
        "align_scores": [
            0.9649422764778137,
            0.9649422764778137,
            0.00027170972316525877,
            0.00027170972316525877,
            0.06887088716030121,
            0.06887088716030121,
            0.0013144810218364,
            0.0013144810218364
        ],
        "align_select": "select TV_Channel.cntry",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the countries that are not playing cartoons written by Todd Casey?",
        "gold_select": "select TV_Channel.cntry",
        "select_candidates": [
            "select TV_Channel.cntry",
            "select TV_Channel.cntry, Cartoon.wr",
            "select distinct TV_Channel.cntry",
            "select TV_Channel.cntry, TV_Channel.lang"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel Cartoon"
        ],
        "align_scores": [
            0.9656229615211487,
            0.9656229615211487,
            0.0018324885750189424,
            0.0018324885750189424,
            0.06729676574468613,
            0.06729676574468613,
            0.0001958133652806282,
            0.0001958133652806282
        ],
        "align_select": "select TV_Channel.cntry",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "Find the series name and country of the tv channel that is playing some cartoons directed by Ben Jones and Michael Chang?",
        "gold_select": "select TV_Channel.ser_name, TV_Channel.cntry",
        "select_candidates": [
            "select TV_Channel.ser_name, TV_Channel.cntry",
            "select TV_Channel.ser_name, TV_Channel.cntry, TV_Channel.lang",
            "select Cartoon.Title, TV_Channel.ser_name, TV_Channel.cntry",
            "select TV_Channel.ser_name, TV_Channel.cntry, Cartoon.chnl"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel TV_series Cartoon"
        ],
        "align_scores": [
            0.002625891473144293,
            0.000467302423203364,
            0.0001412521960446611,
            0.00011716041626641527,
            0.00018913240637630224,
            0.00012571252591442317,
            0.00021705463586840779,
            0.00015170458937063813
        ],
        "align_select": "select TV_Channel.ser_name, TV_Channel.cntry",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "What is the series name and country of all TV channels that are playing cartoons directed by Ben Jones and cartoons directed by Michael Chang?",
        "gold_select": "select TV_Channel.ser_name, TV_Channel.cntry",
        "select_candidates": [
            "select TV_Channel.ser_name, TV_Channel.cntry",
            "select TV_Channel.ser_name, TV_Channel.cntry, TV_Channel.lang",
            "select TV_Channel.ser_name, TV_Channel.cntry, TV_series.chnl",
            "select TV_Channel.ser_name, TV_Channel.cntry"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel TV_series Cartoon"
        ],
        "align_scores": [
            0.9812907576560974,
            0.003980649169534445,
            0.0003742836124729365,
            0.00014531963097397238,
            0.0005179420113563538,
            0.00018341571558266878,
            0.9812907576560974,
            0.003980649169534445
        ],
        "align_select": "select TV_Channel.ser_name, TV_Channel.cntry",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "find the pixel aspect ratio and nation of the tv channels that do not use English.",
        "gold_select": "select TV_Channel.par, TV_Channel.cntry",
        "select_candidates": [
            "select TV_Channel.hd, TV_Channel.cntry",
            "select TV_Channel.par, TV_Channel.cntry",
            "select TV_Channel.cont, TV_Channel.cntry",
            "select TV_Channel.lang, TV_Channel.hd"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel"
        ],
        "align_scores": [
            0.48663055896759033,
            0.00030689104460179806,
            0.9783738851547241,
            0.0005803527892567217,
            0.0006764891440980136,
            0.0001203923238790594,
            0.0013934100279584527,
            0.00020714785205200315
        ],
        "align_select": "select TV_Channel.par, TV_Channel.cntry",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the pixel aspect ratio and country of origin for all TV channels that do not use English?",
        "gold_select": "select TV_Channel.par, TV_Channel.cntry",
        "select_candidates": [
            "select TV_Channel.hd, TV_Channel.cntry",
            "select TV_Channel.cont, TV_Channel.cntry",
            "select TV_Channel.par, TV_Channel.cntry",
            "select TV_Channel.lang, TV_Channel.hd"
        ],
        "select_labels": [
            0.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel"
        ],
        "align_scores": [
            0.054648835211992264,
            0.00015396309026982635,
            0.00046646042028442025,
            9.044245962286368e-05,
            0.989476203918457,
            0.00038331112591549754,
            0.6416465640068054,
            0.00016236581723205745
        ],
        "align_select": "select TV_Channel.par, TV_Channel.cntry",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "find id of the tv channels that from the countries where have more than two tv channels.",
        "gold_select": "select TV_Channel.id",
        "select_candidates": [
            "select TV_Channel.id",
            "select TV_Channel.id, TV_Channel.cntry",
            "select t0.c, TV_Channel.cntry",
            "select TV_Channel.id, TV_Channel.cntry"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel",
            "TV_Channel TV_series",
            "TV_Channel Cartoon",
            "TV_Channel TV_series",
            "TV_Channel Cartoon",
            "TV_Channel TV_Channel"
        ],
        "align_scores": [
            0.9869353771209717,
            0.00016700464766472578,
            0.017693474888801575,
            0.00017932968330569565,
            0.0005014139460399747,
            8.903608249966055e-05,
            0.017693474888801575,
            0.00017932968330569565
        ],
        "align_select": "select TV_Channel.id",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the ids of all tv channels that have more than 2 TV channels?",
        "gold_select": "select TV_Channel.id",
        "select_candidates": [
            "select TV_Channel.id",
            "select TV_Channel.id, TV_Channel.cntry",
            "select TV_Channel.id, TV_Channel.lang",
            "select TV_Channel.id, TV_Channel.par"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel"
        ],
        "align_scores": [
            0.9768571257591248,
            0.000159341303515248,
            0.00035232066875323653,
            7.95953965280205e-05,
            0.0001365345815429464,
            8.871962927514687e-05,
            0.0003403048904146999,
            7.069992716424167e-05
        ],
        "align_select": "select TV_Channel.id",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "find the id of tv channels that do not play any cartoon directed by Ben Jones.",
        "gold_select": "select TV_Channel.id",
        "select_candidates": [
            "select TV_Channel.id",
            "select TV_Channel.id, Cartoon.chnl",
            "select TV_Channel.id, TV_Channel.ser_name",
            "select TV_Channel.id, Cartoon.dir"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel Cartoon"
        ],
        "align_scores": [
            0.9765847325325012,
            0.9765847325325012,
            0.0012112412368878722,
            0.0012112412368878722,
            0.0002446196449454874,
            0.0002446196449454874,
            0.0006833249353803694,
            0.0006833249353803694
        ],
        "align_select": "select TV_Channel.id",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the ids of the TV channels that do not have any cartoons directed by Ben Jones?",
        "gold_select": "select TV_Channel.id",
        "select_candidates": [
            "select TV_Channel.id",
            "select TV_Channel.id, Cartoon.chnl",
            "select TV_Channel.id, Cartoon.dir",
            "select TV_Channel.id, TV_Channel.ser_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel Cartoon"
        ],
        "align_scores": [
            0.9697651267051697,
            0.9697651267051697,
            0.0012806144077330828,
            0.0012806144077330828,
            0.0005379528156481683,
            0.0005379528156481683,
            0.0002696215233299881,
            0.0002696215233299881
        ],
        "align_select": "select TV_Channel.id",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "find the package option of the tv channel that do not have any cartoon directed by Ben Jones.",
        "gold_select": "select TV_Channel.Package_Option",
        "select_candidates": [
            "select TV_Channel.Package_Option",
            "select TV_Channel.Package_Option, Cartoon.dir",
            "select TV_Channel.id, TV_Channel.Package_Option",
            "select TV_Channel.par, TV_Channel.Package_Option"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel Cartoon"
        ],
        "align_scores": [
            0.9793640971183777,
            0.9899733066558838,
            0.00033652776619419456,
            0.0003620854113250971,
            0.00020741880871355534,
            0.00022271725174505264,
            0.00013437990855891258,
            0.0001585035934112966
        ],
        "align_select": "select TV_Channel.Package_Option",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the package options of all tv channels that are not playing any cartoons directed by Ben Jones?",
        "gold_select": "select TV_Channel.Package_Option",
        "select_candidates": [
            "select TV_Channel.Package_Option",
            "select TV_Channel.Package_Option, Cartoon.dir",
            "select TV_Channel.par, TV_Channel.Package_Option",
            "select TV_Channel.hd, TV_Channel.Package_Option"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel Cartoon"
        ],
        "align_scores": [
            0.9715648889541626,
            0.003954954911023378,
            0.00041641920688562095,
            0.0001731073425617069,
            0.0001535190676804632,
            0.00010769507935037836,
            0.00018785079009830952,
            0.00011964968143729493
        ],
        "align_select": "select TV_Channel.Package_Option",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "List all cartoon directed by \"Ben Jones\".",
        "gold_select": "select Cartoon.Title",
        "select_candidates": [
            "select Cartoon.Title",
            "select Cartoon.Title, Cartoon.dir",
            "select Cartoon.id",
            "select Cartoon.id, Cartoon.Title"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Cartoon",
        "table_candidates": [
            "Cartoon"
        ],
        "align_scores": [
            0.9943062663078308,
            0.00010172252950724214,
            0.00018158199964091182,
            6.633518933085725e-05,
            0.005234546959400177,
            6.321888940874487e-05,
            0.0002051809278782457,
            6.234504689928144e-05
        ],
        "align_select": "select Cartoon.Title",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of all cartoons directed by Ben Jones?",
        "gold_select": "select Cartoon.Title",
        "select_candidates": [
            "select Cartoon.Title",
            "select Cartoon.Title, Cartoon.dir",
            "select Cartoon.Title, Cartoon.chnl",
            "select Cartoon.Title, Cartoon.Written_by"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Cartoon",
        "table_candidates": [
            "Cartoon"
        ],
        "align_scores": [
            0.9936460256576538,
            0.0001680139102973044,
            0.00021287718845997006,
            5.739864718634635e-05,
            0.0003943484916817397,
            7.538891077274457e-05,
            0.00017273009871132672,
            5.4041487601352856e-05
        ],
        "align_select": "select Cartoon.Title",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "list all cartoon titles and their directors ordered by their air date",
        "gold_select": "select Cartoon.Title, Cartoon.dir",
        "select_candidates": [
            "select Cartoon.Title, Cartoon.dir",
            "select Cartoon.Title, Cartoon.dir, Cartoon.Original_air_date",
            "select Cartoon.Title, Cartoon.dir (ordered Cartoon.Original_air_date)",
            "select Cartoon.Title, Cartoon.dir (ordered by"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "Cartoon",
        "table_candidates": [
            "Cartoon"
        ],
        "align_scores": [
            0.9944643378257751,
            0.9944643378257751,
            0.00022764119785279036,
            0.00022764119785279036,
            0.0037535643205046654,
            0.0037535643205046654,
            0.03155336529016495,
            0.03155336529016495
        ],
        "align_select": "select Cartoon.Title, Cartoon.dir",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "What is the name and directors of all the cartoons that are ordered by air date?",
        "gold_select": "select Cartoon.Title, Cartoon.dir",
        "select_candidates": [
            "select Cartoon.Title, Cartoon.dir",
            "select Cartoon.Title, Cartoon.dir, Cartoon.Original_air_date",
            "select Cartoon.Title, Cartoon.dir, Cartoon.id",
            "select Cartoon.Title, Cartoon.dir, Cartoon.Written_by"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "Cartoon",
        "table_candidates": [
            "Cartoon"
        ],
        "align_scores": [
            0.1829545646905899,
            0.1829545646905899,
            0.00015878134581726044,
            0.00015878134581726044,
            0.0002859551750589162,
            0.0002859551750589162,
            0.00023597532708663493,
            0.00023597532708663493
        ],
        "align_select": "select Cartoon.Title, Cartoon.dir",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "List the title of all cartoon directed by \"Ben Jones\" or \"Brandon Vietti\".",
        "gold_select": "select Cartoon.Title",
        "select_candidates": [
            "select Cartoon.Title",
            "select Cartoon.Title, Cartoon.dir",
            "select Cartoon.Title, Cartoon.chnl",
            "select Cartoon.Title, Cartoon.id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Cartoon",
        "table_candidates": [
            "Cartoon"
        ],
        "align_scores": [
            0.9806109666824341,
            0.0002984514576382935,
            0.00019016947771888226,
            7.476519385818392e-05,
            0.0003319602401461452,
            8.954467193689197e-05,
            0.00020439247600734234,
            7.153775368351489e-05
        ],
        "align_select": "select Cartoon.Title",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the titles of all cartoons directed by Ben Jones or Brandon Vietti?",
        "gold_select": "select Cartoon.Title",
        "select_candidates": [
            "select Cartoon.Title",
            "select Cartoon.Title, Cartoon.dir",
            "select Cartoon.Title, Cartoon.chnl",
            "select Cartoon.Title, Cartoon.id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Cartoon",
        "table_candidates": [
            "Cartoon"
        ],
        "align_scores": [
            0.9900957345962524,
            0.0008301984635181725,
            0.00021926636691205204,
            7.393749547190964e-05,
            0.0004427201929502189,
            9.047344065038487e-05,
            0.00022923860524315387,
            7.53697968320921e-05
        ],
        "align_select": "select Cartoon.Title",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which country has the most of TV Channels? List the country and number of TV Channels it has.",
        "gold_select": "select TV_Channel.cntry, count(*)",
        "select_candidates": [
            "select TV_Channel.cntry, count(*)",
            "select TV_Channel.cntry, count(*), TV_Channel.Language",
            "select TV_Channel.cntry, count(TV_Channel.id)",
            "select TV_Channel.cntry.c2, count(*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-UNION-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel"
        ],
        "align_scores": [
            0.5638079643249512,
            0.00010268512414768338,
            0.00014551222557201982,
            6.981608748901635e-05,
            0.0005510105984285474,
            9.293317270930856e-05,
            0.0005253689596429467,
            8.220392919611186e-05
        ],
        "align_select": "select TV_Channel.cntry, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the country with the most number of TV Channels and how many does it have?",
        "gold_select": "select TV_Channel.cntry, count(*)",
        "select_candidates": [
            "select TV_Channel.cntry, count(*)",
            "select TV_Channel.cntry, count(*), TV_Channel.Language",
            "select TV_Channel.cntry.c2, count(*)",
            "select TV_Channel.cntry.c0, count(*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel"
        ],
        "align_scores": [
            0.9871417284011841,
            8.450145105598494e-05,
            0.0002003595291171223,
            5.927894380874932e-05,
            0.0024934117682278156,
            6.545059295604005e-05,
            0.0019766846671700478,
            6.978554301895201e-05
        ],
        "align_select": "select TV_Channel.cntry, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "List the number of different series names and contents in the TV Channel table.",
        "gold_select": "select count(distinct TV_Channel.ser_name), count(distinct TV_Channel.cont)",
        "select_candidates": [
            "select count(distinct TV_Channel.ser_name), count(distinct TV_series.chnl)",
            "select count(distinct TV_Channel.ser_name), count(distinct TV_series.Share)",
            "select count(distinct TV_Channel.ser_name), count(distinct TV_series.Viewers_m)",
            "select count(distinct TV_Channel.ser_name), TV_series.chnl"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel TV_series"
        ],
        "align_scores": [
            0.0012108208611607552,
            0.0012108208611607552,
            0.003241347847506404,
            0.003241347847506404,
            0.0002780463546514511,
            0.0002780463546514511,
            0.0017934426432475448,
            0.0017934426432475448
        ],
        "align_select": "select count(distinct TV_Channel.ser_name), count(distinct TV_series.chnl)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "How many different series and contents are listed in the TV Channel table?",
        "gold_select": "select count(distinct TV_Channel.ser_name), count(distinct TV_Channel.cont)",
        "select_candidates": [
            "select count(distinct TV_series.id), count(distinct TV_Channel.cont)",
            "select count(distinct TV_series.ep), count(distinct TV_Channel.cont)",
            "select count(distinct TV_series.Air_Date), count(distinct TV_Channel.cont)",
            "select count(distinct TV_series.Viewers_m), count(distinct TV_Channel.cont)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel TV_series",
            "TV_series Cartoon"
        ],
        "align_scores": [
            0.007463451009243727,
            0.0003635800094343722,
            0.0016127433627843857,
            0.00031663395930081606,
            0.00037091923877596855,
            0.0001547763531561941,
            0.00045098509872332215,
            0.00015601418272126466
        ],
        "align_select": "select count(distinct TV_series.id), count(distinct TV_Channel.cont)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What is the content of TV Channel with serial name \"Sky Radio\"?",
        "gold_select": "select TV_Channel.cont",
        "select_candidates": [
            "select TV_Channel.cont",
            "select TV_Channel.cont, TV_Channel.par",
            "select TV_Channel.cont, TV_Channel.hd",
            "select TV_Channel.cont, TV_Channel.Language"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel",
            "TV_Channel TV_series"
        ],
        "align_scores": [
            0.993359386920929,
            0.0001383041962981224,
            0.000161799238412641,
            6.369999027810991e-05,
            0.00018809437460731715,
            6.352879427140579e-05,
            0.0001586638973094523,
            6.421143189072609e-05
        ],
        "align_select": "select TV_Channel.cont",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the content of the series Sky Radio?",
        "gold_select": "select TV_Channel.cont",
        "select_candidates": [
            "select TV_series.ep",
            "select TV_series.ep, TV_series.Air_Date",
            "select TV_series.ep, TV_Channel.cntry",
            "select TV_series.ep, TV_Channel.cont"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel TV_series",
            "TV_Channel TV_series Cartoon"
        ],
        "align_scores": [
            0.23594866693019867,
            7.97328248154372e-05,
            0.00014308634854387492,
            6.112433038651943e-05,
            0.00015643428196199238,
            6.244154792511836e-05,
            0.00016528497508261353,
            6.298781227087602e-05
        ],
        "align_select": "select TV_series.ep",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the Package Option of TV Channel with serial name \"Sky Radio\"?",
        "gold_select": "select TV_Channel.Package_Option",
        "select_candidates": [
            "select TV_Channel.Package_Option",
            "select TV_Channel.Package_Option, TV_Channel.ppv",
            "select TV_Channel.Package_Option, TV_Channel.ser_name",
            "select TV_Channel.Package_Option, TV_Channel.par"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel"
        ],
        "align_scores": [
            0.9931334853172302,
            9.729913290357217e-05,
            0.00018323969561606646,
            7.01321114320308e-05,
            0.00015071564121171832,
            7.334019028348848e-05,
            0.00017193560779560357,
            6.532712723128498e-05
        ],
        "align_select": "select TV_Channel.Package_Option",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the Package Options of the TV Channels whose series names are Sky Radio?",
        "gold_select": "select TV_Channel.Package_Option",
        "select_candidates": [
            "select TV_Channel.Package_Option",
            "select TV_Channel.Package_Option, TV_Channel.ser_name",
            "select TV_Channel.hd, TV_Channel.Package_Option",
            "select TV_Channel.par, TV_Channel.Package_Option"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel",
            "TV_Channel TV_series"
        ],
        "align_scores": [
            0.8821687698364258,
            7.68877289374359e-05,
            0.000190506485523656,
            6.524252239614725e-05,
            0.00018254491442348808,
            6.0163198213558644e-05,
            0.00017812178703024983,
            6.286719144554809e-05
        ],
        "align_select": "select TV_Channel.Package_Option",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the TV Channel that shows the cartoon \"The Rise of the Blue Beetle!\"? List the TV Channel's series name.",
        "gold_select": "select TV_Channel.ser_name",
        "select_candidates": [
            "select TV_Channel.ser_name",
            "select TV_Channel.ser_name, Cartoon.chnl",
            "select Cartoon.chnl, TV_Channel.ser_name",
            "select TV_Channel.ser_name, TV_series.chnl"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel TV_series Cartoon"
        ],
        "align_scores": [
            0.9874131679534912,
            0.0001234675437444821,
            0.0032656826078891754,
            0.00012340117245912552,
            0.001004390069283545,
            0.00012200892524560913,
            0.0021251693833619356,
            9.936455171555281e-05
        ],
        "align_select": "select TV_Channel.ser_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the series name of the TV Channel that shows the cartoon \"The Rise of the Blue Beetle\"?",
        "gold_select": "select TV_Channel.ser_name",
        "select_candidates": [
            "select TV_Channel.ser_name",
            "select TV_Channel.ser_name, Cartoon.chnl",
            "select TV_Channel.ser_name, TV_series.chnl",
            "select Cartoon.Title, TV_Channel.ser_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel TV_series Cartoon",
            "TV_Channel Cartoon"
        ],
        "align_scores": [
            0.991803765296936,
            8.685588545631617e-05,
            0.0018114487174898386,
            7.689631456742063e-05,
            0.0006002130685374141,
            6.727971776854247e-05,
            0.0003112057165708393,
            7.372738764388487e-05
        ],
        "align_select": "select TV_Channel.ser_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List the title of all Cartoons showed on TV Channel with series name \"Sky Radio\".",
        "gold_select": "select Cartoon.Title",
        "select_candidates": [
            "select Cartoon.Title",
            "select Cartoon.Title, TV_Channel.ser_name",
            "select Cartoon.Title, TV_Channel.cntry",
            "select Cartoon.Title, TV_Channel.cont"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel TV_series Cartoon"
        ],
        "align_scores": [
            0.6704760789871216,
            0.0001531713642179966,
            0.000231568468734622,
            6.42530940240249e-05,
            0.00021974938863422722,
            6.550410034833476e-05,
            0.0001881668285932392,
            5.9721001889556646e-05
        ],
        "align_select": "select Cartoon.Title",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the title of all the cartools that are on the TV Channel with the series name \"Sky Radio\"?",
        "gold_select": "select Cartoon.Title",
        "select_candidates": [
            "select Cartoon.Title",
            "select Cartoon.Title, TV_Channel.cntry",
            "select Cartoon.Title, TV_Channel.ser_name",
            "select Cartoon.Title, TV_Channel.Language"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel TV_series Cartoon"
        ],
        "align_scores": [
            0.093967504799366,
            0.0001493901654612273,
            0.0002501967828720808,
            6.907505303388461e-05,
            0.0003168247640132904,
            6.855734682176262e-05,
            0.00018352715414948761,
            6.451605440815911e-05
        ],
        "align_select": "select Cartoon.Title",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List the Episode of all TV series sorted by rating.",
        "gold_select": "select TV_series.ep",
        "select_candidates": [
            "select TV_series.ep",
            "select TV_series.ep, TV_series.18_49_Rating_Share",
            "select TV_series.ep, TV_series.rtg",
            "select TV_series.ep, TV_series.Viewers_m"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "TV_series",
        "table_candidates": [
            "TV_series"
        ],
        "align_scores": [
            0.9937540888786316,
            0.9937540888786316,
            0.00015892584633547813,
            0.00015892584633547813,
            0.00028380623552948236,
            0.00028380623552948236,
            0.00019109886488877237,
            0.00019109886488877237
        ],
        "align_select": "select TV_series.ep",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "What are all of the episodes ordered by ratings?",
        "gold_select": "select TV_series.ep",
        "select_candidates": [
            "select TV_series.ep",
            "select TV_series.ep, TV_series.18_49_Rating_Share",
            "select TV_series.ep, TV_series.Air_Date",
            "select TV_series.ep, TV_series.rtg"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "TV_series",
        "table_candidates": [
            "TV_series"
        ],
        "align_scores": [
            0.8212205767631531,
            0.8212205767631531,
            0.000254963175393641,
            0.000254963175393641,
            0.00015746390272397548,
            0.00015746390272397548,
            0.00031305305310525,
            0.00031305305310525
        ],
        "align_select": "select TV_series.ep",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "List top 3 highest Rating TV series. List the TV series's Episode and Rating.",
        "gold_select": "select TV_series.ep, TV_series.rtg",
        "select_candidates": [
            "select TV_series.ep, TV_series.18_49_Rating_Share",
            "select TV_series.ep, TV_series.18_49_Rating_Share.",
            "select TV_series.ep, TV_series.rtg",
            "select TV_series.ep, TV_series.Viewers_m"
        ],
        "select_labels": [
            0.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_series",
        "table_candidates": [
            "TV_series"
        ],
        "align_scores": [
            0.9925507307052612,
            8.924782741814852e-05,
            0.0026834949385374784,
            8.732494461582974e-05,
            0.988440752029419,
            7.20317184459418e-05,
            0.9918166995048523,
            8.045412687351927e-05
        ],
        "align_select": "select TV_series.ep, TV_series.18_49_Rating_Share",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What are 3 most highly rated episodes in the TV series table and what were those ratings?",
        "gold_select": "select TV_series.ep, TV_series.rtg",
        "select_candidates": [
            "select TV_series.ep, TV_series.18_49_Rating_Share",
            "select TV_series.ep, TV_series.rtg",
            "select TV_series.ep, TV_series.Air_Date",
            "select TV_series.ep, TV_series.Viewers_m"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_series",
        "table_candidates": [
            "TV_series"
        ],
        "align_scores": [
            0.9904442429542542,
            7.3954914114438e-05,
            0.9896727800369263,
            6.324179412331432e-05,
            0.00031710765324532986,
            7.064129749778658e-05,
            0.9196351170539856,
            6.179569754749537e-05
        ],
        "align_select": "select TV_series.ep, TV_series.18_49_Rating_Share",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What is the air date of TV series with Episode \"A Love of a Lifetime\"?",
        "gold_select": "select TV_series.Air_Date",
        "select_candidates": [
            "select TV_series.Air_Date",
            "select TV_series.id, TV_series.Air_Date",
            "select TV_series.Air_Date (or TV_series.rtg)",
            "select TV_series.Air_Date, TV_series.rtg"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_series",
        "table_candidates": [
            "TV_series",
            "TV_Channel TV_series"
        ],
        "align_scores": [
            0.9956091046333313,
            8.290804544230923e-05,
            0.00014862604439258575,
            6.464298348873854e-05,
            0.11075843125581741,
            7.087272388162091e-05,
            0.0001662491704337299,
            6.0870483139296994e-05
        ],
        "align_select": "select TV_series.Air_Date",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "When did the episode \"A Love of a Lifetime\" air?",
        "gold_select": "select TV_series.Air_Date",
        "select_candidates": [
            "select TV_series.Air_Date",
            "select TV_series.id, TV_series.Air_Date",
            "select avg(TV_series.Air_Date)",
            "select TV_series.Air_Date, TV_series.rtg"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_series",
        "table_candidates": [
            "TV_series"
        ],
        "align_scores": [
            0.993253767490387,
            8.067315502557904e-05,
            0.00015598905156366527,
            6.49498324492015e-05,
            0.01239099632948637,
            6.695661431876943e-05,
            0.00018983232439495623,
            6.640696665272117e-05
        ],
        "align_select": "select TV_series.Air_Date",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is Weekly Rank of TV series with Episode \"A Love of a Lifetime\"?",
        "gold_select": "select TV_series.Weekly_Rank",
        "select_candidates": [
            "select TV_series.Weekly_Rank",
            "select TV_series.id, TV_series.Weekly_Rank",
            "select TV_series.Weekly_Rank, TV_series.chnl",
            "select TV_series.Weekly_Rank, TV_series.Viewers_m"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_series",
        "table_candidates": [
            "TV_series",
            "TV_Channel TV_series"
        ],
        "align_scores": [
            0.9959630370140076,
            0.00010749901412054896,
            0.00015752545732539147,
            6.657130870735273e-05,
            0.0002590145159047097,
            6.845941970823333e-05,
            0.0001394827850162983,
            6.26575929345563e-05
        ],
        "align_select": "select TV_series.Weekly_Rank",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the weekly rank for the episode \"A Love of a Lifetime\"?",
        "gold_select": "select TV_series.Weekly_Rank",
        "select_candidates": [
            "select TV_series.Weekly_Rank",
            "select avg(TV_series.Weekly_Rank)",
            "select TV_series.Weekly_Rank, TV_series.Viewers_m",
            "select TV_series.Weekly_Rank, TV_series.chnl"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_series",
        "table_candidates": [
            "TV_series",
            "TV_Channel TV_series"
        ],
        "align_scores": [
            0.9955797791481018,
            7.797031139489263e-05,
            0.00340626435354352,
            5.9415957366582006e-05,
            0.00014831528824288398,
            5.999750646878965e-05,
            0.0002608421491459012,
            6.532325642183423e-05
        ],
        "align_select": "select TV_series.Weekly_Rank",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the TV Channel of TV series with Episode \"A Love of a Lifetime\"? List the TV Channel's series name.",
        "gold_select": "select TV_Channel.ser_name",
        "select_candidates": [
            "select TV_Channel.ser_name",
            "select TV_Channel.ser_name, TV_series.chnl",
            "select TV_Channel.ser_name, TV_series.chnl",
            "select TV_Channel.id, TV_Channel.ser_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel TV_series",
        "table_candidates": [
            "TV_Channel TV_series"
        ],
        "align_scores": [
            0.9906676411628723,
            9.956602298188955e-05,
            0.0011745677329599857,
            8.239511225838214e-05,
            0.0011745677329599857,
            8.239511225838214e-05,
            0.00024473306257277727,
            9.319852688349783e-05
        ],
        "align_select": "select TV_Channel.ser_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the name of the series that has the episode \"A Love of a Lifetime\"?",
        "gold_select": "select TV_Channel.ser_name",
        "select_candidates": [
            "select TV_Channel.ser_name",
            "select TV_Channel.ser_name, TV_series.chnl",
            "select Cartoon.Title, TV_Channel.ser_name",
            "select TV_series.ep"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel TV_series",
        "table_candidates": [
            "TV_series",
            "TV_Channel TV_series"
        ],
        "align_scores": [
            0.9770551919937134,
            0.00010379213927080855,
            0.0003843531012535095,
            7.137680222513154e-05,
            0.0003613350563682616,
            7.959130016388372e-05,
            0.5167618989944458,
            8.523304859409109e-05
        ],
        "align_select": "select TV_Channel.ser_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List the Episode of all TV series showed on TV Channel with series name \"Sky Radio\".",
        "gold_select": "select TV_series.ep",
        "select_candidates": [
            "select TV_series.ep",
            "select TV_series.ep, TV_Channel.cntry",
            "select TV_series.ep, TV_Channel.cont",
            "select TV_series.ep, TV_Channel.par"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel TV_series",
        "table_candidates": [
            "TV_Channel TV_series"
        ],
        "align_scores": [
            0.6319696307182312,
            0.00013292768562678248,
            0.00016272073844447732,
            6.913158722454682e-05,
            0.00017673132242634892,
            6.257119821384549e-05,
            0.00015757788787595928,
            6.306161230895668e-05
        ],
        "align_select": "select TV_series.ep",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the episode for the TV series named \"Sky Radio\"?",
        "gold_select": "select TV_series.ep",
        "select_candidates": [
            "select TV_series.ep",
            "select TV_series.ep, TV_Channel.cntry",
            "select TV_series.ep, TV_Channel.ser_name",
            "select TV_series.ep, TV_Channel.cont"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel TV_series",
        "table_candidates": [
            "TV_Channel TV_series"
        ],
        "align_scores": [
            0.9872199296951294,
            7.332158565986902e-05,
            0.0001329872611677274,
            5.808856076328084e-05,
            0.00013005589426029474,
            6.017984196660109e-05,
            0.00014089223986957222,
            5.634136323351413e-05
        ],
        "align_select": "select TV_series.ep",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the number of cartoons directed by each of the listed directors.",
        "gold_select": "select count(*), Cartoon.dir",
        "select_candidates": [
            "select Cartoon.dir, count(*)",
            "select count(*), Cartoon.dir",
            "select Cartoon.dir, count(*), Cartoon.Written_by",
            "select Cartoon.dir.c2, count(*)"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Cartoon",
        "table_candidates": [
            "Cartoon"
        ],
        "align_scores": [
            0.994952917098999,
            0.00023891887394711375,
            0.9942739605903625,
            0.0002060325350612402,
            0.00029382822685875,
            7.399624155368656e-05,
            0.0005636318237520754,
            0.00013353761460166425
        ],
        "align_select": "select Cartoon.dir, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "How many cartoons did each director create?",
        "gold_select": "select count(*), Cartoon.dir",
        "select_candidates": [
            "select Cartoon.dir, count(*)",
            "select Cartoon.dir, count(*), Cartoon.Written_by",
            "select Cartoon.dir, count(*), Cartoon.prod_code",
            "select Cartoon.dir, count(*), Cartoon.chnl"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Cartoon",
        "table_candidates": [
            "Cartoon"
        ],
        "align_scores": [
            0.9962950348854065,
            0.00019397333380766213,
            0.0003396701067686081,
            7.943283708300442e-05,
            0.00019225812866352499,
            7.897587784100324e-05,
            0.000496855063829571,
            8.234515553340316e-05
        ],
        "align_select": "select Cartoon.dir, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "Find the production code and channel of the most recently aired cartoon.",
        "gold_select": "select Cartoon.prod_code, Cartoon.chnl",
        "select_candidates": [
            "select Cartoon.prod_code, Cartoon.chnl",
            "select Cartoon.prod_code, Cartoon.chnl, t2.c7",
            "select max(Cartoon.prod_code), max(Cartoon.chnl)",
            "select Cartoon.prod_code, Cartoon.chnl, max(Cartoon.Original_air_date)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Cartoon",
        "table_candidates": [
            "Cartoon",
            "TV_Channel Cartoon",
            "TV_series Cartoon",
            "TV_Channel TV_series Cartoon"
        ],
        "align_scores": [
            0.9810268878936768,
            0.00010714318341342732,
            0.0002714559668675065,
            7.072858716128394e-05,
            0.0015364798018708825,
            0.00013274274533614516,
            0.0004494792956393212,
            6.207641854416579e-05
        ],
        "align_select": "select Cartoon.prod_code, Cartoon.chnl",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What is the produdction code and channel of the most recent cartoon?",
        "gold_select": "select Cartoon.prod_code, Cartoon.chnl",
        "select_candidates": [
            "select Cartoon.prod_code, Cartoon.chnl",
            "select max(Cartoon.prod_code), max(Cartoon.chnl)",
            "select Cartoon.prod_code, Cartoon.chnl, t2.c7",
            "select Cartoon.prod_code.c5, Cartoon.chnl"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Cartoon",
        "table_candidates": [
            "Cartoon",
            "TV_Channel Cartoon",
            "TV_Channel TV_series Cartoon",
            "TV_series Cartoon"
        ],
        "align_scores": [
            0.9611536860466003,
            0.00010368173388997093,
            0.0013492980506271124,
            8.10856290627271e-05,
            0.00022676773369312286,
            7.489520794479176e-05,
            0.00044085411354899406,
            8.863184484653175e-05
        ],
        "align_select": "select Cartoon.prod_code, Cartoon.chnl",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Find the package choice and series name of the TV channel that has high definition TV.",
        "gold_select": "select TV_Channel.Package_Option, TV_Channel.ser_name",
        "select_candidates": [
            "select TV_Channel.Package_Option, TV_Channel.ser_name",
            "select TV_Channel.ser_name, TV_Channel.Package_Option",
            "select TV_Channel.ppv, TV_Channel.ser_name",
            "select TV_Channel.par, TV_Channel.ser_name"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel",
            "TV_Channel TV_series"
        ],
        "align_scores": [
            0.9870135188102722,
            0.00016715105448383838,
            0.989661455154419,
            0.00016585348930675536,
            0.41800999641418457,
            0.00019613963377196342,
            0.9379777312278748,
            0.00016678331303410232
        ],
        "align_select": "select TV_Channel.Package_Option, TV_Channel.ser_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the package options and the name of the series for the TV Channel that supports high definition TV?",
        "gold_select": "select TV_Channel.Package_Option, TV_Channel.ser_name",
        "select_candidates": [
            "select TV_Channel.Package_Option, TV_Channel.ser_name",
            "select TV_series.chnl, TV_series.ep",
            "select TV_series.chnl, TV_Channel.ser_name",
            "select TV_Channel.Package_Option, TV_series.ep"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel TV_series",
            "TV_Channel TV_series Cartoon"
        ],
        "align_scores": [
            0.989364504814148,
            0.00020365422824397683,
            0.14551343023777008,
            0.00013384383055381477,
            0.0013885358348488808,
            0.00011647468636510894,
            0.4682178795337677,
            9.715106716612354e-05
        ],
        "align_select": "select TV_Channel.Package_Option, TV_Channel.ser_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "which countries' tv channels are playing some cartoon written by Todd Casey?",
        "gold_select": "select TV_Channel.cntry",
        "select_candidates": [
            "select TV_Channel.cntry",
            "select distinct TV_Channel.cntry",
            "select TV_Channel.cntry, TV_Channel.Language",
            "select distinct TV_Channel.cntry, TV_Channel.Language"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel Cartoon"
        ],
        "align_scores": [
            0.7608389258384705,
            0.1987437754869461,
            0.52366703748703,
            0.0008508757455274463,
            0.00028739089611917734,
            0.00020979266264475882,
            0.00037194276228547096,
            0.00013781960296910256
        ],
        "align_select": "select TV_Channel.cntry",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the countries that have cartoons on TV that were written by Todd Casey?",
        "gold_select": "select TV_Channel.cntry",
        "select_candidates": [
            "select TV_Channel.cntry",
            "select distinct TV_Channel.cntry",
            "select count(distinct TV_Channel.cntry)",
            "select TV_Channel.cntry, TV_Channel.Language"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel Cartoon"
        ],
        "align_scores": [
            0.7297619581222534,
            0.007363712880760431,
            0.6099151968955994,
            0.09970931708812714,
            0.06129808723926544,
            0.00047357927542179823,
            0.0006305024726316333,
            0.00012259367213118821
        ],
        "align_select": "select TV_Channel.cntry",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "which countries' tv channels are not playing any cartoon written by Todd Casey?",
        "gold_select": "select TV_Channel.cntry",
        "select_candidates": [
            "select TV_Channel.cntry",
            "select distinct TV_Channel.cntry",
            "select TV_Channel.cntry, TV_Channel.Language",
            "select TV_Channel.id, TV_Channel.cntry"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel Cartoon"
        ],
        "align_scores": [
            0.9649422764778137,
            0.9649422764778137,
            0.06887088716030121,
            0.06887088716030121,
            0.0002561846631579101,
            0.0002561846631579101,
            0.00022305813035927713,
            0.00022305813035927713
        ],
        "align_select": "select TV_Channel.cntry",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the countries that are not playing cartoons written by Todd Casey?",
        "gold_select": "select TV_Channel.cntry",
        "select_candidates": [
            "select TV_Channel.cntry",
            "select TV_Channel.cntry, TV_Channel.Language",
            "select TV_Channel.cntry, Cartoon.chnl",
            "select distinct TV_Channel.cntry"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel Cartoon"
        ],
        "align_scores": [
            0.9656229615211487,
            0.9656229615211487,
            0.00019373599207028747,
            0.00019373599207028747,
            0.0015394305810332298,
            0.0015394305810332298,
            0.06729676574468613,
            0.06729676574468613
        ],
        "align_select": "select TV_Channel.cntry",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "Find the series name and country of the tv channel that is playing some cartoons directed by Ben Jones and Michael Chang?",
        "gold_select": "select TV_Channel.ser_name, TV_Channel.cntry",
        "select_candidates": [
            "select TV_Channel.ser_name, TV_Channel.cntry",
            "select TV_Channel.ser_name, TV_Channel.cntry, TV_Channel.Language",
            "select TV_Channel.ser_name, TV_Channel.cntry, TV_Channel.Language",
            "select TV_Channel.ser_name, TV_Channel.cntry"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel TV_series Cartoon"
        ],
        "align_scores": [
            0.002625891473144293,
            0.000467302423203364,
            0.00013440308975987136,
            9.968800441129133e-05,
            0.00013440308975987136,
            9.968800441129133e-05,
            0.002625891473144293,
            0.000467302423203364
        ],
        "align_select": "select TV_Channel.ser_name, TV_Channel.cntry",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "What is the series name and country of all TV channels that are playing cartoons directed by Ben Jones and cartoons directed by Michael Chang?",
        "gold_select": "select TV_Channel.ser_name, TV_Channel.cntry",
        "select_candidates": [
            "select TV_Channel.ser_name, TV_Channel.cntry",
            "select TV_Channel.ser_name, TV_Channel.cntry, TV_Channel.Language",
            "select TV_Channel.ser_name, TV_Channel.cntry, TV_Channel.Language",
            "select TV_Channel.ser_name, TV_Channel.cntry"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel TV_series Cartoon"
        ],
        "align_scores": [
            0.9812907576560974,
            0.003980649169534445,
            0.00024378149828407913,
            0.00010689030750654638,
            0.00024378149828407913,
            0.00010689030750654638,
            0.9812907576560974,
            0.003980649169534445
        ],
        "align_select": "select TV_Channel.ser_name, TV_Channel.cntry",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "find the pixel aspect ratio and nation of the tv channels that do not use English.",
        "gold_select": "select TV_Channel.par, TV_Channel.cntry",
        "select_candidates": [
            "select TV_Channel.hd, TV_Channel.cntry",
            "select TV_Channel.par, TV_Channel.cntry",
            "select TV_Channel.cont, TV_Channel.cntry",
            "select TV_Channel.Language, TV_Channel.hd"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel"
        ],
        "align_scores": [
            0.48663055896759033,
            0.00030689104460179806,
            0.9783738851547241,
            0.0005803527892567217,
            0.0006764891440980136,
            0.0001203923238790594,
            0.0053053488954901695,
            0.00013717991532757878
        ],
        "align_select": "select TV_Channel.par, TV_Channel.cntry",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the pixel aspect ratio and country of origin for all TV channels that do not use English?",
        "gold_select": "select TV_Channel.par, TV_Channel.cntry",
        "select_candidates": [
            "select TV_Channel.hd, TV_Channel.cntry",
            "select TV_Channel.cont, TV_Channel.cntry",
            "select TV_Channel.par, TV_Channel.cntry",
            "select TV_Channel.Language, TV_Channel.hd"
        ],
        "select_labels": [
            0.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel"
        ],
        "align_scores": [
            0.054648835211992264,
            0.00015396309026982635,
            0.00046646042028442025,
            9.044245962286368e-05,
            0.989476203918457,
            0.00038331112591549754,
            0.017697470262646675,
            0.00011529539187904447
        ],
        "align_select": "select TV_Channel.par, TV_Channel.cntry",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "find id of the tv channels that from the countries where have more than two tv channels.",
        "gold_select": "select TV_Channel.id",
        "select_candidates": [
            "select TV_Channel.id",
            "select TV_Channel.id, TV_Channel.cntry",
            "select t0.c, TV_Channel.cntry",
            "select TV_Channel.id, TV_Channel.cntry"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel",
            "TV_Channel TV_series Cartoon",
            "TV_Channel TV_series Cartoon",
            "TV_Channel TV_series",
            "TV_Channel Cartoon",
            "TV_Channel Cartoon"
        ],
        "align_scores": [
            0.9869353771209717,
            0.00016700464766472578,
            0.017693474888801575,
            0.00017932968330569565,
            0.0005014139460399747,
            8.903608249966055e-05,
            0.017693474888801575,
            0.00017932968330569565
        ],
        "align_select": "select TV_Channel.id",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the ids of all tv channels that have more than 2 TV channels?",
        "gold_select": "select TV_Channel.id",
        "select_candidates": [
            "select TV_Channel.id",
            "select TV_Channel.id, TV_Channel.par",
            "select TV_Channel.id, TV_Channel.ser_name",
            "select TV_Channel.id, TV_Channel.ppv"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel"
        ],
        "align_scores": [
            0.9768571257591248,
            0.000159341303515248,
            0.0003403048904146999,
            7.069992716424167e-05,
            0.00043274773634038866,
            9.097236033994704e-05,
            0.00033970928052440286,
            9.5147974207066e-05
        ],
        "align_select": "select TV_Channel.id",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "find the id of tv channels that do not play any cartoon directed by Ben Jones.",
        "gold_select": "select TV_Channel.id",
        "select_candidates": [
            "select TV_Channel.id",
            "select TV_Channel.id, Cartoon.chnl",
            "select TV_Channel.id, TV_Channel.ser_name",
            "select TV_Channel.id, Cartoon.dir"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel Cartoon"
        ],
        "align_scores": [
            0.9765847325325012,
            0.9765847325325012,
            0.0012112412368878722,
            0.0012112412368878722,
            0.0002446196449454874,
            0.0002446196449454874,
            0.0006833249353803694,
            0.0006833249353803694
        ],
        "align_select": "select TV_Channel.id",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the ids of the TV channels that do not have any cartoons directed by Ben Jones?",
        "gold_select": "select TV_Channel.id",
        "select_candidates": [
            "select TV_Channel.id",
            "select TV_Channel.id, Cartoon.chnl",
            "select TV_Channel.id, Cartoon.dir",
            "select TV_Channel.id, TV_Channel.ser_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel Cartoon"
        ],
        "align_scores": [
            0.9697651267051697,
            0.9697651267051697,
            0.0012806144077330828,
            0.0012806144077330828,
            0.0005379528156481683,
            0.0005379528156481683,
            0.0002696215233299881,
            0.0002696215233299881
        ],
        "align_select": "select TV_Channel.id",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "find the package option of the tv channel that do not have any cartoon directed by Ben Jones.",
        "gold_select": "select TV_Channel.Package_Option",
        "select_candidates": [
            "select TV_Channel.Package_Option",
            "select TV_Channel.id, TV_Channel.Package_Option",
            "select TV_Channel.par, TV_Channel.Package_Option",
            "select TV_Channel.Package_Option, Cartoon.dir"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel Cartoon"
        ],
        "align_scores": [
            0.9793640971183777,
            0.0031128341797739267,
            0.00020741880871355534,
            0.00016301455616485327,
            0.00013437990855891258,
            0.00011186963820364326,
            0.00033652776619419456,
            0.00019080571655649692
        ],
        "align_select": "select TV_Channel.Package_Option",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the package options of all tv channels that are not playing any cartoons directed by Ben Jones?",
        "gold_select": "select TV_Channel.Package_Option",
        "select_candidates": [
            "select TV_Channel.Package_Option",
            "select TV_Channel.Package_Option, Cartoon.dir",
            "select TV_Channel.par, TV_Channel.Package_Option",
            "select TV_Channel.hd, TV_Channel.Package_Option"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel Cartoon"
        ],
        "align_scores": [
            0.9715648889541626,
            0.003954954911023378,
            0.00041641920688562095,
            0.0001731073425617069,
            0.0001535190676804632,
            0.00010769507935037836,
            0.00018785079009830952,
            0.00011964968143729493
        ],
        "align_select": "select TV_Channel.Package_Option",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "List all cartoon directed by \"Ben Jones\".",
        "gold_select": "select Cartoon.Title",
        "select_candidates": [
            "select Cartoon.Title",
            "select Cartoon.Title, Cartoon.dir",
            "select Cartoon.id",
            "select Cartoon.id, Cartoon.Title"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Cartoon",
        "table_candidates": [
            "Cartoon"
        ],
        "align_scores": [
            0.9943062663078308,
            0.00010172252950724214,
            0.00018158199964091182,
            6.633518933085725e-05,
            0.005234546959400177,
            6.321888940874487e-05,
            0.0002051809278782457,
            6.234504689928144e-05
        ],
        "align_select": "select Cartoon.Title",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of all cartoons directed by Ben Jones?",
        "gold_select": "select Cartoon.Title",
        "select_candidates": [
            "select Cartoon.Title",
            "select Cartoon.Title, Cartoon.dir",
            "select Cartoon.Title, Cartoon.chnl",
            "select Cartoon.Title, Cartoon.wr"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Cartoon",
        "table_candidates": [
            "Cartoon"
        ],
        "align_scores": [
            0.9936460256576538,
            0.0001680139102973044,
            0.00021287718845997006,
            5.739864718634635e-05,
            0.0003943484916817397,
            7.538891077274457e-05,
            0.00021608966926578432,
            6.020285945851356e-05
        ],
        "align_select": "select Cartoon.Title",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many cartoons were written by \"Joseph Kuhr\"?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Cartoon.id",
            "select count(*), Cartoon.Title",
            "select count(*), Cartoon.wr"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Cartoon",
        "table_candidates": [
            "Cartoon",
            "TV_series Cartoon",
            "TV_Channel Cartoon"
        ],
        "align_scores": [
            0.9933307766914368,
            0.00012517865980044007,
            0.00028623611433431506,
            6.700509402435273e-05,
            0.00025870694662444293,
            6.813623622292653e-05,
            0.0003834681410808116,
            7.70619953982532e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the number of cartoones written by Joseph Kuhr?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Cartoon.id",
            "select count(*), Cartoon.Title",
            "select count(*), Cartoon.wr"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Cartoon",
        "table_candidates": [
            "Cartoon",
            "TV_series Cartoon"
        ],
        "align_scores": [
            0.9892503023147583,
            0.0003021026204805821,
            0.00025901402113959193,
            0.0001740011211950332,
            0.00024879994452930987,
            0.0006547386874444783,
            0.0003174821613356471,
            0.022964539006352425
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "list all cartoon titles and their directors ordered by their air date",
        "gold_select": "select Cartoon.Title, Cartoon.dir",
        "select_candidates": [
            "select Cartoon.Title, Cartoon.dir",
            "select Cartoon.Title, Cartoon.dir, Cartoon.Original_air_date",
            "select Cartoon.Title, Cartoon.dir (ordered Cartoon.Original_air_date)",
            "select Cartoon.Title, Cartoon.dir (ordered by"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "Cartoon",
        "table_candidates": [
            "Cartoon"
        ],
        "align_scores": [
            0.9944643378257751,
            0.9944643378257751,
            0.00022764119785279036,
            0.00022764119785279036,
            0.0037535643205046654,
            0.0037535643205046654,
            0.03155336529016495,
            0.03155336529016495
        ],
        "align_select": "select Cartoon.Title, Cartoon.dir",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "What is the name and directors of all the cartoons that are ordered by air date?",
        "gold_select": "select Cartoon.Title, Cartoon.dir",
        "select_candidates": [
            "select Cartoon.Title, Cartoon.dir",
            "select Cartoon.Title, Cartoon.dir, Cartoon.Original_air_date",
            "select Cartoon.Title, Cartoon.dir, Cartoon.wr",
            "select Cartoon.Title, Cartoon.dir, Cartoon.id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "Cartoon",
        "table_candidates": [
            "Cartoon"
        ],
        "align_scores": [
            0.1829545646905899,
            0.1829545646905899,
            0.00015878134581726044,
            0.00015878134581726044,
            0.00031421438325196505,
            0.00031421438325196505,
            0.0002859551750589162,
            0.0002859551750589162
        ],
        "align_select": "select Cartoon.Title, Cartoon.dir",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "List the title of all cartoon directed by \"Ben Jones\" or \"Brandon Vietti\".",
        "gold_select": "select Cartoon.Title",
        "select_candidates": [
            "select Cartoon.Title",
            "select Cartoon.Title, Cartoon.dir",
            "select Cartoon.Title, Cartoon.chnl",
            "select Cartoon.Title, Cartoon.wr"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Cartoon",
        "table_candidates": [
            "Cartoon"
        ],
        "align_scores": [
            0.9806109666824341,
            0.0002984514576382935,
            0.00019016947771888226,
            7.476519385818392e-05,
            0.0003319602401461452,
            8.954467193689197e-05,
            0.00022688299941364676,
            8.101065031951293e-05
        ],
        "align_select": "select Cartoon.Title",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the titles of all cartoons directed by Ben Jones or Brandon Vietti?",
        "gold_select": "select Cartoon.Title",
        "select_candidates": [
            "select Cartoon.Title",
            "select Cartoon.Title, Cartoon.dir",
            "select Cartoon.Title, Cartoon.chnl",
            "select Cartoon.Title, Cartoon.id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Cartoon",
        "table_candidates": [
            "Cartoon"
        ],
        "align_scores": [
            0.9900957345962524,
            0.0008301984635181725,
            0.00021926636691205204,
            7.393749547190964e-05,
            0.0004427201929502189,
            9.047344065038487e-05,
            0.00022923860524315387,
            7.53697968320921e-05
        ],
        "align_select": "select Cartoon.Title",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which country has the most of TV Channels? List the country and number of TV Channels it has.",
        "gold_select": "select TV_Channel.cntry, count(*)",
        "select_candidates": [
            "select TV_Channel.cntry, count(*)",
            "select TV_Channel.cntry, count(TV_Channel.id)",
            "select TV_Channel.cntry, count(*), TV_Channel.Language",
            "select TV_Channel.cntry.c2, count(*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-UNION-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel"
        ],
        "align_scores": [
            0.5638079643249512,
            0.00010268512414768338,
            0.0005510105984285474,
            9.293317270930856e-05,
            0.00014551222557201982,
            6.981608748901635e-05,
            0.0005253689596429467,
            8.220392919611186e-05
        ],
        "align_select": "select TV_Channel.cntry, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the country with the most number of TV Channels and how many does it have?",
        "gold_select": "select TV_Channel.cntry, count(*)",
        "select_candidates": [
            "select TV_Channel.cntry, count(*)",
            "select TV_Channel.cntry, count(*), TV_Channel.Language",
            "select TV_Channel.cntry.c2, count(*)",
            "select TV_Channel.cntry.c0, count(*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel"
        ],
        "align_scores": [
            0.9871417284011841,
            8.450145105598494e-05,
            0.0002003595291171223,
            5.927894380874932e-05,
            0.0024934117682278156,
            6.545059295604005e-05,
            0.0019766846671700478,
            6.978554301895201e-05
        ],
        "align_select": "select TV_Channel.cntry, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "List the number of different series names and contents in the TV Channel table.",
        "gold_select": "select count(distinct TV_Channel.ser_name), count(distinct TV_Channel.Content)",
        "select_candidates": [
            "select count(distinct TV_Channel.ser_name), count(distinct TV_Channel.Content)",
            "select count(distinct TV_Channel.ser_name)., count(distinct TV_Channel.Content)",
            "select count(distinct TV_Channel.ser_name, TV_Channel.Content)",
            "select count(distinct TV_Channel.ser_name), TV_Channel.Content"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel TV_series",
            "TV_Channel Cartoon"
        ],
        "align_scores": [
            0.995424211025238,
            0.995424211025238,
            0.0009215170866809785,
            0.0009215170866809785,
            0.8703696727752686,
            0.8703696727752686,
            0.8894980549812317,
            0.8894980549812317
        ],
        "align_select": "select count(distinct TV_Channel.ser_name), count(distinct TV_Channel.Content)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "How many different series and contents are listed in the TV Channel table?",
        "gold_select": "select count(distinct TV_Channel.ser_name), count(distinct TV_Channel.Content)",
        "select_candidates": [
            "select count(distinct TV_series.id), count(distinct TV_Channel.Content)",
            "select count(distinct TV_series.ep), TV_Channel.Content",
            "select count(distinct TV_series.id), TV_Channel.Content",
            "select count(distinct TV_series.ep), count(distinct TV_Channel.Content)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel TV_series",
            "TV_Channel Cartoon"
        ],
        "align_scores": [
            0.011593536473810673,
            8.799375791568309e-05,
            0.0006147426320239902,
            0.00010570498852757737,
            0.022720934823155403,
            0.00010586528514977545,
            0.0016861510230228305,
            8.33680314826779e-05
        ],
        "align_select": "select count(distinct TV_series.id), count(distinct TV_Channel.Content)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What is the content of TV Channel with serial name \"Sky Radio\"?",
        "gold_select": "select TV_Channel.Content",
        "select_candidates": [
            "select TV_Channel.Content",
            "select TV_Channel.Content, TV_Channel.par",
            "select TV_Channel.ser_name, TV_Channel.Content",
            "select TV_Channel.Content, TV_Channel.Language"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel",
            "TV_Channel TV_series Cartoon"
        ],
        "align_scores": [
            0.9928717017173767,
            0.00010954932076856494,
            0.00015433895168825984,
            6.147600652184337e-05,
            0.00023815265740267932,
            7.937468035379425e-05,
            0.0001493283489253372,
            5.971644350211136e-05
        ],
        "align_select": "select TV_Channel.Content",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the content of the series Sky Radio?",
        "gold_select": "select TV_Channel.Content",
        "select_candidates": [
            "select TV_Channel.Content",
            "select TV_Channel.Content, TV_Channel.par",
            "select TV_Channel.Content, TV_Channel.Language",
            "select TV_Channel.Content, TV_Channel.ppv"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel TV_series",
            "TV_Channel"
        ],
        "align_scores": [
            0.9030343890190125,
            7.180869579315186e-05,
            0.00017006670532282442,
            6.178244075272232e-05,
            0.00015402448480017483,
            5.8348163292976096e-05,
            0.0002272053388878703,
            6.7739631049335e-05
        ],
        "align_select": "select TV_Channel.Content",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the Package Option of TV Channel with serial name \"Sky Radio\"?",
        "gold_select": "select TV_Channel.Package_Option",
        "select_candidates": [
            "select TV_Channel.Package_Option",
            "select TV_Channel.Package_Option, TV_Channel.ppv",
            "select TV_Channel.Package_Option, TV_Channel.ser_name",
            "select TV_Channel.Package_Option, t0.c9"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel"
        ],
        "align_scores": [
            0.9931334853172302,
            9.729913290357217e-05,
            0.00018323969561606646,
            7.01321114320308e-05,
            0.00015071564121171832,
            7.334019028348848e-05,
            0.0004742058226838708,
            7.333655230468139e-05
        ],
        "align_select": "select TV_Channel.Package_Option",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the Package Options of the TV Channels whose series names are Sky Radio?",
        "gold_select": "select TV_Channel.Package_Option",
        "select_candidates": [
            "select TV_Channel.Package_Option",
            "select TV_Channel.Package_Option, TV_Channel.ser_name",
            "select TV_Channel.hd, TV_Channel.Package_Option",
            "select TV_Channel.par, TV_Channel.Package_Option"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel",
            "TV_Channel TV_series",
            "TV_Channel TV_series Cartoon"
        ],
        "align_scores": [
            0.8821687698364258,
            7.68877289374359e-05,
            0.000190506485523656,
            6.524252239614725e-05,
            0.00018254491442348808,
            6.0163198213558644e-05,
            0.00017812178703024983,
            6.286719144554809e-05
        ],
        "align_select": "select TV_Channel.Package_Option",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the TV Channel that shows the cartoon \"The Rise of the Blue Beetle!\"? List the TV Channel's series name.",
        "gold_select": "select TV_Channel.ser_name",
        "select_candidates": [
            "select TV_Channel.ser_name",
            "select TV_Channel.ser_name, Cartoon.chnl",
            "select Cartoon.chnl, TV_Channel.ser_name",
            "select TV_Channel.ser_name, TV_series.chnl"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel TV_series Cartoon",
            "TV_Channel TV_Channel TV_series Cartoon",
            "TV_Channel Cartoon"
        ],
        "align_scores": [
            0.9874131679534912,
            0.0001234675437444821,
            0.0032656826078891754,
            0.00012340117245912552,
            0.001004390069283545,
            0.00012200892524560913,
            0.0021251693833619356,
            9.936455171555281e-05
        ],
        "align_select": "select TV_Channel.ser_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the series name of the TV Channel that shows the cartoon \"The Rise of the Blue Beetle\"?",
        "gold_select": "select TV_Channel.ser_name",
        "select_candidates": [
            "select TV_Channel.ser_name",
            "select TV_Channel.ser_name, Cartoon.chnl",
            "select TV_Channel.ser_name, TV_series.chnl",
            "select TV_series.ep, TV_Channel.ser_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel TV_series Cartoon",
            "TV_Channel Cartoon"
        ],
        "align_scores": [
            0.991803765296936,
            8.685588545631617e-05,
            0.0018114487174898386,
            7.689631456742063e-05,
            0.0006002130685374141,
            6.727971776854247e-05,
            0.00017195609689224511,
            6.710081652272493e-05
        ],
        "align_select": "select TV_Channel.ser_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List the title of all Cartoons showed on TV Channel with series name \"Sky Radio\".",
        "gold_select": "select Cartoon.Title",
        "select_candidates": [
            "select Cartoon.Title",
            "select Cartoon.Title, TV_Channel.ser_name",
            "select Cartoon.Title, TV_Channel.ser_name, TV_series.chnl",
            "select Cartoon.Title, TV_Channel.ser_name, Cartoon.dir"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel TV_series Cartoon",
            "TV_Channel Cartoon"
        ],
        "align_scores": [
            0.6704760789871216,
            0.0001531713642179966,
            0.000231568468734622,
            6.42530940240249e-05,
            0.00013245623267721385,
            6.18519916315563e-05,
            0.00014057659427635372,
            6.50127258268185e-05
        ],
        "align_select": "select Cartoon.Title",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the title of all the cartools that are on the TV Channel with the series name \"Sky Radio\"?",
        "gold_select": "select Cartoon.Title",
        "select_candidates": [
            "select Cartoon.Title",
            "select Cartoon.Title, TV_Channel.cntry",
            "select Cartoon.Title, TV_Channel.ser_name",
            "select Cartoon.Title, TV_Channel.Language"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel TV_series Cartoon"
        ],
        "align_scores": [
            0.093967504799366,
            0.0001493901654612273,
            0.0002501967828720808,
            6.907505303388461e-05,
            0.0003168247640132904,
            6.855734682176262e-05,
            0.00018352715414948761,
            6.451605440815911e-05
        ],
        "align_select": "select Cartoon.Title",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List the Episode of all TV series sorted by rating.",
        "gold_select": "select TV_series.ep",
        "select_candidates": [
            "select TV_series.ep",
            "select TV_series.ep, TV_series.Rating",
            "select TV_series.ep (ordered TV_series.Rating)",
            "select TV_series.ep de-sequence-ordered"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "TV_series",
        "table_candidates": [
            "TV_series"
        ],
        "align_scores": [
            0.9937540888786316,
            0.9937540888786316,
            0.0003089819219894707,
            0.0003089819219894707,
            0.0026676850393414497,
            0.0026676850393414497,
            0.0033927196636795998,
            0.0033927196636795998
        ],
        "align_select": "select TV_series.ep",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "What are all of the episodes ordered by ratings?",
        "gold_select": "select TV_series.ep",
        "select_candidates": [
            "select TV_series.ep",
            "select TV_series.ep, TV_series.Rating",
            "select TV_series.id, TV_series.ep, TV_series.Rating",
            "select TV_series.ep, TV_series.Rating, TV_series.Share"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "TV_series",
        "table_candidates": [
            "TV_series"
        ],
        "align_scores": [
            0.8212205767631531,
            0.8212205767631531,
            0.0003942956973332912,
            0.0003942956973332912,
            0.00012929468357469887,
            0.00012929468357469887,
            0.00015329979942180216,
            0.00015329979942180216
        ],
        "align_select": "select TV_series.ep",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "List top 3 highest Rating TV series. List the TV series's Episode and Rating.",
        "gold_select": "select TV_series.ep, TV_series.Rating",
        "select_candidates": [
            "select TV_series.ep, TV_series.Rating",
            "select TV_series.id, TV_series.ep, TV_series.Rating",
            "select TV_series.ep, TV_series.Rating, TV_series.Air_Date",
            "select TV_series.ep.c1, TV_series.Rating"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_series",
        "table_candidates": [
            "TV_series"
        ],
        "align_scores": [
            0.9918741583824158,
            7.053319131955504e-05,
            0.0003623514494393021,
            7.94788938947022e-05,
            0.00038562866393476725,
            7.226674642879516e-05,
            0.0004663792788051069,
            7.521814404753968e-05
        ],
        "align_select": "select TV_series.ep, TV_series.Rating",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What are 3 most highly rated episodes in the TV series table and what were those ratings?",
        "gold_select": "select TV_series.ep, TV_series.Rating",
        "select_candidates": [
            "select TV_series.ep, TV_series.Rating",
            "select TV_series.Rating, TV_series.Air_Date",
            "select TV_series.Air_Date, TV_series.Rating",
            "select TV_series.ep, sum(TV_series.Rating)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_series",
        "table_candidates": [
            "TV_series"
        ],
        "align_scores": [
            0.9917327165603638,
            6.172942812554538e-05,
            0.004478046204894781,
            6.078034493839368e-05,
            0.0020112444180995226,
            6.0949249018449336e-05,
            0.609311580657959,
            5.653587868437171e-05
        ],
        "align_select": "select TV_series.ep, TV_series.Rating",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What is the air date of TV series with Episode \"A Love of a Lifetime\"?",
        "gold_select": "select TV_series.Air_Date",
        "select_candidates": [
            "select TV_series.Air_Date",
            "select TV_series.id, TV_series.Air_Date",
            "select TV_series.Air_Date (or TV_series.Rating)",
            "select TV_series.Air_Date, TV_series.Rating"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_series",
        "table_candidates": [
            "TV_series"
        ],
        "align_scores": [
            0.9956091046333313,
            8.290804544230923e-05,
            0.00014862604439258575,
            6.464298348873854e-05,
            0.00048200340825133026,
            6.515379209304228e-05,
            0.00014375208411365747,
            5.4686603107256815e-05
        ],
        "align_select": "select TV_series.Air_Date",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "When did the episode \"A Love of a Lifetime\" air?",
        "gold_select": "select TV_series.Air_Date",
        "select_candidates": [
            "select TV_series.Air_Date",
            "select TV_series.id, TV_series.Air_Date",
            "select avg(TV_series.Air_Date)",
            "select TV_series.Air_Date, TV_series.Rating"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_series",
        "table_candidates": [
            "TV_series"
        ],
        "align_scores": [
            0.993253767490387,
            8.067315502557904e-05,
            0.00015598905156366527,
            6.49498324492015e-05,
            0.01239099632948637,
            6.695661431876943e-05,
            0.00012526677164714783,
            5.9290417993906885e-05
        ],
        "align_select": "select TV_series.Air_Date",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is Weekly Rank of TV series with Episode \"A Love of a Lifetime\"?",
        "gold_select": "select TV_series.Weekly_Rank",
        "select_candidates": [
            "select TV_series.Weekly_Rank",
            "select TV_series.id, TV_series.Weekly_Rank",
            "select TV_series.Weekly_Rank, TV_series.Viewers_m",
            "select TV_series.Weekly_Rank, TV_series.chnl"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_series",
        "table_candidates": [
            "TV_series"
        ],
        "align_scores": [
            0.9959630370140076,
            0.00010749901412054896,
            0.00015752545732539147,
            6.657130870735273e-05,
            0.0001394827850162983,
            6.26575929345563e-05,
            0.0002590145159047097,
            6.845941970823333e-05
        ],
        "align_select": "select TV_series.Weekly_Rank",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the weekly rank for the episode \"A Love of a Lifetime\"?",
        "gold_select": "select TV_series.Weekly_Rank",
        "select_candidates": [
            "select TV_series.Weekly_Rank",
            "select TV_series.id, TV_series.Weekly_Rank",
            "select TV_series.Weekly_Rank, TV_series.Viewers_m",
            "select TV_series.Weekly_Rank, TV_series.chnl"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_series",
        "table_candidates": [
            "TV_series",
            "TV_Channel TV_series"
        ],
        "align_scores": [
            0.9955797791481018,
            7.797031139489263e-05,
            0.0001528264838270843,
            5.888977466383949e-05,
            0.00014831528824288398,
            5.999750646878965e-05,
            0.0002608421491459012,
            6.532325642183423e-05
        ],
        "align_select": "select TV_series.Weekly_Rank",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the TV Channel of TV series with Episode \"A Love of a Lifetime\"? List the TV Channel's series name.",
        "gold_select": "select TV_Channel.ser_name",
        "select_candidates": [
            "select TV_Channel.ser_name",
            "select TV_Channel.ser_name, TV_series.chnl",
            "select TV_Channel.ser_name, TV_series.chnl",
            "select Cartoon.Title, TV_Channel.ser_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel TV_series",
        "table_candidates": [
            "TV_Channel TV_series"
        ],
        "align_scores": [
            0.9906676411628723,
            9.956602298188955e-05,
            0.0011745677329599857,
            8.239511225838214e-05,
            0.0011745677329599857,
            8.239511225838214e-05,
            0.00033052495564334095,
            9.039099677465856e-05
        ],
        "align_select": "select TV_Channel.ser_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the name of the series that has the episode \"A Love of a Lifetime\"?",
        "gold_select": "select TV_Channel.ser_name",
        "select_candidates": [
            "select TV_Channel.ser_name",
            "select TV_Channel.ser_name, TV_series.chnl",
            "select TV_series.ep",
            "select Cartoon.Title, TV_Channel.ser_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel TV_series",
        "table_candidates": [
            "TV_series",
            "TV_Channel TV_series"
        ],
        "align_scores": [
            0.9770551919937134,
            0.00010379213927080855,
            0.0003843531012535095,
            7.137680222513154e-05,
            0.5167618989944458,
            8.523304859409109e-05,
            0.0003613350563682616,
            7.959130016388372e-05
        ],
        "align_select": "select TV_Channel.ser_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List the Episode of all TV series showed on TV Channel with series name \"Sky Radio\".",
        "gold_select": "select TV_series.ep",
        "select_candidates": [
            "select TV_series.ep",
            "select TV_series.ep, TV_Channel.cntry",
            "select TV_series.id, TV_series.ep",
            "select TV_series.ep, TV_Channel.Language"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel TV_series",
        "table_candidates": [
            "TV_Channel TV_series"
        ],
        "align_scores": [
            0.6319696307182312,
            0.00013292768562678248,
            0.00016272073844447732,
            6.913158722454682e-05,
            0.00021117058349773288,
            8.442647231277078e-05,
            0.00018531900423113257,
            6.379056867444888e-05
        ],
        "align_select": "select TV_series.ep",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the episode for the TV series named \"Sky Radio\"?",
        "gold_select": "select TV_series.ep",
        "select_candidates": [
            "select TV_series.ep",
            "select TV_series.ep, TV_Channel.cntry",
            "select TV_series.ep, TV_Channel.ser_name",
            "select TV_series.ep, TV_Channel.Language"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel TV_series",
        "table_candidates": [
            "TV_Channel TV_series",
            "TV_Channel TV_series"
        ],
        "align_scores": [
            0.9872199296951294,
            7.332158565986902e-05,
            0.0001329872611677274,
            5.808856076328084e-05,
            0.00013005589426029474,
            6.017984196660109e-05,
            0.00013982913515064865,
            5.499668259290047e-05
        ],
        "align_select": "select TV_series.ep",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the number of cartoons directed by each of the listed directors.",
        "gold_select": "select count(*), Cartoon.dir",
        "select_candidates": [
            "select Cartoon.dir, count(*)",
            "select count(*), Cartoon.dir",
            "select Cartoon.dir, count(*), Cartoon.wr",
            "select Cartoon.dir.c2, count(*)"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Cartoon",
        "table_candidates": [
            "Cartoon"
        ],
        "align_scores": [
            0.994952917098999,
            0.00023891887394711375,
            0.9942739605903625,
            0.0002060325350612402,
            0.00018576695583760738,
            7.807342626620084e-05,
            0.0005636318237520754,
            0.00013353761460166425
        ],
        "align_select": "select Cartoon.dir, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "How many cartoons did each director create?",
        "gold_select": "select count(*), Cartoon.dir",
        "select_candidates": [
            "select Cartoon.dir, count(*)",
            "select Cartoon.dir, count(*), Cartoon.wr",
            "select Cartoon.dir, count(*), Cartoon.prod_code",
            "select Cartoon.dir, count(*), Cartoon.chnl"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Cartoon",
        "table_candidates": [
            "Cartoon"
        ],
        "align_scores": [
            0.9962950348854065,
            0.00019397333380766213,
            0.000344486819813028,
            7.822180486982688e-05,
            0.00019225812866352499,
            7.897587784100324e-05,
            0.000496855063829571,
            8.234515553340316e-05
        ],
        "align_select": "select Cartoon.dir, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "Find the production code and channel of the most recently aired cartoon.",
        "gold_select": "select Cartoon.prod_code, Cartoon.chnl",
        "select_candidates": [
            "select Cartoon.prod_code, Cartoon.chnl",
            "select max(Cartoon.prod_code), max(Cartoon.chnl)",
            "select Cartoon.prod_code, Cartoon.chnl, t2.c7",
            "select Cartoon.prod_code, Cartoon.chnl, Cartoon.wr"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Cartoon",
        "table_candidates": [
            "Cartoon",
            "TV_Channel Cartoon",
            "TV_series Cartoon",
            "TV_Channel TV_series Cartoon"
        ],
        "align_scores": [
            0.9810268878936768,
            0.00010714318341342732,
            0.0015364798018708825,
            0.00013274274533614516,
            0.0002714559668675065,
            7.072858716128394e-05,
            0.0007516572950407863,
            8.747947140363976e-05
        ],
        "align_select": "select Cartoon.prod_code, Cartoon.chnl",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What is the produdction code and channel of the most recent cartoon?",
        "gold_select": "select Cartoon.prod_code, Cartoon.chnl",
        "select_candidates": [
            "select Cartoon.prod_code, Cartoon.chnl",
            "select max(Cartoon.prod_code), max(Cartoon.chnl)",
            "select Cartoon.prod_code.c5, Cartoon.chnl",
            "select Cartoon.prod_code, Cartoon.chnl"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Cartoon",
        "table_candidates": [
            "Cartoon",
            "TV_Channel Cartoon",
            "TV_series Cartoon",
            "TV_Channel TV_series Cartoon"
        ],
        "align_scores": [
            0.9611536860466003,
            0.00010368173388997093,
            0.0013492980506271124,
            8.10856290627271e-05,
            0.00044085411354899406,
            8.863184484653175e-05,
            0.9611536860466003,
            0.00010368173388997093
        ],
        "align_select": "select Cartoon.prod_code, Cartoon.chnl",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Find the package choice and series name of the TV channel that has high definition TV.",
        "gold_select": "select TV_Channel.Package_Option, TV_Channel.ser_name",
        "select_candidates": [
            "select TV_Channel.Package_Option, TV_Channel.ser_name",
            "select TV_Channel.ser_name, TV_Channel.Package_Option",
            "select TV_Channel.ppv, TV_Channel.ser_name",
            "select TV_Channel.par, TV_Channel.ser_name"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel",
            "TV_Channel TV_series"
        ],
        "align_scores": [
            0.9870135188102722,
            0.00016715105448383838,
            0.989661455154419,
            0.00016585348930675536,
            0.41800999641418457,
            0.00019613963377196342,
            0.9379777312278748,
            0.00016678331303410232
        ],
        "align_select": "select TV_Channel.Package_Option, TV_Channel.ser_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the package options and the name of the series for the TV Channel that supports high definition TV?",
        "gold_select": "select TV_Channel.Package_Option, TV_Channel.ser_name",
        "select_candidates": [
            "select TV_Channel.Package_Option, TV_Channel.ser_name",
            "select TV_series.chnl, TV_series.ep",
            "select TV_Channel.Package_Option, TV_series.ep",
            "select TV_series.chnl, TV_Channel.ser_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel TV_series",
            "TV_Channel TV_series Cartoon"
        ],
        "align_scores": [
            0.989364504814148,
            0.00020365422824397683,
            0.14551343023777008,
            0.00013384383055381477,
            0.4682178795337677,
            9.715106716612354e-05,
            0.0013885358348488808,
            0.00011647468636510894
        ],
        "align_select": "select TV_Channel.Package_Option, TV_Channel.ser_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "which countries' tv channels are playing some cartoon written by Todd Casey?",
        "gold_select": "select TV_Channel.cntry",
        "select_candidates": [
            "select TV_Channel.cntry",
            "select distinct TV_Channel.cntry",
            "select TV_Channel.cntry, TV_Channel.Language",
            "select distinct TV_Channel.cntry, TV_Channel.Language"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel Cartoon"
        ],
        "align_scores": [
            0.7608389258384705,
            0.1987437754869461,
            0.52366703748703,
            0.0008508757455274463,
            0.00028739089611917734,
            0.00020979266264475882,
            0.00037194276228547096,
            0.00013781960296910256
        ],
        "align_select": "select TV_Channel.cntry",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the countries that have cartoons on TV that were written by Todd Casey?",
        "gold_select": "select TV_Channel.cntry",
        "select_candidates": [
            "select TV_Channel.cntry",
            "select distinct TV_Channel.cntry",
            "select count(distinct TV_Channel.cntry)",
            "select TV_Channel.cntry, TV_Channel.Language"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel Cartoon"
        ],
        "align_scores": [
            0.7297619581222534,
            0.007363712880760431,
            0.6099151968955994,
            0.09970931708812714,
            0.06129808723926544,
            0.00047357927542179823,
            0.0006305024726316333,
            0.00012259367213118821
        ],
        "align_select": "select TV_Channel.cntry",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "which countries' tv channels are not playing any cartoon written by Todd Casey?",
        "gold_select": "select TV_Channel.cntry",
        "select_candidates": [
            "select TV_Channel.cntry",
            "select distinct TV_Channel.cntry",
            "select TV_Channel.cntry, TV_Channel.Language",
            "select TV_Channel.cntry, Cartoon.wr"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel Cartoon"
        ],
        "align_scores": [
            0.9649422764778137,
            0.9649422764778137,
            0.06887088716030121,
            0.06887088716030121,
            0.0002561846631579101,
            0.0002561846631579101,
            0.0013144810218364,
            0.0013144810218364
        ],
        "align_select": "select TV_Channel.cntry",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the countries that are not playing cartoons written by Todd Casey?",
        "gold_select": "select TV_Channel.cntry",
        "select_candidates": [
            "select TV_Channel.cntry",
            "select TV_Channel.cntry, Cartoon.wr",
            "select TV_Channel.cntry, TV_Channel.Language",
            "select TV_Channel.cntry, Cartoon.chnl"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel Cartoon"
        ],
        "align_scores": [
            0.9656229615211487,
            0.9656229615211487,
            0.0018324885750189424,
            0.0018324885750189424,
            0.00019373599207028747,
            0.00019373599207028747,
            0.0015394305810332298,
            0.0015394305810332298
        ],
        "align_select": "select TV_Channel.cntry",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "Find the series name and country of the tv channel that is playing some cartoons directed by Ben Jones and Michael Chang?",
        "gold_select": "select TV_Channel.ser_name, TV_Channel.cntry",
        "select_candidates": [
            "select TV_Channel.ser_name, TV_Channel.cntry",
            "select TV_Channel.ser_name, TV_Channel.cntry, TV_Channel.Language",
            "select Cartoon.Title, TV_Channel.ser_name, TV_Channel.cntry",
            "select TV_Channel.ser_name, TV_Channel.cntry, TV_Channel.Language"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel TV_series Cartoon"
        ],
        "align_scores": [
            0.002625891473144293,
            0.000467302423203364,
            0.00013440308975987136,
            9.968800441129133e-05,
            0.00018913240637630224,
            0.00012571252591442317,
            0.00013440308975987136,
            9.968800441129133e-05
        ],
        "align_select": "select TV_Channel.ser_name, TV_Channel.cntry",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "What is the series name and country of all TV channels that are playing cartoons directed by Ben Jones and cartoons directed by Michael Chang?",
        "gold_select": "select TV_Channel.ser_name, TV_Channel.cntry",
        "select_candidates": [
            "select TV_Channel.ser_name, TV_Channel.cntry",
            "select TV_Channel.ser_name, TV_Channel.cntry",
            "select TV_series.ep, TV_Channel.cntry",
            "select Cartoon.Title, TV_Channel.cntry"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel TV_series Cartoon"
        ],
        "align_scores": [
            0.9812907576560974,
            0.003980649169534445,
            0.9812907576560974,
            0.003980649169534445,
            0.0021564774215221405,
            0.00024694096646271646,
            0.1530507355928421,
            0.0017599319107830524
        ],
        "align_select": "select TV_Channel.ser_name, TV_Channel.cntry",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "find the pixel aspect ratio and nation of the tv channels that do not use English.",
        "gold_select": "select TV_Channel.par, TV_Channel.cntry",
        "select_candidates": [
            "select TV_Channel.hd, TV_Channel.cntry",
            "select TV_Channel.par, TV_Channel.cntry",
            "select TV_Channel.Language, TV_Channel.hd",
            "select TV_Channel.Content, TV_Channel.cntry"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel"
        ],
        "align_scores": [
            0.48663055896759033,
            0.00030689104460179806,
            0.9783738851547241,
            0.0005803527892567217,
            0.0053053488954901695,
            0.00013717991532757878,
            0.0010949308052659035,
            0.00013735215179622173
        ],
        "align_select": "select TV_Channel.par, TV_Channel.cntry",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the pixel aspect ratio and country of origin for all TV channels that do not use English?",
        "gold_select": "select TV_Channel.par, TV_Channel.cntry",
        "select_candidates": [
            "select TV_Channel.hd, TV_Channel.cntry",
            "select TV_Channel.Language, TV_Channel.hd",
            "select TV_Channel.ser_name, TV_Channel.cntry",
            "select TV_Channel.Content, TV_Channel.cntry"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel"
        ],
        "align_scores": [
            0.054648835211992264,
            0.00015396309026982635,
            0.017697470262646675,
            0.00011529539187904447,
            0.00047261538566090167,
            8.764748054090887e-05,
            0.0008761711651459336,
            0.00010605189891066402
        ],
        "align_select": "select TV_Channel.hd, TV_Channel.cntry",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "find id of the tv channels that from the countries where have more than two tv channels.",
        "gold_select": "select TV_Channel.id",
        "select_candidates": [
            "select TV_Channel.id",
            "select TV_Channel.id, TV_Channel.cntry",
            "select t0.c, TV_Channel.cntry",
            "select TV_Channel.id, TV_Channel.cntry, TV_Channel.Language"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel",
            "TV_Channel TV_series Cartoon",
            "TV_Channel TV_series Cartoon",
            "TV_Channel TV_series",
            "TV_Channel Cartoon",
            "TV_Channel Cartoon"
        ],
        "align_scores": [
            0.9869353771209717,
            0.00016700464766472578,
            0.017693474888801575,
            0.00017932968330569565,
            0.0005014139460399747,
            8.903608249966055e-05,
            0.00016888513346202672,
            9.196713654091582e-05
        ],
        "align_select": "select TV_Channel.id",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the ids of all tv channels that have more than 2 TV channels?",
        "gold_select": "select TV_Channel.id",
        "select_candidates": [
            "select TV_Channel.id",
            "select TV_Channel.id, TV_Channel.ser_name",
            "select TV_Channel.id, TV_Channel.par",
            "select TV_Channel.id, TV_Channel.cntry"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel"
        ],
        "align_scores": [
            0.9768571257591248,
            0.000159341303515248,
            0.00043274773634038866,
            9.097236033994704e-05,
            0.0003403048904146999,
            7.069992716424167e-05,
            0.00035232066875323653,
            7.95953965280205e-05
        ],
        "align_select": "select TV_Channel.id",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "find the id of tv channels that do not play any cartoon directed by Ben Jones.",
        "gold_select": "select TV_Channel.id",
        "select_candidates": [
            "select TV_Channel.id",
            "select TV_Channel.id, Cartoon.chnl",
            "select TV_Channel.id, TV_Channel.ser_name",
            "select TV_Channel.id, Cartoon.dir"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel Cartoon"
        ],
        "align_scores": [
            0.9765847325325012,
            0.9765847325325012,
            0.0012112412368878722,
            0.0012112412368878722,
            0.0002446196449454874,
            0.0002446196449454874,
            0.0006833249353803694,
            0.0006833249353803694
        ],
        "align_select": "select TV_Channel.id",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the ids of the TV channels that do not have any cartoons directed by Ben Jones?",
        "gold_select": "select TV_Channel.id",
        "select_candidates": [
            "select TV_Channel.id",
            "select TV_Channel.id, Cartoon.chnl",
            "select TV_Channel.id, Cartoon.dir",
            "select TV_Channel.id, TV_Channel.ser_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel Cartoon"
        ],
        "align_scores": [
            0.9697651267051697,
            0.9697651267051697,
            0.0012806144077330828,
            0.0012806144077330828,
            0.0005379528156481683,
            0.0005379528156481683,
            0.0002696215233299881,
            0.0002696215233299881
        ],
        "align_select": "select TV_Channel.id",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "find the package option of the tv channel that do not have any cartoon directed by Ben Jones.",
        "gold_select": "select TV_Channel.Package_Option",
        "select_candidates": [
            "select TV_Channel.Package_Option",
            "select TV_Channel.id, TV_Channel.Package_Option",
            "select TV_Channel.Package_Option, Cartoon.dir",
            "select TV_Channel.par, TV_Channel.Package_Option"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel Cartoon"
        ],
        "align_scores": [
            0.9793640971183777,
            0.0031128341797739267,
            0.00020741880871355534,
            0.00016301455616485327,
            0.00033652776619419456,
            0.00019080571655649692,
            0.00013437990855891258,
            0.00011186963820364326
        ],
        "align_select": "select TV_Channel.Package_Option",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the package options of all tv channels that are not playing any cartoons directed by Ben Jones?",
        "gold_select": "select TV_Channel.Package_Option",
        "select_candidates": [
            "select TV_Channel.Package_Option",
            "select TV_Channel.Package_Option, Cartoon.dir",
            "select TV_Channel.par, TV_Channel.Package_Option",
            "select TV_Channel.Package_Option (Option)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel Cartoon"
        ],
        "align_scores": [
            0.9715648889541626,
            0.003954954911023378,
            0.00041641920688562095,
            0.0001731073425617069,
            0.0001535190676804632,
            0.00010769507935037836,
            0.006139753386378288,
            0.0004606204165611416
        ],
        "align_select": "select TV_Channel.Package_Option",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "List all cartoon directed by \"Ben Jones\".",
        "gold_select": "select Cartoon.Title",
        "select_candidates": [
            "select Cartoon.Title",
            "select Cartoon.Title, Cartoon.dir",
            "select Cartoon.id",
            "select Cartoon.id, Cartoon.Title"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Cartoon",
        "table_candidates": [
            "Cartoon"
        ],
        "align_scores": [
            0.9943062663078308,
            0.00010172252950724214,
            0.00018158199964091182,
            6.633518933085725e-05,
            0.005234546959400177,
            6.321888940874487e-05,
            0.0002051809278782457,
            6.234504689928144e-05
        ],
        "align_select": "select Cartoon.Title",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of all cartoons directed by Ben Jones?",
        "gold_select": "select Cartoon.Title",
        "select_candidates": [
            "select Cartoon.Title",
            "select Cartoon.Title, Cartoon.dir",
            "select Cartoon.Title, Cartoon.chnl",
            "select Cartoon.Title, Cartoon.wr"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Cartoon",
        "table_candidates": [
            "Cartoon"
        ],
        "align_scores": [
            0.9936460256576538,
            0.0001680139102973044,
            0.00021287718845997006,
            5.739864718634635e-05,
            0.0003943484916817397,
            7.538891077274457e-05,
            0.00021608966926578432,
            6.020285945851356e-05
        ],
        "align_select": "select Cartoon.Title",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many cartoons were written by \"Joseph Kuhr\"?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Cartoon.id",
            "select count(*), Cartoon.Title",
            "select count(*), Cartoon.wr"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Cartoon",
        "table_candidates": [
            "Cartoon",
            "TV_series Cartoon"
        ],
        "align_scores": [
            0.9933307766914368,
            0.0005463967681862414,
            0.00028623611433431506,
            0.00027284075622446835,
            0.00025870694662444293,
            0.0016677918611094356,
            0.0003834681410808116,
            0.23775871098041534
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the number of cartoones written by Joseph Kuhr?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Cartoon.id",
            "select count(*), Cartoon.Title",
            "select count(*), Cartoon.wr"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Cartoon",
        "table_candidates": [
            "Cartoon",
            "TV_series Cartoon",
            "TV_Channel Cartoon"
        ],
        "align_scores": [
            0.9892503023147583,
            0.0003021026204805821,
            0.00025901402113959193,
            0.0001740011211950332,
            0.00024879994452930987,
            0.0006547386874444783,
            0.0003174821613356471,
            0.022964539006352425
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "list all cartoon titles and their directors ordered by their air date",
        "gold_select": "select Cartoon.Title, Cartoon.dir",
        "select_candidates": [
            "select Cartoon.Title, Cartoon.dir",
            "select Cartoon.Title, Cartoon.dir, Cartoon.Original_air_date",
            "select Cartoon.Title, Cartoon.dir (ordered by",
            "select Cartoon.Title.c1, Cartoon.dir"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "Cartoon",
        "table_candidates": [
            "Cartoon"
        ],
        "align_scores": [
            0.9944643378257751,
            0.9944643378257751,
            0.00022764119785279036,
            0.00022764119785279036,
            0.03155336529016495,
            0.03155336529016495,
            0.0002821545349434018,
            0.0002821545349434018
        ],
        "align_select": "select Cartoon.Title, Cartoon.dir",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "What is the name and directors of all the cartoons that are ordered by air date?",
        "gold_select": "select Cartoon.Title, Cartoon.dir",
        "select_candidates": [
            "select Cartoon.Title, Cartoon.dir",
            "select Cartoon.Title, Cartoon.dir, Cartoon.Original_air_date",
            "select Cartoon.Title, Cartoon.dir, Cartoon.wr",
            "select Cartoon.Title, Cartoon.dir, Cartoon.id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "Cartoon",
        "table_candidates": [
            "Cartoon"
        ],
        "align_scores": [
            0.1829545646905899,
            0.1829545646905899,
            0.00015878134581726044,
            0.00015878134581726044,
            0.00031421438325196505,
            0.00031421438325196505,
            0.0002859551750589162,
            0.0002859551750589162
        ],
        "align_select": "select Cartoon.Title, Cartoon.dir",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "List the title of all cartoon directed by \"Ben Jones\" or \"Brandon Vietti\".",
        "gold_select": "select Cartoon.Title",
        "select_candidates": [
            "select Cartoon.Title",
            "select Cartoon.Title, Cartoon.dir",
            "select Cartoon.Title, Cartoon.chnl",
            "select Cartoon.Title, Cartoon.id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Cartoon",
        "table_candidates": [
            "Cartoon"
        ],
        "align_scores": [
            0.9806109666824341,
            0.0002984514576382935,
            0.00019016947771888226,
            7.476519385818392e-05,
            0.0003319602401461452,
            8.954467193689197e-05,
            0.00020439247600734234,
            7.153775368351489e-05
        ],
        "align_select": "select Cartoon.Title",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the titles of all cartoons directed by Ben Jones or Brandon Vietti?",
        "gold_select": "select Cartoon.Title",
        "select_candidates": [
            "select Cartoon.Title",
            "select Cartoon.Title, Cartoon.dir",
            "select Cartoon.Title, Cartoon.chnl",
            "select Cartoon.Title, Cartoon.id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Cartoon",
        "table_candidates": [
            "Cartoon"
        ],
        "align_scores": [
            0.9900957345962524,
            0.0008301984635181725,
            0.00021926636691205204,
            7.393749547190964e-05,
            0.0004427201929502189,
            9.047344065038487e-05,
            0.00022923860524315387,
            7.53697968320921e-05
        ],
        "align_select": "select Cartoon.Title",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which country has the most of TV Channels? List the country and number of TV Channels it has.",
        "gold_select": "select TV_Channel.cntry, count(*)",
        "select_candidates": [
            "select TV_Channel.cntry, count(*)",
            "select TV_Channel.cntry.c2, count(*)",
            "select TV_Channel.cntry, count(TV_Channel.id)",
            "select TV_Channel.cntry, count(*), TV_Channel.lang"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-UNION-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel"
        ],
        "align_scores": [
            0.5638079643249512,
            0.00010268512414768338,
            0.0005253689596429467,
            8.220392919611186e-05,
            0.0005510105984285474,
            9.293317270930856e-05,
            0.00014146353350952268,
            7.124174589989707e-05
        ],
        "align_select": "select TV_Channel.cntry, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the country with the most number of TV Channels and how many does it have?",
        "gold_select": "select TV_Channel.cntry, count(*)",
        "select_candidates": [
            "select TV_Channel.cntry, count(*)",
            "select TV_Channel.cntry, count(*), TV_Channel.lang",
            "select TV_Channel.cntry.c2, count(*)",
            "select TV_Channel.cntry.c0, count(*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel"
        ],
        "align_scores": [
            0.9871417284011841,
            8.450145105598494e-05,
            0.00017699270392768085,
            5.7720088079804555e-05,
            0.0024934117682278156,
            6.545059295604005e-05,
            0.0019766846671700478,
            6.978554301895201e-05
        ],
        "align_select": "select TV_Channel.cntry, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "List the number of different series names and contents in the TV Channel table.",
        "gold_select": "select count(distinct TV_Channel.ser_name), count(distinct TV_Channel.Content)",
        "select_candidates": [
            "select count(distinct TV_Channel.ser_name), count(distinct TV_Channel.Content)",
            "select count(distinct TV_Channel.ser_name)., count(distinct TV_Channel.Content)",
            "select count(distinct TV_Channel.ser_name, TV_Channel.Content)",
            "select count(distinct TV_Channel.ser_name), count(distinct TV_Channel.cntry)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel TV_series",
            "TV_Channel Cartoon"
        ],
        "align_scores": [
            0.995424211025238,
            0.995424211025238,
            0.0009215170866809785,
            0.0009215170866809785,
            0.8703696727752686,
            0.8703696727752686,
            0.0009719330118969083,
            0.0009719330118969083
        ],
        "align_select": "select count(distinct TV_Channel.ser_name), count(distinct TV_Channel.Content)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "How many different series and contents are listed in the TV Channel table?",
        "gold_select": "select count(distinct TV_Channel.ser_name), count(distinct TV_Channel.Content)",
        "select_candidates": [
            "select count(distinct TV_series.ep), TV_Channel.Content",
            "select count(distinct TV_series.id), count(distinct TV_Channel.Content)",
            "select count(distinct TV_series.ep), count(distinct TV_Channel.Content)",
            "select count(distinct TV_series.id, TV_Channel.Content)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel TV_series",
            "TV_Channel Cartoon"
        ],
        "align_scores": [
            0.0006147426320239902,
            0.00010570498852757737,
            0.011593536473810673,
            8.799375791568309e-05,
            0.0016861510230228305,
            8.33680314826779e-05,
            0.02595529519021511,
            0.00010689632472349331
        ],
        "align_select": "select count(distinct TV_series.ep), TV_Channel.Content",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What is the content of TV Channel with serial name \"Sky Radio\"?",
        "gold_select": "select TV_Channel.Content",
        "select_candidates": [
            "select TV_Channel.Content",
            "select TV_Channel.Content, TV_Channel.Pixel_aspect_ratio_PAR",
            "select TV_Channel.Content, TV_Channel.lang",
            "select TV_Channel.ser_name, TV_Channel.Content"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel",
            "TV_Channel TV_series Cartoon"
        ],
        "align_scores": [
            0.9928717017173767,
            0.00010954932076856494,
            0.00013583969848696142,
            5.9198264352744445e-05,
            0.0001423611247446388,
            5.9849622630281374e-05,
            0.00023815265740267932,
            7.937468035379425e-05
        ],
        "align_select": "select TV_Channel.Content",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the content of the series Sky Radio?",
        "gold_select": "select TV_Channel.Content",
        "select_candidates": [
            "select TV_Channel.Content",
            "select TV_Channel.Content, TV_Channel.Pixel_aspect_ratio_PAR",
            "select TV_Channel.Content, TV_Channel.lang",
            "select TV_Channel.Content, TV_Channel.ppv"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel TV_series",
            "TV_Channel"
        ],
        "align_scores": [
            0.9030343890190125,
            7.180869579315186e-05,
            0.00014713291602674872,
            5.832991155330092e-05,
            0.0001495931501267478,
            5.832373790326528e-05,
            0.0002272053388878703,
            6.7739631049335e-05
        ],
        "align_select": "select TV_Channel.Content",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the Package Option of TV Channel with serial name \"Sky Radio\"?",
        "gold_select": "select TV_Channel.Package_Option",
        "select_candidates": [
            "select TV_Channel.Package_Option",
            "select TV_Channel.Package_Option, TV_Channel.ppv",
            "select TV_Channel.Package_Option, TV_Channel.ser_name",
            "select TV_Channel.Package_Option, t0.c9"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel",
            "TV_Channel TV_series Cartoon",
            "TV_Channel TV_series"
        ],
        "align_scores": [
            0.9931334853172302,
            9.729913290357217e-05,
            0.00018323969561606646,
            7.01321114320308e-05,
            0.00015071564121171832,
            7.334019028348848e-05,
            0.0004742058226838708,
            7.333655230468139e-05
        ],
        "align_select": "select TV_Channel.Package_Option",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the Package Options of the TV Channels whose series names are Sky Radio?",
        "gold_select": "select TV_Channel.Package_Option",
        "select_candidates": [
            "select TV_Channel.Package_Option",
            "select TV_Channel.Package_Option, TV_Channel.ser_name",
            "select TV_Channel.hd, TV_Channel.Package_Option",
            "select TV_Channel.Pixel_aspect_ratio_PAR, TV_Channel.Package_Option"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel"
        ],
        "align_scores": [
            0.8821687698364258,
            7.68877289374359e-05,
            0.000190506485523656,
            6.524252239614725e-05,
            0.00018254491442348808,
            6.0163198213558644e-05,
            0.0001709479111013934,
            6.916080019436777e-05
        ],
        "align_select": "select TV_Channel.Package_Option",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many TV Channel using language English?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), TV_Channel.lang",
            "select count(*), TV_Channel.cntry",
            "select count(*), TV_Channel.id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel"
        ],
        "align_scores": [
            0.9956632256507874,
            8.045028516789898e-05,
            0.0002586929185781628,
            6.181978824315593e-05,
            0.00028138034394942224,
            8.65633410285227e-05,
            0.00023922020045574754,
            6.144342478364706e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many TV Channels use the English language?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), TV_Channel.lang",
            "select count(*), TV_Channel.lang, TV_Channel.cntry",
            "select count(*), TV_Channel.lang, TV_Channel.Content"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel"
        ],
        "align_scores": [
            0.9932244420051575,
            9.938672883436084e-05,
            0.0003005343896802515,
            6.993395800236613e-05,
            0.00010301957809133455,
            5.3925756219541654e-05,
            0.00010510012361919507,
            5.1307095418451354e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List the language used least number of TV Channel. List language and number of TV Channel.",
        "gold_select": "select TV_Channel.lang, count(*)",
        "select_candidates": [
            "select TV_Channel.lang, count(*)",
            "select TV_Channel.lang, count(TV_Channel.id)",
            "select TV_Channel.lang, count(*), TV_Channel.cntry",
            "select TV_Channel.ser_name, count(*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-UNION-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel"
        ],
        "align_scores": [
            0.9942020773887634,
            0.00012261095980647951,
            0.0015422741416841745,
            8.485237776767462e-05,
            0.0004299090651329607,
            7.737841224297881e-05,
            0.9558736085891724,
            0.0001274964160984382
        ],
        "align_select": "select TV_Channel.lang, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What are the languages used by the least number of TV Channels and how many channels use it?",
        "gold_select": "select TV_Channel.lang, count(*)",
        "select_candidates": [
            "select TV_Channel.lang, count(*)",
            "select TV_Channel.lang, count(*), TV_Channel.cntry",
            "select TV_Channel.ser_name, count(*)",
            "select TV_Channel.cntry, count(*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-UNION-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel"
        ],
        "align_scores": [
            0.9943998456001282,
            0.00016609895101282746,
            0.00036522597656585276,
            8.48222043714486e-05,
            0.8788560628890991,
            0.00018867183825932443,
            0.014457492157816887,
            0.00015660544158890843
        ],
        "align_select": "select TV_Channel.lang, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "List each language and the number of TV Channels using it.",
        "gold_select": "select TV_Channel.lang, count(*)",
        "select_candidates": [
            "select TV_Channel.lang, count(*)",
            "select TV_Channel.lang, count(*), TV_Channel.cntry",
            "select TV_Channel.lang.c3, count(*)",
            "select TV_Channel.lang, count(TV_Channel.id)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel"
        ],
        "align_scores": [
            0.995805025100708,
            0.00018615936278365552,
            0.0002580096188466996,
            8.785717363934964e-05,
            0.000982859288342297,
            0.00014862419629935175,
            0.000354836811311543,
            0.00018353818450123072
        ],
        "align_select": "select TV_Channel.lang, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "For each language, list the number of TV Channels that use it.",
        "gold_select": "select TV_Channel.lang, count(*)",
        "select_candidates": [
            "select TV_Channel.lang, count(*)",
            "select count(*), TV_Channel.lang",
            "select TV_Channel.lang, count(*), TV_Channel.cntry",
            "select TV_Channel.lang.c3, count(*)"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel"
        ],
        "align_scores": [
            0.9949833154678345,
            0.00019844099006149918,
            0.9944419264793396,
            0.0001984069385798648,
            0.00032540233223699033,
            8.9644207037054e-05,
            0.0008958900580182672,
            0.00016214426432270557
        ],
        "align_select": "select TV_Channel.lang, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "What is the TV Channel that shows the cartoon \"The Rise of the Blue Beetle!\"? List the TV Channel's series name.",
        "gold_select": "select TV_Channel.ser_name",
        "select_candidates": [
            "select TV_Channel.ser_name",
            "select Cartoon.chnl, TV_Channel.ser_name",
            "select TV_Channel.ser_name, Cartoon.chnl",
            "select TV_Channel.ser_name, TV_series.chnl"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel TV_series Cartoon"
        ],
        "align_scores": [
            0.9874131679534912,
            0.0001234675437444821,
            0.001004390069283545,
            0.00012200892524560913,
            0.0032656826078891754,
            0.00012340117245912552,
            0.0021251693833619356,
            9.936455171555281e-05
        ],
        "align_select": "select TV_Channel.ser_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the series name of the TV Channel that shows the cartoon \"The Rise of the Blue Beetle\"?",
        "gold_select": "select TV_Channel.ser_name",
        "select_candidates": [
            "select TV_Channel.ser_name",
            "select TV_Channel.ser_name, Cartoon.chnl",
            "select TV_Channel.ser_name, TV_series.chnl",
            "select Cartoon.Title, TV_Channel.ser_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel TV_series Cartoon",
            "TV_Channel Cartoon"
        ],
        "align_scores": [
            0.991803765296936,
            8.685588545631617e-05,
            0.0018114487174898386,
            7.689631456742063e-05,
            0.0006002130685374141,
            6.727971776854247e-05,
            0.0003112057165708393,
            7.372738764388487e-05
        ],
        "align_select": "select TV_Channel.ser_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List the title of all Cartoons showed on TV Channel with series name \"Sky Radio\".",
        "gold_select": "select Cartoon.Title",
        "select_candidates": [
            "select Cartoon.Title",
            "select Cartoon.Title, TV_Channel.ser_name",
            "select Cartoon.Title, TV_Channel.cntry",
            "select Cartoon.Title, TV_Channel.ser_name, TV_series.chnl"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel TV_series Cartoon"
        ],
        "align_scores": [
            0.6704760789871216,
            0.0001531713642179966,
            0.000231568468734622,
            6.42530940240249e-05,
            0.00021974938863422722,
            6.550410034833476e-05,
            0.00013245623267721385,
            6.18519916315563e-05
        ],
        "align_select": "select Cartoon.Title",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the title of all the cartools that are on the TV Channel with the series name \"Sky Radio\"?",
        "gold_select": "select Cartoon.Title",
        "select_candidates": [
            "select Cartoon.Title",
            "select Cartoon.Title, TV_Channel.cntry",
            "select Cartoon.Title, TV_Channel.ser_name",
            "select Cartoon.Title, TV_Channel.lang"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel TV_series Cartoon"
        ],
        "align_scores": [
            0.093967504799366,
            0.0001493901654612273,
            0.0002501967828720808,
            6.907505303388461e-05,
            0.0003168247640132904,
            6.855734682176262e-05,
            0.00018320090021006763,
            6.649472925346345e-05
        ],
        "align_select": "select Cartoon.Title",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List the Episode of all TV series sorted by rating.",
        "gold_select": "select TV_series.ep",
        "select_candidates": [
            "select TV_series.ep",
            "select TV_series.ep, TV_series.18_49_Rating_Share",
            "select TV_series.ep, TV_series.Viewers_m",
            "select TV_series.ep, TV_series.rtg"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "TV_series",
        "table_candidates": [
            "TV_series"
        ],
        "align_scores": [
            0.9937540888786316,
            0.9937540888786316,
            0.00015892584633547813,
            0.00015892584633547813,
            0.00019109886488877237,
            0.00019109886488877237,
            0.00028380623552948236,
            0.00028380623552948236
        ],
        "align_select": "select TV_series.ep",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "What are all of the episodes ordered by ratings?",
        "gold_select": "select TV_series.ep",
        "select_candidates": [
            "select TV_series.ep",
            "select TV_series.ep, TV_series.18_49_Rating_Share",
            "select TV_series.ep, TV_series.Air_Date",
            "select TV_series.ep, TV_series.rtg"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "TV_series",
        "table_candidates": [
            "TV_series"
        ],
        "align_scores": [
            0.8212205767631531,
            0.8212205767631531,
            0.000254963175393641,
            0.000254963175393641,
            0.00015746390272397548,
            0.00015746390272397548,
            0.00031305305310525,
            0.00031305305310525
        ],
        "align_select": "select TV_series.ep",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "List top 3 highest Rating TV series. List the TV series's Episode and Rating.",
        "gold_select": "select TV_series.ep, TV_series.rtg",
        "select_candidates": [
            "select TV_series.ep, TV_series.18_49_Rating_Share",
            "select TV_series.ep, TV_series.18_49_Rating_Share.",
            "select TV_series.ep, TV_series.Viewers_m",
            "select TV_series.ep, TV_series.rtg"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_series",
        "table_candidates": [
            "TV_series"
        ],
        "align_scores": [
            0.9925507307052612,
            8.924782741814852e-05,
            0.0026834949385374784,
            8.732494461582974e-05,
            0.9918166995048523,
            8.045412687351927e-05,
            0.988440752029419,
            7.20317184459418e-05
        ],
        "align_select": "select TV_series.ep, TV_series.18_49_Rating_Share",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What are 3 most highly rated episodes in the TV series table and what were those ratings?",
        "gold_select": "select TV_series.ep, TV_series.rtg",
        "select_candidates": [
            "select TV_series.ep, TV_series.18_49_Rating_Share",
            "select TV_series.ep, TV_series.rtg",
            "select TV_series.ep, TV_series.Air_Date",
            "select TV_series.ep, TV_series.Viewers_m"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_series",
        "table_candidates": [
            "TV_series"
        ],
        "align_scores": [
            0.9904442429542542,
            7.3954914114438e-05,
            0.9896727800369263,
            6.324179412331432e-05,
            0.00031710765324532986,
            7.064129749778658e-05,
            0.9196351170539856,
            6.179569754749537e-05
        ],
        "align_select": "select TV_series.ep, TV_series.18_49_Rating_Share",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What is the air date of TV series with Episode \"A Love of a Lifetime\"?",
        "gold_select": "select TV_series.Air_Date",
        "select_candidates": [
            "select TV_series.Air_Date",
            "select TV_series.id, TV_series.Air_Date",
            "select TV_series.Air_Date (or TV_series.rtg)",
            "select TV_series.Air_Date (http://TV_series.Air_Date)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_series",
        "table_candidates": [
            "TV_series"
        ],
        "align_scores": [
            0.9956091046333313,
            8.290804544230923e-05,
            0.00014862604439258575,
            6.464298348873854e-05,
            0.11075843125581741,
            7.087272388162091e-05,
            0.004088230896741152,
            7.698090485064313e-05
        ],
        "align_select": "select TV_series.Air_Date",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "When did the episode \"A Love of a Lifetime\" air?",
        "gold_select": "select TV_series.Air_Date",
        "select_candidates": [
            "select TV_series.Air_Date",
            "select TV_series.id, TV_series.Air_Date",
            "select avg(TV_series.Air_Date)",
            "select TV_series.Air_Date, TV_series.rtg"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_series",
        "table_candidates": [
            "TV_series"
        ],
        "align_scores": [
            0.993253767490387,
            8.067315502557904e-05,
            0.00015598905156366527,
            6.49498324492015e-05,
            0.01239099632948637,
            6.695661431876943e-05,
            0.00018983232439495623,
            6.640696665272117e-05
        ],
        "align_select": "select TV_series.Air_Date",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is Weekly Rank of TV series with Episode \"A Love of a Lifetime\"?",
        "gold_select": "select TV_series.wkly_rank",
        "select_candidates": [
            "select TV_series.wkly_rank",
            "select TV_series.id, TV_series.wkly_rank",
            "select TV_series.wkly_rank, TV_series.Viewers_m",
            "select TV_series.wkly_rank, TV_series.chnl"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_series",
        "table_candidates": [
            "TV_series"
        ],
        "align_scores": [
            0.9959543943405151,
            0.00010792969987960532,
            0.0001587916340213269,
            6.926620699232444e-05,
            0.0001591511827427894,
            6.240559014258906e-05,
            0.0002514299703761935,
            6.66658379486762e-05
        ],
        "align_select": "select TV_series.wkly_rank",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the weekly rank for the episode \"A Love of a Lifetime\"?",
        "gold_select": "select TV_series.wkly_rank",
        "select_candidates": [
            "select TV_series.wkly_rank",
            "select avg(TV_series.wkly_rank)",
            "select TV_series.wkly_rank, TV_series.Viewers_m",
            "select TV_series.wkly_rank, TV_series.chnl"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_series",
        "table_candidates": [
            "TV_series",
            "TV_Channel TV_series"
        ],
        "align_scores": [
            0.9957355260848999,
            8.096756209852174e-05,
            0.0031248368322849274,
            6.104540079832077e-05,
            0.00016555124602746218,
            6.248021236388013e-05,
            0.0002602390304673463,
            6.50531001156196e-05
        ],
        "align_select": "select TV_series.wkly_rank",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the TV Channel of TV series with Episode \"A Love of a Lifetime\"? List the TV Channel's series name.",
        "gold_select": "select TV_Channel.ser_name",
        "select_candidates": [
            "select TV_Channel.ser_name",
            "select TV_Channel.ser_name, TV_series.chnl",
            "select TV_Channel.ser_name, TV_series.chnl",
            "select Cartoon.Title, TV_Channel.ser_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel TV_series",
        "table_candidates": [
            "TV_Channel TV_series"
        ],
        "align_scores": [
            0.9906676411628723,
            9.956602298188955e-05,
            0.0011745677329599857,
            8.239511225838214e-05,
            0.0011745677329599857,
            8.239511225838214e-05,
            0.00033052495564334095,
            9.039099677465856e-05
        ],
        "align_select": "select TV_Channel.ser_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the name of the series that has the episode \"A Love of a Lifetime\"?",
        "gold_select": "select TV_Channel.ser_name",
        "select_candidates": [
            "select TV_Channel.ser_name",
            "select TV_Channel.ser_name, TV_series.chnl",
            "select TV_series.ep",
            "select Cartoon.Title, TV_Channel.ser_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel TV_series",
        "table_candidates": [
            "TV_series",
            "TV_Channel TV_series"
        ],
        "align_scores": [
            0.9770551919937134,
            0.00010379213927080855,
            0.0003843531012535095,
            7.137680222513154e-05,
            0.5167618989944458,
            8.523304859409109e-05,
            0.0003613350563682616,
            7.959130016388372e-05
        ],
        "align_select": "select TV_Channel.ser_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List the Episode of all TV series showed on TV Channel with series name \"Sky Radio\".",
        "gold_select": "select TV_series.ep",
        "select_candidates": [
            "select TV_series.ep",
            "select TV_series.ep, TV_Channel.cntry",
            "select TV_series.ep, TV_Channel.cntry, TV_series.rtg",
            "select TV_series.ep, TV_Channel.cntry, TV_Channel.lang"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel TV_series",
        "table_candidates": [
            "TV_Channel TV_series"
        ],
        "align_scores": [
            0.6319696307182312,
            0.00013292768562678248,
            0.00016272073844447732,
            6.913158722454682e-05,
            0.0001811430702218786,
            6.561245390912518e-05,
            0.00015702548262197524,
            6.223301897989586e-05
        ],
        "align_select": "select TV_series.ep",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the episode for the TV series named \"Sky Radio\"?",
        "gold_select": "select TV_series.ep",
        "select_candidates": [
            "select TV_series.ep",
            "select TV_series.ep, TV_Channel.cntry",
            "select TV_series.ep, TV_Channel.ser_name",
            "select ep(TV_series.ep)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel TV_series",
        "table_candidates": [
            "TV_Channel TV_series",
            "TV_Channel TV_series"
        ],
        "align_scores": [
            0.9872199296951294,
            7.332158565986902e-05,
            0.0001329872611677274,
            5.808856076328084e-05,
            0.00013005589426029474,
            6.017984196660109e-05,
            0.000569106952752918,
            6.436630064854398e-05
        ],
        "align_select": "select TV_series.ep",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the number of cartoons directed by each of the listed directors.",
        "gold_select": "select count(*), Cartoon.dir",
        "select_candidates": [
            "select Cartoon.dir, count(*)",
            "select count(*), Cartoon.dir",
            "select Cartoon.dir, count(*), Cartoon.wr",
            "select Cartoon.dir.c2, count(*)"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Cartoon",
        "table_candidates": [
            "Cartoon"
        ],
        "align_scores": [
            0.994952917098999,
            0.00023891887394711375,
            0.9942739605903625,
            0.0002060325350612402,
            0.00018576695583760738,
            7.807342626620084e-05,
            0.0005636318237520754,
            0.00013353761460166425
        ],
        "align_select": "select Cartoon.dir, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "How many cartoons did each director create?",
        "gold_select": "select count(*), Cartoon.dir",
        "select_candidates": [
            "select Cartoon.dir, count(*)",
            "select Cartoon.dir, count(*), Cartoon.wr",
            "select Cartoon.dir, count(*), Cartoon.prod_code",
            "select Cartoon.dir, count(*), Cartoon.chnl"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Cartoon",
        "table_candidates": [
            "Cartoon"
        ],
        "align_scores": [
            0.9962950348854065,
            0.00019397333380766213,
            0.000344486819813028,
            7.822180486982688e-05,
            0.00019225812866352499,
            7.897587784100324e-05,
            0.000496855063829571,
            8.234515553340316e-05
        ],
        "align_select": "select Cartoon.dir, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "Find the production code and channel of the most recently aired cartoon.",
        "gold_select": "select Cartoon.prod_code, Cartoon.chnl",
        "select_candidates": [
            "select Cartoon.prod_code, Cartoon.chnl",
            "select max(Cartoon.prod_code), max(Cartoon.chnl)",
            "select Cartoon.prod_code, Cartoon.chnl, Cartoon.wr",
            "select Cartoon.prod_code, Cartoon.chnl, t2.c7"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Cartoon",
        "table_candidates": [
            "Cartoon",
            "TV_Channel Cartoon",
            "TV_series Cartoon",
            "TV_Channel TV_series Cartoon"
        ],
        "align_scores": [
            0.9810268878936768,
            0.00010714318341342732,
            0.0015364798018708825,
            0.00013274274533614516,
            0.0007516572950407863,
            8.747947140363976e-05,
            0.0002714559668675065,
            7.072858716128394e-05
        ],
        "align_select": "select Cartoon.prod_code, Cartoon.chnl",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What is the produdction code and channel of the most recent cartoon?",
        "gold_select": "select Cartoon.prod_code, Cartoon.chnl",
        "select_candidates": [
            "select Cartoon.prod_code, Cartoon.chnl",
            "select max(Cartoon.prod_code), max(Cartoon.chnl)",
            "select Cartoon.prod_code.c5, Cartoon.chnl",
            "select Cartoon.prod_code, Cartoon.chnl"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Cartoon",
        "table_candidates": [
            "Cartoon",
            "TV_Channel Cartoon",
            "TV_Channel TV_series Cartoon",
            "TV_series Cartoon"
        ],
        "align_scores": [
            0.9611536860466003,
            0.00010368173388997093,
            0.0013492980506271124,
            8.10856290627271e-05,
            0.00044085411354899406,
            8.863184484653175e-05,
            0.9611536860466003,
            0.00010368173388997093
        ],
        "align_select": "select Cartoon.prod_code, Cartoon.chnl",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Find the package choice and series name of the TV channel that has high definition TV.",
        "gold_select": "select TV_Channel.Package_Option, TV_Channel.ser_name",
        "select_candidates": [
            "select TV_Channel.Package_Option, TV_Channel.ser_name",
            "select TV_Channel.ser_name, TV_Channel.Package_Option",
            "select TV_Channel.ppv, TV_Channel.ser_name",
            "select TV_Channel.Pixel_aspect_ratio_PAR, TV_Channel.ser_name"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel",
            "TV_Channel TV_series"
        ],
        "align_scores": [
            0.9870135188102722,
            0.00016715105448383838,
            0.989661455154419,
            0.00016585348930675536,
            0.41800999641418457,
            0.00019613963377196342,
            0.00033355021150782704,
            7.513871969422325e-05
        ],
        "align_select": "select TV_Channel.Package_Option, TV_Channel.ser_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the package options and the name of the series for the TV Channel that supports high definition TV?",
        "gold_select": "select TV_Channel.Package_Option, TV_Channel.ser_name",
        "select_candidates": [
            "select TV_Channel.Package_Option, TV_Channel.ser_name",
            "select TV_Channel.Package_Option, TV_series.ep",
            "select TV_series.chnl, TV_series.ep",
            "select TV_Channel.ser_name, TV_Channel.Package_Option"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel TV_series"
        ],
        "align_scores": [
            0.989364504814148,
            0.00020365422824397683,
            0.4682178795337677,
            9.715106716612354e-05,
            0.14551343023777008,
            0.00013384383055381477,
            0.9906488060951233,
            0.0001717697741696611
        ],
        "align_select": "select TV_Channel.Package_Option, TV_Channel.ser_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "which countries' tv channels are playing some cartoon written by Todd Casey?",
        "gold_select": "select TV_Channel.cntry",
        "select_candidates": [
            "select TV_Channel.cntry",
            "select distinct TV_Channel.cntry",
            "select TV_Channel.cntry, TV_Channel.lang",
            "select distinct TV_Channel.cntry, TV_Channel.lang"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel Cartoon"
        ],
        "align_scores": [
            0.7608389258384705,
            0.945426344871521,
            0.52366703748703,
            0.0013387110084295273,
            0.0003301090036984533,
            0.00045193638652563095,
            0.0006347073358483613,
            0.00019039899052586406
        ],
        "align_select": "select TV_Channel.cntry",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the countries that have cartoons on TV that were written by Todd Casey?",
        "gold_select": "select TV_Channel.cntry",
        "select_candidates": [
            "select TV_Channel.cntry",
            "select distinct TV_Channel.cntry",
            "select count(distinct TV_Channel.cntry)",
            "select count(*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel Cartoon"
        ],
        "align_scores": [
            0.7297619581222534,
            0.007363712880760431,
            0.6099151968955994,
            0.09970931708812714,
            0.06129808723926544,
            0.00047357927542179823,
            0.07950031757354736,
            0.0017871387535706162
        ],
        "align_select": "select TV_Channel.cntry",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "which countries' tv channels are not playing any cartoon written by Todd Casey?",
        "gold_select": "select TV_Channel.cntry",
        "select_candidates": [
            "select TV_Channel.cntry",
            "select distinct TV_Channel.cntry",
            "select TV_Channel.cntry, TV_Channel.lang",
            "select TV_Channel.cntry, Cartoon.wr"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel Cartoon"
        ],
        "align_scores": [
            0.9649422764778137,
            0.9649422764778137,
            0.06887088716030121,
            0.06887088716030121,
            0.00027170972316525877,
            0.00027170972316525877,
            0.0013144810218364,
            0.0013144810218364
        ],
        "align_select": "select TV_Channel.cntry",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the countries that are not playing cartoons written by Todd Casey?",
        "gold_select": "select TV_Channel.cntry",
        "select_candidates": [
            "select TV_Channel.cntry",
            "select TV_Channel.cntry, Cartoon.wr",
            "select distinct TV_Channel.cntry",
            "select TV_Channel.cntry, TV_Channel.lang"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel Cartoon"
        ],
        "align_scores": [
            0.9656229615211487,
            0.9656229615211487,
            0.0018324885750189424,
            0.0018324885750189424,
            0.06729676574468613,
            0.06729676574468613,
            0.0001958133652806282,
            0.0001958133652806282
        ],
        "align_select": "select TV_Channel.cntry",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "Find the series name and country of the tv channel that is playing some cartoons directed by Ben Jones and Michael Chang?",
        "gold_select": "select TV_Channel.ser_name, TV_Channel.cntry",
        "select_candidates": [
            "select TV_Channel.ser_name, TV_Channel.cntry",
            "select TV_Channel.ser_name, TV_Channel.cntry, TV_Channel.lang",
            "select TV_Channel.ser_name, TV_Channel.cntry",
            "select TV_Channel.ser_name, TV_Channel.cntry, Cartoon.chnl"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel TV_series Cartoon"
        ],
        "align_scores": [
            0.002625891473144293,
            0.000467302423203364,
            0.0001412521960446611,
            0.00011716041626641527,
            0.002625891473144293,
            0.000467302423203364,
            0.00021705463586840779,
            0.00015170458937063813
        ],
        "align_select": "select TV_Channel.ser_name, TV_Channel.cntry",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "What is the series name and country of all TV channels that are playing cartoons directed by Ben Jones and cartoons directed by Michael Chang?",
        "gold_select": "select TV_Channel.ser_name, TV_Channel.cntry",
        "select_candidates": [
            "select TV_Channel.ser_name, TV_Channel.cntry",
            "select TV_Channel.ser_name, TV_Channel.cntry, TV_Channel.lang",
            "select TV_Channel.ser_name, TV_Channel.cntry, TV_Channel.lang",
            "select TV_Channel.ser_name, TV_Channel.cntry"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel TV_series Cartoon"
        ],
        "align_scores": [
            0.9812907576560974,
            0.003980649169534445,
            0.0003742836124729365,
            0.00014531963097397238,
            0.0003742836124729365,
            0.00014531963097397238,
            0.9812907576560974,
            0.003980649169534445
        ],
        "align_select": "select TV_Channel.ser_name, TV_Channel.cntry",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "find the pixel aspect ratio and nation of the tv channels that do not use English.",
        "gold_select": "select TV_Channel.Pixel_aspect_ratio_PAR, TV_Channel.cntry",
        "select_candidates": [
            "select TV_Channel.Pixel_aspect_ratio_PAR, TV_Channel.cntry",
            "select TV_Channel.id, TV_Channel.Pixel_aspect_ratio_PAR, TV_Channel.cntry",
            "select TV_Channel.Pixel_aspect_ratio_PAR.c5, TV_Channel.cntry",
            "select TV_Channel.Pixel_aspect_ratio_PAR, TV_Channel.lang"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel"
        ],
        "align_scores": [
            0.9351316690444946,
            0.00018902748706750572,
            0.0002270712866447866,
            7.835043652448803e-05,
            0.0003108548989985138,
            7.502101652789861e-05,
            0.16136319935321808,
            0.00012641138164326549
        ],
        "align_select": "select TV_Channel.Pixel_aspect_ratio_PAR, TV_Channel.cntry",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the pixel aspect ratio and country of origin for all TV channels that do not use English?",
        "gold_select": "select TV_Channel.Pixel_aspect_ratio_PAR, TV_Channel.cntry",
        "select_candidates": [
            "select TV_Channel.Pixel_aspect_ratio_PAR, TV_Channel.cntry",
            "select TV_Channel.id, TV_Channel.Pixel_aspect_ratio_PAR, TV_Channel.cntry",
            "select TV_Channel.Pixel_aspect_ratio_PAR.c5, TV_Channel.cntry",
            "select max(TV_Channel.Pixel_aspect_ratio_PAR), TV_Channel.cntry"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel"
        ],
        "align_scores": [
            0.9275375604629517,
            0.00022131401055958122,
            0.00024807508452795446,
            8.756209717830643e-05,
            0.0002890575269702822,
            8.80991283338517e-05,
            0.00034922509803436697,
            9.217311162501574e-05
        ],
        "align_select": "select TV_Channel.Pixel_aspect_ratio_PAR, TV_Channel.cntry",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "find id of the tv channels that from the countries where have more than two tv channels.",
        "gold_select": "select TV_Channel.id",
        "select_candidates": [
            "select TV_Channel.id",
            "select TV_Channel.id, TV_Channel.cntry",
            "select t0.c, TV_Channel.cntry",
            "select TV_Channel.id, TV_Channel.cntry, TV_Channel.lang"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel",
            "TV_Channel TV_series",
            "TV_Channel TV_series Cartoon",
            "TV_Channel Cartoon",
            "TV_Channel TV_series Cartoon",
            "TV_Channel Cartoon"
        ],
        "align_scores": [
            0.9869353771209717,
            0.00016700464766472578,
            0.017693474888801575,
            0.00017932968330569565,
            0.0005014139460399747,
            8.903608249966055e-05,
            0.0001843101781560108,
            9.310135646956041e-05
        ],
        "align_select": "select TV_Channel.id",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the ids of all tv channels that have more than 2 TV channels?",
        "gold_select": "select TV_Channel.id",
        "select_candidates": [
            "select TV_Channel.id",
            "select TV_Channel.id, TV_Channel.cntry",
            "select TV_Channel.id, TV_Channel.ser_name",
            "select TV_Channel.id, TV_Channel.lang"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel"
        ],
        "align_scores": [
            0.9768571257591248,
            0.000159341303515248,
            0.00035232066875323653,
            7.95953965280205e-05,
            0.00043274773634038866,
            9.097236033994704e-05,
            0.0001365345815429464,
            8.871962927514687e-05
        ],
        "align_select": "select TV_Channel.id",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "find the id of tv channels that do not play any cartoon directed by Ben Jones.",
        "gold_select": "select TV_Channel.id",
        "select_candidates": [
            "select TV_Channel.id",
            "select TV_Channel.id, Cartoon.chnl",
            "select TV_Channel.id, TV_Channel.ser_name",
            "select TV_Channel.id, Cartoon.dir"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel Cartoon"
        ],
        "align_scores": [
            0.9765847325325012,
            0.9765847325325012,
            0.0012112412368878722,
            0.0012112412368878722,
            0.0002446196449454874,
            0.0002446196449454874,
            0.0006833249353803694,
            0.0006833249353803694
        ],
        "align_select": "select TV_Channel.id",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the ids of the TV channels that do not have any cartoons directed by Ben Jones?",
        "gold_select": "select TV_Channel.id",
        "select_candidates": [
            "select TV_Channel.id",
            "select TV_Channel.id, Cartoon.dir",
            "select TV_Channel.id, Cartoon.chnl",
            "select TV_Channel.id, TV_Channel.ser_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel Cartoon"
        ],
        "align_scores": [
            0.9697651267051697,
            0.9697651267051697,
            0.0005379528156481683,
            0.0005379528156481683,
            0.0012806144077330828,
            0.0012806144077330828,
            0.0002696215233299881,
            0.0002696215233299881
        ],
        "align_select": "select TV_Channel.id",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "find the package option of the tv channel that do not have any cartoon directed by Ben Jones.",
        "gold_select": "select TV_Channel.Package_Option",
        "select_candidates": [
            "select TV_Channel.Package_Option",
            "select TV_Channel.Package_Option, Cartoon.dir",
            "select TV_Channel.Package_Option, TV_Channel.cntry",
            "select TV_Channel.Package_Option, TV_Channel.Pixel_aspect_ratio_PAR"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel Cartoon"
        ],
        "align_scores": [
            0.9793640971183777,
            0.0031128341797739267,
            0.00033652776619419456,
            0.00019080571655649692,
            0.00019287817121949047,
            0.00012628259719349444,
            0.0001666713651502505,
            0.00010989930888172239
        ],
        "align_select": "select TV_Channel.Package_Option",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the package options of all tv channels that are not playing any cartoons directed by Ben Jones?",
        "gold_select": "select TV_Channel.Package_Option",
        "select_candidates": [
            "select TV_Channel.Package_Option",
            "select TV_Channel.Package_Option, Cartoon.dir",
            "select TV_Channel.Pixel_aspect_ratio_PAR, TV_Channel.Package_Option",
            "select TV_Channel.ppv, TV_Channel.Package_Option"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel Cartoon"
        ],
        "align_scores": [
            0.9715648889541626,
            0.003954954911023378,
            0.00041641920688562095,
            0.0001731073425617069,
            0.00024448303156532347,
            0.00014608290803153068,
            0.00021526339696720243,
            0.00012981465260963887
        ],
        "align_select": "select TV_Channel.Package_Option",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "How many cartoons were written by \"Joseph Kuhr\"?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Cartoon.id",
            "select count(*), Cartoon.Title",
            "select count(*), Cartoon.id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Cartoon",
        "table_candidates": [
            "Cartoon",
            "TV_series Cartoon"
        ],
        "align_scores": [
            0.9933307766914368,
            0.0005463967681862414,
            0.00028623611433431506,
            0.00027284075622446835,
            0.00025870694662444293,
            0.0016677918611094356,
            0.00028623611433431506,
            0.00027284075622446835
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the number of cartoones written by Joseph Kuhr?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Cartoon.id",
            "select count(*), Cartoon.Title",
            "select count(*), Cartoon.wr"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Cartoon",
        "table_candidates": [
            "Cartoon",
            "TV_series Cartoon"
        ],
        "align_scores": [
            0.9892503023147583,
            0.0003021026204805821,
            0.00025901402113959193,
            0.0001740011211950332,
            0.00024879994452930987,
            0.0006547386874444783,
            0.0003174821613356471,
            0.022964539006352425
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which country has the most of TV Channels? List the country and number of TV Channels it has.",
        "gold_select": "select TV_Channel.cntry, count(*)",
        "select_candidates": [
            "select TV_Channel.cntry, count(*)",
            "select TV_Channel.cntry, count(TV_Channel.id)",
            "select TV_Channel.cntry.c2, count(*)",
            "select TV_Channel.cntry, count(*), TV_Channel.lang"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-UNION-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel"
        ],
        "align_scores": [
            0.5638079643249512,
            0.00010268512414768338,
            0.0005510105984285474,
            9.293317270930856e-05,
            0.0005253689596429467,
            8.220392919611186e-05,
            0.00014146353350952268,
            7.124174589989707e-05
        ],
        "align_select": "select TV_Channel.cntry, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the country with the most number of TV Channels and how many does it have?",
        "gold_select": "select TV_Channel.cntry, count(*)",
        "select_candidates": [
            "select TV_Channel.cntry, count(*)",
            "select TV_Channel.cntry, count(*), TV_Channel.lang",
            "select TV_Channel.cntry.c2, count(*)",
            "select TV_Channel.cntry.c0, count(*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel"
        ],
        "align_scores": [
            0.9871417284011841,
            8.450145105598494e-05,
            0.00017699270392768085,
            5.7720088079804555e-05,
            0.0024934117682278156,
            6.545059295604005e-05,
            0.0019766846671700478,
            6.978554301895201e-05
        ],
        "align_select": "select TV_Channel.cntry, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "List the number of different series names and contents in the TV Channel table.",
        "gold_select": "select count(distinct TV_Channel.ser_name), count(distinct TV_Channel.cont)",
        "select_candidates": [
            "select count(distinct TV_Channel.ser_name), count(distinct TV_series.chnl)",
            "select count(distinct TV_Channel.ser_name), count(distinct TV_series.Viewers_m)",
            "select count(distinct TV_Channel.ser_name), TV_series.chnl",
            "select count(distinct TV_Channel.ser_name), count(distinct TV_series.Share)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel TV_series"
        ],
        "align_scores": [
            0.0012108208611607552,
            0.0012108208611607552,
            0.0002780463546514511,
            0.0002780463546514511,
            0.0017934426432475448,
            0.0017934426432475448,
            0.003241347847506404,
            0.003241347847506404
        ],
        "align_select": "select count(distinct TV_Channel.ser_name), count(distinct TV_series.chnl)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "How many different series and contents are listed in the TV Channel table?",
        "gold_select": "select count(distinct TV_Channel.ser_name), count(distinct TV_Channel.cont)",
        "select_candidates": [
            "select count(distinct TV_series.id), count(distinct TV_Channel.cont)",
            "select count(distinct TV_series.ep), count(distinct TV_Channel.cont)",
            "select count(distinct TV_series.id), count(distinct TV_series.chnl)",
            "select count(distinct TV_series.Air_Date), count(distinct TV_Channel.cont)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel TV_series",
            "TV_Channel TV_series Cartoon",
            "TV_series Cartoon"
        ],
        "align_scores": [
            0.007463451009243727,
            9.14968695724383e-05,
            0.0016127433627843857,
            8.535692177247256e-05,
            0.000312370975734666,
            9.016493277158588e-05,
            0.00037091923877596855,
            9.948780643753707e-05
        ],
        "align_select": "select count(distinct TV_series.id), count(distinct TV_Channel.cont)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What is the content of TV Channel with serial name \"Sky Radio\"?",
        "gold_select": "select TV_Channel.cont",
        "select_candidates": [
            "select TV_Channel.cont",
            "select TV_Channel.cont, TV_Channel.lang",
            "select TV_Channel.cont, TV_Channel.Pixel_aspect_ratio_PAR",
            "select TV_Channel.cont, TV_Channel.cntry"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel",
            "TV_Channel TV_series"
        ],
        "align_scores": [
            0.993359386920929,
            0.0001383041962981224,
            0.00015014273230917752,
            6.344755092868581e-05,
            0.00013970867439638823,
            6.108785601099953e-05,
            0.0001672081125434488,
            6.775552174076438e-05
        ],
        "align_select": "select TV_Channel.cont",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the content of the series Sky Radio?",
        "gold_select": "select TV_Channel.cont",
        "select_candidates": [
            "select TV_series.ep",
            "select TV_series.ep, TV_series.Air_Date",
            "select TV_series.ep, TV_Channel.cntry",
            "select TV_series.ep, TV_series.rtg"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel TV_series"
        ],
        "align_scores": [
            0.23594866693019867,
            7.97328248154372e-05,
            0.00014308634854387492,
            6.112433038651943e-05,
            0.00015643428196199238,
            6.244154792511836e-05,
            0.000416464899899438,
            7.146601274143904e-05
        ],
        "align_select": "select TV_series.ep",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the Package Option of TV Channel with serial name \"Sky Radio\"?",
        "gold_select": "select TV_Channel.Package_Option",
        "select_candidates": [
            "select TV_Channel.Package_Option",
            "select TV_Channel.Package_Option, TV_Channel.ppv",
            "select TV_Channel.Package_Option, TV_Channel.ser_name",
            "select TV_Channel.Package_Option, t0.c9"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel"
        ],
        "align_scores": [
            0.9931334853172302,
            9.729913290357217e-05,
            0.00018323969561606646,
            7.01321114320308e-05,
            0.00015071564121171832,
            7.334019028348848e-05,
            0.0004742058226838708,
            7.333655230468139e-05
        ],
        "align_select": "select TV_Channel.Package_Option",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the Package Options of the TV Channels whose series names are Sky Radio?",
        "gold_select": "select TV_Channel.Package_Option",
        "select_candidates": [
            "select TV_Channel.Package_Option",
            "select TV_Channel.Package_Option, TV_Channel.ser_name",
            "select TV_Channel.hd, TV_Channel.Package_Option",
            "select TV_Channel.ppv, TV_Channel.Package_Option"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel",
            "TV_Channel TV_series"
        ],
        "align_scores": [
            0.8821687698364258,
            7.68877289374359e-05,
            0.000190506485523656,
            6.524252239614725e-05,
            0.00018254491442348808,
            6.0163198213558644e-05,
            0.0002157709823222831,
            6.817666871938854e-05
        ],
        "align_select": "select TV_Channel.Package_Option",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many TV Channel using language English?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), TV_Channel.lang",
            "select count(*), TV_Channel.cntry",
            "select count(*), TV_Channel.id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel"
        ],
        "align_scores": [
            0.9956632256507874,
            8.045028516789898e-05,
            0.0002586929185781628,
            6.181978824315593e-05,
            0.00028138034394942224,
            8.65633410285227e-05,
            0.00023922020045574754,
            6.144342478364706e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many TV Channels use the English language?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), TV_Channel.lang",
            "select count(*), TV_Channel.lang, TV_Channel.cntry",
            "select count(*), TV_Channel.lang, TV_Channel.cont"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel"
        ],
        "align_scores": [
            0.9932244420051575,
            9.938672883436084e-05,
            0.0003005343896802515,
            6.993395800236613e-05,
            0.00010301957809133455,
            5.3925756219541654e-05,
            0.00010750506044132635,
            5.3977928473614156e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List the language used least number of TV Channel. List language and number of TV Channel.",
        "gold_select": "select TV_Channel.lang, count(*)",
        "select_candidates": [
            "select TV_Channel.lang, count(*)",
            "select TV_Channel.lang, count(TV_Channel.id)",
            "select TV_Channel.lang, count(*), TV_Channel.cntry",
            "select TV_Channel.ser_name, count(*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-UNION-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel"
        ],
        "align_scores": [
            0.9942020773887634,
            0.00012261095980647951,
            0.0015422741416841745,
            8.485237776767462e-05,
            0.0004299090651329607,
            7.737841224297881e-05,
            0.9558736085891724,
            0.0001274964160984382
        ],
        "align_select": "select TV_Channel.lang, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What are the languages used by the least number of TV Channels and how many channels use it?",
        "gold_select": "select TV_Channel.lang, count(*)",
        "select_candidates": [
            "select TV_Channel.lang, count(*)",
            "select TV_Channel.ser_name, count(*)",
            "select TV_Channel.lang, count(*), TV_Channel.cntry",
            "select TV_Channel.cntry, count(*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-UNION-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel"
        ],
        "align_scores": [
            0.9943998456001282,
            0.00016609895101282746,
            0.8788560628890991,
            0.00018867183825932443,
            0.00036522597656585276,
            8.48222043714486e-05,
            0.014457492157816887,
            0.00015660544158890843
        ],
        "align_select": "select TV_Channel.lang, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "List each language and the number of TV Channels using it.",
        "gold_select": "select TV_Channel.lang, count(*)",
        "select_candidates": [
            "select TV_Channel.lang, count(*)",
            "select TV_Channel.lang, count(*), TV_Channel.cntry",
            "select TV_Channel.lang.c3, count(*)",
            "select TV_Channel.lang, count(TV_Channel.id)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel"
        ],
        "align_scores": [
            0.995805025100708,
            0.00018615936278365552,
            0.0002580096188466996,
            8.785717363934964e-05,
            0.000982859288342297,
            0.00014862419629935175,
            0.000354836811311543,
            0.00018353818450123072
        ],
        "align_select": "select TV_Channel.lang, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "For each language, list the number of TV Channels that use it.",
        "gold_select": "select TV_Channel.lang, count(*)",
        "select_candidates": [
            "select TV_Channel.lang, count(*)",
            "select TV_Channel.lang, count(*), TV_Channel.cntry",
            "select count(*), TV_Channel.lang",
            "select TV_Channel.lang.c3, count(*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel"
        ],
        "align_scores": [
            0.9949833154678345,
            0.00019844099006149918,
            0.00032540233223699033,
            8.9644207037054e-05,
            0.9944419264793396,
            0.0001984069385798648,
            0.0008958900580182672,
            0.00016214426432270557
        ],
        "align_select": "select TV_Channel.lang, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "What is the TV Channel that shows the cartoon \"The Rise of the Blue Beetle!\"? List the TV Channel's series name.",
        "gold_select": "select TV_Channel.ser_name",
        "select_candidates": [
            "select TV_Channel.ser_name",
            "select TV_Channel.ser_name, Cartoon.chnl",
            "select Cartoon.chnl, TV_Channel.ser_name",
            "select TV_Channel.ser_name, TV_series.chnl"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel TV_series Cartoon"
        ],
        "align_scores": [
            0.9874131679534912,
            0.0001234675437444821,
            0.0032656826078891754,
            0.00012340117245912552,
            0.001004390069283545,
            0.00012200892524560913,
            0.0021251693833619356,
            9.936455171555281e-05
        ],
        "align_select": "select TV_Channel.ser_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the series name of the TV Channel that shows the cartoon \"The Rise of the Blue Beetle\"?",
        "gold_select": "select TV_Channel.ser_name",
        "select_candidates": [
            "select TV_Channel.ser_name",
            "select TV_Channel.ser_name, Cartoon.chnl",
            "select Cartoon.Title, TV_Channel.ser_name",
            "select TV_Channel.ser_name, TV_series.chnl"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel TV_series Cartoon"
        ],
        "align_scores": [
            0.991803765296936,
            8.685588545631617e-05,
            0.0018114487174898386,
            7.689631456742063e-05,
            0.0003112057165708393,
            7.372738764388487e-05,
            0.0006002130685374141,
            6.727971776854247e-05
        ],
        "align_select": "select TV_Channel.ser_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List the title of all Cartoons showed on TV Channel with series name \"Sky Radio\".",
        "gold_select": "select Cartoon.Title",
        "select_candidates": [
            "select Cartoon.Title",
            "select Cartoon.Title, TV_Channel.ser_name",
            "select Cartoon.Title, TV_Channel.cntry",
            "select Cartoon.Title, TV_Channel.lang"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel TV_series Cartoon"
        ],
        "align_scores": [
            0.6704760789871216,
            0.0001531713642179966,
            0.000231568468734622,
            6.42530940240249e-05,
            0.00021974938863422722,
            6.550410034833476e-05,
            0.00018920203729066998,
            6.175981252454221e-05
        ],
        "align_select": "select Cartoon.Title",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the title of all the cartools that are on the TV Channel with the series name \"Sky Radio\"?",
        "gold_select": "select Cartoon.Title",
        "select_candidates": [
            "select Cartoon.Title",
            "select Cartoon.Title, TV_Channel.cntry",
            "select Cartoon.Title, TV_Channel.ser_name",
            "select Cartoon.Title, TV_Channel.lang"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel TV_series Cartoon"
        ],
        "align_scores": [
            0.093967504799366,
            0.0001493901654612273,
            0.0002501967828720808,
            6.907505303388461e-05,
            0.0003168247640132904,
            6.855734682176262e-05,
            0.00018320090021006763,
            6.649472925346345e-05
        ],
        "align_select": "select Cartoon.Title",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List the Episode of all TV series sorted by rating.",
        "gold_select": "select TV_series.ep",
        "select_candidates": [
            "select TV_series.ep",
            "select TV_series.ep, TV_series.18_49_Rating_Share",
            "select TV_series.ep, TV_series.Viewers_m",
            "select TV_series.ep, TV_series.rtg"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "TV_series",
        "table_candidates": [
            "TV_series"
        ],
        "align_scores": [
            0.9937540888786316,
            0.9937540888786316,
            0.00015892584633547813,
            0.00015892584633547813,
            0.00019109886488877237,
            0.00019109886488877237,
            0.00028380623552948236,
            0.00028380623552948236
        ],
        "align_select": "select TV_series.ep",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "What are all of the episodes ordered by ratings?",
        "gold_select": "select TV_series.ep",
        "select_candidates": [
            "select TV_series.ep",
            "select TV_series.ep, TV_series.18_49_Rating_Share",
            "select TV_series.ep, TV_series.Air_Date",
            "select TV_series.ep, TV_series.rtg"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "TV_series",
        "table_candidates": [
            "TV_series"
        ],
        "align_scores": [
            0.8212205767631531,
            0.8212205767631531,
            0.000254963175393641,
            0.000254963175393641,
            0.00015746390272397548,
            0.00015746390272397548,
            0.00031305305310525,
            0.00031305305310525
        ],
        "align_select": "select TV_series.ep",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "List top 3 highest Rating TV series. List the TV series's Episode and Rating.",
        "gold_select": "select TV_series.ep, TV_series.rtg",
        "select_candidates": [
            "select TV_series.ep, TV_series.18_49_Rating_Share",
            "select TV_series.ep, TV_series.18_49_Rating_Share.",
            "select TV_series.ep, TV_series.Viewers_m",
            "select TV_series.ep, TV_series.rtg"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_series",
        "table_candidates": [
            "TV_series"
        ],
        "align_scores": [
            0.9925507307052612,
            8.924782741814852e-05,
            0.0026834949385374784,
            8.732494461582974e-05,
            0.9918166995048523,
            8.045412687351927e-05,
            0.988440752029419,
            7.20317184459418e-05
        ],
        "align_select": "select TV_series.ep, TV_series.18_49_Rating_Share",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What are 3 most highly rated episodes in the TV series table and what were those ratings?",
        "gold_select": "select TV_series.ep, TV_series.rtg",
        "select_candidates": [
            "select TV_series.ep, TV_series.18_49_Rating_Share",
            "select TV_series.ep, TV_series.rtg",
            "select TV_series.ep, TV_series.Air_Date",
            "select TV_series.ep, TV_series.Viewers_m"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_series",
        "table_candidates": [
            "TV_series"
        ],
        "align_scores": [
            0.9904442429542542,
            7.3954914114438e-05,
            0.9896727800369263,
            6.324179412331432e-05,
            0.00031710765324532986,
            7.064129749778658e-05,
            0.9196351170539856,
            6.179569754749537e-05
        ],
        "align_select": "select TV_series.ep, TV_series.18_49_Rating_Share",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What is the air date of TV series with Episode \"A Love of a Lifetime\"?",
        "gold_select": "select TV_series.Air_Date",
        "select_candidates": [
            "select TV_series.Air_Date",
            "select TV_series.id, TV_series.Air_Date",
            "select TV_series.Air_Date (or TV_series.rtg)",
            "select TV_series.Air_Date (http://TV_series.Air_Date)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_series",
        "table_candidates": [
            "TV_series"
        ],
        "align_scores": [
            0.9956091046333313,
            8.290804544230923e-05,
            0.00014862604439258575,
            6.464298348873854e-05,
            0.11075843125581741,
            7.087272388162091e-05,
            0.004088230896741152,
            7.698090485064313e-05
        ],
        "align_select": "select TV_series.Air_Date",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "When did the episode \"A Love of a Lifetime\" air?",
        "gold_select": "select TV_series.Air_Date",
        "select_candidates": [
            "select TV_series.Air_Date",
            "select TV_series.id, TV_series.Air_Date",
            "select avg(TV_series.Air_Date)",
            "select TV_series.Air_Date, TV_series.rtg"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_series",
        "table_candidates": [
            "TV_series"
        ],
        "align_scores": [
            0.993253767490387,
            8.067315502557904e-05,
            0.00015598905156366527,
            6.49498324492015e-05,
            0.01239099632948637,
            6.695661431876943e-05,
            0.00018983232439495623,
            6.640696665272117e-05
        ],
        "align_select": "select TV_series.Air_Date",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is Weekly Rank of TV series with Episode \"A Love of a Lifetime\"?",
        "gold_select": "select TV_series.Weekly_Rank",
        "select_candidates": [
            "select TV_series.Weekly_Rank",
            "select TV_series.id, TV_series.Weekly_Rank",
            "select TV_series.Weekly_Rank, TV_series.chnl",
            "select TV_series.Weekly_Rank, TV_series.Viewers_m"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_series",
        "table_candidates": [
            "TV_series"
        ],
        "align_scores": [
            0.9959630370140076,
            0.00010749901412054896,
            0.00015752545732539147,
            6.657130870735273e-05,
            0.0002590145159047097,
            6.845941970823333e-05,
            0.0001394827850162983,
            6.26575929345563e-05
        ],
        "align_select": "select TV_series.Weekly_Rank",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the weekly rank for the episode \"A Love of a Lifetime\"?",
        "gold_select": "select TV_series.Weekly_Rank",
        "select_candidates": [
            "select TV_series.Weekly_Rank",
            "select TV_series.Weekly_Rank, TV_series.Viewers_m",
            "select TV_series.Weekly_Rank, TV_series.chnl",
            "select TV_series.Weekly_Rank, TV_series.Air_Date"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_series",
        "table_candidates": [
            "TV_series",
            "TV_Channel TV_series"
        ],
        "align_scores": [
            0.9955797791481018,
            7.797031139489263e-05,
            0.00014831528824288398,
            5.999750646878965e-05,
            0.0002608421491459012,
            6.532325642183423e-05,
            0.0001203474384965375,
            5.988747579976916e-05
        ],
        "align_select": "select TV_series.Weekly_Rank",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the TV Channel of TV series with Episode \"A Love of a Lifetime\"? List the TV Channel's series name.",
        "gold_select": "select TV_Channel.ser_name",
        "select_candidates": [
            "select TV_Channel.ser_name",
            "select TV_Channel.ser_name, TV_series.chnl",
            "select TV_Channel.ser_name, TV_series.chnl",
            "select TV_Channel.id, TV_series.chnl"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel TV_series",
        "table_candidates": [
            "TV_Channel TV_series"
        ],
        "align_scores": [
            0.9906676411628723,
            9.956602298188955e-05,
            0.0011745677329599857,
            8.239511225838214e-05,
            0.0011745677329599857,
            8.239511225838214e-05,
            0.0003123932983726263,
            8.665179484523833e-05
        ],
        "align_select": "select TV_Channel.ser_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the name of the series that has the episode \"A Love of a Lifetime\"?",
        "gold_select": "select TV_Channel.ser_name",
        "select_candidates": [
            "select TV_Channel.ser_name",
            "select TV_Channel.ser_name, TV_series.chnl",
            "select TV_series.ep",
            "select Cartoon.Title, TV_Channel.ser_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel TV_series",
        "table_candidates": [
            "TV_series",
            "TV_Channel TV_series",
            "Cartoon TV_series"
        ],
        "align_scores": [
            0.9770551919937134,
            0.00010379213927080855,
            0.0003843531012535095,
            7.137680222513154e-05,
            0.5167618989944458,
            8.523304859409109e-05,
            0.0003613350563682616,
            7.959130016388372e-05
        ],
        "align_select": "select TV_Channel.ser_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List the Episode of all TV series showed on TV Channel with series name \"Sky Radio\".",
        "gold_select": "select TV_series.ep",
        "select_candidates": [
            "select TV_series.ep",
            "select TV_series.ep, TV_Channel.cntry",
            "select TV_series.ep, TV_Channel.cntry, TV_series.rtg",
            "select TV_series.ep, TV_Channel.cntry, TV_series.Share"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel TV_series",
        "table_candidates": [
            "TV_Channel TV_series"
        ],
        "align_scores": [
            0.6319696307182312,
            0.00013292768562678248,
            0.00016272073844447732,
            6.913158722454682e-05,
            0.0001811430702218786,
            6.561245390912518e-05,
            0.00013424082135315984,
            6.0561647842405364e-05
        ],
        "align_select": "select TV_series.ep",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the episode for the TV series named \"Sky Radio\"?",
        "gold_select": "select TV_series.ep",
        "select_candidates": [
            "select TV_series.ep",
            "select TV_series.ep, TV_Channel.cntry",
            "select TV_series.ep, TV_Channel.ser_name",
            "select TV_series.ep, TV_Channel.lang"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel TV_series",
        "table_candidates": [
            "TV_Channel TV_series",
            "TV_Channel TV_series"
        ],
        "align_scores": [
            0.9872199296951294,
            7.332158565986902e-05,
            0.0001329872611677274,
            5.808856076328084e-05,
            0.00013005589426029474,
            6.017984196660109e-05,
            0.00014221607125364244,
            5.5494958360213786e-05
        ],
        "align_select": "select TV_series.ep",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the production code and channel of the most recently aired cartoon.",
        "gold_select": "select Cartoon.prod_code, Cartoon.chnl",
        "select_candidates": [
            "select Cartoon.prod_code, Cartoon.chnl",
            "select Cartoon.prod_code, Cartoon.chnl, t2.c7",
            "select max(Cartoon.prod_code), max(Cartoon.chnl)",
            "select Cartoon.prod_code.c5, Cartoon.chnl"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Cartoon",
        "table_candidates": [
            "Cartoon",
            "TV_Channel Cartoon",
            "TV_Channel TV_series Cartoon",
            "TV_series Cartoon"
        ],
        "align_scores": [
            0.9810268878936768,
            0.00010714318341342732,
            0.0002714559668675065,
            7.072858716128394e-05,
            0.0015364798018708825,
            0.00013274274533614516,
            0.0004752498061861843,
            8.776808681432158e-05
        ],
        "align_select": "select Cartoon.prod_code, Cartoon.chnl",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What is the produdction code and channel of the most recent cartoon?",
        "gold_select": "select Cartoon.prod_code, Cartoon.chnl",
        "select_candidates": [
            "select Cartoon.prod_code, Cartoon.chnl",
            "select max(Cartoon.prod_code), max(Cartoon.chnl)",
            "select Cartoon.prod_code.c5, Cartoon.chnl",
            "select Cartoon.prod_code, Cartoon.chnl"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Cartoon",
        "table_candidates": [
            "Cartoon",
            "TV_Channel Cartoon",
            "TV_Channel TV_series Cartoon",
            "TV_series Cartoon"
        ],
        "align_scores": [
            0.9611536860466003,
            0.00010368173388997093,
            0.0013492980506271124,
            8.10856290627271e-05,
            0.00044085411354899406,
            8.863184484653175e-05,
            0.9611536860466003,
            0.00010368173388997093
        ],
        "align_select": "select Cartoon.prod_code, Cartoon.chnl",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Find the package choice and series name of the TV channel that has high definition TV.",
        "gold_select": "select TV_Channel.Package_Option, TV_Channel.ser_name",
        "select_candidates": [
            "select TV_Channel.Package_Option, TV_Channel.ser_name",
            "select TV_Channel.ser_name, TV_Channel.Package_Option",
            "select TV_Channel.ppv, TV_Channel.ser_name",
            "select TV_Channel.Pixel_aspect_ratio_PAR, TV_Channel.ser_name"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel",
            "TV_Channel TV_series"
        ],
        "align_scores": [
            0.9870135188102722,
            0.00016715105448383838,
            0.989661455154419,
            0.00016585348930675536,
            0.41800999641418457,
            0.00019613963377196342,
            0.00033355021150782704,
            7.513871969422325e-05
        ],
        "align_select": "select TV_Channel.Package_Option, TV_Channel.ser_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the package options and the name of the series for the TV Channel that supports high definition TV?",
        "gold_select": "select TV_Channel.Package_Option, TV_Channel.ser_name",
        "select_candidates": [
            "select TV_Channel.Package_Option, TV_Channel.ser_name",
            "select TV_series.chnl, TV_series.ep",
            "select TV_Channel.Package_Option, TV_series.ep",
            "select TV_Channel.ser_name, TV_Channel.Package_Option"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel TV_series"
        ],
        "align_scores": [
            0.989364504814148,
            0.00020365422824397683,
            0.14551343023777008,
            0.00013384383055381477,
            0.4682178795337677,
            9.715106716612354e-05,
            0.9906488060951233,
            0.0001717697741696611
        ],
        "align_select": "select TV_Channel.Package_Option, TV_Channel.ser_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "which countries' tv channels are playing some cartoon written by Todd Casey?",
        "gold_select": "select TV_Channel.cntry",
        "select_candidates": [
            "select TV_Channel.cntry",
            "select distinct TV_Channel.cntry",
            "select TV_Channel.cntry, TV_Channel.lang",
            "select distinct TV_Channel.cntry, TV_Channel.lang"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel Cartoon"
        ],
        "align_scores": [
            0.7608389258384705,
            0.1987437754869461,
            0.52366703748703,
            0.0008508757455274463,
            0.0003301090036984533,
            0.000252593687037006,
            0.0006347073358483613,
            0.00014696954167447984
        ],
        "align_select": "select TV_Channel.cntry",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the countries that have cartoons on TV that were written by Todd Casey?",
        "gold_select": "select TV_Channel.cntry",
        "select_candidates": [
            "select TV_Channel.cntry",
            "select distinct TV_Channel.cntry",
            "select count(distinct TV_Channel.cntry)",
            "select count(*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel Cartoon",
            "TV_Channel TV_series Cartoon"
        ],
        "align_scores": [
            0.7297619581222534,
            0.007363712880760431,
            0.6099151968955994,
            0.09970931708812714,
            0.06129808723926544,
            0.00047357927542179823,
            0.07950031757354736,
            0.0017871387535706162
        ],
        "align_select": "select TV_Channel.cntry",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "which countries' tv channels are not playing any cartoon written by Todd Casey?",
        "gold_select": "select TV_Channel.cntry",
        "select_candidates": [
            "select TV_Channel.cntry",
            "select distinct TV_Channel.cntry",
            "select TV_Channel.cntry, TV_Channel.lang",
            "select TV_Channel.cntry, Cartoon.wr"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel Cartoon"
        ],
        "align_scores": [
            0.9649422764778137,
            0.9649422764778137,
            0.06887088716030121,
            0.06887088716030121,
            0.00027170972316525877,
            0.00027170972316525877,
            0.0013144810218364,
            0.0013144810218364
        ],
        "align_select": "select TV_Channel.cntry",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the countries that are not playing cartoons written by Todd Casey?",
        "gold_select": "select TV_Channel.cntry",
        "select_candidates": [
            "select TV_Channel.cntry",
            "select TV_Channel.cntry, Cartoon.wr",
            "select TV_Channel.cntry, Cartoon.chnl",
            "select distinct TV_Channel.cntry"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel Cartoon"
        ],
        "align_scores": [
            0.9656229615211487,
            0.9656229615211487,
            0.0018324885750189424,
            0.0018324885750189424,
            0.0015394305810332298,
            0.0015394305810332298,
            0.06729676574468613,
            0.06729676574468613
        ],
        "align_select": "select TV_Channel.cntry",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "Find the series name and country of the tv channel that is playing some cartoons directed by Ben Jones and Michael Chang?",
        "gold_select": "select TV_Channel.ser_name, TV_Channel.cntry",
        "select_candidates": [
            "select TV_Channel.ser_name, TV_Channel.cntry",
            "select TV_Channel.ser_name, TV_Channel.cntry, TV_Channel.lang",
            "select TV_Channel.ser_name, TV_Channel.cntry",
            "select TV_Channel.ser_name, TV_Channel.cntry, Cartoon.chnl"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel TV_series Cartoon"
        ],
        "align_scores": [
            0.002625891473144293,
            0.000467302423203364,
            0.0001412521960446611,
            0.00011716041626641527,
            0.002625891473144293,
            0.000467302423203364,
            0.00021705463586840779,
            0.00015170458937063813
        ],
        "align_select": "select TV_Channel.ser_name, TV_Channel.cntry",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "What is the series name and country of all TV channels that are playing cartoons directed by Ben Jones and cartoons directed by Michael Chang?",
        "gold_select": "select TV_Channel.ser_name, TV_Channel.cntry",
        "select_candidates": [
            "select TV_Channel.ser_name, TV_Channel.cntry",
            "select TV_Channel.ser_name, TV_Channel.cntry, TV_Channel.lang",
            "select TV_Channel.ser_name, TV_Channel.cntry",
            "select TV_series.ep, TV_Channel.cntry"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel TV_series Cartoon"
        ],
        "align_scores": [
            0.9812907576560974,
            0.9812907576560974,
            0.0003742836124729365,
            0.0003742836124729365,
            0.9812907576560974,
            0.9812907576560974,
            0.0021564774215221405,
            0.0021564774215221405
        ],
        "align_select": "select TV_Channel.ser_name, TV_Channel.cntry",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "find the pixel aspect ratio and nation of the tv channels that do not use English.",
        "gold_select": "select TV_Channel.Pixel_aspect_ratio_PAR, TV_Channel.cntry",
        "select_candidates": [
            "select TV_Channel.Pixel_aspect_ratio_PAR, TV_Channel.cntry",
            "select TV_Channel.id, TV_Channel.Pixel_aspect_ratio_PAR, TV_Channel.cntry",
            "select TV_Channel.Pixel_aspect_ratio_PAR.c5, TV_Channel.cntry",
            "select TV_Channel.Pixel_aspect_ratio_PAR, TV_Channel.lang"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel"
        ],
        "align_scores": [
            0.9351316690444946,
            0.00018902748706750572,
            0.0002270712866447866,
            7.835043652448803e-05,
            0.0003108548989985138,
            7.502101652789861e-05,
            0.16136319935321808,
            0.00012641138164326549
        ],
        "align_select": "select TV_Channel.Pixel_aspect_ratio_PAR, TV_Channel.cntry",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the pixel aspect ratio and country of origin for all TV channels that do not use English?",
        "gold_select": "select TV_Channel.Pixel_aspect_ratio_PAR, TV_Channel.cntry",
        "select_candidates": [
            "select TV_Channel.Pixel_aspect_ratio_PAR, TV_Channel.cntry",
            "select TV_Channel.id, TV_Channel.Pixel_aspect_ratio_PAR, TV_Channel.cntry",
            "select TV_Channel.Pixel_aspect_ratio_PAR.c5, TV_Channel.cntry",
            "select max(TV_Channel.Pixel_aspect_ratio_PAR), TV_Channel.cntry"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel"
        ],
        "align_scores": [
            0.9275375604629517,
            0.00022131401055958122,
            0.00024807508452795446,
            8.756209717830643e-05,
            0.0002890575269702822,
            8.80991283338517e-05,
            0.00034922509803436697,
            9.217311162501574e-05
        ],
        "align_select": "select TV_Channel.Pixel_aspect_ratio_PAR, TV_Channel.cntry",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "find id of the tv channels that from the countries where have more than two tv channels.",
        "gold_select": "select TV_Channel.id",
        "select_candidates": [
            "select TV_Channel.id",
            "select TV_Channel.id, TV_Channel.cntry",
            "select t0.c, TV_Channel.cntry",
            "select TV_Channel.id, TV_Channel.cntry"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel",
            "TV_Channel TV_series Cartoon",
            "TV_Channel TV_series",
            "TV_Channel TV_series Cartoon",
            "TV_Channel Cartoon",
            "TV_Channel Cartoon"
        ],
        "align_scores": [
            0.9869353771209717,
            0.00016700464766472578,
            0.017693474888801575,
            0.00017932968330569565,
            0.0005014139460399747,
            8.903608249966055e-05,
            0.017693474888801575,
            0.00017932968330569565
        ],
        "align_select": "select TV_Channel.id",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the ids of all tv channels that have more than 2 TV channels?",
        "gold_select": "select TV_Channel.id",
        "select_candidates": [
            "select TV_Channel.id",
            "select TV_Channel.id, TV_Channel.cntry",
            "select TV_Channel.id, TV_Channel.ser_name",
            "select TV_Channel.id, TV_Channel.lang"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel",
            "TV_Channel TV_series"
        ],
        "align_scores": [
            0.9768571257591248,
            0.000159341303515248,
            0.00035232066875323653,
            7.95953965280205e-05,
            0.00043274773634038866,
            9.097236033994704e-05,
            0.0001365345815429464,
            8.871962927514687e-05
        ],
        "align_select": "select TV_Channel.id",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "find the id of tv channels that do not play any cartoon directed by Ben Jones.",
        "gold_select": "select TV_Channel.id",
        "select_candidates": [
            "select TV_Channel.id",
            "select TV_Channel.id, Cartoon.chnl",
            "select TV_Channel.id, TV_Channel.ser_name",
            "select TV_Channel.id, TV_Channel.cntry"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel Cartoon"
        ],
        "align_scores": [
            0.9765847325325012,
            0.9765847325325012,
            0.0012112412368878722,
            0.0012112412368878722,
            0.0002446196449454874,
            0.0002446196449454874,
            0.0003125205112155527,
            0.0003125205112155527
        ],
        "align_select": "select TV_Channel.id",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the ids of the TV channels that do not have any cartoons directed by Ben Jones?",
        "gold_select": "select TV_Channel.id",
        "select_candidates": [
            "select TV_Channel.id",
            "select TV_Channel.id, Cartoon.chnl",
            "select TV_Channel.id, TV_Channel.ser_name",
            "select TV_Channel.id, Cartoon.id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel Cartoon"
        ],
        "align_scores": [
            0.9697651267051697,
            0.9697651267051697,
            0.0012806144077330828,
            0.0012806144077330828,
            0.0002696215233299881,
            0.0002696215233299881,
            0.0002925485896412283,
            0.0002925485896412283
        ],
        "align_select": "select TV_Channel.id",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "find the package option of the tv channel that do not have any cartoon directed by Ben Jones.",
        "gold_select": "select TV_Channel.Package_Option",
        "select_candidates": [
            "select TV_Channel.Package_Option",
            "select TV_Channel.Package_Option, TV_Channel.cntry",
            "select TV_Channel.Package_Option, Cartoon.Directed_by",
            "select TV_Channel.Package_Option, TV_Channel.Pixel_aspect_ratio_PAR"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel Cartoon"
        ],
        "align_scores": [
            0.9793640971183777,
            0.0031128341797739267,
            0.00019287817121949047,
            0.00012628259719349444,
            0.00021737378847319633,
            0.00011387301492504776,
            0.0001666713651502505,
            0.00010989930888172239
        ],
        "align_select": "select TV_Channel.Package_Option",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the package options of all tv channels that are not playing any cartoons directed by Ben Jones?",
        "gold_select": "select TV_Channel.Package_Option",
        "select_candidates": [
            "select TV_Channel.Package_Option",
            "select TV_Channel.Package_Option, Cartoon.Directed_by",
            "select TV_Channel.Pixel_aspect_ratio_PAR, TV_Channel.Package_Option",
            "select TV_Channel.ppv, TV_Channel.Package_Option"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel Cartoon"
        ],
        "align_scores": [
            0.9715648889541626,
            0.003954954911023378,
            0.00023920425155665725,
            0.00010453241702634841,
            0.00024448303156532347,
            0.00014608290803153068,
            0.00021526339696720243,
            0.00012981465260963887
        ],
        "align_select": "select TV_Channel.Package_Option",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "List the final tables made and the best finishes of poker players.",
        "gold_select": "select poker_player.Final_Table_Made, poker_player.best_fin",
        "select_candidates": [
            "select poker_player.Final_Table_Made, poker_player.best_fin",
            "select poker_player.Poker_Player_ID, poker_player.Final_Table_Made, poker_player.best_fin",
            "select poker_player.ppl_id, poker_player.Final_Table_Made, poker_player.best_fin",
            "select poker_player.Final_Table_Made.c2, poker_player.best_fin"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "poker_player",
        "table_candidates": [
            "poker_player"
        ],
        "align_scores": [
            0.9931402802467346,
            0.007766912691295147,
            0.00018083883333019912,
            0.00018629520491231233,
            0.0002144515747204423,
            0.0002774118911474943,
            0.0002872027107514441,
            0.00013091714936308563
        ],
        "align_select": "select poker_player.Final_Table_Made, poker_player.best_fin",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What are the final tables made and best finishes for all poker players?",
        "gold_select": "select poker_player.Final_Table_Made, poker_player.best_fin",
        "select_candidates": [
            "select poker_player.Final_Table_Made, poker_player.best_fin",
            "select poker_player.Poker_Player_ID, poker_player.Final_Table_Made, poker_player.best_fin",
            "select sum(poker_player.Final_Table_Made), sum(poker_player.best_fin)",
            "select poker_player.Final_Table_Made.c2, poker_player.best_fin"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "poker_player",
        "table_candidates": [
            "poker_player"
        ],
        "align_scores": [
            0.9892519116401672,
            0.0009022287558764219,
            0.00018859037663787603,
            0.00010143803228856996,
            0.042820729315280914,
            9.813608630793169e-05,
            0.0004809711826965213,
            0.00010789388761622831
        ],
        "align_select": "select poker_player.Final_Table_Made, poker_player.best_fin",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What are the names of poker players?",
        "gold_select": "select people.Name",
        "select_candidates": [
            "select people.Name",
            "select distinct people.Name",
            "select people.Name, poker_player.ppl_id",
            "select distinct people.Name, poker_player.ppl_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "poker_player people",
        "table_candidates": [
            "poker_player people"
        ],
        "align_scores": [
            0.9906450510025024,
            0.26011568307876587,
            0.21949896216392517,
            0.000374913914129138,
            0.00016031040286179632,
            0.00014551845379173756,
            0.00015725052799098194,
            0.00011376101610949263
        ],
        "align_select": "select people.Name",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "Return the names of all the poker players.",
        "gold_select": "select people.Name",
        "select_candidates": [
            "select people.Name",
            "select distinct people.Name",
            "select people.Name, poker_player.ppl_id",
            "select distinct people.Name, poker_player.ppl_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "poker_player people",
        "table_candidates": [
            "poker_player people"
        ],
        "align_scores": [
            0.8970629572868347,
            0.0001544352126074955,
            0.21450529992580414,
            0.00012444387539289892,
            0.00013623481208924204,
            6.30610084044747e-05,
            0.0001372059341520071,
            7.262127473950386e-05
        ],
        "align_select": "select people.Name",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What are the names of poker players whose earnings is higher than 300000?",
        "gold_select": "select people.Name",
        "select_candidates": [
            "select people.Name",
            "select people.Name, people.dob",
            "select people.Name, t1.c5",
            "select people.Name, poker_player.Poker_Player_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "poker_player people",
        "table_candidates": [
            "poker_player people"
        ],
        "align_scores": [
            0.9927383065223694,
            0.0002859431551769376,
            0.00022804655600339174,
            8.707896631676704e-05,
            0.00026555167278274894,
            8.52077646413818e-05,
            0.00014507789455819875,
            8.193894609576091e-05
        ],
        "align_select": "select people.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give the names of poker players who have earnings above 300000.",
        "gold_select": "select people.Name",
        "select_candidates": [
            "select people.Name",
            "select people.Name, people.dob",
            "select people.Name, t1.c5",
            "select people.Nationality, people.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "poker_player people",
        "table_candidates": [
            "poker_player people"
        ],
        "align_scores": [
            0.9740304946899414,
            0.00027825290453620255,
            0.00022812746465206146,
            9.09054942894727e-05,
            0.0002864053822122514,
            8.896853978512809e-05,
            0.00028324071899987757,
            0.00010334465332562104
        ],
        "align_select": "select people.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List the names of poker players ordered by the final tables made in ascending order.",
        "gold_select": "select people.Name",
        "select_candidates": [
            "select people.Name",
            "select people.Name, poker_player.ppl_id",
            "select people.Name, poker_player.Final_Table_Made",
            "select people.Name, poker_player.Poker_Player_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "poker_player people",
        "table_candidates": [
            "poker_player people"
        ],
        "align_scores": [
            0.9941558837890625,
            0.9941558837890625,
            0.00013124963152222335,
            0.00013124963152222335,
            0.0005036388756707311,
            0.0005036388756707311,
            0.00011138097033835948,
            0.00011138097033835948
        ],
        "align_select": "select people.Name",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "What are the names of poker players, ordered ascending by the number of final tables they have made?",
        "gold_select": "select people.Name",
        "select_candidates": [
            "select people.Name",
            "select people.Name, poker_player.Final_Table_Made",
            "select people.Name, poker_player.ppl_id",
            "select people.Name (ordered by poker_player.Final_Table_Made)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "poker_player people",
        "table_candidates": [
            "poker_player people"
        ],
        "align_scores": [
            0.9894098043441772,
            0.9894098043441772,
            0.0004685964377131313,
            0.0004685964377131313,
            0.00018024459131993353,
            0.00018024459131993353,
            0.004142630845308304,
            0.004142630845308304
        ],
        "align_select": "select people.Name",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "What is the birth date of the poker player with the lowest earnings?",
        "gold_select": "select people.dob",
        "select_candidates": [
            "select people.dob",
            "select people.dob, people.Height",
            "select people.dob, poker_player.Money_Rank",
            "select people.dob, people.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "poker_player people",
        "table_candidates": [
            "poker_player people"
        ],
        "align_scores": [
            0.9885713458061218,
            0.00011794114107033238,
            0.00020119629334658384,
            7.03446421539411e-05,
            0.0009446843760088086,
            7.011539855739102e-05,
            0.0005946374731138349,
            9.167748794425279e-05
        ],
        "align_select": "select people.dob",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Return the birth date of the poker player with the lowest earnings.",
        "gold_select": "select people.dob",
        "select_candidates": [
            "select people.dob",
            "select people.dob, people.Height",
            "select people.dob, poker_player.Earnings",
            "select people.dob, poker_player.Money_Rank"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "poker_player people",
        "table_candidates": [
            "poker_player people"
        ],
        "align_scores": [
            0.9919158816337585,
            7.759276195429265e-05,
            0.00016894377768039703,
            6.057811333448626e-05,
            0.002213509753346443,
            5.6093042076099664e-05,
            0.0008961017592810094,
            5.59714317205362e-05
        ],
        "align_select": "select people.dob",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What is the money rank of the tallest poker player?",
        "gold_select": "select poker_player.Money_Rank",
        "select_candidates": [
            "select poker_player.Money_Rank",
            "select poker_player.ppl_id, poker_player.Money_Rank",
            "select poker_player.Money_Rank, people.Height",
            "select poker_player.ppl_id, poker_player.Final_Table_Made"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "poker_player people",
        "table_candidates": [
            "poker_player people",
            "people poker_player people",
            "people poker_player"
        ],
        "align_scores": [
            0.6049582362174988,
            6.264600233407691e-05,
            0.00016295020759571344,
            6.785729055991396e-05,
            0.0005233758711256087,
            5.710906407330185e-05,
            0.00015008950140327215,
            5.75456433580257e-05
        ],
        "align_select": "select poker_player.Money_Rank",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Return the money rank of the poker player with the greatest height.",
        "gold_select": "select poker_player.Money_Rank",
        "select_candidates": [
            "select poker_player.Money_Rank",
            "select poker_player.ppl_id, poker_player.Money_Rank",
            "select poker_player.Money_Rank, people.Height",
            "select poker_player.ppl_id, poker_player.Final_Table_Made"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "poker_player people",
        "table_candidates": [
            "poker_player people",
            "people poker_player people"
        ],
        "align_scores": [
            0.9799250364303589,
            5.870362656423822e-05,
            0.00012601773778442293,
            6.0620699514402077e-05,
            0.00034440011950209737,
            5.8903591707348824e-05,
            0.00012353621423244476,
            5.918759779888205e-05
        ],
        "align_select": "select poker_player.Money_Rank",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What is the average earnings of poker players with height higher than 200?",
        "gold_select": "select avg(poker_player.Earnings)",
        "select_candidates": [
            "select avg(poker_player.Earnings)",
            "select avg(poker_player.Earnings), people.Height",
            "select an avg(poker_player.Earnings)",
            "select  avg(poker_player.Earnings)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "poker_player people",
        "table_candidates": [
            "poker_player people"
        ],
        "align_scores": [
            0.9962255954742432,
            9.150123514700681e-05,
            0.00016317660629283637,
            0.10395284742116928,
            0.0003497423604130745,
            9.386586316395551e-05,
            0.9962255954742432,
            9.150123514700681e-05
        ],
        "align_select": "select avg(poker_player.Earnings)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give average earnings of poker players who are taller than 200.",
        "gold_select": "select avg(poker_player.Earnings)",
        "select_candidates": [
            "select avg(poker_player.Earnings)",
            "select an avg(poker_player.Earnings)",
            "select  avg(poker_player.Earnings)",
            "select avg(t0-poker_player.Earnings)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "poker_player people",
        "table_candidates": [
            "poker_player people"
        ],
        "align_scores": [
            0.996241569519043,
            0.00011790795542765409,
            0.0003904789627995342,
            0.00011883135448442772,
            0.996241569519043,
            0.00011790795542765409,
            0.0005948761245235801,
            0.0001298905408475548
        ],
        "align_select": "select avg(poker_player.Earnings)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of poker players in descending order of earnings?",
        "gold_select": "select people.Name",
        "select_candidates": [
            "select people.Name",
            "select people.Name, poker_player.Earnings",
            "select people.Name (ordered by poker_player.Earnings)",
            "select people.Name, poker_player.best_fin"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "poker_player people",
        "table_candidates": [
            "poker_player people"
        ],
        "align_scores": [
            0.994619607925415,
            0.994619607925415,
            0.00022691655613016337,
            0.00022691655613016337,
            0.003757755272090435,
            0.003757755272090435,
            0.00020169222261756659,
            0.00020169222261756659
        ],
        "align_select": "select people.Name",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "Return the names of poker players sorted by their earnings descending.",
        "gold_select": "select people.Name",
        "select_candidates": [
            "select people.Name",
            "select people.Name, poker_player.Earnings",
            "select people.Name (ordered by poker_player.Earnings)",
            "select people.Name (ordered poker_player.Earnings)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "poker_player people",
        "table_candidates": [
            "poker_player people"
        ],
        "align_scores": [
            0.9956242442131042,
            0.9956242442131042,
            0.0002287506067659706,
            0.0002287506067659706,
            0.0031243974808603525,
            0.0031243974808603525,
            0.0017089929897338152,
            0.0017089929897338152
        ],
        "align_select": "select people.Name",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "List the names and birth dates of people in ascending alphabetical order of name.",
        "gold_select": "select people.Name, people.dob",
        "select_candidates": [
            "select people.Name, people.dob",
            "select t1.c 2, people.dob",
            "select people.Name), people.dob",
            "select people.Name., people.dob"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "people",
        "table_candidates": [
            "people"
        ],
        "align_scores": [
            0.9956562519073486,
            0.9956562519073486,
            0.00040734454523772,
            0.00040734454523772,
            0.0019573678728193045,
            0.0019573678728193045,
            0.0012174875009804964,
            0.0012174875009804964
        ],
        "align_select": "select people.Name, people.dob",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "What are the names and birth dates of people, ordered by their names in alphabetical order?",
        "gold_select": "select people.Name, people.dob",
        "select_candidates": [
            "select people.Name, people.dob",
            "select t1.c 2, people.dob",
            "select people.Name), people.dob",
            "select people.Name., people.dob"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "people",
        "table_candidates": [
            "people"
        ],
        "align_scores": [
            0.9949654936790466,
            0.9949654936790466,
            0.00040376343531534076,
            0.00040376343531534076,
            0.0018151262775063515,
            0.0018151262775063515,
            0.0008399151847697794,
            0.0008399151847697794
        ],
        "align_select": "select people.Name, people.dob",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "List the names of people that are not poker players.",
        "gold_select": "select people.Name",
        "select_candidates": [
            "select people.Name",
            "select people.Name, people.dob",
            "select non-poker people.Name",
            "select people.Name, poker_player.ppl_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "people",
        "table_candidates": [
            "people",
            "poker_player people"
        ],
        "align_scores": [
            0.979393720626831,
            0.0002483325661160052,
            0.0003833232040051371,
            0.00010790160013129935,
            0.0042589325457811356,
            0.0001222652499563992,
            0.00011331830319250003,
            6.60618461552076e-05
        ],
        "align_select": "select people.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of people who do not play poker?",
        "gold_select": "select people.Name",
        "select_candidates": [
            "select people.Name",
            "select people.Name, people.dob",
            "select people.Name, poker_player.ppl_id",
            "select non-poker people.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "people",
        "table_candidates": [
            "poker_player people",
            "people"
        ],
        "align_scores": [
            0.9814421534538269,
            0.724909245967865,
            0.00022862217156216502,
            0.05367598682641983,
            0.00014741446648258716,
            0.0002408262516837567,
            0.006184185389429331,
            0.0015785603318363428
        ],
        "align_select": "select people.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of poker players?",
        "gold_select": "select people.Name",
        "select_candidates": [
            "select people.Name",
            "select distinct people.Name",
            "select people.Name, poker_player.People_ID",
            "select distinct people.Name, poker_player.People_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "poker_player people",
        "table_candidates": [
            "poker_player people"
        ],
        "align_scores": [
            0.9906450510025024,
            0.26011568307876587,
            0.21949896216392517,
            0.000374913914129138,
            0.00013507941912394017,
            0.00014220360026229173,
            0.00012193960719741881,
            0.00010462435602676123
        ],
        "align_select": "select people.Name",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "Return the names of all the poker players.",
        "gold_select": "select people.Name",
        "select_candidates": [
            "select people.Name",
            "select distinct people.Name",
            "select people.Name, poker_player.People_ID",
            "select distinct people.Name, poker_player.People_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "poker_player people",
        "table_candidates": [
            "poker_player people"
        ],
        "align_scores": [
            0.8970629572868347,
            0.0001544352126074955,
            0.21450529992580414,
            0.00012444387539289892,
            0.00012669028365053236,
            6.0691327234962955e-05,
            0.00011252718832110986,
            7.080949580995366e-05
        ],
        "align_select": "select people.Name",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What are the names of poker players whose earnings is higher than 300000?",
        "gold_select": "select people.Name",
        "select_candidates": [
            "select people.Name",
            "select people.Name, people.Birth_Date",
            "select people.Name, people.nal",
            "select people.Name, poker_player.Poker_Player_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "poker_player people",
        "table_candidates": [
            "poker_player people"
        ],
        "align_scores": [
            0.9927383065223694,
            0.0002859431551769376,
            0.00014725839719176292,
            7.912649016361684e-05,
            0.00030449367477558553,
            8.805158722680062e-05,
            0.00014507789455819875,
            8.193894609576091e-05
        ],
        "align_select": "select people.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give the names of poker players who have earnings above 300000.",
        "gold_select": "select people.Name",
        "select_candidates": [
            "select people.Name",
            "select people.Name, people.Birth_Date",
            "select people.Name, people.nal",
            "select people.nal, people.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "poker_player people",
        "table_candidates": [
            "poker_player people"
        ],
        "align_scores": [
            0.9740304946899414,
            0.00027825290453620255,
            0.00015309281297959387,
            8.648693619761616e-05,
            0.000288303941488266,
            9.049475920619443e-05,
            0.00026381018687970936,
            9.103188494918868e-05
        ],
        "align_select": "select people.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List the names of poker players ordered by the final tables made in ascending order.",
        "gold_select": "select people.Name",
        "select_candidates": [
            "select people.Name",
            "select people.Name, poker_player.People_ID",
            "select people.Name, poker_player.Poker_Player_ID",
            "select people.Name, poker_player.Final_Table_Made"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "poker_player people",
        "table_candidates": [
            "poker_player people"
        ],
        "align_scores": [
            0.9941558837890625,
            0.9941558837890625,
            0.00011413598258513957,
            0.00011413598258513957,
            0.00011138097033835948,
            0.00011138097033835948,
            0.0005036388756707311,
            0.0005036388756707311
        ],
        "align_select": "select people.Name",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "What are the names of poker players, ordered ascending by the number of final tables they have made?",
        "gold_select": "select people.Name",
        "select_candidates": [
            "select people.Name",
            "select people.Name, poker_player.People_ID",
            "select people.Name, poker_player.Final_Table_Made",
            "select people.Name (ordned poker_player.People_ID)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "poker_player people",
        "table_candidates": [
            "poker_player people"
        ],
        "align_scores": [
            0.9894098043441772,
            0.9894098043441772,
            0.0001560931996209547,
            0.0001560931996209547,
            0.0004685964377131313,
            0.0004685964377131313,
            0.0004870904376730323,
            0.0004870904376730323
        ],
        "align_select": "select people.Name",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "What is the birth date of the poker player with the lowest earnings?",
        "gold_select": "select people.Birth_Date",
        "select_candidates": [
            "select people.Birth_Date",
            "select people.Birth_Date, people.Height",
            "select people.Birth_Date, poker_player.People_ID",
            "select people.Birth_Date, poker_player.Money_Rank"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "poker_player people",
        "table_candidates": [
            "poker_player people"
        ],
        "align_scores": [
            0.990035891532898,
            0.0001004799414658919,
            0.00018085110059473664,
            6.675808253930882e-05,
            0.00025270687183365226,
            6.535354623338208e-05,
            0.0005256625008769333,
            6.201594806043431e-05
        ],
        "align_select": "select people.Birth_Date",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Return the birth date of the poker player with the lowest earnings.",
        "gold_select": "select people.Birth_Date",
        "select_candidates": [
            "select people.Birth_Date",
            "select people.Birth_Date, people.Height",
            "select people.Birth_Date, poker_player.Money_Rank",
            "select people.Birth_Date, poker_player.People_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "poker_player people",
        "table_candidates": [
            "poker_player people"
        ],
        "align_scores": [
            0.9932001233100891,
            6.78640280966647e-05,
            0.00015927021740935743,
            5.995626997901127e-05,
            0.0004436927556525916,
            5.3915060561848804e-05,
            0.000225871815928258,
            5.555887764785439e-05
        ],
        "align_select": "select people.Birth_Date",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What is the money rank of the tallest poker player?",
        "gold_select": "select poker_player.Money_Rank",
        "select_candidates": [
            "select poker_player.Money_Rank",
            "select poker_player.People_ID, poker_player.Money_Rank",
            "select poker_player.Poker_Player_ID, poker_player.Money_Rank",
            "select poker_player.People_ID, poker_player.Final_Table_Made"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "poker_player people",
        "table_candidates": [
            "poker_player people",
            "people poker_player people",
            "people poker_player"
        ],
        "align_scores": [
            0.6049582362174988,
            6.264600233407691e-05,
            0.00013159701484255493,
            6.353776552714407e-05,
            0.00011381960212020203,
            5.987125405226834e-05,
            0.00017042222316376865,
            5.826469714520499e-05
        ],
        "align_select": "select poker_player.Money_Rank",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Return the money rank of the poker player with the greatest height.",
        "gold_select": "select poker_player.Money_Rank",
        "select_candidates": [
            "select poker_player.Money_Rank",
            "select poker_player.Poker_Player_ID, poker_player.Money_Rank",
            "select poker_player.People_ID, poker_player.Money_Rank",
            "select poker_player.Poker_Player_ID, people.Height"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "poker_player people",
        "table_candidates": [
            "poker_player people",
            "people poker_player people"
        ],
        "align_scores": [
            0.9799250364303589,
            5.870362656423822e-05,
            0.00011550259659998119,
            6.0911948821740225e-05,
            0.00012380270345602185,
            6.264552212087438e-05,
            0.00014149821072351187,
            6.94672271492891e-05
        ],
        "align_select": "select poker_player.Money_Rank",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What is the average earnings of poker players with height higher than 200?",
        "gold_select": "select avg(poker_player.Earnings)",
        "select_candidates": [
            "select avg(poker_player.Earnings)",
            "select avg(poker_player.Earnings), people.Height",
            "select an avg(poker_player.Earnings)",
            "select  avg(poker_player.Earnings)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "poker_player people",
        "table_candidates": [
            "poker_player people"
        ],
        "align_scores": [
            0.9962255954742432,
            9.150123514700681e-05,
            0.00016317660629283637,
            0.10395284742116928,
            0.0003497423604130745,
            9.386586316395551e-05,
            0.9962255954742432,
            9.150123514700681e-05
        ],
        "align_select": "select avg(poker_player.Earnings)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give average earnings of poker players who are taller than 200.",
        "gold_select": "select avg(poker_player.Earnings)",
        "select_candidates": [
            "select avg(poker_player.Earnings)",
            "select avg(poker_player.Earnings), people.Height",
            "select an avg(poker_player.Earnings)",
            "select  avg(poker_player.Earnings)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "poker_player people",
        "table_candidates": [
            "poker_player people"
        ],
        "align_scores": [
            0.996241569519043,
            0.00011790795542765409,
            0.0002606305934023112,
            0.013615761883556843,
            0.0003904789627995342,
            0.00011883135448442772,
            0.996241569519043,
            0.00011790795542765409
        ],
        "align_select": "select avg(poker_player.Earnings)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of poker players in descending order of earnings?",
        "gold_select": "select people.Name",
        "select_candidates": [
            "select people.Name",
            "select people.Name, poker_player.Earnings",
            "select people.Name, poker_player.People_ID",
            "select people.Name, poker_player.Poker_Player_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "poker_player people",
        "table_candidates": [
            "poker_player people"
        ],
        "align_scores": [
            0.994619607925415,
            0.994619607925415,
            0.00022691655613016337,
            0.00022691655613016337,
            0.0001335600099992007,
            0.0001335600099992007,
            0.00013435017899610102,
            0.00013435017899610102
        ],
        "align_select": "select people.Name",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "Return the names of poker players sorted by their earnings descending.",
        "gold_select": "select people.Name",
        "select_candidates": [
            "select people.Name",
            "select people.Name, poker_player.Earnings",
            "select people.Name (ordered by poker_player.Earnings)",
            "select people.nal, poker_player.Earnings"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "poker_player people",
        "table_candidates": [
            "poker_player people"
        ],
        "align_scores": [
            0.9956242442131042,
            0.9956242442131042,
            0.0002287506067659706,
            0.0002287506067659706,
            0.0031243974808603525,
            0.0031243974808603525,
            0.00020665898045990616,
            0.00020665898045990616
        ],
        "align_select": "select people.Name",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "What are different nationalities of people and the corresponding number of people from each nation?",
        "gold_select": "select people.nal, count(*)",
        "select_candidates": [
            "select people.nal, count(*)",
            "select people.nal, count(*), people.Name",
            "select count(*), people.nal",
            "select list(*), people.nal"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "people",
        "table_candidates": [
            "people"
        ],
        "align_scores": [
            0.9887527227401733,
            0.00030206950032152236,
            0.0002082076098304242,
            0.00015933583199512213,
            0.9845581650733948,
            0.0003058748261537403,
            0.00039076758548617363,
            0.00018602113414090127
        ],
        "align_select": "select people.nal, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "How many people are there of each nationality?",
        "gold_select": "select people.nal, count(*)",
        "select_candidates": [
            "select people.nal, count(*)",
            "select count(*), people.nal",
            "select avg(people.Height), people.nal",
            "select people.nal, count(*), people.Name"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "people",
        "table_candidates": [
            "people"
        ],
        "align_scores": [
            0.9926880598068237,
            0.00018821527191903442,
            0.9878110289573669,
            0.00020889601728413254,
            0.00018219156481791288,
            0.00011796419130405411,
            0.00016801904712338,
            9.741870599100366e-05
        ],
        "align_select": "select people.nal, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "What is the most common nationality of people?",
        "gold_select": "select people.nal",
        "select_candidates": [
            "select people.nal",
            "select people.nal, people.Name",
            "select people.nal, people.Birth_Date",
            "select people.nal, people.Height"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "people",
        "table_candidates": [
            "people"
        ],
        "align_scores": [
            0.9920896291732788,
            7.43757191230543e-05,
            0.00019503189832903445,
            5.7512512285029516e-05,
            0.00021443930745590478,
            5.262923150439747e-05,
            0.00016867172962520272,
            5.6740795116638765e-05
        ],
        "align_select": "select people.nal",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Give the nationality that is most common across all people.",
        "gold_select": "select people.nal",
        "select_candidates": [
            "select people.nal",
            "select people.nal, people.Name",
            "select people.nal, people.Name, people.Birth_Date",
            "select people.nal, people.Name, max(people.Height)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "people",
        "table_candidates": [
            "people"
        ],
        "align_scores": [
            0.9845182299613953,
            9.18906953302212e-05,
            0.0002388897119089961,
            5.803977546747774e-05,
            0.00010842338087968528,
            5.2263832913013175e-05,
            0.00011101694690296426,
            5.615314876195043e-05
        ],
        "align_select": "select people.nal",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What are the nationalities that are shared by at least two people?",
        "gold_select": "select people.nal",
        "select_candidates": [
            "select people.nal",
            "select people.nal, people.Name",
            "select people.nal, min(people.Name)",
            "select people.nal, min(people.Height)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "people",
        "table_candidates": [
            "people"
        ],
        "align_scores": [
            0.9779305458068848,
            9.27885776036419e-05,
            0.00020136518287472427,
            6.531865801662207e-05,
            0.00022752444783691317,
            5.1250466640340164e-05,
            0.00022909043764229864,
            5.797671474283561e-05
        ],
        "align_select": "select people.nal",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Return the nationalities for which there are two or more people.",
        "gold_select": "select people.nal",
        "select_candidates": [
            "select people.nal",
            "select people.nal, people.Name",
            "select people.nal, count(*)",
            "select people.nal, people.Birth_Date"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "people",
        "table_candidates": [
            "people"
        ],
        "align_scores": [
            0.9909387826919556,
            9.633850277168676e-05,
            0.00027246566605754197,
            6.087873043725267e-05,
            0.015008718706667423,
            8.02874201326631e-05,
            0.00014400891086552292,
            4.9923146434593946e-05
        ],
        "align_select": "select people.nal",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Show names of people whose nationality is not \"Russia\".",
        "gold_select": "select people.Name",
        "select_candidates": [
            "select people.Name",
            "select people.Name, people.nal",
            "select people.Name, people.Birth_Date",
            "select people.Name, people.Height"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "people",
        "table_candidates": [
            "people"
        ],
        "align_scores": [
            0.9940345883369446,
            0.00014718946476932615,
            0.00023462298850063235,
            6.667588604614139e-05,
            0.00017107771418523043,
            6.248432327993214e-05,
            0.00012647808762267232,
            6.0031728935427964e-05
        ],
        "align_select": "select people.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of people who are not from Russia?",
        "gold_select": "select people.Name",
        "select_candidates": [
            "select people.Name",
            "select people.Name, people.Birth_Date",
            "select people.Name, people.nal",
            "select people.Name, people.Height"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "people",
        "table_candidates": [
            "people"
        ],
        "align_scores": [
            0.9901682138442993,
            0.00013694529479835182,
            0.00015104222984518856,
            6.132734415587038e-05,
            0.0002686292864382267,
            6.633115117438138e-05,
            0.0001438247418263927,
            5.6942979426821694e-05
        ],
        "align_select": "select people.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List the names of people that are not poker players.",
        "gold_select": "select people.Name",
        "select_candidates": [
            "select people.Name",
            "select people.Name, people.Birth_Date",
            "select people.Name, people.nal",
            "select non-poker people.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "people",
        "table_candidates": [
            "people",
            "poker_player people"
        ],
        "align_scores": [
            0.979393720626831,
            0.0002483325661160052,
            0.00014540528354700655,
            7.06142236595042e-05,
            0.0002639017766341567,
            6.853577360743657e-05,
            0.0042589325457811356,
            0.0001222652499563992
        ],
        "align_select": "select people.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of people who do not play poker?",
        "gold_select": "select people.Name",
        "select_candidates": [
            "select people.Name",
            "select people.Name, people.Birth_Date",
            "select people.Name, people.nal",
            "select people.nal, people.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "people",
        "table_candidates": [
            "poker_player people",
            "people"
        ],
        "align_scores": [
            0.9814421534538269,
            0.724909245967865,
            0.00014466705033555627,
            0.00015467411139979959,
            0.00031529078842140734,
            0.00030715568573214114,
            0.00026029933360405266,
            0.0002382160018896684
        ],
        "align_select": "select people.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many distinct nationalities are there?",
        "gold_select": "select count(distinct people.nal)",
        "select_candidates": [
            "select count(distinct people.nal)",
            "select count(distinct people.Height)",
            "select count(distinct people.Name)",
            "select count(distinct t2.c1)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "people",
        "table_candidates": [
            "people",
            "poker_player"
        ],
        "align_scores": [
            0.9955229759216309,
            0.9955229759216309,
            0.0007348732906393707,
            0.0007348732906393707,
            0.00284031149931252,
            0.00284031149931252,
            0.0009798705577850342,
            0.0009798705577850342
        ],
        "align_select": "select count(distinct people.nal)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "Count the number of different nationalities.",
        "gold_select": "select count(distinct people.nal)",
        "select_candidates": [
            "select count(distinct people.nal)",
            "select count(distinct people.Name)",
            "select count(distinct people.Height)",
            "select count(distinct t2.c1)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "people",
        "table_candidates": [
            "people"
        ],
        "align_scores": [
            0.9959667921066284,
            0.9959667921066284,
            0.005311399232596159,
            0.005311399232596159,
            0.0007352596148848534,
            0.0007352596148848534,
            0.001275680959224701,
            0.001275680959224701
        ],
        "align_select": "select count(distinct people.nal)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "List the earnings of poker players in descending order.",
        "gold_select": "select poker_player.earn",
        "select_candidates": [
            "select poker_player.earn",
            "select poker_player.earn, poker_player.Money_Rank",
            "select poker_player.earn, t0.c6",
            "select poker_player.earn, poker_player.Poker_Player_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "poker_player",
        "table_candidates": [
            "poker_player"
        ],
        "align_scores": [
            0.9947330951690674,
            0.9947330951690674,
            0.00016603244876023382,
            0.00016603244876023382,
            0.00035916524939239025,
            0.00035916524939239025,
            9.527854126645252e-05,
            9.527854126645252e-05
        ],
        "align_select": "select poker_player.earn",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "What are the earnings of poker players, ordered descending by value?",
        "gold_select": "select poker_player.earn",
        "select_candidates": [
            "select poker_player.earn",
            "select poker_player.earn, poker_player.Money_Rank",
            "select poker_player.earn, t0.c6",
            "select poker_player.earn, poker_player.Poker_Player_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "poker_player",
        "table_candidates": [
            "poker_player"
        ],
        "align_scores": [
            0.9940290451049805,
            0.9940290451049805,
            0.00016338180284947157,
            0.00016338180284947157,
            0.000439014402218163,
            0.000439014402218163,
            9.65128347161226e-05,
            9.65128347161226e-05
        ],
        "align_select": "select poker_player.earn",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "List the final tables made and the best finishes of poker players.",
        "gold_select": "select poker_player.Final_Table_Made, poker_player.best_fin",
        "select_candidates": [
            "select poker_player.Final_Table_Made, poker_player.best_fin",
            "select poker_player.Poker_Player_ID, poker_player.Final_Table_Made, poker_player.best_fin",
            "select poker_player.People_ID, poker_player.Final_Table_Made, poker_player.best_fin",
            "select poker_player.Final_Table_Made.c2, poker_player.best_fin"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "poker_player",
        "table_candidates": [
            "poker_player"
        ],
        "align_scores": [
            0.9931402802467346,
            0.007766912691295147,
            0.00018083883333019912,
            0.00018629520491231233,
            0.00016834268171805888,
            0.0001384227944072336,
            0.0002872027107514441,
            0.00013091714936308563
        ],
        "align_select": "select poker_player.Final_Table_Made, poker_player.best_fin",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What are the final tables made and best finishes for all poker players?",
        "gold_select": "select poker_player.Final_Table_Made, poker_player.best_fin",
        "select_candidates": [
            "select poker_player.Final_Table_Made, poker_player.best_fin",
            "select poker_player.Poker_Player_ID, poker_player.Final_Table_Made, poker_player.best_fin",
            "select poker_player.Final_Table_Made.c2, poker_player.best_fin",
            "select sum(poker_player.Final_Table_Made), sum(poker_player.best_fin)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "poker_player",
        "table_candidates": [
            "poker_player"
        ],
        "align_scores": [
            0.9892519116401672,
            0.02786426432430744,
            0.00018859037663787603,
            0.00027537517598830163,
            0.0004809711826965213,
            0.0001801030448405072,
            0.042820729315280914,
            0.0010055623715743423
        ],
        "align_select": "select poker_player.Final_Table_Made, poker_player.best_fin",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What is the average earnings of poker players?",
        "gold_select": "select avg(poker_player.earn)",
        "select_candidates": [
            "select avg(poker_player.earn)",
            "select an avg(poker_player.earn)",
            "select avg(poker_player.earn), poker_player.Poker_Player_ID",
            "select  avg(poker_player.earn)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "poker_player",
        "table_candidates": [
            "poker_player"
        ],
        "align_scores": [
            0.9952074885368347,
            6.535684951813892e-05,
            0.0004060821083839983,
            0.0001048784761223942,
            9.737431537359953e-05,
            5.5944219639059156e-05,
            0.9952074885368347,
            6.535684951813892e-05
        ],
        "align_select": "select avg(poker_player.earn)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "Return the average earnings across all poker players.",
        "gold_select": "select avg(poker_player.earn)",
        "select_candidates": [
            "select avg(poker_player.earn)",
            "select an avg(poker_player.earn)",
            "select  avg(poker_player.earn)",
            "select the avg(poker_player.earn)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "poker_player",
        "table_candidates": [
            "poker_player"
        ],
        "align_scores": [
            0.9951760768890381,
            0.00041245316970162094,
            0.00032182474387809634,
            0.00014034357445780188,
            0.9951760768890381,
            0.00041245316970162094,
            0.0003034619730897248,
            0.00013399808085523546
        ],
        "align_select": "select avg(poker_player.earn)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What is the money rank of the poker player with the highest earnings?",
        "gold_select": "select poker_player.Money_Rank",
        "select_candidates": [
            "select poker_player.Money_Rank",
            "select poker_player.Poker_Player_ID, poker_player.Money_Rank",
            "select poker_player.earn, poker_player.Money_Rank",
            "select poker_player.People_ID, poker_player.Money_Rank"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "poker_player",
        "table_candidates": [
            "poker_player"
        ],
        "align_scores": [
            0.9878439903259277,
            6.832806684542447e-05,
            0.0002243205381091684,
            6.656433106400073e-05,
            0.0002798801870085299,
            7.082922093104571e-05,
            0.0002171728410758078,
            6.783944263588637e-05
        ],
        "align_select": "select poker_player.Money_Rank",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Return the money rank of the player with the greatest earnings.",
        "gold_select": "select poker_player.Money_Rank",
        "select_candidates": [
            "select poker_player.Money_Rank",
            "select poker_player.earn, poker_player.Money_Rank",
            "select poker_player.Money_Rank, poker_player.earn",
            "select poker_player.Poker_Player_ID, poker_player.Money_Rank"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "poker_player",
        "table_candidates": [
            "poker_player"
        ],
        "align_scores": [
            0.9433497190475464,
            5.7214485423173755e-05,
            0.000162489726790227,
            6.766240403521806e-05,
            0.0001807037042453885,
            6.144962389953434e-05,
            0.0001402097987011075,
            6.0512462368933484e-05
        ],
        "align_select": "select poker_player.Money_Rank",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What is the maximum number of final tables made among poker players with earnings less than 200000?",
        "gold_select": "select max(poker_player.Final_Table_Made)",
        "select_candidates": [
            "select max(poker_player.Final_Table_Made)",
            "select max(poker_player.Final_Table_Made), poker_player.earn",
            "select max(poker_player.Final_Table_Made) dependant on poker_player.earn",
            "select max(poker_player.Final_Table_Made), poker_player.earn"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "poker_player",
        "table_candidates": [
            "poker_player"
        ],
        "align_scores": [
            0.9930745363235474,
            8.299751061713323e-05,
            0.00019062550563830882,
            5.5379816330969334e-05,
            0.0004134652263019234,
            7.251561328303069e-05,
            0.00019062550563830882,
            5.5379816330969334e-05
        ],
        "align_select": "select max(poker_player.Final_Table_Made)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the maximum final tables made across all poker players who have earnings below 200000.",
        "gold_select": "select max(poker_player.Final_Table_Made)",
        "select_candidates": [
            "select max(poker_player.Final_Table_Made)",
            "select max(poker_player.Final_Table_Made), poker_player.earn",
            "select max(poker_player.Final_Table_Made) devced poker_player.earn",
            "select max(poker_player.Final_Table_Made) devced poker_player.Poker_Player_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "poker_player",
        "table_candidates": [
            "poker_player"
        ],
        "align_scores": [
            0.9944728016853333,
            9.559961472405121e-05,
            0.00013282721920404583,
            6.376209785230458e-05,
            0.00013248238246887922,
            7.171164907049388e-05,
            0.00014687514340039343,
            6.252210005186498e-05
        ],
        "align_select": "select max(poker_player.Final_Table_Made)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of poker players whose earnings is higher than 300000?",
        "gold_select": "select people.Name",
        "select_candidates": [
            "select people.Name",
            "select people.Name, people.nal",
            "select people.Name, people.Birth_Date",
            "select people.Name, poker_player.People_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "poker_player people",
        "table_candidates": [
            "poker_player people"
        ],
        "align_scores": [
            0.9927383065223694,
            0.0002859431551769376,
            0.00030449367477558553,
            8.805158722680062e-05,
            0.00014725839719176292,
            7.912649016361684e-05,
            0.00015062381862662733,
            7.706684118602425e-05
        ],
        "align_select": "select people.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give the names of poker players who have earnings above 300000.",
        "gold_select": "select people.Name",
        "select_candidates": [
            "select people.Name",
            "select people.Name, people.nal",
            "select people.Name, people.Birth_Date",
            "select people.nal, people.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "poker_player people",
        "table_candidates": [
            "poker_player people"
        ],
        "align_scores": [
            0.9740304946899414,
            0.00027825290453620255,
            0.000288303941488266,
            9.049475920619443e-05,
            0.00015309281297959387,
            8.648693619761616e-05,
            0.00026381018687970936,
            9.103188494918868e-05
        ],
        "align_select": "select people.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the birth date of the poker player with the lowest earnings?",
        "gold_select": "select people.Birth_Date",
        "select_candidates": [
            "select people.Birth_Date",
            "select people.Birth_Date, people.Height",
            "select people.Birth_Date, poker_player.People_ID",
            "select people.Birth_Date, people.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "poker_player people",
        "table_candidates": [
            "poker_player people"
        ],
        "align_scores": [
            0.990035891532898,
            0.0001004799414658919,
            0.00018085110059473664,
            6.675808253930882e-05,
            0.00025270687183365226,
            6.535354623338208e-05,
            0.0005612481036223471,
            8.095952944131568e-05
        ],
        "align_select": "select people.Birth_Date",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Return the birth date of the poker player with the lowest earnings.",
        "gold_select": "select people.Birth_Date",
        "select_candidates": [
            "select people.Birth_Date",
            "select people.Birth_Date, people.Height",
            "select people.Birth_Date, people.Name",
            "select people.Birth_Date, poker_player.Money_Rank"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "poker_player people",
        "table_candidates": [
            "poker_player people"
        ],
        "align_scores": [
            0.9932001233100891,
            6.78640280966647e-05,
            0.00015927021740935743,
            5.995626997901127e-05,
            0.0004464623925741762,
            5.86930473218672e-05,
            0.0004436927556525916,
            5.3915060561848804e-05
        ],
        "align_select": "select people.Birth_Date",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What is the average earnings of poker players with height higher than 200?",
        "gold_select": "select avg(poker_player.earn)",
        "select_candidates": [
            "select avg(poker_player.earn)",
            "select avg(poker_player.earn), people.Height",
            "select an avg(poker_player.earn)",
            "select avg(t0, poker_player.earn)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "poker_player people",
        "table_candidates": [
            "poker_player people"
        ],
        "align_scores": [
            0.9956496357917786,
            9.441840666113421e-05,
            0.00015984255878720433,
            0.11966169625520706,
            0.00035729544470086694,
            9.827721078181639e-05,
            0.00043954551802016795,
            0.0001044088858179748
        ],
        "align_select": "select avg(poker_player.earn)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give average earnings of poker players who are taller than 200.",
        "gold_select": "select avg(poker_player.earn)",
        "select_candidates": [
            "select avg(poker_player.earn)",
            "select avg(poker_player.earn), people.Height",
            "select an avg(poker_player.earn)",
            "select  avg(poker_player.earn)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "poker_player people",
        "table_candidates": [
            "poker_player people"
        ],
        "align_scores": [
            0.9956539869308472,
            0.00011587093467824161,
            0.0002447983715683222,
            0.023724297061562538,
            0.00038779579335823655,
            0.0001181666084448807,
            0.9956539869308472,
            0.00011587093467824161
        ],
        "align_select": "select avg(poker_player.earn)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of poker players in descending order of earnings?",
        "gold_select": "select people.Name",
        "select_candidates": [
            "select people.Name",
            "select people.Name, poker_player.earn",
            "select people.Name, poker_player.People_ID",
            "select people.Name, poker_player.Poker_Player_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "poker_player people",
        "table_candidates": [
            "poker_player people"
        ],
        "align_scores": [
            0.994619607925415,
            0.994619607925415,
            0.00023812313156668097,
            0.00023812313156668097,
            0.0001335600099992007,
            0.0001335600099992007,
            0.00013435017899610102,
            0.00013435017899610102
        ],
        "align_select": "select people.Name",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "Return the names of poker players sorted by their earnings descending.",
        "gold_select": "select people.Name",
        "select_candidates": [
            "select people.Name",
            "select people.Name, poker_player.earn",
            "select people.Name (ordered by poker_player.earn)",
            "select people.nal, poker_player.earn"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "poker_player people",
        "table_candidates": [
            "poker_player people"
        ],
        "align_scores": [
            0.9956242442131042,
            0.9956242442131042,
            0.00023681648599449545,
            0.00023681648599449545,
            0.003654314437881112,
            0.003654314437881112,
            0.0001817706215661019,
            0.0001817706215661019
        ],
        "align_select": "select people.Name",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "What are different nationalities of people and the corresponding number of people from each nation?",
        "gold_select": "select people.nal, count(*)",
        "select_candidates": [
            "select people.nal, count(*)",
            "select people.nal, count(*), people.Name",
            "select t2.c1, count(*)",
            "select list(*), people.nal"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "people",
        "table_candidates": [
            "people"
        ],
        "align_scores": [
            0.9887527227401733,
            0.00030206950032152236,
            0.0002082076098304242,
            0.00015933583199512213,
            0.0005530795897357166,
            0.00021892416407354176,
            0.00039076758548617363,
            0.00018602113414090127
        ],
        "align_select": "select people.nal, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "How many people are there of each nationality?",
        "gold_select": "select people.nal, count(*)",
        "select_candidates": [
            "select people.nal, count(*)",
            "select people.nal, count(*), people.Name",
            "select count(*), people.nal",
            "select people.nal, count(*), people.Birth_Date"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "people",
        "table_candidates": [
            "people"
        ],
        "align_scores": [
            0.9926880598068237,
            0.00018821527191903442,
            0.00016801904712338,
            9.741870599100366e-05,
            0.9878110289573669,
            0.00020889601728413254,
            0.0001720805885270238,
            0.00012875728134531528
        ],
        "align_select": "select people.nal, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "What is the most common nationality of people?",
        "gold_select": "select people.nal",
        "select_candidates": [
            "select people.nal",
            "select people.nal, people.Name",
            "select people.nal, people.Name, people.Birth_Date",
            "select people.nal, people.Birth_Date"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "people",
        "table_candidates": [
            "people"
        ],
        "align_scores": [
            0.9920896291732788,
            7.43757191230543e-05,
            0.00019503189832903445,
            5.7512512285029516e-05,
            0.0001255970128113404,
            5.476280057337135e-05,
            0.00021443930745590478,
            5.262923150439747e-05
        ],
        "align_select": "select people.nal",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Give the nationality that is most common across all people.",
        "gold_select": "select people.nal",
        "select_candidates": [
            "select people.nal",
            "select people.nal, people.Name",
            "select people.nal, people.Name, people.Birth_Date",
            "select people.nal, people.Name, max(people.Height)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "people",
        "table_candidates": [
            "people"
        ],
        "align_scores": [
            0.9845182299613953,
            9.18906953302212e-05,
            0.0002388897119089961,
            5.803977546747774e-05,
            0.00010842338087968528,
            5.2263832913013175e-05,
            0.00011101694690296426,
            5.615314876195043e-05
        ],
        "align_select": "select people.nal",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What are the nationalities that are shared by at least two people?",
        "gold_select": "select people.nal",
        "select_candidates": [
            "select people.nal",
            "select people.nal, people.Name",
            "select people.nal, min(people.Name)",
            "select people.nal, min(people.Height)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "people",
        "table_candidates": [
            "people"
        ],
        "align_scores": [
            0.9779305458068848,
            9.27885776036419e-05,
            0.00020136518287472427,
            6.531865801662207e-05,
            0.00022752444783691317,
            5.1250466640340164e-05,
            0.00022909043764229864,
            5.797671474283561e-05
        ],
        "align_select": "select people.nal",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Return the nationalities for which there are two or more people.",
        "gold_select": "select people.nal",
        "select_candidates": [
            "select people.nal",
            "select people.nal, people.Name",
            "select people.nal, count(*)",
            "select people.nal, people.Birth_Date"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "people",
        "table_candidates": [
            "people"
        ],
        "align_scores": [
            0.9909387826919556,
            9.633850277168676e-05,
            0.00027246566605754197,
            6.087873043725267e-05,
            0.015008718706667423,
            8.02874201326631e-05,
            0.00014400891086552292,
            4.9923146434593946e-05
        ],
        "align_select": "select people.nal",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Show names of people whose nationality is not \"Russia\".",
        "gold_select": "select people.Name",
        "select_candidates": [
            "select people.Name",
            "select people.Name, people.nal",
            "select people.Name, people.Birth_Date",
            "select people.Name, people.Height"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "people",
        "table_candidates": [
            "people"
        ],
        "align_scores": [
            0.9940345883369446,
            0.00014718946476932615,
            0.00023462298850063235,
            6.667588604614139e-05,
            0.00017107771418523043,
            6.248432327993214e-05,
            0.00012647808762267232,
            6.0031728935427964e-05
        ],
        "align_select": "select people.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of people who are not from Russia?",
        "gold_select": "select people.Name",
        "select_candidates": [
            "select people.Name",
            "select people.Name, people.Birth_Date",
            "select people.Name, people.nal",
            "select people.Name, people.Height"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "people",
        "table_candidates": [
            "people"
        ],
        "align_scores": [
            0.9901682138442993,
            0.00013694529479835182,
            0.00015104222984518856,
            6.132734415587038e-05,
            0.0002686292864382267,
            6.633115117438138e-05,
            0.0001438247418263927,
            5.6942979426821694e-05
        ],
        "align_select": "select people.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many distinct nationalities are there?",
        "gold_select": "select count(distinct people.nal)",
        "select_candidates": [
            "select count(distinct people.nal)",
            "select count(distinct people.Name)",
            "select count(distinct people.Height)",
            "select count(distinct t2.c1)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "people",
        "table_candidates": [
            "people",
            "poker_player"
        ],
        "align_scores": [
            0.9955229759216309,
            0.9955229759216309,
            0.00284031149931252,
            0.00284031149931252,
            0.0007348732906393707,
            0.0007348732906393707,
            0.0009798705577850342,
            0.0009798705577850342
        ],
        "align_select": "select count(distinct people.nal)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "Count the number of different nationalities.",
        "gold_select": "select count(distinct people.nal)",
        "select_candidates": [
            "select count(distinct people.nal)",
            "select count(distinct people.Name)",
            "select count(distinct people.Height)",
            "select count(distinct t2.c1)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "people",
        "table_candidates": [
            "people"
        ],
        "align_scores": [
            0.9959667921066284,
            0.9959667921066284,
            0.005311399232596159,
            0.005311399232596159,
            0.0007352596148848534,
            0.0007352596148848534,
            0.001275680959224701,
            0.001275680959224701
        ],
        "align_select": "select count(distinct people.nal)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What are the names of poker players?",
        "gold_select": "select people.Name",
        "select_candidates": [
            "select people.Name",
            "select distinct people.Name",
            "select people.Name, poker_player.ppl_id",
            "select distinct people.Name, poker_player.ppl_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "poker_player people",
        "table_candidates": [
            "poker_player people"
        ],
        "align_scores": [
            0.9906450510025024,
            0.26011568307876587,
            0.21949896216392517,
            0.000374913914129138,
            0.00016031040286179632,
            0.00014551845379173756,
            0.00015725052799098194,
            0.00011376101610949263
        ],
        "align_select": "select people.Name",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "Return the names of all the poker players.",
        "gold_select": "select people.Name",
        "select_candidates": [
            "select people.Name",
            "select distinct people.Name",
            "select people.Name, poker_player.ppl_id",
            "select distinct people.Name, poker_player.ppl_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "poker_player people",
        "table_candidates": [
            "poker_player people"
        ],
        "align_scores": [
            0.8970629572868347,
            0.0001544352126074955,
            0.21450529992580414,
            0.00012444387539289892,
            0.00013623481208924204,
            6.30610084044747e-05,
            0.0001372059341520071,
            7.262127473950386e-05
        ],
        "align_select": "select people.Name",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What are the names of poker players whose earnings is higher than 300000?",
        "gold_select": "select people.Name",
        "select_candidates": [
            "select people.Name",
            "select people.Name, people.Birth_Date",
            "select people.Name, people.nal",
            "select people.Name, t1.c5"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "poker_player people",
        "table_candidates": [
            "poker_player people"
        ],
        "align_scores": [
            0.9927383065223694,
            0.0002859431551769376,
            0.00014725839719176292,
            7.912649016361684e-05,
            0.00030449367477558553,
            8.805158722680062e-05,
            0.00026555167278274894,
            8.52077646413818e-05
        ],
        "align_select": "select people.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give the names of poker players who have earnings above 300000.",
        "gold_select": "select people.Name",
        "select_candidates": [
            "select people.Name",
            "select people.Name, people.Birth_Date",
            "select people.Name, people.nal",
            "select people.nal, people.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "poker_player people",
        "table_candidates": [
            "poker_player people"
        ],
        "align_scores": [
            0.9740304946899414,
            0.00027825290453620255,
            0.00015309281297959387,
            8.648693619761616e-05,
            0.000288303941488266,
            9.049475920619443e-05,
            0.00026381018687970936,
            9.103188494918868e-05
        ],
        "align_select": "select people.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List the names of poker players ordered by the final tables made in ascending order.",
        "gold_select": "select people.Name",
        "select_candidates": [
            "select people.Name",
            "select people.Name, poker_player.Final_Table_Made",
            "select people.Name, poker_player.ppl_id",
            "select people.Name, poker_player.Best_Finish"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "poker_player people",
        "table_candidates": [
            "poker_player people"
        ],
        "align_scores": [
            0.9941558837890625,
            0.0032685750629752874,
            0.0005036388756707311,
            9.300002420786768e-05,
            0.00013124963152222335,
            9.78753378149122e-05,
            0.0004331538802944124,
            0.00011471220932435244
        ],
        "align_select": "select people.Name",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "What are the names of poker players, ordered ascending by the number of final tables they have made?",
        "gold_select": "select people.Name",
        "select_candidates": [
            "select people.Name",
            "select people.Name, poker_player.Final_Table_Made",
            "select people.Name, poker_player.ppl_id",
            "select people.Name (ordered poker_player.Final_Table_Made)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "poker_player people",
        "table_candidates": [
            "poker_player people"
        ],
        "align_scores": [
            0.9894098043441772,
            0.9894098043441772,
            0.0004685964377131313,
            0.0004685964377131313,
            0.00018024459131993353,
            0.00018024459131993353,
            0.0019375982228666544,
            0.0019375982228666544
        ],
        "align_select": "select people.Name",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "What is the birth date of the poker player with the lowest earnings?",
        "gold_select": "select people.Birth_Date",
        "select_candidates": [
            "select people.Birth_Date",
            "select people.ppl_id, people.Birth_Date",
            "select people.Birth_Date, people.Height",
            "select people.Birth_Date, poker_player.Money_Rank"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "poker_player people",
        "table_candidates": [
            "poker_player people"
        ],
        "align_scores": [
            0.990035891532898,
            0.0001004799414658919,
            0.00038201137795113027,
            7.68701356719248e-05,
            0.00018085110059473664,
            6.675808253930882e-05,
            0.0005256625008769333,
            6.201594806043431e-05
        ],
        "align_select": "select people.Birth_Date",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Return the birth date of the poker player with the lowest earnings.",
        "gold_select": "select people.Birth_Date",
        "select_candidates": [
            "select people.Birth_Date",
            "select people.ppl_id, people.Birth_Date",
            "select people.Birth_Date, people.Height",
            "select people.Birth_Date, poker_player.Money_Rank"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "poker_player people",
        "table_candidates": [
            "poker_player people"
        ],
        "align_scores": [
            0.9932001233100891,
            6.78640280966647e-05,
            0.00041028845589607954,
            6.137197487987578e-05,
            0.00015927021740935743,
            5.995626997901127e-05,
            0.0004436927556525916,
            5.3915060561848804e-05
        ],
        "align_select": "select people.Birth_Date",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What is the money rank of the tallest poker player?",
        "gold_select": "select poker_player.Money_Rank",
        "select_candidates": [
            "select poker_player.Money_Rank",
            "select poker_player.ppl_id, poker_player.Money_Rank",
            "select poker_player.Money_Rank, people.Height",
            "select poker_player.ppl_id, poker_player.Final_Table_Made"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "poker_player people",
        "table_candidates": [
            "poker_player people",
            "people poker_player people",
            "people poker_player"
        ],
        "align_scores": [
            0.6049582362174988,
            6.264600233407691e-05,
            0.00016295020759571344,
            6.785729055991396e-05,
            0.0005233758711256087,
            5.710906407330185e-05,
            0.00015008950140327215,
            5.75456433580257e-05
        ],
        "align_select": "select poker_player.Money_Rank",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Return the money rank of the poker player with the greatest height.",
        "gold_select": "select poker_player.Money_Rank",
        "select_candidates": [
            "select poker_player.Money_Rank",
            "select poker_player.ppl_id, poker_player.Money_Rank",
            "select poker_player.ppl_id, poker_player.Final_Table_Made",
            "select poker_player.Money_Rank, people.Height"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "poker_player people",
        "table_candidates": [
            "poker_player people",
            "people poker_player people"
        ],
        "align_scores": [
            0.9799250364303589,
            5.870362656423822e-05,
            0.00012601773778442293,
            6.0620699514402077e-05,
            0.00012353621423244476,
            5.918759779888205e-05,
            0.00034440011950209737,
            5.8903591707348824e-05
        ],
        "align_select": "select poker_player.Money_Rank",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What is the average earnings of poker players with height higher than 200?",
        "gold_select": "select avg(poker_player.Earnings)",
        "select_candidates": [
            "select avg(poker_player.Earnings)",
            "select avg(poker_player.Earnings), people.Height",
            "select an avg(poker_player.Earnings)",
            "select  avg(poker_player.Earnings)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "poker_player people",
        "table_candidates": [
            "poker_player people"
        ],
        "align_scores": [
            0.9962255954742432,
            9.150123514700681e-05,
            0.00016317660629283637,
            0.10395284742116928,
            0.0003497423604130745,
            9.386586316395551e-05,
            0.9962255954742432,
            9.150123514700681e-05
        ],
        "align_select": "select avg(poker_player.Earnings)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give average earnings of poker players who are taller than 200.",
        "gold_select": "select avg(poker_player.Earnings)",
        "select_candidates": [
            "select avg(poker_player.Earnings)",
            "select an avg(poker_player.Earnings)",
            "select avg(poker_player.Earnings), people.Height",
            "select  avg(poker_player.Earnings)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "poker_player people",
        "table_candidates": [
            "poker_player people"
        ],
        "align_scores": [
            0.996241569519043,
            0.00011790795542765409,
            0.0003904789627995342,
            0.00011883135448442772,
            0.0002606305934023112,
            0.013615761883556843,
            0.996241569519043,
            0.00011790795542765409
        ],
        "align_select": "select avg(poker_player.Earnings)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of poker players in descending order of earnings?",
        "gold_select": "select people.Name",
        "select_candidates": [
            "select people.Name",
            "select people.Name, poker_player.Earnings",
            "select people.Name, poker_player.Best_Finish",
            "select people.nal, poker_player.Earnings"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "poker_player people",
        "table_candidates": [
            "poker_player people"
        ],
        "align_scores": [
            0.994619607925415,
            0.994619607925415,
            0.00022691655613016337,
            0.00022691655613016337,
            0.00018466057372279465,
            0.00018466057372279465,
            0.00021054853277746588,
            0.00021054853277746588
        ],
        "align_select": "select people.Name",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "Return the names of poker players sorted by their earnings descending.",
        "gold_select": "select people.Name",
        "select_candidates": [
            "select people.Name",
            "select people.Name, poker_player.Earnings",
            "select people.Name (ordered by poker_player.Earnings)",
            "select people.Name (ordered poker_player.Earnings)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "poker_player people",
        "table_candidates": [
            "poker_player people"
        ],
        "align_scores": [
            0.9956242442131042,
            0.9956242442131042,
            0.0002287506067659706,
            0.0002287506067659706,
            0.0031243974808603525,
            0.0031243974808603525,
            0.0017089929897338152,
            0.0017089929897338152
        ],
        "align_select": "select people.Name",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "What are different nationalities of people and the corresponding number of people from each nation?",
        "gold_select": "select people.nal, count(*)",
        "select_candidates": [
            "select people.nal, count(*)",
            "select count(*), people.nal",
            "select t2.c1, count(*)",
            "select list(*), people.nal"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "people",
        "table_candidates": [
            "people"
        ],
        "align_scores": [
            0.9887527227401733,
            0.00030206950032152236,
            0.9845581650733948,
            0.0003058748261537403,
            0.0005530795897357166,
            0.00021892416407354176,
            0.00039076758548617363,
            0.00018602113414090127
        ],
        "align_select": "select people.nal, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "How many people are there of each nationality?",
        "gold_select": "select people.nal, count(*)",
        "select_candidates": [
            "select people.nal, count(*)",
            "select count(*), people.nal",
            "select avg(people.Height), people.nal",
            "select people.nal, count(*), people.Name"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "people",
        "table_candidates": [
            "people"
        ],
        "align_scores": [
            0.9926880598068237,
            0.00018821527191903442,
            0.9878110289573669,
            0.00020889601728413254,
            0.00018219156481791288,
            0.00011796419130405411,
            0.00016801904712338,
            9.741870599100366e-05
        ],
        "align_select": "select people.nal, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "What is the most common nationality of people?",
        "gold_select": "select people.nal",
        "select_candidates": [
            "select people.nal",
            "select people.nal, people.Name",
            "select people.nal, people.Birth_Date",
            "select people.nal, people.Height"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "people",
        "table_candidates": [
            "people"
        ],
        "align_scores": [
            0.9920896291732788,
            7.43757191230543e-05,
            0.00019503189832903445,
            5.7512512285029516e-05,
            0.00021443930745590478,
            5.262923150439747e-05,
            0.00016867172962520272,
            5.6740795116638765e-05
        ],
        "align_select": "select people.nal",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Give the nationality that is most common across all people.",
        "gold_select": "select people.nal",
        "select_candidates": [
            "select people.nal",
            "select people.nal, people.Name",
            "select people.nal, people.Birth_Date",
            "select people.nal, people.Height"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "people",
        "table_candidates": [
            "people"
        ],
        "align_scores": [
            0.9845182299613953,
            9.18906953302212e-05,
            0.0002388897119089961,
            5.803977546747774e-05,
            0.0001569587184349075,
            5.398101347964257e-05,
            0.00016254038200713694,
            5.847186912433244e-05
        ],
        "align_select": "select people.nal",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What are the nationalities that are shared by at least two people?",
        "gold_select": "select people.nal",
        "select_candidates": [
            "select people.nal",
            "select people.nal, people.Name",
            "select people.nal, min(people.Name)",
            "select people.nal, min(people.Height)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "people",
        "table_candidates": [
            "people",
            "poker_player people"
        ],
        "align_scores": [
            0.9779305458068848,
            9.27885776036419e-05,
            0.00020136518287472427,
            6.531865801662207e-05,
            0.00022752444783691317,
            5.1250466640340164e-05,
            0.00022909043764229864,
            5.797671474283561e-05
        ],
        "align_select": "select people.nal",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Return the nationalities for which there are two or more people.",
        "gold_select": "select people.nal",
        "select_candidates": [
            "select people.nal",
            "select people.nal, people.Name",
            "select people.nal, count(*)",
            "select people.nal, people.Birth_Date"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "people",
        "table_candidates": [
            "people",
            "poker_player people"
        ],
        "align_scores": [
            0.9909387826919556,
            9.633850277168676e-05,
            0.00027246566605754197,
            6.087873043725267e-05,
            0.015008718706667423,
            8.02874201326631e-05,
            0.00014400891086552292,
            4.9923146434593946e-05
        ],
        "align_select": "select people.nal",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Show names of people whose nationality is not \"Russia\".",
        "gold_select": "select people.Name",
        "select_candidates": [
            "select people.Name",
            "select people.Name, people.nal",
            "select people.Name, people.Birth_Date",
            "select people.Name, people.Height"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "people",
        "table_candidates": [
            "people"
        ],
        "align_scores": [
            0.9940345883369446,
            0.00014718946476932615,
            0.00023462298850063235,
            6.667588604614139e-05,
            0.00017107771418523043,
            6.248432327993214e-05,
            0.00012647808762267232,
            6.0031728935427964e-05
        ],
        "align_select": "select people.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of people who are not from Russia?",
        "gold_select": "select people.Name",
        "select_candidates": [
            "select people.Name",
            "select people.Name, people.Birth_Date",
            "select people.Name, people.nal",
            "select people.Name, people.Height"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "people",
        "table_candidates": [
            "people"
        ],
        "align_scores": [
            0.9901682138442993,
            0.00013694529479835182,
            0.00015104222984518856,
            6.132734415587038e-05,
            0.0002686292864382267,
            6.633115117438138e-05,
            0.0001438247418263927,
            5.6942979426821694e-05
        ],
        "align_select": "select people.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List the names of people that are not poker players.",
        "gold_select": "select people.Name",
        "select_candidates": [
            "select people.Name",
            "select people.Name, people.Birth_Date",
            "select people.Name, people.nal",
            "select non-poker people.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "people",
        "table_candidates": [
            "people",
            "poker_player people"
        ],
        "align_scores": [
            0.979393720626831,
            0.0002483325661160052,
            0.00014540528354700655,
            7.06142236595042e-05,
            0.0002639017766341567,
            6.853577360743657e-05,
            0.0042589325457811356,
            0.0001222652499563992
        ],
        "align_select": "select people.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of people who do not play poker?",
        "gold_select": "select people.Name",
        "select_candidates": [
            "select people.Name",
            "select people.Name, people.Birth_Date",
            "select people.Name, people.nal",
            "select people.nal, people.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "people",
        "table_candidates": [
            "poker_player people",
            "people"
        ],
        "align_scores": [
            0.9814421534538269,
            0.724909245967865,
            0.00014466705033555627,
            0.00015467411139979959,
            0.00031529078842140734,
            0.00030715568573214114,
            0.00026029933360405266,
            0.0002382160018896684
        ],
        "align_select": "select people.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many distinct nationalities are there?",
        "gold_select": "select count(distinct people.nal)",
        "select_candidates": [
            "select count(distinct people.nal)",
            "select count(distinct people.Name)",
            "select count(distinct people.Height)",
            "select count(distinct t2.c1)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "people",
        "table_candidates": [
            "people",
            "poker_player"
        ],
        "align_scores": [
            0.9955229759216309,
            0.9955229759216309,
            0.00284031149931252,
            0.00284031149931252,
            0.0007348732906393707,
            0.0007348732906393707,
            0.0009798705577850342,
            0.0009798705577850342
        ],
        "align_select": "select count(distinct people.nal)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "Count the number of different nationalities.",
        "gold_select": "select count(distinct people.nal)",
        "select_candidates": [
            "select count(distinct people.nal)",
            "select count(distinct people.Name)",
            "select count(distinct people.Height)",
            "select count(distinct t2.c1)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "people",
        "table_candidates": [
            "people"
        ],
        "align_scores": [
            0.9959667921066284,
            0.9959667921066284,
            0.005311399232596159,
            0.005311399232596159,
            0.0007352596148848534,
            0.0007352596148848534,
            0.001275680959224701,
            0.001275680959224701
        ],
        "align_select": "select count(distinct people.nal)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "List the final tables made and the best finishes of poker players.",
        "gold_select": "select poker_player.ftm, poker_player.Best_Finish",
        "select_candidates": [
            "select poker_player.ftm, poker_player.Best_Finish",
            "select poker_player.p_id, poker_player.ftm, poker_player.Best_Finish",
            "select poker_player.ftm.c2, poker_player.Best_Finish",
            "select distinct poker_player.ftm, poker_player.Best_Finish"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "poker_player",
        "table_candidates": [
            "poker_player"
        ],
        "align_scores": [
            0.9921552538871765,
            0.07246328890323639,
            0.0001807099033612758,
            0.0002935079683084041,
            0.0003777387028094381,
            0.00017543717694934458,
            0.003160381456837058,
            0.00016783876344561577
        ],
        "align_select": "select poker_player.ftm, poker_player.Best_Finish",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What are the final tables made and best finishes for all poker players?",
        "gold_select": "select poker_player.ftm, poker_player.Best_Finish",
        "select_candidates": [
            "select poker_player.ftm, poker_player.Best_Finish",
            "select poker_player.p_id, poker_player.ftm, poker_player.Best_Finish",
            "select poker_player.Earnings, poker_player.ftm, poker_player.Best_Finish",
            "select poker_player.ftm.c2, poker_player.Best_Finish"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "poker_player",
        "table_candidates": [
            "poker_player"
        ],
        "align_scores": [
            0.9933452606201172,
            0.5873885154724121,
            0.00025336764520034194,
            0.0006381241255439818,
            0.0003020003787241876,
            0.00021328350703697652,
            0.0005146702751517296,
            0.00022819748846814036
        ],
        "align_select": "select poker_player.ftm, poker_player.Best_Finish",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What is the maximum number of final tables made among poker players with earnings less than 200000?",
        "gold_select": "select max(poker_player.ftm)",
        "select_candidates": [
            "select max(poker_player.ftm)",
            "select max(poker_player.Best_Finish)",
            "select max(t0.c6)",
            "select max(poker_player.Money_Rank)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "poker_player",
        "table_candidates": [
            "poker_player"
        ],
        "align_scores": [
            0.991071343421936,
            0.0001695547252893448,
            0.9818316698074341,
            0.0002455290814395994,
            0.0007801418541930616,
            0.00016094495367724448,
            0.00923783890902996,
            0.001026033773086965
        ],
        "align_select": "select max(poker_player.ftm)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the maximum final tables made across all poker players who have earnings below 200000.",
        "gold_select": "select max(poker_player.ftm)",
        "select_candidates": [
            "select max(poker_player.ftm)",
            "select max(poker_player.Best_Finish)",
            "select max(poker_player.ftm), poker_player.Earnings",
            "select max(poker_player.ftm), poker_player.Best_Finish"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "poker_player",
        "table_candidates": [
            "poker_player"
        ],
        "align_scores": [
            0.9929041266441345,
            0.00011551889474503696,
            0.9928529858589172,
            0.00012221386714372784,
            0.0001491996954428032,
            6.316544022411108e-05,
            0.00016948864504229277,
            7.022968929959461e-05
        ],
        "align_select": "select max(poker_player.ftm)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of poker players?",
        "gold_select": "select people.Name",
        "select_candidates": [
            "select people.Name",
            "select distinct people.Name",
            "select people.Name, poker_player.ppl_id",
            "select distinct people.Name, poker_player.ppl_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "poker_player people",
        "table_candidates": [
            "poker_player people"
        ],
        "align_scores": [
            0.9906450510025024,
            0.26011568307876587,
            0.21949896216392517,
            0.000374913914129138,
            0.00016031040286179632,
            0.00014551845379173756,
            0.00015725052799098194,
            0.00011376101610949263
        ],
        "align_select": "select people.Name",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "Return the names of all the poker players.",
        "gold_select": "select people.Name",
        "select_candidates": [
            "select people.Name",
            "select distinct people.Name",
            "select people.Name, poker_player.ppl_id",
            "select distinct people.Name, poker_player.ppl_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "poker_player people",
        "table_candidates": [
            "poker_player people"
        ],
        "align_scores": [
            0.8970629572868347,
            0.0001544352126074955,
            0.21450529992580414,
            0.00012444387539289892,
            0.00013623481208924204,
            6.30610084044747e-05,
            0.0001372059341520071,
            7.262127473950386e-05
        ],
        "align_select": "select people.Name",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What are the names of poker players whose earnings is higher than 300000?",
        "gold_select": "select people.Name",
        "select_candidates": [
            "select people.Name",
            "select people.Name, people.dob",
            "select people.Name, poker_player.ppl_id",
            "select people.Name, people.nal"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "poker_player people",
        "table_candidates": [
            "poker_player people"
        ],
        "align_scores": [
            0.9927383065223694,
            0.0002859431551769376,
            0.00022804655600339174,
            8.707896631676704e-05,
            0.00015701650409027934,
            8.269453974207863e-05,
            0.00030449367477558553,
            8.805158722680062e-05
        ],
        "align_select": "select people.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give the names of poker players who have earnings above 300000.",
        "gold_select": "select people.Name",
        "select_candidates": [
            "select people.Name",
            "select people.Name, people.dob",
            "select people.Name, people.nal",
            "select people.Name, poker_player.ppl_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "poker_player people",
        "table_candidates": [
            "poker_player people"
        ],
        "align_scores": [
            0.9740304946899414,
            0.00027825290453620255,
            0.00022812746465206146,
            9.09054942894727e-05,
            0.000288303941488266,
            9.049475920619443e-05,
            0.00017169247439596802,
            8.41477231006138e-05
        ],
        "align_select": "select people.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List the names of poker players ordered by the final tables made in ascending order.",
        "gold_select": "select people.Name",
        "select_candidates": [
            "select people.Name",
            "select people.Name, poker_player.ftm",
            "select people.Name, poker_player.Best_Finish",
            "select people.Name (ordered by poker_player.ftm)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "poker_player people",
        "table_candidates": [
            "poker_player people"
        ],
        "align_scores": [
            0.9941558837890625,
            0.9941558837890625,
            0.000893221702426672,
            0.000893221702426672,
            0.0004331538802944124,
            0.0004331538802944124,
            0.007351802196353674,
            0.007351802196353674
        ],
        "align_select": "select people.Name",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "What are the names of poker players, ordered ascending by the number of final tables they have made?",
        "gold_select": "select people.Name",
        "select_candidates": [
            "select people.Name",
            "select people.Name, poker_player.Best_Finish",
            "select people.Name, poker_player.ftm",
            "select people.Name (ordered poker_player.ftm)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "poker_player people",
        "table_candidates": [
            "poker_player people"
        ],
        "align_scores": [
            0.9894098043441772,
            0.9894098043441772,
            0.0004899827763438225,
            0.0004899827763438225,
            0.0009696715860627592,
            0.0009696715860627592,
            0.006176091264933348,
            0.006176091264933348
        ],
        "align_select": "select people.Name",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "What is the birth date of the poker player with the lowest earnings?",
        "gold_select": "select people.dob",
        "select_candidates": [
            "select people.dob",
            "select people.dob, people.ht",
            "select people.nal, people.dob",
            "select people.dob (people.ht)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "poker_player people",
        "table_candidates": [
            "poker_player people"
        ],
        "align_scores": [
            0.9885713458061218,
            0.00011794114107033238,
            0.00032261761953122914,
            8.431946480413899e-05,
            0.00028200988890603185,
            7.487986295018345e-05,
            0.004021996632218361,
            7.672600622754544e-05
        ],
        "align_select": "select people.dob",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Return the birth date of the poker player with the lowest earnings.",
        "gold_select": "select people.dob",
        "select_candidates": [
            "select people.dob",
            "select people.dob, people.ht",
            "select people.nal, people.dob",
            "select people.dob (people.ht)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "poker_player people",
        "table_candidates": [
            "poker_player people"
        ],
        "align_scores": [
            0.9919158816337585,
            7.759276195429265e-05,
            0.00026357080787420273,
            6.401567225111648e-05,
            0.0002532034122850746,
            6.125742947915569e-05,
            0.0023363938089460135,
            6.301015673670918e-05
        ],
        "align_select": "select people.dob",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What is the money rank of the tallest poker player?",
        "gold_select": "select poker_player.Money_Rank",
        "select_candidates": [
            "select poker_player.Money_Rank",
            "select poker_player.ppl_id, poker_player.Money_Rank",
            "select poker_player.ppl_id, poker_player.ftm",
            "select poker_player.Money_Rank, people.ht"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "poker_player people",
        "table_candidates": [
            "poker_player people",
            "people poker_player people",
            "people poker_player"
        ],
        "align_scores": [
            0.6049582362174988,
            6.264600233407691e-05,
            0.00016295020759571344,
            6.785729055991396e-05,
            0.00016583087563049048,
            6.78424839861691e-05,
            0.0012697489000856876,
            6.366039451677352e-05
        ],
        "align_select": "select poker_player.Money_Rank",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Return the money rank of the poker player with the greatest height.",
        "gold_select": "select poker_player.Money_Rank",
        "select_candidates": [
            "select poker_player.Money_Rank",
            "select poker_player.ppl_id, poker_player.Money_Rank",
            "select poker_player.ppl_id, poker_player.ftm",
            "select poker_player.p_id, poker_player.Money_Rank"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "poker_player people",
        "table_candidates": [
            "poker_player people",
            "people poker_player people",
            "people poker_player"
        ],
        "align_scores": [
            0.9799250364303589,
            5.870362656423822e-05,
            0.00012601773778442293,
            6.0620699514402077e-05,
            0.0001392863196088001,
            7.439082401106134e-05,
            0.00012140623584855348,
            6.185069651110098e-05
        ],
        "align_select": "select poker_player.Money_Rank",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What is the average earnings of poker players with height higher than 200?",
        "gold_select": "select avg(poker_player.Earnings)",
        "select_candidates": [
            "select avg(poker_player.Earnings)",
            "select avg(poker_player.Earnings), people.ht",
            "select an avg(poker_player.Earnings)",
            "select  avg(poker_player.Earnings)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "poker_player people",
        "table_candidates": [
            "poker_player people"
        ],
        "align_scores": [
            0.9962255954742432,
            9.150123514700681e-05,
            0.00017811990983318537,
            0.14869952201843262,
            0.0003497423604130745,
            9.386586316395551e-05,
            0.9962255954742432,
            9.150123514700681e-05
        ],
        "align_select": "select avg(poker_player.Earnings)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give average earnings of poker players who are taller than 200.",
        "gold_select": "select avg(poker_player.Earnings)",
        "select_candidates": [
            "select avg(poker_player.Earnings)",
            "select an avg(poker_player.Earnings)",
            "select avg(t0, poker_player.Earnings)",
            "select avg(poker_player.Earnings), people.ht"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "poker_player people",
        "table_candidates": [
            "poker_player people"
        ],
        "align_scores": [
            0.996241569519043,
            0.00011790795542765409,
            0.0003904789627995342,
            0.00011883135448442772,
            0.000414989423006773,
            0.00012336281361058354,
            0.0002419498487142846,
            0.0023508721496909857
        ],
        "align_select": "select avg(poker_player.Earnings)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of poker players in descending order of earnings?",
        "gold_select": "select people.Name",
        "select_candidates": [
            "select people.Name",
            "select people.Name, poker_player.Earnings",
            "select people.Name, poker_player.ppl_id",
            "select people.Name, poker_player.p_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "poker_player people",
        "table_candidates": [
            "poker_player people"
        ],
        "align_scores": [
            0.994619607925415,
            0.994619607925415,
            0.00022691655613016337,
            0.00022691655613016337,
            0.00014843228564132005,
            0.00014843228564132005,
            0.00015278217324521393,
            0.00015278217324521393
        ],
        "align_select": "select people.Name",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "Return the names of poker players sorted by their earnings descending.",
        "gold_select": "select people.Name",
        "select_candidates": [
            "select people.Name",
            "select people.Name, poker_player.Earnings",
            "select people.Name (ordered by poker_player.Earnings)",
            "select people.Name (ordered poker_player.Earnings)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "poker_player people",
        "table_candidates": [
            "poker_player people"
        ],
        "align_scores": [
            0.9956242442131042,
            0.9956242442131042,
            0.0002287506067659706,
            0.0002287506067659706,
            0.0031243974808603525,
            0.0031243974808603525,
            0.0017089929897338152,
            0.0017089929897338152
        ],
        "align_select": "select people.Name",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "What are different nationalities of people and the corresponding number of people from each nation?",
        "gold_select": "select people.nal, count(*)",
        "select_candidates": [
            "select people.nal, count(*)",
            "select count(*), people.nal",
            "select people.nal, count(*), people.Name",
            "select list(*), people.nal"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "people",
        "table_candidates": [
            "people"
        ],
        "align_scores": [
            0.9887527227401733,
            0.00030206950032152236,
            0.9845581650733948,
            0.0003058748261537403,
            0.0002082076098304242,
            0.00015933583199512213,
            0.00039076758548617363,
            0.00018602113414090127
        ],
        "align_select": "select people.nal, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "How many people are there of each nationality?",
        "gold_select": "select people.nal, count(*)",
        "select_candidates": [
            "select people.nal, count(*)",
            "select count(*), people.nal",
            "select avg(people.ht), people.nal",
            "select people.nal, count(*), people.Name"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "people",
        "table_candidates": [
            "people"
        ],
        "align_scores": [
            0.9926880598068237,
            0.00018821527191903442,
            0.9878110289573669,
            0.00020889601728413254,
            0.00018355829524807632,
            0.00011698872549459338,
            0.00016801904712338,
            9.741870599100366e-05
        ],
        "align_select": "select people.nal, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "What is the most common nationality of people?",
        "gold_select": "select people.nal",
        "select_candidates": [
            "select people.nal",
            "select people.nal, people.Name",
            "select people.nal, people.ht",
            "select people.nal, people.dob"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "people",
        "table_candidates": [
            "people"
        ],
        "align_scores": [
            0.9920896291732788,
            7.43757191230543e-05,
            0.00019503189832903445,
            5.7512512285029516e-05,
            0.00036923689185641706,
            6.166789535200223e-05,
            0.00017140197451226413,
            5.627392602036707e-05
        ],
        "align_select": "select people.nal",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Give the nationality that is most common across all people.",
        "gold_select": "select people.nal",
        "select_candidates": [
            "select people.nal",
            "select people.nal, people.Name",
            "select people.nal, people.ht",
            "select people.nal, people.dob"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "people",
        "table_candidates": [
            "people"
        ],
        "align_scores": [
            0.9845182299613953,
            9.18906953302212e-05,
            0.0002388897119089961,
            5.803977546747774e-05,
            0.0005069132312200963,
            6.305896386038512e-05,
            0.0001816005096770823,
            5.738902109442279e-05
        ],
        "align_select": "select people.nal",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What are the nationalities that are shared by at least two people?",
        "gold_select": "select people.nal",
        "select_candidates": [
            "select people.nal",
            "select people.nal, people.Name",
            "select people.nal, min(people.ht)",
            "select people.nal, min(people.Name)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "people",
        "table_candidates": [
            "people"
        ],
        "align_scores": [
            0.9779305458068848,
            9.27885776036419e-05,
            0.00020136518287472427,
            6.531865801662207e-05,
            0.0002370627480559051,
            5.557461190619506e-05,
            0.00022752444783691317,
            5.1250466640340164e-05
        ],
        "align_select": "select people.nal",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Return the nationalities for which there are two or more people.",
        "gold_select": "select people.nal",
        "select_candidates": [
            "select people.nal",
            "select people.nal, people.Name",
            "select people.nal, count(*)",
            "select people.nal, people.ht"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "people",
        "table_candidates": [
            "people"
        ],
        "align_scores": [
            0.9909387826919556,
            9.633850277168676e-05,
            0.00027246566605754197,
            6.087873043725267e-05,
            0.015008718706667423,
            8.02874201326631e-05,
            0.0007331972592510283,
            6.551815749844536e-05
        ],
        "align_select": "select people.nal",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "List the names and birth dates of people in ascending alphabetical order of name.",
        "gold_select": "select people.Name, people.dob",
        "select_candidates": [
            "select people.Name, people.dob",
            "select t1.c 2, people.dob",
            "select people.ht, people.Name",
            "select people.Name, people.dob,"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "people",
        "table_candidates": [
            "people"
        ],
        "align_scores": [
            0.9956562519073486,
            0.9956562519073486,
            0.00040734454523772,
            0.00040734454523772,
            0.00036193596315570176,
            0.00036193596315570176,
            0.0007314685499295592,
            0.0007314685499295592
        ],
        "align_select": "select people.Name, people.dob",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "What are the names and birth dates of people, ordered by their names in alphabetical order?",
        "gold_select": "select people.Name, people.dob",
        "select_candidates": [
            "select people.Name, people.dob",
            "select people.Name, people.dob, people.ht",
            "select t1.c 2, people.dob",
            "select people.ht, people.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "people",
        "table_candidates": [
            "people"
        ],
        "align_scores": [
            0.9949654936790466,
            0.9949654936790466,
            0.00022454863938037306,
            0.00022454863938037306,
            0.00040376343531534076,
            0.00040376343531534076,
            0.00034129078267142177,
            0.00034129078267142177
        ],
        "align_select": "select people.Name, people.dob",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "Show names of people whose nationality is not \"Russia\".",
        "gold_select": "select people.Name",
        "select_candidates": [
            "select people.Name",
            "select people.Name, people.dob",
            "select people.Name, people.nal",
            "select people.Name, people.ht"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "people",
        "table_candidates": [
            "people"
        ],
        "align_scores": [
            0.9940345883369446,
            0.00014718946476932615,
            0.0028411326929926872,
            8.497213275404647e-05,
            0.00023462298850063235,
            6.667588604614139e-05,
            0.0001544835395179689,
            6.954405398573726e-05
        ],
        "align_select": "select people.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of people who are not from Russia?",
        "gold_select": "select people.Name",
        "select_candidates": [
            "select people.Name",
            "select people.Name, people.dob",
            "select people.Name, people.ht",
            "select people.Name, t1.c5"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "people",
        "table_candidates": [
            "people"
        ],
        "align_scores": [
            0.9901682138442993,
            0.00013694529479835182,
            0.00023128271277528256,
            7.656361412955448e-05,
            0.00017111685883719474,
            6.544572534039617e-05,
            0.00040952590643428266,
            6.83129474055022e-05
        ],
        "align_select": "select people.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List the names of people that are not poker players.",
        "gold_select": "select people.Name",
        "select_candidates": [
            "select people.Name",
            "select people.Name, people.dob",
            "select distinct people.Name",
            "select people.Name, people.ht"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "people",
        "table_candidates": [
            "people",
            "poker_player people"
        ],
        "align_scores": [
            0.979393720626831,
            0.009975542314350605,
            0.0003833232040051371,
            0.0165884867310524,
            0.04154389351606369,
            0.008955408819019794,
            0.00015602818166371435,
            0.00017282679618801922
        ],
        "align_select": "select people.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of people who do not play poker?",
        "gold_select": "select people.Name",
        "select_candidates": [
            "select people.Name",
            "select people.Name, people.dob",
            "select people.Name, poker_player.ppl_id",
            "select non-poker people.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "people",
        "table_candidates": [
            "poker_player people",
            "people"
        ],
        "align_scores": [
            0.9814421534538269,
            0.724909245967865,
            0.00022862217156216502,
            0.05367598682641983,
            0.00014741446648258716,
            0.0002408262516837567,
            0.006184185389429331,
            0.0015785603318363428
        ],
        "align_select": "select people.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many distinct nationalities are there?",
        "gold_select": "select count(distinct people.nal)",
        "select_candidates": [
            "select count(distinct people.nal)",
            "select count(distinct people.Name)",
            "select count(distinct people.ht)",
            "select count(distinct t2.c1)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "people",
        "table_candidates": [
            "people"
        ],
        "align_scores": [
            0.9955229759216309,
            0.9955229759216309,
            0.00284031149931252,
            0.00284031149931252,
            0.10685421526432037,
            0.10685421526432037,
            0.0009798705577850342,
            0.0009798705577850342
        ],
        "align_select": "select count(distinct people.nal)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "Count the number of different nationalities.",
        "gold_select": "select count(distinct people.nal)",
        "select_candidates": [
            "select count(distinct people.nal)",
            "select count(distinct people.Name)",
            "select count(distinct people.ht)",
            "select count(distinct t2.c1)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "people",
        "table_candidates": [
            "people"
        ],
        "align_scores": [
            0.9959667921066284,
            0.9959667921066284,
            0.005311399232596159,
            0.005311399232596159,
            0.08579212427139282,
            0.08579212427139282,
            0.001275680959224701,
            0.001275680959224701
        ],
        "align_select": "select count(distinct people.nal)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "List the contestant numbers and names, ordered by contestant name descending.",
        "gold_select": "select CONTESTANTS.contestant_no, CONTESTANTS.name",
        "select_candidates": [
            "select CONTESTANTS.contestant_no, CONTESTANTS.name",
            "select CONTESTANTS.name, CONTESTANTS.contestant_no",
            "select VOTES.contestant_no, CONTESTANTS.name",
            "select CONTESTANTS.contestant_no, CONTESTANTS.name,"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "CONTESTANTS",
        "table_candidates": [
            "CONTESTANTS"
        ],
        "align_scores": [
            0.9958587288856506,
            0.9958587288856506,
            0.9958354234695435,
            0.9958354234695435,
            0.06315937638282776,
            0.06315937638282776,
            0.0008822662057355046,
            0.0008822662057355046
        ],
        "align_select": "select CONTESTANTS.contestant_no, CONTESTANTS.name",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "List the vote ids, phone numbers and states of all votes.",
        "gold_select": "select VOTES.vote_id, VOTES.ph, VOTES.state",
        "select_candidates": [
            "select VOTES.vote_id, VOTES.ph, VOTES.state",
            "select VOTES.vote_id, VOTES.ph, VOTES.state",
            "select VOTES.vote_id, VOTES.ph.c1, VOTES.state",
            "select VOTES.vote_id-, VOTES.ph, VOTES.state"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "VOTES",
        "table_candidates": [
            "VOTES"
        ],
        "align_scores": [
            0.9941788911819458,
            8.876396168489009e-05,
            0.9941788911819458,
            8.876396168489009e-05,
            0.0009386166930198669,
            7.444746006513014e-05,
            0.003946917597204447,
            0.00010240477422485128
        ],
        "align_select": "select VOTES.vote_id, VOTES.ph, VOTES.state",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What are the names of the contestants whose names are not 'Jessie Alloway'",
        "gold_select": "select CONTESTANTS.name",
        "select_candidates": [
            "select CONTESTANTS.name",
            "select CONTESTANTS.name, CONTESTANTS.contestant_no",
            "select CONTESTANTS.name, t1.c2",
            "select CONTESTANTS.name, t1.c3"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "CONTESTANTS",
        "table_candidates": [
            "CONTESTANTS"
        ],
        "align_scores": [
            0.9935238361358643,
            0.0007692669751122594,
            0.0001921358925756067,
            7.805808854755014e-05,
            0.00029322155751287937,
            9.892608068184927e-05,
            0.0003465379122644663,
            0.00010007908713305369
        ],
        "align_select": "select CONTESTANTS.name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the contestant numbers and names of the contestants who had at least two votes?",
        "gold_select": "select CONTESTANTS.contestant_no, CONTESTANTS.name",
        "select_candidates": [
            "select CONTESTANTS.contestant_no, CONTESTANTS.name",
            "select VOTES.contestant_no, CONTESTANTS.name",
            "select VOTES.state, CONTESTANTS.contestant_no, CONTESTANTS.name",
            "select CONTESTANTS.name, CONTESTANTS.contestant_no"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "CONTESTANTS VOTES",
        "table_candidates": [
            "CONTESTANTS VOTES"
        ],
        "align_scores": [
            0.5359533429145813,
            8.300297486130148e-05,
            0.010813356377184391,
            8.543443982489407e-05,
            0.0002658604644238949,
            5.7986504543805495e-05,
            0.6494377255439758,
            8.679379243403673e-05
        ],
        "align_select": "select CONTESTANTS.contestant_no, CONTESTANTS.name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Of all the contestants who got voted, what is the contestant number and name of the contestant who got least votes?",
        "gold_select": "select CONTESTANTS.contestant_no, CONTESTANTS.name",
        "select_candidates": [
            "select CONTESTANTS.contestant_no, CONTESTANTS.name",
            "select VOTES.contestant_no, CONTESTANTS.name",
            "select CONTESTANTS.name, CONTESTANTS.contestant_no",
            "select t1.c2, CONTESTANTS.name"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "CONTESTANTS VOTES",
        "table_candidates": [
            "CONTESTANTS VOTES"
        ],
        "align_scores": [
            0.9249629974365234,
            0.8743712902069092,
            0.09360048174858093,
            0.01727410778403282,
            0.9648764729499817,
            0.9412042498588562,
            0.00068286171881482,
            0.0005735280574299395
        ],
        "align_select": "select CONTESTANTS.contestant_no, CONTESTANTS.name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "How many contestants did not get voted?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), CONTESTANTS.name",
            "select count(*), CONTESTANTS.contestant_no",
            "select count(*), t1.c3"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "CONTESTANTS",
        "table_candidates": [
            "CONTESTANTS",
            "CONTESTANTS VOTES"
        ],
        "align_scores": [
            0.9866247177124023,
            0.006373102776706219,
            0.0005378943169489503,
            0.0017153199296444654,
            0.00034594297176226974,
            0.0013641930418089032,
            0.00033678917679935694,
            0.0004536062479019165
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the create dates, states, and phone numbers of the votes that were for the contestant named 'Tabatha Gehling'?",
        "gold_select": "select VOTES.created, VOTES.state, VOTES.ph",
        "select_candidates": [
            "select VOTES.created, VOTES.state, VOTES.ph",
            "select VOTES.created, VOTES.state, VOTES.ph",
            "select VOTES.created, VOTES.state, VOTES.ph",
            "select VOTES.created, t2.c5, VOTES.ph"
        ],
        "select_labels": [
            1.0,
            1.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "CONTESTANTS VOTES",
        "table_candidates": [
            "CONTESTANTS VOTES"
        ],
        "align_scores": [
            0.0021066695917397738,
            0.00013014147407375276,
            0.0021066695917397738,
            0.00013014147407375276,
            0.0021066695917397738,
            0.00013014147407375276,
            0.0006650086725130677,
            8.075874211499467e-05
        ],
        "align_select": "select VOTES.created, VOTES.state, VOTES.ph",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List the area codes in which voters voted both for the contestant 'Tabatha Gehling' and the contestant 'Kelly Clauss'.",
        "gold_select": "select AREA_CODE_STATE.area_code",
        "select_candidates": [
            "select AREA_CODE_STATE.area_code",
            "select VOTES.state",
            "select VOTES.vote_id",
            "select AREA_CODE_STATE.state"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "AREA_CODE_STATE CONTESTANTS VOTES",
        "table_candidates": [
            "AREA_CODE_STATE CONTESTANTS VOTES",
            "CONTESTANTS VOTES"
        ],
        "align_scores": [
            0.973541259765625,
            0.973541259765625,
            0.47783374786376953,
            0.47783374786376953,
            0.048684168606996536,
            0.048684168606996536,
            0.029015041887760162,
            0.029015041887760162
        ],
        "align_select": "select AREA_CODE_STATE.area_code",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "Return the names of the contestants whose names contain the substring 'Al'.",
        "gold_select": "select CONTESTANTS.name",
        "select_candidates": [
            "select CONTESTANTS.name",
            "select CONTESTANTS.name, AREA_CODE_STATE.state",
            "select CONTESTANTS.name, CONTESTANTS.contestant_no",
            "select distinct CONTESTANTS.name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "CONTESTANTS",
        "table_candidates": [
            "AREA_CODE_STATE CONTESTANTS"
        ],
        "align_scores": [
            0.9963066577911377,
            8.65929905558005e-05,
            0.0001299463037867099,
            6.770113395759836e-05,
            0.0001464966480853036,
            6.735751230735332e-05,
            0.021545659750699997,
            7.35186695237644e-05
        ],
        "align_select": "select CONTESTANTS.name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List the contestant numbers and names, ordered by contestant name descending.",
        "gold_select": "select CONTESTANTS.contestant_no, CONTESTANTS.contestant_name",
        "select_candidates": [
            "select CONTESTANTS.contestant_no, CONTESTANTS.contestant_name",
            "select CONTESTANTS.contestant_no, CONTESTANTS.contestant_name, t1.c2",
            "select CONTESTANTS.contestant_no, CONTESTANTS.contestant_name, t1.c3",
            "select CONTESTANTS.contestant_name, CONTESTANTS.contestant_no"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "CONTESTANTS",
        "table_candidates": [
            "CONTESTANTS"
        ],
        "align_scores": [
            0.9952107071876526,
            0.9952107071876526,
            0.00020982288697268814,
            0.00020982288697268814,
            0.00017570520867593586,
            0.00017570520867593586,
            0.9955562949180603,
            0.9955562949180603
        ],
        "align_select": "select CONTESTANTS.contestant_no, CONTESTANTS.contestant_name",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "List the vote ids, phone numbers and states of all votes.",
        "gold_select": "select VOTES.vote_id, VOTES.ph, VOTES.st",
        "select_candidates": [
            "select VOTES.vote_id, VOTES.ph, VOTES.st",
            "select VOTES.vote_id, VOTES.ph, VOTES.st",
            "select VOTES.vote_id, VOTES.ph.c1, VOTES.st",
            "select VOTES.vote_id, VOTES.ph, VOTES.st."
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "VOTES",
        "table_candidates": [
            "VOTES",
            "AREA_CODE_STATE VOTES"
        ],
        "align_scores": [
            0.995459258556366,
            0.00016811233945190907,
            0.995459258556366,
            0.00016811233945190907,
            0.0010968403657898307,
            9.943839540937915e-05,
            0.34841597080230713,
            0.0001780645688995719
        ],
        "align_select": "select VOTES.vote_id, VOTES.ph, VOTES.st",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What is last date created of votes from the state 'CA'?",
        "gold_select": "select max(VOTES.created)",
        "select_candidates": [
            "select max(VOTES.created)",
            "select VOTES.created",
            "select min(VOTES.created)",
            "select lat(VOTES.created)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "VOTES",
        "table_candidates": [
            "AREA_CODE_STATE VOTES",
            "AREA_CODE_STATE CONTESTANTS VOTES",
            "CONTESTANTS VOTES"
        ],
        "align_scores": [
            0.9918715953826904,
            0.00016634937492199242,
            0.9841299057006836,
            0.9965245127677917,
            0.01297277957201004,
            0.00012248416896909475,
            0.0017281248001381755,
            0.00027272399165667593
        ],
        "align_select": "select max(VOTES.created)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the distinct states and create time of all votes?",
        "gold_select": "select distinct VOTES.st, VOTES.created",
        "select_candidates": [
            "select distinct VOTES.st, VOTES.created",
            "select distinct AREA_CODE_STATE.state, VOTES.created",
            "select distinct AREA_CODE_STATE.state, VOTES.st, VOTES.created",
            "select distinct VOTES.ph, VOTES.created"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "VOTES",
        "table_candidates": [
            "VOTES",
            "AREA_CODE_STATE VOTES"
        ],
        "align_scores": [
            0.9852511882781982,
            9.382048301631585e-05,
            0.992990255355835,
            0.00010894853039644659,
            0.0006522813928313553,
            7.820620521670207e-05,
            0.0031139913480728865,
            9.63185666478239e-05
        ],
        "align_select": "select distinct VOTES.st, VOTES.created",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What are the contestant numbers and names of the contestants who had at least two votes?",
        "gold_select": "select CONTESTANTS.contestant_no, CONTESTANTS.contestant_name",
        "select_candidates": [
            "select CONTESTANTS.contestant_no, CONTESTANTS.contestant_name",
            "select VOTES.contestant_no, CONTESTANTS.contestant_name",
            "select VOTES.st, CONTESTANTS.contestant_no, CONTESTANTS.contestant_name",
            "select CONTESTANTS.contestant_no, CONTESTANTS.contestant_name, VOTES.contestant_no"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "CONTESTANTS VOTES",
        "table_candidates": [
            "CONTESTANTS VOTES"
        ],
        "align_scores": [
            0.616451621055603,
            7.980775262694806e-05,
            0.006701285019516945,
            8.17135805846192e-05,
            0.000345140986610204,
            6.09952985541895e-05,
            0.00030409678583964705,
            7.843564526410773e-05
        ],
        "align_select": "select CONTESTANTS.contestant_no, CONTESTANTS.contestant_name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Of all the contestants who got voted, what is the contestant number and name of the contestant who got least votes?",
        "gold_select": "select CONTESTANTS.contestant_no, CONTESTANTS.contestant_name",
        "select_candidates": [
            "select CONTESTANTS.contestant_no, CONTESTANTS.contestant_name",
            "select VOTES.contestant_no, CONTESTANTS.contestant_name",
            "select CONTESTANTS.contestant_name, CONTESTANTS.contestant_no",
            "select t1.c2, CONTESTANTS.contestant_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "CONTESTANTS VOTES",
        "table_candidates": [
            "CONTESTANTS VOTES"
        ],
        "align_scores": [
            0.9320648908615112,
            0.8731885552406311,
            0.036308951675891876,
            0.00873572938144207,
            0.9502480030059814,
            0.9171060919761658,
            0.0005533347721211612,
            0.0005015470669604838
        ],
        "align_select": "select CONTESTANTS.contestant_no, CONTESTANTS.contestant_name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What are the number of votes from state 'NY' or 'CA'?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), AREA_CODE_STATE.state",
            "select count(*), AREA_CODE_STATE.state, VOTES.st",
            "select count(*), AREA_CODE_STATE.state (Vote_VOTES.vote_id)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "VOTES",
        "table_candidates": [
            "AREA_CODE_STATE VOTES",
            "AREA_CODE_STATE CONTESTANTS VOTES"
        ],
        "align_scores": [
            0.9954835176467896,
            0.00014708536036778241,
            0.00023139874974731356,
            0.007322965655475855,
            0.0001573501358507201,
            0.00013537560880649835,
            0.00017889092850964516,
            0.00012430439528543502
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many contestants did not get voted?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), CONTESTANTS.contestant_name",
            "select count(*), CONTESTANTS.contestant_no",
            "select count(*), t1.c3"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "CONTESTANTS",
        "table_candidates": [
            "CONTESTANTS",
            "CONTESTANTS VOTES"
        ],
        "align_scores": [
            0.9866247177124023,
            0.006373102776706219,
            0.0003456404956523329,
            0.0026133484207093716,
            0.00034594297176226974,
            0.0013641930418089032,
            0.00033678917679935694,
            0.0004536062479019165
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the area code in which the most voters voted?",
        "gold_select": "select AREA_CODE_STATE.area_code",
        "select_candidates": [
            "select AREA_CODE_STATE.area_code",
            "select VOTES.st",
            "select AREA_CODE_STATE.area_code, VOTES.st",
            "select AREA_CODE_STATE.area_code, AREA_CODE_STATE.state"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "AREA_CODE_STATE VOTES",
        "table_candidates": [
            "AREA_CODE_STATE VOTES",
            "CONTESTANTS VOTES",
            "VOTES"
        ],
        "align_scores": [
            0.8310642242431641,
            8.289049583254382e-05,
            0.0169201772660017,
            6.288103759288788e-05,
            0.001132381847128272,
            6.248783756745979e-05,
            0.0002512428618501872,
            5.731414785259403e-05
        ],
        "align_select": "select AREA_CODE_STATE.area_code",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What are the create dates, states, and phone numbers of the votes that were for the contestant named 'Tabatha Gehling'?",
        "gold_select": "select VOTES.created, VOTES.st, VOTES.ph",
        "select_candidates": [
            "select VOTES.created, VOTES.st, VOTES.ph",
            "select VOTES.created, VOTES.st, VOTES.ph",
            "select VOTES.created, VOTES.ph, VOTES.st",
            "select VOTES.st, VOTES.contestant_no, VOTES.ph"
        ],
        "select_labels": [
            1.0,
            1.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "CONTESTANTS VOTES",
        "table_candidates": [
            "CONTESTANTS VOTES"
        ],
        "align_scores": [
            0.012719785794615746,
            0.0001649575133342296,
            0.012719785794615746,
            0.0001649575133342296,
            0.0020919523667544127,
            0.00018893271044362336,
            0.0004958657082170248,
            8.155073737725616e-05
        ],
        "align_select": "select VOTES.created, VOTES.st, VOTES.ph",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List the area codes in which voters voted both for the contestant 'Tabatha Gehling' and the contestant 'Kelly Clauss'.",
        "gold_select": "select AREA_CODE_STATE.area_code",
        "select_candidates": [
            "select AREA_CODE_STATE.area_code",
            "select VOTES.st",
            "select AREA_CODE_STATE.state",
            "select VOTES.ph"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "AREA_CODE_STATE CONTESTANTS VOTES",
        "table_candidates": [
            "AREA_CODE_STATE CONTESTANTS VOTES",
            "CONTESTANTS VOTES"
        ],
        "align_scores": [
            0.973541259765625,
            0.973541259765625,
            0.6711224317550659,
            0.6711224317550659,
            0.029015041887760162,
            0.029015041887760162,
            0.8784852027893066,
            0.8784852027893066
        ],
        "align_select": "select AREA_CODE_STATE.area_code",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "List the contestant numbers and names, ordered by contestant name descending.",
        "gold_select": "select CONTESTANTS.contestant_number, CONTESTANTS.name",
        "select_candidates": [
            "select CONTESTANTS.contestant_number, CONTESTANTS.name",
            "select CONTESTANTS.contestant_number, CONTESTANTS.name, t1.c2",
            "select CONTESTANTS.contestant_number, CONTESTANTS.name, t1.c3",
            "select CONTESTANTS.contestant_number, CONTESTANTS.name,"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "CONTESTANTS",
        "table_candidates": [
            "CONTESTANTS"
        ],
        "align_scores": [
            0.9959521293640137,
            0.9959521293640137,
            0.00014968817413318902,
            0.00014968817413318902,
            0.00011823175009340048,
            0.00011823175009340048,
            0.0008875917992554605,
            0.0008875917992554605
        ],
        "align_select": "select CONTESTANTS.contestant_number, CONTESTANTS.name",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "List the vote ids, phone numbers and states of all votes.",
        "gold_select": "select VOTES.vote_id, VOTES.ph, VOTES.st",
        "select_candidates": [
            "select VOTES.vote_id, VOTES.ph, VOTES.st",
            "select VOTES.vote_id, VOTES.ph, VOTES.st",
            "select VOTES.vote_id, VOTES.ph, AREA_CODE_STATE.state",
            "select VOTES.vote_id, VOTES.ph.c1, VOTES.st"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "VOTES",
        "table_candidates": [
            "VOTES",
            "AREA_CODE_STATE VOTES"
        ],
        "align_scores": [
            0.995459258556366,
            0.00016811233945190907,
            0.995459258556366,
            0.00016811233945190907,
            0.002826867625117302,
            0.0001690842618700117,
            0.0010968403657898307,
            9.943839540937915e-05
        ],
        "align_select": "select VOTES.vote_id, VOTES.ph, VOTES.st",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What is last date created of votes from the state 'CA'?",
        "gold_select": "select max(VOTES.created)",
        "select_candidates": [
            "select max(VOTES.created)",
            "select VOTES.created",
            "select max(VOTES.created), AREA_CODE_STATE.state",
            "select min(VOTES.created)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "VOTES",
        "table_candidates": [
            "AREA_CODE_STATE VOTES",
            "AREA_CODE_STATE CONTESTANTS VOTES",
            "CONTESTANTS VOTES"
        ],
        "align_scores": [
            0.9918715953826904,
            0.00016634937492199242,
            0.9841299057006836,
            0.9965245127677917,
            0.00014549696061294526,
            9.361057163914666e-05,
            0.01297277957201004,
            0.00012248416896909475
        ],
        "align_select": "select max(VOTES.created)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of the contestants whose names are not 'Jessie Alloway'",
        "gold_select": "select CONTESTANTS.name",
        "select_candidates": [
            "select CONTESTANTS.name",
            "select CONTESTANTS.name, t1.c2",
            "select CONTESTANTS.name, CONTESTANTS.contestant_number",
            "select CONTESTANTS.name, t1.c3"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "CONTESTANTS",
        "table_candidates": [
            "CONTESTANTS"
        ],
        "align_scores": [
            0.9935238361358643,
            0.0007692669751122594,
            0.00029322155751287937,
            9.892608068184927e-05,
            0.00018209224799647927,
            7.880406337790191e-05,
            0.0003465379122644663,
            0.00010007908713305369
        ],
        "align_select": "select CONTESTANTS.name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the distinct states and create time of all votes?",
        "gold_select": "select distinct VOTES.st, VOTES.created",
        "select_candidates": [
            "select distinct VOTES.st, VOTES.created",
            "select distinct AREA_CODE_STATE.state, VOTES.created",
            "select distinct AREA_CODE_STATE.state, VOTES.st, VOTES.created",
            "select distinct VOTES.ph, VOTES.created"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "VOTES",
        "table_candidates": [
            "VOTES",
            "AREA_CODE_STATE VOTES"
        ],
        "align_scores": [
            0.9852511882781982,
            0.00010828989616129547,
            0.992990255355835,
            9.88089814200066e-05,
            0.0006522813928313553,
            7.440345507347956e-05,
            0.0031139913480728865,
            0.00010515175381442532
        ],
        "align_select": "select distinct VOTES.st, VOTES.created",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What are the contestant numbers and names of the contestants who had at least two votes?",
        "gold_select": "select CONTESTANTS.contestant_number, CONTESTANTS.name",
        "select_candidates": [
            "select CONTESTANTS.contestant_number, CONTESTANTS.name",
            "select VOTES.contestant_number, CONTESTANTS.name",
            "select VOTES.st, CONTESTANTS.contestant_number, CONTESTANTS.name",
            "select CONTESTANTS.contestant_number, CONTESTANTS.name, t1.c2"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "CONTESTANTS VOTES",
        "table_candidates": [
            "CONTESTANTS VOTES"
        ],
        "align_scores": [
            0.5729188323020935,
            7.94723819126375e-05,
            0.023673713207244873,
            8.024195994948968e-05,
            0.00044225112651474774,
            6.303167174337432e-05,
            0.0010476764291524887,
            6.751893670298159e-05
        ],
        "align_select": "select CONTESTANTS.contestant_number, CONTESTANTS.name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Of all the contestants who got voted, what is the contestant number and name of the contestant who got least votes?",
        "gold_select": "select CONTESTANTS.contestant_number, CONTESTANTS.name",
        "select_candidates": [
            "select CONTESTANTS.contestant_number, CONTESTANTS.name",
            "select VOTES.contestant_number, CONTESTANTS.name",
            "select CONTESTANTS.name, CONTESTANTS.contestant_number",
            "select t1.c2, CONTESTANTS.name"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "CONTESTANTS VOTES",
        "table_candidates": [
            "CONTESTANTS VOTES"
        ],
        "align_scores": [
            0.94817054271698,
            0.910353422164917,
            0.22357825934886932,
            0.018442247062921524,
            0.9734852313995361,
            0.9547827839851379,
            0.00068286171881482,
            0.0005735280574299395
        ],
        "align_select": "select CONTESTANTS.contestant_number, CONTESTANTS.name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What are the number of votes from state 'NY' or 'CA'?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), AREA_CODE_STATE.state",
            "select count(*), AREA_CODE_STATE.state, VOTES.st",
            "select count(*), AREA_CODE_STATE.state"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "VOTES",
        "table_candidates": [
            "AREA_CODE_STATE VOTES",
            "AREA_CODE_STATE CONTESTANTS VOTES"
        ],
        "align_scores": [
            0.9954835176467896,
            0.00014708536036778241,
            0.00023139874974731356,
            0.007322965655475855,
            0.0001573501358507201,
            0.00013537560880649835,
            0.00023139874974731356,
            0.007322965655475855
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the area code in which the most voters voted?",
        "gold_select": "select AREA_CODE_STATE.area_code",
        "select_candidates": [
            "select AREA_CODE_STATE.area_code",
            "select VOTES.st",
            "select AREA_CODE_STATE.area_code, VOTES.st",
            "select AREA_CODE_STATE.area_code, AREA_CODE_STATE.state"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "AREA_CODE_STATE VOTES",
        "table_candidates": [
            "AREA_CODE_STATE VOTES",
            "CONTESTANTS VOTES",
            "VOTES"
        ],
        "align_scores": [
            0.8310642242431641,
            8.289049583254382e-05,
            0.0169201772660017,
            6.288103759288788e-05,
            0.001132381847128272,
            6.248783756745979e-05,
            0.0002512428618501872,
            5.731414785259403e-05
        ],
        "align_select": "select AREA_CODE_STATE.area_code",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What are the create dates, states, and phone numbers of the votes that were for the contestant named 'Tabatha Gehling'?",
        "gold_select": "select VOTES.created, VOTES.st, VOTES.ph",
        "select_candidates": [
            "select VOTES.created, VOTES.st, VOTES.ph",
            "select VOTES.created, VOTES.st, VOTES.ph",
            "select VOTES.created, VOTES.ph, VOTES.st",
            "select VOTES.created, VOTES.contestant_number, VOTES.ph"
        ],
        "select_labels": [
            1.0,
            1.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "CONTESTANTS VOTES",
        "table_candidates": [
            "CONTESTANTS VOTES"
        ],
        "align_scores": [
            0.012719785794615746,
            0.0001649575133342296,
            0.012719785794615746,
            0.0001649575133342296,
            0.0020919523667544127,
            0.00018893271044362336,
            0.0008373316959477961,
            0.00013116556510794908
        ],
        "align_select": "select VOTES.created, VOTES.st, VOTES.ph",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List the area codes in which voters voted both for the contestant 'Tabatha Gehling' and the contestant 'Kelly Clauss'.",
        "gold_select": "select AREA_CODE_STATE.area_code",
        "select_candidates": [
            "select VOTES.st",
            "select AREA_CODE_STATE.area_code",
            "select AREA_CODE_STATE.state",
            "select VOTES.ph"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "AREA_CODE_STATE CONTESTANTS VOTES",
        "table_candidates": [
            "AREA_CODE_STATE CONTESTANTS VOTES",
            "CONTESTANTS VOTES"
        ],
        "align_scores": [
            0.6711224317550659,
            0.6711224317550659,
            0.973541259765625,
            0.973541259765625,
            0.029015041887760162,
            0.029015041887760162,
            0.8784852027893066,
            0.8784852027893066
        ],
        "align_select": "select AREA_CODE_STATE.area_code",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "Return the names of the contestants whose names contain the substring 'Al'.",
        "gold_select": "select CONTESTANTS.name",
        "select_candidates": [
            "select CONTESTANTS.name",
            "select CONTESTANTS.name, AREA_CODE_STATE.state",
            "select distinct CONTESTANTS.name",
            "select CONTESTANTS.name, CONTESTANTS.contestant_number"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "CONTESTANTS",
        "table_candidates": [
            "AREA_CODE_STATE CONTESTANTS",
            "VOTES CONTESTANTS"
        ],
        "align_scores": [
            0.9963066577911377,
            8.65929905558005e-05,
            0.0001299463037867099,
            6.770113395759836e-05,
            0.021545659750699997,
            7.35186695237644e-05,
            0.00013017970195505768,
            6.620463682338595e-05
        ],
        "align_select": "select CONTESTANTS.name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List the contestant numbers and names, ordered by contestant name descending.",
        "gold_select": "select CONTESTANTS.contestant_no, CONTESTANTS.name",
        "select_candidates": [
            "select CONTESTANTS.contestant_no, CONTESTANTS.name",
            "select CONTESTANTS.name, CONTESTANTS.contestant_no",
            "select VOTES.contestant_no, CONTESTANTS.name",
            "select CONTESTANTS.contestant_no, CONTESTANTS.name,"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "CONTESTANTS",
        "table_candidates": [
            "CONTESTANTS"
        ],
        "align_scores": [
            0.9958587288856506,
            0.9958587288856506,
            0.9958354234695435,
            0.9958354234695435,
            0.06315937638282776,
            0.06315937638282776,
            0.0008822662057355046,
            0.0008822662057355046
        ],
        "align_select": "select CONTESTANTS.contestant_no, CONTESTANTS.name",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "List the vote ids, phone numbers and states of all votes.",
        "gold_select": "select VOTES.vote_id, VOTES.ph, VOTES.st",
        "select_candidates": [
            "select VOTES.vote_id, VOTES.ph, VOTES.st",
            "select VOTES.vote_id, VOTES.ph, VOTES.st",
            "select VOTES.vote_id, VOTES.ph.c1, VOTES.st",
            "select VOTES.vote_id, VOTES.ph, VOTES.st."
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "VOTES",
        "table_candidates": [
            "VOTES",
            "AREA_CODE_STATE VOTES"
        ],
        "align_scores": [
            0.995459258556366,
            0.00016811233945190907,
            0.995459258556366,
            0.00016811233945190907,
            0.0010968403657898307,
            9.943839540937915e-05,
            0.34841597080230713,
            0.0001780645688995719
        ],
        "align_select": "select VOTES.vote_id, VOTES.ph, VOTES.st",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What is last date created of votes from the state 'CA'?",
        "gold_select": "select max(VOTES.created)",
        "select_candidates": [
            "select max(VOTES.created)",
            "select VOTES.created",
            "select min(VOTES.created)",
            "select max(VOTES.created), AREA_CODE_STATE.state"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "VOTES",
        "table_candidates": [
            "AREA_CODE_STATE VOTES",
            "AREA_CODE_STATE CONTESTANTS VOTES",
            "CONTESTANTS VOTES"
        ],
        "align_scores": [
            0.9918715953826904,
            0.00016634937492199242,
            0.9841299057006836,
            0.9965245127677917,
            0.01297277957201004,
            0.00012248416896909475,
            0.00014549696061294526,
            9.361057163914666e-05
        ],
        "align_select": "select max(VOTES.created)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of the contestants whose names are not 'Jessie Alloway'",
        "gold_select": "select CONTESTANTS.name",
        "select_candidates": [
            "select CONTESTANTS.name",
            "select CONTESTANTS.name, CONTESTANTS.contestant_no",
            "select CONTESTANTS.name, t1.c2",
            "select CONTESTANTS.name, t1.c3"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "CONTESTANTS",
        "table_candidates": [
            "CONTESTANTS"
        ],
        "align_scores": [
            0.9935238361358643,
            0.0005766196409240365,
            0.0001921358925756067,
            9.526046051178128e-05,
            0.00029322155751287937,
            0.00010354332334827632,
            0.0003465379122644663,
            0.00012406648602336645
        ],
        "align_select": "select CONTESTANTS.name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the distinct states and create time of all votes?",
        "gold_select": "select distinct VOTES.st, VOTES.created",
        "select_candidates": [
            "select distinct VOTES.st, VOTES.created",
            "select distinct AREA_CODE_STATE.state, VOTES.created",
            "select distinct AREA_CODE_STATE.state, VOTES.st, VOTES.created",
            "select distinct VOTES.ph, VOTES.created"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "VOTES",
        "table_candidates": [
            "VOTES",
            "AREA_CODE_STATE VOTES"
        ],
        "align_scores": [
            0.9852511882781982,
            9.382048301631585e-05,
            0.992990255355835,
            0.00010894853039644659,
            0.0006522813928313553,
            7.820620521670207e-05,
            0.0031139913480728865,
            9.63185666478239e-05
        ],
        "align_select": "select distinct VOTES.st, VOTES.created",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What are the contestant numbers and names of the contestants who had at least two votes?",
        "gold_select": "select CONTESTANTS.contestant_no, CONTESTANTS.name",
        "select_candidates": [
            "select CONTESTANTS.contestant_no, CONTESTANTS.name",
            "select VOTES.contestant_no, CONTESTANTS.name",
            "select VOTES.st, CONTESTANTS.contestant_no, CONTESTANTS.name",
            "select CONTESTANTS.name, CONTESTANTS.contestant_no"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "CONTESTANTS VOTES",
        "table_candidates": [
            "CONTESTANTS VOTES"
        ],
        "align_scores": [
            0.5359533429145813,
            8.300297486130148e-05,
            0.010813356377184391,
            8.543443982489407e-05,
            0.00040850474033504725,
            6.418560224119574e-05,
            0.6494377255439758,
            8.679379243403673e-05
        ],
        "align_select": "select CONTESTANTS.contestant_no, CONTESTANTS.name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Of all the contestants who got voted, what is the contestant number and name of the contestant who got least votes?",
        "gold_select": "select CONTESTANTS.contestant_no, CONTESTANTS.name",
        "select_candidates": [
            "select CONTESTANTS.contestant_no, CONTESTANTS.name",
            "select VOTES.contestant_no, CONTESTANTS.name",
            "select CONTESTANTS.name, CONTESTANTS.contestant_no",
            "select t1.c2, CONTESTANTS.name"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "CONTESTANTS VOTES",
        "table_candidates": [
            "CONTESTANTS VOTES"
        ],
        "align_scores": [
            0.9249629974365234,
            0.8743712902069092,
            0.09360048174858093,
            0.01727410778403282,
            0.9648764729499817,
            0.9412042498588562,
            0.00068286171881482,
            0.0005735280574299395
        ],
        "align_select": "select CONTESTANTS.contestant_no, CONTESTANTS.name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What are the number of votes from state 'NY' or 'CA'?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), AREA_CODE_STATE.state",
            "select count(*), AREA_CODE_STATE.state, VOTES.st",
            "select count(*), AREA_CODE_STATE.state (Vote_VOTES.vote_id)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "VOTES",
        "table_candidates": [
            "AREA_CODE_STATE VOTES",
            "AREA_CODE_STATE CONTESTANTS VOTES"
        ],
        "align_scores": [
            0.9954835176467896,
            0.00014708536036778241,
            0.00023139874974731356,
            0.007322965655475855,
            0.0001573501358507201,
            0.00013537560880649835,
            0.00017889092850964516,
            0.00012430439528543502
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many contestants did not get voted?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), CONTESTANTS.name",
            "select count(*), CONTESTANTS.contestant_no",
            "select count(*), t1.c3"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "CONTESTANTS",
        "table_candidates": [
            "CONTESTANTS",
            "CONTESTANTS VOTES"
        ],
        "align_scores": [
            0.9866247177124023,
            0.006373102776706219,
            0.0005378943169489503,
            0.0017153199296444654,
            0.00034594297176226974,
            0.0013641930418089032,
            0.00033678917679935694,
            0.0004536062479019165
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the area code in which the most voters voted?",
        "gold_select": "select AREA_CODE_STATE.area_code",
        "select_candidates": [
            "select AREA_CODE_STATE.area_code",
            "select VOTES.st",
            "select AREA_CODE_STATE.area_code, VOTES.st",
            "select AREA_CODE_STATE.area_code, AREA_CODE_STATE.state"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "AREA_CODE_STATE VOTES",
        "table_candidates": [
            "AREA_CODE_STATE VOTES",
            "CONTESTANTS VOTES",
            "VOTES"
        ],
        "align_scores": [
            0.8310642242431641,
            8.289049583254382e-05,
            0.0169201772660017,
            6.288103759288788e-05,
            0.001132381847128272,
            6.248783756745979e-05,
            0.0002512428618501872,
            5.731414785259403e-05
        ],
        "align_select": "select AREA_CODE_STATE.area_code",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What are the create dates, states, and phone numbers of the votes that were for the contestant named 'Tabatha Gehling'?",
        "gold_select": "select VOTES.created, VOTES.st, VOTES.ph",
        "select_candidates": [
            "select VOTES.created, VOTES.st, VOTES.ph",
            "select VOTES.created, VOTES.st, VOTES.ph",
            "select VOTES.created, VOTES.ph, VOTES.st",
            "select VOTES.st, VOTES.contestant_no, VOTES.ph"
        ],
        "select_labels": [
            1.0,
            1.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "CONTESTANTS VOTES",
        "table_candidates": [
            "CONTESTANTS VOTES"
        ],
        "align_scores": [
            0.012719785794615746,
            0.0001649575133342296,
            0.012719785794615746,
            0.0001649575133342296,
            0.0020919523667544127,
            0.00018893271044362336,
            0.0004958657082170248,
            8.155073737725616e-05
        ],
        "align_select": "select VOTES.created, VOTES.st, VOTES.ph",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List the area codes in which voters voted both for the contestant 'Tabatha Gehling' and the contestant 'Kelly Clauss'.",
        "gold_select": "select AREA_CODE_STATE.area_code",
        "select_candidates": [
            "select AREA_CODE_STATE.area_code",
            "select VOTES.st",
            "select AREA_CODE_STATE.state",
            "select t0.c2"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "AREA_CODE_STATE CONTESTANTS VOTES",
        "table_candidates": [
            "AREA_CODE_STATE CONTESTANTS VOTES",
            "CONTESTANTS VOTES"
        ],
        "align_scores": [
            0.973541259765625,
            0.973541259765625,
            0.6711224317550659,
            0.6711224317550659,
            0.029015041887760162,
            0.029015041887760162,
            0.00115015369374305,
            0.00115015369374305
        ],
        "align_select": "select AREA_CODE_STATE.area_code",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "Return the names of the contestants whose names contain the substring 'Al'.",
        "gold_select": "select CONTESTANTS.name",
        "select_candidates": [
            "select CONTESTANTS.name",
            "select CONTESTANTS.name, AREA_CODE_STATE.state",
            "select CONTESTANTS.name, CONTESTANTS.contestant_no",
            "select distinct CONTESTANTS.name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "CONTESTANTS",
        "table_candidates": [
            "AREA_CODE_STATE CONTESTANTS"
        ],
        "align_scores": [
            0.9963066577911377,
            8.65929905558005e-05,
            0.0001299463037867099,
            6.770113395759836e-05,
            0.0001464966480853036,
            6.735751230735332e-05,
            0.021545659750699997,
            7.35186695237644e-05
        ],
        "align_select": "select CONTESTANTS.name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List the vote ids, phone numbers and states of all votes.",
        "gold_select": "select VOTES.vote_id, VOTES.phone_number, VOTES.st",
        "select_candidates": [
            "select VOTES.vote_id, VOTES.phone_number, VOTES.st",
            "select VOTES.vote_id, VOTES.phone_number, AREA_CODE_STATE.state",
            "select VOTES.vote_id, VOTES.phone_number, VOTES.st",
            "select VOTES.vote_id, VOTES.phone_number.c1, VOTES.st"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "VOTES",
        "table_candidates": [
            "VOTES",
            "AREA_CODE_STATE VOTES"
        ],
        "align_scores": [
            0.9919809103012085,
            0.02314613200724125,
            0.015643052756786346,
            0.0012581647606566548,
            0.9919809103012085,
            0.02314613200724125,
            0.0007211922784335911,
            0.00020323038916103542
        ],
        "align_select": "select VOTES.vote_id, VOTES.phone_number, VOTES.st",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What is last date created of votes from the state 'CA'?",
        "gold_select": "select max(VOTES.created)",
        "select_candidates": [
            "select max(VOTES.created)",
            "select VOTES.created",
            "select min(VOTES.created)",
            "select max(VOTES.created), AREA_CODE_STATE.state"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "VOTES",
        "table_candidates": [
            "AREA_CODE_STATE VOTES",
            "AREA_CODE_STATE CONTESTANTS VOTES",
            "CONTESTANTS VOTES"
        ],
        "align_scores": [
            0.9918715953826904,
            0.00016634937492199242,
            0.9841299057006836,
            0.9965245127677917,
            0.01297277957201004,
            0.00012248416896909475,
            0.00014549696061294526,
            9.361057163914666e-05
        ],
        "align_select": "select max(VOTES.created)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the distinct states and create time of all votes?",
        "gold_select": "select distinct VOTES.st, VOTES.created",
        "select_candidates": [
            "select distinct VOTES.st, VOTES.created",
            "select distinct AREA_CODE_STATE.state, VOTES.created",
            "select distinct AREA_CODE_STATE.state, VOTES.st, VOTES.created",
            "select distinct VOTES.st, VOTES.contestant_no, VOTES.created"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "VOTES",
        "table_candidates": [
            "VOTES",
            "AREA_CODE_STATE VOTES"
        ],
        "align_scores": [
            0.9852511882781982,
            9.382048301631585e-05,
            0.992990255355835,
            0.00010894853039644659,
            0.0006522813928313553,
            7.820620521670207e-05,
            0.00020706412033177912,
            8.333694859175012e-05
        ],
        "align_select": "select distinct VOTES.st, VOTES.created",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What are the contestant numbers and names of the contestants who had at least two votes?",
        "gold_select": "select CONTESTANTS.contestant_number, CONTESTANTS.contestant_name",
        "select_candidates": [
            "select CONTESTANTS.contestant_number, CONTESTANTS.contestant_name",
            "select VOTES.contestant_no, CONTESTANTS.contestant_name",
            "select VOTES.st, CONTESTANTS.contestant_number, CONTESTANTS.contestant_name",
            "select CONTESTANTS.contestant_number, CONTESTANTS.contestant_name, VOTES.contestant_no"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "CONTESTANTS VOTES",
        "table_candidates": [
            "CONTESTANTS VOTES"
        ],
        "align_scores": [
            0.6351819038391113,
            7.716914115007967e-05,
            0.006701285019516945,
            8.17135805846192e-05,
            0.0003617606998886913,
            5.993940430926159e-05,
            0.0002707771782297641,
            6.839586421847343e-05
        ],
        "align_select": "select CONTESTANTS.contestant_number, CONTESTANTS.contestant_name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Of all the contestants who got voted, what is the contestant number and name of the contestant who got least votes?",
        "gold_select": "select CONTESTANTS.contestant_number, CONTESTANTS.contestant_name",
        "select_candidates": [
            "select CONTESTANTS.contestant_number, CONTESTANTS.contestant_name",
            "select VOTES.contestant_no, CONTESTANTS.contestant_name",
            "select CONTESTANTS.contestant_name, CONTESTANTS.contestant_number",
            "select t1.c2, CONTESTANTS.contestant_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "CONTESTANTS VOTES",
        "table_candidates": [
            "CONTESTANTS VOTES"
        ],
        "align_scores": [
            0.954288899898529,
            0.9109160900115967,
            0.036308951675891876,
            0.00873572938144207,
            0.9637301564216614,
            0.9346168637275696,
            0.0005533347721211612,
            0.0005015470669604838
        ],
        "align_select": "select CONTESTANTS.contestant_number, CONTESTANTS.contestant_name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What are the number of votes from state 'NY' or 'CA'?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), AREA_CODE_STATE.state",
            "select count(*), AREA_CODE_STATE.state, VOTES.st",
            "select count(*), AREA_CODE_STATE.state"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "VOTES",
        "table_candidates": [
            "AREA_CODE_STATE VOTES",
            "AREA_CODE_STATE CONTESTANTS VOTES"
        ],
        "align_scores": [
            0.9954835176467896,
            0.00014708536036778241,
            0.00023139874974731356,
            0.007322965655475855,
            0.0001573501358507201,
            0.00013537560880649835,
            0.00023139874974731356,
            0.007322965655475855
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many contestants did not get voted?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), CONTESTANTS.contestant_name",
            "select count(*), CONTESTANTS.contestant_number",
            "select count(*), VOTES.contestant_no"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "CONTESTANTS",
        "table_candidates": [
            "CONTESTANTS",
            "CONTESTANTS VOTES"
        ],
        "align_scores": [
            0.9866247177124023,
            0.006373102776706219,
            0.0003456404956523329,
            0.0026133484207093716,
            0.0003023397584911436,
            0.0009028208442032337,
            0.0004851956036873162,
            0.002440315904095769
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the area code in which the most voters voted?",
        "gold_select": "select AREA_CODE_STATE.area_code",
        "select_candidates": [
            "select AREA_CODE_STATE.area_code",
            "select VOTES.st",
            "select AREA_CODE_STATE.area_code, VOTES.st",
            "select AREA_CODE_STATE.area_code, AREA_CODE_STATE.state"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "AREA_CODE_STATE VOTES",
        "table_candidates": [
            "AREA_CODE_STATE VOTES",
            "CONTESTANTS VOTES",
            "VOTES"
        ],
        "align_scores": [
            0.8310642242431641,
            8.289049583254382e-05,
            0.0169201772660017,
            6.288103759288788e-05,
            0.001132381847128272,
            6.248783756745979e-05,
            0.0002512428618501872,
            5.731414785259403e-05
        ],
        "align_select": "select AREA_CODE_STATE.area_code",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What are the create dates, states, and phone numbers of the votes that were for the contestant named 'Tabatha Gehling'?",
        "gold_select": "select VOTES.created, VOTES.st, VOTES.phone_number",
        "select_candidates": [
            "select VOTES.created, VOTES.st, VOTES.phone_number",
            "select VOTES.created, VOTES.phone_number, VOTES.st",
            "select VOTES.created, VOTES.st, VOTES.phone_number",
            "select VOTES.st, VOTES.contestant_no, VOTES.phone_number"
        ],
        "select_labels": [
            1.0,
            1.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "CONTESTANTS VOTES",
        "table_candidates": [
            "CONTESTANTS VOTES"
        ],
        "align_scores": [
            0.9903684854507446,
            0.0001580843236297369,
            0.9921495914459229,
            0.0001872204738901928,
            0.9903684854507446,
            0.0001580843236297369,
            0.0010207949671894312,
            0.00010394853597972542
        ],
        "align_select": "select VOTES.created, VOTES.st, VOTES.phone_number",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List the area codes in which voters voted both for the contestant 'Tabatha Gehling' and the contestant 'Kelly Clauss'.",
        "gold_select": "select AREA_CODE_STATE.area_code",
        "select_candidates": [
            "select VOTES.st",
            "select AREA_CODE_STATE.area_code",
            "select AREA_CODE_STATE.state",
            "select VOTES.st"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "AREA_CODE_STATE CONTESTANTS VOTES",
        "table_candidates": [
            "AREA_CODE_STATE CONTESTANTS VOTES",
            "CONTESTANTS VOTES",
            "VOTES"
        ],
        "align_scores": [
            0.6711224317550659,
            0.0006074256962165236,
            0.973541259765625,
            0.0010980499209836125,
            0.029015041887760162,
            0.0004187427693977952,
            0.6711224317550659,
            0.0006074256962165236
        ],
        "align_select": "select AREA_CODE_STATE.area_code",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "How many countries have a republic as their form of government?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), country.Name",
            "select count(*), country.Code",
            "select count(*), country.Capital"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9920794367790222,
            0.0005000602686777711,
            0.0003605817910283804,
            0.0004520632792264223,
            0.00037354230880737305,
            0.0003294223570264876,
            0.00026638846611604095,
            0.00014387138071469963
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many countries have governments that are republics?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), country.Name",
            "select count(*), country.Code",
            "select count(distinct country.Name)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9934929013252258,
            0.0031622040551155806,
            0.0004803082556463778,
            0.03186676651239395,
            0.0005179056897759438,
            0.009782481007277966,
            0.11480643600225449,
            0.0003444093163125217
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the total surface area of the countries in the Caribbean region?",
        "gold_select": "select sum(country.sa)",
        "select_candidates": [
            "select sum(country.sa)",
            "select sum(country.sa), country.cont",
            "select sum(country.sa), country.Name",
            "select sum(country.popn)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "sqlite_sequence country",
            "country countrylanguage",
            "city country"
        ],
        "align_scores": [
            0.996588945388794,
            0.00013831911201123148,
            0.00013146118726581335,
            7.487092807423323e-05,
            0.00016301983851008117,
            8.563706069253385e-05,
            0.00047002240899018943,
            8.979983249446377e-05
        ],
        "align_select": "select sum(country.sa)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How much surface area do the countires in the Carribean cover together?",
        "gold_select": "select sum(country.sa)",
        "select_candidates": [
            "select sum(country.sa)",
            "select sum(country.popn)",
            "select sum(country.GNP)",
            "select sum(country.cont)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9748411774635315,
            8.301057096105069e-05,
            0.0004776878922712058,
            6.99285592418164e-05,
            0.9505040645599365,
            7.273577648447827e-05,
            0.9268524646759033,
            7.285427273018286e-05
        ],
        "align_select": "select sum(country.sa)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which continent is Anguilla in?",
        "gold_select": "select country.cont",
        "select_candidates": [
            "select country.cont",
            "select country.cont, country.Region",
            "select distinct country.cont",
            "select country.cont, country.sa"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "sqlite_sequence country"
        ],
        "align_scores": [
            0.9953605532646179,
            0.0002787488920148462,
            0.00024847444728948176,
            7.836918666725978e-05,
            0.08713696897029877,
            0.0002773283631540835,
            0.00024021121498662978,
            8.865297422744334e-05
        ],
        "align_select": "select country.cont",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the continent name which Anguilla belongs to?",
        "gold_select": "select country.cont",
        "select_candidates": [
            "select country.cont",
            "select country.cont, country.Name",
            "select country.cont, country.Region",
            "select country.cont, country.sa"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "sqlite_sequence country",
            "city sqlite_sequence country",
            "city country"
        ],
        "align_scores": [
            0.9953398704528809,
            0.00015877830446697772,
            0.00021986363572068512,
            8.184335456462577e-05,
            0.00024732601013965905,
            7.725189789198339e-05,
            0.00022402257309295237,
            8.682211046107113e-05
        ],
        "align_select": "select country.cont",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which region is the city Kabul located in?",
        "gold_select": "select country.Region",
        "select_candidates": [
            "select country.Region",
            "select country.Region, city.cntry_code",
            "select country.Name, city.cntry_code",
            "select country.Name, city.dist"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "city country",
        "table_candidates": [
            "city country",
            "city sqlite_sequence country",
            "city"
        ],
        "align_scores": [
            0.9959432482719421,
            0.00014211413508746773,
            0.00030821049585938454,
            8.240344322985038e-05,
            0.0002164596226066351,
            7.391352119157091e-05,
            0.00018054696556646377,
            6.312791811069474e-05
        ],
        "align_select": "select country.Region",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What region is Kabul in?",
        "gold_select": "select country.Region",
        "select_candidates": [
            "select country.Region",
            "select country.Region, city.cntry_code",
            "select country.Region, city.Name",
            "select country.Name, city.dist"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "city country",
        "table_candidates": [
            "city country",
            "city sqlite_sequence country"
        ],
        "align_scores": [
            0.995927631855011,
            0.00012034205428790301,
            0.0003325528814457357,
            8.295201405417174e-05,
            0.00018699924112297595,
            7.51633633626625e-05,
            0.0002168671926483512,
            6.260682130232453e-05
        ],
        "align_select": "select country.Region",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which language is the most popular in Aruba?",
        "gold_select": "select countrylanguage.lang",
        "select_candidates": [
            "select countrylanguage.lang",
            "select countrylanguage.lang, country.LocalName",
            "select countrylanguage.lang, country.Code",
            "select countrylanguage.lang, country.Capital"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9929865002632141,
            0.9912793040275574,
            0.00038394550210796297,
            0.0005721758352592587,
            0.00034132954897359014,
            0.0003995641600340605,
            0.0003040544979739934,
            0.00024036240938585252
        ],
        "align_select": "select countrylanguage.lang",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT"
    },
    {
        "question": "What language is predominantly spoken in Aruba?",
        "gold_select": "select countrylanguage.lang",
        "select_candidates": [
            "select countrylanguage.lang",
            "select countrylanguage.lang, country.LocalName",
            "select countrylanguage.lang, country.Code",
            "select countrylanguage.lang, country.Capital"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9918223023414612,
            0.008879241533577442,
            0.0004966637934558094,
            0.00026072849868796766,
            0.00039712581201456487,
            0.00022116233594715595,
            0.00019408229854889214,
            0.00012355350190773606
        ],
        "align_select": "select countrylanguage.lang",
        "align_structure": "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What are the population and life expectancies in Brazil?",
        "gold_select": "select country.popn, country.le",
        "select_candidates": [
            "select country.popn, country.le",
            "select country.Code, country.popn, country.le",
            "select country.Code, country.Name, country.popn",
            "select country.Code, country.Name, country.le"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "city country"
        ],
        "align_scores": [
            0.9856101870536804,
            0.00025317809195257723,
            0.00024409779871348292,
            9.716820932226256e-05,
            0.00024312759342137724,
            0.00013867911184206605,
            0.0004308460920583457,
            9.286469867220148e-05
        ],
        "align_select": "select country.popn, country.le",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give me Brazil\u2019s population and life expectancies.",
        "gold_select": "select country.popn, country.le",
        "select_candidates": [
            "select country.popn, country.le",
            "select country.Code, country.popn, country.le",
            "select country.Code, country.Name, country.popn, country.le",
            "select country.Name, country.popn, country.le"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9825577139854431,
            0.00016373877588193864,
            0.00022183118562679738,
            0.00013879063772037625,
            0.00018525471386965364,
            9.953449625754729e-05,
            0.00019608168804552406,
            0.00015005214663688093
        ],
        "align_select": "select country.popn, country.le",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the region and population of Angola?",
        "gold_select": "select country.popn, country.Region",
        "select_candidates": [
            "select country.Region, country.popn",
            "select country.Name, country.Region, country.popn",
            "select country.cont, country.Region, country.popn",
            "select country.Region, country.popn, country.Capital"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "city country",
            "sqlite_sequence country"
        ],
        "align_scores": [
            0.991285502910614,
            0.00044126700959168375,
            0.0002360421494813636,
            7.821799226803705e-05,
            0.00030571743263863027,
            8.172090747393668e-05,
            0.00027531402884051204,
            7.573564653284848e-05
        ],
        "align_select": "select country.Region, country.popn",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What region does Angola belong to and what is its population?",
        "gold_select": "select country.popn, country.Region",
        "select_candidates": [
            "select country.Region, country.popn",
            "select country.Name, country.Region, country.popn",
            "select country.cont, country.Region, country.popn",
            "select country.Region, count(*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "city country",
            "sqlite_sequence country"
        ],
        "align_scores": [
            0.9900133609771729,
            0.00010969294817186892,
            0.0001979296503122896,
            8.574541425332427e-05,
            0.00015980903117451817,
            8.243400952778757e-05,
            0.9350617527961731,
            0.00010409156675450504
        ],
        "align_select": "select country.Region, country.popn",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the average expected life expectancy for countries in the region of Central Africa?",
        "gold_select": "select avg(country.le)",
        "select_candidates": [
            "select avg(country.le)",
            "select an avg(country.le)",
            "select  avg(country.le)",
            "select avg(country.GNP)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "country countrylanguage",
            "sqlite_sequence country",
            "city country"
        ],
        "align_scores": [
            0.995487630367279,
            0.0001513862662250176,
            0.0004294531827326864,
            0.00013377581490203738,
            0.995487630367279,
            0.0001513862662250176,
            0.9939670562744141,
            0.00016796539421193302
        ],
        "align_select": "select avg(country.le)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How long is the people\u2019s average life expectancy in Central Africa?",
        "gold_select": "select avg(country.le)",
        "select_candidates": [
            "select avg(country.le)",
            "select avg(country.popn)",
            "select avg(country.GNP)",
            "select an avg(country.le)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "city country",
            "sqlite_sequence country",
            "country countrylanguage"
        ],
        "align_scores": [
            0.9960261583328247,
            8.393054304178804e-05,
            0.03311219438910484,
            8.412686293013394e-05,
            0.9939297437667847,
            8.88162903720513e-05,
            0.0004488907870836556,
            0.00010797395225381479
        ],
        "align_select": "select avg(country.le)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the name of country that has the shortest life expectancy in Asia?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.cont",
            "select country.Name, country.Region",
            "select country.Name, country.popn"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "country countrylanguage"
        ],
        "align_scores": [
            0.9908233880996704,
            0.0002901099796872586,
            0.0006038380088284612,
            9.93670109892264e-05,
            0.00024537419085390866,
            0.00012181257625343278,
            0.00023262361355591565,
            9.545404464006424e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT"
    },
    {
        "question": "Give the name of the country in Asia with the lowest life expectancy.",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.cont",
            "select country.Name, country.Region",
            "select country.Name, country.popn"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "country countrylanguage"
        ],
        "align_scores": [
            0.9912881255149841,
            0.00024138441949617118,
            0.0005083321593701839,
            8.476641232846305e-05,
            0.00021274448954500258,
            9.946220961865038e-05,
            0.00020445408881641924,
            8.462733239866793e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT"
    },
    {
        "question": "What is the total population and maximum GNP in Asia?",
        "gold_select": "select sum(country.popn), max(country.GNP)",
        "select_candidates": [
            "select sum(country.popn), max(country.GNP)",
            "select max(country.GNP), sum(country.popn)",
            "select sum(country.IndepYear), max(country.GNP)",
            "select country.popn, max(country.GNP)"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9949496984481812,
            0.00011074626672780141,
            0.9939489364624023,
            9.802647400647402e-05,
            0.00022871831606607884,
            9.307915752287954e-05,
            0.445158451795578,
            0.00015176318993326277
        ],
        "align_select": "select sum(country.popn), max(country.GNP)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many people live in Asia, and what is the largest GNP among them?",
        "gold_select": "select sum(country.popn), max(country.GNP)",
        "select_candidates": [
            "select country.popn, country.GNP",
            "select country.Code, country.popn, country.GNP",
            "select country.Name, country.GNP",
            "select country.Name, country.popn"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.7356204390525818,
            0.17258930206298828,
            0.00023041179520078003,
            0.00028385251061990857,
            0.0008552867802791297,
            0.02990031987428665,
            0.0003688603173941374,
            0.0012021763250231743
        ],
        "align_select": "select country.popn, country.GNP",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT"
    },
    {
        "question": "What is the average life expectancy in African countries that are republics?",
        "gold_select": "select avg(country.le)",
        "select_candidates": [
            "select avg(country.le)",
            "select avg(country.GNP)",
            "select avg(country.popn)",
            "select an avg(country.le)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "country countrylanguage",
            "sqlite_sequence country"
        ],
        "align_scores": [
            0.9965831637382507,
            0.00018019680283032358,
            0.9946178793907166,
            0.00020220654550939798,
            0.0006950707756914198,
            0.0001293716486543417,
            0.0004610825562849641,
            0.00012008265184704214
        ],
        "align_select": "select avg(country.le)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give the average life expectancy for countries in Africa which are republics?",
        "gold_select": "select avg(country.le)",
        "select_candidates": [
            "select avg(country.le)",
            "select avg(country.GNP)",
            "select avg(country.popn)",
            "select avg(country.hos)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "country countrylanguage"
        ],
        "align_scores": [
            0.9967447519302368,
            0.00013355773990042508,
            0.9957276582717896,
            0.0001439635962015018,
            0.000744377844966948,
            0.0001454130542697385,
            0.995996356010437,
            0.0001506343251094222
        ],
        "align_select": "select avg(country.le)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the total surface area of the continents Asia and Europe?",
        "gold_select": "select sum(country.sa)",
        "select_candidates": [
            "select sum(country.sa)",
            "select sum(country.popn)",
            "select sum(country.GNP)",
            "select sum(country.IndepYear)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "sqlite_sequence country",
            "country countrylanguage",
            "city country"
        ],
        "align_scores": [
            0.9958167672157288,
            0.0005100573180243373,
            0.0004312568053137511,
            0.00025518276379443705,
            0.9913937449455261,
            0.0006637852056883276,
            0.00038145569851621985,
            0.00016480124031659216
        ],
        "align_select": "select sum(country.sa)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give the total surface area covered by countries in Asia or Europe.",
        "gold_select": "select sum(country.sa)",
        "select_candidates": [
            "select sum(country.sa)",
            "select sum(country.sa), country.IndepYear",
            "select sum(country.popn)",
            "select sum(country.sa), country.Region"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "country countrylanguage"
        ],
        "align_scores": [
            0.9967509508132935,
            0.013589237816631794,
            0.00012056006380589679,
            0.00014384531823452562,
            0.0004057899641338736,
            0.00010417000885354355,
            0.0001930124853970483,
            0.0005594685208052397
        ],
        "align_select": "select sum(country.sa)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many people live in Gelderland district?",
        "gold_select": "select sum(city.popn)",
        "select_candidates": [
            "select sum(city.popn)",
            "select count(*)",
            "select city.popn",
            "select sum(city.popn), city.dist"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "city",
        "table_candidates": [
            "city"
        ],
        "align_scores": [
            0.9529936909675598,
            7.121376256691292e-05,
            0.9958819150924683,
            8.797102054813877e-05,
            0.956322431564331,
            0.00013336530537344515,
            0.00012486321793403476,
            5.926825542701408e-05
        ],
        "align_select": "select sum(city.popn)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the total population of Gelderland district?",
        "gold_select": "select sum(city.popn)",
        "select_candidates": [
            "select sum(city.popn)",
            "select sum(city.popn), city.dist",
            "select sum(city.popn), city.dist, city.popn",
            "select sum(city.popn), city.dist"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "city",
        "table_candidates": [
            "city"
        ],
        "align_scores": [
            0.9966492056846619,
            0.011879739351570606,
            0.00014543718134518713,
            0.005856186617165804,
            0.00023832959413994104,
            0.00011890287714777514,
            0.00014543718134518713,
            0.005856186617165804
        ],
        "align_select": "select sum(city.popn)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the average GNP and total population in all nations whose government is US territory?",
        "gold_select": "select avg(country.GNP), sum(country.popn)",
        "select_candidates": [
            "select avg(country.GNP), avg(country.popn)",
            "select avg(country.GNP), sum(country.popn)",
            "select avg(country.popn), avg(country.GNP)",
            "select avg(country.le), avg(country.popn)"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9605615735054016,
            0.0004468583792913705,
            0.9876042604446411,
            0.0009401481365785003,
            0.978617250919342,
            0.0007926365942694247,
            0.00032570029725320637,
            0.0001281684380955994
        ],
        "align_select": "select avg(country.GNP), avg(country.popn)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give the mean GNP and total population of nations which are considered US territory.",
        "gold_select": "select avg(country.GNP), sum(country.popn)",
        "select_candidates": [
            "select avg(country.GNP), sum(country.popn)",
            "select avg(country.popn), avg(country.GNP)",
            "select avg(country.popn), sum(country.GNP)",
            "select avg(country.le), sum(country.popn)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9961826205253601,
            0.00046083691995590925,
            0.995370090007782,
            0.00027654494624584913,
            0.9958486557006836,
            0.000680109835229814,
            0.00042534308158792555,
            0.00014740589540451765
        ],
        "align_select": "select avg(country.GNP), sum(country.popn)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many unique languages are spoken in the world?",
        "gold_select": "select count(distinct countrylanguage.lang)",
        "select_candidates": [
            "select count(distinct countrylanguage.lang)",
            "select count(distinct countrylanguage.ofcl)",
            "select count(distinct countrylanguage.cntry_code)",
            "select count(distinct countrylanguage.lang"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "countrylanguage",
        "table_candidates": [
            "countrylanguage"
        ],
        "align_scores": [
            0.9933498501777649,
            0.9933498501777649,
            0.7704319357872009,
            0.7704319357872009,
            0.9494876861572266,
            0.9494876861572266,
            0.25698521733283997,
            0.25698521733283997
        ],
        "align_select": "select count(distinct countrylanguage.lang)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What is the number of distinct languages used around the world?",
        "gold_select": "select count(distinct countrylanguage.lang)",
        "select_candidates": [
            "select count(distinct countrylanguage.lang)",
            "select count(select count(distinct countrylanguage.lang)",
            "select count(distinct countrylanguage.ofcl)",
            "select count(distinct countrylanguage.lang), countrylanguage.cntry_code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "countrylanguage",
        "table_candidates": [
            "countrylanguage"
        ],
        "align_scores": [
            0.9948018789291382,
            0.9948018789291382,
            0.0005965868476778269,
            0.0005965868476778269,
            0.8130921125411987,
            0.8130921125411987,
            0.00017435586778447032,
            0.00017435586778447032
        ],
        "align_select": "select count(distinct countrylanguage.lang)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "How many type of governments are in Africa?",
        "gold_select": "select count(distinct country.gf)",
        "select_candidates": [
            "select count(distinct country.GNP)",
            "select count(distinct country.Name)",
            "select count(distinct country.le)",
            "select count(distinct country.GNPOld)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "sqlite_sequence country",
            "city country",
            "country countrylanguage"
        ],
        "align_scores": [
            0.9693083763122559,
            0.9693083763122559,
            0.018460864201188087,
            0.018460864201188087,
            0.00384120037779212,
            0.00384120037779212,
            0.8506156206130981,
            0.8506156206130981
        ],
        "align_select": "select count(distinct country.GNP)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many different forms of governments are there in Africa?",
        "gold_select": "select count(distinct country.gf)",
        "select_candidates": [
            "select count(distinct country.GNP)",
            "select count(distinct country.le)",
            "select count(distinct country.GNPOld)",
            "select count(distinct country.popn)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "sqlite_sequence country"
        ],
        "align_scores": [
            0.9947794675827026,
            0.00013003380445297807,
            0.012423914857208729,
            8.475509093841538e-05,
            0.8961710333824158,
            0.00012264862016309053,
            0.0008401520899496973,
            7.962546806083992e-05
        ],
        "align_select": "select count(distinct country.GNP)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the total number of languages used in Aruba?",
        "gold_select": "select count(countrylanguage.lang)",
        "select_candidates": [
            "select count(distinct countrylanguage.lang)",
            "select count(*)",
            "select count(countrylanguage.lang)",
            "select count(count(distinct countrylanguage.lang)"
        ],
        "select_labels": [
            0.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9939590692520142,
            0.0002527490141801536,
            0.9939318895339966,
            0.0024279530625790358,
            0.9951716065406799,
            0.0019105541286990047,
            0.0011024457635357976,
            0.00012181141210021451
        ],
        "align_select": "select count(distinct countrylanguage.lang)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many languages are spoken in Aruba?",
        "gold_select": "select count(countrylanguage.lang)",
        "select_candidates": [
            "select count(distinct countrylanguage.lang)",
            "select count(distinct countrylanguage.lang",
            "select count(distinct countrylanguage.ofcl)",
            "select count(count(distinct countrylanguage.lang)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9960011839866638,
            0.00015043250459712,
            0.7598951458930969,
            0.00016321132716257125,
            0.9363739490509033,
            0.00013762024173047394,
            0.000653364637400955,
            0.00010022921924246475
        ],
        "align_select": "select count(distinct countrylanguage.lang)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many official languages does Afghanistan have?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(distinct countrylanguage.lang)",
            "select count(distinct countrylanguage.ofcl)",
            "select count(distinct countrylanguage.lang, countrylanguage.ofcl)",
            "select count(distinct countrylanguage.lang, count(distinct countrylanguage.ofcl)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9841769933700562,
            6.629421113757417e-05,
            0.992379903793335,
            6.427460175473243e-05,
            0.00023871075245551765,
            5.816194607177749e-05,
            0.00015311148308683187,
            6.827530160080642e-05
        ],
        "align_select": "select count(distinct countrylanguage.lang)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many official languages are spoken in Afghanistan?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(distinct countrylanguage.lang)",
            "select count(distinct countrylanguage.ofcl)",
            "select count(distinct countrylanguage.lang, count(distinct countrylanguage.ofcl)",
            "select count(distinct countrylanguage.lang, countrylanguage.ofcl)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9482739567756653,
            0.9482739567756653,
            0.9924983382225037,
            0.9924983382225037,
            0.0001412823621649295,
            0.0001412823621649295,
            0.00024893804220482707,
            0.00024893804220482707
        ],
        "align_select": "select count(distinct countrylanguage.lang)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is name of the country that speaks the largest number of languages?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Capital",
            "select country.Name, countrylanguage.lang",
            "select country.Name, countrylanguage.cntry_code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.9925251007080078,
            6.926178321009502e-05,
            0.00026925085694529116,
            6.068623042665422e-05,
            0.0016069525154307485,
            6.838073022663593e-05,
            0.0027713465970009565,
            9.18493460630998e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Give the name of the nation that uses the greatest amount of languages.",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Capital",
            "select country.Name, countrylanguage.lang",
            "select country.Name, countrylanguage.cntry_code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.9717080593109131,
            6.48482091492042e-05,
            0.00016448037058580667,
            5.808091373182833e-05,
            0.002888144226744771,
            7.010109402472153e-05,
            0.002950066002085805,
            8.892315236153081e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Which continent has the most diverse languages?",
        "gold_select": "select country.cont",
        "select_candidates": [
            "select country.cont",
            "select country.cont, countrylanguage.pct",
            "select country.cont, t3.c4",
            "select country.cont, countrylanguage.lang"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.994168758392334,
            6.38550118310377e-05,
            0.0010258284164592624,
            6.354224751703441e-05,
            0.0013542281230911613,
            6.131705595180392e-05,
            0.0016411632532253861,
            6.954193668207154e-05
        ],
        "align_select": "select country.cont",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Which continent speaks the most languages?",
        "gold_select": "select country.cont",
        "select_candidates": [
            "select country.cont",
            "select country.cont, countrylanguage.pct",
            "select country.cont, country.Region",
            "select country.cont, t3.c4"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9950441122055054,
            7.667218596907333e-05,
            0.0006618273910135031,
            6.312743062153459e-05,
            0.0006519305752590299,
            6.105640932219103e-05,
            0.0012265308760106564,
            6.253892206586897e-05
        ],
        "align_select": "select country.cont",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "How many countries speak both English and Dutch?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(distinct countrylanguage.cntry_code)",
            "select count(*), countrylanguage.cntry_code",
            "select count(*), countrylanguage.lang"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "countrylanguage",
            "country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.9916921854019165,
            0.4901256561279297,
            0.10864325612783432,
            0.00040242617251351476,
            0.0004286878975108266,
            0.000391151086660102,
            0.00028210505843162537,
            0.000307429872918874
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the number of nations that use English and Dutch?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), countrylanguage.cntry_code",
            "select count(*), countrylanguage.lang",
            "select count(countrylanguage.cntry_code)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "countrylanguage",
            "country countrylanguage"
        ],
        "align_scores": [
            0.9906153678894043,
            0.01515202410519123,
            0.0003068307996727526,
            0.0015232828445732594,
            0.00032900588121265173,
            0.0009745010174810886,
            0.4488318860530853,
            0.04730568826198578
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of nations speak both English and French?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, countrylanguage.lang",
            "select country.Name, countrylanguage.cntry_code",
            "select country.Name, country.Capital"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.9898960590362549,
            0.00022923073265701532,
            0.00038677529664710164,
            0.00014038717199582607,
            0.00025705667212605476,
            0.00012873370724264532,
            0.00013408102677203715,
            8.121858263621107e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "Give the names of nations that speak both English and French.",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, countrylanguage.lang",
            "select country.Name, country.Capital",
            "select country.Name, countrylanguage.cntry_code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.9946801066398621,
            0.00039546130574308336,
            0.0003038105205632746,
            0.00015739272930659354,
            0.0001949612342286855,
            9.6807700174395e-05,
            0.00031688855960965157,
            0.00015549911768175662
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of nations where both English and French are official languages?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, countrylanguage.lang",
            "select country.Name, countrylanguage.cntry_code",
            "select country.Name, country.Capital"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.9944774508476257,
            0.0006832506624050438,
            0.000290775642497465,
            0.00014368724077939987,
            0.0005155019462108612,
            0.00018277655181009322,
            0.00021406973246484995,
            0.00010022787319030613
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "Give the names of countries with English and French as official languages.",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, countrylanguage.ofcl",
            "select country.Name, country.Capital",
            "select country.Name, countrylanguage.lang"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.9956178665161133,
            0.0008022414403967559,
            0.0002779792994260788,
            9.458709246246144e-05,
            0.00024065503384917974,
            9.521813626633957e-05,
            0.00021966060739941895,
            8.33600788610056e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "What is the number of distinct continents where Chinese is spoken?",
        "gold_select": "select count(distinct country.cont)",
        "select_candidates": [
            "select count(distinct country.cont)",
            "select count(distinct country.Name)",
            "select count(distinct countrylanguage.ofcl)",
            "select count(distinct country.popn)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.9952200055122375,
            0.0003565621445886791,
            0.00117464829236269,
            0.00021273230959195644,
            0.01800685003399849,
            0.00045909208711236715,
            0.00038808200042694807,
            0.00010097499034600332
        ],
        "align_select": "select count(distinct country.cont)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many continents speak Chinese?",
        "gold_select": "select count(distinct country.cont)",
        "select_candidates": [
            "select count(distinct country.cont)",
            "select count(continents)",
            "select count(distinct country.Name)",
            "select count(distinct country.Code)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.9044867157936096,
            0.00026550859911367297,
            0.6651768088340759,
            0.00019857878214679658,
            0.007420076988637447,
            8.481103577651083e-05,
            0.003408425487577915,
            9.255121403839439e-05
        ],
        "align_select": "select count(distinct country.cont)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the regions that use English or Dutch?",
        "gold_select": "select distinct country.Region",
        "select_candidates": [
            "select country.Region",
            "select distinct country.Region",
            "select country.Region, countrylanguage.cntry_code",
            "select count(country.Region)"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.99305659532547,
            0.09572670608758926,
            0.024992380291223526,
            0.00021602991910185665,
            0.0003660936199594289,
            0.00016264223086182028,
            0.002859058789908886,
            0.00012239054194651544
        ],
        "align_select": "select country.Region",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which regions speak Dutch or English?",
        "gold_select": "select distinct country.Region",
        "select_candidates": [
            "select country.Region",
            "select distinct country.Region",
            "select country.Region, countrylanguage.lang",
            "select country.Region, countrylanguage.cntry_code"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9928929209709167,
            0.05288585647940636,
            0.04619019851088524,
            0.00024547477369196713,
            0.0003309282474219799,
            0.00015892888768576086,
            0.00027816512738354504,
            0.00016337368288077414
        ],
        "align_select": "select country.Region",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the countries where either English or Dutch is the official language?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, countrylanguage.cntry_code",
            "select country.Name, country.cont",
            "select country.Name, country.Code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.9091584086418152,
            0.008379027247428894,
            0.0005923858261667192,
            0.00020175705139990896,
            0.0003553898131940514,
            0.00011998580157523975,
            0.00099596893414855,
            0.0001846526429289952
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which countries have either English or Dutch as an official language?",
        "gold_select": "select *",
        "select_candidates": [
            "select country.Name",
            "select country.Name, countrylanguage.cntry_code",
            "select country.Name, country.cont",
            "select country.Name, country.Region"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.9339724183082581,
            0.011120518669486046,
            0.0006096575525589287,
            0.00022391323000192642,
            0.00034693858469836414,
            0.00012180409248685464,
            0.0002468746097292751,
            0.00011582100705709308
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which language is the most popular on the Asian continent?",
        "gold_select": "select countrylanguage.lang",
        "select_candidates": [
            "select countrylanguage.lang",
            "select countrylanguage.lang, country.Code",
            "select countrylanguage.lang, country.cont",
            "select countrylanguage.lang, country.popn"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9873043894767761,
            0.9919390082359314,
            0.0003153289726469666,
            0.0004434061120264232,
            0.0002963464648928493,
            0.00065745844040066,
            0.0005905719590373337,
            0.0018389690667390823
        ],
        "align_select": "select countrylanguage.lang",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT"
    },
    {
        "question": "What is the language that is used by the largest number of Asian nations?",
        "gold_select": "select countrylanguage.lang",
        "select_candidates": [
            "select countrylanguage.lang",
            "select countrylanguage.lang, country.Code",
            "select countrylanguage.lang, country.Capital",
            "select countrylanguage.lang, country.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.9916111826896667,
            0.0001510583533672616,
            0.0020929339807480574,
            9.647722617955878e-05,
            0.0009005212923511863,
            7.738808199064806e-05,
            0.003771009622141719,
            8.928179158829153e-05
        ],
        "align_select": "select countrylanguage.lang",
        "align_structure": "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Which languages are spoken by only one country in republic governments?",
        "gold_select": "select countrylanguage.lang",
        "select_candidates": [
            "select countrylanguage.lang",
            "select countrylanguage.lang, country.gf",
            "select countrylanguage.lang, country.LocalName",
            "select countrylanguage.lang, country.Capital"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY-HAVING",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.9687312245368958,
            0.14152076840400696,
            0.0006774853100068867,
            0.00014268592349253595,
            0.0009318357333540916,
            0.00017072897753678262,
            0.0004083015082869679,
            0.00011576402903301641
        ],
        "align_select": "select countrylanguage.lang",
        "align_structure": "SELECT-FROM-WHERE-GROUP BY-HAVING"
    },
    {
        "question": "What languages are only used by a single country with a republic government?",
        "gold_select": "select countrylanguage.lang",
        "select_candidates": [
            "select countrylanguage.lang",
            "select countrylanguage.lang, country.Capital",
            "select countrylanguage.lang, country.LocalName",
            "select countrylanguage.lang, country.Code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.15963487327098846,
            0.9373142123222351,
            0.00011590387293836102,
            0.00026575199444778264,
            0.0002037628146354109,
            0.0005325294332578778,
            0.0001739644503686577,
            0.0003556350420694798
        ],
        "align_select": "select countrylanguage.lang",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the city with the largest population that uses English.",
        "gold_select": "select city.Name, city.popn",
        "select_candidates": [
            "select city.Name",
            "select city.Name, countrylanguage.ofcl",
            "select city.ID, city.Name",
            "select city.Name, countrylanguage.lang"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "city countrylanguage",
        "table_candidates": [
            "city countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.9854421615600586,
            0.9802011847496033,
            0.0007389653474092484,
            0.002176155336201191,
            0.0005970880738459527,
            0.0007859509205445647,
            0.0013456637971103191,
            0.003591713262721896
        ],
        "align_select": "select city.Name",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT"
    },
    {
        "question": "What is the most populace city that speaks English?",
        "gold_select": "select city.Name, city.popn",
        "select_candidates": [
            "select city.Name",
            "select city.Name, countrylanguage.ofcl",
            "select city.Name, countrylanguage.cntry_code",
            "select city.ID, city.Name"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "city countrylanguage",
        "table_candidates": [
            "city countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.9883238077163696,
            0.0001238840923178941,
            0.00044953604810871184,
            8.193613030016422e-05,
            0.0008683259948156774,
            8.126389002427459e-05,
            0.00055233936291188,
            7.231941708596423e-05
        ],
        "align_select": "select city.Name",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT"
    },
    {
        "question": "Find the name, population and expected life length of asian country with the largest area?",
        "gold_select": "select country.Name, country.popn, country.le",
        "select_candidates": [
            "select country.Name, country.popn, country.le",
            "select country.Name, country.Code, country.popn, country.le",
            "select country.Name, country.IndepYear, country.popn, country.le",
            "select country.Name, country.popn, country.le"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9669592976570129,
            0.00014619661669712514,
            0.0005484081339091063,
            0.00013985355326440185,
            0.000858694373164326,
            0.0001144528214354068,
            0.9669592976570129,
            0.00014619661669712514
        ],
        "align_select": "select country.Name, country.popn, country.le",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the name, population, and life expectancy of the largest Asian country by land?",
        "gold_select": "select country.Name, country.popn, country.le",
        "select_candidates": [
            "select country.Name, country.popn, country.le",
            "select country.Name, country.IndepYear, country.popn, country.le",
            "select country.Name, country.popn, country.hos",
            "select country.Name, country.Code, country.popn, country.le"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9699230194091797,
            0.000541809422429651,
            0.0026257107965648174,
            9.787291492102668e-05,
            0.9800599813461304,
            0.0010335467522963881,
            0.0013957057381048799,
            0.00012694421457126737
        ],
        "align_select": "select country.Name, country.popn, country.le",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is average life expectancy in the countries where English is not the official language?",
        "gold_select": "select avg(country.le)",
        "select_candidates": [
            "select avg(country.le)",
            "select avg(t3.c7)",
            "select avg(country.GNP)",
            "select an avg(country.le)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.9952768087387085,
            0.00024488545022904873,
            0.0006284290575422347,
            0.0001579994714120403,
            0.9691985249519348,
            0.00032375144655816257,
            0.00044794013956561685,
            0.0001426812814315781
        ],
        "align_select": "select avg(country.le)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give the mean life expectancy of countries in which English is not the official language.",
        "gold_select": "select avg(country.le)",
        "select_candidates": [
            "select avg(country.le)",
            "select an avg(country.le)",
            "select m.avg(country.le)",
            "select avg(t3.c7)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.9962922930717468,
            0.0001164530185633339,
            0.00039901561103761196,
            0.00011049900786019862,
            0.0013708417536690831,
            0.00012586064985953271,
            0.0004791010287590325,
            0.00014685526548419148
        ],
        "align_select": "select avg(country.le)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the total number of people living in the nations that do not use English?",
        "gold_select": "select sum(country.popn)",
        "select_candidates": [
            "select sum(country.popn)",
            "select sum(country.popn), countrylanguage.lang",
            "select sum(country.popn), countrylanguage.cntry_code",
            "select sum(country.popn), countrylanguage.lang"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence countrylanguage",
            "country"
        ],
        "align_scores": [
            0.9904263615608215,
            0.0010648734169080853,
            0.00015089927182998508,
            0.0013881108025088906,
            0.00014036978245712817,
            0.011926759965717793,
            0.00015089927182998508,
            0.0013881108025088906
        ],
        "align_select": "select sum(country.popn)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many people live in countries that do not speak English?",
        "gold_select": "select sum(country.popn)",
        "select_candidates": [
            "select count(*)",
            "select sum(country.popn)",
            "select count(country.popn)",
            "select sum(country.popn), countrylanguage.lang"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "sqlite_sequence countrylanguage",
            "country"
        ],
        "align_scores": [
            0.9891139268875122,
            0.0001024914308800362,
            0.8769401907920837,
            7.616136281285435e-05,
            0.03566574305295944,
            8.135825919453055e-05,
            0.00014930186443962157,
            6.25726897851564e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the official language spoken in the country whose head of state is Beatrix?",
        "gold_select": "select countrylanguage.lang",
        "select_candidates": [
            "select countrylanguage.lang",
            "select countrylanguage.lang, country.le",
            "select countrylanguage.lang, country.cont",
            "select countrylanguage.lang, country.Code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9792898893356323,
            0.0002166952472180128,
            0.00035594470682553947,
            8.336723840329796e-05,
            0.0002564011956565082,
            7.591018948005512e-05,
            0.0002635359123814851,
            8.507445454597473e-05
        ],
        "align_select": "select countrylanguage.lang",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the official language used in the country the name of whose head of state is Beatrix.",
        "gold_select": "select countrylanguage.lang",
        "select_candidates": [
            "select countrylanguage.lang",
            "select countrylanguage.lang, countrylanguage.ofcl",
            "select official(countrylanguage.lang)",
            "select countrylanguage.lang, country.le"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9872409701347351,
            0.00016996977501548827,
            0.00032049650326371193,
            7.539573562098667e-05,
            0.0016858435701578856,
            8.833500760374591e-05,
            0.0003219137724954635,
            7.878452743170783e-05
        ],
        "align_select": "select countrylanguage.lang",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the total number of unique official languages spoken in the countries that are founded before 1930?",
        "gold_select": "select count(distinct countrylanguage.lang)",
        "select_candidates": [
            "select count(distinct countrylanguage.lang)",
            "select count(distinct countrylanguage.ofcl)",
            "select count(distinct countrylanguage.lang, count(distinct countrylanguage.ofcl)",
            "select count(distinct countrylanguage.lang-count(distinct countrylanguage.ofcl)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.9908791184425354,
            0.00037726477603428066,
            0.9911600947380066,
            0.00032512666075490415,
            0.0001758528669597581,
            0.00012752535985782743,
            0.00029240245930850506,
            0.00010477592149982229
        ],
        "align_select": "select count(distinct countrylanguage.lang)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "For the countries founded before 1930, what is the total number of distinct official languages?",
        "gold_select": "select count(distinct countrylanguage.lang)",
        "select_candidates": [
            "select count(distinct countrylanguage.ofcl)",
            "select count(distinct countrylanguage.lang)",
            "select count(distinct t3.c6)",
            "select count(distinct t3.c8)"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9932670593261719,
            0.00034913604031316936,
            0.9917107820510864,
            0.0003080289752688259,
            0.0005396187771111727,
            0.00019188542501069605,
            0.0005367066478356719,
            0.00018521725723985583
        ],
        "align_select": "select count(distinct countrylanguage.ofcl)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the countries that have greater surface area than any country in Europe?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Region",
            "select country.Name, country.cont",
            "select country.Name, country.sa"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.6881667971611023,
            0.008730912581086159,
            0.0003388389013707638,
            0.00015134582645259798,
            0.0004158139054197818,
            0.00017021241365000606,
            0.0004771322710439563,
            0.00016105794929899275
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which countries have greater area than that of any country in Europe?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Region",
            "select country.Name, country.cont",
            "select country.Name, country.popn"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.7101806402206421,
            0.00042277012835256755,
            0.00029187052859924734,
            8.750400593271479e-05,
            0.00038341875188052654,
            8.544682350475341e-05,
            0.00025794742396101356,
            8.919040556065738e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the African countries that have a population less than any country in Asia?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.cont",
            "select country.Name, country.popn",
            "select distinct country.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.6452922224998474,
            0.1877032071352005,
            0.00040667038410902023,
            0.0002354420576011762,
            0.0003125863440800458,
            0.00021243114315439016,
            0.1288764625787735,
            0.10659950226545334
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which African countries have a smaller population than that of any country in Asia?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.cont",
            "select distinct country.Name",
            "select country.Name, country.popn"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.6418523192405701,
            0.0009224491659551859,
            0.0004259075503796339,
            9.459439752390608e-05,
            0.1628035008907318,
            0.0007136650965549052,
            0.00040705068386159837,
            9.356380178360268e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which Asian countries have a population that is larger than any country in Africa?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.cont",
            "select country.Name, country.cont, country.popn",
            "select country.Name, country.cont, max(country.popn)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.7112459540367126,
            0.0007658321992494166,
            0.0004561650275718421,
            0.00010511976870475337,
            0.00020190427312627435,
            7.325867773033679e-05,
            0.0001798500888980925,
            6.926000060047954e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the Asian countries which have a population larger than that of any country in Africa?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.cont",
            "select distinct country.Name",
            "select country.Name, country.cont, country.popn"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "sqlite_sequence country",
            "city country",
            "city sqlite_sequence country"
        ],
        "align_scores": [
            0.736194372177124,
            0.0007319565629586577,
            0.00036586247733794153,
            9.818784747039899e-05,
            0.14539307355880737,
            0.0007448107353411615,
            0.00019133422756567597,
            7.336747512454167e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the country codes for countries that do not speak English?",
        "gold_select": "select countrylanguage.cntry_code",
        "select_candidates": [
            "select country.Code",
            "select country.Name, country.Code2",
            "select country.Name, countrylanguage.cntry_code",
            "select country.Name, country.Code"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "countrylanguage",
            "sqlite_sequence countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9861677289009094,
            0.00015944130427669734,
            0.00021078412828501314,
            8.096416422631592e-05,
            0.0003341610135976225,
            8.414580224780366e-05,
            0.00042470419430173934,
            7.69395919633098e-05
        ],
        "align_select": "select country.Code",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the country codes for countries that do not speak English.",
        "gold_select": "select countrylanguage.cntry_code",
        "select_candidates": [
            "select country.Code",
            "select country.Name, countrylanguage.cntry_code",
            "select country.Name, country.Code2",
            "select country.Name, country.Code"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "countrylanguage",
            "sqlite_sequence countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9919781684875488,
            9.942142060026526e-05,
            0.00024162621411960572,
            6.630578718613833e-05,
            0.00017186382319778204,
            6.870506331324577e-05,
            0.0002562755544204265,
            6.400077108992264e-05
        ],
        "align_select": "select country.Code",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the country codes of countries where people use languages other than English?",
        "gold_select": "select distinct countrylanguage.cntry_code",
        "select_candidates": [
            "select country.Code",
            "select country.Name, countrylanguage.cntry_code",
            "select country.Name, country.Code",
            "select country.Name, country.Code2"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "countrylanguage",
        "table_candidates": [
            "countrylanguage",
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.8691986203193665,
            0.12277539819478989,
            0.00036936363903805614,
            0.0001778536243364215,
            0.0004310043004807085,
            0.00013841754116583616,
            0.00024444106384180486,
            0.0001198426543851383
        ],
        "align_select": "select country.Code",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give the country codes for countries in which people speak langauges that are not English.",
        "gold_select": "select distinct countrylanguage.cntry_code",
        "select_candidates": [
            "select country.Code",
            "select country.Name, countrylanguage.cntry_code",
            "select country.Name, country.Code",
            "select distinct country.Code"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.5514557361602783,
            0.06883188337087631,
            0.00041483205859549344,
            0.00015917258861009032,
            0.00034741952549666166,
            0.00013301555009093136,
            0.03660968318581581,
            0.0002779159403871745
        ],
        "align_select": "select country.Code",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the codes of the countries that do not speak English and whose government forms are not Republic?",
        "gold_select": "select country.Code",
        "select_candidates": [
            "select country.Code",
            "select country.Code, country.gf",
            "select country.Code, countrylanguage.lang",
            "select country.Code, country.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.9519708156585693,
            0.08273159712553024,
            0.0007613642956130207,
            0.00023533184139523655,
            0.00039714001468382776,
            0.0004436942108441144,
            0.0005930849001742899,
            0.0003526219225022942
        ],
        "align_select": "select country.Code",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the codes of countries that do not speak English and do not have Republics for governments.",
        "gold_select": "select country.Code",
        "select_candidates": [
            "select country.Code",
            "select country.Code, countrylanguage.lang",
            "select country.Code, country.Name",
            "select country.Name, country.Code2"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.009245618246495724,
            0.2737945020198822,
            0.0003428121854085475,
            0.00039754551835358143,
            0.0002081151178572327,
            0.0002331636642338708,
            0.0002038374514086172,
            0.0002302339271409437
        ],
        "align_select": "select country.Code",
        "align_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "Which cities are in European countries where English is not the official language?",
        "gold_select": "select distinct city.Name",
        "select_candidates": [
            "select city.Name",
            "select city.ID, city.Name",
            "select distinct city.Name",
            "select city.Name, country.Name"
        ],
        "select_labels": [
            0.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "city country countrylanguage",
        "table_candidates": [
            "city country countrylanguage",
            "city sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.7999190092086792,
            0.0017327343812212348,
            0.0003474141994956881,
            0.00015475806139875203,
            0.08250637352466583,
            0.0484207421541214,
            0.0003159377083647996,
            0.00012794022040907294
        ],
        "align_select": "select city.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of cities in Europe for which English is not the official language?",
        "gold_select": "select distinct city.Name",
        "select_candidates": [
            "select city.Name",
            "select distinct city.Name",
            "select city.Name, country.cont",
            "select city.Name, country.Name"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "city country countrylanguage",
        "table_candidates": [
            "city country countrylanguage",
            "city sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9881308078765869,
            0.0012755454517900944,
            0.024760423228144646,
            0.021037956699728966,
            0.0002466515579726547,
            0.00012247168342582881,
            0.00022000769968144596,
            0.0001340548333246261
        ],
        "align_select": "select city.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which unique cities are in Asian countries where Chinese is the official language?",
        "gold_select": "select distinct city.Name",
        "select_candidates": [
            "select distinct city.Name",
            "select distinct city.ID",
            "select count(*)",
            "select count(distinct city.ID)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "city country countrylanguage",
        "table_candidates": [
            "city country countrylanguage",
            "city sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9801871180534363,
            0.00036284903762862086,
            0.8676100969314575,
            0.00027758334181271493,
            0.037045884877443314,
            9.56164876697585e-05,
            0.01147723849862814,
            7.306640327442437e-05
        ],
        "align_select": "select distinct city.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the different names of cities that are in Asia and for which Chinese is the official language.",
        "gold_select": "select distinct city.Name",
        "select_candidates": [
            "select distinct city.Name",
            "select distinct city.Name, country.Name",
            "select distinct city.Name, countrylanguage.lang",
            "select distinct city.Name, country.Capital"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "city country countrylanguage",
        "table_candidates": [
            "city country countrylanguage",
            "city sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9935991764068604,
            0.00012576083827298135,
            0.00021376153745222837,
            6.301797111518681e-05,
            0.0003852068039122969,
            6.393831426976249e-05,
            0.00018714569159783423,
            6.0231170209590346e-05
        ],
        "align_select": "select distinct city.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the name, independence year, and surface area of the country with the smallest population?",
        "gold_select": "select country.Name, country.sa, country.IndepYear",
        "select_candidates": [
            "select country.Name, country.IndepYear, country.sa",
            "select country.Name, country.IndepYear., country.sa",
            "select country.Name, country.IndepYear.c5, country.sa",
            "select country.Name, country.IndepYear, country.sa"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9923107624053955,
            8.22382717160508e-05,
            0.054012857377529144,
            0.00011166714102728292,
            0.000766109093092382,
            9.271789895137772e-05,
            0.9923107624053955,
            8.22382717160508e-05
        ],
        "align_select": "select country.Name, country.IndepYear, country.sa",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Give the name, year of independence, and surface area of the country that has the lowest population.",
        "gold_select": "select country.Name, country.sa, country.IndepYear",
        "select_candidates": [
            "select country.Name, country.IndepYear, country.sa",
            "select country.Name, country.IndepYear.c5, country.sa",
            "select country.Name, country.IndepYear, country.sa",
            "select country.Name, country.IndepYear.c6, country.sa"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9878115057945251,
            8.196784619940445e-05,
            0.0006708339788019657,
            8.858233195496723e-05,
            0.9878115057945251,
            8.196784619940445e-05,
            0.0005600089789368212,
            8.850178710417822e-05
        ],
        "align_select": "select country.Name, country.IndepYear, country.sa",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What are the population, name and leader of the country with the largest area?",
        "gold_select": "select country.Name, country.popn, country.hos",
        "select_candidates": [
            "select country.popn, country.Name, country.le",
            "select country.Code, country.popn, country.le",
            "select country.Name, country.popn, country.le",
            "select country.Code, country.Name, country.le"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9894870519638062,
            9.26704378798604e-05,
            0.0007499594357796013,
            8.744702790863812e-05,
            0.9820097088813782,
            9.682154632173479e-05,
            0.0012736425269395113,
            7.773044490022585e-05
        ],
        "align_select": "select country.popn, country.Name, country.le",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Give the name, population, and head of state for the country that has the largest area.",
        "gold_select": "select country.Name, country.popn, country.hos",
        "select_candidates": [
            "select country.Name, country.popn, country.hos",
            "select country.Name, country.popn, country.le",
            "select country.Name, country.popn, country.Capital",
            "select country.Name, country.popn, country.GNP"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9792668223381042,
            9.848782792687416e-05,
            0.0005297848838381469,
            9.676229092292488e-05,
            0.859866201877594,
            0.00012749448069371283,
            0.9358101487159729,
            0.00011324873776175082
        ],
        "align_select": "select country.Name, country.popn, country.hos",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Return the country name and the numbers of languages spoken for each country that speaks at least 3 languages.",
        "gold_select": "select count(countrylanguage.lang), country.Name",
        "select_candidates": [
            "select country.Name, count(distinct countrylanguage.lang)",
            "select country.Name, count(distinct country.Name)",
            "select country.Name, count(*)",
            "select count(distinct country.Name), country.Name"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.0947585180401802,
            8.851358870742843e-05,
            0.00017385203682351857,
            6.773071800125763e-05,
            0.4508833587169647,
            0.00011888384324265644,
            0.00016812320973258466,
            7.553664181614295e-05
        ],
        "align_select": "select country.Name, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the names of countries that speak more than 2 languages, as well as how many languages they speak?",
        "gold_select": "select count(countrylanguage.lang), country.Name",
        "select_candidates": [
            "select country.Name, count(distinct countrylanguage.lang)",
            "select country.Name, count(distinct country.Name)",
            "select country.Name, count(*)",
            "select country.Name, count(countrylanguage.lang)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage"
        ],
        "align_scores": [
            0.5448306202888489,
            0.00011054011702071875,
            0.00025521733914501965,
            7.164282578742132e-05,
            0.954791247844696,
            0.00011787580297095701,
            0.026122847571969032,
            8.85568224475719e-05
        ],
        "align_select": "select country.Name, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Find the number of cities in each district whose population is greater than the average population of cities?",
        "gold_select": "select count(*), city.dist",
        "select_candidates": [
            "select count(*), city.dist",
            "select city.dist, count(*)",
            "select count(*), city.dist,",
            "select counts(*), city.dist"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "city",
        "table_candidates": [
            "city"
        ],
        "align_scores": [
            0.9879478812217712,
            0.014459970407187939,
            0.9909159541130066,
            0.05946820229291916,
            0.002178033348172903,
            0.00023905967827886343,
            0.0011341223726049066,
            0.0002851694298442453
        ],
        "align_select": "select count(*), city.dist",
        "align_structure": "SELECT-FROM-WHERE-GROUP BY"
    },
    {
        "question": "How many cities in each district have a population that is above the average population across all cities?",
        "gold_select": "select count(*), city.dist",
        "select_candidates": [
            "select count(*), city.dist",
            "select city.dist, count(*)",
            "select count(distinct city.Name), city.dist",
            "select count(*), city.dist, max(city.popn)"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "city",
        "table_candidates": [
            "city"
        ],
        "align_scores": [
            0.9752487540245056,
            0.00027183719794265926,
            0.9869762063026428,
            0.0002550027857068926,
            0.002505142940208316,
            0.00013368870713748038,
            0.0017819402273744345,
            0.00014321957132779062
        ],
        "align_select": "select count(*), city.dist",
        "align_structure": "SELECT-FROM-WHERE-GROUP BY"
    },
    {
        "question": "Find the government form name and total population for each government form whose average life expectancy is longer than 72.",
        "gold_select": "select sum(country.popn), country.gf",
        "select_candidates": [
            "select city.Name, sum(country.popn)",
            "select country.Name, sum(country.popn)",
            "select city.Name, sum(city.popn)",
            "select city.Name, count(*)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "sqlite_sequence country",
            "country countrylanguage",
            "city country"
        ],
        "align_scores": [
            0.0006661462248302996,
            0.00018399111286271363,
            0.013692968524992466,
            0.00020983706053812057,
            0.031927112489938736,
            0.0002237361331935972,
            0.001215363503433764,
            0.0002375290496274829
        ],
        "align_select": "select city.Name, sum(country.popn)",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the different government forms and what is the total population of each for government forms that have an average life expectancy greater than 72?",
        "gold_select": "select sum(country.popn), country.gf",
        "select_candidates": [
            "select country.Capital, sum(country.popn)",
            "select country.Name, sum(country.popn)",
            "select country.Code2, sum(country.popn)",
            "select count(*), country.Capital"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "country countrylanguage",
            "sqlite_sequence country",
            "city country"
        ],
        "align_scores": [
            0.0020972227212041616,
            8.859366062097251e-05,
            0.669795572757721,
            0.00019339639402460307,
            0.018908007070422173,
            0.0001384098723065108,
            0.03748790919780731,
            0.00012654103920795023
        ],
        "align_select": "select country.Name, sum(country.popn)",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Find the average life expectancy and total population for each continent where the average life expectancy is shorter than 72?",
        "gold_select": "select sum(country.popn), avg(country.le), country.cont",
        "select_candidates": [
            "select country.Name, avg(country.popn)",
            "select avg(country.popn), sum(country.popn), country.cont",
            "select avg(country.le), sum(country.popn), country.cont",
            "select country.Name, avg(country.popn), sum(country.popn)"
        ],
        "select_labels": [
            0.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.0008467125589959323,
            8.022192196222022e-05,
            0.00044559501111507416,
            8.115276432363316e-05,
            0.5212204456329346,
            0.00017051062604878098,
            0.00039040675619617105,
            6.84658152749762e-05
        ],
        "align_select": "select avg(country.le), sum(country.popn), country.cont",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the different continents and the total popuation and average life expectancy corresponding to each, for continents that have an average life expectancy less than 72?",
        "gold_select": "select sum(country.popn), avg(country.le), country.cont",
        "select_candidates": [
            "select country.cont, sum(country.popn), avg(country.popn)",
            "select country.Name, sum(country.popn), avg(country.popn)",
            "select country.cont, sum(country.popn), avg(country.le)",
            "select country.cont, count(*), avg(country.popn)"
        ],
        "select_labels": [
            0.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.2060212790966034,
            0.00010453570575919002,
            0.02337190881371498,
            9.887815394904464e-05,
            0.2728380560874939,
            0.00012079757289029658,
            0.007395715452730656,
            0.00010884013317991048
        ],
        "align_select": "select country.cont, sum(country.popn), avg(country.popn)",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the names and areas of countries with the top 5 largest area?",
        "gold_select": "select country.Name, country.sa",
        "select_candidates": [
            "select country.Name, country.cont",
            "select country.Name, country.Region",
            "select country.Name, country.sa",
            "select country.Name, country.cont.c3"
        ],
        "select_labels": [
            0.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.982014000415802,
            5.635163324768655e-05,
            0.0008739970508031547,
            6.55517796985805e-05,
            0.9920544624328613,
            6.539450987474993e-05,
            0.0004065934626851231,
            7.211893534986302e-05
        ],
        "align_select": "select country.Name, country.cont",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Return the names and surface areas of the 5 largest countries.",
        "gold_select": "select country.Name, country.sa",
        "select_candidates": [
            "select country.Name, country.sa",
            "select country.Name, country.cont",
            "select country.Name, country.Region",
            "select country.Name, country.sa4"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9957519769668579,
            7.538107456639409e-05,
            0.9862971305847168,
            6.56509364489466e-05,
            0.0004326075140852481,
            8.723888458916917e-05,
            0.0007775849080644548,
            7.257392280735075e-05
        ],
        "align_select": "select country.Name, country.sa",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What are names of countries with the top 3 largest population?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Capital",
            "select country.Name, country.cont",
            "select country.Name, country.Region"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9893559813499451,
            5.333628359949216e-05,
            0.0006088515510782599,
            5.579136632150039e-05,
            0.0005656557041220367,
            5.3431074775289744e-05,
            0.0003992954734712839,
            5.564636012422852e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Return the names of the 3 most populated countries.",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Capital",
            "select country.Name, country.Region",
            "select country.Name, country.popn"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9955614805221558,
            5.573526141233742e-05,
            0.0003376711974851787,
            5.078433969174512e-05,
            0.00017916168144438416,
            5.0795239076251164e-05,
            0.0010952542070299387,
            4.980797166354023e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What are the names of the nations with the 3 lowest populations?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Capital",
            "select country.Name, country.Region",
            "select country.Name, country.popn"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9886292219161987,
            5.632610555039719e-05,
            0.0003458914870861918,
            5.1557475671870634e-05,
            0.000256724568316713,
            5.1735325541812927e-05,
            0.000736912596039474,
            5.0317605200689286e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Return the names of the 3 countries with the fewest people.",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Capital",
            "select country.Name, country.Region",
            "select country.Name, country.cont"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9924893379211426,
            5.236485958448611e-05,
            0.000335477088810876,
            5.052836058894172e-05,
            0.0002344946115044877,
            4.932706360705197e-05,
            0.0006310293101705611,
            4.8898898967308924e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "how many countries are in Asia?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), country.Code",
            "select count(*), country.Name",
            "select count(*), country.cont"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.995347797870636,
            0.00031047165975905955,
            0.0005199190345592797,
            0.0011247146176174283,
            0.00041565424180589616,
            0.0015688951825723052,
            0.00044781481847167015,
            0.00033798362710513175
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Count the number of countries in Asia.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), country.Code",
            "select count(*), country.Name",
            "select count(*), country.cont"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9957026839256287,
            0.000186585690244101,
            0.00027474295347929,
            0.002342158230021596,
            0.0002219086018158123,
            0.0018845576560124755,
            0.00032925407867878675,
            0.00035493631730787456
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of the countries that are in the continent of Europe and have a population of 80000?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.cont",
            "select country.Name, country.popn",
            "select country.Name, country.Region"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "city country",
            "city sqlite_sequence country",
            "sqlite_sequence country"
        ],
        "align_scores": [
            0.9595640897750854,
            0.001315632718615234,
            0.00035137092345394194,
            0.00010634396312525496,
            0.00024015031522139907,
            0.00012586353113874793,
            0.0002299614279763773,
            9.96403832687065e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give the names of countries that are in Europe and have a population equal to 80000.",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.cont",
            "select country.Name, country.Region",
            "select country.Name, country.Region, country.popn"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "city country"
        ],
        "align_scores": [
            0.8918541669845581,
            0.0005018131341785192,
            0.0002607603673823178,
            7.412818376906216e-05,
            0.0001932177838170901,
            7.36175206839107e-05,
            0.00014754553558304906,
            6.791801570216194e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the total population and average area of countries in the continent of North America whose area is bigger than 3000?",
        "gold_select": "select sum(country.popn), avg(country.sa)",
        "select_candidates": [
            "select sum(country.popn), avg(country.sa)",
            "select sum(country.popn), avg(country.popn)",
            "select sum(country.popn), avg(country.GNP)",
            "select sum(country.popn), avg(country.IndepYear)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9242069721221924,
            0.0013756289845332503,
            0.0012801277916878462,
            0.0001877664471976459,
            0.9522762298583984,
            0.0024075794499367476,
            0.0007458434556610882,
            0.0002707043895497918
        ],
        "align_select": "select sum(country.popn), avg(country.sa)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give the total population and average surface area corresponding to countries in North America that have a surface area greater than 3000.",
        "gold_select": "select sum(country.popn), avg(country.sa)",
        "select_candidates": [
            "select sum(country.popn), avg(country.sa)",
            "select sum(country.popn), avg(country.popn)",
            "select sum(country.popn), avg(country.GNP)",
            "select avg(country.popn), sum(country.popn)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9426682591438293,
            0.0005009715096093714,
            0.003492967924103141,
            0.0002682047488633543,
            0.006621851120144129,
            0.00030631525442004204,
            0.0028091189451515675,
            0.0002473738859407604
        ],
        "align_select": "select sum(country.popn), avg(country.sa)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the cities whose population is between 160000 and 900000?",
        "gold_select": "select city.Name",
        "select_candidates": [
            "select city.Name",
            "select city.ID, city.Name",
            "select city.Name, city.cntry_code",
            "select city.Name, city.dist"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "city",
        "table_candidates": [
            "city",
            "city country"
        ],
        "align_scores": [
            0.9741663932800293,
            0.00026226683985441923,
            0.0002805459371302277,
            0.00010489388660062104,
            0.0002775280154310167,
            0.00010891663987422362,
            0.0001680400309851393,
            8.567969052819535e-05
        ],
        "align_select": "select city.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the names of cities that have a population between 160000 and 900000.",
        "gold_select": "select city.Name",
        "select_candidates": [
            "select city.Name",
            "select city.Name, city.cntry_code",
            "select city.Name, city.dist",
            "select city.ID, city.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "city",
        "table_candidates": [
            "city",
            "city country"
        ],
        "align_scores": [
            0.9882296323776245,
            0.0002433513873256743,
            0.00022969192650634795,
            7.162143447203562e-05,
            0.00014441179519053549,
            5.717063322663307e-05,
            0.00017898956139106303,
            7.761482265777886e-05
        ],
        "align_select": "select city.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which language is spoken by the largest number of countries?",
        "gold_select": "select countrylanguage.lang",
        "select_candidates": [
            "select countrylanguage.lang",
            "select countrylanguage.lang, country.Name",
            "select countrylanguage.lang, country.Capital",
            "select countrylanguage.lang, country.Code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "countrylanguage",
            "sqlite_sequence countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9921444654464722,
            8.517169044353068e-05,
            0.004269550088793039,
            6.55883050058037e-05,
            0.0007869850960560143,
            6.326846778392792e-05,
            0.0012534118723124266,
            6.743540870957077e-05
        ],
        "align_select": "select countrylanguage.lang",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Give the language that is spoken in the most countries.",
        "gold_select": "select countrylanguage.lang",
        "select_candidates": [
            "select countrylanguage.lang",
            "select countrylanguage.lang, country.Capital",
            "select countrylanguage.lang, country.Name",
            "select countrylanguage.lang, country.Code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "countrylanguage",
            "sqlite_sequence countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9946223497390747,
            8.65858091856353e-05,
            0.00034767595934681594,
            5.973843144602142e-05,
            0.002514088060706854,
            6.297988147707656e-05,
            0.0008583058370277286,
            6.441106233978644e-05
        ],
        "align_select": "select countrylanguage.lang",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the language spoken by the largest percentage of people in each country?",
        "gold_select": "select countrylanguage.lang, countrylanguage.cntry_code, max(countrylanguage.pct)",
        "select_candidates": [
            "select countrylanguage.lang",
            "select countrylanguage.lang, country.cont",
            "select countrylanguage.lang, country.Capital",
            "select countrylanguage.lang, country.popn"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9916433691978455,
            7.700484275119379e-05,
            0.0651058629155159,
            6.678380304947495e-05,
            0.0008189279469661415,
            6.124720675870776e-05,
            0.0018718873616307974,
            6.119315366959199e-05
        ],
        "align_select": "select countrylanguage.lang",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What are the country codes of the different countries, and what are the languages spoken by the greatest percentage of people for each?",
        "gold_select": "select countrylanguage.lang, countrylanguage.cntry_code, max(countrylanguage.pct)",
        "select_candidates": [
            "select country.Code, countrylanguage.lang",
            "select country.Name, countrylanguage.lang",
            "select countrylanguage.cntry_code, countrylanguage.lang",
            "select country.Code, country.Name"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.9756715297698975,
            8.58033963595517e-05,
            0.00034457709989510477,
            0.00011022202670574188,
            0.9824864864349365,
            8.516748494002968e-05,
            0.5654302835464478,
            7.560547237517312e-05
        ],
        "align_select": "select country.Code, countrylanguage.lang",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the total number of countries where Spanish is spoken by the largest percentage of people?",
        "gold_select": "select count(*), max(countrylanguage.pct)",
        "select_candidates": [
            "select count(*)",
            "select count(*), countrylanguage.cntry_code",
            "select count(*), country.Name",
            "select count(*), country.Name, country.cont"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.9555000066757202,
            0.010027590207755566,
            0.0014703121269121766,
            0.0053720842115581036,
            0.0010187877342104912,
            0.0035981968976557255,
            0.00023309340758714825,
            0.000152642372995615
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Count the number of countries for which Spanish is the predominantly spoken language.",
        "gold_select": "select count(*), max(countrylanguage.pct)",
        "select_candidates": [
            "select count(*)",
            "select count(*), countrylanguage.cntry_code",
            "select count(distinct countrylanguage.cntry_code)",
            "select count(distinct country.Name)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "countrylanguage",
        "table_candidates": [
            "countrylanguage",
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.9916129112243652,
            7.121213275240734e-05,
            0.0004811736580450088,
            7.376129360636696e-05,
            0.9081106781959534,
            6.517740985145792e-05,
            0.10303424298763275,
            5.992579826852307e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the codes of countries where Spanish is spoken by the largest percentage of people?",
        "gold_select": "select countrylanguage.cntry_code, max(countrylanguage.pct)",
        "select_candidates": [
            "select country.Code",
            "select country.Name, country.Code",
            "select country.Name, country.Code2",
            "select country.Name, country.cont"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.9816455841064453,
            0.9815635681152344,
            0.001165725407190621,
            0.0031707140151411295,
            0.000636354903690517,
            0.0016266604652628303,
            0.0009286148706451058,
            0.001942155882716179
        ],
        "align_select": "select country.Code",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT"
    },
    {
        "question": "Return the codes of countries for which Spanish is the predominantly spoken language.",
        "gold_select": "select countrylanguage.cntry_code, max(countrylanguage.pct)",
        "select_candidates": [
            "select country.Code",
            "select country.Name, countrylanguage.cntry_code",
            "select country.Name, country.Code",
            "select country.Name, country.Code2"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "countrylanguage",
        "table_candidates": [
            "countrylanguage",
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.9836951494216919,
            8.971072384156287e-05,
            0.00027049588970839977,
            6.830656639067456e-05,
            0.0002219725283794105,
            5.867519212188199e-05,
            0.0001813112321542576,
            7.01780736562796e-05
        ],
        "align_select": "select country.Code",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which continent is Anguilla in?",
        "gold_select": "select country.cont",
        "select_candidates": [
            "select country.cont",
            "select country.cont, country.Region",
            "select distinct country.cont",
            "select country.cont (http://country.cont)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "sqlite_sequence country",
            "city country",
            "city sqlite_sequence country"
        ],
        "align_scores": [
            0.9953605532646179,
            0.0002787488920148462,
            0.00024847444728948176,
            7.836918666725978e-05,
            0.08713696897029877,
            0.0002773283631540835,
            0.2986438572406769,
            0.00010418232704978436
        ],
        "align_select": "select country.cont",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the continent name which Anguilla belongs to?",
        "gold_select": "select country.cont",
        "select_candidates": [
            "select country.cont",
            "select country.Code, country.cont",
            "select country.Code, country.Name",
            "select country.cont, country.Region"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "sqlite_sequence country",
            "city sqlite_sequence country",
            "city country"
        ],
        "align_scores": [
            0.9953398704528809,
            0.00015877830446697772,
            0.0002183711330872029,
            8.167789928847924e-05,
            0.00018202541104983538,
            8.782518125372007e-05,
            0.00024732601013965905,
            7.725189789198339e-05
        ],
        "align_select": "select country.cont",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which region is the city Kabul located in?",
        "gold_select": "select country.Region",
        "select_candidates": [
            "select country.Region",
            "select country.Region, city.cntry_code",
            "select country.Name, city.cntry_code",
            "select country.Region (city.cntry_code)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "city country",
        "table_candidates": [
            "city country"
        ],
        "align_scores": [
            0.9959432482719421,
            0.00014211413508746773,
            0.00030821049585938454,
            8.240344322985038e-05,
            0.0002164596226066351,
            7.391352119157091e-05,
            0.000605205015745014,
            0.00010510674474062398
        ],
        "align_select": "select country.Region",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What region is Kabul in?",
        "gold_select": "select country.Region",
        "select_candidates": [
            "select country.Region",
            "select country.Region, city.cntry_code",
            "select country.Region, city.Name",
            "select distinct country.Region"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "city country",
        "table_candidates": [
            "city country"
        ],
        "align_scores": [
            0.995927631855011,
            0.00012034205428790301,
            0.0003325528814457357,
            8.295201405417174e-05,
            0.00018699924112297595,
            7.51633633626625e-05,
            0.03511502221226692,
            0.00021626712987199426
        ],
        "align_select": "select country.Region",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which language is the most popular in Aruba?",
        "gold_select": "select countrylanguage.Language",
        "select_candidates": [
            "select countrylanguage.Language",
            "select countrylanguage.Language, country.LocalName",
            "select countrylanguage.Language, country.Code",
            "select countrylanguage.Language, country.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9949219822883606,
            0.991671621799469,
            0.0003116635780315846,
            0.00041601949487812817,
            0.00025171227753162384,
            0.0003114221035502851,
            0.00023336826416198164,
            0.0002602048043627292
        ],
        "align_select": "select countrylanguage.Language",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT"
    },
    {
        "question": "What language is predominantly spoken in Aruba?",
        "gold_select": "select countrylanguage.Language",
        "select_candidates": [
            "select countrylanguage.Language",
            "select countrylanguage.Language, country.LocalName",
            "select countrylanguage.Language, country.Code",
            "select countrylanguage.Language, country.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9934055805206299,
            0.00861097127199173,
            0.0003557350719347596,
            0.00020583874720614403,
            0.00029121674015186727,
            0.0001806733780540526,
            0.0003072066174354404,
            0.0001736900012474507
        ],
        "align_select": "select countrylanguage.Language",
        "align_structure": "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What are the population and life expectancies in Brazil?",
        "gold_select": "select country.popn, country.le",
        "select_candidates": [
            "select country.popn, country.le",
            "select country.Code, country.popn, country.le",
            "select country.Code, country.Name, country.popn, country.le",
            "select country.Code, country.Name, country.popn"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "city country",
            "city sqlite_sequence country",
            "sqlite_sequence country",
            "country countrylanguage"
        ],
        "align_scores": [
            0.9856101870536804,
            0.00025317809195257723,
            0.00024409779871348292,
            9.716820932226256e-05,
            0.00022076965251471847,
            0.0001063060262822546,
            0.00024312759342137724,
            0.00013867911184206605
        ],
        "align_select": "select country.popn, country.le",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give me Brazil\u2019s population and life expectancies.",
        "gold_select": "select country.popn, country.le",
        "select_candidates": [
            "select country.popn, country.le",
            "select country.Code, country.popn, country.le",
            "select country.Code, country.Name, country.popn, country.le",
            "select country.Name, country.popn, country.le"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "city country"
        ],
        "align_scores": [
            0.9825577139854431,
            7.939603528939188e-05,
            0.00022183118562679738,
            8.138355042319745e-05,
            0.00018525471386965364,
            7.110519800335169e-05,
            0.00019608168804552406,
            8.068299939623103e-05
        ],
        "align_select": "select country.popn, country.le",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the region and population of Angola?",
        "gold_select": "select country.popn, country.Region",
        "select_candidates": [
            "select country.Region, country.popn",
            "select country.Name, country.Region, country.popn",
            "select country.cont, country.Region, country.popn",
            "select country.Region, country.popn, country.Capital"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "city country",
            "city sqlite_sequence country",
            "sqlite_sequence country"
        ],
        "align_scores": [
            0.991285502910614,
            0.00044126700959168375,
            0.0002360421494813636,
            7.821799226803705e-05,
            0.00030571743263863027,
            8.172090747393668e-05,
            0.00027531402884051204,
            7.573564653284848e-05
        ],
        "align_select": "select country.Region, country.popn",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What region does Angola belong to and what is its population?",
        "gold_select": "select country.popn, country.Region",
        "select_candidates": [
            "select country.Region, country.popn",
            "select country.Name, country.Region, country.popn",
            "select country.cont, country.Region, country.popn",
            "select country.Region, country.popn, country.le"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "city country",
            "sqlite_sequence country",
            "city sqlite_sequence country"
        ],
        "align_scores": [
            0.9900133609771729,
            0.00010969294817186892,
            0.0001979296503122896,
            8.574541425332427e-05,
            0.00015980903117451817,
            8.243400952778757e-05,
            0.00019397481810301542,
            5.823314859298989e-05
        ],
        "align_select": "select country.Region, country.popn",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the average expected life expectancy for countries in the region of Central Africa?",
        "gold_select": "select avg(country.le)",
        "select_candidates": [
            "select avg(country.le)",
            "select an avg(country.le)",
            "select  avg(country.le)",
            "select avg(country.GNP)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "country countrylanguage",
            "sqlite_sequence country",
            "city country"
        ],
        "align_scores": [
            0.995487630367279,
            0.0001513862662250176,
            0.0004294531827326864,
            0.00013377581490203738,
            0.995487630367279,
            0.0001513862662250176,
            0.9939670562744141,
            0.00016796539421193302
        ],
        "align_select": "select avg(country.le)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How long is the people\u2019s average life expectancy in Central Africa?",
        "gold_select": "select avg(country.le)",
        "select_candidates": [
            "select avg(country.le)",
            "select avg(country.popn)",
            "select avg(country.GNP)",
            "select an avg(country.le)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9960261583328247,
            8.393054304178804e-05,
            0.03311219438910484,
            8.412686293013394e-05,
            0.9939297437667847,
            8.88162903720513e-05,
            0.0004488907870836556,
            0.00010797395225381479
        ],
        "align_select": "select avg(country.le)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the name of country that has the shortest life expectancy in Asia?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.cont",
            "select country.Name, country.Region",
            "select country.Name, country.popn"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "country countrylanguage"
        ],
        "align_scores": [
            0.9908233880996704,
            0.0002901099796872586,
            0.0006038380088284612,
            9.93670109892264e-05,
            0.00024537419085390866,
            0.00012181257625343278,
            0.00023262361355591565,
            9.545404464006424e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT"
    },
    {
        "question": "Give the name of the country in Asia with the lowest life expectancy.",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.cont",
            "select country.Name, country.le",
            "select country.Name, country.Region"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "country countrylanguage"
        ],
        "align_scores": [
            0.9912881255149841,
            0.00024138441949617118,
            0.0005083321593701839,
            8.476641232846305e-05,
            0.001168017857708037,
            8.314666774822399e-05,
            0.00021274448954500258,
            9.946220961865038e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT"
    },
    {
        "question": "What is the total population and maximum GNP in Asia?",
        "gold_select": "select sum(country.popn), max(country.GNP)",
        "select_candidates": [
            "select sum(country.popn), max(country.GNP)",
            "select max(country.GNP), sum(country.popn)",
            "select country.popn, max(country.GNP)",
            "select max(country.GNP), total(country.popn)"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9949496984481812,
            0.00011074626672780141,
            0.9939489364624023,
            9.802647400647402e-05,
            0.445158451795578,
            0.00015176318993326277,
            0.002221902133896947,
            0.00014449541049543768
        ],
        "align_select": "select sum(country.popn), max(country.GNP)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many people live in Asia, and what is the largest GNP among them?",
        "gold_select": "select sum(country.popn), max(country.GNP)",
        "select_candidates": [
            "select country.popn, country.GNP",
            "select country.Code, country.popn, country.GNP",
            "select country.Name, country.popn",
            "select country.Code, country.popn"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.7356204390525818,
            0.17258930206298828,
            0.00023041179520078003,
            0.00028385251061990857,
            0.0003688603173941374,
            0.0012021763250231743,
            0.0008310814737342298,
            0.002009933814406395
        ],
        "align_select": "select country.popn, country.GNP",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT"
    },
    {
        "question": "What is the average life expectancy in African countries that are republics?",
        "gold_select": "select avg(country.le)",
        "select_candidates": [
            "select avg(country.le)",
            "select an avg(country.le)",
            "select avg(country.GNP)",
            "select avg(country.popn)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "country countrylanguage",
            "sqlite_sequence country"
        ],
        "align_scores": [
            0.9965831637382507,
            0.00018019680283032358,
            0.0004610825562849641,
            0.00012008265184704214,
            0.9946178793907166,
            0.00020220654550939798,
            0.0006950707756914198,
            0.0001293716486543417
        ],
        "align_select": "select avg(country.le)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give the average life expectancy for countries in Africa which are republics?",
        "gold_select": "select avg(country.le)",
        "select_candidates": [
            "select avg(country.le)",
            "select avg(country.GNP)",
            "select an avg(country.le)",
            "select avg(country.popn)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "country countrylanguage",
            "sqlite_sequence country"
        ],
        "align_scores": [
            0.9967447519302368,
            0.00013355773990042508,
            0.9957276582717896,
            0.0001439635962015018,
            0.0004388164379633963,
            0.0001307663187617436,
            0.000744377844966948,
            0.0001454130542697385
        ],
        "align_select": "select avg(country.le)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the total surface area of the continents Asia and Europe?",
        "gold_select": "select sum(country.SurfaceArea)",
        "select_candidates": [
            "select sum(country.SurfaceArea)",
            "select sum(country.SurfaceArea), country.cont",
            "select sum(country.SurfaceArea) def. country.cont",
            "select sum(country.SurfaceArea), country.cont"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "city country",
            "sqlite_sequence country",
            "country countrylanguage"
        ],
        "align_scores": [
            0.9965586066246033,
            0.0003860041906591505,
            0.00014886829012539238,
            0.00010200936230830848,
            0.00023215607507154346,
            0.00014662857574876398,
            0.00014886829012539238,
            0.00010200936230830848
        ],
        "align_select": "select sum(country.SurfaceArea)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give the total surface area covered by countries in Asia or Europe.",
        "gold_select": "select sum(country.SurfaceArea)",
        "select_candidates": [
            "select sum(country.SurfaceArea)",
            "select sum(country.SurfaceArea), country.cont",
            "select sum(country.SurfaceArea), country.IndepYear",
            "select sum(country.SurfaceArea), country.Region"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "city country"
        ],
        "align_scores": [
            0.996503472328186,
            0.002116033574566245,
            0.00013148864672984928,
            9.41351245273836e-05,
            0.00011507957242429256,
            0.00016069284174591303,
            0.00017050998576451093,
            0.0002907628659158945
        ],
        "align_select": "select sum(country.SurfaceArea)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the average GNP and total population in all nations whose government is US territory?",
        "gold_select": "select avg(country.GNP), sum(country.popn)",
        "select_candidates": [
            "select avg(country.GNP), avg(country.popn)",
            "select avg(country.GNP), sum(country.popn)",
            "select avg(country.popn), avg(country.GNP)",
            "select avg(country.le), avg(country.popn)"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9605615735054016,
            0.0004468583792913705,
            0.9876042604446411,
            0.0009401481365785003,
            0.978617250919342,
            0.0007926365942694247,
            0.00032570029725320637,
            0.0001281684380955994
        ],
        "align_select": "select avg(country.GNP), avg(country.popn)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give the mean GNP and total population of nations which are considered US territory.",
        "gold_select": "select avg(country.GNP), sum(country.popn)",
        "select_candidates": [
            "select avg(country.GNP), sum(country.popn)",
            "select avg(country.popn), sum(country.popn)",
            "select avg(country.le), sum(country.popn)",
            "select an avg(country.GNP), sum(country.popn)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9961826205253601,
            0.00046083691995590925,
            0.06267823278903961,
            0.00017791434947866946,
            0.00042534308158792555,
            0.00014740589540451765,
            0.0003549839893821627,
            0.00014833324530627578
        ],
        "align_select": "select avg(country.GNP), sum(country.popn)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many type of governments are in Africa?",
        "gold_select": "select count(distinct country.GovernmentForm)",
        "select_candidates": [
            "select count(distinct country.GovernmentForm)",
            "select count(distinct country.Name)",
            "select count(distinct country.GovernmentForm",
            "select count(distinct country.IndepYear)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "sqlite_sequence country",
            "city country",
            "country countrylanguage"
        ],
        "align_scores": [
            0.9923139214515686,
            9.693537140265107e-05,
            0.018460864201188087,
            8.291973790619522e-05,
            0.33534789085388184,
            0.0001562342222314328,
            0.0005738649051636457,
            8.828161662677303e-05
        ],
        "align_select": "select count(distinct country.GovernmentForm)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many different forms of governments are there in Africa?",
        "gold_select": "select count(distinct country.GovernmentForm)",
        "select_candidates": [
            "select count(distinct country.GovernmentForm)",
            "select count(distinct country.Name)",
            "select count(distinct country.GovernmentForm",
            "select count(distinct country.LocalName)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9953027963638306,
            0.00016050110571086407,
            0.06607082486152649,
            9.18320074561052e-05,
            0.4770737886428833,
            0.00028408615617081523,
            0.012495576404035091,
            0.00011521625856403261
        ],
        "align_select": "select count(distinct country.GovernmentForm)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many official languages does Afghanistan have?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(distinct countrylanguage.Language)",
            "select count(distinct countrylanguage.ofcl)",
            "select count(distinct countrylanguage.Language, countrylanguage.ofcl)",
            "select count(distinct countrylanguage.Language, count(distinct countrylanguage.ofcl)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9948210716247559,
            6.52025337330997e-05,
            0.992379903793335,
            6.427460175473243e-05,
            0.00022849818924441934,
            5.969002086203545e-05,
            0.00014349844423122704,
            7.364461635006592e-05
        ],
        "align_select": "select count(distinct countrylanguage.Language)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many official languages are spoken in Afghanistan?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(distinct countrylanguage.Language)",
            "select count(distinct countrylanguage.ofcl)",
            "select count(distinct countrylanguage.Language, count(distinct countrylanguage.ofcl)",
            "select count(distinct countrylanguage.Language, countrylanguage.ofcl)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9818145632743835,
            0.0001377347216475755,
            0.9924983382225037,
            0.0001190201728604734,
            0.00013082117948215455,
            8.818586502457038e-05,
            0.00023984712606761605,
            8.694473217474297e-05
        ],
        "align_select": "select count(distinct countrylanguage.Language)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which continent has the most diverse languages?",
        "gold_select": "select country.cont",
        "select_candidates": [
            "select country.cont",
            "select country.cont, countrylanguage.pct",
            "select country.Name",
            "select country.Code, country.cont"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.994168758392334,
            6.38550118310377e-05,
            0.0010258284164592624,
            6.354224751703441e-05,
            0.30062976479530334,
            8.134709787555039e-05,
            0.0005650236853398383,
            6.80101802572608e-05
        ],
        "align_select": "select country.cont",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Which continent speaks the most languages?",
        "gold_select": "select country.cont",
        "select_candidates": [
            "select country.cont",
            "select country.cont, countrylanguage.pct",
            "select country.Code, country.cont",
            "select country.cont, country.Region"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9950441122055054,
            7.667218596907333e-05,
            0.0006618273910135031,
            6.312743062153459e-05,
            0.00047431979328393936,
            7.085110701154917e-05,
            0.0006519305752590299,
            6.105640932219103e-05
        ],
        "align_select": "select country.cont",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What are the names of nations where both English and French are official languages?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, countrylanguage.Language",
            "select country.Name, country.Capital",
            "select country.Name, countrylanguage.CountryCode"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.9944774508476257,
            0.0023818337358534336,
            0.0002646175562404096,
            0.00010405354987597093,
            0.00021406973246484995,
            0.0001026144454954192,
            0.0004511794832069427,
            0.00014193184324540198
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "Give the names of countries with English and French as official languages.",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, countrylanguage.ofcl",
            "select country.Name, countrylanguage.Language",
            "select country.Name, country.Capital"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage"
        ],
        "align_scores": [
            0.9956178665161133,
            0.0008022414403967559,
            0.0002779792994260788,
            9.458709246246144e-05,
            0.0001883481309050694,
            7.464664668077603e-05,
            0.00024065503384917974,
            9.521813626633957e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "What is the number of distinct continents where Chinese is spoken?",
        "gold_select": "select count(distinct country.cont)",
        "select_candidates": [
            "select count(distinct country.cont)",
            "select count(distinct countrylanguage.ofcl)",
            "select count(distinct country.Name)",
            "select count(distinct country.popn)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.9952200055122375,
            0.0003565621445886791,
            0.01800685003399849,
            0.00045909208711236715,
            0.00117464829236269,
            0.00021273230959195644,
            0.00038808200042694807,
            0.00010097499034600332
        ],
        "align_select": "select count(distinct country.cont)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many continents speak Chinese?",
        "gold_select": "select count(distinct country.cont)",
        "select_candidates": [
            "select count(distinct country.cont)",
            "select count(continents)",
            "select count(distinct country.Code)",
            "select count(*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence countrylanguage",
            "countrylanguage"
        ],
        "align_scores": [
            0.9044867157936096,
            0.00026550859911367297,
            0.6651768088340759,
            0.00019857878214679658,
            0.003408425487577915,
            9.255121403839439e-05,
            0.9846463799476624,
            0.0026095726061612368
        ],
        "align_select": "select count(distinct country.cont)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the countries where either English or Dutch is the official language?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, countrylanguage.CountryCode",
            "select country.Name, country.Code",
            "select country.Name, country.cont"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "countrylanguage",
            "sqlite_sequence country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.9091584086418152,
            0.008379027247428894,
            0.0012927578063681722,
            0.00023815175518393517,
            0.00099596893414855,
            0.0001846526429289952,
            0.0003553898131940514,
            0.00011998580157523975
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which countries have either English or Dutch as an official language?",
        "gold_select": "select *",
        "select_candidates": [
            "select country.Name",
            "select country.Name, countrylanguage.CountryCode",
            "select country.Name, country.Code",
            "select country.Name, country.cont"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.9339724183082581,
            0.011120518669486046,
            0.0009457009728066623,
            0.00025381179875694215,
            0.0012195935705676675,
            0.0002266953233629465,
            0.00034693858469836414,
            0.00012180409248685464
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which language is the most popular on the Asian continent?",
        "gold_select": "select countrylanguage.Language",
        "select_candidates": [
            "select countrylanguage.Language",
            "select countrylanguage.Language, country.Code",
            "select countrylanguage.Language, country.cont",
            "select countrylanguage.Language, country.popn"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.9940105080604553,
            0.9940928816795349,
            0.0002429225278319791,
            0.0003269363078288734,
            0.0002500923292245716,
            0.0004952691379003227,
            0.0003628888516686857,
            0.0011039657983928919
        ],
        "align_select": "select countrylanguage.Language",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT"
    },
    {
        "question": "What is the language that is used by the largest number of Asian nations?",
        "gold_select": "select countrylanguage.Language",
        "select_candidates": [
            "select countrylanguage.Language",
            "select countrylanguage.Language, country.Code",
            "select countrylanguage.Language, country.Name",
            "select countrylanguage.Language, country.Capital"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.9928207993507385,
            0.00013152552128303796,
            0.0007691628998145461,
            8.408933354075998e-05,
            0.0013540441868826747,
            8.126893226290122e-05,
            0.00036742610973306,
            7.130428275559098e-05
        ],
        "align_select": "select countrylanguage.Language",
        "align_structure": "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Find the city with the largest population that uses English.",
        "gold_select": "select city.Name, city.Population",
        "select_candidates": [
            "select city.Name",
            "select city.Name, countrylanguage.Language",
            "select city.ID, city.Name",
            "select city.Name, countrylanguage.ofcl"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "city countrylanguage",
        "table_candidates": [
            "city countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.9854421615600586,
            0.9802011847496033,
            0.0009877467527985573,
            0.0024781760293990374,
            0.0005970880738459527,
            0.0007859509205445647,
            0.0007389653474092484,
            0.002176155336201191
        ],
        "align_select": "select city.Name",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT"
    },
    {
        "question": "What is the most populace city that speaks English?",
        "gold_select": "select city.Name, city.Population",
        "select_candidates": [
            "select city.Name",
            "select city.Name, countrylanguage.Language",
            "select city.ID, city.Name",
            "select city.Name, countrylanguage.ofcl"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "city countrylanguage",
        "table_candidates": [
            "city countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.0001238840923178941,
            0.01298059243708849,
            8.497456292388961e-05,
            0.00017430218576919287,
            7.231941708596423e-05,
            0.00015596971206832677,
            8.193613030016422e-05,
            0.00016733027587179095
        ],
        "align_select": "select city.Name",
        "align_structure": "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
    },
    {
        "question": "Find the name, population and expected life length of asian country with the largest area?",
        "gold_select": "select country.Name, country.popn, country.le",
        "select_candidates": [
            "select country.Name, country.popn, country.le",
            "select country.Name, country.IndepYear, country.popn, country.le",
            "select country.Name, country.Code, country.popn, country.le",
            "select country.Name, country.popn, country.le"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9669592976570129,
            0.9848665595054626,
            0.000858694373164326,
            0.0008405645494349301,
            0.0005484081339091063,
            0.0019646091386675835,
            0.9669592976570129,
            0.9848665595054626
        ],
        "align_select": "select country.Name, country.popn, country.le",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the name, population, and life expectancy of the largest Asian country by land?",
        "gold_select": "select country.Name, country.popn, country.le",
        "select_candidates": [
            "select country.Name, country.popn, country.le",
            "select country.Name, country.IndepYear, country.popn, country.le",
            "select country.Name, country.Code, country.popn, country.le",
            "select country.Name, country.popn, country.le"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9699230194091797,
            0.000541809422429651,
            0.0026257107965648174,
            9.787291492102668e-05,
            0.0013957057381048799,
            0.00012694421457126737,
            0.9699230194091797,
            0.000541809422429651
        ],
        "align_select": "select country.Name, country.popn, country.le",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is average life expectancy in the countries where English is not the official language?",
        "gold_select": "select avg(country.le)",
        "select_candidates": [
            "select avg(country.le)",
            "select avg(t3.c7)",
            "select an avg(country.le)",
            "select avg(country.GNP)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.9952768087387085,
            0.00024488545022904873,
            0.0006284290575422347,
            0.0001579994714120403,
            0.00044794013956561685,
            0.0001426812814315781,
            0.9691985249519348,
            0.00032375144655816257
        ],
        "align_select": "select avg(country.le)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give the mean life expectancy of countries in which English is not the official language.",
        "gold_select": "select avg(country.le)",
        "select_candidates": [
            "select avg(country.le)",
            "select an avg(country.le)",
            "select m.avg(country.le)",
            "select avg(t3.c7)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.9962922930717468,
            0.0001164530185633339,
            0.00039901561103761196,
            0.00011049900786019862,
            0.0013708417536690831,
            0.00012586064985953271,
            0.0004791010287590325,
            0.00014685526548419148
        ],
        "align_select": "select avg(country.le)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the total number of people living in the nations that do not use English?",
        "gold_select": "select sum(country.popn)",
        "select_candidates": [
            "select sum(country.popn)",
            "select sum(country.popn), countrylanguage.Language",
            "select sum(country.popn), countrylanguage.CountryCode",
            "select sum(country.popn), countrylanguage.Language"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "sqlite_sequence countrylanguage",
            "country"
        ],
        "align_scores": [
            0.9904263615608215,
            0.0010648734169080853,
            0.00017312861746177077,
            0.0007544420659542084,
            0.00014492165064439178,
            0.0029342316556721926,
            0.00017312861746177077,
            0.0007544420659542084
        ],
        "align_select": "select sum(country.popn)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many people live in countries that do not speak English?",
        "gold_select": "select sum(country.popn)",
        "select_candidates": [
            "select sum(country.popn)",
            "select count(*)",
            "select count(country.popn)",
            "select country.popn"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.8769401907920837,
            7.616136281285435e-05,
            0.9891139268875122,
            0.0001024914308800362,
            0.03566574305295944,
            8.135825919453055e-05,
            0.9061970114707947,
            0.00019094401795882732
        ],
        "align_select": "select sum(country.popn)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the official language spoken in the country whose head of state is Beatrix?",
        "gold_select": "select countrylanguage.Language",
        "select_candidates": [
            "select countrylanguage.Language",
            "select countrylanguage.Language, country.le",
            "select countrylanguage.Language, countrylanguage.ofcl",
            "select countrylanguage.Language, country.cont"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.994281530380249,
            0.00019474349392112345,
            0.0005590772489085793,
            8.433281618636101e-05,
            0.00037754542427137494,
            7.760157313896343e-05,
            0.0002581560402177274,
            7.547077257186174e-05
        ],
        "align_select": "select countrylanguage.Language",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the official language used in the country the name of whose head of state is Beatrix.",
        "gold_select": "select countrylanguage.Language",
        "select_candidates": [
            "select countrylanguage.Language",
            "select countrylanguage.Language, countrylanguage.ofcl",
            "select countrylanguage.Language, country.le",
            "select countrylanguage.Language, country.hos"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.994738757610321,
            0.00014149377238936722,
            0.00035441116779111326,
            7.646948506589979e-05,
            0.0005526890745386481,
            7.85547454142943e-05,
            0.00036037765676155686,
            7.623386773047969e-05
        ],
        "align_select": "select countrylanguage.Language",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the total number of unique official languages spoken in the countries that are founded before 1930?",
        "gold_select": "select count(distinct countrylanguage.Language)",
        "select_candidates": [
            "select count(distinct countrylanguage.Language)",
            "select count(distinct countrylanguage.ofcl)",
            "select count(distinct countrylanguage.Language, count(distinct countrylanguage.ofcl)",
            "select count(distinct countrylanguage.Language, countrylanguage.ofcl)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.993217408657074,
            0.00033036115928553045,
            0.9911600947380066,
            0.00032512666075490415,
            0.0001454593730159104,
            0.00010842554911505431,
            0.0002901857369579375,
            0.00011670425737975165
        ],
        "align_select": "select count(distinct countrylanguage.Language)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "For the countries founded before 1930, what is the total number of distinct official languages?",
        "gold_select": "select count(distinct countrylanguage.Language)",
        "select_candidates": [
            "select count(distinct countrylanguage.ofcl)",
            "select count(distinct countrylanguage.Language)",
            "select count(distinct countrylanguage.Language, count(distinct countrylanguage.ofcl)",
            "select count(distinct countrylanguage.Language, countrylanguage.ofcl)"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage"
        ],
        "align_scores": [
            0.9932670593261719,
            0.00034913604031316936,
            0.9946157336235046,
            0.00027345557464286685,
            0.00012990788673050702,
            0.00011396079207770526,
            0.00027144767227582633,
            0.00014521574485115707
        ],
        "align_select": "select count(distinct countrylanguage.ofcl)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the countries that have greater surface area than any country in Europe?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.cont",
            "select country.Name, country.Region",
            "select country.Name, country.SurfaceArea"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.6881667971611023,
            0.008730912581086159,
            0.0004158139054197818,
            0.00017021241365000606,
            0.0003388389013707638,
            0.00015134582645259798,
            0.0004874889855273068,
            0.00017507054144516587
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which countries have greater area than that of any country in Europe?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.cont",
            "select country.Name, country.Region",
            "select country.Name, country.SurfaceArea"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.7101806402206421,
            0.00042277012835256755,
            0.00038341875188052654,
            8.544682350475341e-05,
            0.00029187052859924734,
            8.750400593271479e-05,
            0.0004462990036699921,
            8.742811041884124e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the African countries that have a population less than any country in Asia?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.cont",
            "select country.Name, country.popn",
            "select distinct country.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "sqlite_sequence country",
            "city country",
            "city sqlite_sequence country"
        ],
        "align_scores": [
            0.6452922224998474,
            0.1877032071352005,
            0.00040667038410902023,
            0.0002354420576011762,
            0.0003125863440800458,
            0.00021243114315439016,
            0.1288764625787735,
            0.10659950226545334
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which African countries have a smaller population than that of any country in Asia?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.cont",
            "select country.Code, country.Name",
            "select country.Name, country.popn"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.6418523192405701,
            0.0009224491659551859,
            0.0004259075503796339,
            9.459439752390608e-05,
            0.004233171232044697,
            0.0001733023818815127,
            0.00040705068386159837,
            9.356380178360268e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which Asian countries have a population that is larger than any country in Africa?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.cont",
            "select country.Name, country.popn",
            "select country.Name, country.Region"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.7112459540367126,
            0.0007658321992494166,
            0.0004561650275718421,
            0.00010511976870475337,
            0.00036535135586746037,
            9.915557166095823e-05,
            0.0003397321270313114,
            0.00011568004993023351
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the Asian countries which have a population larger than that of any country in Africa?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.cont",
            "select distinct country.Name",
            "select country.Name, country.popn"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.736194372177124,
            0.10371170192956924,
            0.00036586247733794153,
            0.00018317383364774287,
            0.14539307355880737,
            0.001348678139038384,
            0.0002785528777167201,
            0.00015826044545974582
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which cities are in European countries where English is not the official language?",
        "gold_select": "select distinct city.Name",
        "select_candidates": [
            "select city.Name",
            "select city.ID, city.Name",
            "select city.Name, country.cont",
            "select distinct city.Name"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "city country countrylanguage",
        "table_candidates": [
            "city country countrylanguage",
            "city sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.7999190092086792,
            0.0017327343812212348,
            0.0003474141994956881,
            0.00015475806139875203,
            0.00033189222449436784,
            0.00012949816300533712,
            0.08250637352466583,
            0.0484207421541214
        ],
        "align_select": "select city.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of cities in Europe for which English is not the official language?",
        "gold_select": "select distinct city.Name",
        "select_candidates": [
            "select city.Name",
            "select city.Name, country.cont",
            "select distinct city.Name",
            "select city.Name, country.Name"
        ],
        "select_labels": [
            0.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "city country countrylanguage",
        "table_candidates": [
            "city country countrylanguage",
            "city sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9881308078765869,
            0.0012755454517900944,
            0.0002466515579726547,
            0.00012247168342582881,
            0.024760423228144646,
            0.021037956699728966,
            0.00022000769968144596,
            0.0001340548333246261
        ],
        "align_select": "select city.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which unique cities are in Asian countries where Chinese is the official language?",
        "gold_select": "select distinct city.Name",
        "select_candidates": [
            "select distinct city.Name",
            "select count(*)",
            "select distinct city.ID",
            "select count(distinct city.ID)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "city country countrylanguage",
        "table_candidates": [
            "city country countrylanguage",
            "city sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9801871180534363,
            0.00036284903762862086,
            0.037045884877443314,
            9.56164876697585e-05,
            0.8676100969314575,
            0.00027758334181271493,
            0.01147723849862814,
            7.306640327442437e-05
        ],
        "align_select": "select distinct city.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the different names of cities that are in Asia and for which Chinese is the official language.",
        "gold_select": "select distinct city.Name",
        "select_candidates": [
            "select distinct city.Name",
            "select distinct city.Name, country.Name",
            "select distinct city.Name, countrylanguage.Language",
            "select distinct city.Name, countrylanguage.ofcl"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "city country countrylanguage",
        "table_candidates": [
            "city country countrylanguage",
            "city sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9935991764068604,
            0.00012576083827298135,
            0.00021376153745222837,
            6.301797111518681e-05,
            0.00029001428629271686,
            6.192015280248597e-05,
            0.000492603110615164,
            6.590359407709911e-05
        ],
        "align_select": "select distinct city.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the name, independence year, and surface area of the country with the smallest population?",
        "gold_select": "select country.Name, country.SurfaceArea, country.IndepYear",
        "select_candidates": [
            "select country.Name, country.IndepYear, country.SurfaceArea",
            "select country.Name, country.IndepYear., country.SurfaceArea",
            "select country.Name, country.IndepYear, country.SurfaceArea",
            "select country.Name, country.IndepYear\", country.SurfaceArea"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9922298789024353,
            8.28841730253771e-05,
            0.03752491623163223,
            0.00010773411486297846,
            0.9922298789024353,
            8.28841730253771e-05,
            0.012275617569684982,
            7.993105828063563e-05
        ],
        "align_select": "select country.Name, country.IndepYear, country.SurfaceArea",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Give the name, year of independence, and surface area of the country that has the lowest population.",
        "gold_select": "select country.Name, country.SurfaceArea, country.IndepYear",
        "select_candidates": [
            "select country.Name, country.IndepYear, country.SurfaceArea",
            "select country.Name, country.IndepYear.c4, country.IndepYear",
            "select country.Name, country.IndepYear.c5, country.SurfaceArea",
            "select country.Name, country.IndepYear, country.SurfaceArea"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.987623929977417,
            7.862540951464325e-05,
            0.00041417154716327786,
            8.120416896417737e-05,
            0.0014234152622520924,
            8.027212606975809e-05,
            0.987623929977417,
            7.862540951464325e-05
        ],
        "align_select": "select country.Name, country.IndepYear, country.SurfaceArea",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What are the population, name and leader of the country with the largest area?",
        "gold_select": "select country.Name, country.popn, country.hos",
        "select_candidates": [
            "select country.popn, country.Name, country.le",
            "select country.Code, country.Name, country.le",
            "select country.Name, country.popn, country.le",
            "select country.popn), country.Name, country.le"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9894870519638062,
            9.26704378798604e-05,
            0.0012736425269395113,
            7.773044490022585e-05,
            0.9820097088813782,
            9.682154632173479e-05,
            0.002365236170589924,
            7.159056985983625e-05
        ],
        "align_select": "select country.popn, country.Name, country.le",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Give the name, population, and head of state for the country that has the largest area.",
        "gold_select": "select country.Name, country.popn, country.hos",
        "select_candidates": [
            "select country.Name, country.popn, country.hos",
            "select country.Name, country.popn, country.le",
            "select country.Name, country.popn, country.Capital",
            "select country.Name, country.popn, country.GNP"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9792668223381042,
            9.848782792687416e-05,
            0.0005297848838381469,
            9.676229092292488e-05,
            0.859866201877594,
            0.00012749448069371283,
            0.9358101487159729,
            0.00011324873776175082
        ],
        "align_select": "select country.Name, country.popn, country.hos",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Find the government form name and total population for each government form whose average life expectancy is longer than 72.",
        "gold_select": "select sum(country.popn), country.GovernmentForm",
        "select_candidates": [
            "select country.GovernmentForm, sum(country.popn)",
            "select country.Name, sum(country.popn)",
            "select country.GovernmentForm, count(*)",
            "select country.Name, count(*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "country countrylanguage",
            "city country"
        ],
        "align_scores": [
            0.33714932203292847,
            0.00020720432803500444,
            0.013692968524992466,
            0.00020983706053812057,
            0.36535245180130005,
            0.0002746334648691118,
            0.0003924445481970906,
            0.0002501920098438859
        ],
        "align_select": "select country.GovernmentForm, sum(country.popn)",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the different government forms and what is the total population of each for government forms that have an average life expectancy greater than 72?",
        "gold_select": "select sum(country.popn), country.GovernmentForm",
        "select_candidates": [
            "select country.GovernmentForm, sum(country.popn)",
            "select country.Name, sum(country.popn)",
            "select count(*), country.GovernmentForm",
            "select sum(country.popn), country.GovernmentForm"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "city country",
            "sqlite_sequence country",
            "city sqlite_sequence country"
        ],
        "align_scores": [
            0.9025837779045105,
            0.0001830437540775165,
            0.669795572757721,
            0.00019339639402460307,
            0.8750749826431274,
            0.000220402012928389,
            0.9545727968215942,
            0.00016667868476361036
        ],
        "align_select": "select country.GovernmentForm, sum(country.popn)",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Find the average life expectancy and total population for each continent where the average life expectancy is shorter than 72?",
        "gold_select": "select sum(country.popn), avg(country.le), country.cont",
        "select_candidates": [
            "select avg(country.le), sum(country.popn), country.cont",
            "select country.Name, avg(country.popn)",
            "select country.Name, avg(country.le), sum(country.popn)",
            "select avg(country.popn), sum(country.popn), country.cont"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "sqlite_sequence country"
        ],
        "align_scores": [
            0.5212204456329346,
            0.00017051062604878098,
            0.0008467125589959323,
            8.022192196222022e-05,
            0.010060705244541168,
            9.852313814917579e-05,
            0.00044559501111507416,
            8.115276432363316e-05
        ],
        "align_select": "select avg(country.le), sum(country.popn), country.cont",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the different continents and the total popuation and average life expectancy corresponding to each, for continents that have an average life expectancy less than 72?",
        "gold_select": "select sum(country.popn), avg(country.le), country.cont",
        "select_candidates": [
            "select country.cont, sum(country.popn), avg(country.popn)",
            "select country.Name, sum(country.popn), avg(country.popn)",
            "select country.cont, sum(country.popn), avg(country.le)",
            "select country.cont, count(*), avg(country.popn)"
        ],
        "select_labels": [
            0.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "country countrylanguage",
            "sqlite_sequence country",
            "city country"
        ],
        "align_scores": [
            0.2060212790966034,
            0.00010453570575919002,
            0.02337190881371498,
            9.887815394904464e-05,
            0.2728380560874939,
            0.00012079757289029658,
            0.007395715452730656,
            0.00010884013317991048
        ],
        "align_select": "select country.cont, sum(country.popn), avg(country.popn)",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are names of countries with the top 3 largest population?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Capital",
            "select country.Name, country.cont",
            "select country.Name, country.Region"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9893559813499451,
            5.333628359949216e-05,
            0.0006088515510782599,
            5.579136632150039e-05,
            0.0005656557041220367,
            5.3431074775289744e-05,
            0.0003992954734712839,
            5.564636012422852e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Return the names of the 3 most populated countries.",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Capital",
            "select country.Name, country.popn",
            "select country.Name, country.Region"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9955614805221558,
            5.573526141233742e-05,
            0.0003376711974851787,
            5.078433969174512e-05,
            0.0010952542070299387,
            4.980797166354023e-05,
            0.00017916168144438416,
            5.0795239076251164e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What are the names of the nations with the 3 lowest populations?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Capital",
            "select country.Name, country.popn",
            "select country.Name, country.LocalName"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9886292219161987,
            5.632610555039719e-05,
            0.0003458914870861918,
            5.1557475671870634e-05,
            0.000736912596039474,
            5.0317605200689286e-05,
            0.013493743725121021,
            5.523303843801841e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Return the names of the 3 countries with the fewest people.",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Capital",
            "select country.Name, country.popn",
            "select country.Name, country.Region"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9924893379211426,
            5.236485958448611e-05,
            0.000335477088810876,
            5.052836058894172e-05,
            0.0008802568190731108,
            4.9325841246172786e-05,
            0.0002344946115044877,
            4.932706360705197e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "how many countries are in Asia?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), country.Code",
            "select count(*), country.Name",
            "select count(*), country.cont"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.995347797870636,
            0.00031047165975905955,
            0.0005199190345592797,
            0.0011247146176174283,
            0.00041565424180589616,
            0.0015688951825723052,
            0.00044781481847167015,
            0.00033798362710513175
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Count the number of countries in Asia.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), country.Name",
            "select count(*), country.Code",
            "select count(*), country.Capital"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9957026839256287,
            0.000186585690244101,
            0.0002219086018158123,
            0.0018845576560124755,
            0.00027474295347929,
            0.002342158230021596,
            0.00017326188390143216,
            0.00022022657503839582
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of the countries that are in the continent of Europe and have a population of 80000?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.popn",
            "select country.Name, country.cont",
            "select country.Name, country.Region"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "city country",
            "city sqlite_sequence country",
            "sqlite_sequence country"
        ],
        "align_scores": [
            0.9595640897750854,
            0.001315632718615234,
            0.00024015031522139907,
            0.00012586353113874793,
            0.00035137092345394194,
            0.00010634396312525496,
            0.0002299614279763773,
            9.96403832687065e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give the names of countries that are in Europe and have a population equal to 80000.",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.cont",
            "select country.Name, country.popn",
            "select country.Name, country.Region"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "city country"
        ],
        "align_scores": [
            0.8918541669845581,
            0.0005018131341785192,
            0.0002607603673823178,
            7.412818376906216e-05,
            0.00020617953850887716,
            7.07589351804927e-05,
            0.0001932177838170901,
            7.36175206839107e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the total population and average area of countries in the continent of North America whose area is bigger than 3000?",
        "gold_select": "select sum(country.popn), avg(country.SurfaceArea)",
        "select_candidates": [
            "select sum(country.popn), avg(country.SurfaceArea)",
            "select sum(country.popn), avg(country.popn)",
            "select avg(country.popn), sum(country.popn)",
            "select sum(country.popn), avg(country.IndepYear)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9637560844421387,
            0.0007019239128567278,
            0.0012801277916878462,
            0.0001877664471976459,
            0.0024781273677945137,
            0.00015340054233092815,
            0.0007458434556610882,
            0.0002707043895497918
        ],
        "align_select": "select sum(country.popn), avg(country.SurfaceArea)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give the total population and average surface area corresponding to countries in North America that have a surface area greater than 3000.",
        "gold_select": "select sum(country.popn), avg(country.SurfaceArea)",
        "select_candidates": [
            "select sum(country.popn), avg(country.SurfaceArea)",
            "select avg(country.popn), sum(country.popn)",
            "select sum(country.popn), avg(country.popn)",
            "select country.popn, avg(country.SurfaceArea)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.5305790305137634,
            0.00036951160291209817,
            0.0028091189451515675,
            0.0002473738859407604,
            0.003492967924103141,
            0.0002682047488633543,
            0.006705180741846561,
            0.0002556844847276807
        ],
        "align_select": "select sum(country.popn), avg(country.SurfaceArea)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the language spoken by the largest percentage of people in each country?",
        "gold_select": "select countrylanguage.Language, countrylanguage.CountryCode, max(countrylanguage.pct)",
        "select_candidates": [
            "select countrylanguage.Language",
            "select countrylanguage.Language, countrylanguage.pct",
            "select countrylanguage.Language, country.cont",
            "select countrylanguage.Language, country.Capital"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "countrylanguage",
        "table_candidates": [
            "countrylanguage",
            "country countrylanguage",
            "sqlite_sequence countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9938149452209473,
            7.349546649493277e-05,
            0.009496956132352352,
            6.231817678781226e-05,
            0.001567134982906282,
            6.0673675761790946e-05,
            0.0004347547946963459,
            5.7790362916421145e-05
        ],
        "align_select": "select countrylanguage.Language",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What are the country codes of the different countries, and what are the languages spoken by the greatest percentage of people for each?",
        "gold_select": "select countrylanguage.Language, countrylanguage.CountryCode, max(countrylanguage.pct)",
        "select_candidates": [
            "select countrylanguage.CountryCode, countrylanguage.Language",
            "select country.Name, countrylanguage.Language",
            "select country.Code, countrylanguage.Language",
            "select countrylanguage.Language, country.Code"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence countrylanguage",
            "sqlite_sequence country countrylanguage",
            "countrylanguage"
        ],
        "align_scores": [
            0.9758754968643188,
            8.202618482755497e-05,
            0.0002922737621702254,
            0.00010320442379452288,
            0.9752821922302246,
            8.455844363197684e-05,
            0.9847080707550049,
            8.08396507636644e-05
        ],
        "align_select": "select countrylanguage.CountryCode, countrylanguage.Language",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the total number of countries where Spanish is spoken by the largest percentage of people?",
        "gold_select": "select count(*), max(countrylanguage.pct)",
        "select_candidates": [
            "select count(*)",
            "select count(*), countrylanguage.CountryCode",
            "select count(*), country.Name",
            "select count(*), country.Name, country.cont"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "countrylanguage",
            "sqlite_sequence country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.9555000066757202,
            0.010027590207755566,
            0.0018006953177973628,
            0.007015580777078867,
            0.0010187877342104912,
            0.0035981968976557255,
            0.00023309340758714825,
            0.000152642372995615
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Count the number of countries for which Spanish is the predominantly spoken language.",
        "gold_select": "select count(*), max(countrylanguage.pct)",
        "select_candidates": [
            "select count(*)",
            "select count(distinct countrylanguage.CountryCode)",
            "select count(*), countrylanguage.CountryCode",
            "select count(countrylanguage.CountryCode)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "countrylanguage",
        "table_candidates": [
            "countrylanguage",
            "country countrylanguage"
        ],
        "align_scores": [
            0.9916129112243652,
            0.0016613454790785909,
            0.9063711166381836,
            0.00017919552919920534,
            0.0007150219171307981,
            0.005745817441493273,
            0.16104888916015625,
            0.0004988329601474106
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the codes of countries where Spanish is spoken by the largest percentage of people?",
        "gold_select": "select countrylanguage.CountryCode, max(countrylanguage.pct)",
        "select_candidates": [
            "select country.Code",
            "select country.Name, country.Code",
            "select country.Name, country.Code2",
            "select country.Name, country.cont"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "sqlite_sequence countrylanguage",
            "countrylanguage"
        ],
        "align_scores": [
            0.9816455841064453,
            0.9815635681152344,
            0.001165725407190621,
            0.0031707140151411295,
            0.000636354903690517,
            0.0016266604652628303,
            0.0009286148706451058,
            0.001942155882716179
        ],
        "align_select": "select country.Code",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT"
    },
    {
        "question": "Return the codes of countries for which Spanish is the predominantly spoken language.",
        "gold_select": "select countrylanguage.CountryCode, max(countrylanguage.pct)",
        "select_candidates": [
            "select countrylanguage.CountryCode",
            "select country.Name, countrylanguage.CountryCode",
            "select country.Code",
            "select country.Name, country.Code"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "countrylanguage",
        "table_candidates": [
            "countrylanguage",
            "country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.9650791883468628,
            0.00010376986028859392,
            0.00025080869090743363,
            6.635580939473584e-05,
            0.9836951494216919,
            8.971072384156287e-05,
            0.0002219725283794105,
            5.867519212188199e-05
        ],
        "align_select": "select countrylanguage.CountryCode",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many countries have a republic as their form of government?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), country.Code",
            "select count(*), country.Name",
            "select count(*), country.Capital"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9920794367790222,
            0.0005000602686777711,
            0.00037354230880737305,
            0.0003294223570264876,
            0.0003605817910283804,
            0.0004520632792264223,
            0.00026638846611604095,
            0.00014387138071469963
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many countries have governments that are republics?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), country.Name",
            "select count(*), country.Code",
            "select count(distinct country.Name)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "sqlite_sequence country"
        ],
        "align_scores": [
            0.9934929013252258,
            0.0031622040551155806,
            0.0004803082556463778,
            0.03186676651239395,
            0.0005179056897759438,
            0.009782481007277966,
            0.11480643600225449,
            0.0003444093163125217
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the total surface area of the countries in the Caribbean region?",
        "gold_select": "select sum(country.sa)",
        "select_candidates": [
            "select sum(country.sa)",
            "select sum(country.sa), country.Name",
            "select sum(country.Population)",
            "select sum(country.sa), country.cont"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "sqlite_sequence country",
            "country countrylanguage",
            "city country"
        ],
        "align_scores": [
            0.996588945388794,
            0.00019706381135620177,
            0.00016301983851008117,
            0.006577209569513798,
            0.0006506533827632666,
            0.0001527175190858543,
            0.00013146118726581335,
            0.0003847269981633872
        ],
        "align_select": "select sum(country.sa)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How much surface area do the countires in the Carribean cover together?",
        "gold_select": "select sum(country.sa)",
        "select_candidates": [
            "select sum(country.sa)",
            "select sum(country.Population)",
            "select sum(country.GNP)",
            "select sum(country.IndepYear)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "sqlite_sequence country"
        ],
        "align_scores": [
            0.9748411774635315,
            8.301057096105069e-05,
            0.0005373014719225466,
            7.741244189674035e-05,
            0.9505040645599365,
            7.273577648447827e-05,
            0.0012314252089709044,
            8.118365076370537e-05
        ],
        "align_select": "select sum(country.sa)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which continent is Anguilla in?",
        "gold_select": "select country.cont",
        "select_candidates": [
            "select country.cont",
            "select country.cont, country.Region",
            "select distinct country.cont",
            "select country.cont (http://country.cont)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "sqlite_sequence country"
        ],
        "align_scores": [
            0.9953605532646179,
            0.0002787488920148462,
            0.00024847444728948176,
            7.836918666725978e-05,
            0.08713696897029877,
            0.0002773283631540835,
            0.2986438572406769,
            0.00010418232704978436
        ],
        "align_select": "select country.cont",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the continent name which Anguilla belongs to?",
        "gold_select": "select country.cont",
        "select_candidates": [
            "select country.cont",
            "select country.Code, country.cont",
            "select country.cont, country.Name",
            "select country.Code, country.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "sqlite_sequence country",
            "city sqlite_sequence country",
            "city country"
        ],
        "align_scores": [
            0.9953398704528809,
            0.00015877830446697772,
            0.0002183711330872029,
            8.167789928847924e-05,
            0.00021986363572068512,
            8.184335456462577e-05,
            0.00018202541104983538,
            8.782518125372007e-05
        ],
        "align_select": "select country.cont",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which language is the most popular in Aruba?",
        "gold_select": "select countrylanguage.lang",
        "select_candidates": [
            "select countrylanguage.lang",
            "select countrylanguage.lang, country.LocalName",
            "select countrylanguage.lang, country.Capital",
            "select countrylanguage.lang, country.Code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "countrylanguage country countrylanguage"
        ],
        "align_scores": [
            0.9929865002632141,
            0.9912793040275574,
            0.00038394550210796297,
            0.0005721758352592587,
            0.0003040544979739934,
            0.00024036240938585252,
            0.00034132954897359014,
            0.0003995641600340605
        ],
        "align_select": "select countrylanguage.lang",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT"
    },
    {
        "question": "What language is predominantly spoken in Aruba?",
        "gold_select": "select countrylanguage.lang",
        "select_candidates": [
            "select countrylanguage.lang",
            "select countrylanguage.lang, country.LocalName",
            "select dominant countrylanguage.lang",
            "select countrylanguage.lang, country.Capital"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9918223023414612,
            0.008879241533577442,
            0.0004966637934558094,
            0.00026072849868796766,
            0.0030653250869363546,
            0.0002935216762125492,
            0.00019408229854889214,
            0.00012355350190773606
        ],
        "align_select": "select countrylanguage.lang",
        "align_structure": "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What are the population and life expectancies in Brazil?",
        "gold_select": "select country.Population, country.le",
        "select_candidates": [
            "select country.Population, country.le",
            "select country.Code, country.Name, country.Population, country.le",
            "select country.Code, country.Population, country.le",
            "select country.Code, country.Name, country.Population"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9931827187538147,
            0.00016604622942395508,
            0.00022319894924294204,
            0.00010545631812419742,
            0.00025083808577619493,
            9.231120930053294e-05,
            0.00017051420581992716,
            0.00012733532639686018
        ],
        "align_select": "select country.Population, country.le",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give me Brazil\u2019s population and life expectancies.",
        "gold_select": "select country.Population, country.le",
        "select_candidates": [
            "select country.Population, country.le",
            "select country.Code, country.Name, country.Population, country.le",
            "select country.Code, country.Population, country.le",
            "select country.Name, country.Population, country.le"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9928501844406128,
            0.00015114394773263484,
            0.00019637428340502083,
            0.00010249064507661387,
            0.00020872023014817387,
            0.0001410949626006186,
            0.00019799081201199442,
            0.0001521883677924052
        ],
        "align_select": "select country.Population, country.le",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the average expected life expectancy for countries in the region of Central Africa?",
        "gold_select": "select avg(country.le)",
        "select_candidates": [
            "select avg(country.le)",
            "select an avg(country.le)",
            "select  avg(country.le)",
            "select avg(country.GNP)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "sqlite_sequence country",
            "country countrylanguage",
            "city country"
        ],
        "align_scores": [
            0.995487630367279,
            0.0001513862662250176,
            0.0004294531827326864,
            0.00013377581490203738,
            0.995487630367279,
            0.0001513862662250176,
            0.9939670562744141,
            0.00016796539421193302
        ],
        "align_select": "select avg(country.le)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How long is the people\u2019s average life expectancy in Central Africa?",
        "gold_select": "select avg(country.le)",
        "select_candidates": [
            "select avg(country.le)",
            "select an avg(country.le)",
            "select avg(country.GNP)",
            "select avg(country.Population)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "country countrylanguage",
            "city country",
            "sqlite_sequence country"
        ],
        "align_scores": [
            0.9960261583328247,
            8.393054304178804e-05,
            0.0004488907870836556,
            0.00010797395225381479,
            0.9939297437667847,
            8.88162903720513e-05,
            0.0015296669444069266,
            7.524339889641851e-05
        ],
        "align_select": "select avg(country.le)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the name of country that has the shortest life expectancy in Asia?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.cont",
            "select country.Name, country.Region",
            "select country.Name, country.Population"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "country countrylanguage"
        ],
        "align_scores": [
            0.9908233880996704,
            0.0002901099796872586,
            0.0006038380088284612,
            9.93670109892264e-05,
            0.00024537419085390866,
            0.00012181257625343278,
            0.0002255085710203275,
            9.271613089367747e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT"
    },
    {
        "question": "Give the name of the country in Asia with the lowest life expectancy.",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.cont",
            "select country.Name, country.Region",
            "select country.Name, country.le"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "country countrylanguage",
            "sqlite_sequence country"
        ],
        "align_scores": [
            0.9912881255149841,
            0.00024138441949617118,
            0.0005083321593701839,
            8.476641232846305e-05,
            0.00021274448954500258,
            9.946220961865038e-05,
            0.001168017857708037,
            8.314666774822399e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT"
    },
    {
        "question": "What is the total population and maximum GNP in Asia?",
        "gold_select": "select sum(country.Population), max(country.GNP)",
        "select_candidates": [
            "select sum(country.Population), max(country.GNP)",
            "select max(country.GNP), sum(country.Population)",
            "select country.Population, max(country.GNP)",
            "select sum(country.le), max(country.GNP)"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9956774115562439,
            0.00011546889436431229,
            0.9961428046226501,
            9.281476377509534e-05,
            0.989349901676178,
            0.00015550950774922967,
            0.00036783545510843396,
            9.92827262962237e-05
        ],
        "align_select": "select sum(country.Population), max(country.GNP)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many people live in Asia, and what is the largest GNP among them?",
        "gold_select": "select sum(country.Population), max(country.GNP)",
        "select_candidates": [
            "select country.Population, country.GNP",
            "select country.Name, country.GNP",
            "select country.Code, country.Population, country.GNP",
            "select country.Code, country.Population"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9934326410293579,
            0.5874794721603394,
            0.0008552867802791297,
            0.02990031987428665,
            0.00031419791048392653,
            0.000362373364623636,
            0.0009547735680826008,
            0.0037568537518382072
        ],
        "align_select": "select country.Population, country.GNP",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT"
    },
    {
        "question": "What is the average life expectancy in African countries that are republics?",
        "gold_select": "select avg(country.le)",
        "select_candidates": [
            "select avg(country.le)",
            "select an avg(country.le)",
            "select avg(country.GNP)",
            "select  avg(country.le)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "country countrylanguage",
            "sqlite_sequence country",
            "city country"
        ],
        "align_scores": [
            0.9965831637382507,
            0.00018019680283032358,
            0.0004610825562849641,
            0.00012008265184704214,
            0.9946178793907166,
            0.00020220654550939798,
            0.9965831637382507,
            0.00018019680283032358
        ],
        "align_select": "select avg(country.le)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give the average life expectancy for countries in Africa which are republics?",
        "gold_select": "select avg(country.le)",
        "select_candidates": [
            "select avg(country.le)",
            "select avg(country.GNP)",
            "select an avg(country.le)",
            "select avg(country.Population)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "country countrylanguage",
            "sqlite_sequence country"
        ],
        "align_scores": [
            0.9967447519302368,
            0.00013355773990042508,
            0.9957276582717896,
            0.0001439635962015018,
            0.0004388164379633963,
            0.0001307663187617436,
            0.00047777825966477394,
            0.00016920911730267107
        ],
        "align_select": "select avg(country.le)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the total surface area of the continents Asia and Europe?",
        "gold_select": "select sum(country.sa)",
        "select_candidates": [
            "select sum(country.sa)",
            "select sum(country.Population)",
            "select sum(country.GNP)",
            "select sum(country.IndepYear)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "sqlite_sequence country",
            "country countrylanguage",
            "city country"
        ],
        "align_scores": [
            0.9958167672157288,
            0.0005100573180243373,
            0.0005235194112174213,
            0.0002491985505912453,
            0.9913937449455261,
            0.0006637852056883276,
            0.00038145569851621985,
            0.00016480124031659216
        ],
        "align_select": "select sum(country.sa)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give the total surface area covered by countries in Asia or Europe.",
        "gold_select": "select sum(country.sa)",
        "select_candidates": [
            "select sum(country.sa)",
            "select sum(country.sa), country.IndepYear",
            "select sum(country.Population)",
            "select sum(country.sa), country.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "country countrylanguage"
        ],
        "align_scores": [
            0.9967509508132935,
            0.013589237816631794,
            0.00012056006380589679,
            0.00014384531823452562,
            0.00044627004535868764,
            0.00012797425733879209,
            0.00018186596571467817,
            0.000386411149520427
        ],
        "align_select": "select sum(country.sa)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many people live in Gelderland district?",
        "gold_select": "select sum(city.popn)",
        "select_candidates": [
            "select sum(city.popn)",
            "select city.popn",
            "select count(*)",
            "select sum(city.popn), city.District"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "city",
        "table_candidates": [
            "city"
        ],
        "align_scores": [
            0.9529936909675598,
            7.121376256691292e-05,
            0.956322431564331,
            0.00013336530537344515,
            0.9958819150924683,
            8.797102054813877e-05,
            0.00014109764015302062,
            6.355376535793766e-05
        ],
        "align_select": "select sum(city.popn)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the total population of Gelderland district?",
        "gold_select": "select sum(city.popn)",
        "select_candidates": [
            "select sum(city.popn)",
            "select sum(city.popn), city.District",
            "select sum(city.popn), city.District, city.popn",
            "select sum(city.popn), city.District, max(city.popn)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "city",
        "table_candidates": [
            "city",
            "city country",
            "city sqlite_sequence country"
        ],
        "align_scores": [
            0.9966492056846619,
            0.011879739351570606,
            0.0001570135063957423,
            0.007657651789486408,
            0.00022882760094944388,
            0.00011115867528133094,
            9.643445810070261e-05,
            7.634598296135664e-05
        ],
        "align_select": "select sum(city.popn)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the average GNP and total population in all nations whose government is US territory?",
        "gold_select": "select avg(country.GNP), sum(country.Population)",
        "select_candidates": [
            "select avg(country.GNP), avg(country.Population)",
            "select avg(country.GNP), sum(country.Population)",
            "select avg(country.Population), avg(country.GNP)",
            "select avg(country.le), avg(country.Population)"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9694951176643372,
            0.00041636821697466075,
            0.989694356918335,
            0.0006758602685295045,
            0.984803318977356,
            0.0007511081057600677,
            0.000330873706843704,
            0.0001299289579037577
        ],
        "align_select": "select avg(country.GNP), avg(country.Population)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give the mean GNP and total population of nations which are considered US territory.",
        "gold_select": "select avg(country.GNP), sum(country.Population)",
        "select_candidates": [
            "select avg(country.GNP), sum(country.Population)",
            "select avg(country.Population), sum(country.Population)",
            "select an avg(country.GNP), sum(country.Population)",
            "select avg(country.le), sum(country.Population)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9960404634475708,
            0.0003778447862714529,
            0.022853264585137367,
            0.00015804452414158732,
            0.00033967464696615934,
            0.00014207240019459277,
            0.0004525476833805442,
            0.0001612254127394408
        ],
        "align_select": "select avg(country.GNP), sum(country.Population)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many unique languages are spoken in the world?",
        "gold_select": "select count(distinct countrylanguage.lang)",
        "select_candidates": [
            "select count(distinct countrylanguage.lang)",
            "select count(distinct countrylanguage.IsOfficial)",
            "select count(distinct countrylanguage.cntry_code)",
            "select count(distinct countrylanguage.lang"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "countrylanguage",
        "table_candidates": [
            "countrylanguage"
        ],
        "align_scores": [
            0.9933498501777649,
            0.9933498501777649,
            0.008617043495178223,
            0.008617043495178223,
            0.9494876861572266,
            0.9494876861572266,
            0.25698521733283997,
            0.25698521733283997
        ],
        "align_select": "select count(distinct countrylanguage.lang)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What is the number of distinct languages used around the world?",
        "gold_select": "select count(distinct countrylanguage.lang)",
        "select_candidates": [
            "select count(distinct countrylanguage.lang)",
            "select count(select count(distinct countrylanguage.lang)",
            "select count(distinct countrylanguage.lang), countrylanguage.cntry_code",
            "select count(distinct countrylanguage.IsOfficial)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "countrylanguage",
        "table_candidates": [
            "countrylanguage",
            "country countrylanguage"
        ],
        "align_scores": [
            0.9948018789291382,
            0.9948018789291382,
            0.0005965868476778269,
            0.0005965868476778269,
            0.00017435586778447032,
            0.00017435586778447032,
            0.004005310591310263,
            0.004005310591310263
        ],
        "align_select": "select count(distinct countrylanguage.lang)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "How many type of governments are in Africa?",
        "gold_select": "select count(distinct country.gf)",
        "select_candidates": [
            "select count(distinct country.GNP)",
            "select count(distinct country.Name)",
            "select count(distinct country.GNPOld)",
            "select count(distinct country.le)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9693083763122559,
            9.428038902115077e-05,
            0.018460864201188087,
            8.291973790619522e-05,
            0.8506156206130981,
            8.60538930282928e-05,
            0.00384120037779212,
            7.518917846027762e-05
        ],
        "align_select": "select count(distinct country.GNP)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many different forms of governments are there in Africa?",
        "gold_select": "select count(distinct country.gf)",
        "select_candidates": [
            "select count(distinct country.GNP)",
            "select count(distinct country.Name)",
            "select count(distinct country.GNPOld)",
            "select count(distinct country.le)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9947794675827026,
            0.9947794675827026,
            0.06607082486152649,
            0.06607082486152649,
            0.8961710333824158,
            0.8961710333824158,
            0.012423914857208729,
            0.012423914857208729
        ],
        "align_select": "select count(distinct country.GNP)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the total number of languages used in Aruba?",
        "gold_select": "select count(countrylanguage.lang)",
        "select_candidates": [
            "select count(distinct countrylanguage.lang)",
            "select count(*)",
            "select count(selection count(distinct countrylanguage.lang)",
            "select count(countrylanguage.lang)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9939590692520142,
            0.0002527490141801536,
            0.9939318895339966,
            0.0024279530625790358,
            0.0006849079509265721,
            0.00010635035141604021,
            0.9951716065406799,
            0.0019105541286990047
        ],
        "align_select": "select count(distinct countrylanguage.lang)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many languages are spoken in Aruba?",
        "gold_select": "select count(countrylanguage.lang)",
        "select_candidates": [
            "select count(distinct countrylanguage.lang)",
            "select count(distinct countrylanguage.lang, count(distinct countrylanguage.IsOfficial)",
            "select count(distinct countrylanguage.lang, count(distinct countrylanguage.lang)",
            "select count(distinct countrylanguage.lang"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9960011839866638,
            0.00015043250459712,
            0.0002488326863385737,
            0.00011064282443840057,
            0.00018025301687885076,
            0.00011492340854601935,
            0.7598951458930969,
            0.00016321132716257125
        ],
        "align_select": "select count(distinct countrylanguage.lang)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many official languages does Afghanistan have?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(distinct countrylanguage.IsOfficial)",
            "select count(distinct countrylanguage.lang)",
            "select count(countrylanguage.IsOfficial)",
            "select count(*)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.14873813092708588,
            6.734210182912648e-05,
            0.9841769933700562,
            6.629421113757417e-05,
            0.006637288257479668,
            7.803769403835759e-05,
            0.8711315393447876,
            9.44298371905461e-05
        ],
        "align_select": "select count(distinct countrylanguage.lang)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many official languages are spoken in Afghanistan?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(distinct countrylanguage.IsOfficial)",
            "select count(distinct countrylanguage.lang)",
            "select count(countrylanguage.IsOfficial)",
            "select count(distinct t3.c6)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.6086193323135376,
            0.00012295482156332582,
            0.9482739567756653,
            0.0001399441243847832,
            0.03984178602695465,
            0.0029554276261478662,
            0.0005421335226856172,
            0.00012465313193388283
        ],
        "align_select": "select count(distinct countrylanguage.lang)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is name of the country that speaks the largest number of languages?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Capital",
            "select country.Name, countrylanguage.lang",
            "select country.Name, countrylanguage.cntry_code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.9925251007080078,
            6.926178321009502e-05,
            0.00026925085694529116,
            6.068623042665422e-05,
            0.0016069525154307485,
            6.838073022663593e-05,
            0.0027713465970009565,
            9.18493460630998e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Give the name of the nation that uses the greatest amount of languages.",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Capital",
            "select country.Name, countrylanguage.lang",
            "select country.Name, countrylanguage.cntry_code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.9717080593109131,
            6.48482091492042e-05,
            0.00016448037058580667,
            5.808091373182833e-05,
            0.002888144226744771,
            7.010109402472153e-05,
            0.002950066002085805,
            8.892315236153081e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Which continent has the most diverse languages?",
        "gold_select": "select country.cont",
        "select_candidates": [
            "select country.cont",
            "select country.cont, countrylanguage.pct",
            "select country.cont, countrylanguage.lang",
            "select country.cont, t3.c4"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.994168758392334,
            6.38550118310377e-05,
            0.0010258284164592624,
            6.354224751703441e-05,
            0.0016411632532253861,
            6.954193668207154e-05,
            0.0013542281230911613,
            6.131705595180392e-05
        ],
        "align_select": "select country.cont",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Which continent speaks the most languages?",
        "gold_select": "select country.cont",
        "select_candidates": [
            "select country.cont",
            "select country.cont, countrylanguage.pct",
            "select country.cont, country.Region",
            "select country.Code, country.cont"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9950441122055054,
            7.667218596907333e-05,
            0.0006618273910135031,
            6.312743062153459e-05,
            0.0006519305752590299,
            6.105640932219103e-05,
            0.00047431979328393936,
            7.085110701154917e-05
        ],
        "align_select": "select country.cont",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "How many countries speak both English and Dutch?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(distinct countrylanguage.cntry_code)",
            "select count(*), countrylanguage.cntry_code",
            "select count(*), countrylanguage.lang"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "countrylanguage",
            "country countrylanguage"
        ],
        "align_scores": [
            0.9916921854019165,
            0.4901256561279297,
            0.10864325612783432,
            0.00040242617251351476,
            0.0004286878975108266,
            0.000391151086660102,
            0.00028210505843162537,
            0.000307429872918874
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the number of nations that use English and Dutch?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), countrylanguage.cntry_code",
            "select count(countrylanguage.cntry_code)",
            "select count(*), countrylanguage.lang"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "countrylanguage",
            "country countrylanguage"
        ],
        "align_scores": [
            0.9906153678894043,
            0.01515202410519123,
            0.0003068307996727526,
            0.0015232828445732594,
            0.4488318860530853,
            0.04730568826198578,
            0.00032900588121265173,
            0.0009745010174810886
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of nations speak both English and French?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, countrylanguage.lang",
            "select country.Name, countrylanguage.cntry_code",
            "select country.Name, country.Capital"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.9898960590362549,
            0.00022923073265701532,
            0.00038677529664710164,
            0.00014038717199582607,
            0.00025705667212605476,
            0.00012873370724264532,
            0.00013408102677203715,
            8.121858263621107e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "Give the names of nations that speak both English and French.",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, countrylanguage.lang",
            "select country.Name, country.Capital",
            "select country.Name, countrylanguage.cntry_code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.9946801066398621,
            0.00039546130574308336,
            0.0003038105205632746,
            0.00015739272930659354,
            0.0001949612342286855,
            9.6807700174395e-05,
            0.00031688855960965157,
            0.00015549911768175662
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of nations where both English and French are official languages?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, countrylanguage.lang",
            "select country.Name, countrylanguage.IsOfficial",
            "select country.Name, country.Capital"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.9944774508476257,
            0.0023818337358534336,
            0.000290775642497465,
            0.00010499123891349882,
            0.0002469367173034698,
            0.0001024300727294758,
            0.00021406973246484995,
            0.0001026144454954192
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "Give the names of countries with English and French as official languages.",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, countrylanguage.IsOfficial",
            "select country.Name, country.Capital",
            "select country.Name, countrylanguage.lang"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.9956178665161133,
            0.0008022414403967559,
            0.00019696084200404584,
            8.413881732849404e-05,
            0.00024065503384917974,
            9.521813626633957e-05,
            0.00021966060739941895,
            8.33600788610056e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "What is the number of distinct continents where Chinese is spoken?",
        "gold_select": "select count(distinct country.cont)",
        "select_candidates": [
            "select count(distinct country.cont)",
            "select count(distinct countrylanguage.IsOfficial)",
            "select count(distinct country.Name)",
            "select count(distinct country.Population)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.9952200055122375,
            0.0003565621445886791,
            0.00047274489770643413,
            0.0001235311501659453,
            0.00117464829236269,
            0.00021273230959195644,
            0.0006025941111147404,
            0.0001282570738112554
        ],
        "align_select": "select count(distinct country.cont)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many continents speak Chinese?",
        "gold_select": "select count(distinct country.cont)",
        "select_candidates": [
            "select count(distinct country.cont)",
            "select count(continents)",
            "select count(distinct country.Name)",
            "select count(distinct country.Code)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.9044867157936096,
            0.00026550859911367297,
            0.6651768088340759,
            0.00019857878214679658,
            0.007420076988637447,
            8.481103577651083e-05,
            0.003408425487577915,
            9.255121403839439e-05
        ],
        "align_select": "select count(distinct country.cont)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the regions that use English or Dutch?",
        "gold_select": "select distinct country.Region",
        "select_candidates": [
            "select country.Region",
            "select distinct country.Region",
            "select country.Region, countrylanguage.cntry_code",
            "select count(country.Region)"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.99305659532547,
            0.09572670608758926,
            0.024992380291223526,
            0.00021602991910185665,
            0.0003660936199594289,
            0.00016264223086182028,
            0.002859058789908886,
            0.00012239054194651544
        ],
        "align_select": "select country.Region",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which regions speak Dutch or English?",
        "gold_select": "select distinct country.Region",
        "select_candidates": [
            "select country.Region",
            "select distinct country.Region",
            "select country.Region, countrylanguage.lang",
            "select country.Region, countrylanguage.cntry_code"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9928929209709167,
            0.05288585647940636,
            0.04619019851088524,
            0.00024547477369196713,
            0.0003309282474219799,
            0.00015892888768576086,
            0.00027816512738354504,
            0.00016337368288077414
        ],
        "align_select": "select country.Region",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the countries where either English or Dutch is the official language?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, countrylanguage.cntry_code",
            "select country.Name, country.cont",
            "select country.Name, country.Code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "countrylanguage",
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence countrylanguage",
            "sqlite_sequence country countrylanguage",
            "countrylanguage country countrylanguage"
        ],
        "align_scores": [
            0.9091584086418152,
            0.008379027247428894,
            0.0005923858261667192,
            0.00020175705139990896,
            0.0003553898131940514,
            0.00011998580157523975,
            0.00099596893414855,
            0.0001846526429289952
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which countries have either English or Dutch as an official language?",
        "gold_select": "select *",
        "select_candidates": [
            "select country.Name",
            "select country.Name, countrylanguage.cntry_code",
            "select country.Name, country.cont",
            "select country.Name, country.Code"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9339724183082581,
            0.011120518669486046,
            0.0006096575525589287,
            0.00022391323000192642,
            0.00034693858469836414,
            0.00012180409248685464,
            0.0012195935705676675,
            0.0002266953233629465
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which language is the most popular on the Asian continent?",
        "gold_select": "select countrylanguage.lang",
        "select_candidates": [
            "select countrylanguage.lang",
            "select countrylanguage.lang, country.Code",
            "select countrylanguage.lang, country.Capital",
            "select countrylanguage.lang, country.cont"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.9873043894767761,
            0.9919390082359314,
            0.0003153289726469666,
            0.0004434061120264232,
            0.0002603157190605998,
            0.00021998923330102116,
            0.0002963464648928493,
            0.00065745844040066
        ],
        "align_select": "select countrylanguage.lang",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT"
    },
    {
        "question": "What is the language that is used by the largest number of Asian nations?",
        "gold_select": "select countrylanguage.lang",
        "select_candidates": [
            "select countrylanguage.lang",
            "select countrylanguage.lang, country.Capital",
            "select countrylanguage.lang, country.Code",
            "select countrylanguage.lang, country.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.9916111826896667,
            0.0001510583533672616,
            0.0009005212923511863,
            7.738808199064806e-05,
            0.0020929339807480574,
            9.647722617955878e-05,
            0.003771009622141719,
            8.928179158829153e-05
        ],
        "align_select": "select countrylanguage.lang",
        "align_structure": "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Which languages are spoken by only one country in republic governments?",
        "gold_select": "select countrylanguage.lang",
        "select_candidates": [
            "select countrylanguage.lang",
            "select countrylanguage.lang, country.gf",
            "select countrylanguage.lang, country.Capital",
            "select countrylanguage.lang, country.LocalName"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY-HAVING",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.9687312245368958,
            0.14152076840400696,
            0.0006774853100068867,
            0.00014268592349253595,
            0.0004083015082869679,
            0.00011576402903301641,
            0.0009318357333540916,
            0.00017072897753678262
        ],
        "align_select": "select countrylanguage.lang",
        "align_structure": "SELECT-FROM-WHERE-GROUP BY-HAVING"
    },
    {
        "question": "What languages are only used by a single country with a republic government?",
        "gold_select": "select countrylanguage.lang",
        "select_candidates": [
            "select countrylanguage.lang",
            "select countrylanguage.lang, country.Capital",
            "select countrylanguage.lang, country.LocalName",
            "select countrylanguage.lang, country.gf"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.9373142123222351,
            0.15963487327098846,
            0.00026575199444778264,
            0.00011590387293836102,
            0.0005325294332578778,
            0.0002037628146354109,
            0.00033271461143158376,
            0.0001473757001804188
        ],
        "align_select": "select countrylanguage.lang",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the city with the largest population that uses English.",
        "gold_select": "select city.Name, city.popn",
        "select_candidates": [
            "select city.Name",
            "select city.Name, countrylanguage.IsOfficial",
            "select city.ID, city.Name",
            "select city.Name, countrylanguage.lang"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "city countrylanguage",
        "table_candidates": [
            "city countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.9854421615600586,
            0.9802011847496033,
            0.00045021474943496287,
            0.0010756216943264008,
            0.0005970880738459527,
            0.0007859509205445647,
            0.0013456637971103191,
            0.003591713262721896
        ],
        "align_select": "select city.Name",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT"
    },
    {
        "question": "What is the most populace city that speaks English?",
        "gold_select": "select city.Name, city.popn",
        "select_candidates": [
            "select city.Name",
            "select city.Name, countrylanguage.lang",
            "select city.ID, city.Name",
            "select city.Name, countrylanguage.IsOfficial"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "city countrylanguage",
        "table_candidates": [
            "city countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.9883238077163696,
            0.0001238840923178941,
            0.0006918598664924502,
            8.820623042993248e-05,
            0.00055233936291188,
            7.231941708596423e-05,
            0.0003509715315885842,
            9.516114369034767e-05
        ],
        "align_select": "select city.Name",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT"
    },
    {
        "question": "Find the name, population and expected life length of asian country with the largest area?",
        "gold_select": "select country.Name, country.Population, country.le",
        "select_candidates": [
            "select country.Name, country.Population, country.le",
            "select country.Name, country.IndepYear, country.Population, country.le",
            "select country.Name, country.Code, country.Population, country.le",
            "select country.Name, country.Population, country.le"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9844653010368347,
            0.00011848410940729082,
            0.00039583435864187777,
            0.00010519396892050281,
            0.00043803369044326246,
            0.00012433616211637855,
            0.9844653010368347,
            0.00011848410940729082
        ],
        "align_select": "select country.Name, country.Population, country.le",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the name, population, and life expectancy of the largest Asian country by land?",
        "gold_select": "select country.Name, country.Population, country.le",
        "select_candidates": [
            "select country.Name, country.Population, country.le",
            "select country.Name, country.IndepYear, country.Population, country.le",
            "select country.Name, country.Code, country.Population, country.le",
            "select country.Name, country.Population, country.le"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.991213858127594,
            0.0003881508600898087,
            0.0018083389149978757,
            9.862345177680254e-05,
            0.0009040883742272854,
            0.00010580805974313989,
            0.991213858127594,
            0.0003881508600898087
        ],
        "align_select": "select country.Name, country.Population, country.le",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is average life expectancy in the countries where English is not the official language?",
        "gold_select": "select avg(country.le)",
        "select_candidates": [
            "select avg(country.le)",
            "select avg(country.le), countrylanguage.lang",
            "select an avg(country.le)",
            "select avg(t3.c7)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.9952768087387085,
            0.00024488545022904873,
            0.00013541887165047228,
            0.0002589576761238277,
            0.00044794013956561685,
            0.0001426812814315781,
            0.0006284290575422347,
            0.0001579994714120403
        ],
        "align_select": "select avg(country.le)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give the mean life expectancy of countries in which English is not the official language.",
        "gold_select": "select avg(country.le)",
        "select_candidates": [
            "select avg(country.le)",
            "select an avg(country.le)",
            "select m.avg(country.le)",
            "select avg(country.le), countrylanguage.lang"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.9962922930717468,
            0.0001164530185633339,
            0.00039901561103761196,
            0.00011049900786019862,
            0.0013708417536690831,
            0.00012586064985953271,
            0.00013207875599619,
            0.000182054762262851
        ],
        "align_select": "select avg(country.le)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the total number of people living in the nations that do not use English?",
        "gold_select": "select sum(country.Population)",
        "select_candidates": [
            "select sum(country.Population)",
            "select sum(country.Population), countrylanguage.lang",
            "select sum(country.Population), countrylanguage.cntry_code",
            "select sum(country.Population), countrylanguage.lang"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "country",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.990595817565918,
            0.0006675663171336055,
            0.0001623537391424179,
            0.0005992528167553246,
            0.0001383679045829922,
            0.0044311354868113995,
            0.0001623537391424179,
            0.0005992528167553246
        ],
        "align_select": "select sum(country.Population)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many people live in countries that do not speak English?",
        "gold_select": "select sum(country.Population)",
        "select_candidates": [
            "select sum(country.Population)",
            "select count(*)",
            "select country.Population",
            "select sum(country.Population), countrylanguage.lang"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence countrylanguage",
            "country"
        ],
        "align_scores": [
            0.823085606098175,
            7.277385157067329e-05,
            0.9891139268875122,
            0.0001024914308800362,
            0.990470290184021,
            0.00012813189823646098,
            0.00014901996473781765,
            6.197007314767689e-05
        ],
        "align_select": "select sum(country.Population)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the official language spoken in the country whose head of state is Beatrix?",
        "gold_select": "select countrylanguage.lang",
        "select_candidates": [
            "select countrylanguage.lang",
            "select countrylanguage.lang, countrylanguage.IsOfficial",
            "select countrylanguage.lang, countrylanguage.IsOfficial",
            "select countrylanguage.lang (countrylanguage.IsOfficial)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9792898893356323,
            0.0002166952472180128,
            0.0003640933718997985,
            8.046671428019181e-05,
            0.0003640933718997985,
            8.046671428019181e-05,
            0.005410378333181143,
            9.640916687203571e-05
        ],
        "align_select": "select countrylanguage.lang",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the official language used in the country the name of whose head of state is Beatrix.",
        "gold_select": "select countrylanguage.lang",
        "select_candidates": [
            "select countrylanguage.lang",
            "select countrylanguage.lang, countrylanguage.IsOfficial",
            "select countrylanguage.lang, countrylanguage.IsOfficial",
            "select countrylanguage.lang (countrylanguage.IsOfficial)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9872409701347351,
            0.00016996977501548827,
            0.00038001095526851714,
            7.660311530344188e-05,
            0.00038001095526851714,
            7.660311530344188e-05,
            0.0073424712754786015,
            8.65207621245645e-05
        ],
        "align_select": "select countrylanguage.lang",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the total number of unique official languages spoken in the countries that are founded before 1930?",
        "gold_select": "select count(distinct countrylanguage.lang)",
        "select_candidates": [
            "select count(distinct countrylanguage.IsOfficial)",
            "select count(distinct countrylanguage.lang)",
            "select sum(countrylanguage.IsOfficial)",
            "select count(distinct t3.c6)"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.015778161585330963,
            0.0002564363821875304,
            0.9908791184425354,
            0.00037726477603428066,
            0.0020098944660276175,
            0.0021642951760441065,
            0.0005603670142591,
            0.00017779649351723492
        ],
        "align_select": "select count(distinct countrylanguage.lang)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "For the countries founded before 1930, what is the total number of distinct official languages?",
        "gold_select": "select count(distinct countrylanguage.lang)",
        "select_candidates": [
            "select count(distinct countrylanguage.IsOfficial)",
            "select count(distinct countrylanguage.lang)",
            "select sum(countrylanguage.IsOfficial)",
            "select count(distinct countrylanguage.IsOfficial"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.010099750943481922,
            0.00020970823243260384,
            0.9917107820510864,
            0.0003080289752688259,
            0.0015747209545224905,
            0.0012681415537372231,
            0.001499726204201579,
            0.00017188987112604082
        ],
        "align_select": "select count(distinct countrylanguage.lang)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the countries that have greater surface area than any country in Europe?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Region",
            "select country.Name, country.cont",
            "select country.Name, country.sa"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.6881667971611023,
            0.008730912581086159,
            0.0003388389013707638,
            0.00015134582645259798,
            0.0004158139054197818,
            0.00017021241365000606,
            0.0004771322710439563,
            0.00016105794929899275
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which countries have greater area than that of any country in Europe?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Region",
            "select country.Name, country.cont",
            "select country.Name, country.Capital"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.7101806402206421,
            0.00042277012835256755,
            0.00029187052859924734,
            8.750400593271479e-05,
            0.00038341875188052654,
            8.544682350475341e-05,
            0.00030850182520225644,
            8.668576629133895e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the African countries that have a population less than any country in Asia?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.cont",
            "select country.Name, country.Population",
            "select distinct country.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "sqlite_sequence country"
        ],
        "align_scores": [
            0.6452922224998474,
            0.1877032071352005,
            0.00040667038410902023,
            0.0002354420576011762,
            0.000365716201486066,
            0.00016571866581216455,
            0.1288764625787735,
            0.10659950226545334
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which African countries have a smaller population than that of any country in Asia?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.cont",
            "select country.Code, country.Name",
            "select distinct country.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.6418523192405701,
            0.0009224491659551859,
            0.0004259075503796339,
            9.459439752390608e-05,
            0.004233171232044697,
            0.0001733023818815127,
            0.1628035008907318,
            0.0007136650965549052
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which Asian countries have a population that is larger than any country in Africa?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.cont",
            "select country.Name, country.Population",
            "select country.Code, country.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "sqlite_sequence country",
            "city country",
            "city sqlite_sequence country"
        ],
        "align_scores": [
            0.7112459540367126,
            0.0007658321992494166,
            0.0004561650275718421,
            0.00010511976870475337,
            0.0004487395053729415,
            8.645107300253585e-05,
            0.00552308838814497,
            0.00020789896370843053
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the Asian countries which have a population larger than that of any country in Africa?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.cont",
            "select distinct country.Name",
            "select country.Name, country.cont, country.Population"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "sqlite_sequence country",
            "city country",
            "city sqlite_sequence country"
        ],
        "align_scores": [
            0.736194372177124,
            0.10371170192956924,
            0.00036586247733794153,
            0.00018317383364774287,
            0.14539307355880737,
            0.001348678139038384,
            0.00019702997815329581,
            9.163334470940754e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the country codes for countries that do not speak English?",
        "gold_select": "select countrylanguage.cntry_code",
        "select_candidates": [
            "select countrylanguage.cntry_code",
            "select countrylanguage.cntry_code, countrylanguage.lang",
            "select countrylanguage.lang, country.Code",
            "select distinct countrylanguage.cntry_code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "countrylanguage",
        "table_candidates": [
            "countrylanguage",
            "country countrylanguage",
            "sqlite_sequence countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city countrylanguage"
        ],
        "align_scores": [
            0.9875520467758179,
            0.00033979854197241366,
            0.0006076697609387338,
            7.889232801971957e-05,
            0.00039788559661246836,
            7.847006054362282e-05,
            0.016076581552624702,
            0.00010592646867735311
        ],
        "align_select": "select countrylanguage.cntry_code",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the country codes for countries that do not speak English.",
        "gold_select": "select countrylanguage.cntry_code",
        "select_candidates": [
            "select countrylanguage.cntry_code",
            "select country.Name, countrylanguage.cntry_code",
            "select countrylanguage.cntry_code, countrylanguage.lang",
            "select distinct countrylanguage.cntry_code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "countrylanguage",
        "table_candidates": [
            "countrylanguage",
            "country countrylanguage",
            "sqlite_sequence countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city countrylanguage"
        ],
        "align_scores": [
            0.9867058396339417,
            0.00025569662102498114,
            0.00024162621411960572,
            6.630578718613833e-05,
            0.0003290108870714903,
            6.842156290076673e-05,
            0.006356654688715935,
            7.566403655800968e-05
        ],
        "align_select": "select countrylanguage.cntry_code",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the country codes of countries where people use languages other than English?",
        "gold_select": "select distinct countrylanguage.cntry_code",
        "select_candidates": [
            "select countrylanguage.cntry_code",
            "select distinct countrylanguage.cntry_code",
            "select country.Name, countrylanguage.cntry_code",
            "select countrylanguage.cntry_code, countrylanguage.lang"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "countrylanguage",
        "table_candidates": [
            "countrylanguage",
            "country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.9833688139915466,
            0.2746603786945343,
            0.0513865202665329,
            0.00026763611822389066,
            0.00036936363903805614,
            0.0001778536243364215,
            0.0004204515425954014,
            0.00022332434309646487
        ],
        "align_select": "select countrylanguage.cntry_code",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give the country codes for countries in which people speak langauges that are not English.",
        "gold_select": "select distinct countrylanguage.cntry_code",
        "select_candidates": [
            "select countrylanguage.cntry_code",
            "select distinct countrylanguage.cntry_code",
            "select country.Name, countrylanguage.cntry_code",
            "select country.Code"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "countrylanguage",
        "table_candidates": [
            "countrylanguage",
            "country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.9780850410461426,
            0.41333165764808655,
            0.0389721542596817,
            0.0004035911988466978,
            0.00041483205859549344,
            0.00015917258861009032,
            0.5514557361602783,
            0.06883188337087631
        ],
        "align_select": "select countrylanguage.cntry_code",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the codes of the countries that do not speak English and whose government forms are not Republic?",
        "gold_select": "select country.Code",
        "select_candidates": [
            "select country.Code",
            "select country.Code, country.gf",
            "select country.Name, country.gf",
            "select country.Code, countrylanguage.lang"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.9519708156585693,
            0.08273159712553024,
            0.0007613642956130207,
            0.00023533184139523655,
            0.0002549259806983173,
            0.00030712815350852907,
            0.00039714001468382776,
            0.0004436942108441144
        ],
        "align_select": "select country.Code",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the codes of countries that do not speak English and do not have Republics for governments.",
        "gold_select": "select country.Code",
        "select_candidates": [
            "select country.Code",
            "select country.Code, countrylanguage.lang",
            "select country.Code, country.gf",
            "select country.Name, country.gf"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.009245618246495724,
            0.2737945020198822,
            0.0003428121854085475,
            0.00039754551835358143,
            0.00020976945233996958,
            0.0002676123986020684,
            0.00040712207555770874,
            0.0005018312949687243
        ],
        "align_select": "select country.Code",
        "align_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "Which cities are in European countries where English is not the official language?",
        "gold_select": "select distinct city.Name",
        "select_candidates": [
            "select city.Name",
            "select distinct city.Name",
            "select city.ID, city.Name",
            "select city.Name, country.cont"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "city country countrylanguage",
        "table_candidates": [
            "city country countrylanguage",
            "city sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.7999190092086792,
            0.0017327343812212348,
            0.08250637352466583,
            0.0484207421541214,
            0.0003474141994956881,
            0.00015475806139875203,
            0.00033189222449436784,
            0.00012949816300533712
        ],
        "align_select": "select city.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of cities in Europe for which English is not the official language?",
        "gold_select": "select distinct city.Name",
        "select_candidates": [
            "select city.Name",
            "select city.Name, country.cont",
            "select distinct city.Name",
            "select city.Name, country.Capital"
        ],
        "select_labels": [
            0.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "city country countrylanguage",
        "table_candidates": [
            "city country countrylanguage",
            "city sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9881308078765869,
            0.0012755454517900944,
            0.0002466515579726547,
            0.00012247168342582881,
            0.024760423228144646,
            0.021037956699728966,
            0.00022391196398530155,
            0.00012871147191617638
        ],
        "align_select": "select city.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which unique cities are in Asian countries where Chinese is the official language?",
        "gold_select": "select distinct city.Name",
        "select_candidates": [
            "select distinct city.Name",
            "select distinct city.ID",
            "select count(*)",
            "select count(distinct city.ID)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "city country countrylanguage",
        "table_candidates": [
            "city country countrylanguage",
            "city sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9801871180534363,
            0.00036284903762862086,
            0.8676100969314575,
            0.00027758334181271493,
            0.037045884877443314,
            9.56164876697585e-05,
            0.01147723849862814,
            7.306640327442437e-05
        ],
        "align_select": "select distinct city.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the different names of cities that are in Asia and for which Chinese is the official language.",
        "gold_select": "select distinct city.Name",
        "select_candidates": [
            "select distinct city.Name",
            "select distinct city.Name, country.Capital",
            "select distinct city.Name, country.cont",
            "select distinct city.Name, country.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "city country countrylanguage",
        "table_candidates": [
            "city country countrylanguage",
            "city sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9935991764068604,
            0.00012576083827298135,
            0.00018714569159783423,
            6.0231170209590346e-05,
            0.00026370605337433517,
            6.277146167121828e-05,
            0.00021376153745222837,
            6.301797111518681e-05
        ],
        "align_select": "select distinct city.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the name, independence year, and surface area of the country with the smallest population?",
        "gold_select": "select country.Name, country.sa, country.IndepYear",
        "select_candidates": [
            "select country.Name, country.IndepYear, country.sa",
            "select country.Name, country.IndepYear., country.sa",
            "select country.Name, country.IndepYear, country.sa",
            "select country.Name, country.IndepYear, country.sa"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9923107624053955,
            8.22382717160508e-05,
            0.054012857377529144,
            0.00011166714102728292,
            0.9923107624053955,
            8.22382717160508e-05,
            0.9923107624053955,
            8.22382717160508e-05
        ],
        "align_select": "select country.Name, country.IndepYear, country.sa",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Give the name, year of independence, and surface area of the country that has the lowest population.",
        "gold_select": "select country.Name, country.sa, country.IndepYear",
        "select_candidates": [
            "select country.Name, country.IndepYear, country.sa",
            "select country.Name, country.IndepYear.c5, country.sa",
            "select country.Name, country.IndepYear, country.sa",
            "select country.Name, country.IndepYear.c4, country.IndepYear"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9878115057945251,
            8.196784619940445e-05,
            0.0006708339788019657,
            8.858233195496723e-05,
            0.9878115057945251,
            8.196784619940445e-05,
            0.00041417154716327786,
            8.120416896417737e-05
        ],
        "align_select": "select country.Name, country.IndepYear, country.sa",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What are the population, name and leader of the country with the largest area?",
        "gold_select": "select country.Name, country.Population, country.hos",
        "select_candidates": [
            "select country.Population, country.Name, country.le",
            "select country.Code, country.Name, country.le",
            "select country.Name, country.Population, country.le",
            "select country.Population), country.Name, country.le"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9903719425201416,
            8.767154940869659e-05,
            0.0012736425269395113,
            7.773044490022585e-05,
            0.9896153211593628,
            8.962847641669214e-05,
            0.0031566775869578123,
            7.339587318710983e-05
        ],
        "align_select": "select country.Population, country.Name, country.le",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Give the name, population, and head of state for the country that has the largest area.",
        "gold_select": "select country.Name, country.Population, country.hos",
        "select_candidates": [
            "select country.Name, country.Population, country.hos",
            "select country.Name, country.Population, country.Capital",
            "select country.Name, country.IndepYear, country.Population, country.hos",
            "select country.Name, country.Population, country.hos"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9907793998718262,
            9.092941763810813e-05,
            0.966301441192627,
            0.0001024789089569822,
            0.0006899875588715076,
            7.772088429192081e-05,
            0.9907793998718262,
            9.092941763810813e-05
        ],
        "align_select": "select country.Name, country.Population, country.hos",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Return the country name and the numbers of languages spoken for each country that speaks at least 3 languages.",
        "gold_select": "select count(countrylanguage.lang), country.Name",
        "select_candidates": [
            "select country.Name, count(distinct countrylanguage.lang)",
            "select country.Name, count(distinct country.Name)",
            "select country.Name, count(*)",
            "select country.Name, count(distinct countrylanguage.IsOfficial)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.0947585180401802,
            8.851358870742843e-05,
            0.00017385203682351857,
            6.773071800125763e-05,
            0.4508833587169647,
            0.00011888384324265644,
            0.0008087866008281708,
            8.127125329338014e-05
        ],
        "align_select": "select country.Name, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the names of countries that speak more than 2 languages, as well as how many languages they speak?",
        "gold_select": "select count(countrylanguage.lang), country.Name",
        "select_candidates": [
            "select country.Name, count(distinct countrylanguage.lang)",
            "select country.Name, count(distinct country.Name)",
            "select country.Name, count(distinct country.cont)",
            "select country.Name, count(countrylanguage.lang)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.5448306202888489,
            0.00011054011702071875,
            0.00025521733914501965,
            7.164282578742132e-05,
            0.0003253939503338188,
            8.647943468531594e-05,
            0.026122847571969032,
            8.85568224475719e-05
        ],
        "align_select": "select country.Name, count(distinct countrylanguage.lang)",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Find the number of cities in each district whose population is greater than the average population of cities?",
        "gold_select": "select count(*), city.District",
        "select_candidates": [
            "select count(*), city.District",
            "select city.District, count(*)",
            "select count(*), city.District,",
            "select counts(*), city.District"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "city",
        "table_candidates": [
            "city"
        ],
        "align_scores": [
            0.9914209246635437,
            0.015044402331113815,
            0.9926546812057495,
            0.04880184680223465,
            0.002547913696616888,
            0.00023333709395956248,
            0.000939475663471967,
            0.0002529879566282034
        ],
        "align_select": "select count(*), city.District",
        "align_structure": "SELECT-FROM-WHERE-GROUP BY"
    },
    {
        "question": "How many cities in each district have a population that is above the average population across all cities?",
        "gold_select": "select count(*), city.District",
        "select_candidates": [
            "select count(*), city.District",
            "select city.District, count(*)",
            "select counts(*), city.District",
            "select count(*), city.District,"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "city",
        "table_candidates": [
            "city"
        ],
        "align_scores": [
            0.9905192852020264,
            0.0002491042541805655,
            0.9919633865356445,
            0.00022171744785737246,
            0.0013688723556697369,
            0.00018309996812604368,
            0.0024711121805012226,
            0.0001219404221046716
        ],
        "align_select": "select count(*), city.District",
        "align_structure": "SELECT-FROM-WHERE-GROUP BY"
    },
    {
        "question": "Find the government form name and total population for each government form whose average life expectancy is longer than 72.",
        "gold_select": "select sum(country.Population), country.gf",
        "select_candidates": [
            "select country.Name, sum(country.Population)",
            "select country.Name, count(*)",
            "select country.Name, sum(country.IndepYear)",
            "select country.Name, sum(country.GNP)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "sqlite_sequence country",
            "country countrylanguage"
        ],
        "align_scores": [
            0.006742990575730801,
            0.0002276203449582681,
            0.0003924445481970906,
            0.0002501920098438859,
            0.0002493848733138293,
            0.00010040657798526809,
            0.011878341436386108,
            0.0002291227865498513
        ],
        "align_select": "select country.Name, sum(country.Population)",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the different government forms and what is the total population of each for government forms that have an average life expectancy greater than 72?",
        "gold_select": "select sum(country.Population), country.gf",
        "select_candidates": [
            "select country.Capital, sum(country.Population)",
            "select country.GNP, sum(country.Population)",
            "select country.Name, sum(country.Population)",
            "select country.GNPOld, sum(country.Population)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "country countrylanguage",
            "sqlite_sequence country"
        ],
        "align_scores": [
            0.0017824491951614618,
            8.500771218677983e-05,
            0.5872185826301575,
            0.00014906428987160325,
            0.915673553943634,
            0.00018301511590834707,
            0.13829930126667023,
            0.00013589994341600686
        ],
        "align_select": "select country.Name, sum(country.Population)",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Find the average life expectancy and total population for each continent where the average life expectancy is shorter than 72?",
        "gold_select": "select sum(country.Population), avg(country.le), country.cont",
        "select_candidates": [
            "select avg(country.le), sum(country.Population), country.cont",
            "select country.Name, avg(country.Population)",
            "select country.Name, avg(country.le), sum(country.Population)",
            "select country.Name, avg(country.Population), sum(country.Population)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.39860251545906067,
            0.00015232613077387214,
            0.0010515442118048668,
            7.692410872550681e-05,
            0.006441860925406218,
            9.211985889123753e-05,
            0.00039776237099431455,
            7.011767593212426e-05
        ],
        "align_select": "select avg(country.le), sum(country.Population), country.cont",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the different continents and the total popuation and average life expectancy corresponding to each, for continents that have an average life expectancy less than 72?",
        "gold_select": "select sum(country.Population), avg(country.le), country.cont",
        "select_candidates": [
            "select country.cont, sum(country.Population), avg(country.Population)",
            "select country.Name, sum(country.Population), avg(country.Population)",
            "select country.cont, sum(country.Population), avg(country.le)",
            "select country.cont, count(*), avg(country.Population)"
        ],
        "select_labels": [
            0.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.2518880367279053,
            0.00011133816587971523,
            0.03849788382649422,
            0.00010442241909913719,
            0.5859522819519043,
            0.00012111463001929224,
            0.00966623518615961,
            0.00010460270277690142
        ],
        "align_select": "select country.cont, sum(country.Population), avg(country.le)",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the names and areas of countries with the top 5 largest area?",
        "gold_select": "select country.Name, country.sa",
        "select_candidates": [
            "select country.Name, country.cont",
            "select country.Name, country.Region",
            "select country.Name, country.sa",
            "select country.Name, country.cont.c3"
        ],
        "select_labels": [
            0.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.982014000415802,
            5.635163324768655e-05,
            0.0008739970508031547,
            6.55517796985805e-05,
            0.9920544624328613,
            6.539450987474993e-05,
            0.0004065934626851231,
            7.211893534986302e-05
        ],
        "align_select": "select country.Name, country.cont",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Return the names and surface areas of the 5 largest countries.",
        "gold_select": "select country.Name, country.sa",
        "select_candidates": [
            "select country.Name, country.sa",
            "select country.Name, country.cont",
            "select country.Name, country.Region",
            "select country.Name, country.Population"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9957519769668579,
            7.538107456639409e-05,
            0.9862971305847168,
            6.56509364489466e-05,
            0.0004326075140852481,
            8.723888458916917e-05,
            0.000575288780964911,
            6.935954297659919e-05
        ],
        "align_select": "select country.Name, country.sa",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "how many countries are in Asia?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), country.Code",
            "select count(*), country.Name",
            "select count(*), country.cont"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.995347797870636,
            0.00031047165975905955,
            0.0005199190345592797,
            0.0011247146176174283,
            0.00041565424180589616,
            0.0015688951825723052,
            0.00044781481847167015,
            0.00033798362710513175
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Count the number of countries in Asia.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), country.Name",
            "select count(*), country.Code",
            "select count(*), country.Capital"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9957026839256287,
            0.000186585690244101,
            0.0002219086018158123,
            0.0018845576560124755,
            0.00027474295347929,
            0.002342158230021596,
            0.00017326188390143216,
            0.00022022657503839582
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of the countries that are in the continent of Europe and have a population of 80000?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Population",
            "select country.Name, country.Region",
            "select country.Name, country.cont"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "city country",
            "city sqlite_sequence country"
        ],
        "align_scores": [
            0.9595640897750854,
            0.001315632718615234,
            0.00023559090914204717,
            0.00011336316674714908,
            0.0002299614279763773,
            9.96403832687065e-05,
            0.00035137092345394194,
            0.00010634396312525496
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give the names of countries that are in Europe and have a population equal to 80000.",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.cont",
            "select country.Name, country.Region",
            "select country.Name, country.Region, country.Population"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "city country"
        ],
        "align_scores": [
            0.8918541669845581,
            0.0005018131341785192,
            0.0002607603673823178,
            7.412818376906216e-05,
            0.0001932177838170901,
            7.36175206839107e-05,
            0.00014935868966858834,
            6.503734039142728e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the total population and average area of countries in the continent of North America whose area is bigger than 3000?",
        "gold_select": "select sum(country.Population), avg(country.sa)",
        "select_candidates": [
            "select sum(country.Population), avg(country.Population)",
            "select sum(country.Population), avg(country.sa)",
            "select sum(country.Population), avg(country.GNP)",
            "select sum(country.Population), avg(country.IndepYear)"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.002171061933040619,
            0.00016823371697682887,
            0.9145339131355286,
            0.0010325212497264147,
            0.007124470546841621,
            0.0005152944358997047,
            0.00037617605994455516,
            0.0001735173282213509
        ],
        "align_select": "select sum(country.Population), avg(country.sa)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give the total population and average surface area corresponding to countries in North America that have a surface area greater than 3000.",
        "gold_select": "select sum(country.Population), avg(country.sa)",
        "select_candidates": [
            "select sum(country.Population), avg(country.Population)",
            "select sum(country.Population), avg(country.sa)",
            "select avg(country.Population), sum(country.Population)",
            "select sum(country.Population), avg(country.GNP)"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.0027732476592063904,
            0.00021181102783884853,
            0.9857476353645325,
            0.0005525763262994587,
            0.011217364110052586,
            0.00021531409583985806,
            0.00046265407581813633,
            0.0001325861521763727
        ],
        "align_select": "select sum(country.Population), avg(country.sa)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the cities whose population is between 160000 and 900000?",
        "gold_select": "select city.Name",
        "select_candidates": [
            "select city.Name",
            "select city.ID, city.Name",
            "select city.Name, city.District",
            "select city.Name, city.CountryCode"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "city",
        "table_candidates": [
            "city",
            "city country"
        ],
        "align_scores": [
            0.9741663932800293,
            0.00026226683985441923,
            0.0002805459371302277,
            0.00010489388660062104,
            0.00021223352814558893,
            9.920598677126691e-05,
            0.00022610666928812861,
            0.00011407864803913981
        ],
        "align_select": "select city.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the names of cities that have a population between 160000 and 900000.",
        "gold_select": "select city.Name",
        "select_candidates": [
            "select city.Name",
            "select city.Name, city.District",
            "select city.Name, city.CountryCode",
            "select city.ID, city.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "city",
        "table_candidates": [
            "city",
            "city country",
            "city sqlite_sequence country"
        ],
        "align_scores": [
            0.9882296323776245,
            0.0002433513873256743,
            0.00018871431529987603,
            6.799559196224436e-05,
            0.000184673786861822,
            6.855675746919587e-05,
            0.00017898956139106303,
            7.761482265777886e-05
        ],
        "align_select": "select city.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which language is spoken by the largest number of countries?",
        "gold_select": "select countrylanguage.lang",
        "select_candidates": [
            "select countrylanguage.lang",
            "select countrylanguage.lang, country.Capital",
            "select countrylanguage.lang, country.Name",
            "select countrylanguage.lang, country.Code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "countrylanguage",
        "table_candidates": [
            "countrylanguage",
            "country countrylanguage",
            "sqlite_sequence countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9921444654464722,
            7.822590123396367e-05,
            0.0007869850960560143,
            6.530894461320713e-05,
            0.004269550088793039,
            7.269222260219976e-05,
            0.0012534118723124266,
            7.349251973209903e-05
        ],
        "align_select": "select countrylanguage.lang",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Give the language that is spoken in the most countries.",
        "gold_select": "select countrylanguage.lang",
        "select_candidates": [
            "select countrylanguage.lang",
            "select countrylanguage.lang, country.Capital",
            "select countrylanguage.lang, country.Name",
            "select countrylanguage.lang, country.Code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "countrylanguage",
        "table_candidates": [
            "countrylanguage",
            "country countrylanguage"
        ],
        "align_scores": [
            0.9946223497390747,
            7.19641539035365e-05,
            0.00034767595934681594,
            5.6137461797334254e-05,
            0.002514088060706854,
            6.487487553386018e-05,
            0.0008583058370277286,
            6.408357876352966e-05
        ],
        "align_select": "select countrylanguage.lang",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the language spoken by the largest percentage of people in each country?",
        "gold_select": "select countrylanguage.lang, countrylanguage.cntry_code, max(countrylanguage.pct)",
        "select_candidates": [
            "select countrylanguage.lang",
            "select countrylanguage.lang, country.Capital",
            "select countrylanguage.lang, country.cont",
            "select countrylanguage.lang, country.Code"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9916433691978455,
            7.700484275119379e-05,
            0.0008189279469661415,
            6.124720675870776e-05,
            0.0651058629155159,
            6.678380304947495e-05,
            0.006974474061280489,
            7.789302617311478e-05
        ],
        "align_select": "select countrylanguage.lang",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What are the country codes of the different countries, and what are the languages spoken by the greatest percentage of people for each?",
        "gold_select": "select countrylanguage.lang, countrylanguage.cntry_code, max(countrylanguage.pct)",
        "select_candidates": [
            "select country.Code, countrylanguage.lang",
            "select country.Name, countrylanguage.lang",
            "select countrylanguage.cntry_code, countrylanguage.lang",
            "select countrylanguage.lang, country.Code"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.9756715297698975,
            8.58033963595517e-05,
            0.00034457709989510477,
            0.00011022202670574188,
            0.9824864864349365,
            8.516748494002968e-05,
            0.9850308895111084,
            8.065407746471465e-05
        ],
        "align_select": "select country.Code, countrylanguage.lang",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the total number of countries where Spanish is spoken by the largest percentage of people?",
        "gold_select": "select count(*), max(countrylanguage.pct)",
        "select_candidates": [
            "select count(*)",
            "select count(*), countrylanguage.cntry_code",
            "select count(*), country.Name",
            "select count(*), country.Name, country.cont"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "countrylanguage",
            "sqlite_sequence country countrylanguage",
            "sqlite_sequence countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.9555000066757202,
            0.010027590207755566,
            0.0014703121269121766,
            0.0053720842115581036,
            0.0010187877342104912,
            0.0035981968976557255,
            0.00023309340758714825,
            0.000152642372995615
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Count the number of countries for which Spanish is the predominantly spoken language.",
        "gold_select": "select count(*), max(countrylanguage.pct)",
        "select_candidates": [
            "select count(*)",
            "select count(distinct countrylanguage.cntry_code)",
            "select count(*), countrylanguage.cntry_code",
            "select count(*), country.Name"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "countrylanguage",
        "table_candidates": [
            "countrylanguage",
            "country countrylanguage"
        ],
        "align_scores": [
            0.9916129112243652,
            7.121213275240734e-05,
            0.9081106781959534,
            6.517740985145792e-05,
            0.0004811736580450088,
            7.376129360636696e-05,
            0.00039558764547109604,
            6.151998968562111e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the codes of countries where Spanish is spoken by the largest percentage of people?",
        "gold_select": "select countrylanguage.cntry_code, max(countrylanguage.pct)",
        "select_candidates": [
            "select country.Code",
            "select country.Name, country.Code",
            "select country.Name, country.Code2",
            "select country.Name, country.cont"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.9816455841064453,
            0.9815635681152344,
            0.001165725407190621,
            0.0031707140151411295,
            0.000636354903690517,
            0.0016266604652628303,
            0.0009286148706451058,
            0.001942155882716179
        ],
        "align_select": "select country.Code",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT"
    },
    {
        "question": "Return the codes of countries for which Spanish is the predominantly spoken language.",
        "gold_select": "select countrylanguage.cntry_code, max(countrylanguage.pct)",
        "select_candidates": [
            "select countrylanguage.cntry_code",
            "select country.Name, countrylanguage.cntry_code",
            "select country.Code",
            "select country.Name, country.Code"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "countrylanguage",
        "table_candidates": [
            "countrylanguage",
            "country countrylanguage",
            "sqlite_sequence countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9894724488258362,
            0.00011535103112692013,
            0.00027049588970839977,
            6.830656639067456e-05,
            0.9836951494216919,
            8.971072384156287e-05,
            0.0002219725283794105,
            5.867519212188199e-05
        ],
        "align_select": "select countrylanguage.cntry_code",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many countries have a republic as their form of government?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), country.Code",
            "select count(*), country.Name",
            "select count(*), country.Capital"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9920794367790222,
            0.0005000602686777711,
            0.00037354230880737305,
            0.0003294223570264876,
            0.0003605817910283804,
            0.0004520632792264223,
            0.00026638846611604095,
            0.00014387138071469963
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many countries have governments that are republics?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), country.Name",
            "select count(*), country.Code",
            "select count(distinct country.Name)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9934929013252258,
            0.0031622040551155806,
            0.0004803082556463778,
            0.03186676651239395,
            0.0005179056897759438,
            0.009782481007277966,
            0.11480643600225449,
            0.0003444093163125217
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the total surface area of the countries in the Caribbean region?",
        "gold_select": "select sum(country.sa)",
        "select_candidates": [
            "select sum(country.sa)",
            "select sum(country.sa), country.Name",
            "select sum(country.popn)",
            "select sum(country.sa), country.le"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "sqlite_sequence country",
            "city country",
            "country countrylanguage"
        ],
        "align_scores": [
            0.996588945388794,
            0.00013831911201123148,
            0.00016301983851008117,
            8.563706069253385e-05,
            0.00047002240899018943,
            8.979983249446377e-05,
            0.0001652903447393328,
            8.266583608929068e-05
        ],
        "align_select": "select sum(country.sa)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How much surface area do the countires in the Carribean cover together?",
        "gold_select": "select sum(country.sa)",
        "select_candidates": [
            "select sum(country.sa)",
            "select sum(country.popn)",
            "select sum(country.GNP)",
            "select sum(country.IndepYear)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9748411774635315,
            0.03443923220038414,
            0.0004776878922712058,
            0.0001771615498000756,
            0.9505040645599365,
            0.09262483566999435,
            0.0012314252089709044,
            0.0008233033586293459
        ],
        "align_select": "select sum(country.sa)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which region is the city Kabul located in?",
        "gold_select": "select country.Region",
        "select_candidates": [
            "select country.Region",
            "select country.Region, city.cntry_code",
            "select country.Name, city.cntry_code",
            "select country.Name, city.dist"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "city country",
        "table_candidates": [
            "city country",
            "city",
            "city sqlite_sequence country"
        ],
        "align_scores": [
            0.9959432482719421,
            0.00014211413508746773,
            0.00030821049585938454,
            8.240344322985038e-05,
            0.0002164596226066351,
            7.391352119157091e-05,
            0.00018054696556646377,
            6.312791811069474e-05
        ],
        "align_select": "select country.Region",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What region is Kabul in?",
        "gold_select": "select country.Region",
        "select_candidates": [
            "select country.Region",
            "select country.Region, city.cntry_code",
            "select distinct country.Region",
            "select country.Region, city.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "city country",
        "table_candidates": [
            "city country",
            "city sqlite_sequence country"
        ],
        "align_scores": [
            0.995927631855011,
            0.00012034205428790301,
            0.0003325528814457357,
            8.295201405417174e-05,
            0.03511502221226692,
            0.00021626712987199426,
            0.00018699924112297595,
            7.51633633626625e-05
        ],
        "align_select": "select country.Region",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which language is the most popular in Aruba?",
        "gold_select": "select countrylanguage.lang",
        "select_candidates": [
            "select countrylanguage.lang",
            "select countrylanguage.lang, country.LocalName",
            "select countrylanguage.lang, country.Code",
            "select countrylanguage.lang, country.Capital"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9929865002632141,
            0.9912793040275574,
            0.00038394550210796297,
            0.0005721758352592587,
            0.00034132954897359014,
            0.0003995641600340605,
            0.0003040544979739934,
            0.00024036240938585252
        ],
        "align_select": "select countrylanguage.lang",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT"
    },
    {
        "question": "What language is predominantly spoken in Aruba?",
        "gold_select": "select countrylanguage.lang",
        "select_candidates": [
            "select countrylanguage.lang",
            "select countrylanguage.lang, country.LocalName",
            "select dominant countrylanguage.lang",
            "select countrylanguage.lang, country.Code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9918223023414612,
            0.008879241533577442,
            0.0004966637934558094,
            0.00026072849868796766,
            0.0030653250869363546,
            0.0002935216762125492,
            0.00039712581201456487,
            0.00022116233594715595
        ],
        "align_select": "select countrylanguage.lang",
        "align_structure": "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What are the population and life expectancies in Brazil?",
        "gold_select": "select country.popn, country.le",
        "select_candidates": [
            "select country.popn, country.le",
            "select country.Code, country.popn, country.le",
            "select country.Code, country.Name, country.popn, country.le",
            "select country.Code, country.Name, country.popn"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "city country"
        ],
        "align_scores": [
            0.9856101870536804,
            0.00025317809195257723,
            0.00024409779871348292,
            9.716820932226256e-05,
            0.00022076965251471847,
            0.0001063060262822546,
            0.00024312759342137724,
            0.00013867911184206605
        ],
        "align_select": "select country.popn, country.le",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give me Brazil\u2019s population and life expectancies.",
        "gold_select": "select country.popn, country.le",
        "select_candidates": [
            "select country.popn, country.le",
            "select country.Code, country.popn, country.le",
            "select country.Code, country.Name, country.popn, country.le",
            "select country.Name, country.popn, country.le"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9825577139854431,
            0.00016373877588193864,
            0.00022183118562679738,
            0.00013879063772037625,
            0.00018525471386965364,
            9.953449625754729e-05,
            0.00019608168804552406,
            0.00015005214663688093
        ],
        "align_select": "select country.popn, country.le",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the region and population of Angola?",
        "gold_select": "select country.popn, country.Region",
        "select_candidates": [
            "select country.Region, country.popn",
            "select country.Name, country.Region, country.popn",
            "select country.Continent, country.Region, country.popn",
            "select country.Region, country.popn, country.le"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "city country",
            "sqlite_sequence country"
        ],
        "align_scores": [
            0.991285502910614,
            0.00044126700959168375,
            0.0002360421494813636,
            7.821799226803705e-05,
            0.00025019512395374477,
            7.683620788156986e-05,
            0.00026193223311565816,
            8.588108903495595e-05
        ],
        "align_select": "select country.Region, country.popn",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What region does Angola belong to and what is its population?",
        "gold_select": "select country.popn, country.Region",
        "select_candidates": [
            "select country.Region, country.popn",
            "select country.Name, country.Region, country.popn",
            "select country.Continent, country.Region, country.popn",
            "select country.Region, count(*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "sqlite_sequence country",
            "city country"
        ],
        "align_scores": [
            0.9900133609771729,
            0.00010969294817186892,
            0.0001979296503122896,
            8.574541425332427e-05,
            0.0003433242382016033,
            7.398685556836426e-05,
            0.9350617527961731,
            0.00010409156675450504
        ],
        "align_select": "select country.Region, country.popn",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the average expected life expectancy for countries in the region of Central Africa?",
        "gold_select": "select avg(country.le)",
        "select_candidates": [
            "select avg(country.le)",
            "select an avg(country.le)",
            "select  avg(country.le)",
            "select avg(country.GNP)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "country countrylanguage",
            "sqlite_sequence country",
            "city country"
        ],
        "align_scores": [
            0.995487630367279,
            0.0001513862662250176,
            0.0004294531827326864,
            0.00013377581490203738,
            0.995487630367279,
            0.0001513862662250176,
            0.9939670562744141,
            0.00016796539421193302
        ],
        "align_select": "select avg(country.le)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How long is the people\u2019s average life expectancy in Central Africa?",
        "gold_select": "select avg(country.le)",
        "select_candidates": [
            "select avg(country.le)",
            "select avg(country.popn)",
            "select avg(country.GNP)",
            "select an avg(country.le)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "city country",
            "sqlite_sequence country",
            "country countrylanguage"
        ],
        "align_scores": [
            0.9960261583328247,
            8.393054304178804e-05,
            0.03311219438910484,
            8.412686293013394e-05,
            0.9939297437667847,
            8.88162903720513e-05,
            0.0004488907870836556,
            0.00010797395225381479
        ],
        "align_select": "select avg(country.le)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the name of country that has the shortest life expectancy in Asia?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Continent",
            "select country.Name, country.Region",
            "select country.Name, country.popn"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "country countrylanguage"
        ],
        "align_scores": [
            0.9908233880996704,
            0.0002901099796872586,
            0.0003240129735786468,
            0.00013063657388556749,
            0.00024537419085390866,
            0.00012181257625343278,
            0.00023262361355591565,
            9.545404464006424e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT"
    },
    {
        "question": "Give the name of the country in Asia with the lowest life expectancy.",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Continent",
            "select country.Name, country.Region",
            "select country.Name, country.popn"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "country countrylanguage",
            "sqlite_sequence country"
        ],
        "align_scores": [
            0.9912881255149841,
            0.00024138441949617118,
            0.00024415060761384666,
            0.0001121662717196159,
            0.00021274448954500258,
            9.946220961865038e-05,
            0.00020445408881641924,
            8.462733239866793e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT"
    },
    {
        "question": "What is the total population and maximum GNP in Asia?",
        "gold_select": "select sum(country.popn), max(country.GNP)",
        "select_candidates": [
            "select sum(country.popn), max(country.GNP)",
            "select max(country.GNP), sum(country.popn)",
            "select sum(country.IndepYear), max(country.GNP)",
            "select country.popn, max(country.GNP)"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9949496984481812,
            0.00011074626672780141,
            0.9939489364624023,
            9.802647400647402e-05,
            0.00022871831606607884,
            9.307915752287954e-05,
            0.445158451795578,
            0.00015176318993326277
        ],
        "align_select": "select sum(country.popn), max(country.GNP)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many people live in Asia, and what is the largest GNP among them?",
        "gold_select": "select sum(country.popn), max(country.GNP)",
        "select_candidates": [
            "select country.popn, country.GNP",
            "select country.Code, country.popn, country.GNP",
            "select country.Name, country.popn",
            "select country.Code, country.popn"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.7356204390525818,
            0.17258930206298828,
            0.00023041179520078003,
            0.00028385251061990857,
            0.0003688603173941374,
            0.0012021763250231743,
            0.0008310814737342298,
            0.002009933814406395
        ],
        "align_select": "select country.popn, country.GNP",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT"
    },
    {
        "question": "What is the average life expectancy in African countries that are republics?",
        "gold_select": "select avg(country.le)",
        "select_candidates": [
            "select avg(country.le)",
            "select avg(country.GNP)",
            "select avg(country.popn)",
            "select an avg(country.le)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "country countrylanguage",
            "sqlite_sequence country"
        ],
        "align_scores": [
            0.9965831637382507,
            0.00018019680283032358,
            0.9946178793907166,
            0.00020220654550939798,
            0.0006950707756914198,
            0.0001293716486543417,
            0.0004610825562849641,
            0.00012008265184704214
        ],
        "align_select": "select avg(country.le)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give the average life expectancy for countries in Africa which are republics?",
        "gold_select": "select avg(country.le)",
        "select_candidates": [
            "select avg(country.le)",
            "select avg(country.GNP)",
            "select avg(country.popn)",
            "select an avg(country.le)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "country countrylanguage",
            "sqlite_sequence country"
        ],
        "align_scores": [
            0.9967447519302368,
            0.00013355773990042508,
            0.9957276582717896,
            0.0001439635962015018,
            0.000744377844966948,
            0.0001454130542697385,
            0.0004388164379633963,
            0.0001307663187617436
        ],
        "align_select": "select avg(country.le)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the total surface area of the continents Asia and Europe?",
        "gold_select": "select sum(country.sa)",
        "select_candidates": [
            "select sum(country.sa)",
            "select sum(country.popn)",
            "select sum(country.GNP)",
            "select sum(country.IndepYear)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "sqlite_sequence country",
            "city country",
            "country countrylanguage"
        ],
        "align_scores": [
            0.9958167672157288,
            0.0005100573180243373,
            0.0004312568053137511,
            0.00025518276379443705,
            0.9913937449455261,
            0.0006637852056883276,
            0.00038145569851621985,
            0.00016480124031659216
        ],
        "align_select": "select sum(country.sa)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give the total surface area covered by countries in Asia or Europe.",
        "gold_select": "select sum(country.sa)",
        "select_candidates": [
            "select sum(country.sa)",
            "select sum(country.sa), country.Name",
            "select sum(country.sa), country.IndepYear",
            "select sum(country.popn)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9967509508132935,
            0.013589237816631794,
            0.00018186596571467817,
            0.000386411149520427,
            0.00012056006380589679,
            0.00014384531823452562,
            0.0004057899641338736,
            0.00010417000885354355
        ],
        "align_select": "select sum(country.sa)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many people live in Gelderland district?",
        "gold_select": "select sum(city.popn)",
        "select_candidates": [
            "select sum(city.popn)",
            "select count(*)",
            "select city.popn",
            "select sum(city.popn), city.dist"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "city",
        "table_candidates": [
            "city"
        ],
        "align_scores": [
            0.9529936909675598,
            7.121376256691292e-05,
            0.9958819150924683,
            8.797102054813877e-05,
            0.956322431564331,
            0.00013336530537344515,
            0.00012486321793403476,
            5.926825542701408e-05
        ],
        "align_select": "select sum(city.popn)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the total population of Gelderland district?",
        "gold_select": "select sum(city.popn)",
        "select_candidates": [
            "select sum(city.popn)",
            "select sum(city.popn), city.dist",
            "select sum(city.popn), city.dist, city.popn",
            "select sum(city.popn), city.dist"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "city",
        "table_candidates": [
            "city"
        ],
        "align_scores": [
            0.9966492056846619,
            0.011879739351570606,
            0.00014543718134518713,
            0.005856186617165804,
            0.00023832959413994104,
            0.00011890287714777514,
            0.00014543718134518713,
            0.005856186617165804
        ],
        "align_select": "select sum(city.popn)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the average GNP and total population in all nations whose government is US territory?",
        "gold_select": "select avg(country.GNP), sum(country.popn)",
        "select_candidates": [
            "select avg(country.GNP), avg(country.popn)",
            "select avg(country.GNP), sum(country.popn)",
            "select avg(country.popn), avg(country.GNP)",
            "select avg(country.le), avg(country.popn)"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9605615735054016,
            0.0004468583792913705,
            0.9876042604446411,
            0.0009401481365785003,
            0.978617250919342,
            0.0007926365942694247,
            0.00032570029725320637,
            0.0001281684380955994
        ],
        "align_select": "select avg(country.GNP), avg(country.popn)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give the mean GNP and total population of nations which are considered US territory.",
        "gold_select": "select avg(country.GNP), sum(country.popn)",
        "select_candidates": [
            "select avg(country.GNP), sum(country.popn)",
            "select avg(country.popn), avg(country.GNP)",
            "select avg(country.popn), sum(country.GNP)",
            "select avg(country.le), sum(country.popn)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9961826205253601,
            0.00046083691995590925,
            0.995370090007782,
            0.00027654494624584913,
            0.9958486557006836,
            0.000680109835229814,
            0.00042534308158792555,
            0.00014740589540451765
        ],
        "align_select": "select avg(country.GNP), sum(country.popn)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many unique languages are spoken in the world?",
        "gold_select": "select count(distinct countrylanguage.lang)",
        "select_candidates": [
            "select count(distinct countrylanguage.lang)",
            "select count(distinct countrylanguage.ofcl)",
            "select count(distinct countrylanguage.CountryCode)",
            "select count(distinct countrylanguage.lang"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "countrylanguage",
        "table_candidates": [
            "countrylanguage"
        ],
        "align_scores": [
            0.9933498501777649,
            0.9933498501777649,
            0.7704319357872009,
            0.7704319357872009,
            0.0015227434923872352,
            0.0015227434923872352,
            0.25698521733283997,
            0.25698521733283997
        ],
        "align_select": "select count(distinct countrylanguage.lang)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What is the number of distinct languages used around the world?",
        "gold_select": "select count(distinct countrylanguage.lang)",
        "select_candidates": [
            "select count(distinct countrylanguage.lang)",
            "select count(select count(distinct countrylanguage.lang)",
            "select count(distinct countrylanguage.ofcl)",
            "select count(count(distinct countrylanguage.lang)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "countrylanguage",
        "table_candidates": [
            "countrylanguage"
        ],
        "align_scores": [
            0.9948018789291382,
            0.9948018789291382,
            0.0005965868476778269,
            0.0005965868476778269,
            0.8130921125411987,
            0.8130921125411987,
            0.0005097543471492827,
            0.0005097543471492827
        ],
        "align_select": "select count(distinct countrylanguage.lang)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "How many type of governments are in Africa?",
        "gold_select": "select count(distinct country.gf)",
        "select_candidates": [
            "select count(distinct country.Name)",
            "select count(distinct country.GNP)",
            "select count(distinct country.popn)",
            "select count(distinct country.le)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "sqlite_sequence country",
            "city country",
            "country countrylanguage"
        ],
        "align_scores": [
            0.018460864201188087,
            8.291973790619522e-05,
            0.9693083763122559,
            9.428038902115077e-05,
            0.0005328597617335618,
            7.401989569189027e-05,
            0.00384120037779212,
            7.518917846027762e-05
        ],
        "align_select": "select count(distinct country.GNP)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many different forms of governments are there in Africa?",
        "gold_select": "select count(distinct country.gf)",
        "select_candidates": [
            "select count(distinct country.GNP)",
            "select count(distinct country.le)",
            "select count(distinct country.GNPOld)",
            "select count(distinct country.popn)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "sqlite_sequence country",
            "country countrylanguage",
            "city country"
        ],
        "align_scores": [
            0.9947794675827026,
            0.00013003380445297807,
            0.012423914857208729,
            8.475509093841538e-05,
            0.8961710333824158,
            0.00012264862016309053,
            0.0008401520899496973,
            7.962546806083992e-05
        ],
        "align_select": "select count(distinct country.GNP)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the total number of languages used in Aruba?",
        "gold_select": "select count(countrylanguage.lang)",
        "select_candidates": [
            "select count(distinct countrylanguage.lang)",
            "select count(*)",
            "select count(countrylanguage.lang)",
            "select count(selection count(distinct countrylanguage.lang)"
        ],
        "select_labels": [
            0.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9939590692520142,
            0.0002527490141801536,
            0.9939318895339966,
            0.0024279530625790358,
            0.9951716065406799,
            0.0019105541286990047,
            0.0006849079509265721,
            0.00010635035141604021
        ],
        "align_select": "select count(distinct countrylanguage.lang)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many languages are spoken in Aruba?",
        "gold_select": "select count(countrylanguage.lang)",
        "select_candidates": [
            "select count(distinct countrylanguage.lang)",
            "select count(count(distinct countrylanguage.lang)",
            "select count(distinct countrylanguage.lang",
            "select count(distinct countrylanguage.ofcl)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9960011839866638,
            0.00015043250459712,
            0.000653364637400955,
            0.00010022921924246475,
            0.7598951458930969,
            0.00016321132716257125,
            0.9363739490509033,
            0.00013762024173047394
        ],
        "align_select": "select count(distinct countrylanguage.lang)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many official languages does Afghanistan have?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(distinct countrylanguage.lang)",
            "select count(distinct countrylanguage.ofcl)",
            "select count(distinct countrylanguage.lang, countrylanguage.ofcl)",
            "select count(distinct countrylanguage.lang, count(distinct countrylanguage.ofcl)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9841769933700562,
            6.629421113757417e-05,
            0.992379903793335,
            6.427460175473243e-05,
            0.00023871075245551765,
            5.816194607177749e-05,
            0.00015311148308683187,
            6.827530160080642e-05
        ],
        "align_select": "select count(distinct countrylanguage.lang)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many official languages are spoken in Afghanistan?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(distinct countrylanguage.lang)",
            "select count(distinct countrylanguage.ofcl)",
            "select count(distinct countrylanguage.lang, count(distinct countrylanguage.ofcl)",
            "select count(distinct countrylanguage.lang, countrylanguage.ofcl)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9482739567756653,
            0.9482739567756653,
            0.9924983382225037,
            0.9924983382225037,
            0.0001412823621649295,
            0.0001412823621649295,
            0.00024893804220482707,
            0.00024893804220482707
        ],
        "align_select": "select count(distinct countrylanguage.lang)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many countries speak both English and Dutch?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(distinct countrylanguage.CountryCode)",
            "select count(*), countrylanguage.CountryCode",
            "select count(*), countrylanguage.lang"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "countrylanguage",
            "country countrylanguage"
        ],
        "align_scores": [
            0.9916921854019165,
            0.4901256561279297,
            0.16262021660804749,
            0.0002938873949460685,
            0.000489005702547729,
            0.00034222815884277225,
            0.00028210505843162537,
            0.000307429872918874
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the number of nations that use English and Dutch?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), countrylanguage.CountryCode",
            "select count(*), countrylanguage.lang",
            "select count(countrylanguage.CountryCode)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "countrylanguage",
            "country countrylanguage"
        ],
        "align_scores": [
            0.9906153678894043,
            0.01515202410519123,
            0.0005115749663673341,
            0.0031121328938752413,
            0.00032900588121265173,
            0.0009745010174810886,
            0.1396934986114502,
            0.016249332576990128
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of nations speak both English and French?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, countrylanguage.lang",
            "select country.Name, countrylanguage.CountryCode",
            "select country.Name, country.Capital"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.9898960590362549,
            0.00022923073265701532,
            0.00038677529664710164,
            0.00014038717199582607,
            0.000275890517514199,
            0.000142536053317599,
            0.00013408102677203715,
            8.121858263621107e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "Give the names of nations that speak both English and French.",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, countrylanguage.lang",
            "select country.Name, countrylanguage.CountryCode",
            "select country.Name, country.Capital"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.9946801066398621,
            0.00039546130574308336,
            0.0003038105205632746,
            0.00015739272930659354,
            0.00030153864645399153,
            0.00016038210014812648,
            0.0001949612342286855,
            9.6807700174395e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of nations where both English and French are official languages?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, countrylanguage.lang",
            "select country.Name, country.Capital",
            "select country.Name, countrylanguage.CountryCode"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.9944774508476257,
            0.0006832506624050438,
            0.000290775642497465,
            0.00014368724077939987,
            0.00021406973246484995,
            0.00010022787319030613,
            0.0004511794832069427,
            0.0001877784525277093
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "Give the names of countries with English and French as official languages.",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, countrylanguage.ofcl",
            "select country.Name, country.Capital",
            "select country.Name, countrylanguage.lang"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.9956178665161133,
            0.0008022414403967559,
            0.0002779792994260788,
            9.458709246246144e-05,
            0.00024065503384917974,
            9.521813626633957e-05,
            0.00021966060739941895,
            8.33600788610056e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "What is the number of distinct continents where Chinese is spoken?",
        "gold_select": "select count(distinct country.Continent)",
        "select_candidates": [
            "select count(distinct country.Continent)",
            "select count(distinct country.Name)",
            "select count(distinct country.popn)",
            "select count(distinct country.IndepYear)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.9965053796768188,
            0.0002231302350992337,
            0.00117464829236269,
            0.00021273230959195644,
            0.00038808200042694807,
            0.00010097499034600332,
            0.0004032198921777308,
            0.00011958375398535281
        ],
        "align_select": "select count(distinct country.Continent)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many continents speak Chinese?",
        "gold_select": "select count(distinct country.Continent)",
        "select_candidates": [
            "select count(distinct country.Continent)",
            "select count(country.Continent)",
            "select count(continents)",
            "select count(*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.9599130153656006,
            9.854315430857241e-05,
            0.9709805846214294,
            0.0005512774805538356,
            0.6651768088340759,
            0.00019857878214679658,
            0.9846463799476624,
            0.0026095726061612368
        ],
        "align_select": "select count(distinct country.Continent)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the regions that use English or Dutch?",
        "gold_select": "select distinct country.Region",
        "select_candidates": [
            "select country.Region",
            "select distinct country.Region",
            "select country.Region, countrylanguage.CountryCode",
            "select country.Region, countrylanguage.lang"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.99305659532547,
            0.09572670608758926,
            0.024992380291223526,
            0.00021602991910185665,
            0.0002541174180805683,
            0.000136439164634794,
            0.00031259082606993616,
            0.00014989513147156686
        ],
        "align_select": "select country.Region",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which regions speak Dutch or English?",
        "gold_select": "select distinct country.Region",
        "select_candidates": [
            "select country.Region",
            "select distinct country.Region",
            "select country.Region, countrylanguage.lang",
            "select country.Code, country.Region"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9928929209709167,
            0.05288585647940636,
            0.04619019851088524,
            0.00024547477369196713,
            0.0003309282474219799,
            0.00015892888768576086,
            0.0002470601466484368,
            0.00012274127220734954
        ],
        "align_select": "select country.Region",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the countries where either English or Dutch is the official language?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, countrylanguage.CountryCode",
            "select country.Name, country.Code",
            "select country.Name, country.Continent"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "countrylanguage",
            "sqlite_sequence country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.9091584086418152,
            0.008379027247428894,
            0.0012927578063681722,
            0.00023815175518393517,
            0.00099596893414855,
            0.0001846526429289952,
            0.00032258746796287596,
            0.00012283695104997605
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which countries have either English or Dutch as an official language?",
        "gold_select": "select *",
        "select_candidates": [
            "select country.Name",
            "select country.Name, countrylanguage.CountryCode",
            "select country.Name, country.Code",
            "select country.Name, country.Region"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.9339724183082581,
            0.011120518669486046,
            0.0009457009728066623,
            0.00025381179875694215,
            0.0012195935705676675,
            0.0002266953233629465,
            0.0002468746097292751,
            0.00011582100705709308
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which language is the most popular on the Asian continent?",
        "gold_select": "select countrylanguage.lang",
        "select_candidates": [
            "select countrylanguage.lang",
            "select countrylanguage.lang, country.Code",
            "select countrylanguage.lang, country.Continent",
            "select countrylanguage.lang, country.popn"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.9873043894767761,
            0.9919390082359314,
            0.0003153289726469666,
            0.0004434061120264232,
            0.00028915455914102495,
            0.0006249758298508823,
            0.0005905719590373337,
            0.0018389690667390823
        ],
        "align_select": "select countrylanguage.lang",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT"
    },
    {
        "question": "What is the language that is used by the largest number of Asian nations?",
        "gold_select": "select countrylanguage.lang",
        "select_candidates": [
            "select countrylanguage.lang",
            "select countrylanguage.lang, country.Code",
            "select countrylanguage.lang, country.Capital",
            "select countrylanguage.lang, country.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.9916111826896667,
            0.0001510583533672616,
            0.0020929339807480574,
            9.647722617955878e-05,
            0.0009005212923511863,
            7.738808199064806e-05,
            0.003771009622141719,
            8.928179158829153e-05
        ],
        "align_select": "select countrylanguage.lang",
        "align_structure": "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Which languages are spoken by only one country in republic governments?",
        "gold_select": "select countrylanguage.lang",
        "select_candidates": [
            "select countrylanguage.lang",
            "select countrylanguage.lang, country.gf",
            "select countrylanguage.lang, country.LocalName",
            "select countrylanguage.lang, country.Code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY-HAVING",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.9687312245368958,
            0.14152076840400696,
            0.0006774853100068867,
            0.00014268592349253595,
            0.0009318357333540916,
            0.00017072897753678262,
            0.0005924535798840225,
            0.0001471019204473123
        ],
        "align_select": "select countrylanguage.lang",
        "align_structure": "SELECT-FROM-WHERE-GROUP BY-HAVING"
    },
    {
        "question": "What languages are only used by a single country with a republic government?",
        "gold_select": "select countrylanguage.lang",
        "select_candidates": [
            "select countrylanguage.lang",
            "select countrylanguage.lang, country.LocalName",
            "select countrylanguage.lang, country.Capital",
            "select countrylanguage.lang, country.Code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.15963487327098846,
            0.9373142123222351,
            0.0002037628146354109,
            0.0005325294332578778,
            0.00011590387293836102,
            0.00026575199444778264,
            0.0001739644503686577,
            0.0003556350420694798
        ],
        "align_select": "select countrylanguage.lang",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the city with the largest population that uses English.",
        "gold_select": "select city.Name, city.popn",
        "select_candidates": [
            "select city.Name",
            "select city.Name, countrylanguage.lang",
            "select city.Name, countrylanguage.ofcl",
            "select city.ID, city.Name"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "city countrylanguage",
        "table_candidates": [
            "city countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.9854421615600586,
            0.9802011847496033,
            0.0013456637971103191,
            0.003591713262721896,
            0.0007389653474092484,
            0.002176155336201191,
            0.0005970880738459527,
            0.0007859509205445647
        ],
        "align_select": "select city.Name",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT"
    },
    {
        "question": "What is the most populace city that speaks English?",
        "gold_select": "select city.Name, city.popn",
        "select_candidates": [
            "select city.Name",
            "select city.Name, countrylanguage.lang",
            "select city.ID, city.Name",
            "select city.Name, countrylanguage.ofcl"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "city countrylanguage",
        "table_candidates": [
            "city countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.9883238077163696,
            0.0001238840923178941,
            0.0006918598664924502,
            8.820623042993248e-05,
            0.00055233936291188,
            7.231941708596423e-05,
            0.00044953604810871184,
            8.193613030016422e-05
        ],
        "align_select": "select city.Name",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT"
    },
    {
        "question": "Find the name, population and expected life length of asian country with the largest area?",
        "gold_select": "select country.Name, country.popn, country.le",
        "select_candidates": [
            "select country.Name, country.popn, country.le",
            "select country.Name, country.Code, country.popn, country.le",
            "select country.Name, country.IndepYear, country.popn, country.le",
            "select country.Name, country.popn, country.le"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9669592976570129,
            0.00014619661669712514,
            0.0005484081339091063,
            0.00013985355326440185,
            0.000858694373164326,
            0.0001144528214354068,
            0.9669592976570129,
            0.00014619661669712514
        ],
        "align_select": "select country.Name, country.popn, country.le",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the name, population, and life expectancy of the largest Asian country by land?",
        "gold_select": "select country.Name, country.popn, country.le",
        "select_candidates": [
            "select country.Name, country.popn, country.le",
            "select country.Name, country.IndepYear, country.popn, country.le",
            "select country.Name, country.popn, country.hos",
            "select country.Name, country.Code, country.popn, country.le"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9699230194091797,
            0.000541809422429651,
            0.0026257107965648174,
            9.787291492102668e-05,
            0.9800599813461304,
            0.0010335467522963881,
            0.0013957057381048799,
            0.00012694421457126737
        ],
        "align_select": "select country.Name, country.popn, country.le",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is average life expectancy in the countries where English is not the official language?",
        "gold_select": "select avg(country.le)",
        "select_candidates": [
            "select avg(country.le)",
            "select avg(t3.c7)",
            "select an avg(country.le)",
            "select avg(country.GNP)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.9952768087387085,
            0.00024488545022904873,
            0.0006284290575422347,
            0.0001579994714120403,
            0.00044794013956561685,
            0.0001426812814315781,
            0.9691985249519348,
            0.00032375144655816257
        ],
        "align_select": "select avg(country.le)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give the mean life expectancy of countries in which English is not the official language.",
        "gold_select": "select avg(country.le)",
        "select_candidates": [
            "select avg(country.le)",
            "select an avg(country.le)",
            "select m.avg(country.le)",
            "select avg(t3.c7)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.9962922930717468,
            0.0001164530185633339,
            0.00039901561103761196,
            0.00011049900786019862,
            0.0013708417536690831,
            0.00012586064985953271,
            0.0004791010287590325,
            0.00014685526548419148
        ],
        "align_select": "select avg(country.le)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the total number of people living in the nations that do not use English?",
        "gold_select": "select sum(country.popn)",
        "select_candidates": [
            "select sum(country.popn)",
            "select sum(country.popn), countrylanguage.lang",
            "select sum(country.popn), countrylanguage.lang",
            "select sum(country.popn), countrylanguage.CountryCode"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence countrylanguage",
            "country"
        ],
        "align_scores": [
            0.9904263615608215,
            0.0010648734169080853,
            0.00015089927182998508,
            0.0013881108025088906,
            0.00015089927182998508,
            0.0013881108025088906,
            0.00014492165064439178,
            0.0029342316556721926
        ],
        "align_select": "select sum(country.popn)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many people live in countries that do not speak English?",
        "gold_select": "select sum(country.popn)",
        "select_candidates": [
            "select sum(country.popn)",
            "select count(*)",
            "select count(country.popn)",
            "select sum(country.popn), countrylanguage.lang"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.8769401907920837,
            7.616136281285435e-05,
            0.9891139268875122,
            0.0001024914308800362,
            0.03566574305295944,
            8.135825919453055e-05,
            0.00014930186443962157,
            6.25726897851564e-05
        ],
        "align_select": "select sum(country.popn)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the official language spoken in the country whose head of state is Beatrix?",
        "gold_select": "select countrylanguage.lang",
        "select_candidates": [
            "select countrylanguage.lang",
            "select countrylanguage.lang, country.le",
            "select countrylanguage.lang, countrylanguage.ofcl",
            "select countrylanguage.lang, country.Continent"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9792898893356323,
            0.0002166952472180128,
            0.00035594470682553947,
            8.336723840329796e-05,
            0.000349415116943419,
            7.542313687736169e-05,
            0.00025168925640173256,
            7.602181722177193e-05
        ],
        "align_select": "select countrylanguage.lang",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the official language used in the country the name of whose head of state is Beatrix.",
        "gold_select": "select countrylanguage.lang",
        "select_candidates": [
            "select countrylanguage.lang",
            "select countrylanguage.lang, countrylanguage.ofcl",
            "select official(countrylanguage.lang)",
            "select countrylanguage.lang (countrylanguage.ofcl)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9872409701347351,
            0.00016996977501548827,
            0.00032049650326371193,
            7.539573562098667e-05,
            0.0016858435701578856,
            8.833500760374591e-05,
            0.0005435409257188439,
            7.082381489453837e-05
        ],
        "align_select": "select countrylanguage.lang",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the total number of unique official languages spoken in the countries that are founded before 1930?",
        "gold_select": "select count(distinct countrylanguage.lang)",
        "select_candidates": [
            "select count(distinct countrylanguage.lang)",
            "select count(distinct countrylanguage.ofcl)",
            "select count(distinct countrylanguage.lang, count(distinct countrylanguage.ofcl)",
            "select count(distinct countrylanguage.lang, countrylanguage.ofcl)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.9908791184425354,
            0.00037726477603428066,
            0.9911600947380066,
            0.00032512666075490415,
            0.0001758528669597581,
            0.00012752535985782743,
            0.00034232312464155257,
            0.00012868779595009983
        ],
        "align_select": "select count(distinct countrylanguage.lang)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "For the countries founded before 1930, what is the total number of distinct official languages?",
        "gold_select": "select count(distinct countrylanguage.lang)",
        "select_candidates": [
            "select count(distinct countrylanguage.ofcl)",
            "select count(distinct countrylanguage.lang)",
            "select count(distinct t3.c6)",
            "select count(distinct t3.c5)"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9932670593261719,
            0.00034913604031316936,
            0.9917107820510864,
            0.0003080289752688259,
            0.0005396187771111727,
            0.00019188542501069605,
            0.0005175982369109988,
            0.00019668346794787794
        ],
        "align_select": "select count(distinct countrylanguage.ofcl)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the countries that have greater surface area than any country in Europe?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Region",
            "select country.Name, country.sa",
            "select country.Name, country.Continent"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.6881667971611023,
            0.008730912581086159,
            0.0003388389013707638,
            0.00015134582645259798,
            0.0004771322710439563,
            0.00016105794929899275,
            0.00032661756267771125,
            0.000148139035445638
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which countries have greater area than that of any country in Europe?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Region",
            "select country.Name, country.Continent",
            "select country.Name, country.popn"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.7101806402206421,
            0.00042277012835256755,
            0.00029187052859924734,
            8.750400593271479e-05,
            0.00028362797456793487,
            0.00010510082938708365,
            0.00025794742396101356,
            8.919040556065738e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the African countries that have a population less than any country in Asia?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Continent",
            "select country.Name, country.popn",
            "select distinct country.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "sqlite_sequence country",
            "city country"
        ],
        "align_scores": [
            0.6452922224998474,
            0.1877032071352005,
            0.00033743129461072385,
            0.00015981162141542882,
            0.0003125863440800458,
            0.00021243114315439016,
            0.1288764625787735,
            0.10659950226545334
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which African countries have a smaller population than that of any country in Asia?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Continent",
            "select country.Name, country.popn",
            "select distinct country.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.6418523192405701,
            0.0009224491659551859,
            0.0003444334724918008,
            0.00011998728587059304,
            0.00040705068386159837,
            9.356380178360268e-05,
            0.1628035008907318,
            0.0007136650965549052
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which Asian countries have a population that is larger than any country in Africa?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Continent",
            "select country.Name, country.popn",
            "select distinct country.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.7112459540367126,
            0.0007658321992494166,
            0.0004406676162034273,
            0.00012729987793136388,
            0.00036535135586746037,
            9.915557166095823e-05,
            0.15814679861068726,
            0.000750581850297749
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the Asian countries which have a population larger than that of any country in Africa?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Continent",
            "select distinct country.Name",
            "select country.Name, country.Continent, country.popn"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.736194372177124,
            0.0007319565629586577,
            0.000376800395315513,
            0.0001196734156110324,
            0.14539307355880737,
            0.0007448107353411615,
            0.00019860907923430204,
            8.204785990528762e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the country codes for countries that do not speak English?",
        "gold_select": "select countrylanguage.CountryCode",
        "select_candidates": [
            "select countrylanguage.CountryCode",
            "select countrylanguage.CountryCode, countrylanguage.lang",
            "select distinct countrylanguage.CountryCode",
            "select countrylanguage.CountryCode, countrylanguage.lang"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "countrylanguage",
        "table_candidates": [
            "countrylanguage",
            "country countrylanguage",
            "sqlite_sequence countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9854282736778259,
            0.0017373741138726473,
            0.0004653609939850867,
            0.00011276823352091014,
            0.020596615970134735,
            0.00022188617731444538,
            0.0004653609939850867,
            0.00011276823352091014
        ],
        "align_select": "select countrylanguage.CountryCode",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the country codes for countries that do not speak English.",
        "gold_select": "select countrylanguage.CountryCode",
        "select_candidates": [
            "select countrylanguage.CountryCode",
            "select countrylanguage.CountryCode, countrylanguage.lang",
            "select distinct countrylanguage.CountryCode",
            "select countrylanguage.CountryCode, countrylanguage.lang"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "countrylanguage",
        "table_candidates": [
            "countrylanguage",
            "country countrylanguage",
            "sqlite_sequence countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9915137887001038,
            0.0001950832229340449,
            0.0003054456028621644,
            6.484945333795622e-05,
            0.007788877934217453,
            9.201230568578467e-05,
            0.0003054456028621644,
            6.484945333795622e-05
        ],
        "align_select": "select countrylanguage.CountryCode",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the country codes of countries where people use languages other than English?",
        "gold_select": "select distinct countrylanguage.CountryCode",
        "select_candidates": [
            "select countrylanguage.CountryCode",
            "select country.Name, countrylanguage.CountryCode",
            "select distinct countrylanguage.CountryCode",
            "select country.Code"
        ],
        "select_labels": [
            0.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "countrylanguage",
        "table_candidates": [
            "countrylanguage",
            "country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.9585445523262024,
            0.2676149010658264,
            0.00031956072780303657,
            0.00014617906708735973,
            0.05479627102613449,
            0.00026256206911057234,
            0.8691986203193665,
            0.12277539819478989
        ],
        "align_select": "select countrylanguage.CountryCode",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give the country codes for countries in which people speak langauges that are not English.",
        "gold_select": "select distinct countrylanguage.CountryCode",
        "select_candidates": [
            "select countrylanguage.CountryCode",
            "select country.Code",
            "select country.Name, countrylanguage.CountryCode",
            "select country.Name, country.Code"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "countrylanguage",
        "table_candidates": [
            "countrylanguage",
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.7552567720413208,
            0.3010140359401703,
            0.5514557361602783,
            0.06883188337087631,
            0.000333743286319077,
            0.00013683747965842485,
            0.00034741952549666166,
            0.00013301555009093136
        ],
        "align_select": "select countrylanguage.CountryCode",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the codes of the countries that do not speak English and whose government forms are not Republic?",
        "gold_select": "select country.Code",
        "select_candidates": [
            "select country.Code",
            "select country.Code, country.gf",
            "select country.Name, country.gf",
            "select country.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.9519708156585693,
            0.08273159712553024,
            0.0007613642956130207,
            0.00023533184139523655,
            0.0002549259806983173,
            0.00030712815350852907,
            0.006015425082296133,
            0.8335133194923401
        ],
        "align_select": "select country.Code",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the codes of countries that do not speak English and do not have Republics for governments.",
        "gold_select": "select country.Code",
        "select_candidates": [
            "select country.Code",
            "select country.Code, countrylanguage.lang",
            "select country.Code, country.gf",
            "select country.Name, country.Code2"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.009245618246495724,
            0.2737945020198822,
            0.0003428121854085475,
            0.00039754551835358143,
            0.00020976945233996958,
            0.0002676123986020684,
            0.0002038374514086172,
            0.0002302339271409437
        ],
        "align_select": "select country.Code",
        "align_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "Which cities are in European countries where English is not the official language?",
        "gold_select": "select distinct city.Name",
        "select_candidates": [
            "select city.Name",
            "select city.ID, city.Name",
            "select distinct city.Name",
            "select city.Name, country.Name"
        ],
        "select_labels": [
            0.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "city country countrylanguage",
        "table_candidates": [
            "city country countrylanguage",
            "city sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.7999190092086792,
            0.0017327343812212348,
            0.0003474141994956881,
            0.00015475806139875203,
            0.08250637352466583,
            0.0484207421541214,
            0.0003159377083647996,
            0.00012794022040907294
        ],
        "align_select": "select city.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of cities in Europe for which English is not the official language?",
        "gold_select": "select distinct city.Name",
        "select_candidates": [
            "select city.Name",
            "select distinct city.Name",
            "select city.Name, country.Name",
            "select city.Name, country.Continent"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "city country countrylanguage",
        "table_candidates": [
            "city country countrylanguage",
            "city sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9881308078765869,
            0.0012755454517900944,
            0.024760423228144646,
            0.021037956699728966,
            0.00022000769968144596,
            0.0001340548333246261,
            0.0002406403364147991,
            0.00012205709936097264
        ],
        "align_select": "select city.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which unique cities are in Asian countries where Chinese is the official language?",
        "gold_select": "select distinct city.Name",
        "select_candidates": [
            "select distinct city.Name",
            "select distinct city.ID",
            "select count(*)",
            "select count(distinct city.ID)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "city country countrylanguage",
        "table_candidates": [
            "city country countrylanguage",
            "city sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9801871180534363,
            0.00036284903762862086,
            0.8676100969314575,
            0.00027758334181271493,
            0.037045884877443314,
            9.56164876697585e-05,
            0.01147723849862814,
            7.306640327442437e-05
        ],
        "align_select": "select distinct city.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the different names of cities that are in Asia and for which Chinese is the official language.",
        "gold_select": "select distinct city.Name",
        "select_candidates": [
            "select distinct city.Name",
            "select distinct city.Name, country.Name",
            "select distinct city.Name, countrylanguage.lang",
            "select count(distinct city.Name)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "city country countrylanguage",
        "table_candidates": [
            "city country countrylanguage",
            "city sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9935991764068604,
            0.00012576083827298135,
            0.00021376153745222837,
            6.301797111518681e-05,
            0.0003852068039122969,
            6.393831426976249e-05,
            0.0006820526323281229,
            7.030594133539125e-05
        ],
        "align_select": "select distinct city.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the name, independence year, and surface area of the country with the smallest population?",
        "gold_select": "select country.Name, country.sa, country.IndepYear",
        "select_candidates": [
            "select country.Name, country.IndepYear, country.sa",
            "select country.Name, country.IndepYear.c5, country.sa",
            "select country.Name, country.IndepYear.c6, country.sa",
            "select country.Name, country.IndepYear., country.sa"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9923107624053955,
            8.22382717160508e-05,
            0.000766109093092382,
            9.271789895137772e-05,
            0.0008007551659829915,
            9.17277648113668e-05,
            0.054012857377529144,
            0.00011166714102728292
        ],
        "align_select": "select country.Name, country.IndepYear, country.sa",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Give the name, year of independence, and surface area of the country that has the lowest population.",
        "gold_select": "select country.Name, country.sa, country.IndepYear",
        "select_candidates": [
            "select country.Name, country.IndepYear, country.sa",
            "select country.Name, country.IndepYear.c5, country.sa",
            "select country.Name, country.IndepYear, country.sa",
            "select country.Name, country.IndepYear, country.Region"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9878115057945251,
            8.196784619940445e-05,
            0.0006708339788019657,
            8.858233195496723e-05,
            0.9878115057945251,
            8.196784619940445e-05,
            0.000736840593162924,
            0.00014399737119674683
        ],
        "align_select": "select country.Name, country.IndepYear, country.sa",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What are the population, name and leader of the country with the largest area?",
        "gold_select": "select country.Name, country.popn, country.hos",
        "select_candidates": [
            "select country.popn, country.Name, country.le",
            "select country.Code, country.popn, country.le",
            "select country.Code, country.Name, country.le",
            "select country.Name, country.popn, country.le"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9894870519638062,
            9.26704378798604e-05,
            0.0007499594357796013,
            8.744702790863812e-05,
            0.0012736425269395113,
            7.773044490022585e-05,
            0.9820097088813782,
            9.682154632173479e-05
        ],
        "align_select": "select country.popn, country.Name, country.le",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Give the name, population, and head of state for the country that has the largest area.",
        "gold_select": "select country.Name, country.popn, country.hos",
        "select_candidates": [
            "select country.Name, country.popn, country.hos",
            "select country.Name, country.popn, country.Capital",
            "select country.Name, country.popn, country.le",
            "select country.Name, country.IndepYear, country.popn, country.hos"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9792668223381042,
            9.848782792687416e-05,
            0.859866201877594,
            0.00012749448069371283,
            0.0005297848838381469,
            9.676229092292488e-05,
            0.000757586385589093,
            8.126505417749286e-05
        ],
        "align_select": "select country.Name, country.popn, country.hos",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Return the country name and the numbers of languages spoken for each country that speaks at least 3 languages.",
        "gold_select": "select count(countrylanguage.lang), country.Name",
        "select_candidates": [
            "select country.Name, count(distinct countrylanguage.lang)",
            "select country.Name, count(*)",
            "select country.Name, count(distinct country.Name)",
            "select count(distinct country.Name), country.Name"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage"
        ],
        "align_scores": [
            0.0947585180401802,
            8.851358870742843e-05,
            0.4508833587169647,
            0.00011888384324265644,
            0.00017385203682351857,
            6.773071800125763e-05,
            0.00016812320973258466,
            7.553664181614295e-05
        ],
        "align_select": "select country.Name, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the names of countries that speak more than 2 languages, as well as how many languages they speak?",
        "gold_select": "select count(countrylanguage.lang), country.Name",
        "select_candidates": [
            "select country.Name, count(distinct countrylanguage.lang)",
            "select country.Name, count(distinct country.Name)",
            "select country.Name, count(*)",
            "select country.Name, count(countrylanguage.lang)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.5448306202888489,
            0.00011054011702071875,
            0.00025521733914501965,
            7.164282578742132e-05,
            0.954791247844696,
            0.00011787580297095701,
            0.026122847571969032,
            8.85568224475719e-05
        ],
        "align_select": "select country.Name, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Find the number of cities in each district whose population is greater than the average population of cities?",
        "gold_select": "select count(*), city.dist",
        "select_candidates": [
            "select count(*), city.dist",
            "select count(*), city.dist, city.popn",
            "select count(*), city.dist, max(city.popn)",
            "select count(*), city.dist,"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "city",
        "table_candidates": [
            "city"
        ],
        "align_scores": [
            0.9879478812217712,
            0.014459970407187939,
            0.0020848261192440987,
            0.00022444248315878212,
            0.0019432404078543186,
            0.0002280996268382296,
            0.002178033348172903,
            0.00023905967827886343
        ],
        "align_select": "select count(*), city.dist",
        "align_structure": "SELECT-FROM-WHERE-GROUP BY"
    },
    {
        "question": "How many cities in each district have a population that is above the average population across all cities?",
        "gold_select": "select count(*), city.dist",
        "select_candidates": [
            "select count(*), city.dist",
            "select city.dist, count(*)",
            "select count(distinct city.Name), city.dist",
            "select count(*), city.dist, max(city.popn)"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "city",
        "table_candidates": [
            "city"
        ],
        "align_scores": [
            0.9752487540245056,
            0.00027183719794265926,
            0.9869762063026428,
            0.0002550027857068926,
            0.002505142940208316,
            0.00013368870713748038,
            0.0017819402273744345,
            0.00014321957132779062
        ],
        "align_select": "select count(*), city.dist",
        "align_structure": "SELECT-FROM-WHERE-GROUP BY"
    },
    {
        "question": "Find the government form name and total population for each government form whose average life expectancy is longer than 72.",
        "gold_select": "select sum(country.popn), country.gf",
        "select_candidates": [
            "select city.Name, sum(country.popn)",
            "select city.Name, sum(city.popn)",
            "select country.Name, sum(country.popn)",
            "select city.Name, count(*)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "country countrylanguage",
            "sqlite_sequence country",
            "city country",
            "countrylanguage"
        ],
        "align_scores": [
            0.0006661462248302996,
            0.00018399111286271363,
            0.031927112489938736,
            0.0002237361331935972,
            0.013692968524992466,
            0.00020983706053812057,
            0.001215363503433764,
            0.0002375290496274829
        ],
        "align_select": "select city.Name, sum(country.popn)",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the different government forms and what is the total population of each for government forms that have an average life expectancy greater than 72?",
        "gold_select": "select sum(country.popn), country.gf",
        "select_candidates": [
            "select country.Capital, sum(country.popn)",
            "select country.Name, sum(country.popn)",
            "select count(*), country.Capital",
            "select country.Code2, sum(country.popn)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "country countrylanguage",
            "sqlite_sequence country",
            "city country"
        ],
        "align_scores": [
            0.0020972227212041616,
            8.859366062097251e-05,
            0.669795572757721,
            0.00019339639402460307,
            0.03748790919780731,
            0.00012654103920795023,
            0.018908007070422173,
            0.0001384098723065108
        ],
        "align_select": "select country.Name, sum(country.popn)",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Find the average life expectancy and total population for each continent where the average life expectancy is shorter than 72?",
        "gold_select": "select sum(country.popn), avg(country.le), country.Continent",
        "select_candidates": [
            "select avg(country.le), sum(country.popn), country.Continent",
            "select country.Name, avg(country.le), sum(country.popn)",
            "select country.le, sum(country.popn), country.Continent",
            "select country.Name, avg(country.popn)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.31987330317497253,
            0.00017609531641937792,
            0.010060705244541168,
            9.852313814917579e-05,
            0.27011772990226746,
            0.00010920325439656153,
            0.0008467125589959323,
            8.022192196222022e-05
        ],
        "align_select": "select avg(country.le), sum(country.popn), country.Continent",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the different continents and the total popuation and average life expectancy corresponding to each, for continents that have an average life expectancy less than 72?",
        "gold_select": "select sum(country.popn), avg(country.le), country.Continent",
        "select_candidates": [
            "select country.Continent, sum(country.popn), avg(country.popn)",
            "select country.Continent, sum(country.popn), avg(country.le)",
            "select country.Continent, count(*), avg(country.popn)",
            "select country.Name, sum(country.popn), avg(country.popn)"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.2847095727920532,
            0.00010030112025560811,
            0.2503790855407715,
            0.0001168551534647122,
            0.0026797938626259565,
            0.00010209229367319494,
            0.02337190881371498,
            9.887815394904464e-05
        ],
        "align_select": "select country.Continent, sum(country.popn), avg(country.popn)",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the names and areas of countries with the top 5 largest area?",
        "gold_select": "select country.Name, country.sa",
        "select_candidates": [
            "select country.Name, country.sa",
            "select country.Name, country.Region",
            "select country.Name, country.Continent",
            "select country.Name, country.popn"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9920544624328613,
            6.539450987474993e-05,
            0.0008739970508031547,
            6.55517796985805e-05,
            0.0005133796948939562,
            7.253545481944457e-05,
            0.0005049443570896983,
            6.295093771768734e-05
        ],
        "align_select": "select country.Name, country.sa",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Return the names and surface areas of the 5 largest countries.",
        "gold_select": "select country.Name, country.sa",
        "select_candidates": [
            "select country.Name, country.sa",
            "select country.Name, country.sa)",
            "select country.Name, country.sa4",
            "select country.Name, country.sa."
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9957519769668579,
            7.538107456639409e-05,
            0.0017677558353170753,
            7.254444062709808e-05,
            0.0007775849080644548,
            7.257392280735075e-05,
            0.004025688860565424,
            6.263991235755384e-05
        ],
        "align_select": "select country.Name, country.sa",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What are names of countries with the top 3 largest population?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Capital",
            "select country.Name, country.Region",
            "select country.Name, country.popn"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9893559813499451,
            5.333628359949216e-05,
            0.0006088515510782599,
            5.579136632150039e-05,
            0.0003992954734712839,
            5.564636012422852e-05,
            0.0005802169907838106,
            5.1776492909993976e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Return the names of the 3 most populated countries.",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Capital",
            "select country.Name, country.popn",
            "select country.Name, country.hos"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9955614805221558,
            5.573526141233742e-05,
            0.0003376711974851787,
            5.078433969174512e-05,
            0.0010952542070299387,
            4.980797166354023e-05,
            0.000697366485837847,
            5.1682363846339285e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What are the names of the nations with the 3 lowest populations?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Capital",
            "select country.Name, country.popn",
            "select country.Name, country.LocalName"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9886292219161987,
            5.632610555039719e-05,
            0.0003458914870861918,
            5.1557475671870634e-05,
            0.000736912596039474,
            5.0317605200689286e-05,
            0.013493743725121021,
            5.523303843801841e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Return the names of the 3 countries with the fewest people.",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Capital",
            "select country.Name, country.popn",
            "select country.Name, country.Region"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9924893379211426,
            5.236485958448611e-05,
            0.000335477088810876,
            5.052836058894172e-05,
            0.0008802568190731108,
            4.9325841246172786e-05,
            0.0002344946115044877,
            4.932706360705197e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What are the names of the countries that are in the continent of Europe and have a population of 80000?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.popn",
            "select country.Name, country.Continent",
            "select country.Name, country.Region"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "city country"
        ],
        "align_scores": [
            0.9595640897750854,
            0.001315632718615234,
            0.00024015031522139907,
            0.00012586353113874793,
            0.00025281388661824167,
            0.00010754238610388711,
            0.0002299614279763773,
            9.96403832687065e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give the names of countries that are in Europe and have a population equal to 80000.",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Continent",
            "select country.Name, country.popn",
            "select country.Name, country.Region"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.8918541669845581,
            0.0005018131341785192,
            0.00020290317479521036,
            7.972643652465194e-05,
            0.00020617953850887716,
            7.07589351804927e-05,
            0.0001932177838170901,
            7.36175206839107e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the total population and average area of countries in the continent of North America whose area is bigger than 3000?",
        "gold_select": "select sum(country.popn), avg(country.sa)",
        "select_candidates": [
            "select sum(country.popn), avg(country.sa)",
            "select sum(country.popn), avg(country.popn)",
            "select sum(country.popn), avg(country.GNP)",
            "select sum(country.popn), avg(country.IndepYear)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9242069721221924,
            0.0013756289845332503,
            0.0012801277916878462,
            0.0001877664471976459,
            0.9522762298583984,
            0.0024075794499367476,
            0.0007458434556610882,
            0.0002707043895497918
        ],
        "align_select": "select sum(country.popn), avg(country.sa)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give the total population and average surface area corresponding to countries in North America that have a surface area greater than 3000.",
        "gold_select": "select sum(country.popn), avg(country.sa)",
        "select_candidates": [
            "select sum(country.popn), avg(country.sa)",
            "select sum(country.popn), avg(country.popn)",
            "select sum(country.popn), avg(country.GNP)",
            "select avg(country.popn), sum(country.popn)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9426682591438293,
            0.0005009715096093714,
            0.003492967924103141,
            0.0002682047488633543,
            0.006621851120144129,
            0.00030631525442004204,
            0.0028091189451515675,
            0.0002473738859407604
        ],
        "align_select": "select sum(country.popn), avg(country.sa)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the cities whose population is between 160000 and 900000?",
        "gold_select": "select city.Name",
        "select_candidates": [
            "select city.Name",
            "select city.ID, city.Name",
            "select city.Name, city.cntry_code",
            "select city.Name, city.dist"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "city",
        "table_candidates": [
            "city",
            "city country"
        ],
        "align_scores": [
            0.9741663932800293,
            0.00026226683985441923,
            0.0002805459371302277,
            0.00010489388660062104,
            0.0002775280154310167,
            0.00010891663987422362,
            0.0001680400309851393,
            8.567969052819535e-05
        ],
        "align_select": "select city.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the names of cities that have a population between 160000 and 900000.",
        "gold_select": "select city.Name",
        "select_candidates": [
            "select city.Name",
            "select city.Name, city.cntry_code",
            "select city.Name, city.dist",
            "select city.ID, city.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "city",
        "table_candidates": [
            "city",
            "city country"
        ],
        "align_scores": [
            0.9882296323776245,
            0.0002433513873256743,
            0.00022969192650634795,
            7.162143447203562e-05,
            0.00014441179519053549,
            5.717063322663307e-05,
            0.00017898956139106303,
            7.761482265777886e-05
        ],
        "align_select": "select city.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which language is spoken by the largest number of countries?",
        "gold_select": "select countrylanguage.lang",
        "select_candidates": [
            "select countrylanguage.lang",
            "select countrylanguage.lang, country.Name",
            "select countrylanguage.lang, country.Code",
            "select countrylanguage.lang, country.Capital"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "countrylanguage",
            "sqlite_sequence countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9921444654464722,
            8.517169044353068e-05,
            0.004269550088793039,
            6.55883050058037e-05,
            0.0012534118723124266,
            6.743540870957077e-05,
            0.0007869850960560143,
            6.326846778392792e-05
        ],
        "align_select": "select countrylanguage.lang",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Give the language that is spoken in the most countries.",
        "gold_select": "select countrylanguage.lang",
        "select_candidates": [
            "select countrylanguage.lang",
            "select countrylanguage.lang, country.Code",
            "select countrylanguage.lang, country.Capital",
            "select countrylanguage.lang, country.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "countrylanguage",
            "sqlite_sequence countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9946223497390747,
            7.19641539035365e-05,
            0.0008583058370277286,
            6.408357876352966e-05,
            0.00034767595934681594,
            5.6137461797334254e-05,
            0.002514088060706854,
            6.487487553386018e-05
        ],
        "align_select": "select countrylanguage.lang",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the language spoken by the largest percentage of people in each country?",
        "gold_select": "select countrylanguage.lang, countrylanguage.CountryCode, max(countrylanguage.pct)",
        "select_candidates": [
            "select countrylanguage.lang",
            "select countrylanguage.lang, country.popn",
            "select countrylanguage.lang, country.Code",
            "select countrylanguage.lang, country.Capital"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9916433691978455,
            7.700484275119379e-05,
            0.0018718873616307974,
            6.119315366959199e-05,
            0.006974474061280489,
            7.789302617311478e-05,
            0.0008189279469661415,
            6.124720675870776e-05
        ],
        "align_select": "select countrylanguage.lang",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What are the country codes of the different countries, and what are the languages spoken by the greatest percentage of people for each?",
        "gold_select": "select countrylanguage.lang, countrylanguage.CountryCode, max(countrylanguage.pct)",
        "select_candidates": [
            "select country.Code, countrylanguage.lang",
            "select countrylanguage.CountryCode, countrylanguage.lang",
            "select country.Name, countrylanguage.lang",
            "select countrylanguage.lang, country.Code"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.9756715297698975,
            8.58033963595517e-05,
            0.9687623381614685,
            8.392478048335761e-05,
            0.00034457709989510477,
            0.00011022202670574188,
            0.9850308895111084,
            8.065407746471465e-05
        ],
        "align_select": "select country.Code, countrylanguage.lang",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the total number of countries where Spanish is spoken by the largest percentage of people?",
        "gold_select": "select count(*), max(countrylanguage.pct)",
        "select_candidates": [
            "select count(*)",
            "select count(*), countrylanguage.CountryCode",
            "select count(*), country.Name",
            "select count(*), country.Name, country.Continent"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9555000066757202,
            0.010027590207755566,
            0.0018006953177973628,
            0.007015580777078867,
            0.0010187877342104912,
            0.0035981968976557255,
            0.00023216272529680282,
            0.00021857982210349292
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Count the number of countries for which Spanish is the predominantly spoken language.",
        "gold_select": "select count(*), max(countrylanguage.pct)",
        "select_candidates": [
            "select count(*)",
            "select count(distinct countrylanguage.CountryCode)",
            "select count(*), countrylanguage.CountryCode",
            "select count(*), country.Name"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "countrylanguage",
        "table_candidates": [
            "countrylanguage",
            "country countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9916129112243652,
            7.121213275240734e-05,
            0.9063711166381836,
            5.978082845103927e-05,
            0.0007150219171307981,
            7.424568320857361e-05,
            0.00039558764547109604,
            6.151998968562111e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the codes of countries where Spanish is spoken by the largest percentage of people?",
        "gold_select": "select countrylanguage.CountryCode, max(countrylanguage.pct)",
        "select_candidates": [
            "select country.Code",
            "select country.Name, country.Code",
            "select country.Name, country.Code2",
            "select country.Name, country.Continent"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.9816455841064453,
            0.9815635681152344,
            0.001165725407190621,
            0.0031707140151411295,
            0.000636354903690517,
            0.0016266604652628303,
            0.0004214286454953253,
            0.0007936304318718612
        ],
        "align_select": "select country.Code",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT"
    },
    {
        "question": "Return the codes of countries for which Spanish is the predominantly spoken language.",
        "gold_select": "select countrylanguage.CountryCode, max(countrylanguage.pct)",
        "select_candidates": [
            "select countrylanguage.CountryCode",
            "select country.Code",
            "select country.Name, countrylanguage.CountryCode",
            "select country.Name, country.Code"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "countrylanguage",
        "table_candidates": [
            "countrylanguage",
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.9650791883468628,
            0.00010376986028859392,
            0.9836951494216919,
            8.971072384156287e-05,
            0.00025080869090743363,
            6.635580939473584e-05,
            0.0002219725283794105,
            5.867519212188199e-05
        ],
        "align_select": "select countrylanguage.CountryCode",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many countries have a republic as their form of government?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), country.Name",
            "select count(*), country.Code",
            "select count(*), country.Capital"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9920794367790222,
            0.0005000602686777711,
            0.0003605817910283804,
            0.0004520632792264223,
            0.00037354230880737305,
            0.0003294223570264876,
            0.00026638846611604095,
            0.00014387138071469963
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many countries have governments that are republics?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), country.Name",
            "select count(*), country.Code",
            "select count(distinct country.Name)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9934929013252258,
            0.0031622040551155806,
            0.0004803082556463778,
            0.03186676651239395,
            0.0005179056897759438,
            0.009782481007277966,
            0.11480643600225449,
            0.0003444093163125217
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which region is the city Kabul located in?",
        "gold_select": "select country.Region",
        "select_candidates": [
            "select country.Region",
            "select country.Region, city.cntry_code",
            "select country.Name, city.cntry_code",
            "select country.Name, city.District"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "city country",
        "table_candidates": [
            "city country",
            "city",
            "city sqlite_sequence country"
        ],
        "align_scores": [
            0.9959432482719421,
            0.00014211413508746773,
            0.00030821049585938454,
            8.240344322985038e-05,
            0.0002164596226066351,
            7.391352119157091e-05,
            0.0001941172668011859,
            7.229101174743846e-05
        ],
        "align_select": "select country.Region",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What region is Kabul in?",
        "gold_select": "select country.Region",
        "select_candidates": [
            "select country.Region",
            "select country.Region, city.cntry_code",
            "select country.Name, city.District",
            "select country.Region, city.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "city country",
        "table_candidates": [
            "city country",
            "city sqlite_sequence country",
            "city"
        ],
        "align_scores": [
            0.995927631855011,
            0.00012034205428790301,
            0.0003325528814457357,
            8.295201405417174e-05,
            0.00020799768390133977,
            7.031009590718895e-05,
            0.00018699924112297595,
            7.51633633626625e-05
        ],
        "align_select": "select country.Region",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which language is the most popular in Aruba?",
        "gold_select": "select countrylanguage.lang",
        "select_candidates": [
            "select countrylanguage.lang",
            "select countrylanguage.lang, country.LocalName",
            "select countrylanguage.lang, country.Code",
            "select countrylanguage.lang, country.Capital"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9929865002632141,
            0.9912793040275574,
            0.00038394550210796297,
            0.0005721758352592587,
            0.00034132954897359014,
            0.0003995641600340605,
            0.0003040544979739934,
            0.00024036240938585252
        ],
        "align_select": "select countrylanguage.lang",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT"
    },
    {
        "question": "What language is predominantly spoken in Aruba?",
        "gold_select": "select countrylanguage.lang",
        "select_candidates": [
            "select countrylanguage.lang",
            "select countrylanguage.lang, country.LocalName",
            "select countrylanguage.lang, country.Code",
            "select countrylanguage.lang, country.Capital"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9918223023414612,
            0.008879241533577442,
            0.0004966637934558094,
            0.00026072849868796766,
            0.00039712581201456487,
            0.00022116233594715595,
            0.00019408229854889214,
            0.00012355350190773606
        ],
        "align_select": "select countrylanguage.lang",
        "align_structure": "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What are the population and life expectancies in Brazil?",
        "gold_select": "select country.popn, country.LifeExpectancy",
        "select_candidates": [
            "select country.popn, country.LifeExpectancy",
            "select country.Code, country.popn, country.LifeExpectancy",
            "select country.Name, country.popn, country.LifeExpectancy",
            "select country.IndepYear, country.popn, country.LifeExpectancy"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9560114741325378,
            0.0003233523457311094,
            0.0002414935443084687,
            8.526417514076456e-05,
            0.00022933303262107074,
            7.943131640786305e-05,
            0.00022229594469536096,
            7.250696944538504e-05
        ],
        "align_select": "select country.popn, country.LifeExpectancy",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give me Brazil\u2019s population and life expectancies.",
        "gold_select": "select country.popn, country.LifeExpectancy",
        "select_candidates": [
            "select country.popn, country.LifeExpectancy",
            "select country.Code, country.popn, country.LifeExpectancy",
            "select country.Code, country.Name, country.popn, country.LifeExpectancy",
            "select country.Name, country.popn, country.LifeExpectancy"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9618174433708191,
            7.87927201599814e-05,
            0.00021822686539962888,
            8.610059740021825e-05,
            0.0001817137817852199,
            7.397613808279857e-05,
            0.000192298655747436,
            8.558806439395994e-05
        ],
        "align_select": "select country.popn, country.LifeExpectancy",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the region and population of Angola?",
        "gold_select": "select country.popn, country.Region",
        "select_candidates": [
            "select country.Region, country.popn",
            "select country.Name, country.Region, country.popn",
            "select country.Continent, country.Region, country.popn",
            "select country.Region, country.popn, country.Capital"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "city country",
            "sqlite_sequence country"
        ],
        "align_scores": [
            0.991285502910614,
            0.00012509179941844195,
            0.0002360421494813636,
            9.640889766160399e-05,
            0.00025019512395374477,
            9.334386413684115e-05,
            0.00027531402884051204,
            9.470523218624294e-05
        ],
        "align_select": "select country.Region, country.popn",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What region does Angola belong to and what is its population?",
        "gold_select": "select country.popn, country.Region",
        "select_candidates": [
            "select country.Region, country.popn",
            "select country.Name, country.Region, country.popn",
            "select country.Region, count(*)",
            "select country.Continent, country.popn"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "sqlite_sequence country",
            "city country"
        ],
        "align_scores": [
            0.9900133609771729,
            0.00010969294817186892,
            0.0001979296503122896,
            8.574541425332427e-05,
            0.9350617527961731,
            0.00010409156675450504,
            0.02766895480453968,
            0.00011028069275198504
        ],
        "align_select": "select country.Region, country.popn",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the total population and maximum GNP in Asia?",
        "gold_select": "select sum(country.popn), max(country.GNP)",
        "select_candidates": [
            "select sum(country.popn), max(country.GNP)",
            "select max(country.GNP), sum(country.popn)",
            "select country.popn, max(country.GNP)",
            "select sum(country.IndepYear), max(country.GNP)"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9949496984481812,
            0.00011074626672780141,
            0.9939489364624023,
            9.802647400647402e-05,
            0.445158451795578,
            0.00015176318993326277,
            0.00022871831606607884,
            9.307915752287954e-05
        ],
        "align_select": "select sum(country.popn), max(country.GNP)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many people live in Asia, and what is the largest GNP among them?",
        "gold_select": "select sum(country.popn), max(country.GNP)",
        "select_candidates": [
            "select country.popn, country.GNP",
            "select country.Code, country.popn, country.GNP",
            "select country.Name, country.popn",
            "select country.Code, country.popn"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.7356204390525818,
            0.17258930206298828,
            0.00023041179520078003,
            0.00028385251061990857,
            0.0003688603173941374,
            0.0012021763250231743,
            0.0008310814737342298,
            0.002009933814406395
        ],
        "align_select": "select country.popn, country.GNP",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT"
    },
    {
        "question": "What is the average life expectancy in African countries that are republics?",
        "gold_select": "select avg(country.LifeExpectancy)",
        "select_candidates": [
            "select avg(country.LifeExpectancy)",
            "select an avg(country.LifeExpectancy)",
            "select  avg(country.LifeExpectancy)",
            "select Avg(country.LifeExpectancy)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "sqlite_sequence country"
        ],
        "align_scores": [
            0.9944633841514587,
            0.0001712466182652861,
            0.00042896406375803053,
            0.00011194177932338789,
            0.9944633841514587,
            0.0001712466182652861,
            0.9944633841514587,
            0.0001712466182652861
        ],
        "align_select": "select avg(country.LifeExpectancy)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give the average life expectancy for countries in Africa which are republics?",
        "gold_select": "select avg(country.LifeExpectancy)",
        "select_candidates": [
            "select avg(country.LifeExpectancy)",
            "select an avg(country.LifeExpectancy)",
            "select  avg(country.LifeExpectancy)",
            "select Avg(country.LifeExpectancy)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9950900077819824,
            0.00013272895012050867,
            0.0004084250540472567,
            0.0001172182965092361,
            0.9950900077819824,
            0.00013272895012050867,
            0.9950900077819824,
            0.00013272895012050867
        ],
        "align_select": "select avg(country.LifeExpectancy)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many people live in Gelderland district?",
        "gold_select": "select sum(city.popn)",
        "select_candidates": [
            "select sum(city.popn)",
            "select count(*)",
            "select city.popn",
            "select sum(city.popn), city.District"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "city",
        "table_candidates": [
            "city"
        ],
        "align_scores": [
            0.9529936909675598,
            7.121376256691292e-05,
            0.9958819150924683,
            8.797102054813877e-05,
            0.956322431564331,
            0.00013336530537344515,
            0.00014109764015302062,
            6.355376535793766e-05
        ],
        "align_select": "select sum(city.popn)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the total population of Gelderland district?",
        "gold_select": "select sum(city.popn)",
        "select_candidates": [
            "select sum(city.popn)",
            "select sum(city.popn), city.District",
            "select sum(city.popn), city.District, city.popn",
            "select sum(city.popn), city.District"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "city",
        "table_candidates": [
            "city"
        ],
        "align_scores": [
            0.9966492056846619,
            0.011879739351570606,
            0.0001570135063957423,
            0.007657651789486408,
            0.00022882760094944388,
            0.00011115867528133094,
            0.0001570135063957423,
            0.007657651789486408
        ],
        "align_select": "select sum(city.popn)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the average GNP and total population in all nations whose government is US territory?",
        "gold_select": "select avg(country.GNP), sum(country.popn)",
        "select_candidates": [
            "select avg(country.GNP), sum(country.popn)",
            "select avg(country.GNP), avg(country.popn)",
            "select avg(country.popn), avg(country.GNP)",
            "select avg(country.LifeExpectancy), avg(country.popn)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9876042604446411,
            0.0009401481365785003,
            0.9605615735054016,
            0.0004468583792913705,
            0.978617250919342,
            0.0007926365942694247,
            0.0006841377471573651,
            0.00034340081037953496
        ],
        "align_select": "select avg(country.GNP), sum(country.popn)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give the mean GNP and total population of nations which are considered US territory.",
        "gold_select": "select avg(country.GNP), sum(country.popn)",
        "select_candidates": [
            "select avg(country.GNP), sum(country.popn)",
            "select avg(country.popn), avg(country.GNP)",
            "select avg(country.popn), sum(country.popn)",
            "select avg(country.popn), sum(country.GNP)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9961826205253601,
            0.00046083691995590925,
            0.995370090007782,
            0.00027654494624584913,
            0.06267823278903961,
            0.00017791434947866946,
            0.9958486557006836,
            0.000680109835229814
        ],
        "align_select": "select avg(country.GNP), sum(country.popn)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many unique languages are spoken in the world?",
        "gold_select": "select count(distinct countrylanguage.lang)",
        "select_candidates": [
            "select count(distinct countrylanguage.lang)",
            "select count(distinct countrylanguage.ofcl)",
            "select count(distinct countrylanguage.cntry_code)",
            "select count(distinct countrylanguage.lang"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "countrylanguage",
        "table_candidates": [
            "countrylanguage"
        ],
        "align_scores": [
            0.9933498501777649,
            0.9933498501777649,
            0.7704319357872009,
            0.7704319357872009,
            0.9494876861572266,
            0.9494876861572266,
            0.25698521733283997,
            0.25698521733283997
        ],
        "align_select": "select count(distinct countrylanguage.lang)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What is the number of distinct languages used around the world?",
        "gold_select": "select count(distinct countrylanguage.lang)",
        "select_candidates": [
            "select count(distinct countrylanguage.lang)",
            "select count(select count(distinct countrylanguage.lang)",
            "select count(distinct countrylanguage.ofcl)",
            "select count(distinct countrylanguage.lang), countrylanguage.cntry_code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "countrylanguage",
        "table_candidates": [
            "countrylanguage"
        ],
        "align_scores": [
            0.9948018789291382,
            0.9948018789291382,
            0.0005965868476778269,
            0.0005965868476778269,
            0.8130921125411987,
            0.8130921125411987,
            0.00017435586778447032,
            0.00017435586778447032
        ],
        "align_select": "select count(distinct countrylanguage.lang)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "How many type of governments are in Africa?",
        "gold_select": "select count(distinct country.gf)",
        "select_candidates": [
            "select count(distinct country.Name)",
            "select count(distinct country.Code)",
            "select count(different country.Name)",
            "select count(distinct country.Name"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "sqlite_sequence country",
            "city country"
        ],
        "align_scores": [
            0.018460864201188087,
            8.291973790619522e-05,
            0.11862463504076004,
            8.209871884901077e-05,
            0.0006969632231630385,
            9.258016507374123e-05,
            0.0018381543923169374,
            8.83784014149569e-05
        ],
        "align_select": "select count(distinct country.Name)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many different forms of governments are there in Africa?",
        "gold_select": "select count(distinct country.gf)",
        "select_candidates": [
            "select count(distinct country.Name)",
            "select count(distinct country.Capital)",
            "select count(distinct country.Code)",
            "select count(distinct country.IndepYear)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.06607082486152649,
            0.06607082486152649,
            0.0007674525259062648,
            0.0007674525259062648,
            0.03855954110622406,
            0.03855954110622406,
            0.0019036526791751385,
            0.0019036526791751385
        ],
        "align_select": "select count(distinct country.Name)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the total number of languages used in Aruba?",
        "gold_select": "select count(countrylanguage.lang)",
        "select_candidates": [
            "select count(distinct countrylanguage.lang)",
            "select count(*)",
            "select count(countrylanguage.lang)",
            "select count(count(distinct countrylanguage.lang)"
        ],
        "select_labels": [
            0.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9939590692520142,
            0.0002527490141801536,
            0.9939318895339966,
            0.0024279530625790358,
            0.9951716065406799,
            0.0019105541286990047,
            0.0011024457635357976,
            0.00012181141210021451
        ],
        "align_select": "select count(distinct countrylanguage.lang)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many languages are spoken in Aruba?",
        "gold_select": "select count(countrylanguage.lang)",
        "select_candidates": [
            "select count(distinct countrylanguage.lang)",
            "select count(distinct countrylanguage.lang, count(distinct countrylanguage.ofcl)",
            "select count(distinct countrylanguage.lang, count(distinct countrylanguage.lang)",
            "select count(speechcount(distinct countrylanguage.lang)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9960011839866638,
            0.00015043250459712,
            0.00016079522902145982,
            0.00011878479563165456,
            0.00018025301687885076,
            0.00011492340854601935,
            0.0009553386480547488,
            0.00011760140478145331
        ],
        "align_select": "select count(distinct countrylanguage.lang)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many official languages does Afghanistan have?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(distinct countrylanguage.lang)",
            "select count(distinct countrylanguage.ofcl)",
            "select count(distinct countrylanguage.lang, countrylanguage.ofcl)",
            "select count(distinct countrylanguage.lang, count(distinct countrylanguage.ofcl)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9841769933700562,
            6.629421113757417e-05,
            0.992379903793335,
            6.427460175473243e-05,
            0.00023871075245551765,
            5.816194607177749e-05,
            0.00015311148308683187,
            6.827530160080642e-05
        ],
        "align_select": "select count(distinct countrylanguage.lang)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many official languages are spoken in Afghanistan?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(distinct countrylanguage.lang)",
            "select count(distinct countrylanguage.ofcl)",
            "select count(distinct countrylanguage.lang, count(distinct countrylanguage.ofcl)",
            "select count(distinct countrylanguage.lang, countrylanguage.ofcl)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9482739567756653,
            0.9482739567756653,
            0.9924983382225037,
            0.9924983382225037,
            0.0001412823621649295,
            0.0001412823621649295,
            0.00024893804220482707,
            0.00024893804220482707
        ],
        "align_select": "select count(distinct countrylanguage.lang)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is name of the country that speaks the largest number of languages?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Capital",
            "select country.Name, countrylanguage.lang",
            "select country.Name, countrylanguage.cntry_code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.9925251007080078,
            8.944908768171445e-05,
            0.00026925085694529116,
            6.551315891556442e-05,
            0.0016069525154307485,
            7.006539817666635e-05,
            0.0027713465970009565,
            9.19301382964477e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Give the name of the nation that uses the greatest amount of languages.",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Capital",
            "select country.Name, countrylanguage.lang",
            "select country.Name, countrylanguage.cntry_code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.9717080593109131,
            6.48482091492042e-05,
            0.00016448037058580667,
            5.808091373182833e-05,
            0.002888144226744771,
            7.010109402472153e-05,
            0.002950066002085805,
            8.892315236153081e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Which continent has the most diverse languages?",
        "gold_select": "select country.Continent",
        "select_candidates": [
            "select country.Continent",
            "select country.Continent, countrylanguage.lang",
            "select country.Continent, countrylanguage.cntry_code",
            "select country.Continent, countrylanguage.pct"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9951820969581604,
            6.664689863100648e-05,
            0.0009937178110703826,
            7.662423740839586e-05,
            0.0007861302583478391,
            8.516764501109719e-05,
            0.001000602962449193,
            6.684382242383435e-05
        ],
        "align_select": "select country.Continent",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Which continent speaks the most languages?",
        "gold_select": "select country.Continent",
        "select_candidates": [
            "select country.Continent",
            "select country.Continent, countrylanguage.lang",
            "select country.Continent, countrylanguage.pct",
            "select country.Continent, country.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9958615899085999,
            7.013118010945618e-05,
            0.0011990406783297658,
            6.353339995257556e-05,
            0.0008423369145020843,
            6.287882570177317e-05,
            0.0008915559737943113,
            6.18586564087309e-05
        ],
        "align_select": "select country.Continent",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "How many countries speak both English and Dutch?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(distinct countrylanguage.cntry_code)",
            "select count(*), countrylanguage.cntry_code",
            "select count(*), countrylanguage.lang"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "countrylanguage",
            "country countrylanguage"
        ],
        "align_scores": [
            0.9916921854019165,
            0.4901256561279297,
            0.10864325612783432,
            0.00040242617251351476,
            0.0004286878975108266,
            0.000391151086660102,
            0.00028210505843162537,
            0.000307429872918874
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the number of nations that use English and Dutch?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), countrylanguage.cntry_code",
            "select count(distinct countrylanguage.cntry_code)",
            "select count(*), countrylanguage.lang"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "countrylanguage",
            "country countrylanguage"
        ],
        "align_scores": [
            0.9906153678894043,
            0.01515202410519123,
            0.0003068307996727526,
            0.0015232828445732594,
            0.014730884693562984,
            0.00010034014849225059,
            0.00032900588121265173,
            0.0009745010174810886
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of nations speak both English and French?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, countrylanguage.lang",
            "select country.Name, countrylanguage.cntry_code",
            "select country.Name, country.Capital"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.9898960590362549,
            0.00022923073265701532,
            0.00038677529664710164,
            0.00014038717199582607,
            0.00025705667212605476,
            0.00012873370724264532,
            0.00013408102677203715,
            8.121858263621107e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "Give the names of nations that speak both English and French.",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, countrylanguage.lang",
            "select country.Name, countrylanguage.cntry_code",
            "select country.Name, country.Capital"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.9946801066398621,
            0.00039546130574308336,
            0.0003038105205632746,
            0.00015739272930659354,
            0.00031688855960965157,
            0.00015549911768175662,
            0.0001949612342286855,
            9.6807700174395e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of nations where both English and French are official languages?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, countrylanguage.lang",
            "select country.Name, countrylanguage.cntry_code",
            "select country.Name, country.Capital"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.9944774508476257,
            0.0006832506624050438,
            0.000290775642497465,
            0.00014368724077939987,
            0.0005155019462108612,
            0.00018277655181009322,
            0.00021406973246484995,
            0.00010022787319030613
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "Give the names of countries with English and French as official languages.",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, countrylanguage.ofcl",
            "select country.Name, countrylanguage.lang",
            "select country.Name, country.Capital"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.9956178665161133,
            0.0008022414403967559,
            0.0002779792994260788,
            9.458709246246144e-05,
            0.00021966060739941895,
            8.33600788610056e-05,
            0.00024065503384917974,
            9.521813626633957e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "What is the number of distinct continents where Chinese is spoken?",
        "gold_select": "select count(distinct country.Continent)",
        "select_candidates": [
            "select count(distinct country.Continent)",
            "select count(distinct country.popn)",
            "select count(distinct country.Name)",
            "select count(distinct country.SurfaceArea)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.9965053796768188,
            0.0002231302350992337,
            0.00038808200042694807,
            0.00010097499034600332,
            0.00117464829236269,
            0.00021273230959195644,
            0.0007552019087597728,
            0.00017931635375134647
        ],
        "align_select": "select count(distinct country.Continent)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many continents speak Chinese?",
        "gold_select": "select count(distinct country.Continent)",
        "select_candidates": [
            "select count(*)",
            "select count(distinct country.Continent)",
            "select count(country.Continent)",
            "select count(continents)"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.9846463799476624,
            0.0026095726061612368,
            0.9599130153656006,
            9.854315430857241e-05,
            0.9709805846214294,
            0.0005512774805538356,
            0.6651768088340759,
            0.00019857878214679658
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the regions that use English or Dutch?",
        "gold_select": "select distinct country.Region",
        "select_candidates": [
            "select country.Region",
            "select distinct country.Region",
            "select country.Region, countrylanguage.cntry_code",
            "select country.Region, country.SurfaceArea"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.99305659532547,
            0.09572670608758926,
            0.024992380291223526,
            0.00021602991910185665,
            0.0003660936199594289,
            0.00016264223086182028,
            0.00028440216556191444,
            0.00014581279538106173
        ],
        "align_select": "select country.Region",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which regions speak Dutch or English?",
        "gold_select": "select distinct country.Region",
        "select_candidates": [
            "select country.Region",
            "select distinct country.Region",
            "select country.Region, countrylanguage.cntry_code",
            "select country.Region, countrylanguage.lang"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9928929209709167,
            0.05288585647940636,
            0.04619019851088524,
            0.00024547477369196713,
            0.00027816512738354504,
            0.00016337368288077414,
            0.0003309282474219799,
            0.00015892888768576086
        ],
        "align_select": "select country.Region",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the countries where either English or Dutch is the official language?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, countrylanguage.cntry_code",
            "select country.Name, country.Code",
            "select country.Name, country.Continent"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "countrylanguage",
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "sqlite_sequence countrylanguage",
            "countrylanguage country countrylanguage"
        ],
        "align_scores": [
            0.9091584086418152,
            0.008379027247428894,
            0.0005923858261667192,
            0.00020175705139990896,
            0.00099596893414855,
            0.0001846526429289952,
            0.00032258746796287596,
            0.00012283695104997605
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which countries have either English or Dutch as an official language?",
        "gold_select": "select *",
        "select_candidates": [
            "select country.Name",
            "select country.Name, countrylanguage.cntry_code",
            "select country.Name, country.Code",
            "select country.Name, country.Continent"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9339724183082581,
            0.011120518669486046,
            0.0006096575525589287,
            0.00022391323000192642,
            0.0012195935705676675,
            0.0002266953233629465,
            0.0002933401265181601,
            0.00012759787205141038
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which language is the most popular on the Asian continent?",
        "gold_select": "select countrylanguage.lang",
        "select_candidates": [
            "select countrylanguage.lang",
            "select countrylanguage.lang, country.Code",
            "select countrylanguage.lang, country.Continent",
            "select countrylanguage.lang, country.popn"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.9873043894767761,
            0.9919390082359314,
            0.0003153289726469666,
            0.0004434061120264232,
            0.00028915455914102495,
            0.0006249758298508823,
            0.0005905719590373337,
            0.0018389690667390823
        ],
        "align_select": "select countrylanguage.lang",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT"
    },
    {
        "question": "What is the language that is used by the largest number of Asian nations?",
        "gold_select": "select countrylanguage.lang",
        "select_candidates": [
            "select countrylanguage.lang",
            "select countrylanguage.lang, country.Code",
            "select countrylanguage.lang, country.Capital",
            "select countrylanguage.lang, country.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.9916111826896667,
            0.0001510583533672616,
            0.0020929339807480574,
            9.647722617955878e-05,
            0.0009005212923511863,
            7.738808199064806e-05,
            0.003771009622141719,
            8.928179158829153e-05
        ],
        "align_select": "select countrylanguage.lang",
        "align_structure": "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Which languages are spoken by only one country in republic governments?",
        "gold_select": "select countrylanguage.lang",
        "select_candidates": [
            "select countrylanguage.lang",
            "select countrylanguage.lang, country.gf",
            "select countrylanguage.lang, country.LocalName",
            "select countrylanguage.lang, country.Capital"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY-HAVING",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.9687312245368958,
            0.14152076840400696,
            0.0006774853100068867,
            0.00014268592349253595,
            0.0009318357333540916,
            0.00017072897753678262,
            0.0004083015082869679,
            0.00011576402903301641
        ],
        "align_select": "select countrylanguage.lang",
        "align_structure": "SELECT-FROM-WHERE-GROUP BY-HAVING"
    },
    {
        "question": "What languages are only used by a single country with a republic government?",
        "gold_select": "select countrylanguage.lang",
        "select_candidates": [
            "select countrylanguage.lang",
            "select countrylanguage.lang, country.Capital",
            "select countrylanguage.lang, country.LocalName",
            "select countrylanguage.lang, country.Code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.15963487327098846,
            0.9373142123222351,
            0.00011590387293836102,
            0.00026575199444778264,
            0.0002037628146354109,
            0.0005325294332578778,
            0.0001739644503686577,
            0.0003556350420694798
        ],
        "align_select": "select countrylanguage.lang",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the city with the largest population that uses English.",
        "gold_select": "select city.Name, city.popn",
        "select_candidates": [
            "select city.Name",
            "select city.Name, countrylanguage.ofcl",
            "select city.ID, city.Name",
            "select city.Name, countrylanguage.lang"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "city countrylanguage",
        "table_candidates": [
            "city countrylanguage"
        ],
        "align_scores": [
            0.9854421615600586,
            0.9802011847496033,
            0.0007389653474092484,
            0.002176155336201191,
            0.0005970880738459527,
            0.0007859509205445647,
            0.0013456637971103191,
            0.003591713262721896
        ],
        "align_select": "select city.Name",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT"
    },
    {
        "question": "What is the most populace city that speaks English?",
        "gold_select": "select city.Name, city.popn",
        "select_candidates": [
            "select city.Name",
            "select city.Name, countrylanguage.ofcl",
            "select city.Name, countrylanguage.cntry_code",
            "select city.ID, city.Name"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "city countrylanguage",
        "table_candidates": [
            "city countrylanguage"
        ],
        "align_scores": [
            0.9883238077163696,
            0.0001238840923178941,
            0.00044953604810871184,
            8.193613030016422e-05,
            0.0008683259948156774,
            8.126389002427459e-05,
            0.00055233936291188,
            7.231941708596423e-05
        ],
        "align_select": "select city.Name",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT"
    },
    {
        "question": "Find the name, population and expected life length of asian country with the largest area?",
        "gold_select": "select country.Name, country.popn, country.LifeExpectancy",
        "select_candidates": [
            "select country.Name, country.popn, country.LifeExpectancy",
            "select country.Name, country.popn, country.LifeExpectancy",
            "select country.Name, country.Code, country.popn, country.LifeExpectancy",
            "select country.Name, country.IndepYear, country.popn, country.LifeExpectancy"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9276493787765503,
            0.0001460593775846064,
            0.9276493787765503,
            0.0001460593775846064,
            0.0005032108747400343,
            8.772942237555981e-05,
            0.0006526040378957987,
            9.699397924123332e-05
        ],
        "align_select": "select country.Name, country.popn, country.LifeExpectancy",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the name, population, and life expectancy of the largest Asian country by land?",
        "gold_select": "select country.Name, country.popn, country.LifeExpectancy",
        "select_candidates": [
            "select country.Name, country.popn, country.LifeExpectancy",
            "select country.Name, country.IndepYear, country.popn, country.LifeExpectancy",
            "select country.Name, country.Code, country.popn, country.LifeExpectancy",
            "select country.Name, country.popn, country.LifeExpectancy"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9522895216941833,
            0.000257671345025301,
            0.003132004290819168,
            9.419313573744148e-05,
            0.0011651634704321623,
            9.83446225291118e-05,
            0.9522895216941833,
            0.000257671345025301
        ],
        "align_select": "select country.Name, country.popn, country.LifeExpectancy",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is average life expectancy in the countries where English is not the official language?",
        "gold_select": "select avg(country.LifeExpectancy)",
        "select_candidates": [
            "select avg(country.LifeExpectancy)",
            "select avg(country.LifeExpectancy), countrylanguage.lang",
            "select an avg(country.LifeExpectancy)",
            "select avg(country.LifeExpectancy), countrylanguage.cntry_code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage",
            "country",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.9939800500869751,
            0.00023655788390897214,
            0.00013496393512468785,
            0.0002576369442977011,
            0.00042018727981485426,
            0.000142126067657955,
            0.0001941172668011859,
            0.0005779649945907295
        ],
        "align_select": "select avg(country.LifeExpectancy)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give the mean life expectancy of countries in which English is not the official language.",
        "gold_select": "select avg(country.LifeExpectancy)",
        "select_candidates": [
            "select avg(country.LifeExpectancy)",
            "select an avg(country.LifeExpectancy)",
            "select avg(country.LifeExpectancy), countrylanguage.cntry_code",
            "select m.avg(country.LifeExpectancy)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "country",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.9952073693275452,
            0.0001013903456623666,
            0.00037163367960602045,
            0.00010477561590960249,
            0.00016003166092559695,
            0.00032880299841053784,
            0.0013062423095107079,
            0.00011141112190671265
        ],
        "align_select": "select avg(country.LifeExpectancy)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the total number of people living in the nations that do not use English?",
        "gold_select": "select sum(country.popn)",
        "select_candidates": [
            "select sum(country.popn)",
            "select sum(country.IndepYear)",
            "select sum(country.GNP)",
            "select sum(country.LifeExpectancy)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence countrylanguage",
            "country"
        ],
        "align_scores": [
            0.9904263615608215,
            0.0010648734169080853,
            0.0008415891206823289,
            0.00025778167764656246,
            0.9667894840240479,
            0.002631356241181493,
            0.0006070755189284682,
            0.00025969426496885717
        ],
        "align_select": "select sum(country.popn)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many people live in countries that do not speak English?",
        "gold_select": "select sum(country.popn)",
        "select_candidates": [
            "select count(*)",
            "select sum(country.popn)",
            "select count(country.popn)",
            "select sum(country.popn), countrylanguage.lang"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.9891139268875122,
            0.0002755030582193285,
            0.8769401907920837,
            0.00017888445290736854,
            0.03566574305295944,
            0.0001435149897588417,
            0.00014930186443962157,
            0.0003654189349617809
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the official language spoken in the country whose head of state is Beatrix?",
        "gold_select": "select countrylanguage.lang",
        "select_candidates": [
            "select countrylanguage.lang",
            "select countrylanguage.lang, countrylanguage.ofcl",
            "select countrylanguage.lang, country.Capital",
            "select countrylanguage.lang, country.Code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9792898893356323,
            0.0002166952472180128,
            0.000349415116943419,
            7.542313687736169e-05,
            0.0002516657405067235,
            7.279593410203233e-05,
            0.0002635359123814851,
            8.507445454597473e-05
        ],
        "align_select": "select countrylanguage.lang",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the official language used in the country the name of whose head of state is Beatrix.",
        "gold_select": "select countrylanguage.lang",
        "select_candidates": [
            "select countrylanguage.lang",
            "select countrylanguage.lang, countrylanguage.ofcl",
            "select official(countrylanguage.lang)",
            "select countrylanguage.lang (countrylanguage.ofcl)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9872409701347351,
            0.00016996977501548827,
            0.00032049650326371193,
            7.539573562098667e-05,
            0.0016858435701578856,
            8.833500760374591e-05,
            0.0005435409257188439,
            7.082381489453837e-05
        ],
        "align_select": "select countrylanguage.lang",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the total number of unique official languages spoken in the countries that are founded before 1930?",
        "gold_select": "select count(distinct countrylanguage.lang)",
        "select_candidates": [
            "select count(distinct countrylanguage.lang)",
            "select count(distinct countrylanguage.ofcl)",
            "select count(distinct countrylanguage.lang, count(distinct countrylanguage.ofcl)",
            "select count(distinct countrylanguage.lang-count(distinct countrylanguage.ofcl)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.9908791184425354,
            0.00037726477603428066,
            0.9911600947380066,
            0.00032512666075490415,
            0.0001758528669597581,
            0.00012752535985782743,
            0.00029240245930850506,
            0.00010477592149982229
        ],
        "align_select": "select count(distinct countrylanguage.lang)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "For the countries founded before 1930, what is the total number of distinct official languages?",
        "gold_select": "select count(distinct countrylanguage.lang)",
        "select_candidates": [
            "select count(distinct countrylanguage.ofcl)",
            "select count(distinct countrylanguage.lang)",
            "select count(distinct countrylanguage.lang, count(distinct countrylanguage.ofcl)",
            "select count(distinct countrylanguage.lang, countrylanguage.ofcl)"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.9932670593261719,
            0.00034913604031316936,
            0.9917107820510864,
            0.0003080289752688259,
            0.0001404418289894238,
            0.00012746131687890738,
            0.00030850860639475286,
            0.00015968488878570497
        ],
        "align_select": "select count(distinct countrylanguage.ofcl)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the African countries that have a population less than any country in Asia?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Continent",
            "select country.Name, country.popn",
            "select distinct country.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.6452922224998474,
            0.1877032071352005,
            0.00033743129461072385,
            0.00015981162141542882,
            0.0003125863440800458,
            0.00021243114315439016,
            0.1288764625787735,
            0.10659950226545334
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which African countries have a smaller population than that of any country in Asia?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Continent",
            "select country.Name, country.popn",
            "select distinct country.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.6418523192405701,
            0.0009224491659551859,
            0.0003444334724918008,
            0.00011998728587059304,
            0.00040705068386159837,
            9.356380178360268e-05,
            0.1628035008907318,
            0.0007136650965549052
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which Asian countries have a population that is larger than any country in Africa?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Continent",
            "select country.Name, country.popn",
            "select country.Name, country.Region"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.7112459540367126,
            0.0007658321992494166,
            0.0004406676162034273,
            0.00012729987793136388,
            0.00036535135586746037,
            9.915557166095823e-05,
            0.0003397321270313114,
            0.00011568004993023351
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the Asian countries which have a population larger than that of any country in Africa?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Continent",
            "select distinct country.Name",
            "select country.Name, country.popn"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.736194372177124,
            0.10371170192956924,
            0.000376800395315513,
            0.0002094656665576622,
            0.14539307355880737,
            0.001348678139038384,
            0.0002785528777167201,
            0.00015826044545974582
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the country codes for countries that do not speak English?",
        "gold_select": "select countrylanguage.cntry_code",
        "select_candidates": [
            "select country.Code",
            "select country.Name, countrylanguage.cntry_code",
            "select country.Name, country.Code2",
            "select country.Code2"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "countrylanguage",
        "table_candidates": [
            "countrylanguage",
            "country countrylanguage",
            "sqlite_sequence countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9861677289009094,
            0.0009824889712035656,
            0.0003341610135976225,
            0.00013230362674221396,
            0.00021078412828501314,
            0.00011366428225301206,
            0.022787371650338173,
            0.0005922528798691928
        ],
        "align_select": "select country.Code",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the country codes for countries that do not speak English.",
        "gold_select": "select countrylanguage.cntry_code",
        "select_candidates": [
            "select country.Code",
            "select country.Name, countrylanguage.cntry_code",
            "select country.Name, country.Code2",
            "select countrylanguage.cntry_code"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "countrylanguage",
        "table_candidates": [
            "countrylanguage",
            "country countrylanguage",
            "sqlite_sequence countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9919781684875488,
            9.942142060026526e-05,
            0.00024162621411960572,
            6.630578718613833e-05,
            0.00017186382319778204,
            6.870506331324577e-05,
            0.9867058396339417,
            0.00025569662102498114
        ],
        "align_select": "select country.Code",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the country codes of countries where people use languages other than English?",
        "gold_select": "select distinct countrylanguage.cntry_code",
        "select_candidates": [
            "select country.Code",
            "select countrylanguage.cntry_code",
            "select country.Name, countrylanguage.cntry_code",
            "select country.Name, country.Continent"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "countrylanguage",
        "table_candidates": [
            "countrylanguage",
            "country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.8691986203193665,
            0.12277539819478989,
            0.9833688139915466,
            0.2746603786945343,
            0.00036936363903805614,
            0.0001778536243364215,
            0.00027796311769634485,
            0.00022513174917548895
        ],
        "align_select": "select country.Code",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give the country codes for countries in which people speak langauges that are not English.",
        "gold_select": "select distinct countrylanguage.cntry_code",
        "select_candidates": [
            "select country.Code",
            "select country.Name, countrylanguage.cntry_code",
            "select country.Name, country.Code",
            "select country.Name, country.Code2"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "countrylanguage",
        "table_candidates": [
            "countrylanguage",
            "country countrylanguage",
            "sqlite_sequence countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.5514557361602783,
            0.06883188337087631,
            0.00041483205859549344,
            0.00015917258861009032,
            0.00034741952549666166,
            0.00013301555009093136,
            0.00024878547992557287,
            0.00012048453936586156
        ],
        "align_select": "select country.Code",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the codes of the countries that do not speak English and whose government forms are not Republic?",
        "gold_select": "select country.Code",
        "select_candidates": [
            "select country.Code",
            "select country.Code, country.gf",
            "select country.Code, countrylanguage.lang",
            "select country.Name, country.gf"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.9519708156585693,
            0.08273159712553024,
            0.0007613642956130207,
            0.00023533184139523655,
            0.00039714001468382776,
            0.0004436942108441144,
            0.0002549259806983173,
            0.00030712815350852907
        ],
        "align_select": "select country.Code",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the codes of countries that do not speak English and do not have Republics for governments.",
        "gold_select": "select country.Code",
        "select_candidates": [
            "select country.Code",
            "select country.Code, countrylanguage.lang",
            "select country.Code, country.gf",
            "select country.Name, country.Code2"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.009245618246495724,
            0.2737945020198822,
            0.0003428121854085475,
            0.00039754551835358143,
            0.00020976945233996958,
            0.0002676123986020684,
            0.0002038374514086172,
            0.0002302339271409437
        ],
        "align_select": "select country.Code",
        "align_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "Which cities are in European countries where English is not the official language?",
        "gold_select": "select distinct city.Name",
        "select_candidates": [
            "select city.Name",
            "select distinct city.Name",
            "select city.ID, city.Name",
            "select city.Name, country.Name"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "city country countrylanguage",
        "table_candidates": [
            "city country countrylanguage",
            "city sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.7999190092086792,
            0.0017327343812212348,
            0.08250637352466583,
            0.0484207421541214,
            0.0003474141994956881,
            0.00015475806139875203,
            0.0003159377083647996,
            0.00012794022040907294
        ],
        "align_select": "select city.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of cities in Europe for which English is not the official language?",
        "gold_select": "select distinct city.Name",
        "select_candidates": [
            "select city.Name",
            "select city.Name, country.Name",
            "select distinct city.Name",
            "select city.Name, country.Continent"
        ],
        "select_labels": [
            0.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "city country countrylanguage",
        "table_candidates": [
            "city country countrylanguage",
            "city sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9881308078765869,
            0.0012755454517900944,
            0.00022000769968144596,
            0.0001340548333246261,
            0.024760423228144646,
            0.021037956699728966,
            0.0002406403364147991,
            0.00012205709936097264
        ],
        "align_select": "select city.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which unique cities are in Asian countries where Chinese is the official language?",
        "gold_select": "select distinct city.Name",
        "select_candidates": [
            "select distinct city.Name",
            "select distinct city.ID",
            "select count(*)",
            "select count(distinct city.ID)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "city country countrylanguage",
        "table_candidates": [
            "city country countrylanguage",
            "city sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9801871180534363,
            0.00036284903762862086,
            0.8676100969314575,
            0.00027758334181271493,
            0.037045884877443314,
            9.56164876697585e-05,
            0.01147723849862814,
            7.306640327442437e-05
        ],
        "align_select": "select distinct city.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the different names of cities that are in Asia and for which Chinese is the official language.",
        "gold_select": "select distinct city.Name",
        "select_candidates": [
            "select distinct city.Name",
            "select distinct city.Name, country.Name",
            "select distinct city.Name, countrylanguage.lang",
            "select distinct city.Name, country.Capital"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "city country countrylanguage",
        "table_candidates": [
            "city country countrylanguage",
            "city sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9935991764068604,
            0.00012576083827298135,
            0.00021376153745222837,
            6.301797111518681e-05,
            0.0003852068039122969,
            6.393831426976249e-05,
            0.00018714569159783423,
            6.0231170209590346e-05
        ],
        "align_select": "select distinct city.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the name, independence year, and surface area of the country with the smallest population?",
        "gold_select": "select country.Name, country.SurfaceArea, country.IndepYear",
        "select_candidates": [
            "select country.Name, country.IndepYear, country.SurfaceArea",
            "select country.Name, country.IndepYear., country.SurfaceArea",
            "select country.Name, country.IndepYear, country.SurfaceArea",
            "select country.Name, country.IndepYear\", country.SurfaceArea"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9922298789024353,
            8.28841730253771e-05,
            0.03752491623163223,
            0.00010773411486297846,
            0.9922298789024353,
            8.28841730253771e-05,
            0.012275617569684982,
            7.993105828063563e-05
        ],
        "align_select": "select country.Name, country.IndepYear, country.SurfaceArea",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Give the name, year of independence, and surface area of the country that has the lowest population.",
        "gold_select": "select country.Name, country.SurfaceArea, country.IndepYear",
        "select_candidates": [
            "select country.Name, country.IndepYear, country.SurfaceArea",
            "select country.Name, country.IndepYear.c4, country.IndepYear",
            "select country.Name, country.IndepYear, country.SurfaceArea",
            "select country.Name, country.IndepYear.c5, country.SurfaceArea"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.987623929977417,
            7.862540951464325e-05,
            0.00041417154716327786,
            8.120416896417737e-05,
            0.987623929977417,
            7.862540951464325e-05,
            0.0014234152622520924,
            8.027212606975809e-05
        ],
        "align_select": "select country.Name, country.IndepYear, country.SurfaceArea",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What are the population, name and leader of the country with the largest area?",
        "gold_select": "select country.Name, country.popn, country.hos",
        "select_candidates": [
            "select country.popn, country.Name, country.Capital",
            "select country.Code, country.popn, country.Capital",
            "select country.Code, country.Name, country.Capital",
            "select country.popn, country.Name, country.hos"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.8500012755393982,
            9.982422488974407e-05,
            0.0008071413030847907,
            9.345162834506482e-05,
            0.0007771175587549806,
            0.00010596759238978848,
            0.21793995797634125,
            7.504461973439902e-05
        ],
        "align_select": "select country.popn, country.Name, country.Capital",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Give the name, population, and head of state for the country that has the largest area.",
        "gold_select": "select country.Name, country.popn, country.hos",
        "select_candidates": [
            "select country.Name, country.popn, country.hos",
            "select country.Name, country.popn, country.Capital",
            "select country.Name, country.IndepYear, country.popn, country.Capital",
            "select country.Name, country.popn, country.Capital"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9792668223381042,
            9.848782792687416e-05,
            0.859866201877594,
            0.00012749448069371283,
            0.0007410371908918023,
            8.796514885034412e-05,
            0.859866201877594,
            0.00012749448069371283
        ],
        "align_select": "select country.Name, country.popn, country.hos",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Return the country name and the numbers of languages spoken for each country that speaks at least 3 languages.",
        "gold_select": "select count(countrylanguage.lang), country.Name",
        "select_candidates": [
            "select country.Name, count(distinct countrylanguage.lang)",
            "select country.Name, count(*)",
            "select country.Name, count(distinct country.Name)",
            "select country.Name, count(countrylanguage.lang)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage"
        ],
        "align_scores": [
            0.0947585180401802,
            8.851358870742843e-05,
            0.4508833587169647,
            0.00011888384324265644,
            0.00017385203682351857,
            6.773071800125763e-05,
            0.006480485200881958,
            8.869669545674697e-05
        ],
        "align_select": "select country.Name, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the names of countries that speak more than 2 languages, as well as how many languages they speak?",
        "gold_select": "select count(countrylanguage.lang), country.Name",
        "select_candidates": [
            "select country.Name, count(distinct countrylanguage.lang)",
            "select country.Name, count(distinct country.Name)",
            "select country.Name, count(*)",
            "select country.Name, count(countrylanguage.lang)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage"
        ],
        "align_scores": [
            0.5448306202888489,
            0.00011054011702071875,
            0.00025521733914501965,
            7.164282578742132e-05,
            0.954791247844696,
            0.00011787580297095701,
            0.026122847571969032,
            8.85568224475719e-05
        ],
        "align_select": "select country.Name, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Find the number of cities in each district whose population is greater than the average population of cities?",
        "gold_select": "select count(*), city.District",
        "select_candidates": [
            "select count(*), city.District",
            "select city.District, count(*)",
            "select count(*), city.District, city.popn",
            "select count(*), city.District, max(city.popn)"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "city",
        "table_candidates": [
            "city"
        ],
        "align_scores": [
            0.9914209246635437,
            0.015044402331113815,
            0.9926546812057495,
            0.04880184680223465,
            0.0013936290051788092,
            0.00019758872804231942,
            0.0011794245801866055,
            0.0001749480579746887
        ],
        "align_select": "select count(*), city.District",
        "align_structure": "SELECT-FROM-WHERE-GROUP BY"
    },
    {
        "question": "How many cities in each district have a population that is above the average population across all cities?",
        "gold_select": "select count(*), city.District",
        "select_candidates": [
            "select count(*), city.District",
            "select city.District, count(*)",
            "select count(*), city.District, max(city.popn)",
            "select count(*), city.District, city.popn"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "city",
        "table_candidates": [
            "city"
        ],
        "align_scores": [
            0.9905192852020264,
            0.0002491042541805655,
            0.9919633865356445,
            0.00022171744785737246,
            0.001006401958875358,
            0.00014737737365067005,
            0.000691220979206264,
            0.00012964295456185937
        ],
        "align_select": "select count(*), city.District",
        "align_structure": "SELECT-FROM-WHERE-GROUP BY"
    },
    {
        "question": "Find the government form name and total population for each government form whose average life expectancy is longer than 72.",
        "gold_select": "select sum(country.popn), country.gf",
        "select_candidates": [
            "select country.Name, sum(country.popn)",
            "select country.Capital, sum(country.popn)",
            "select country.Name, count(*)",
            "select city.Name, sum(country.popn)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "city country",
            "sqlite_sequence country",
            "city sqlite_sequence country"
        ],
        "align_scores": [
            0.013692968524992466,
            0.00020983706053812057,
            0.00039813033072277904,
            9.645745012676343e-05,
            0.0003924445481970906,
            0.0002501920098438859,
            0.0006661462248302996,
            0.00018399111286271363
        ],
        "align_select": "select country.Name, sum(country.popn)",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the different government forms and what is the total population of each for government forms that have an average life expectancy greater than 72?",
        "gold_select": "select sum(country.popn), country.gf",
        "select_candidates": [
            "select country.Capital, sum(country.popn)",
            "select country.GNP, sum(country.popn)",
            "select country.GNPOld, sum(country.popn)",
            "select country.Code2, sum(country.popn)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "city country"
        ],
        "align_scores": [
            0.0020972227212041616,
            8.859366062097251e-05,
            0.7715298533439636,
            0.00015904560859780759,
            0.14054733514785767,
            0.0001499081263318658,
            0.018908007070422173,
            0.0001384098723065108
        ],
        "align_select": "select country.GNP, sum(country.popn)",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Find the average life expectancy and total population for each continent where the average life expectancy is shorter than 72?",
        "gold_select": "select sum(country.popn), avg(country.LifeExpectancy), country.Continent",
        "select_candidates": [
            "select avg(country.LifeExpectancy), sum(country.popn), country.Continent",
            "select country.Name, avg(country.LifeExpectancy), sum(country.popn)",
            "select country.LifeExpectancy, sum(country.popn), country.Continent",
            "select country.Continent, avg(country.LifeExpectancy), sum(country.popn)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.05021413788199425,
            0.00017164238670375198,
            0.0019577520433813334,
            0.00010133613977814093,
            0.09644372016191483,
            0.00014594648382626474,
            0.01496250368654728,
            0.0001457122853025794
        ],
        "align_select": "select avg(country.LifeExpectancy), sum(country.popn), country.Continent",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the different continents and the total popuation and average life expectancy corresponding to each, for continents that have an average life expectancy less than 72?",
        "gold_select": "select sum(country.popn), avg(country.LifeExpectancy), country.Continent",
        "select_candidates": [
            "select country.Continent, sum(country.popn), avg(country.LifeExpectancy)",
            "select country.Continent, sum(country.popn), avg(country.popn)",
            "select country.Continent, sum(country.popn), sum(country.LifeExpectancy)",
            "select country.Continent, count(*), avg(country.popn)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.10820282995700836,
            0.00012607504322659224,
            0.2847095727920532,
            0.00010030112025560811,
            0.09386283159255981,
            0.0001145917340181768,
            0.0026797938626259565,
            0.00010209229367319494
        ],
        "align_select": "select country.Continent, sum(country.popn), avg(country.LifeExpectancy)",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are names of countries with the top 3 largest population?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Capital",
            "select country.Name, country.Region",
            "select country.Name, country.popn"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9893559813499451,
            5.333628359949216e-05,
            0.0006088515510782599,
            5.579136632150039e-05,
            0.0003992954734712839,
            5.564636012422852e-05,
            0.0005802169907838106,
            5.1776492909993976e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Return the names of the 3 most populated countries.",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Capital",
            "select country.Name, country.popn",
            "select country.Name (country.popn)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9955614805221558,
            5.573526141233742e-05,
            0.0003376711974851787,
            5.078433969174512e-05,
            0.0010952542070299387,
            4.980797166354023e-05,
            0.00251431274227798,
            6.062185639166273e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What are the names of the nations with the 3 lowest populations?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Capital",
            "select country.Name, country.popn",
            "select country.Name, country.Code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9886292219161987,
            5.632610555039719e-05,
            0.0003458914870861918,
            5.1557475671870634e-05,
            0.000736912596039474,
            5.0317605200689286e-05,
            0.002333836629986763,
            5.594891626969911e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Return the names of the 3 countries with the fewest people.",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Capital",
            "select country.Name, country.popn",
            "select country.Name, country.Region"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9924893379211426,
            5.236485958448611e-05,
            0.000335477088810876,
            5.052836058894172e-05,
            0.0008802568190731108,
            4.9325841246172786e-05,
            0.0002344946115044877,
            4.932706360705197e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What are the names of the countries that are in the continent of Europe and have a population of 80000?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.popn",
            "select country.Name, country.Continent",
            "select country.Name, country.Region"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "city country",
            "sqlite_sequence country",
            "city sqlite_sequence country"
        ],
        "align_scores": [
            0.9595640897750854,
            0.001315632718615234,
            0.00024015031522139907,
            0.00012586353113874793,
            0.00025281388661824167,
            0.00010754238610388711,
            0.0002299614279763773,
            9.96403832687065e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give the names of countries that are in Europe and have a population equal to 80000.",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Continent",
            "select country.Name, country.popn",
            "select country.Name, country.Region"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "city country"
        ],
        "align_scores": [
            0.8918541669845581,
            0.0005018131341785192,
            0.00020290317479521036,
            7.972643652465194e-05,
            0.00020617953850887716,
            7.07589351804927e-05,
            0.0001932177838170901,
            7.36175206839107e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the total population and average area of countries in the continent of North America whose area is bigger than 3000?",
        "gold_select": "select sum(country.popn), avg(country.SurfaceArea)",
        "select_candidates": [
            "select sum(country.popn), avg(country.SurfaceArea)",
            "select sum(country.popn), avg(country.popn)",
            "select avg(country.popn), sum(country.popn)",
            "select sum(country.popn), avg(country.GNP)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9637560844421387,
            0.0007019239128567278,
            0.0012801277916878462,
            0.0001877664471976459,
            0.0024781273677945137,
            0.00015340054233092815,
            0.9522762298583984,
            0.0024075794499367476
        ],
        "align_select": "select sum(country.popn), avg(country.SurfaceArea)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give the total population and average surface area corresponding to countries in North America that have a surface area greater than 3000.",
        "gold_select": "select sum(country.popn), avg(country.SurfaceArea)",
        "select_candidates": [
            "select sum(country.popn), avg(country.SurfaceArea)",
            "select avg(country.popn), sum(country.popn)",
            "select country.popn, avg(country.SurfaceArea)",
            "select total(country.popn), avg(country.SurfaceArea)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.5305790305137634,
            0.00036951160291209817,
            0.0028091189451515675,
            0.0002473738859407604,
            0.006705180741846561,
            0.0002556844847276807,
            0.0005813062889501452,
            0.00012410234194248915
        ],
        "align_select": "select sum(country.popn), avg(country.SurfaceArea)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the cities whose population is between 160000 and 900000?",
        "gold_select": "select city.Name",
        "select_candidates": [
            "select city.Name",
            "select city.ID, city.Name",
            "select city.Name, city.cntry_code",
            "select city.Name, city.District"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "city",
        "table_candidates": [
            "city",
            "city country"
        ],
        "align_scores": [
            0.9741663932800293,
            0.00026226683985441923,
            0.0002805459371302277,
            0.00010489388660062104,
            0.0002775280154310167,
            0.00010891663987422362,
            0.00021223352814558893,
            9.920598677126691e-05
        ],
        "align_select": "select city.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the names of cities that have a population between 160000 and 900000.",
        "gold_select": "select city.Name",
        "select_candidates": [
            "select city.Name",
            "select city.Name, city.District",
            "select city.Name, city.cntry_code",
            "select city.ID, city.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "city",
        "table_candidates": [
            "city",
            "city country"
        ],
        "align_scores": [
            0.9882296323776245,
            0.0002433513873256743,
            0.00018871431529987603,
            6.799559196224436e-05,
            0.00022969192650634795,
            7.162143447203562e-05,
            0.00017898956139106303,
            7.761482265777886e-05
        ],
        "align_select": "select city.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which language is spoken by the largest number of countries?",
        "gold_select": "select countrylanguage.lang",
        "select_candidates": [
            "select countrylanguage.lang",
            "select countrylanguage.lang, country.Capital",
            "select countrylanguage.lang, country.Name",
            "select countrylanguage.lang, country.Code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "countrylanguage",
        "table_candidates": [
            "countrylanguage",
            "country countrylanguage",
            "sqlite_sequence countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9921444654464722,
            8.517169044353068e-05,
            0.0007869850960560143,
            6.326846778392792e-05,
            0.004269550088793039,
            6.55883050058037e-05,
            0.0012534118723124266,
            6.743540870957077e-05
        ],
        "align_select": "select countrylanguage.lang",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Give the language that is spoken in the most countries.",
        "gold_select": "select countrylanguage.lang",
        "select_candidates": [
            "select countrylanguage.lang",
            "select countrylanguage.lang, country.Capital",
            "select countrylanguage.lang, country.Name",
            "select countrylanguage.lang, country.Code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "countrylanguage",
        "table_candidates": [
            "countrylanguage",
            "country countrylanguage",
            "sqlite_sequence countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9946223497390747,
            8.65858091856353e-05,
            0.00034767595934681594,
            5.973843144602142e-05,
            0.002514088060706854,
            6.297988147707656e-05,
            0.0008583058370277286,
            6.441106233978644e-05
        ],
        "align_select": "select countrylanguage.lang",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the language spoken by the largest percentage of people in each country?",
        "gold_select": "select countrylanguage.lang, countrylanguage.cntry_code, max(countrylanguage.pct)",
        "select_candidates": [
            "select countrylanguage.lang",
            "select countrylanguage.lang, country.Capital",
            "select countrylanguage.lang, country.Name",
            "select countrylanguage.lang, country.Code"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9916433691978455,
            7.700484275119379e-05,
            0.0008189279469661415,
            6.124720675870776e-05,
            0.04518241807818413,
            7.294220995390788e-05,
            0.006974474061280489,
            7.789302617311478e-05
        ],
        "align_select": "select countrylanguage.lang",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What are the country codes of the different countries, and what are the languages spoken by the greatest percentage of people for each?",
        "gold_select": "select countrylanguage.lang, countrylanguage.cntry_code, max(countrylanguage.pct)",
        "select_candidates": [
            "select country.Code, countrylanguage.lang",
            "select country.Name, countrylanguage.lang",
            "select countrylanguage.cntry_code, countrylanguage.lang",
            "select countrylanguage.lang, country.Code"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.9756715297698975,
            8.58033963595517e-05,
            0.00034457709989510477,
            0.00011022202670574188,
            0.9824864864349365,
            8.516748494002968e-05,
            0.9850308895111084,
            8.065407746471465e-05
        ],
        "align_select": "select country.Code, countrylanguage.lang",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the total number of countries where Spanish is spoken by the largest percentage of people?",
        "gold_select": "select count(*), max(countrylanguage.pct)",
        "select_candidates": [
            "select count(*)",
            "select count(*), countrylanguage.cntry_code",
            "select count(*), country.Name",
            "select count(*), countrylanguage.lang"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "countrylanguage",
        "table_candidates": [
            "countrylanguage",
            "country countrylanguage",
            "sqlite_sequence countrylanguage",
            "sqlite_sequence country countrylanguage",
            "countrylanguage country countrylanguage"
        ],
        "align_scores": [
            0.9555000066757202,
            0.010027590207755566,
            0.0014703121269121766,
            0.0053720842115581036,
            0.0010187877342104912,
            0.0035981968976557255,
            0.0006759471725672483,
            0.0021713729947805405
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Count the number of countries for which Spanish is the predominantly spoken language.",
        "gold_select": "select count(*), max(countrylanguage.pct)",
        "select_candidates": [
            "select count(*)",
            "select count(distinct countrylanguage.cntry_code)",
            "select count(*), countrylanguage.cntry_code",
            "select count(*), country.Name"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "countrylanguage",
        "table_candidates": [
            "countrylanguage",
            "country countrylanguage"
        ],
        "align_scores": [
            0.9916129112243652,
            7.121213275240734e-05,
            0.9081106781959534,
            6.517740985145792e-05,
            0.0004811736580450088,
            7.376129360636696e-05,
            0.00039558764547109604,
            6.151998968562111e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the codes of countries where Spanish is spoken by the largest percentage of people?",
        "gold_select": "select countrylanguage.cntry_code, max(countrylanguage.pct)",
        "select_candidates": [
            "select country.Code",
            "select country.Name, country.Code2",
            "select country.Name, country.Code",
            "select country.Name, country.Continent"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.9816455841064453,
            0.9815635681152344,
            0.000636354903690517,
            0.0016266604652628303,
            0.001165725407190621,
            0.0031707140151411295,
            0.0004214286454953253,
            0.0007936304318718612
        ],
        "align_select": "select country.Code",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT"
    },
    {
        "question": "Return the codes of countries for which Spanish is the predominantly spoken language.",
        "gold_select": "select countrylanguage.cntry_code, max(countrylanguage.pct)",
        "select_candidates": [
            "select countrylanguage.cntry_code",
            "select country.Code",
            "select country.Name, countrylanguage.cntry_code",
            "select country.Name, country.Code"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "countrylanguage",
        "table_candidates": [
            "countrylanguage",
            "country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.9894724488258362,
            0.00011535103112692013,
            0.9836951494216919,
            8.971072384156287e-05,
            0.00027049588970839977,
            6.830656639067456e-05,
            0.0002219725283794105,
            5.867519212188199e-05
        ],
        "align_select": "select countrylanguage.cntry_code",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the record companies of orchestras in descending order of years in which they were founded?",
        "gold_select": "select orchestra.record_co",
        "select_candidates": [
            "select orchestra.record_co",
            "select orchestra.record_co, orchestra.Year_of_Founded",
            "select orchestra.record_co (orch_orchestra.record_co)",
            "select orchestra.record_co (orch_orchestra.Year_of_Founded)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "orchestra",
        "table_candidates": [
            "orchestra"
        ],
        "align_scores": [
            0.9931649565696716,
            0.9931649565696716,
            0.0002944496809504926,
            0.0002944496809504926,
            0.0005088556790724397,
            0.0005088556790724397,
            0.0013271012576296926,
            0.0013271012576296926
        ],
        "align_select": "select orchestra.record_co",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "Return the record companies of orchestras, sorted descending by the years in which they were founded.",
        "gold_select": "select orchestra.record_co",
        "select_candidates": [
            "select orchestra.record_co",
            "select orchestra.record_co, orchestra.Year_of_Founded",
            "select orchestra.record_co (orch_orchestra.record_co)",
            "select orchestra.record_co (orch_orchestra.Year_of_Founded)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "orchestra",
        "table_candidates": [
            "orchestra"
        ],
        "align_scores": [
            0.9948287606239319,
            0.00039984058821573853,
            0.0003389579651411623,
            0.00012306147255003452,
            0.00045979369315318763,
            0.00011790773714892566,
            0.0014146212488412857,
            0.00014280066534411162
        ],
        "align_select": "select orchestra.record_co",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "What is the average attendance of shows?",
        "gold_select": "select avg(show.attend)",
        "select_candidates": [
            "select avg(show.attend)",
            "select an avg(show.attend)",
            "select  avg(show.attend)",
            "select avg(show.res)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "show",
        "table_candidates": [
            "show"
        ],
        "align_scores": [
            0.9963678121566772,
            5.6475953897461295e-05,
            0.0005088833277113736,
            8.463991980534047e-05,
            0.9963678121566772,
            5.6475953897461295e-05,
            0.005031547509133816,
            6.690102600259706e-05
        ],
        "align_select": "select avg(show.attend)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "Return the average attendance across all shows.",
        "gold_select": "select avg(show.attend)",
        "select_candidates": [
            "select avg(show.attend)",
            "select an avg(show.attend)",
            "select  avg(show.attend)",
            "select the avg(show.attend)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "show",
        "table_candidates": [
            "show"
        ],
        "align_scores": [
            0.9970505237579346,
            6.751597538823262e-05,
            0.00040276427171193063,
            9.617263276595622e-05,
            0.9970505237579346,
            6.751597538823262e-05,
            0.00038207677425816655,
            0.00011092297063441947
        ],
        "align_select": "select avg(show.attend)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "Show the names of conductors and the orchestras they have conducted.",
        "gold_select": "select conductor.Name, orchestra.orch",
        "select_candidates": [
            "select conductor.Name, orchestra.orch",
            "select orchestra.orch, conductor.Name",
            "select performance.orch_id, orchestra.orch",
            "select conductor.Name, orch1.c1"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor orchestra",
        "table_candidates": [
            "conductor orchestra"
        ],
        "align_scores": [
            0.9850782155990601,
            0.974498987197876,
            0.9935923218727112,
            0.9894946217536926,
            0.0005049030296504498,
            0.00033414061181247234,
            0.00419817166402936,
            0.003929749596863985
        ],
        "align_select": "select conductor.Name, orchestra.orch",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What are the names of conductors as well as the corresonding orchestras that they have conducted?",
        "gold_select": "select conductor.Name, orchestra.orch",
        "select_candidates": [
            "select conductor.Name, orchestra.orch",
            "select orchestra.orch, conductor.Name",
            "select conductor.Name, orchestra.cond_id",
            "select conductor.Name, orchestra.orch,"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor orchestra",
        "table_candidates": [
            "conductor orchestra"
        ],
        "align_scores": [
            0.990119218826294,
            0.9533265233039856,
            0.9936396479606628,
            0.9777334928512573,
            0.07522986084222794,
            0.03816918656229973,
            0.003833681344985962,
            0.0014749785186722875
        ],
        "align_select": "select conductor.Name, orchestra.orch",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "Show the names of conductors that have conducted more than one orchestras.",
        "gold_select": "select conductor.Name",
        "select_candidates": [
            "select conductor.Name",
            "select conductor.Name, orchestra.cond_id",
            "select conductor.Name, orchestra.orch",
            "select conductor.Name (or conductor.Age)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor orchestra",
        "table_candidates": [
            "conductor orchestra"
        ],
        "align_scores": [
            0.9692453145980835,
            8.416024502366781e-05,
            0.0008643755572848022,
            7.625291618751362e-05,
            0.0642879530787468,
            8.086139860097319e-05,
            0.00033948637428693473,
            6.429292989196256e-05
        ],
        "align_select": "select conductor.Name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the names of conductors who have conducted at more than one orchestra?",
        "gold_select": "select conductor.Name",
        "select_candidates": [
            "select conductor.Name",
            "select conductor.Name, orchestra.cond_id",
            "select conductor.Name, orchestra.orch",
            "select conductor.Name, orchestra.record_co"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor orchestra",
        "table_candidates": [
            "conductor orchestra",
            "conductor orchestra performance"
        ],
        "align_scores": [
            0.9891504645347595,
            0.00010502999793970957,
            0.000946602551266551,
            8.03697039373219e-05,
            0.09798671305179596,
            8.072980563156307e-05,
            0.0023195780813694,
            7.056978938635439e-05
        ],
        "align_select": "select conductor.Name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Show the name of the conductor that has conducted the most number of orchestras.",
        "gold_select": "select conductor.Name",
        "select_candidates": [
            "select conductor.Name",
            "select conductor.Name, conductor.Age",
            "select conductor.Name, orchestra.cond_id",
            "select conductor.Name, conductor.Nationality"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor orchestra",
        "table_candidates": [
            "conductor orchestra"
        ],
        "align_scores": [
            0.9891160130500793,
            6.215443136170506e-05,
            0.00020747754024341702,
            5.156578481546603e-05,
            0.0006865229806862772,
            5.5853917729109526e-05,
            0.000396507210098207,
            6.908203067723662e-05
        ],
        "align_select": "select conductor.Name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the name of the conductor who has conducted the most orchestras?",
        "gold_select": "select conductor.Name",
        "select_candidates": [
            "select conductor.Name",
            "select conductor.Name, conductor.Age",
            "select conductor.Name, orchestra.cond_id",
            "select conductor.Name, conductor.Nationality"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor orchestra",
        "table_candidates": [
            "conductor orchestra"
        ],
        "align_scores": [
            0.9923128485679626,
            7.493999873986468e-05,
            0.00031610977021045983,
            5.5187338148243725e-05,
            0.0007528106216341257,
            5.8749654272105545e-05,
            0.000825613911729306,
            7.919934432720765e-05
        ],
        "align_select": "select conductor.Name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Please show the name of the conductor that has conducted orchestras founded after 2008.",
        "gold_select": "select conductor.Name",
        "select_candidates": [
            "select conductor.Name",
            "select conductor.Name, orchestra.cond_id",
            "select conductor.Name (ORDER BY-LIMIT)",
            "select conductor.Name (or conductor.Age)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor orchestra",
        "table_candidates": [
            "conductor orchestra"
        ],
        "align_scores": [
            0.9788501858711243,
            9.503453475190327e-05,
            0.0002061143022729084,
            7.269319758052006e-05,
            0.05293092131614685,
            7.827887748135254e-05,
            0.0008024586131796241,
            8.295011502923444e-05
        ],
        "align_select": "select conductor.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of conductors who have conducted orchestras founded after the year 2008?",
        "gold_select": "select conductor.Name",
        "select_candidates": [
            "select conductor.Name",
            "select distinct conductor.Name",
            "select conductor.Name, orchestra.cond_id",
            "select conductor.Name (or conductor.Age)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor orchestra",
        "table_candidates": [
            "conductor orchestra"
        ],
        "align_scores": [
            0.9868473410606384,
            0.00011097524111391976,
            0.06415452063083649,
            0.00012368435272946954,
            0.000268183765001595,
            6.696267519146204e-05,
            0.0011921824188902974,
            8.457520743831992e-05
        ],
        "align_select": "select conductor.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Please show the different record companies and the corresponding number of orchestras.",
        "gold_select": "select orchestra.record_co, count(*)",
        "select_candidates": [
            "select orchestra.record_co, count(*)",
            "select orchestra.record_co, count(orchs)",
            "select orchestra.record_co, count(orchestrations)",
            "select orchestra.record_co, count(orchestra.orch_id)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "orchestra",
        "table_candidates": [
            "orchestra"
        ],
        "align_scores": [
            0.9967247843742371,
            0.000311772309942171,
            0.8078249096870422,
            0.0003462362801656127,
            0.013104462996125221,
            0.00038286374183371663,
            0.33782556653022766,
            0.0002450870524626225
        ],
        "align_select": "select orchestra.record_co, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "How many orchestras does each record company manage?",
        "gold_select": "select orchestra.record_co, count(*)",
        "select_candidates": [
            "select orchestra.record_co, count(*)",
            "select count(*), orchestra.record_co",
            "select orch_orchestra.record_co, count(*)",
            "select sum(orchestra.orch), orchestra.record_co"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "orchestra",
        "table_candidates": [
            "orchestra"
        ],
        "align_scores": [
            0.9954007267951965,
            0.00019194527703803033,
            0.9953938722610474,
            0.00016516903997398913,
            0.6218054294586182,
            0.00016033041174523532,
            0.04055143892765045,
            0.00010950648720609024
        ],
        "align_select": "select orchestra.record_co, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "Please show the record formats of orchestras in ascending order of count.",
        "gold_select": "select orchestra.maj_fmt",
        "select_candidates": [
            "select orchestra.maj_fmt",
            "select count(*), orchestra.maj_fmt",
            "select orchestra.maj_fmt, count(*)",
            "select orchestra.maj_fmt, orchestra.record_co"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY",
            "SELECT-FROM-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "orchestra",
        "table_candidates": [
            "orchestra"
        ],
        "align_scores": [
            0.0006830478669144213,
            0.00011171229562023655,
            0.0002396891504758969,
            0.00011878128134412691,
            0.00032015962642617524,
            0.00011428975994931534,
            0.00012900750152766705,
            9.481168672209606e-05
        ],
        "align_select": "select orchestra.maj_fmt",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY"
    },
    {
        "question": "What are the major record formats of orchestras, sorted by their frequency?",
        "gold_select": "select orchestra.maj_fmt",
        "select_candidates": [
            "select orchestra.maj_fmt",
            "select orchestra.maj_fmt, orchestra.record_co",
            "select orchestra.maj_fmt (ordered by orchestra.record_co)",
            "select orchestra.maj_fmt, orchestra.Year_of_Founded"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "orchestra",
        "table_candidates": [
            "orchestra"
        ],
        "align_scores": [
            0.7984205484390259,
            0.000551160832401365,
            0.00020962308917660266,
            0.00011745281517505646,
            0.00030997893190942705,
            0.00010427257075207308,
            0.00010540644871070981,
            0.00011334413284203038
        ],
        "align_select": "select orchestra.maj_fmt",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY"
    },
    {
        "question": "List the record company shared by the most number of orchestras.",
        "gold_select": "select orchestra.record_co",
        "select_candidates": [
            "select orchestra.record_co",
            "select orchestra.record_co, orchestra.Year_of_Founded",
            "select orchestra.record_co, orchestra.cond_id",
            "select orchestra.record_co, orchestra.maj_fmt"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "orchestra",
        "table_candidates": [
            "orchestra"
        ],
        "align_scores": [
            0.9949449896812439,
            8.18516273284331e-05,
            0.00048014387721195817,
            5.643375334329903e-05,
            0.0002805354888550937,
            6.746203871443868e-05,
            0.00021814304636791348,
            5.7590445067035034e-05
        ],
        "align_select": "select orchestra.record_co",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the record company used by the greatest number of orchestras?",
        "gold_select": "select orchestra.record_co",
        "select_candidates": [
            "select orchestra.record_co",
            "select orchestra.record_co, orchestra.Year_of_Founded",
            "select orchestra.record_co, orchestra.cond_id",
            "select orchestra.record_co, orchestra.maj_fmt"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "orchestra",
        "table_candidates": [
            "orchestra"
        ],
        "align_scores": [
            0.9950196743011475,
            8.173056994564831e-05,
            0.000501495145726949,
            5.53792342543602e-05,
            0.00019892898853868246,
            6.065706838853657e-05,
            0.0003726103459484875,
            5.4896441724849865e-05
        ],
        "align_select": "select orchestra.record_co",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "List the names of orchestras that have no performance.",
        "gold_select": "select orchestra.orch",
        "select_candidates": [
            "select orchestra.orch",
            "select orchestra.orch, orchestra.cond_id",
            "select orchestra.orch, orchestra.record_co",
            "select orchestra.orch, orchestra.Year_of_Founded"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "orchestra",
        "table_candidates": [
            "orchestra",
            "orchestra performance"
        ],
        "align_scores": [
            0.5122681260108948,
            0.001148390700109303,
            0.0001603556447662413,
            8.586438343627378e-05,
            0.0002454125205986202,
            9.918073192238808e-05,
            0.00020895260968245566,
            9.799899271456525e-05
        ],
        "align_select": "select orchestra.orch",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the orchestras that do not have any performances?",
        "gold_select": "select orchestra.orch",
        "select_candidates": [
            "select orchestra.orch",
            "select orchestra.orch, orchestra.cond_id",
            "select orchestra.orch, orchestra.orch_id",
            "select orchs(orchestra.orch)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "orchestra",
        "table_candidates": [
            "orchestra",
            "orchestra performance"
        ],
        "align_scores": [
            0.11206857115030289,
            0.7878430485725403,
            0.00021178113820496947,
            0.0002594645775388926,
            0.00034911741386167705,
            0.0005363293457776308,
            0.0008231151732616127,
            0.0004865169175900519
        ],
        "align_select": "select orchestra.orch",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM"
    },
    {
        "question": "Show the record companies shared by orchestras founded before 2003 and after 2003.",
        "gold_select": "select orchestra.record_co",
        "select_candidates": [
            "select orchestra.record_co",
            "select orchestra.record_co, orchestra.Year_of_Founded",
            "select orchestra.record_co (symbol orchestra.record_co)",
            "select orchestra.record_co, orchestra.cond_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "orchestra",
        "table_candidates": [
            "orchestra"
        ],
        "align_scores": [
            0.99554044008255,
            0.00012067288480466232,
            0.0001526767446193844,
            6.762539123883471e-05,
            0.00015762433758936822,
            8.09297343948856e-05,
            9.401293937116861e-05,
            6.901513552293181e-05
        ],
        "align_select": "select orchestra.record_co",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the record companies that are used by both orchestras founded before 2003 and those founded after 2003?",
        "gold_select": "select orchestra.record_co",
        "select_candidates": [
            "select orchestra.record_co",
            "select orchestra.record_co, orchestra.Year_of_Founded",
            "select orchestra.record_co del.icio.us",
            "select orchestra.record_co, orchestra.cond_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "orchestra",
        "table_candidates": [
            "orchestra"
        ],
        "align_scores": [
            0.9928062558174133,
            0.014351457357406616,
            0.00027886719908565283,
            0.0001479799102526158,
            0.011812012642621994,
            0.007377856411039829,
            0.0001441905478714034,
            0.00011910624743904918
        ],
        "align_select": "select orchestra.record_co",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "Find the number of orchestras whose record format is \"CD\" or \"DVD\".",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), orchestra.record_co",
            "select count(*), orchestra.maj_fmt",
            "select count(*), orchestra.orch_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "orchestra",
        "table_candidates": [
            "orchestra"
        ],
        "align_scores": [
            0.9936802387237549,
            7.263485895236954e-05,
            0.0002891228359658271,
            6.110381218604743e-05,
            0.00029029586585238576,
            6.371529161697254e-05,
            0.0002165874175261706,
            6.738360389135778e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Count the number of orchestras that have CD or DVD as their record format.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), orchestra.maj_fmt",
            "select count(distinct orchestra.orch)",
            "select count(distinct orchestra.orch_id)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "orchestra",
        "table_candidates": [
            "orchestra"
        ],
        "align_scores": [
            0.9912707805633545,
            7.825708598829806e-05,
            0.0002518649853300303,
            7.09162704879418e-05,
            0.0062650470063090324,
            6.26405089860782e-05,
            0.0034362662117928267,
            6.0891208704560995e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show the years in which orchestras that have given more than one performance are founded.",
        "gold_select": "select orchestra.Year_of_Founded",
        "select_candidates": [
            "select orchestra.Year_of_Founded",
            "select orchestra.Year_of_Founded, orchestra.maj_fmt",
            "select orchestra.Year_of_Founded, performance.Date",
            "select orchestra.Year_of_Founded, orchestra.record_co"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "orchestra performance",
        "table_candidates": [
            "orchestra performance",
            "orchestra"
        ],
        "align_scores": [
            0.5329995155334473,
            8.730505214771256e-05,
            0.00020898210641462356,
            6.108791421866044e-05,
            0.0007269466295838356,
            6.51656009722501e-05,
            0.0002481882111169398,
            6.810623744968325e-05
        ],
        "align_select": "select orchestra.Year_of_Founded",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are years of founding for orchestras that have had more than a single performance?",
        "gold_select": "select orchestra.Year_of_Founded",
        "select_candidates": [
            "select orchestra.Year_of_Founded",
            "select orchestra.Year_of_Founded, orchestra.maj_fmt",
            "select orchestra.Year_of_Founded, performance.Date",
            "select orchestra.Year_of_Founded, orchestra.record_co"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "orchestra performance",
        "table_candidates": [
            "orchestra performance",
            "orchestra"
        ],
        "align_scores": [
            0.1392018049955368,
            9.47250155149959e-05,
            0.00018690191791392863,
            6.485025369329378e-05,
            0.0006886887713335454,
            7.201632979558781e-05,
            0.00022429229284171015,
            6.699442747049034e-05
        ],
        "align_select": "select orchestra.Year_of_Founded",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What is the average attendance of shows?",
        "gold_select": "select avg(show.attend)",
        "select_candidates": [
            "select avg(show.attend)",
            "select an avg(show.attend)",
            "select avg(show.res)",
            "select  avg(show.attend)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "show",
        "table_candidates": [
            "show"
        ],
        "align_scores": [
            0.9963678121566772,
            5.6475953897461295e-05,
            0.0005088833277113736,
            8.463991980534047e-05,
            0.005031547509133816,
            6.690102600259706e-05,
            0.9963678121566772,
            5.6475953897461295e-05
        ],
        "align_select": "select avg(show.attend)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "Return the average attendance across all shows.",
        "gold_select": "select avg(show.attend)",
        "select_candidates": [
            "select avg(show.attend)",
            "select an avg(show.attend)",
            "select  avg(show.attend)",
            "select the avg(show.attend)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "show",
        "table_candidates": [
            "show"
        ],
        "align_scores": [
            0.9970505237579346,
            6.751597538823262e-05,
            0.00040276427171193063,
            9.617263276595622e-05,
            0.9970505237579346,
            6.751597538823262e-05,
            0.00038207677425816655,
            0.00011092297063441947
        ],
        "align_select": "select avg(show.attend)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "Show the names of conductors and the orchestras they have conducted.",
        "gold_select": "select conductor.Name, orchestra.Orchestra",
        "select_candidates": [
            "select conductor.Name, orchestra.Orchestra",
            "select orchestra.Orchestra, conductor.Name",
            "select performance.Orchestra_ID, orchestra.Orchestra",
            "select show.Performance_ID, orchestra.Orchestra"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor orchestra",
        "table_candidates": [
            "conductor orchestra",
            "conductor orchestra performance"
        ],
        "align_scores": [
            0.9919329285621643,
            0.9572640061378479,
            0.9935441017150879,
            0.9839147329330444,
            0.00039147265488281846,
            0.0002782574447337538,
            0.0004029522242490202,
            0.0002697035379242152
        ],
        "align_select": "select conductor.Name, orchestra.Orchestra",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What are the names of conductors as well as the corresonding orchestras that they have conducted?",
        "gold_select": "select conductor.Name, orchestra.Orchestra",
        "select_candidates": [
            "select conductor.Name, orchestra.Orchestra",
            "select orchestra.Orchestra, conductor.Name",
            "select conductor.Name, orchestra.cond_id",
            "select performance.Orchestra_ID, orchestra.Orchestra"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor orchestra",
        "table_candidates": [
            "conductor orchestra",
            "conductor orchestra performance"
        ],
        "align_scores": [
            0.9933091402053833,
            0.9307742714881897,
            0.9940614104270935,
            0.9708224534988403,
            0.07522986084222794,
            0.03816918656229973,
            0.00044061802327632904,
            0.00031056907027959824
        ],
        "align_select": "select conductor.Name, orchestra.Orchestra",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "Show the names of conductors that have conducted more than one orchestras.",
        "gold_select": "select conductor.Name",
        "select_candidates": [
            "select conductor.Name",
            "select conductor.Name, orchestra.cond_id",
            "select conductor.Name, orchestra.Orchestra",
            "select conductor.Name, orchestra.Orchestra_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor orchestra",
        "table_candidates": [
            "conductor orchestra"
        ],
        "align_scores": [
            0.9692453145980835,
            8.416024502366781e-05,
            0.0008643755572848022,
            7.625291618751362e-05,
            0.014073112048208714,
            8.187659841496497e-05,
            0.01366953831166029,
            9.895380935631692e-05
        ],
        "align_select": "select conductor.Name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the names of conductors who have conducted at more than one orchestra?",
        "gold_select": "select conductor.Name",
        "select_candidates": [
            "select conductor.Name",
            "select conductor.Name, orchestra.Orchestra",
            "select conductor.Name, orchestra.cond_id",
            "select conductor.Name (or conductor.Age)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor orchestra",
        "table_candidates": [
            "conductor orchestra",
            "conductor orchestra performance"
        ],
        "align_scores": [
            0.9891504645347595,
            0.00010502999793970957,
            0.05731749162077904,
            7.952591113280505e-05,
            0.000946602551266551,
            8.03697039373219e-05,
            0.0004137852229177952,
            7.284627645276487e-05
        ],
        "align_select": "select conductor.Name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Show the name of the conductor that has conducted the most number of orchestras.",
        "gold_select": "select conductor.Name",
        "select_candidates": [
            "select conductor.Name",
            "select conductor.Name, conductor.Age",
            "select conductor.Name, conductor.Nationality",
            "select conductor.Name, orchestra.cond_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor orchestra",
        "table_candidates": [
            "conductor orchestra",
            "conductor orchestra performance"
        ],
        "align_scores": [
            0.9891160130500793,
            5.481483822222799e-05,
            0.00020747754024341702,
            5.204340413911268e-05,
            0.000396507210098207,
            6.007886622683145e-05,
            0.0006865229806862772,
            5.498572500073351e-05
        ],
        "align_select": "select conductor.Name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the name of the conductor who has conducted the most orchestras?",
        "gold_select": "select conductor.Name",
        "select_candidates": [
            "select conductor.Name",
            "select conductor.Name, conductor.Age",
            "select conductor.Name, conductor.Nationality",
            "select conductor.Name, conductor.Age, conductor.Nationality"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor orchestra",
        "table_candidates": [
            "conductor orchestra"
        ],
        "align_scores": [
            0.9923128485679626,
            6.023461537552066e-05,
            0.00031610977021045983,
            5.2127797971479595e-05,
            0.000825613911729306,
            6.894580292282626e-05,
            0.0002632096875458956,
            5.5772110499674454e-05
        ],
        "align_select": "select conductor.Name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Please show the name of the conductor that has conducted orchestras founded after 2008.",
        "gold_select": "select conductor.Name",
        "select_candidates": [
            "select conductor.Name",
            "select conductor.Name, orchestra.cond_id",
            "select conductor.Name (orchestrator_conductor.Age)",
            "select conductor.Name (orchestrator_conductor.Name)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor orchestra",
        "table_candidates": [
            "conductor orchestra"
        ],
        "align_scores": [
            0.9788501858711243,
            9.503453475190327e-05,
            0.0002061143022729084,
            7.269319758052006e-05,
            0.0006037818966433406,
            8.565175085095689e-05,
            0.001740155159495771,
            6.995604053372517e-05
        ],
        "align_select": "select conductor.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of conductors who have conducted orchestras founded after the year 2008?",
        "gold_select": "select conductor.Name",
        "select_candidates": [
            "select conductor.Name",
            "select distinct conductor.Name",
            "select conductor.Name, orchestra.cond_id",
            "select conductor.Name (or conductor.Age)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor orchestra",
        "table_candidates": [
            "conductor orchestra"
        ],
        "align_scores": [
            0.9868473410606384,
            0.00011097524111391976,
            0.06415452063083649,
            0.00012368435272946954,
            0.000268183765001595,
            6.696267519146204e-05,
            0.0011921824188902974,
            8.457520743831992e-05
        ],
        "align_select": "select conductor.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Please show the record formats of orchestras in ascending order of count.",
        "gold_select": "select orchestra.maj_fmt",
        "select_candidates": [
            "select orchestra.maj_fmt",
            "select orchestra.maj_fmt, count(*)",
            "select count(*), orchestra.maj_fmt",
            "select orchestra.maj_fmt, orchestra.cond_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY",
            "SELECT-FROM-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "orchestra",
        "table_candidates": [
            "orchestra"
        ],
        "align_scores": [
            0.0006830478669144213,
            0.00011171229562023655,
            0.00032015962642617524,
            0.00011428975994931534,
            0.0002396891504758969,
            0.00011878128134412691,
            0.00011094582441728562,
            0.00010320579167455435
        ],
        "align_select": "select orchestra.maj_fmt",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY"
    },
    {
        "question": "What are the major record formats of orchestras, sorted by their frequency?",
        "gold_select": "select orchestra.maj_fmt",
        "select_candidates": [
            "select orchestra.maj_fmt",
            "select orchestra.maj_fmt, t1.c6",
            "select orchestra.maj_fmt, t1.c7",
            "select orchestra.maj_fmt, orchestra.Year_of_Founded"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "orchestra",
        "table_candidates": [
            "orchestra"
        ],
        "align_scores": [
            0.7984205484390259,
            0.000551160832401365,
            0.0002886196307372302,
            0.0002042407140834257,
            0.0003098876331932843,
            0.00023555343796033412,
            0.00010540644871070981,
            0.00011334413284203038
        ],
        "align_select": "select orchestra.maj_fmt",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY"
    },
    {
        "question": "Find the number of orchestras whose record format is \"CD\" or \"DVD\".",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), orchestra.Orchestra_ID",
            "select count(*), orchestra.Orchestra",
            "select count(*), orchestra.cond_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "orchestra",
        "table_candidates": [
            "orchestra"
        ],
        "align_scores": [
            0.9936802387237549,
            0.0006506502977572381,
            0.0001787168876035139,
            0.00013898861652705818,
            0.0002745538658928126,
            0.0002267452364321798,
            0.00031000524177215993,
            9.368165046907961e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Count the number of orchestras that have CD or DVD as their record format.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(distinct orchestra.Orchestra)",
            "select count(*), orchestra.maj_fmt",
            "select count(*), orchestra.Orchestra_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "orchestra",
        "table_candidates": [
            "orchestra"
        ],
        "align_scores": [
            0.9912707805633545,
            9.123567724600434e-05,
            0.0019614046905189753,
            5.896962829865515e-05,
            0.0002518649853300303,
            6.263776595005766e-05,
            0.00019442863413132727,
            6.588330143131316e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the record companies of orchestras in descending order of years in which they were founded?",
        "gold_select": "select orchestra.record_co",
        "select_candidates": [
            "select orchestra.record_co",
            "select orchestra.record_co, orchestra.Year_of_Founded",
            "select orchestra.record_co (orch_orchestra.record_co)",
            "select orchestra.record_co (orch_orchestra.Year_of_Founded)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "orchestra",
        "table_candidates": [
            "orchestra"
        ],
        "align_scores": [
            0.9931649565696716,
            0.9931649565696716,
            0.0002944496809504926,
            0.0002944496809504926,
            0.0005088556790724397,
            0.0005088556790724397,
            0.0013271012576296926,
            0.0013271012576296926
        ],
        "align_select": "select orchestra.record_co",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "Return the record companies of orchestras, sorted descending by the years in which they were founded.",
        "gold_select": "select orchestra.record_co",
        "select_candidates": [
            "select orchestra.record_co",
            "select orchestra.record_co, orchestra.Year_of_Founded",
            "select orchestra.record_co (orch_orchestra.record_co)",
            "select orchestra.record_co (orch_orchestra.Year_of_Founded)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "orchestra",
        "table_candidates": [
            "orchestra"
        ],
        "align_scores": [
            0.9948287606239319,
            0.00039984058821573853,
            0.0003389579651411623,
            0.00012306147255003452,
            0.00045979369315318763,
            0.00011790773714892566,
            0.0014146212488412857,
            0.00014280066534411162
        ],
        "align_select": "select orchestra.record_co",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "What is the average attendance of shows?",
        "gold_select": "select avg(show.attend)",
        "select_candidates": [
            "select avg(show.attend)",
            "select an avg(show.attend)",
            "select  avg(show.attend)",
            "select the avg(show.attend)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "show",
        "table_candidates": [
            "show"
        ],
        "align_scores": [
            0.9963678121566772,
            5.6475953897461295e-05,
            0.0005088833277113736,
            8.463991980534047e-05,
            0.9963678121566772,
            5.6475953897461295e-05,
            0.0004872877907473594,
            9.509800293017179e-05
        ],
        "align_select": "select avg(show.attend)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "Return the average attendance across all shows.",
        "gold_select": "select avg(show.attend)",
        "select_candidates": [
            "select avg(show.attend)",
            "select an avg(show.attend)",
            "select  avg(show.attend)",
            "select the avg(show.attend)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "show",
        "table_candidates": [
            "show"
        ],
        "align_scores": [
            0.9970505237579346,
            8.29306518426165e-05,
            0.00040276427171193063,
            0.0001254940580110997,
            0.9970505237579346,
            8.29306518426165e-05,
            0.00038207677425816655,
            0.0001466014509787783
        ],
        "align_select": "select avg(show.attend)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "Show the names of conductors and the orchestras they have conducted.",
        "gold_select": "select conductor.Name, orchestra.orch",
        "select_candidates": [
            "select conductor.Name, orchestra.orch",
            "select orchestra.orch, conductor.Name",
            "select performance.orch_id, orchestra.orch",
            "select show.perf_id, orchestra.orch"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor orchestra",
        "table_candidates": [
            "conductor orchestra"
        ],
        "align_scores": [
            0.9850782155990601,
            0.974498987197876,
            0.9935923218727112,
            0.9894946217536926,
            0.0005049030296504498,
            0.00033414061181247234,
            0.0006246875273063779,
            0.0004025777452625334
        ],
        "align_select": "select conductor.Name, orchestra.orch",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What are the names of conductors as well as the corresonding orchestras that they have conducted?",
        "gold_select": "select conductor.Name, orchestra.orch",
        "select_candidates": [
            "select conductor.Name, orchestra.orch",
            "select orchestra.orch, conductor.Name",
            "select performance.orch_id, orchestra.orch",
            "select conductor.Name, orchestra.cond_id"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor orchestra",
        "table_candidates": [
            "conductor orchestra"
        ],
        "align_scores": [
            0.990119218826294,
            0.9533265233039856,
            0.9936396479606628,
            0.9777334928512573,
            0.0004810390528291464,
            0.0003519629826769233,
            0.07522986084222794,
            0.03816918656229973
        ],
        "align_select": "select conductor.Name, orchestra.orch",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "Show the names of conductors that have conducted more than one orchestras.",
        "gold_select": "select conductor.Name",
        "select_candidates": [
            "select conductor.Name",
            "select conductor.Name, orchestra.cond_id",
            "select conductor.Name, orchestra.orch",
            "select conductor.Name, orchestra.Orchestra_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor orchestra",
        "table_candidates": [
            "conductor orchestra"
        ],
        "align_scores": [
            0.9692453145980835,
            8.416024502366781e-05,
            0.0008643755572848022,
            7.625291618751362e-05,
            0.0642879530787468,
            8.086139860097319e-05,
            0.01366953831166029,
            9.895380935631692e-05
        ],
        "align_select": "select conductor.Name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the names of conductors who have conducted at more than one orchestra?",
        "gold_select": "select conductor.Name",
        "select_candidates": [
            "select conductor.Name",
            "select conductor.Name, orchestra.orch",
            "select conductor.Name, orchestra.cond_id",
            "select conductor.Name, conductor.Age"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor orchestra",
        "table_candidates": [
            "conductor orchestra"
        ],
        "align_scores": [
            0.9891504645347595,
            0.00010502999793970957,
            0.09798671305179596,
            8.072980563156307e-05,
            0.000946602551266551,
            8.03697039373219e-05,
            0.0001635460794204846,
            5.427922587841749e-05
        ],
        "align_select": "select conductor.Name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Show the name of the conductor that has conducted the most number of orchestras.",
        "gold_select": "select conductor.Name",
        "select_candidates": [
            "select conductor.Name",
            "select conductor.Name, conductor.Age",
            "select conductor.Name, conductor.Nationality",
            "select conductor.Name, conductor.Age, conductor.Nationality"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor orchestra",
        "table_candidates": [
            "conductor orchestra"
        ],
        "align_scores": [
            0.9891160130500793,
            6.215443136170506e-05,
            0.00020747754024341702,
            5.156578481546603e-05,
            0.000396507210098207,
            6.908203067723662e-05,
            0.00015351262118201703,
            5.474891440826468e-05
        ],
        "align_select": "select conductor.Name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the name of the conductor who has conducted the most orchestras?",
        "gold_select": "select conductor.Name",
        "select_candidates": [
            "select conductor.Name",
            "select conductor.Name, conductor.Age",
            "select conductor.Name, conductor.Nationality",
            "select conductor.Name, conductor.Year_of_Work"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor orchestra",
        "table_candidates": [
            "conductor orchestra"
        ],
        "align_scores": [
            0.9923128485679626,
            7.493999873986468e-05,
            0.00031610977021045983,
            5.5187338148243725e-05,
            0.000825613911729306,
            7.919934432720765e-05,
            0.0005214078701101243,
            5.319715273799375e-05
        ],
        "align_select": "select conductor.Name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Please show the name of the conductor that has conducted orchestras founded after 2008.",
        "gold_select": "select conductor.Name",
        "select_candidates": [
            "select conductor.Name",
            "select conductor.Name, orchestra.cond_id",
            "select conductor.Name (Orchestrator_id: conductor.Conductor_ID)",
            "select conductor.Name (orchestrator_id conductor.Conductor_ID)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor orchestra",
        "table_candidates": [
            "conductor orchestra"
        ],
        "align_scores": [
            0.9788501858711243,
            9.503453475190327e-05,
            0.0002061143022729084,
            7.269319758052006e-05,
            0.0011749665718525648,
            7.63738717068918e-05,
            0.0005011274479329586,
            7.388765516225249e-05
        ],
        "align_select": "select conductor.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of conductors who have conducted orchestras founded after the year 2008?",
        "gold_select": "select conductor.Name",
        "select_candidates": [
            "select conductor.Name",
            "select distinct conductor.Name",
            "select conductor.Name, orchestra.cond_id",
            "select conductor.Name (or conductor.Age)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor orchestra",
        "table_candidates": [
            "conductor orchestra"
        ],
        "align_scores": [
            0.9868473410606384,
            0.00011097524111391976,
            0.06415452063083649,
            0.00012368435272946954,
            0.000268183765001595,
            6.696267519146204e-05,
            0.0011921824188902974,
            8.457520743831992e-05
        ],
        "align_select": "select conductor.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Please show the different record companies and the corresponding number of orchestras.",
        "gold_select": "select orchestra.record_co, count(*)",
        "select_candidates": [
            "select orchestra.record_co, count(*)",
            "select orchestra.record_co, count(orchestrations)",
            "select orchestra.record_co, count(orchs)",
            "select orchestra.record_co.c3, count(*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "orchestra",
        "table_candidates": [
            "orchestra"
        ],
        "align_scores": [
            0.9967247843742371,
            0.000311772309942171,
            0.013104462996125221,
            0.00038286374183371663,
            0.8078249096870422,
            0.0003462362801656127,
            0.000495071813929826,
            0.00023287214571610093
        ],
        "align_select": "select orchestra.record_co, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "How many orchestras does each record company manage?",
        "gold_select": "select orchestra.record_co, count(*)",
        "select_candidates": [
            "select orchestra.record_co, count(*)",
            "select count(*), orchestra.record_co",
            "select orchestra.record_co, count(*), orchestra.Year_of_Founded",
            "select orchestra.record_co.c3, count(*)"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "orchestra",
        "table_candidates": [
            "orchestra"
        ],
        "align_scores": [
            0.9954007267951965,
            0.00019194527703803033,
            0.9953938722610474,
            0.00016516903997398913,
            0.0022321161814033985,
            6.686466804239899e-05,
            0.00048687856178730726,
            0.0001631513878237456
        ],
        "align_select": "select orchestra.record_co, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "List the record company shared by the most number of orchestras.",
        "gold_select": "select orchestra.record_co",
        "select_candidates": [
            "select orchestra.record_co",
            "select orchestra.record_co, orchestra.Year_of_Founded",
            "select orchestra.record_co, orchestra.cond_id",
            "select orchestra.record_co, orchestra.Major_Record_Format"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "orchestra",
        "table_candidates": [
            "orchestra"
        ],
        "align_scores": [
            0.9949449896812439,
            8.18516273284331e-05,
            0.00048014387721195817,
            5.643375334329903e-05,
            0.0002805354888550937,
            6.746203871443868e-05,
            0.00023733096895739436,
            5.760092972195707e-05
        ],
        "align_select": "select orchestra.record_co",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the record company used by the greatest number of orchestras?",
        "gold_select": "select orchestra.record_co",
        "select_candidates": [
            "select orchestra.record_co",
            "select orchestra.record_co, orchestra.Year_of_Founded",
            "select orchestra.record_co, orchestra.cond_id",
            "select orchestra.record_co (http://www.orchestra.record_co)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "orchestra",
        "table_candidates": [
            "orchestra"
        ],
        "align_scores": [
            0.9950196743011475,
            8.173056994564831e-05,
            0.000501495145726949,
            5.53792342543602e-05,
            0.00019892898853868246,
            6.065706838853657e-05,
            0.009858774952590466,
            7.293720409506932e-05
        ],
        "align_select": "select orchestra.record_co",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "List the names of orchestras that have no performance.",
        "gold_select": "select orchestra.orch",
        "select_candidates": [
            "select orchestra.orch",
            "select orchestra.orch, orchestra.cond_id",
            "select orchestra.orch, orchestra.record_co",
            "select orchestra.orch, orchestra.Year_of_Founded"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "orchestra",
        "table_candidates": [
            "orchestra",
            "orchestra performance"
        ],
        "align_scores": [
            0.5122681260108948,
            0.677879810333252,
            0.0001603556447662413,
            0.00013028737157583237,
            0.0002454125205986202,
            0.0007015785085968673,
            0.00020895260968245566,
            0.0007163914269767702
        ],
        "align_select": "select orchestra.orch",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the orchestras that do not have any performances?",
        "gold_select": "select orchestra.orch",
        "select_candidates": [
            "select orchestra.orch",
            "select orchestra.orch, orchestra.Orchestra_ID",
            "select orchestra.orch, orchestra.cond_id",
            "select orchestra.orch, orchestra.record_co"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "orchestra",
        "table_candidates": [
            "orchestra",
            "orchestra performance"
        ],
        "align_scores": [
            0.11206857115030289,
            0.7878430485725403,
            0.00030951472581364214,
            0.00048550902283750474,
            0.00021178113820496947,
            0.0002594645775388926,
            0.0002528775075916201,
            0.0005273620481602848
        ],
        "align_select": "select orchestra.orch",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM"
    },
    {
        "question": "Show the record companies shared by orchestras founded before 2003 and after 2003.",
        "gold_select": "select orchestra.record_co",
        "select_candidates": [
            "select orchestra.record_co",
            "select orchestra.record_co, orchestra.Year_of_Founded",
            "select orchestra.record_co (symbol orchestra.record_co)",
            "select orchestra.record_co, orchestra.Year_of_Founded, orchestra.Orchestra_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-GROUP BY-HAVING-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "orchestra",
        "table_candidates": [
            "orchestra"
        ],
        "align_scores": [
            0.99554044008255,
            0.020085984840989113,
            0.0001526767446193844,
            0.00014117654063738883,
            0.00015762433758936822,
            8.411033195443451e-05,
            9.152165148407221e-05,
            7.288080814760178e-05
        ],
        "align_select": "select orchestra.record_co",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the record companies that are used by both orchestras founded before 2003 and those founded after 2003?",
        "gold_select": "select orchestra.record_co",
        "select_candidates": [
            "select orchestra.record_co",
            "select orchestra.record_co, orchestra.Year_of_Founded",
            "select orchestra.record_co (orchestr_orchestra.record_co)",
            "select orchestra.record_co (orch_orchestra.record_co)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "orchestra",
        "table_candidates": [
            "orchestra"
        ],
        "align_scores": [
            0.9928062558174133,
            0.014351457357406616,
            0.00027886719908565283,
            0.0001479799102526158,
            0.00048013561172410846,
            0.00010799949814099818,
            0.0005860116798430681,
            0.00010895569721469656
        ],
        "align_select": "select orchestra.record_co",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "Show the years in which orchestras that have given more than one performance are founded.",
        "gold_select": "select orchestra.Year_of_Founded",
        "select_candidates": [
            "select orchestra.Year_of_Founded",
            "select orchestra.Year_of_Founded, orchestra.Major_Record_Format",
            "select orchestra.Year_of_Founded, performance.Date",
            "select orchestra.Year_of_Founded, orchestra.record_co"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "orchestra performance",
        "table_candidates": [
            "orchestra performance",
            "orchestra"
        ],
        "align_scores": [
            0.5329995155334473,
            8.730505214771256e-05,
            0.0001884722732938826,
            6.360639235936105e-05,
            0.0007269466295838356,
            6.51656009722501e-05,
            0.0002481882111169398,
            6.810623744968325e-05
        ],
        "align_select": "select orchestra.Year_of_Founded",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are years of founding for orchestras that have had more than a single performance?",
        "gold_select": "select orchestra.Year_of_Founded",
        "select_candidates": [
            "select orchestra.Year_of_Founded",
            "select orchestra.Year_of_Founded, orchestra.Major_Record_Format",
            "select orchestra.Year_of_Founded, orchestra.record_co",
            "select orchestra.Year_of_Founded, orchestra.Orchestra_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "orchestra performance",
        "table_candidates": [
            "orchestra performance",
            "orchestra"
        ],
        "align_scores": [
            0.1392018049955368,
            9.47250155149959e-05,
            0.00016796909039840102,
            6.737036164849997e-05,
            0.00022429229284171015,
            6.699442747049034e-05,
            0.0001909888378577307,
            6.367921741912141e-05
        ],
        "align_select": "select orchestra.Year_of_Founded",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the record companies of orchestras in descending order of years in which they were founded?",
        "gold_select": "select orchestra.record_co",
        "select_candidates": [
            "select orchestra.record_co",
            "select orchestra.record_co, orchestra.Year_of_Founded",
            "select orchestra.record_co (orch_orchestra.record_co)",
            "select orchestra.record_co (orch_orchestra.Year_of_Founded)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "orchestra",
        "table_candidates": [
            "orchestra"
        ],
        "align_scores": [
            0.9931649565696716,
            0.9931649565696716,
            0.0002944496809504926,
            0.0002944496809504926,
            0.0005088556790724397,
            0.0005088556790724397,
            0.0013271012576296926,
            0.0013271012576296926
        ],
        "align_select": "select orchestra.record_co",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "Return the record companies of orchestras, sorted descending by the years in which they were founded.",
        "gold_select": "select orchestra.record_co",
        "select_candidates": [
            "select orchestra.record_co",
            "select orchestra.record_co, orchestra.Year_of_Founded",
            "select orchestra.record_co (orch_orchestra.record_co)",
            "select orchestra.record_co (orch_orchestra.Year_of_Founded)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "orchestra",
        "table_candidates": [
            "orchestra"
        ],
        "align_scores": [
            0.9948287606239319,
            0.00039984058821573853,
            0.0003389579651411623,
            0.00012306147255003452,
            0.00045979369315318763,
            0.00011790773714892566,
            0.0014146212488412857,
            0.00014280066534411162
        ],
        "align_select": "select orchestra.record_co",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "What is the average attendance of shows?",
        "gold_select": "select avg(show.attend)",
        "select_candidates": [
            "select avg(show.attend)",
            "select an avg(show.attend)",
            "select  avg(show.attend)",
            "select avg(show.res)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "show",
        "table_candidates": [
            "show"
        ],
        "align_scores": [
            0.9963678121566772,
            5.6475953897461295e-05,
            0.0005088833277113736,
            8.463991980534047e-05,
            0.9963678121566772,
            5.6475953897461295e-05,
            0.005031547509133816,
            6.690102600259706e-05
        ],
        "align_select": "select avg(show.attend)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "Return the average attendance across all shows.",
        "gold_select": "select avg(show.attend)",
        "select_candidates": [
            "select avg(show.attend)",
            "select an avg(show.attend)",
            "select  avg(show.attend)",
            "select the avg(show.attend)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "show",
        "table_candidates": [
            "show"
        ],
        "align_scores": [
            0.9970505237579346,
            6.751597538823262e-05,
            0.00040276427171193063,
            9.617263276595622e-05,
            0.9970505237579346,
            6.751597538823262e-05,
            0.00038207677425816655,
            0.00011092297063441947
        ],
        "align_select": "select avg(show.attend)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "Show the names of conductors and the orchestras they have conducted.",
        "gold_select": "select conductor.Name, orchestra.orch",
        "select_candidates": [
            "select conductor.Name, orchestra.orch",
            "select orchestra.orch, conductor.Name",
            "select orchestra.Conductor_ID, conductor.Name",
            "select conductor.Name, orchestra.Conductor_ID"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor orchestra",
        "table_candidates": [
            "conductor orchestra"
        ],
        "align_scores": [
            0.9850782155990601,
            0.974498987197876,
            0.9935923218727112,
            0.9894946217536926,
            0.0022621245589107275,
            0.004216709174215794,
            0.02603466622531414,
            0.03640502691268921
        ],
        "align_select": "select conductor.Name, orchestra.orch",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What are the names of conductors as well as the corresonding orchestras that they have conducted?",
        "gold_select": "select conductor.Name, orchestra.orch",
        "select_candidates": [
            "select conductor.Name, orchestra.orch",
            "select orchestra.orch, conductor.Name",
            "select orchestra.Conductor_ID, conductor.Name",
            "select conductor.Name, orchestra.Conductor_ID"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor orchestra",
        "table_candidates": [
            "conductor orchestra"
        ],
        "align_scores": [
            0.990119218826294,
            0.9533265233039856,
            0.9936396479606628,
            0.9777334928512573,
            0.006448004860430956,
            0.004839926492422819,
            0.021056804805994034,
            0.01142912544310093
        ],
        "align_select": "select conductor.Name, orchestra.orch",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "Show the names of conductors that have conducted more than one orchestras.",
        "gold_select": "select conductor.Name",
        "select_candidates": [
            "select conductor.Name",
            "select conductor.Name, orchestra.Conductor_ID",
            "select orchestra.Conductor_ID, conductor.Name",
            "select conductor.Name, orchestra.Conductor_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor orchestra",
        "table_candidates": [
            "conductor orchestra"
        ],
        "align_scores": [
            0.9692453145980835,
            8.416024502366781e-05,
            0.0006853407830931246,
            7.534636824857444e-05,
            0.0006007928168401122,
            7.298061245819554e-05,
            0.0006853407830931246,
            7.534636824857444e-05
        ],
        "align_select": "select conductor.Name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the names of conductors who have conducted at more than one orchestra?",
        "gold_select": "select conductor.Name",
        "select_candidates": [
            "select conductor.Name",
            "select conductor.Name, orchestra.Conductor_ID",
            "select conductor.Name, orchestra.orch",
            "select orchestra.Conductor_ID, conductor.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor orchestra",
        "table_candidates": [
            "conductor orchestra"
        ],
        "align_scores": [
            0.9891504645347595,
            0.00010502999793970957,
            0.000700736534781754,
            8.203698234865442e-05,
            0.09798671305179596,
            8.072980563156307e-05,
            0.0009050795342773199,
            8.553576481062919e-05
        ],
        "align_select": "select conductor.Name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Show the name of the conductor that has conducted the most number of orchestras.",
        "gold_select": "select conductor.Name",
        "select_candidates": [
            "select conductor.Name",
            "select conductor.Name, orchestra.Conductor_ID",
            "select conductor.Name (orchestrator_conductor.Age)",
            "select conductor.Name, conductor.Age"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor orchestra",
        "table_candidates": [
            "conductor orchestra"
        ],
        "align_scores": [
            0.9891160130500793,
            6.215443136170506e-05,
            0.0004948120913468301,
            5.650165257975459e-05,
            0.00020611252693925053,
            5.775323370471597e-05,
            0.00020747754024341702,
            5.156578481546603e-05
        ],
        "align_select": "select conductor.Name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the name of the conductor who has conducted the most orchestras?",
        "gold_select": "select conductor.Name",
        "select_candidates": [
            "select conductor.Name",
            "select conductor.Name, orchestra.Conductor_ID",
            "select conductor.Name, conductor.Age",
            "select conductor.Name (orchestrator_conductor.Age)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor orchestra",
        "table_candidates": [
            "conductor orchestra"
        ],
        "align_scores": [
            0.9923128485679626,
            7.493999873986468e-05,
            0.0005081463023088872,
            6.068299262551591e-05,
            0.00031610977021045983,
            5.5187338148243725e-05,
            0.0002802922099363059,
            6.466500053647906e-05
        ],
        "align_select": "select conductor.Name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Please show the name of the conductor that has conducted orchestras founded after 2008.",
        "gold_select": "select conductor.Name",
        "select_candidates": [
            "select conductor.Name",
            "select conductor.Name, orchestra.Conductor_ID",
            "select conductor.Name (orchestrator_orchestra.Conductor_ID)",
            "select conductor.Name (orchestrator_id orchestra.Conductor_ID)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor orchestra",
        "table_candidates": [
            "conductor orchestra"
        ],
        "align_scores": [
            0.9788501858711243,
            9.503453475190327e-05,
            0.00018300501687917858,
            7.193191413534805e-05,
            0.0005373416934162378,
            7.135188934626058e-05,
            0.00047273209202103317,
            7.106628618203104e-05
        ],
        "align_select": "select conductor.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of conductors who have conducted orchestras founded after the year 2008?",
        "gold_select": "select conductor.Name",
        "select_candidates": [
            "select conductor.Name",
            "select conductor.Name, orchestra.Conductor_ID",
            "select distinct conductor.Name",
            "select conductor.Name (or conductor.Age)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor orchestra",
        "table_candidates": [
            "conductor orchestra"
        ],
        "align_scores": [
            0.9868473410606384,
            0.00011097524111391976,
            0.00024056280381046236,
            6.85127088217996e-05,
            0.06415452063083649,
            0.00012368435272946954,
            0.0011921824188902974,
            8.457520743831992e-05
        ],
        "align_select": "select conductor.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Please show the different record companies and the corresponding number of orchestras.",
        "gold_select": "select orchestra.record_co, count(*)",
        "select_candidates": [
            "select orchestra.record_co, count(*)",
            "select orchestra.record_co, count(orchs)",
            "select orchestra.record_co, count(orchestrations)",
            "select orchestra.record_co, count(orchestra.orch_id)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "orchestra",
        "table_candidates": [
            "orchestra"
        ],
        "align_scores": [
            0.9967247843742371,
            0.000311772309942171,
            0.8078249096870422,
            0.0003462362801656127,
            0.013104462996125221,
            0.00038286374183371663,
            0.33782556653022766,
            0.0002450870524626225
        ],
        "align_select": "select orchestra.record_co, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "How many orchestras does each record company manage?",
        "gold_select": "select orchestra.record_co, count(*)",
        "select_candidates": [
            "select orchestra.record_co, count(*)",
            "select count(*), orchestra.record_co",
            "select orch_orchestra.record_co, count(*)",
            "select orchestra.record_co, count(*), orchestra.Year_of_Founded"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "orchestra",
        "table_candidates": [
            "orchestra"
        ],
        "align_scores": [
            0.9954007267951965,
            0.00019194527703803033,
            0.9953938722610474,
            0.00016516903997398913,
            0.6218054294586182,
            0.00016033041174523532,
            0.0022321161814033985,
            6.686466804239899e-05
        ],
        "align_select": "select orchestra.record_co, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "Please show the record formats of orchestras in ascending order of count.",
        "gold_select": "select orchestra.maj_fmt",
        "select_candidates": [
            "select orchestra.maj_fmt",
            "select count(*), orchestra.maj_fmt",
            "select orchestra.maj_fmt, count(*)",
            "select orchestra.maj_fmt, count(*), orchestra.record_co"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY",
            "SELECT-FROM-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "orchestra",
        "table_candidates": [
            "orchestra"
        ],
        "align_scores": [
            0.0006830478669144213,
            0.00011171229562023655,
            0.0002396891504758969,
            0.00011878128134412691,
            0.00032015962642617524,
            0.00011428975994931534,
            0.0001030211424222216,
            9.231868898496032e-05
        ],
        "align_select": "select orchestra.maj_fmt",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY"
    },
    {
        "question": "What are the major record formats of orchestras, sorted by their frequency?",
        "gold_select": "select orchestra.maj_fmt",
        "select_candidates": [
            "select orchestra.maj_fmt",
            "select orchestra.maj_fmt, orchestra.record_co",
            "select orchestra.maj_fmt (ordered by orchestra.record_co)",
            "select orchestra.maj_fmt, orchestra.Year_of_Founded"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "orchestra",
        "table_candidates": [
            "orchestra"
        ],
        "align_scores": [
            0.7984205484390259,
            0.000551160832401365,
            0.00020962308917660266,
            0.00011745281517505646,
            0.00030997893190942705,
            0.00010427257075207308,
            0.00010540644871070981,
            0.00011334413284203038
        ],
        "align_select": "select orchestra.maj_fmt",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY"
    },
    {
        "question": "List the record company shared by the most number of orchestras.",
        "gold_select": "select orchestra.record_co",
        "select_candidates": [
            "select orchestra.record_co",
            "select orchestra.record_co, orchestra.Year_of_Founded",
            "select orchestra.record_co, orchestra.Conductor_ID",
            "select orchestra.record_co, orchestra.maj_fmt"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "orchestra",
        "table_candidates": [
            "orchestra"
        ],
        "align_scores": [
            0.9949449896812439,
            8.18516273284331e-05,
            0.00048014387721195817,
            5.643375334329903e-05,
            0.00015276906196959317,
            6.015275721438229e-05,
            0.00021814304636791348,
            5.7590445067035034e-05
        ],
        "align_select": "select orchestra.record_co",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the record company used by the greatest number of orchestras?",
        "gold_select": "select orchestra.record_co",
        "select_candidates": [
            "select orchestra.record_co",
            "select orchestra.record_co, orchestra.Year_of_Founded",
            "select orchestra.record_co, orchestra.Conductor_ID",
            "select orchestra.record_co, orchestra.maj_fmt"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "orchestra",
        "table_candidates": [
            "orchestra"
        ],
        "align_scores": [
            0.9950196743011475,
            8.173056994564831e-05,
            0.000501495145726949,
            5.53792342543602e-05,
            0.00014704510977026075,
            5.625117410090752e-05,
            0.0003726103459484875,
            5.4896441724849865e-05
        ],
        "align_select": "select orchestra.record_co",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "List the names of orchestras that have no performance.",
        "gold_select": "select orchestra.orch",
        "select_candidates": [
            "select orchestra.orch",
            "select orchestra.orch, orchestra.Conductor_ID",
            "select orchestra.orch, orchestra.record_co",
            "select orchestra.orch, orchestra.Year_of_Founded"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "orchestra",
        "table_candidates": [
            "orchestra",
            "orchestra performance"
        ],
        "align_scores": [
            0.5122681260108948,
            0.001148390700109303,
            0.00013667890743818134,
            9.897646668832749e-05,
            0.0002454125205986202,
            9.918073192238808e-05,
            0.00020895260968245566,
            9.799899271456525e-05
        ],
        "align_select": "select orchestra.orch",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the orchestras that do not have any performances?",
        "gold_select": "select orchestra.orch",
        "select_candidates": [
            "select orchestra.orch",
            "select orchestra.orch, orchestra.Conductor_ID",
            "select orchestra.orch, orchestra.orch_id",
            "select orchestra.orch, orchestra.record_co"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "orchestra",
        "table_candidates": [
            "orchestra",
            "orchestra performance"
        ],
        "align_scores": [
            0.11206857115030289,
            0.7878430485725403,
            0.00016960874199867249,
            0.00019960499776061624,
            0.00034911741386167705,
            0.0005363293457776308,
            0.0002528775075916201,
            0.0005273620481602848
        ],
        "align_select": "select orchestra.orch",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM"
    },
    {
        "question": "Show the record companies shared by orchestras founded before 2003 and after 2003.",
        "gold_select": "select orchestra.record_co",
        "select_candidates": [
            "select orchestra.record_co",
            "select orchestra.record_co, orchestra.Year_of_Founded",
            "select orchestra.record_co (symbol orchestra.record_co)",
            "select orchestra.record_co (orch_orchestra.record_co)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-GROUP BY-HAVING-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "orchestra",
        "table_candidates": [
            "orchestra"
        ],
        "align_scores": [
            0.99554044008255,
            0.020085984840989113,
            0.0001526767446193844,
            0.00014117654063738883,
            0.00015762433758936822,
            8.411033195443451e-05,
            0.00019804330077022314,
            8.653628174215555e-05
        ],
        "align_select": "select orchestra.record_co",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the record companies that are used by both orchestras founded before 2003 and those founded after 2003?",
        "gold_select": "select orchestra.record_co",
        "select_candidates": [
            "select orchestra.record_co",
            "select orchestra.record_co, orchestra.Year_of_Founded",
            "select orchestra.record_co del.icio.us",
            "select orchestra.record_co (orch_orchestra.record_co)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "orchestra",
        "table_candidates": [
            "orchestra"
        ],
        "align_scores": [
            0.9928062558174133,
            0.014351457357406616,
            0.00027886719908565283,
            0.0001479799102526158,
            0.011812012642621994,
            0.007377856411039829,
            0.0005860116798430681,
            0.00010895569721469656
        ],
        "align_select": "select orchestra.record_co",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "Find the number of orchestras whose record format is \"CD\" or \"DVD\".",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), orchestra.record_co",
            "select count(*), orchestra.maj_fmt",
            "select count(*), orchestra.orch_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "orchestra",
        "table_candidates": [
            "orchestra"
        ],
        "align_scores": [
            0.9936802387237549,
            0.0006506502977572381,
            0.0002891228359658271,
            0.00015397131210193038,
            0.00029029586585238576,
            0.00016754692478571087,
            0.0002165874175261706,
            0.00015125569188967347
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Count the number of orchestras that have CD or DVD as their record format.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), orchestra.maj_fmt",
            "select count(*) orch_orchestra.orch_id",
            "select count(*),"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "orchestra",
        "table_candidates": [
            "orchestra"
        ],
        "align_scores": [
            0.9912707805633545,
            7.825708598829806e-05,
            0.0002518649853300303,
            7.09162704879418e-05,
            0.00019817361317109317,
            6.75882474752143e-05,
            0.0007756084087304771,
            6.411384674720466e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show the years in which orchestras that have given more than one performance are founded.",
        "gold_select": "select orchestra.Year_of_Founded",
        "select_candidates": [
            "select orchestra.Year_of_Founded",
            "select orchestra.Year_of_Founded, orchestra.maj_fmt",
            "select orchestra.Year_of_Founded, performance.Date",
            "select orchestra.Year_of_Founded, orchestra.record_co"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "orchestra performance",
        "table_candidates": [
            "orchestra performance",
            "orchestra"
        ],
        "align_scores": [
            0.5329995155334473,
            8.730505214771256e-05,
            0.00020898210641462356,
            6.108791421866044e-05,
            0.0007269466295838356,
            6.51656009722501e-05,
            0.0002481882111169398,
            6.810623744968325e-05
        ],
        "align_select": "select orchestra.Year_of_Founded",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are years of founding for orchestras that have had more than a single performance?",
        "gold_select": "select orchestra.Year_of_Founded",
        "select_candidates": [
            "select orchestra.Year_of_Founded",
            "select orchestra.Year_of_Founded, orchestra.maj_fmt",
            "select orchestra.Year_of_Founded, orchestra.record_co",
            "select orchestra.Year_of_Founded, performance.Date"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "orchestra performance",
        "table_candidates": [
            "orchestra performance",
            "orchestra"
        ],
        "align_scores": [
            0.1392018049955368,
            9.47250155149959e-05,
            0.00018690191791392863,
            6.485025369329378e-05,
            0.00022429229284171015,
            6.699442747049034e-05,
            0.0006886887713335454,
            7.201632979558781e-05
        ],
        "align_select": "select orchestra.Year_of_Founded",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What is the average attendance of shows?",
        "gold_select": "select avg(show.attend)",
        "select_candidates": [
            "select avg(show.attend)",
            "select an avg(show.attend)",
            "select  avg(show.attend)",
            "select avg(show.res)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "show",
        "table_candidates": [
            "show"
        ],
        "align_scores": [
            0.9963678121566772,
            5.6475953897461295e-05,
            0.0005088833277113736,
            8.463991980534047e-05,
            0.9963678121566772,
            5.6475953897461295e-05,
            0.005031547509133816,
            6.690102600259706e-05
        ],
        "align_select": "select avg(show.attend)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "Return the average attendance across all shows.",
        "gold_select": "select avg(show.attend)",
        "select_candidates": [
            "select avg(show.attend)",
            "select an avg(show.attend)",
            "select  avg(show.attend)",
            "select the avg(show.attend)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "show",
        "table_candidates": [
            "show"
        ],
        "align_scores": [
            0.9970505237579346,
            6.751597538823262e-05,
            0.00040276427171193063,
            9.617263276595622e-05,
            0.9970505237579346,
            6.751597538823262e-05,
            0.00038207677425816655,
            0.00011092297063441947
        ],
        "align_select": "select avg(show.attend)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "Show the names of conductors and the orchestras they have conducted.",
        "gold_select": "select conductor.Name, orchestra.orch",
        "select_candidates": [
            "select conductor.Name, orchestra.orch",
            "select orchestra.orch, conductor.Name",
            "select orchestra.Conductor_ID, conductor.Name",
            "select conductor.Name, orchestra.Conductor_ID"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor orchestra",
        "table_candidates": [
            "conductor orchestra"
        ],
        "align_scores": [
            0.9850782155990601,
            0.974498987197876,
            0.9935923218727112,
            0.9894946217536926,
            0.0022621245589107275,
            0.004216709174215794,
            0.02603466622531414,
            0.03640502691268921
        ],
        "align_select": "select conductor.Name, orchestra.orch",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What are the names of conductors as well as the corresonding orchestras that they have conducted?",
        "gold_select": "select conductor.Name, orchestra.orch",
        "select_candidates": [
            "select conductor.Name, orchestra.orch",
            "select orchestra.orch, conductor.Name",
            "select conductor.Name, orchestra.Conductor_ID",
            "select performance.orch_id, orchestra.orch"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor orchestra",
        "table_candidates": [
            "conductor orchestra"
        ],
        "align_scores": [
            0.990119218826294,
            0.9533265233039856,
            0.9936396479606628,
            0.9777334928512573,
            0.021056804805994034,
            0.01142912544310093,
            0.0004810390528291464,
            0.0003519629826769233
        ],
        "align_select": "select conductor.Name, orchestra.orch",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "Show the names of conductors that have conducted more than one orchestras.",
        "gold_select": "select conductor.Name",
        "select_candidates": [
            "select conductor.Name",
            "select conductor.Name, orchestra.Conductor_ID",
            "select orchestra.Conductor_ID, conductor.Name",
            "select conductor.Name, orchestra.Orchestra_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor orchestra",
        "table_candidates": [
            "conductor orchestra"
        ],
        "align_scores": [
            0.9692453145980835,
            8.416024502366781e-05,
            0.0006853407830931246,
            7.534636824857444e-05,
            0.0006007928168401122,
            7.298061245819554e-05,
            0.01366953831166029,
            9.895380935631692e-05
        ],
        "align_select": "select conductor.Name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the names of conductors who have conducted at more than one orchestra?",
        "gold_select": "select conductor.Name",
        "select_candidates": [
            "select conductor.Name",
            "select conductor.Name, orchestra.Conductor_ID",
            "select conductor.Name, orchestra.orch",
            "select conductor.Name, orchestra.Orchestra_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor orchestra",
        "table_candidates": [
            "conductor orchestra"
        ],
        "align_scores": [
            0.9891504645347595,
            0.00010502999793970957,
            0.000700736534781754,
            8.203698234865442e-05,
            0.09798671305179596,
            8.072980563156307e-05,
            0.0072894226759672165,
            0.0001062334849848412
        ],
        "align_select": "select conductor.Name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Show the name of the conductor that has conducted the most number of orchestras.",
        "gold_select": "select conductor.Name",
        "select_candidates": [
            "select conductor.Name",
            "select conductor.Name, orchestra.Conductor_ID",
            "select conductor.Name (orchestrator_conductor.Age)",
            "select conductor.Name, conductor.Age"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor orchestra",
        "table_candidates": [
            "conductor orchestra"
        ],
        "align_scores": [
            0.9891160130500793,
            6.215443136170506e-05,
            0.0004948120913468301,
            5.650165257975459e-05,
            0.00020611252693925053,
            5.775323370471597e-05,
            0.00020747754024341702,
            5.156578481546603e-05
        ],
        "align_select": "select conductor.Name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the name of the conductor who has conducted the most orchestras?",
        "gold_select": "select conductor.Name",
        "select_candidates": [
            "select conductor.Name",
            "select conductor.Name, orchestra.Conductor_ID",
            "select conductor.Name, conductor.Age",
            "select conductor.Name (orchestrator_conductor.Age)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor orchestra",
        "table_candidates": [
            "conductor orchestra"
        ],
        "align_scores": [
            0.9923128485679626,
            7.493999873986468e-05,
            0.0005081463023088872,
            6.068299262551591e-05,
            0.00031610977021045983,
            5.5187338148243725e-05,
            0.0002802922099363059,
            6.466500053647906e-05
        ],
        "align_select": "select conductor.Name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Please show the name of the conductor that has conducted orchestras founded after 2008.",
        "gold_select": "select conductor.Name",
        "select_candidates": [
            "select conductor.Name",
            "select conductor.Name, orchestra.Conductor_ID",
            "select conductor.Name (orchestrator_orchestra.Conductor_ID)",
            "select conductor.Name (orchestrator_id orchestra.Conductor_ID)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor orchestra",
        "table_candidates": [
            "conductor orchestra"
        ],
        "align_scores": [
            0.9788501858711243,
            9.503453475190327e-05,
            0.00018300501687917858,
            7.193191413534805e-05,
            0.0005373416934162378,
            7.135188934626058e-05,
            0.00047273209202103317,
            7.106628618203104e-05
        ],
        "align_select": "select conductor.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of conductors who have conducted orchestras founded after the year 2008?",
        "gold_select": "select conductor.Name",
        "select_candidates": [
            "select conductor.Name",
            "select conductor.Name, orchestra.Conductor_ID",
            "select distinct conductor.Name",
            "select conductor.Name (or conductor.Age)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor orchestra",
        "table_candidates": [
            "conductor orchestra"
        ],
        "align_scores": [
            0.9868473410606384,
            0.00011097524111391976,
            0.00024056280381046236,
            6.85127088217996e-05,
            0.06415452063083649,
            0.00012368435272946954,
            0.0011921824188902974,
            8.457520743831992e-05
        ],
        "align_select": "select conductor.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Please show the record formats of orchestras in ascending order of count.",
        "gold_select": "select orchestra.maj_fmt",
        "select_candidates": [
            "select orchestra.maj_fmt",
            "select count(*), orchestra.maj_fmt",
            "select orchestra.maj_fmt, count(*)",
            "select orchestra.maj_fmt, count(*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY",
            "SELECT-FROM-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "orchestra",
        "table_candidates": [
            "orchestra"
        ],
        "align_scores": [
            0.0006830478669144213,
            0.00011171229562023655,
            0.0002396891504758969,
            0.00011878128134412691,
            0.00032015962642617524,
            0.00011428975994931534,
            0.00032015962642617524,
            0.00011428975994931534
        ],
        "align_select": "select orchestra.maj_fmt",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY"
    },
    {
        "question": "What are the major record formats of orchestras, sorted by their frequency?",
        "gold_select": "select orchestra.maj_fmt",
        "select_candidates": [
            "select orchestra.maj_fmt",
            "select orchestra.maj_fmt, t1.c6",
            "select orchestra.maj_fmt, t1.c7",
            "select orchestra.maj_fmt, orchestra.Record_Company"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "orchestra",
        "table_candidates": [
            "orchestra"
        ],
        "align_scores": [
            0.7984205484390259,
            0.000551160832401365,
            0.0002886196307372302,
            0.0002042407140834257,
            0.0003098876331932843,
            0.00023555343796033412,
            0.00016406402573920786,
            0.0001483359228586778
        ],
        "align_select": "select orchestra.maj_fmt",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY"
    },
    {
        "question": "List the names of orchestras that have no performance.",
        "gold_select": "select orchestra.orch",
        "select_candidates": [
            "select orchestra.orch",
            "select orchestra.orch, orchestra.Conductor_ID",
            "select orchestra.orch, orchestra.Record_Company",
            "select orchestra.orch, orchestra.Year_of_Founded"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "orchestra",
        "table_candidates": [
            "orchestra",
            "orchestra performance"
        ],
        "align_scores": [
            0.5122681260108948,
            0.001148390700109303,
            0.00013667890743818134,
            9.897646668832749e-05,
            0.00018312965403310955,
            8.85134213604033e-05,
            0.00020895260968245566,
            9.799899271456525e-05
        ],
        "align_select": "select orchestra.orch",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the orchestras that do not have any performances?",
        "gold_select": "select orchestra.orch",
        "select_candidates": [
            "select orchestra.orch",
            "select orchestra.orch, orchestra.Conductor_ID",
            "select orchestra.orch, orchestra.Orchestra_ID",
            "select orchs(orchestra.orch)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "orchestra",
        "table_candidates": [
            "orchestra",
            "orchestra performance"
        ],
        "align_scores": [
            0.11206857115030289,
            0.7878430485725403,
            0.00016960874199867249,
            0.00019960499776061624,
            0.00030951472581364214,
            0.00048550902283750474,
            0.0008231151732616127,
            0.0004865169175900519
        ],
        "align_select": "select orchestra.orch",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM"
    },
    {
        "question": "Find the number of orchestras whose record format is \"CD\" or \"DVD\".",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), orchestra.Orchestra_ID",
            "select count(*), orchestra.maj_fmt",
            "select count(*), orchestra.orch"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "orchestra",
        "table_candidates": [
            "orchestra"
        ],
        "align_scores": [
            0.9936802387237549,
            0.0006506502977572381,
            0.0001787168876035139,
            0.00013898861652705818,
            0.00029029586585238576,
            0.00016754692478571087,
            0.0004156391369178891,
            0.00021916748664807528
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Count the number of orchestras that have CD or DVD as their record format.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), orchestra.maj_fmt",
            "select count(*), orchestra.maj_fmt, t1.c6",
            "select count(*), orchestra.maj_fmt, t1.c6"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "orchestra",
        "table_candidates": [
            "orchestra"
        ],
        "align_scores": [
            0.9912707805633545,
            9.123567724600434e-05,
            0.0002518649853300303,
            6.263776595005766e-05,
            0.00020131048222538084,
            6.423844752134755e-05,
            0.00020131048222538084,
            6.423844752134755e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show the years in which orchestras that have given more than one performance are founded.",
        "gold_select": "select orchestra.Year_of_Founded",
        "select_candidates": [
            "select orchestra.Year_of_Founded",
            "select orchestra.Year_of_Founded, orchestra.maj_fmt",
            "select orchestra.Year_of_Founded, performance.Date",
            "select orchestra.Year_of_Founded (orch_orchestra.Year_of_Founded)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "orchestra performance",
        "table_candidates": [
            "orchestra performance",
            "orchestra"
        ],
        "align_scores": [
            0.5329995155334473,
            8.730505214771256e-05,
            0.00020898210641462356,
            6.108791421866044e-05,
            0.0007269466295838356,
            6.51656009722501e-05,
            0.00032222754089161754,
            7.356306014116853e-05
        ],
        "align_select": "select orchestra.Year_of_Founded",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are years of founding for orchestras that have had more than a single performance?",
        "gold_select": "select orchestra.Year_of_Founded",
        "select_candidates": [
            "select orchestra.Year_of_Founded",
            "select orchestra.Year_of_Founded, orchestra.maj_fmt",
            "select orchestra.Year_of_Founded, orchestra.Orchestra_ID",
            "select orchestra.Year_of_Founded, orchestra.Record_Company"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "orchestra performance",
        "table_candidates": [
            "orchestra performance",
            "orchestra"
        ],
        "align_scores": [
            0.1392018049955368,
            9.47250155149959e-05,
            0.00018690191791392863,
            6.485025369329378e-05,
            0.0001909888378577307,
            6.367921741912141e-05,
            0.0001588481100043282,
            6.715972267556936e-05
        ],
        "align_select": "select orchestra.Year_of_Founded",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Show the names and grades of each high schooler.",
        "gold_select": "select Highschooler.name, Highschooler.gr",
        "select_candidates": [
            "select Highschooler.name, Highschooler.gr",
            "select Highschooler.ID, Highschooler.name, Highschooler.gr",
            "select Highschooler.name, Highschooler.gr, Highschooler.ID",
            "select distinct Highschooler.name, Highschooler.gr"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler",
        "table_candidates": [
            "Highschooler"
        ],
        "align_scores": [
            0.9771270155906677,
            0.0001518381614005193,
            0.0003772457130253315,
            0.0001018795883283019,
            0.0004107357526663691,
            8.453941700281575e-05,
            0.002162816934287548,
            9.17198121896945e-05
        ],
        "align_select": "select Highschooler.name, Highschooler.gr",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What are the names and grades for each high schooler?",
        "gold_select": "select Highschooler.name, Highschooler.gr",
        "select_candidates": [
            "select Highschooler.name, Highschooler.gr",
            "select distinct Highschooler.name, Highschooler.gr",
            "select Highschooler.name, Highschooler.gr, Highschooler.ID",
            "select t0, Highschooler.name, Highschooler.gr"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler",
        "table_candidates": [
            "Highschooler"
        ],
        "align_scores": [
            0.9839067459106445,
            0.00028663536068052053,
            0.00523078627884388,
            0.00010325423500034958,
            0.0003479516599327326,
            9.169471741188318e-05,
            0.0003105767536908388,
            8.097080717561767e-05
        ],
        "align_select": "select Highschooler.name, Highschooler.gr",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "Show all the grades of the high schoolers.",
        "gold_select": "select Highschooler.gr",
        "select_candidates": [
            "select distinct Highschooler.gr",
            "select Highschooler.gr",
            "select distinct Highschooler.gr, t0.c3",
            "select sum(Highschooler.gr)"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler",
        "table_candidates": [
            "Highschooler"
        ],
        "align_scores": [
            0.7521864175796509,
            0.0001866079110186547,
            0.02094721794128418,
            0.0006138836033642292,
            0.0004873972211498767,
            9.382147254655138e-05,
            0.004567238502204418,
            8.660618914291263e-05
        ],
        "align_select": "select distinct Highschooler.gr",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What is the grade of each high schooler?",
        "gold_select": "select Highschooler.gr",
        "select_candidates": [
            "select Highschooler.gr",
            "select distinct Highschooler.gr",
            "select Highschooler.ID, Highschooler.gr",
            "select Highschooler.ID, Highschooler.name, Highschooler.gr"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler",
        "table_candidates": [
            "Highschooler"
        ],
        "align_scores": [
            0.0038155484944581985,
            9.598500764695928e-05,
            0.32960060238838196,
            8.716737647773698e-05,
            0.00024002486316021532,
            8.220833115046844e-05,
            0.0001520711521152407,
            7.243342406582087e-05
        ],
        "align_select": "select distinct Highschooler.gr",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What grade is Kyle in?",
        "gold_select": "select Highschooler.gr",
        "select_candidates": [
            "select Highschooler.gr",
            "select distinct Highschooler.gr",
            "select Highschooler.name, Highschooler.gr",
            "select Highschooler.gr, Highschooler.name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler",
        "table_candidates": [
            "Highschooler"
        ],
        "align_scores": [
            0.013752653263509274,
            0.00011133604130009189,
            0.022861668840050697,
            0.0002319795312359929,
            0.0001928568526636809,
            6.675183976767585e-05,
            0.00021700869547203183,
            6.121952901594341e-05
        ],
        "align_select": "select Highschooler.gr",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the grade for the high schooler named Kyle.",
        "gold_select": "select Highschooler.gr",
        "select_candidates": [
            "select Highschooler.gr",
            "select Highschooler.ID, Highschooler.gr",
            "select Highschooler.ID, Highschooler.name, Highschooler.gr",
            "select Highschooler.name, Highschooler.gr"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler",
        "table_candidates": [
            "Highschooler"
        ],
        "align_scores": [
            0.16717496514320374,
            8.571058424422517e-05,
            0.00027410296024754643,
            7.703187293373048e-05,
            0.00022229572641663253,
            7.556193304480985e-05,
            0.0002605796908028424,
            7.069668936310336e-05
        ],
        "align_select": "select Highschooler.gr",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show the names of all high schoolers in grade 10.",
        "gold_select": "select Highschooler.name",
        "select_candidates": [
            "select Highschooler.name",
            "select Highschooler.name, Highschooler.gr",
            "select distinct Highschooler.name",
            "select Highschooler.name, Highschooler.ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler",
        "table_candidates": [
            "Highschooler"
        ],
        "align_scores": [
            0.9812538027763367,
            9.16907811188139e-05,
            0.00023745455837342888,
            6.44863466732204e-05,
            0.02534715086221695,
            8.786639955360442e-05,
            0.00020377192413434386,
            6.281925743678585e-05
        ],
        "align_select": "select Highschooler.name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of all high schoolers in grade 10?",
        "gold_select": "select Highschooler.name",
        "select_candidates": [
            "select Highschooler.name",
            "select distinct Highschooler.name",
            "select Highschooler.name, Highschooler.gr",
            "select distinct Highschooler.name, Highschooler.gr"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler",
        "table_candidates": [
            "Highschooler"
        ],
        "align_scores": [
            0.9809210300445557,
            0.00013870740076527,
            0.07494764775037766,
            0.00021677231416106224,
            0.00024382284027524292,
            6.88563086441718e-05,
            0.00019105018873233348,
            5.8325073041487485e-05
        ],
        "align_select": "select Highschooler.name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many high schoolers are there in grade 9 or 10?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), t0.c9, Highschooler.name0",
            "select count(*), Highschooler.gr",
            "select count(*), Highschooler.ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler",
        "table_candidates": [
            "Highschooler"
        ],
        "align_scores": [
            0.9934023022651672,
            0.010349073447287083,
            0.00015930422523524612,
            0.00014831798034720123,
            0.0005216773715801537,
            0.05426260828971863,
            0.0004054419987369329,
            0.0006249900907278061
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Count the number of high schoolers in grades 9 or 10.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Highschooler.ID",
            "select count(*), Highschooler.gr",
            "select count(*), Highschooler.name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler",
        "table_candidates": [
            "Highschooler"
        ],
        "align_scores": [
            0.9937055706977844,
            0.00020330733968876302,
            0.0003000849101226777,
            0.0011235852725803852,
            0.00045548498746939003,
            0.7422363758087158,
            0.000249772536335513,
            0.009183553047478199
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show the number of high schoolers for each grade.",
        "gold_select": "select Highschooler.gr, count(*)",
        "select_candidates": [
            "select Highschooler.gr, count(*)",
            "select count(*), Highschooler.gr",
            "select highschooler, Highschooler.gr, count(*)",
            "select highschooler Highschooler.gr, count(*)"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler",
        "table_candidates": [
            "Highschooler"
        ],
        "align_scores": [
            0.9671121835708618,
            0.00018364250718150288,
            0.966880202293396,
            0.00023180374410003424,
            0.0004032543220091611,
            0.00011070360778830945,
            0.0005442806868813932,
            0.000147680941154249
        ],
        "align_select": "select Highschooler.gr, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "How many high schoolers are in each grade?",
        "gold_select": "select Highschooler.gr, count(*)",
        "select_candidates": [
            "select Highschooler.gr, count(*)",
            "select count(*), Highschooler.gr",
            "select distinct Highschooler.gr, count(*)",
            "select sum(Highschooler.gr), Highschooler.name"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler",
        "table_candidates": [
            "Highschooler"
        ],
        "align_scores": [
            0.9292027354240417,
            0.000253283855272457,
            0.9461247324943542,
            0.00028864771593362093,
            0.0007981269736774266,
            0.00014341500354930758,
            0.00018989606178365648,
            0.0001677381369518116
        ],
        "align_select": "select Highschooler.gr, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "Which grade has the most high schoolers?",
        "gold_select": "select Highschooler.gr",
        "select_candidates": [
            "select Highschooler.gr",
            "select Highschooler.gr, t0.c3",
            "select Highschooler.gr, Highschooler.name",
            "select Highschooler.gr, Highschooler.ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler",
        "table_candidates": [
            "Highschooler",
            "Highschooler Friend"
        ],
        "align_scores": [
            0.3934912085533142,
            6.61103695165366e-05,
            0.0011297448072582483,
            6.891503289807588e-05,
            0.0004532980383373797,
            6.463989848271012e-05,
            0.00038053226307965815,
            6.324782589217648e-05
        ],
        "align_select": "select Highschooler.gr",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Return the grade that has the greatest number of high schoolers.",
        "gold_select": "select Highschooler.gr",
        "select_candidates": [
            "select Highschooler.gr",
            "select Highschooler.gr the SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "select Highschooler.gr, t0.c3",
            "select Highschooler.ID, Highschooler.gr"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler",
        "table_candidates": [
            "Highschooler"
        ],
        "align_scores": [
            0.8689696192741394,
            7.806910434737802e-05,
            0.0008518057293258607,
            9.940739982994273e-05,
            0.000642983301077038,
            5.3114672482479364e-05,
            0.00026175350649282336,
            6.271032179938629e-05
        ],
        "align_select": "select Highschooler.gr",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Show me all grades that have at least 4 students.",
        "gold_select": "select Highschooler.gr",
        "select_candidates": [
            "select Highschooler.gr",
            "select Highschooler.gr, count(*)",
            "select Highschooler.gr, max(Highschooler.ID)",
            "select Highschooler.gr, t0.c3"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler",
        "table_candidates": [
            "Highschooler",
            "Highschooler Friend",
            "Highschooler Likes"
        ],
        "align_scores": [
            0.251199871301651,
            0.00016290563507936895,
            0.0017364994855597615,
            8.743376383790746e-05,
            0.00023301030159927905,
            5.9039288316853344e-05,
            0.0005646733334288001,
            6.347798625938594e-05
        ],
        "align_select": "select Highschooler.gr",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Which grades have 4 or more high schoolers?",
        "gold_select": "select Highschooler.gr",
        "select_candidates": [
            "select Highschooler.gr",
            "select Highschooler.gr, t0.c3",
            "select Highschooler.gr, max(t0.c4)",
            "select Highschooler.gr, max(Highschooler.ID)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler",
        "table_candidates": [
            "Highschooler"
        ],
        "align_scores": [
            0.31258365511894226,
            0.00017106499581132084,
            0.0012859668349847198,
            7.809875387465581e-05,
            0.0002598079154267907,
            6.380875856848434e-05,
            0.00020440496155060828,
            6.43751336610876e-05
        ],
        "align_select": "select Highschooler.gr",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Show the student IDs and numbers of friends corresponding to each.",
        "gold_select": "select Friend.stu_id, count(*)",
        "select_candidates": [
            "select Friend.stu_id, count(*)",
            "select Friend.stu_id, count(Friend.frnd_id)",
            "select Friend.stu_id, count(distinct Friend.frnd_id)",
            "select Friend.stu_id, count(*), Friend.frnd_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Friend",
        "table_candidates": [
            "Friend"
        ],
        "align_scores": [
            0.9961802959442139,
            0.00018997573351953179,
            0.011278222315013409,
            0.00015974869893398136,
            0.039236824959516525,
            0.00014927383745089173,
            0.002491915598511696,
            0.00011851202725665644
        ],
        "align_select": "select Friend.stu_id, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "How many friends does each student have?",
        "gold_select": "select Friend.stu_id, count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Highschooler.ID",
            "select count(Friend.stu_id)",
            "select count(*), Highschooler.name"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "Friend",
        "table_candidates": [
            "Friend",
            "Highschooler Friend"
        ],
        "align_scores": [
            0.9699066281318665,
            0.6677049994468689,
            0.11699149757623672,
            0.9256495237350464,
            0.4310588538646698,
            0.006388708483427763,
            0.5709547996520996,
            0.9858086109161377
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "Show the names of high school students and their corresponding number of friends.",
        "gold_select": "select Highschooler.name, count(*)",
        "select_candidates": [
            "select Highschooler.name, count(*)",
            "select Highschooler.name, count(Friend.frnd_id)",
            "select Highschooler.name, count(distinct Friend.frnd_id)",
            "select Highschooler.name, count(*), Friend.stu_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Friend",
        "table_candidates": [
            "Highschooler Friend"
        ],
        "align_scores": [
            0.9934509992599487,
            0.0002888173039536923,
            0.03144208341836929,
            0.00023052937467582524,
            0.01420311164110899,
            0.0001492810988565907,
            0.0006599368061870337,
            0.00015900435391813517
        ],
        "align_select": "select Highschooler.name, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "What are the names of the high schoolers and how many friends does each have?",
        "gold_select": "select Highschooler.name, count(*)",
        "select_candidates": [
            "select Highschooler.name, count(*)",
            "select Highschooler.name, count(Friend.frnd_id)",
            "select count(*), Highschooler.name",
            "select Highschooler.name, count(t1.c2)"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Friend",
        "table_candidates": [
            "Highschooler Friend"
        ],
        "align_scores": [
            0.9924589991569519,
            0.0004702185105998069,
            0.019888516515493393,
            0.00024848274188116193,
            0.9936809539794922,
            0.0005131399957463145,
            0.0005649164086207747,
            0.00016918395704124123
        ],
        "align_select": "select Highschooler.name, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "What is the name of the high schooler who has the greatest number of friends?",
        "gold_select": "select Highschooler.name",
        "select_candidates": [
            "select Highschooler.name",
            "select Highschooler.name, t1.c2",
            "select Highschooler.name, Friend.frnd_id",
            "select Highschooler.name, Friend.stu_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Friend",
        "table_candidates": [
            "Highschooler Friend",
            "Highschooler Friend Likes"
        ],
        "align_scores": [
            0.9768103361129761,
            7.705670577706769e-05,
            0.0005828933208249509,
            5.7400618970859796e-05,
            0.0009770782198756933,
            8.545122545910999e-05,
            0.0010232768254354596,
            8.995744428830221e-05
        ],
        "align_select": "select Highschooler.name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Return the name of the high school student with the most friends.",
        "gold_select": "select Highschooler.name",
        "select_candidates": [
            "select Highschooler.name",
            "select Highschooler.name, Friend.stu_id",
            "select Highschooler.name, Friend.frnd_id",
            "select Highschooler.name, t1.c2"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Friend",
        "table_candidates": [
            "Highschooler Friend",
            "Highschooler Friend Likes"
        ],
        "align_scores": [
            0.991461992263794,
            5.87250069656875e-05,
            0.0009673858876340091,
            7.284405728569254e-05,
            0.001121819717809558,
            6.427901098504663e-05,
            0.0006160552729852498,
            5.0026370445266366e-05
        ],
        "align_select": "select Highschooler.name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Show the names of high schoolers who have at least 3 friends.",
        "gold_select": "select Highschooler.name",
        "select_candidates": [
            "select Highschooler.name",
            "select Highschooler.name, Friend.stu_id",
            "select Highschooler.name, t1.c2",
            "select Highschooler.name, Friend.frnd_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Friend",
        "table_candidates": [
            "Highschooler Friend"
        ],
        "align_scores": [
            0.982964813709259,
            7.147187716327608e-05,
            0.0011536150705069304,
            7.794503471814096e-05,
            0.00047457576147280633,
            7.253206422319636e-05,
            0.0009828648762777448,
            6.949453381821513e-05
        ],
        "align_select": "select Highschooler.name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the names of high schoolers who have 3 or more friends?",
        "gold_select": "select Highschooler.name",
        "select_candidates": [
            "select Highschooler.name",
            "select Highschooler.name, Friend.stu_id",
            "select Highschooler.name, Friend.frnd_id",
            "select Highschooler.name, t1.c2"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Friend",
        "table_candidates": [
            "Highschooler Friend",
            "Highschooler Friend Likes"
        ],
        "align_scores": [
            0.9806957840919495,
            0.00010074521560454741,
            0.0009047717321664095,
            9.333603520644829e-05,
            0.0006743501871824265,
            8.3433638792485e-05,
            0.00045486108865588903,
            8.641324529889971e-05
        ],
        "align_select": "select Highschooler.name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Show the names of all of the high schooler Kyle's friends.",
        "gold_select": "select Highschooler.name",
        "select_candidates": [
            "select Highschooler.name",
            "select Highschooler.name, Friend.frnd_id",
            "select Highschooler.name, Friend.stu_id",
            "select Highschooler.name, t1.c2"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Friend",
        "table_candidates": [
            "Highschooler Friend",
            "Highschooler Friend Likes"
        ],
        "align_scores": [
            0.8105887770652771,
            0.004295927472412586,
            0.00020561687415465713,
            0.00011632217501755804,
            0.0001807574590202421,
            0.00010633422789396718,
            0.0002763928787317127,
            9.995871369028464e-05
        ],
        "align_select": "select Highschooler.name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the names of friends of the high school student Kyle.",
        "gold_select": "select Highschooler.name",
        "select_candidates": [
            "select Friend.frnd_id",
            "select Friend.frnd_id, Highschooler.name",
            "select Friend.stu_id, Highschooler.name",
            "select Friend.frnd_id, t1.c2"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Friend",
        "table_candidates": [
            "Highschooler Friend",
            "Highschooler Friend Likes"
        ],
        "align_scores": [
            0.005928398575633764,
            0.0008073050994426012,
            0.0003057631547562778,
            9.825445158639923e-05,
            0.0002943520084954798,
            9.830101043917239e-05,
            0.00032334032584913075,
            9.650224092183635e-05
        ],
        "align_select": "select Friend.frnd_id",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many friends does the high school student Kyle have?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(Friend.frnd_id)",
            "select count(t1.c2)",
            "select count(*)",
            "select count(Friend.stu_id)"
        ],
        "select_labels": [
            0.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Friend",
        "table_candidates": [
            "Highschooler Friend",
            "Highschooler Friend Likes"
        ],
        "align_scores": [
            0.057824261486530304,
            0.00011558754340512678,
            0.0007672091014683247,
            8.544665615772828e-05,
            0.9944633841514587,
            9.469340875511989e-05,
            0.0017182553419843316,
            0.00013010598195251077
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Count the number of friends Kyle has.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(Friend.frnd_id)",
            "select count(*)",
            "select count(distinct Friend.frnd_id)",
            "select count(t1.c2)"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Friend",
        "table_candidates": [
            "Highschooler Friend",
            "Highschooler Friend Likes"
        ],
        "align_scores": [
            0.026901105418801308,
            8.025015267776325e-05,
            0.9953574538230896,
            7.609442400280386e-05,
            0.003746799658983946,
            7.534909673267975e-05,
            0.0003694616025313735,
            6.014461177983321e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show ids of all students who do not have any friends.",
        "gold_select": "select Highschooler.ID",
        "select_candidates": [
            "select Highschooler.ID",
            "select Friend.stu_id",
            "select Highschooler.ID, Friend.stu_id",
            "select t0.c, Friend.stu_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM",
            "SELECT-FROM-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Friend",
        "table_candidates": [
            "Highschooler Friend",
            "Highschooler Friend Likes",
            "Friend Likes"
        ],
        "align_scores": [
            0.6718284487724304,
            0.06296703964471817,
            0.9798489212989807,
            0.3290533125400543,
            0.000928906025364995,
            0.0005275000003166497,
            0.000393829308450222,
            0.00020269818196538836
        ],
        "align_select": "select Friend.stu_id",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM"
    },
    {
        "question": "What are the ids of high school students who do not have friends?",
        "gold_select": "select Highschooler.ID",
        "select_candidates": [
            "select Highschooler.ID",
            "select Highschooler.ID, Friend.stu_id",
            "select Highschooler.ID, Highschooler.name",
            "select Highschooler.ID, Friend.frnd_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Friend",
        "table_candidates": [
            "Highschooler Friend",
            "Highschooler Friend Likes",
            "Highschooler Likes"
        ],
        "align_scores": [
            0.9571347236633301,
            0.9640071392059326,
            0.0008614315884187818,
            0.0007059382041916251,
            0.0014178642304614186,
            0.0016547004925087094,
            0.0010627683950588107,
            0.0007400653557851911
        ],
        "align_select": "select Highschooler.ID",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM"
    },
    {
        "question": "Show names of all high school students who do not have any friends.",
        "gold_select": "select Highschooler.name",
        "select_candidates": [
            "select Highschooler.name",
            "select Highschooler.name, Highschooler.gr",
            "select Highschooler.name, Highschooler.ID",
            "select Highschooler.name, t0.c3"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "Highschooler Friend",
        "table_candidates": [
            "Highschooler",
            "Highschooler Friend",
            "Highschooler Friend Likes"
        ],
        "align_scores": [
            0.41050663590431213,
            0.9075085520744324,
            0.0002685558283701539,
            0.0002612197131384164,
            0.0002425892453175038,
            0.0002724635705817491,
            0.0005723020876757801,
            0.0004564083938021213
        ],
        "align_select": "select Highschooler.name",
        "align_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM"
    },
    {
        "question": "What are the names of students who have no friends?",
        "gold_select": "select Highschooler.name",
        "select_candidates": [
            "select Highschooler.name",
            "select Highschooler.name, Highschooler.gr",
            "select Highschooler.name, t1.c2",
            "select Highschooler.name, Highschooler.ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Friend",
        "table_candidates": [
            "Highschooler Friend",
            "Highschooler",
            "Highschooler Friend Likes"
        ],
        "align_scores": [
            0.885378897190094,
            0.5919533967971802,
            0.0002604343753773719,
            0.0002293024299433455,
            0.0005592430243268609,
            0.00039753018063493073,
            0.0001887620019260794,
            0.00023073365446180105
        ],
        "align_select": "select Highschooler.name",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM"
    },
    {
        "question": "Show the ids of high schoolers who have friends and are also liked by someone else.",
        "gold_select": "select Friend.stu_id",
        "select_candidates": [
            "select Highschooler.ID",
            "select Likes.stu_id",
            "select Highschooler.ID, Friend.frnd_id, Likes.stu_id",
            "select Highschooler.ID, Friend.stu_id, Likes.liked_id"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-INTERSECT-SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM-INTERSECT-SELECT-FROM",
            "SELECT-FROM-GROUP BY-HAVING-INTERSECT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Friend Likes",
        "table_candidates": [
            "Highschooler Friend Likes"
        ],
        "align_scores": [
            0.4754788875579834,
            0.9653281569480896,
            0.4865010976791382,
            0.952015221118927,
            0.0006880261353217065,
            0.0007157200598157942,
            0.0007035120506770909,
            0.0007158537046052516
        ],
        "align_select": "select Highschooler.ID",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING-INTERSECT-SELECT-FROM"
    },
    {
        "question": "What are the ids of students who both have friends and are liked?",
        "gold_select": "select Friend.stu_id",
        "select_candidates": [
            "select Friend.stu_id",
            "select Likes.stu_id",
            "select Friend.stu_id, Likes.stu_id",
            "select Highschooler.ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-INTERSECT-SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM-INTERSECT-SELECT-FROM",
            "SELECT-FROM-GROUP BY-HAVING-INTERSECT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Friend Likes",
        "table_candidates": [
            "Friend Likes",
            "Highschooler Friend Likes"
        ],
        "align_scores": [
            0.9891439080238342,
            0.9928719401359558,
            0.981977105140686,
            0.9935116171836853,
            0.2159588783979416,
            0.9460489153862,
            0.6921585202217102,
            0.9826463460922241
        ],
        "align_select": "select Friend.stu_id",
        "align_structure": "SELECT-FROM-INTERSECT-SELECT-FROM"
    },
    {
        "question": "Show name of all students who have some friends and also are liked by someone else.",
        "gold_select": "select Highschooler.name",
        "select_candidates": [
            "select Highschooler.name",
            "select Highschooler.name, Friend.stu_id",
            "select Highschooler.name, Friend.frnd_id",
            "select Highschooler.name, Likes.stu_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-INTERSECT-SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM-INTERSECT-SELECT-FROM",
            "SELECT-FROM-GROUP BY-HAVING-INTERSECT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Friend Likes",
        "table_candidates": [
            "Highschooler Friend Likes"
        ],
        "align_scores": [
            0.9427081346511841,
            0.9891529083251953,
            0.002254075836390257,
            0.003562248544767499,
            0.0004962870734743774,
            0.0005026298458687961,
            0.002602718770503998,
            0.011236930266022682
        ],
        "align_select": "select Highschooler.name",
        "align_structure": "SELECT-FROM-INTERSECT-SELECT-FROM"
    },
    {
        "question": "What are the names of high schoolers who both have friends and are liked?",
        "gold_select": "select Highschooler.name",
        "select_candidates": [
            "select Highschooler.name",
            "select Highschooler.name, Friend.frnd_id",
            "select Highschooler.name, Highschooler.gr",
            "select Highschooler.name, Friend.frnd_id, Likes.liked_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-INTERSECT-SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM-INTERSECT-SELECT-FROM",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Friend Likes",
        "table_candidates": [
            "Highschooler Friend Likes"
        ],
        "align_scores": [
            0.9820278882980347,
            0.9871202111244202,
            0.0005897732335142791,
            0.0003480330924503505,
            0.0006105600041337311,
            0.00041119958041235805,
            0.0005526710883714259,
            0.00042557148844935
        ],
        "align_select": "select Highschooler.name",
        "align_structure": "SELECT-FROM-INTERSECT-SELECT-FROM"
    },
    {
        "question": "Count the number of likes for each student id.",
        "gold_select": "select Likes.stu_id, count(*)",
        "select_candidates": [
            "select count(*), Likes.stu_id",
            "select Likes.stu_id, count(*)",
            "select sum(Likes.stu_id), Likes.liked_id",
            "select sum(Likes.liked_id), Likes.stu_id"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Likes",
        "table_candidates": [
            "Likes",
            "Highschooler Likes"
        ],
        "align_scores": [
            0.9954532384872437,
            0.00014995303354226053,
            0.9958192110061646,
            0.00014059375098440796,
            0.00014691546675749123,
            0.00010998767538694665,
            0.00017109824693761766,
            0.00010218071838608012
        ],
        "align_select": "select count(*), Likes.stu_id",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "How many likes correspond to each student id?",
        "gold_select": "select Likes.stu_id, count(*)",
        "select_candidates": [
            "select Likes.stu_id, count(*)",
            "select Likes.stu_id, sum(Likes.liked_id)",
            "select count(*), Likes.stu_id",
            "select Likes.stu_id, count(**)"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Likes",
        "table_candidates": [
            "Likes",
            "Highschooler Likes"
        ],
        "align_scores": [
            0.9957184195518494,
            0.00016487071115989238,
            0.0013431814732030034,
            9.345733269583434e-05,
            0.9954304695129395,
            0.00017795490566641092,
            0.9952259063720703,
            0.00015877497207839042
        ],
        "align_select": "select Likes.stu_id, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "Show the names of high schoolers who have likes, and numbers of likes for each.",
        "gold_select": "select Highschooler.name, count(*)",
        "select_candidates": [
            "select Highschooler.name, count(*)",
            "select Highschooler.name, count(*), Likes.stu_id",
            "select count(*), Highschooler.name",
            "select Highschooler.name, count(*), Likes.liked_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Likes",
        "table_candidates": [
            "Highschooler Likes"
        ],
        "align_scores": [
            0.9888484477996826,
            0.0002580676809884608,
            0.0010692968498915434,
            0.00014298623136710376,
            0.9907566905021667,
            0.00030703272204846144,
            0.0008027247386053205,
            0.00016360894369427115
        ],
        "align_select": "select Highschooler.name, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "What are the names of high schoolers who have likes, and how many likes does each have?",
        "gold_select": "select Highschooler.name, count(*)",
        "select_candidates": [
            "select count(*), Highschooler.name",
            "select Highschooler.name, count(*)",
            "select sum(Likes.liked_id), Highschooler.name",
            "select counts(*), Highschooler.name"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Likes",
        "table_candidates": [
            "Highschooler Likes"
        ],
        "align_scores": [
            0.9891144037246704,
            0.9778271317481995,
            0.9869472980499268,
            0.9808670878410339,
            0.0016251147026196122,
            0.0010800089221447706,
            0.001146408380009234,
            0.000877709942869842
        ],
        "align_select": "select count(*), Highschooler.name",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "What is the name of the high schooler who has the greatest number of likes?",
        "gold_select": "select Highschooler.name",
        "select_candidates": [
            "select Highschooler.name",
            "select Highschooler.name, Likes.stu_id",
            "select Highschooler.name, Likes.liked_id",
            "select Highschooler.name, Highschooler.gr"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "Highschooler Likes",
        "table_candidates": [
            "Highschooler Likes"
        ],
        "align_scores": [
            0.8421776294708252,
            0.9721397161483765,
            0.0007441597990691662,
            0.0007450854172930121,
            0.0003726821159943938,
            0.00033356549101881683,
            0.00033089006319642067,
            0.0004452061257325113
        ],
        "align_select": "select Highschooler.name",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Give the name of the student with the most likes.",
        "gold_select": "select Highschooler.name",
        "select_candidates": [
            "select Highschooler.name",
            "select Highschooler.name, Likes.stu_id",
            "select Highschooler.name, Highschooler.ID",
            "select Highschooler.name, Highschooler.gr"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Likes",
        "table_candidates": [
            "Highschooler Likes"
        ],
        "align_scores": [
            0.9879820942878723,
            6.01484534854535e-05,
            0.0009099642047658563,
            7.13875560904853e-05,
            0.0006565242074429989,
            5.769510244135745e-05,
            0.00044984364649280906,
            5.5710239394102246e-05
        ],
        "align_select": "select Highschooler.name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Show the names of students who have at least 2 likes.",
        "gold_select": "select Highschooler.name",
        "select_candidates": [
            "select Highschooler.name",
            "select Highschooler.name, Highschooler.ID",
            "select Highschooler.name, Likes.stu_id",
            "select Highschooler.name, Highschooler.gr"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Likes",
        "table_candidates": [
            "Highschooler Likes"
        ],
        "align_scores": [
            0.9580385684967041,
            7.85575175541453e-05,
            0.0005023331614211202,
            5.5449625506298617e-05,
            0.0010228930041193962,
            7.310634100576863e-05,
            0.0003438447311054915,
            5.7971243222709745e-05
        ],
        "align_select": "select Highschooler.name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the names of students who have 2 or more likes?",
        "gold_select": "select Highschooler.name",
        "select_candidates": [
            "select Highschooler.name",
            "select Highschooler.name, Highschooler.ID",
            "select Highschooler.name, Likes.stu_id",
            "select Highschooler.name, Highschooler.gr"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Likes",
        "table_candidates": [
            "Highschooler Likes"
        ],
        "align_scores": [
            0.9403850436210632,
            0.0001400192704750225,
            0.0005835072952322662,
            7.001597987255082e-05,
            0.0008851742604747415,
            9.64584614848718e-05,
            0.00035351357655599713,
            7.134155748644844e-05
        ],
        "align_select": "select Highschooler.name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Show the names of students who have a grade higher than 5 and have at least 2 friends.",
        "gold_select": "select Highschooler.name",
        "select_candidates": [
            "select Highschooler.name",
            "select Highschooler.name, Highschooler.gr",
            "select Highschooler.name, Highschooler.ID",
            "select Highschooler.name, t0.c5"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "Highschooler Friend",
        "table_candidates": [
            "Highschooler Friend",
            "Highschooler Friend Likes"
        ],
        "align_scores": [
            0.17595355212688446,
            0.9798950552940369,
            0.0011149722849950194,
            0.0009781301487237215,
            0.00030315687763504684,
            0.0014546543825417757,
            0.0003026258491445333,
            0.0005805258406326175
        ],
        "align_select": "select Highschooler.name",
        "align_structure": "SELECT-FROM-WHERE-GROUP BY-HAVING"
    },
    {
        "question": "What are the names of high schoolers who have a grade of over 5 and have 2 or more friends?",
        "gold_select": "select Highschooler.name",
        "select_candidates": [
            "select Highschooler.name",
            "select Highschooler.name, Highschooler.gr",
            "select Highschooler.name, Highschooler.ID",
            "select Highschooler.name, t0.c5"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-WHERE-GROUP BY-HAVING-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "Highschooler Friend",
        "table_candidates": [
            "Highschooler Friend",
            "Highschooler Friend Likes",
            "Highschooler Likes"
        ],
        "align_scores": [
            0.06089133396744728,
            0.07147642970085144,
            0.000620344013441354,
            0.00031174617470242083,
            0.00025857676519080997,
            0.00021007267059758306,
            0.0002712009008973837,
            0.00014842265227343887
        ],
        "align_select": "select Highschooler.name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "How many likes does Kyle have?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Highschooler.name",
            "select sum(Likes.liked_id)",
            "select count(Likes.liked_id)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Likes",
        "table_candidates": [
            "Highschooler Likes"
        ],
        "align_scores": [
            0.9960371851921082,
            7.511801231885329e-05,
            0.0002772453590296209,
            6.630983261857182e-05,
            0.00144870369695127,
            6.319646490737796e-05,
            0.0004165161226410419,
            7.320149597944692e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the number of likes that the high schooler named Kyle has.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Highschooler.name",
            "select count(*), Highschooler.ID",
            "select count(1, Highschooler.ID)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Likes",
        "table_candidates": [
            "Highschooler Likes"
        ],
        "align_scores": [
            0.9913143515586853,
            6.741740799043328e-05,
            0.00024508286151103675,
            5.7449578889645636e-05,
            0.00024964037584140897,
            5.773583325208165e-05,
            0.0003479677252471447,
            7.387251389445737e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the average grade of all students who have some friends.",
        "gold_select": "select avg(Highschooler.gr)",
        "select_candidates": [
            "select avg(Highschooler.gr)",
            "select an avg(Highschooler.gr)",
            "select avg(Highschooler.gr), Friend.stu_id",
            "select avg(Highschooler.gr), Highschooler.ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Friend",
        "table_candidates": [
            "Highschooler Friend",
            "Highschooler Friend Likes"
        ],
        "align_scores": [
            0.42821282148361206,
            0.011537033133208752,
            0.0006307750009000301,
            0.0004956398042850196,
            0.0006863444577902555,
            0.006597386673092842,
            0.00017600817955099046,
            0.0011135759996250272
        ],
        "align_select": "select avg(Highschooler.gr)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the average grade of students who have friends?",
        "gold_select": "select avg(Highschooler.gr)",
        "select_candidates": [
            "select avg(Highschooler.gr)",
            "select an avg(Highschooler.gr)",
            "select avg(Highschooler.gr), Friend.stu_id",
            "select avg(Highschooler.gr), Highschooler.ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Friend",
        "table_candidates": [
            "Highschooler Friend",
            "Highschooler Friend Likes"
        ],
        "align_scores": [
            0.595023512840271,
            0.04154818505048752,
            0.0005351476138457656,
            0.000566591857932508,
            0.00043070485116913915,
            0.0014008517609909177,
            0.0001652928622206673,
            0.00899667851626873
        ],
        "align_select": "select avg(Highschooler.gr)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the minimum grade of students who have no friends.",
        "gold_select": "select min(Highschooler.gr)",
        "select_candidates": [
            "select min(Highschooler.gr)",
            "select min(Highschooler.gr), Highschooler.ID",
            "select min(Highschooler.gr), Highschooler.name",
            "select min(Highschooler.gr), t0.c3"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Friend",
        "table_candidates": [
            "Highschooler",
            "Highschooler Friend",
            "Highschooler Friend Likes"
        ],
        "align_scores": [
            0.29327765107154846,
            0.1813277155160904,
            0.00020920438691973686,
            0.0003549748507793993,
            0.0002834363258443773,
            0.0005924300639890134,
            0.0003701845125760883,
            0.000132793138618581
        ],
        "align_select": "select min(Highschooler.gr)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the lowest grade of students who do not have any friends?",
        "gold_select": "select min(Highschooler.gr)",
        "select_candidates": [
            "select min(Highschooler.gr)",
            "select min(Highschooler.gr), Highschooler.ID",
            "select min(Highschooler.gr), Highschooler.name",
            "select Highschooler.gr"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Friend",
        "table_candidates": [
            "Highschooler Friend",
            "Highschooler",
            "Highschooler Friend Likes"
        ],
        "align_scores": [
            0.5532441735267639,
            0.05602733790874481,
            0.00020724881323985755,
            0.00022792570234742016,
            0.0002017720544245094,
            0.000486790610011667,
            0.04518632963299751,
            0.06038320064544678
        ],
        "align_select": "select min(Highschooler.gr)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show the student IDs and numbers of friends corresponding to each.",
        "gold_select": "select Friend.stu_id, count(*)",
        "select_candidates": [
            "select Friend.stu_id, count(*)",
            "select Friend.stu_id, count(Friend.frnd_id)",
            "select Friend.stu_id, count(distinct Friend.frnd_id)",
            "select Friend.stu_id, count(*), Friend.frnd_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Friend",
        "table_candidates": [
            "Friend"
        ],
        "align_scores": [
            0.9961802959442139,
            0.00018997573351953179,
            0.011278222315013409,
            0.00015974869893398136,
            0.039236824959516525,
            0.00014927383745089173,
            0.002491915598511696,
            0.00011851202725665644
        ],
        "align_select": "select Friend.stu_id, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "How many friends does each student have?",
        "gold_select": "select Friend.stu_id, count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Highschooler.ID",
            "select count(Friend.stu_id)",
            "select count(*), Highschooler.name"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "Friend",
        "table_candidates": [
            "Friend",
            "Highschooler Friend",
            "Highschooler Friend Likes"
        ],
        "align_scores": [
            0.9699066281318665,
            0.6677049994468689,
            0.11699149757623672,
            0.9256495237350464,
            0.4310588538646698,
            0.006388708483427763,
            0.5709547996520996,
            0.9858086109161377
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "Show the names of high school students and their corresponding number of friends.",
        "gold_select": "select Highschooler.name, count(*)",
        "select_candidates": [
            "select Highschooler.name, count(*)",
            "select Highschooler.name, count(Friend.frnd_id)",
            "select Highschooler.name, count(distinct Friend.frnd_id)",
            "select Highschooler.name, count(*), Friend.stu_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Friend",
        "table_candidates": [
            "Highschooler Friend",
            "Highschooler Friend Likes"
        ],
        "align_scores": [
            0.9934509992599487,
            0.0002888173039536923,
            0.03144208341836929,
            0.00023052937467582524,
            0.01420311164110899,
            0.0001492810988565907,
            0.0006599368061870337,
            0.00015900435391813517
        ],
        "align_select": "select Highschooler.name, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "What are the names of the high schoolers and how many friends does each have?",
        "gold_select": "select Highschooler.name, count(*)",
        "select_candidates": [
            "select Highschooler.name, count(*)",
            "select count(*), Highschooler.name",
            "select Highschooler.name, count(Friend.frnd_id)",
            "select count(Friend.frnd_id), Highschooler.name"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Friend",
        "table_candidates": [
            "Highschooler Friend"
        ],
        "align_scores": [
            0.9924589991569519,
            0.0004702185105998069,
            0.9936809539794922,
            0.0005131399957463145,
            0.019888516515493393,
            0.00024848274188116193,
            0.014987741596996784,
            0.00020137363753747195
        ],
        "align_select": "select Highschooler.name, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "What is the name of the high schooler who has the greatest number of friends?",
        "gold_select": "select Highschooler.name",
        "select_candidates": [
            "select Highschooler.name",
            "select Highschooler.name, Friend.frnd_id",
            "select Highschooler.name, Friend.stu_id",
            "select Highschooler.name, t1.c2"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Friend",
        "table_candidates": [
            "Highschooler Friend",
            "Highschooler Friend Likes"
        ],
        "align_scores": [
            0.9768103361129761,
            7.705670577706769e-05,
            0.0009770782198756933,
            8.545122545910999e-05,
            0.0010232768254354596,
            8.995744428830221e-05,
            0.0005828933208249509,
            5.7400618970859796e-05
        ],
        "align_select": "select Highschooler.name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Return the name of the high school student with the most friends.",
        "gold_select": "select Highschooler.name",
        "select_candidates": [
            "select Highschooler.name",
            "select Highschooler.name, Friend.stu_id",
            "select Highschooler.name, Friend.frnd_id",
            "select Highschooler.name, t1.c2"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Friend",
        "table_candidates": [
            "Highschooler Friend",
            "Highschooler Friend Likes"
        ],
        "align_scores": [
            0.991461992263794,
            5.87250069656875e-05,
            0.0009673858876340091,
            7.284405728569254e-05,
            0.001121819717809558,
            6.427901098504663e-05,
            0.0006160552729852498,
            5.0026370445266366e-05
        ],
        "align_select": "select Highschooler.name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Show the names of high schoolers who have at least 3 friends.",
        "gold_select": "select Highschooler.name",
        "select_candidates": [
            "select Highschooler.name",
            "select Highschooler.name, Friend.stu_id",
            "select Highschooler.name, Friend.frnd_id",
            "select Highschooler.name, t1.c2"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Friend",
        "table_candidates": [
            "Highschooler Friend"
        ],
        "align_scores": [
            0.982964813709259,
            7.147187716327608e-05,
            0.0011536150705069304,
            7.794503471814096e-05,
            0.0009828648762777448,
            6.949453381821513e-05,
            0.00047457576147280633,
            7.253206422319636e-05
        ],
        "align_select": "select Highschooler.name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the names of high schoolers who have 3 or more friends?",
        "gold_select": "select Highschooler.name",
        "select_candidates": [
            "select Highschooler.name",
            "select Highschooler.name, Friend.stu_id",
            "select Highschooler.name, Friend.frnd_id",
            "select Highschooler.name, t1.c2"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Friend",
        "table_candidates": [
            "Highschooler Friend",
            "Highschooler Friend Likes"
        ],
        "align_scores": [
            0.9806957840919495,
            0.00010074521560454741,
            0.0009047717321664095,
            9.333603520644829e-05,
            0.0006743501871824265,
            8.3433638792485e-05,
            0.00045486108865588903,
            8.641324529889971e-05
        ],
        "align_select": "select Highschooler.name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Show the names of all of the high schooler Kyle's friends.",
        "gold_select": "select Highschooler.name",
        "select_candidates": [
            "select Highschooler.name",
            "select Highschooler.name, Friend.frnd_id",
            "select Highschooler.name, Friend.stu_id",
            "select Highschooler.name, t1.c2"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Friend",
        "table_candidates": [
            "Highschooler Friend",
            "Highschooler Friend Likes"
        ],
        "align_scores": [
            0.8105887770652771,
            0.004295927472412586,
            0.00020561687415465713,
            0.00011632217501755804,
            0.0001807574590202421,
            0.00010633422789396718,
            0.0002763928787317127,
            9.995871369028464e-05
        ],
        "align_select": "select Highschooler.name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the names of friends of the high school student Kyle.",
        "gold_select": "select Highschooler.name",
        "select_candidates": [
            "select Friend.frnd_id",
            "select Friend.frnd_id, Highschooler.name",
            "select Friend.stu_id, Highschooler.name",
            "select Friend.frnd_id, t1.c2"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Friend",
        "table_candidates": [
            "Highschooler Friend",
            "Highschooler Friend Likes"
        ],
        "align_scores": [
            0.005928398575633764,
            0.0008073050994426012,
            0.0003057631547562778,
            9.825445158639923e-05,
            0.0002943520084954798,
            9.830101043917239e-05,
            0.00032334032584913075,
            9.650224092183635e-05
        ],
        "align_select": "select Friend.frnd_id",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many friends does the high school student Kyle have?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(Friend.frnd_id)",
            "select count(t1.c2)",
            "select count(*)",
            "select count(Friend.stu_id)"
        ],
        "select_labels": [
            0.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Friend",
        "table_candidates": [
            "Highschooler Friend",
            "Highschooler Friend Likes"
        ],
        "align_scores": [
            0.057824261486530304,
            0.00011558754340512678,
            0.0007672091014683247,
            8.544665615772828e-05,
            0.9944633841514587,
            9.469340875511989e-05,
            0.0017182553419843316,
            0.00013010598195251077
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Count the number of friends Kyle has.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(Friend.frnd_id)",
            "select count(*)",
            "select count(distinct Friend.frnd_id)",
            "select count(t1.c2)"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Friend",
        "table_candidates": [
            "Highschooler Friend",
            "Highschooler Friend Likes"
        ],
        "align_scores": [
            0.026901105418801308,
            8.025015267776325e-05,
            0.9953574538230896,
            7.609442400280386e-05,
            0.003746799658983946,
            7.534909673267975e-05,
            0.0003694616025313735,
            6.014461177983321e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show ids of all students who do not have any friends.",
        "gold_select": "select Highschooler.ID",
        "select_candidates": [
            "select Highschooler.ID",
            "select Friend.stu_id",
            "select Highschooler.ID, Friend.stu_id",
            "select t0.c, Friend.stu_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM",
            "SELECT-FROM-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Friend",
        "table_candidates": [
            "Highschooler Friend",
            "Highschooler Friend Likes",
            "Friend Likes"
        ],
        "align_scores": [
            0.6718284487724304,
            0.06296703964471817,
            0.9798489212989807,
            0.3290533125400543,
            0.000928906025364995,
            0.0005275000003166497,
            0.000393829308450222,
            0.00020269818196538836
        ],
        "align_select": "select Friend.stu_id",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM"
    },
    {
        "question": "What are the ids of high school students who do not have friends?",
        "gold_select": "select Highschooler.ID",
        "select_candidates": [
            "select Highschooler.ID",
            "select Highschooler.ID, Friend.stu_id",
            "select Highschooler.ID, Highschooler.name",
            "select Highschooler.ID, Friend.frnd_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Friend",
        "table_candidates": [
            "Highschooler Friend",
            "Highschooler Friend Likes"
        ],
        "align_scores": [
            0.9571347236633301,
            0.9640071392059326,
            0.0008614315884187818,
            0.0007059382041916251,
            0.0014178642304614186,
            0.0016547004925087094,
            0.0010627683950588107,
            0.0007400653557851911
        ],
        "align_select": "select Highschooler.ID",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM"
    },
    {
        "question": "Show names of all high school students who do not have any friends.",
        "gold_select": "select Highschooler.name",
        "select_candidates": [
            "select Highschooler.name",
            "select Highschooler.name, Highschooler.grade",
            "select Highschooler.name, Highschooler.ID",
            "select Highschooler.name, t0.c3"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "Highschooler Friend",
        "table_candidates": [
            "Highschooler",
            "Highschooler Friend",
            "Highschooler Friend Likes"
        ],
        "align_scores": [
            0.41050663590431213,
            0.9075085520744324,
            0.00020464521367102861,
            0.0002614190161693841,
            0.0002425892453175038,
            0.0002724635705817491,
            0.0005723020876757801,
            0.0004564083938021213
        ],
        "align_select": "select Highschooler.name",
        "align_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM"
    },
    {
        "question": "What are the names of students who have no friends?",
        "gold_select": "select Highschooler.name",
        "select_candidates": [
            "select Highschooler.name",
            "select Highschooler.name, Friend.stu_id",
            "select Highschooler.name, t1.c2",
            "select Highschooler.name, Highschooler.ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Friend",
        "table_candidates": [
            "Highschooler Friend",
            "Highschooler Friend Likes",
            "Highschooler",
            "Highschooler Friend Likes"
        ],
        "align_scores": [
            0.885378897190094,
            0.5919533967971802,
            0.0005118001135997474,
            0.0002711323613766581,
            0.0005592430243268609,
            0.00039753018063493073,
            0.0001887620019260794,
            0.00023073365446180105
        ],
        "align_select": "select Highschooler.name",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM"
    },
    {
        "question": "Show the ids of high schoolers who have friends and are also liked by someone else.",
        "gold_select": "select Friend.stu_id",
        "select_candidates": [
            "select Highschooler.ID",
            "select Likes.student_id",
            "select Highschooler.ID, Friend.frnd_id, Likes.student_id",
            "select Highschooler.ID, Friend.stu_id, Likes.liked_id"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-INTERSECT-SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM-INTERSECT-SELECT-FROM",
            "SELECT-FROM-GROUP BY-HAVING-INTERSECT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Friend Likes",
        "table_candidates": [
            "Highschooler Friend Likes"
        ],
        "align_scores": [
            0.4754788875579834,
            0.9653281569480896,
            0.6706913113594055,
            0.9695950746536255,
            0.0007084446842782199,
            0.0007793089607730508,
            0.0007035120506770909,
            0.0007158537046052516
        ],
        "align_select": "select Likes.student_id",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING-INTERSECT-SELECT-FROM"
    },
    {
        "question": "What are the ids of students who both have friends and are liked?",
        "gold_select": "select Friend.stu_id",
        "select_candidates": [
            "select Friend.stu_id",
            "select Likes.student_id",
            "select Friend.stu_id, Likes.student_id",
            "select Highschooler.ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-INTERSECT-SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM-INTERSECT-SELECT-FROM",
            "SELECT-FROM-GROUP BY-HAVING-INTERSECT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Friend Likes",
        "table_candidates": [
            "Friend Likes",
            "Highschooler Friend Likes"
        ],
        "align_scores": [
            0.9891439080238342,
            0.9928719401359558,
            0.9836716055870056,
            0.9935861229896545,
            0.16255584359169006,
            0.924050509929657,
            0.6921585202217102,
            0.9826463460922241
        ],
        "align_select": "select Friend.stu_id",
        "align_structure": "SELECT-FROM-INTERSECT-SELECT-FROM"
    },
    {
        "question": "Show the names of students who have a grade higher than 5 and have at least 2 friends.",
        "gold_select": "select Highschooler.name",
        "select_candidates": [
            "select Highschooler.name",
            "select Highschooler.name, Highschooler.grade",
            "select Highschooler.name, Friend.stu_id",
            "select Highschooler.name, Friend.frnd_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-WHERE-GROUP BY-HAVING-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "Highschooler Friend",
        "table_candidates": [
            "Highschooler Friend",
            "Highschooler Friend Likes"
        ],
        "align_scores": [
            0.17595355212688446,
            0.09194862097501755,
            0.0008403898682445288,
            0.00033017757232300937,
            0.0014764884253963828,
            0.00067514693364501,
            0.0012079766020178795,
            0.00042454508366063237
        ],
        "align_select": "select Highschooler.name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the names of high schoolers who have a grade of over 5 and have 2 or more friends?",
        "gold_select": "select Highschooler.name",
        "select_candidates": [
            "select Highschooler.name",
            "select Highschooler.name, Highschooler.grade",
            "select Highschooler.name, Friend.frnd_id",
            "select Highschooler.name, Friend.stu_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-WHERE-GROUP BY-HAVING-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "Highschooler Friend",
        "table_candidates": [
            "Highschooler Friend",
            "Highschooler Friend Likes"
        ],
        "align_scores": [
            0.06089133396744728,
            0.07147642970085144,
            0.0004264937888365239,
            0.00025859722518362105,
            0.0006509877857752144,
            0.0003515696444083005,
            0.0005021571414545178,
            0.0004245722375344485
        ],
        "align_select": "select Highschooler.name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Find the average grade of all students who have some friends.",
        "gold_select": "select avg(Highschooler.grade)",
        "select_candidates": [
            "select avg(Highschooler.grade)",
            "select an avg(Highschooler.grade)",
            "select avg(Highschooler.grade), Friend.stu_id",
            "select avg(t0-Highschooler.grade)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Friend",
        "table_candidates": [
            "Highschooler Friend",
            "Highschooler Friend Likes"
        ],
        "align_scores": [
            0.9565190672874451,
            0.0051497784443199635,
            0.0006405558669939637,
            0.0006251718150451779,
            0.0007443608483299613,
            0.017896564677357674,
            0.0008954133954830468,
            0.0006423636805266142
        ],
        "align_select": "select avg(Highschooler.grade)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the average grade of students who have friends?",
        "gold_select": "select avg(Highschooler.grade)",
        "select_candidates": [
            "select avg(Highschooler.grade)",
            "select an avg(Highschooler.grade)",
            "select avg(Highschooler.grade), Friend.stu_id",
            "select avg(Highschooler.grade), Highschooler.ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Friend",
        "table_candidates": [
            "Highschooler Friend",
            "Highschooler Friend Likes"
        ],
        "align_scores": [
            0.9867430925369263,
            0.0066442592069506645,
            0.0005117298569530249,
            0.0005198010476306081,
            0.0004988087457604706,
            0.0026615748647600412,
            0.00019391358364373446,
            0.008272752165794373
        ],
        "align_select": "select avg(Highschooler.grade)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the minimum grade of students who have no friends.",
        "gold_select": "select min(Highschooler.grade)",
        "select_candidates": [
            "select min(Highschooler.grade)",
            "select min(Highschooler.grade), Highschooler.ID",
            "select min(Highschooler.grade), Highschooler.name",
            "select min(Highschooler.grade), t0.c3"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Friend",
        "table_candidates": [
            "Highschooler",
            "Highschooler Friend",
            "Highschooler Friend Likes"
        ],
        "align_scores": [
            0.9931609630584717,
            0.0963815227150917,
            0.00018300588999409229,
            0.0003921093884855509,
            0.0003245376283302903,
            0.000663716928102076,
            0.00030724736279807985,
            0.00012166340457042679
        ],
        "align_select": "select min(Highschooler.grade)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the lowest grade of students who do not have any friends?",
        "gold_select": "select min(Highschooler.grade)",
        "select_candidates": [
            "select min(Highschooler.grade)",
            "select min(Highschooler.grade), Highschooler.ID",
            "select min(Highschooler.grade), Highschooler.name",
            "select min(Highschooler.grade), t0.c3"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Friend",
        "table_candidates": [
            "Highschooler Friend",
            "Highschooler",
            "Highschooler Friend Likes"
        ],
        "align_scores": [
            0.9878736138343811,
            0.026287013664841652,
            0.00016614537162240595,
            0.00022859797172714025,
            0.00018495747644919902,
            0.00042893478530459106,
            0.0004161450488027185,
            0.00013036106247454882
        ],
        "align_select": "select min(Highschooler.grade)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show name of all students who have some friends and also are liked by someone else.",
        "gold_select": "select Highschooler.name",
        "select_candidates": [
            "select Highschooler.name",
            "select Highschooler.name, Friend.student_id",
            "select Highschooler.name, Likes.stu_id",
            "select Highschooler.name, Friend.friend_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-INTERSECT-SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM-INTERSECT-SELECT-FROM",
            "SELECT-FROM-GROUP BY-HAVING-INTERSECT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Friend Likes",
        "table_candidates": [
            "Highschooler Friend Likes"
        ],
        "align_scores": [
            0.9427081346511841,
            0.9891529083251953,
            0.0012215571478009224,
            0.002573738107457757,
            0.002602718770503998,
            0.011236930266022682,
            0.0004396630683913827,
            0.0003836910182144493
        ],
        "align_select": "select Highschooler.name",
        "align_structure": "SELECT-FROM-INTERSECT-SELECT-FROM"
    },
    {
        "question": "What are the names of high schoolers who both have friends and are liked?",
        "gold_select": "select Highschooler.name",
        "select_candidates": [
            "select Highschooler.name",
            "select Highschooler.name, Friend.friend_id",
            "select Highschooler.name, Friend.friend_id, Likes.liked_id",
            "select Highschooler.name, Friend.student_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-INTERSECT-SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM-INTERSECT-SELECT-FROM",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Friend Likes",
        "table_candidates": [
            "Highschooler Friend Likes"
        ],
        "align_scores": [
            0.9820278882980347,
            0.9871202111244202,
            0.00044033757876604795,
            0.00026084663113579154,
            0.0006014666287228465,
            0.0003973210696130991,
            0.0005547035252675414,
            0.00039210866088978946
        ],
        "align_select": "select Highschooler.name",
        "align_structure": "SELECT-FROM-INTERSECT-SELECT-FROM"
    },
    {
        "question": "Count the number of likes for each student id.",
        "gold_select": "select Likes.stu_id, count(*)",
        "select_candidates": [
            "select count(*), Likes.stu_id",
            "select Likes.stu_id, count(*)",
            "select sum(Likes.stu_id), Likes.liked_id",
            "select counts(*), Likes.stu_id"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Likes",
        "table_candidates": [
            "Likes"
        ],
        "align_scores": [
            0.9954532384872437,
            0.00014995303354226053,
            0.9958192110061646,
            0.00014059375098440796,
            0.00014691546675749123,
            0.00010998767538694665,
            0.0007525732507929206,
            0.00011402535164961591
        ],
        "align_select": "select count(*), Likes.stu_id",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "How many likes correspond to each student id?",
        "gold_select": "select Likes.stu_id, count(*)",
        "select_candidates": [
            "select Likes.stu_id, count(*)",
            "select Likes.stu_id, sum(Likes.liked_id)",
            "select Likes.stu_id, count(*), Likes.liked_id",
            "select count(*), Likes.stu_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Likes",
        "table_candidates": [
            "Likes",
            "Highschooler Likes"
        ],
        "align_scores": [
            0.9957184195518494,
            0.00016487071115989238,
            0.0013431814732030034,
            9.345733269583434e-05,
            0.00019403842452447861,
            8.491171320201829e-05,
            0.9954304695129395,
            0.00017795490566641092
        ],
        "align_select": "select Likes.stu_id, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "Show the names of high schoolers who have likes, and numbers of likes for each.",
        "gold_select": "select Highschooler.name, count(*)",
        "select_candidates": [
            "select Highschooler.name, count(*)",
            "select count(*), Highschooler.name",
            "select Highschooler.name, count(*), Likes.stu_id",
            "select Highschooler.name, count(*), Likes.liked_id"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Likes",
        "table_candidates": [
            "Highschooler Likes"
        ],
        "align_scores": [
            0.9888484477996826,
            0.0002580676809884608,
            0.9907566905021667,
            0.00030703272204846144,
            0.0010692968498915434,
            0.00014298623136710376,
            0.0008027247386053205,
            0.00016360894369427115
        ],
        "align_select": "select Highschooler.name, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "What are the names of high schoolers who have likes, and how many likes does each have?",
        "gold_select": "select Highschooler.name, count(*)",
        "select_candidates": [
            "select count(*), Highschooler.name",
            "select Highschooler.name, count(*)",
            "select counts(*), Highschooler.name",
            "select Highschooler.name, count(*), Likes.stu_id"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Likes",
        "table_candidates": [
            "Highschooler Likes"
        ],
        "align_scores": [
            0.9891144037246704,
            0.9778271317481995,
            0.9869472980499268,
            0.9808670878410339,
            0.001146408380009234,
            0.000877709942869842,
            0.0011353067820891738,
            0.0007727027405053377
        ],
        "align_select": "select count(*), Highschooler.name",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "What is the name of the high schooler who has the greatest number of likes?",
        "gold_select": "select Highschooler.name",
        "select_candidates": [
            "select Highschooler.name",
            "select Highschooler.name, Likes.stu_id",
            "select Highschooler.name, Likes.liked_id",
            "select Highschooler.name, Highschooler.grade"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Likes",
        "table_candidates": [
            "Highschooler Likes"
        ],
        "align_scores": [
            0.9721397161483765,
            0.8421776294708252,
            0.0007450854172930121,
            0.0007441597990691662,
            0.00033356549101881683,
            0.0003726821159943938,
            0.0010027713142335415,
            0.0005389269208535552
        ],
        "align_select": "select Highschooler.name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Give the name of the student with the most likes.",
        "gold_select": "select Highschooler.name",
        "select_candidates": [
            "select Highschooler.name",
            "select Highschooler.name, Likes.stu_id",
            "select Highschooler.name, Highschooler.ID",
            "select Highschooler.name (Highschooler.ID)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Likes",
        "table_candidates": [
            "Highschooler Likes"
        ],
        "align_scores": [
            0.9879820942878723,
            6.01484534854535e-05,
            0.0009099642047658563,
            7.13875560904853e-05,
            0.0006565242074429989,
            5.769510244135745e-05,
            0.007498200051486492,
            5.826897904626094e-05
        ],
        "align_select": "select Highschooler.name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Show the names of students who have at least 2 likes.",
        "gold_select": "select Highschooler.name",
        "select_candidates": [
            "select Highschooler.name",
            "select Highschooler.name, Highschooler.ID",
            "select Highschooler.name, Likes.stu_id",
            "select Highschooler.name, Highschooler.grade"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Likes",
        "table_candidates": [
            "Highschooler Likes"
        ],
        "align_scores": [
            0.9580385684967041,
            7.85575175541453e-05,
            0.0005023331614211202,
            5.5449625506298617e-05,
            0.0010228930041193962,
            7.310634100576863e-05,
            0.0002558585547376424,
            5.776953184977174e-05
        ],
        "align_select": "select Highschooler.name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the names of students who have 2 or more likes?",
        "gold_select": "select Highschooler.name",
        "select_candidates": [
            "select Highschooler.name",
            "select Highschooler.name, Highschooler.ID",
            "select Highschooler.name, Likes.stu_id",
            "select Highschooler.name, Highschooler.grade"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Likes",
        "table_candidates": [
            "Highschooler Likes"
        ],
        "align_scores": [
            0.9403850436210632,
            0.0001400192704750225,
            0.0005835072952322662,
            7.001597987255082e-05,
            0.0008851742604747415,
            9.64584614848718e-05,
            0.00026154343504458666,
            6.716989446431398e-05
        ],
        "align_select": "select Highschooler.name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "How many likes does Kyle have?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Highschooler.name",
            "select count(Likes.liked_id)",
            "select count(*), Highschooler.ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Likes",
        "table_candidates": [
            "Highschooler Likes"
        ],
        "align_scores": [
            0.9960371851921082,
            7.511801231885329e-05,
            0.0002772453590296209,
            6.630983261857182e-05,
            0.0004165161226410419,
            7.320149597944692e-05,
            0.00028790728538297117,
            6.644028326263651e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the number of likes that the high schooler named Kyle has.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Highschooler.name",
            "select count(*), Highschooler.ID",
            "select count(*), Highschooler.name, Likes.stu_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Likes",
        "table_candidates": [
            "Highschooler Likes"
        ],
        "align_scores": [
            0.9913143515586853,
            6.741740799043328e-05,
            0.00024508286151103675,
            5.7449578889645636e-05,
            0.00024964037584140897,
            5.773583325208165e-05,
            0.00012353221245575696,
            5.959584086667746e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show the names and grades of each high schooler.",
        "gold_select": "select Highschooler.name, Highschooler.gr",
        "select_candidates": [
            "select Highschooler.name, Highschooler.gr",
            "select Highschooler.ID, Highschooler.name, Highschooler.gr",
            "select distinct Highschooler.name, Highschooler.gr",
            "select Highschooler.name, Highschooler.gr, Highschooler.ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler",
        "table_candidates": [
            "Highschooler"
        ],
        "align_scores": [
            0.9771270155906677,
            0.0001518381614005193,
            0.0003772457130253315,
            0.0001018795883283019,
            0.002162816934287548,
            9.17198121896945e-05,
            0.0004107357526663691,
            8.453941700281575e-05
        ],
        "align_select": "select Highschooler.name, Highschooler.gr",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What are the names and grades for each high schooler?",
        "gold_select": "select Highschooler.name, Highschooler.gr",
        "select_candidates": [
            "select Highschooler.name, Highschooler.gr",
            "select distinct Highschooler.name, Highschooler.gr",
            "select Highschooler.ID, Highschooler.name, Highschooler.gr",
            "select Highschooler.name, Highschooler.gr, Highschooler.ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler",
        "table_candidates": [
            "Highschooler"
        ],
        "align_scores": [
            0.9839067459106445,
            0.00028663536068052053,
            0.00523078627884388,
            0.00010325423500034958,
            0.0003906327474396676,
            0.00011839219223475084,
            0.0003479516599327326,
            9.169471741188318e-05
        ],
        "align_select": "select Highschooler.name, Highschooler.gr",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "Show all the grades of the high schoolers.",
        "gold_select": "select Highschooler.gr",
        "select_candidates": [
            "select distinct Highschooler.gr",
            "select distinct Highschooler.gr, t0.c3",
            "select Highschooler.gr",
            "select distinct Highschooler.gr, Highschooler.name"
        ],
        "select_labels": [
            0.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler",
        "table_candidates": [
            "Highschooler"
        ],
        "align_scores": [
            0.7521864175796509,
            0.0001866079110186547,
            0.0004873972211498767,
            9.382147254655138e-05,
            0.02094721794128418,
            0.0006138836033642292,
            0.00012852763757109642,
            6.628801202168688e-05
        ],
        "align_select": "select distinct Highschooler.gr",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What is the grade of each high schooler?",
        "gold_select": "select Highschooler.gr",
        "select_candidates": [
            "select Highschooler.gr",
            "select distinct Highschooler.gr",
            "select Highschooler.ID, Highschooler.gr",
            "select Highschooler.ID, Highschooler.name, Highschooler.gr"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler",
        "table_candidates": [
            "Highschooler"
        ],
        "align_scores": [
            0.0038155484944581985,
            9.598500764695928e-05,
            0.32960060238838196,
            8.716737647773698e-05,
            0.00024002486316021532,
            8.220833115046844e-05,
            0.0001520711521152407,
            7.243342406582087e-05
        ],
        "align_select": "select distinct Highschooler.gr",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What grade is Kyle in?",
        "gold_select": "select Highschooler.gr",
        "select_candidates": [
            "select Highschooler.gr",
            "select distinct Highschooler.gr",
            "select Highschooler.name, Highschooler.gr",
            "select Highschooler.gr, Highschooler.name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler",
        "table_candidates": [
            "Highschooler"
        ],
        "align_scores": [
            0.013752653263509274,
            0.00011133604130009189,
            0.022861668840050697,
            0.0002319795312359929,
            0.0001928568526636809,
            6.675183976767585e-05,
            0.00021700869547203183,
            6.121952901594341e-05
        ],
        "align_select": "select Highschooler.gr",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the grade for the high schooler named Kyle.",
        "gold_select": "select Highschooler.gr",
        "select_candidates": [
            "select Highschooler.gr",
            "select Highschooler.ID, Highschooler.gr",
            "select Highschooler.ID, Highschooler.name, Highschooler.gr",
            "select Highschooler.name, Highschooler.gr"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler",
        "table_candidates": [
            "Highschooler"
        ],
        "align_scores": [
            0.16717496514320374,
            8.571058424422517e-05,
            0.00027410296024754643,
            7.703187293373048e-05,
            0.00022229572641663253,
            7.556193304480985e-05,
            0.0002605796908028424,
            7.069668936310336e-05
        ],
        "align_select": "select Highschooler.gr",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show the names of all high schoolers in grade 10.",
        "gold_select": "select Highschooler.name",
        "select_candidates": [
            "select Highschooler.name",
            "select distinct Highschooler.name",
            "select Highschooler.name, Highschooler.gr",
            "select distinct Highschooler.name, Highschooler.gr"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler",
        "table_candidates": [
            "Highschooler"
        ],
        "align_scores": [
            0.9812538027763367,
            9.16907811188139e-05,
            0.02534715086221695,
            8.786639955360442e-05,
            0.00023745455837342888,
            6.44863466732204e-05,
            0.00015629084373358637,
            5.920476178289391e-05
        ],
        "align_select": "select Highschooler.name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of all high schoolers in grade 10?",
        "gold_select": "select Highschooler.name",
        "select_candidates": [
            "select Highschooler.name",
            "select distinct Highschooler.name",
            "select Highschooler.name, Highschooler.gr",
            "select distinct Highschooler.name, Highschooler.gr"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler",
        "table_candidates": [
            "Highschooler"
        ],
        "align_scores": [
            0.9809210300445557,
            0.00013870740076527,
            0.07494764775037766,
            0.00021677231416106224,
            0.00024382284027524292,
            6.88563086441718e-05,
            0.00019105018873233348,
            5.8325073041487485e-05
        ],
        "align_select": "select Highschooler.name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many high schoolers are there in grade 9 or 10?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), t0.c9, Highschooler.name0",
            "select count(*), Highschooler.gr",
            "select count(*), Highschooler.ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler",
        "table_candidates": [
            "Highschooler"
        ],
        "align_scores": [
            0.9934023022651672,
            0.010349073447287083,
            0.00015930422523524612,
            0.00014831798034720123,
            0.0005216773715801537,
            0.05426260828971863,
            0.0004054419987369329,
            0.0006249900907278061
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Count the number of high schoolers in grades 9 or 10.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Highschooler.ID",
            "select count(*), t0.c9, Highschooler.name0",
            "select count(*), Highschooler.gr"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler",
        "table_candidates": [
            "Highschooler"
        ],
        "align_scores": [
            0.9937055706977844,
            0.00020330733968876302,
            0.0003000849101226777,
            0.0011235852725803852,
            0.00017063782433979213,
            0.00010798775474540889,
            0.00045548498746939003,
            0.7422363758087158
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show the number of high schoolers for each grade.",
        "gold_select": "select Highschooler.gr, count(*)",
        "select_candidates": [
            "select Highschooler.gr, count(*)",
            "select count(*), Highschooler.gr",
            "select highschooler, Highschooler.gr, count(*)",
            "select highschooler Highschooler.gr, count(*)"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler",
        "table_candidates": [
            "Highschooler"
        ],
        "align_scores": [
            0.9671121835708618,
            0.00018364250718150288,
            0.966880202293396,
            0.00023180374410003424,
            0.0004032543220091611,
            0.00011070360778830945,
            0.0005442806868813932,
            0.000147680941154249
        ],
        "align_select": "select Highschooler.gr, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "How many high schoolers are in each grade?",
        "gold_select": "select Highschooler.gr, count(*)",
        "select_candidates": [
            "select Highschooler.gr, count(*)",
            "select count(*), Highschooler.gr",
            "select distinct Highschooler.gr, count(*)",
            "select sum(Highschooler.gr), Highschooler.name"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler",
        "table_candidates": [
            "Highschooler"
        ],
        "align_scores": [
            0.9292027354240417,
            0.000253283855272457,
            0.9461247324943542,
            0.00028864771593362093,
            0.0007981269736774266,
            0.00014341500354930758,
            0.00018989606178365648,
            0.0001677381369518116
        ],
        "align_select": "select Highschooler.gr, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "Which grade has the most high schoolers?",
        "gold_select": "select Highschooler.gr",
        "select_candidates": [
            "select Highschooler.gr",
            "select Highschooler.gr, t0.c3",
            "select Highschooler.gr, Highschooler.name",
            "select Highschooler.gr, Highschooler.ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler",
        "table_candidates": [
            "Highschooler",
            "Highschooler Friend"
        ],
        "align_scores": [
            0.3934912085533142,
            6.61103695165366e-05,
            0.0011297448072582483,
            6.891503289807588e-05,
            0.0004532980383373797,
            6.463989848271012e-05,
            0.00038053226307965815,
            6.324782589217648e-05
        ],
        "align_select": "select Highschooler.gr",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Return the grade that has the greatest number of high schoolers.",
        "gold_select": "select Highschooler.gr",
        "select_candidates": [
            "select Highschooler.gr",
            "select Highschooler.gr the SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "select Highschooler.gr, t0.c3",
            "select Highschooler.ID, Highschooler.gr"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler",
        "table_candidates": [
            "Highschooler"
        ],
        "align_scores": [
            0.8689696192741394,
            6.026080882293172e-05,
            0.0008518057293258607,
            0.00010775148984976113,
            0.000642983301077038,
            6.141436460893601e-05,
            0.00026175350649282336,
            6.623809895245358e-05
        ],
        "align_select": "select Highschooler.gr",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Show me all grades that have at least 4 students.",
        "gold_select": "select Highschooler.gr",
        "select_candidates": [
            "select Highschooler.gr",
            "select Highschooler.gr, count(*)",
            "select Highschooler.gr, max(Highschooler.ID)",
            "select Highschooler.gr, t0.c3"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler",
        "table_candidates": [
            "Highschooler",
            "Highschooler Likes",
            "Highschooler Friend"
        ],
        "align_scores": [
            0.251199871301651,
            0.00016290563507936895,
            0.0017364994855597615,
            8.743376383790746e-05,
            0.00023301030159927905,
            5.9039288316853344e-05,
            0.0005646733334288001,
            6.347798625938594e-05
        ],
        "align_select": "select Highschooler.gr",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Which grades have 4 or more high schoolers?",
        "gold_select": "select Highschooler.gr",
        "select_candidates": [
            "select Highschooler.gr",
            "select Highschooler.gr, t0.c3",
            "select Highschooler.gr, max(Highschooler.ID)",
            "select Highschooler.gr, max(Highschooler.gr)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler",
        "table_candidates": [
            "Highschooler"
        ],
        "align_scores": [
            0.31258365511894226,
            0.00017106499581132084,
            0.0012859668349847198,
            7.809875387465581e-05,
            0.00020440496155060828,
            6.43751336610876e-05,
            0.00015701979282312095,
            5.892398621654138e-05
        ],
        "align_select": "select Highschooler.gr",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Show the student IDs and numbers of friends corresponding to each.",
        "gold_select": "select Friend.stu_id, count(*)",
        "select_candidates": [
            "select Friend.stu_id, count(*)",
            "select Friend.stu_id, count(distinct Friend.friend_id)",
            "select Friend.stu_id, count(Friend.friend_id)",
            "select Friend.stu_id, count(*), Friend.friend_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Friend",
        "table_candidates": [
            "Friend"
        ],
        "align_scores": [
            0.9961802959442139,
            0.00018997573351953179,
            0.00987866148352623,
            0.00014156529505271465,
            0.004015855025500059,
            0.00013998297799844295,
            0.00037549444823525846,
            0.00010338369611417875
        ],
        "align_select": "select Friend.stu_id, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "How many friends does each student have?",
        "gold_select": "select Friend.stu_id, count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Highschooler.ID",
            "select count(*), Friend.stu_id",
            "select count(*), Highschooler.name"
        ],
        "select_labels": [
            0.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "Friend",
        "table_candidates": [
            "Friend",
            "Highschooler Friend",
            "Highschooler Friend Likes"
        ],
        "align_scores": [
            0.9699066281318665,
            0.6677049994468689,
            0.11699149757623672,
            0.9256495237350464,
            0.6712517142295837,
            0.9945446252822876,
            0.5709547996520996,
            0.9858086109161377
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "Show the names of high school students and their corresponding number of friends.",
        "gold_select": "select Highschooler.name, count(*)",
        "select_candidates": [
            "select Highschooler.name, count(*)",
            "select Highschooler.name, count(Friend.friend_id)",
            "select Highschooler.name, count(distinct Friend.friend_id)",
            "select Highschooler.name, count(*), Friend.stu_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Friend",
        "table_candidates": [
            "Highschooler Friend",
            "Highschooler Friend Likes"
        ],
        "align_scores": [
            0.9934509992599487,
            0.0002888173039536923,
            0.006701021920889616,
            0.0001696375256869942,
            0.004951314069330692,
            0.00012360689288470894,
            0.0006599368061870337,
            0.00015900435391813517
        ],
        "align_select": "select Highschooler.name, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "What are the names of the high schoolers and how many friends does each have?",
        "gold_select": "select Highschooler.name, count(*)",
        "select_candidates": [
            "select Highschooler.name, count(*)",
            "select Highschooler.name, count(Friend.friend_id)",
            "select count(*), Highschooler.name",
            "select Highschooler.name, count(t1.c2)"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Friend",
        "table_candidates": [
            "Highschooler Friend"
        ],
        "align_scores": [
            0.9924589991569519,
            0.0004702185105998069,
            0.00646178750321269,
            0.000250366167165339,
            0.9936809539794922,
            0.0005131399957463145,
            0.0005649164086207747,
            0.00016918395704124123
        ],
        "align_select": "select Highschooler.name, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "What is the name of the high schooler who has the greatest number of friends?",
        "gold_select": "select Highschooler.name",
        "select_candidates": [
            "select Highschooler.name",
            "select Highschooler.name, t1.c2",
            "select Highschooler.name, Friend.stu_id",
            "select Highschooler.name, Friend.friend_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Friend",
        "table_candidates": [
            "Highschooler Friend",
            "Highschooler Friend Likes"
        ],
        "align_scores": [
            0.9768103361129761,
            7.705670577706769e-05,
            0.0005828933208249509,
            5.7400618970859796e-05,
            0.0010232768254354596,
            8.995744428830221e-05,
            0.00047378725139424205,
            7.382793410215527e-05
        ],
        "align_select": "select Highschooler.name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Return the name of the high school student with the most friends.",
        "gold_select": "select Highschooler.name",
        "select_candidates": [
            "select Highschooler.name",
            "select Highschooler.name, Friend.stu_id",
            "select Highschooler.name, Friend.friend_id",
            "select Highschooler.name, t1.c2"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Friend",
        "table_candidates": [
            "Highschooler Friend",
            "Highschooler Friend Likes"
        ],
        "align_scores": [
            0.991461992263794,
            5.87250069656875e-05,
            0.0009673858876340091,
            7.284405728569254e-05,
            0.0006846243632026017,
            5.815623444505036e-05,
            0.0006160552729852498,
            5.0026370445266366e-05
        ],
        "align_select": "select Highschooler.name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Show the names of high schoolers who have at least 3 friends.",
        "gold_select": "select Highschooler.name",
        "select_candidates": [
            "select Highschooler.name",
            "select Highschooler.name, t1.c2",
            "select Highschooler.name, Friend.friend_id",
            "select Highschooler.name, Friend.stu_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Friend",
        "table_candidates": [
            "Highschooler Friend"
        ],
        "align_scores": [
            0.982964813709259,
            7.147187716327608e-05,
            0.00047457576147280633,
            7.253206422319636e-05,
            0.0003788162430282682,
            6.25441680313088e-05,
            0.0011536150705069304,
            7.794503471814096e-05
        ],
        "align_select": "select Highschooler.name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the names of high schoolers who have 3 or more friends?",
        "gold_select": "select Highschooler.name",
        "select_candidates": [
            "select Highschooler.name",
            "select Highschooler.name, Friend.friend_id",
            "select Highschooler.name, t1.c2",
            "select Highschooler.name, Friend.stu_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Friend",
        "table_candidates": [
            "Highschooler Friend",
            "Highschooler Friend Likes"
        ],
        "align_scores": [
            0.9806957840919495,
            0.00010074521560454741,
            0.0003339094400871545,
            7.101913070073351e-05,
            0.00045486108865588903,
            8.641324529889971e-05,
            0.0009047717321664095,
            9.333603520644829e-05
        ],
        "align_select": "select Highschooler.name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Show the names of all of the high schooler Kyle's friends.",
        "gold_select": "select Highschooler.name",
        "select_candidates": [
            "select Highschooler.name",
            "select Highschooler.name, Friend.friend_id",
            "select Highschooler.name, Friend.stu_id",
            "select Highschooler.name, t1.c2"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Friend",
        "table_candidates": [
            "Highschooler Friend",
            "Highschooler Friend Likes"
        ],
        "align_scores": [
            0.8105887770652771,
            0.004295927472412586,
            0.000176605986780487,
            9.991326078306884e-05,
            0.0001807574590202421,
            0.00010633422789396718,
            0.0002763928787317127,
            9.995871369028464e-05
        ],
        "align_select": "select Highschooler.name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the names of friends of the high school student Kyle.",
        "gold_select": "select Highschooler.name",
        "select_candidates": [
            "select Friend.friend_id",
            "select Friend.friend_id, Highschooler.name",
            "select Friend.friend_id, t1.c2",
            "select Friend.stu_id, Highschooler.name"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Friend",
        "table_candidates": [
            "Highschooler Friend",
            "Highschooler Friend Likes"
        ],
        "align_scores": [
            0.004282626789063215,
            0.0005423516849987209,
            0.00024324885453097522,
            8.93325632205233e-05,
            0.0002927495224867016,
            8.820521179586649e-05,
            0.0002943520084954798,
            9.830101043917239e-05
        ],
        "align_select": "select Friend.friend_id",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many friends does the high school student Kyle have?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(Friend.friend_id)",
            "select count(t1.c2)",
            "select count(*)",
            "select count(Friend.stu_id)"
        ],
        "select_labels": [
            0.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Friend",
        "table_candidates": [
            "Highschooler Friend",
            "Highschooler Friend Likes",
            "Highschooler Friend Likes"
        ],
        "align_scores": [
            0.020937491208314896,
            9.757266525411978e-05,
            0.0007672091014683247,
            8.544665615772828e-05,
            0.9944633841514587,
            9.469340875511989e-05,
            0.0017182553419843316,
            0.00013010598195251077
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Count the number of friends Kyle has.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(Friend.friend_id)",
            "select count(*)",
            "select count(distinct Friend.friend_id)",
            "select count(t1.c2)"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Friend",
        "table_candidates": [
            "Highschooler Friend"
        ],
        "align_scores": [
            0.010037535801529884,
            7.305399776669219e-05,
            0.9953574538230896,
            7.609442400280386e-05,
            0.003483536886051297,
            6.604547525057569e-05,
            0.0003694616025313735,
            6.014461177983321e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show ids of all students who do not have any friends.",
        "gold_select": "select Highschooler.ID",
        "select_candidates": [
            "select Highschooler.ID",
            "select Friend.stu_id",
            "select Highschooler.ID, Friend.stu_id",
            "select t0.c, Friend.stu_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM",
            "SELECT-FROM-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Friend",
        "table_candidates": [
            "Highschooler Friend",
            "Friend Likes",
            "Highschooler Friend Likes"
        ],
        "align_scores": [
            0.6718284487724304,
            0.06296703964471817,
            0.9798489212989807,
            0.3290533125400543,
            0.000928906025364995,
            0.0005275000003166497,
            0.000393829308450222,
            0.00020269818196538836
        ],
        "align_select": "select Friend.stu_id",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM"
    },
    {
        "question": "What are the ids of high school students who do not have friends?",
        "gold_select": "select Highschooler.ID",
        "select_candidates": [
            "select Highschooler.ID",
            "select Highschooler.ID, Friend.stu_id",
            "select Highschooler.ID, Friend.friend_id",
            "select Highschooler.ID, Highschooler.name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Friend",
        "table_candidates": [
            "Highschooler Friend",
            "Highschooler Friend Likes",
            "Highschooler Friend Likes"
        ],
        "align_scores": [
            0.9571347236633301,
            0.9640071392059326,
            0.0008614315884187818,
            0.0007059382041916251,
            0.0005471753538586199,
            0.0003820020938292146,
            0.0014178642304614186,
            0.0016547004925087094
        ],
        "align_select": "select Highschooler.ID",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM"
    },
    {
        "question": "Show names of all high school students who do not have any friends.",
        "gold_select": "select Highschooler.name",
        "select_candidates": [
            "select Highschooler.name",
            "select Highschooler.name, Highschooler.gr",
            "select Highschooler.name, Highschooler.ID",
            "select Highschooler.name, t0.c3"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "Highschooler Friend",
        "table_candidates": [
            "Highschooler",
            "Highschooler Friend",
            "Highschooler Friend Likes"
        ],
        "align_scores": [
            0.41050663590431213,
            0.9075085520744324,
            0.0002685558283701539,
            0.0002612197131384164,
            0.0002425892453175038,
            0.0002724635705817491,
            0.0005723020876757801,
            0.0004564083938021213
        ],
        "align_select": "select Highschooler.name",
        "align_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM"
    },
    {
        "question": "What are the names of students who have no friends?",
        "gold_select": "select Highschooler.name",
        "select_candidates": [
            "select Highschooler.name",
            "select Highschooler.name, Highschooler.gr",
            "select Highschooler.name, Highschooler.ID",
            "select Highschooler.name, t1.c2"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Friend",
        "table_candidates": [
            "Highschooler Friend",
            "Highschooler Friend Likes",
            "Highschooler"
        ],
        "align_scores": [
            0.885378897190094,
            0.5919533967971802,
            0.0002604343753773719,
            0.0002293024299433455,
            0.0001887620019260794,
            0.00023073365446180105,
            0.0005592430243268609,
            0.00039753018063493073
        ],
        "align_select": "select Highschooler.name",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM"
    },
    {
        "question": "Show the ids of high schoolers who have friends and are also liked by someone else.",
        "gold_select": "select Friend.stu_id",
        "select_candidates": [
            "select Highschooler.ID",
            "select Highschooler.ID, Friend.friend_id, Likes.student_id",
            "select Likes.student_id",
            "select Friend.friend_id, Likes.student_id"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-INTERSECT-SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM-INTERSECT-SELECT-FROM",
            "SELECT-FROM-GROUP BY-HAVING-INTERSECT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Friend Likes",
        "table_candidates": [
            "Highschooler Friend Likes"
        ],
        "align_scores": [
            0.4754788875579834,
            0.9653281569480896,
            0.0007861332269385457,
            0.0007967124693095684,
            0.6706913113594055,
            0.9695950746536255,
            0.08840356767177582,
            0.07637753337621689
        ],
        "align_select": "select Likes.student_id",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING-INTERSECT-SELECT-FROM"
    },
    {
        "question": "What are the ids of students who both have friends and are liked?",
        "gold_select": "select Friend.stu_id",
        "select_candidates": [
            "select Friend.stu_id",
            "select Likes.student_id",
            "select Friend.stu_id, Likes.student_id",
            "select Highschooler.ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-INTERSECT-SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM-INTERSECT-SELECT-FROM",
            "SELECT-FROM-GROUP BY-HAVING-INTERSECT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Friend Likes",
        "table_candidates": [
            "Friend Likes",
            "Highschooler Friend Likes"
        ],
        "align_scores": [
            0.9891439080238342,
            0.9928719401359558,
            0.9836716055870056,
            0.9935861229896545,
            0.16255584359169006,
            0.924050509929657,
            0.6921585202217102,
            0.9826463460922241
        ],
        "align_select": "select Friend.stu_id",
        "align_structure": "SELECT-FROM-INTERSECT-SELECT-FROM"
    },
    {
        "question": "Show the names of students who have a grade higher than 5 and have at least 2 friends.",
        "gold_select": "select Highschooler.name",
        "select_candidates": [
            "select Highschooler.name",
            "select Highschooler.name, Highschooler.gr",
            "select Highschooler.name, Friend.stu_id",
            "select Highschooler.name, Highschooler.ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-WHERE-GROUP BY-HAVING-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "Highschooler Friend",
        "table_candidates": [
            "Highschooler Friend",
            "Highschooler Friend Likes"
        ],
        "align_scores": [
            0.17595355212688446,
            0.09194862097501755,
            0.0011149722849950194,
            0.0003626562829595059,
            0.0014764884253963828,
            0.00067514693364501,
            0.00030315687763504684,
            0.00021120601741131395
        ],
        "align_select": "select Highschooler.name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the names of high schoolers who have a grade of over 5 and have 2 or more friends?",
        "gold_select": "select Highschooler.name",
        "select_candidates": [
            "select Highschooler.name",
            "select Highschooler.name, Highschooler.gr",
            "select Highschooler.name, Highschooler.ID",
            "select Highschooler.name, Friend.friend_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-WHERE-GROUP BY-HAVING-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "Highschooler Friend",
        "table_candidates": [
            "Highschooler Friend",
            "Highschooler Friend Likes",
            "Highschooler Likes"
        ],
        "align_scores": [
            0.06089133396744728,
            0.07147642970085144,
            0.000620344013441354,
            0.00031174617470242083,
            0.00025857676519080997,
            0.00021007267059758306,
            0.0003665871045086533,
            0.00023335267906077206
        ],
        "align_select": "select Highschooler.name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Find the average grade of all students who have some friends.",
        "gold_select": "select avg(Highschooler.gr)",
        "select_candidates": [
            "select avg(Highschooler.gr)",
            "select an avg(Highschooler.gr)",
            "select avg(Highschooler.gr), Friend.stu_id",
            "select avg(Highschooler.gr), Highschooler.ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Friend",
        "table_candidates": [
            "Highschooler Friend",
            "Highschooler Friend Likes"
        ],
        "align_scores": [
            0.42821282148361206,
            0.0017863120883703232,
            0.0006307750009000301,
            0.00022911187261343002,
            0.0006863444577902555,
            0.00011524065484991297,
            0.00017600817955099046,
            9.763447451405227e-05
        ],
        "align_select": "select avg(Highschooler.gr)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the average grade of students who have friends?",
        "gold_select": "select avg(Highschooler.gr)",
        "select_candidates": [
            "select avg(Highschooler.gr)",
            "select an avg(Highschooler.gr)",
            "select avg(Highschooler.gr), Friend.stu_id",
            "select avg(Highschooler.gr), Highschooler.ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Friend",
        "table_candidates": [
            "Highschooler Friend",
            "Highschooler Friend Likes"
        ],
        "align_scores": [
            0.595023512840271,
            0.04154818505048752,
            0.0005351476138457656,
            0.000566591857932508,
            0.00043070485116913915,
            0.0014008517609909177,
            0.0001652928622206673,
            0.00899667851626873
        ],
        "align_select": "select avg(Highschooler.gr)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the minimum grade of students who have no friends.",
        "gold_select": "select min(Highschooler.gr)",
        "select_candidates": [
            "select min(Highschooler.gr)",
            "select min(Highschooler.gr), Highschooler.ID",
            "select min(Highschooler.gr), Highschooler.name",
            "select min(Highschooler.gr), t0.c3"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Friend",
        "table_candidates": [
            "Highschooler",
            "Highschooler Friend",
            "Highschooler Friend Likes"
        ],
        "align_scores": [
            0.29327765107154846,
            0.1813277155160904,
            0.00020920438691973686,
            0.0003549748507793993,
            0.0002834363258443773,
            0.0005924300639890134,
            0.0003701845125760883,
            0.000132793138618581
        ],
        "align_select": "select min(Highschooler.gr)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the lowest grade of students who do not have any friends?",
        "gold_select": "select min(Highschooler.gr)",
        "select_candidates": [
            "select min(Highschooler.gr)",
            "select min(Highschooler.gr), Highschooler.ID",
            "select min(Highschooler.gr), Highschooler.name",
            "select Highschooler.gr"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Friend",
        "table_candidates": [
            "Highschooler Friend",
            "Highschooler",
            "Highschooler Friend Likes"
        ],
        "align_scores": [
            0.5532441735267639,
            0.05602733790874481,
            0.00020724881323985755,
            0.00022792570234742016,
            0.0002017720544245094,
            0.000486790610011667,
            0.04518632963299751,
            0.06038320064544678
        ],
        "align_select": "select min(Highschooler.gr)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show the names and grades of each high schooler.",
        "gold_select": "select Highschooler.name, Highschooler.gr",
        "select_candidates": [
            "select Highschooler.name, Highschooler.gr",
            "select Highschooler.ID, Highschooler.name, Highschooler.gr",
            "select Highschooler.name, Highschooler.gr, Highschooler.ID",
            "select distinct Highschooler.name, Highschooler.gr"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler",
        "table_candidates": [
            "Highschooler"
        ],
        "align_scores": [
            0.9771270155906677,
            0.0001518381614005193,
            0.0003772457130253315,
            0.0001018795883283019,
            0.0004107357526663691,
            8.453941700281575e-05,
            0.002162816934287548,
            9.17198121896945e-05
        ],
        "align_select": "select Highschooler.name, Highschooler.gr",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What are the names and grades for each high schooler?",
        "gold_select": "select Highschooler.name, Highschooler.gr",
        "select_candidates": [
            "select Highschooler.name, Highschooler.gr",
            "select distinct Highschooler.name, Highschooler.gr",
            "select Highschooler.ID, Highschooler.name, Highschooler.gr",
            "select Highschooler.name, Highschooler.gr, Highschooler.ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler",
        "table_candidates": [
            "Highschooler"
        ],
        "align_scores": [
            0.9839067459106445,
            0.00028663536068052053,
            0.00523078627884388,
            0.00010325423500034958,
            0.0003906327474396676,
            0.00011839219223475084,
            0.0003479516599327326,
            9.169471741188318e-05
        ],
        "align_select": "select Highschooler.name, Highschooler.gr",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "Show all the grades of the high schoolers.",
        "gold_select": "select Highschooler.gr",
        "select_candidates": [
            "select distinct Highschooler.gr",
            "select Highschooler.gr",
            "select distinct Highschooler.gr, t0.c3",
            "select distinct Highschooler.gr, Highschooler.name"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler",
        "table_candidates": [
            "Highschooler"
        ],
        "align_scores": [
            0.7521864175796509,
            0.0001866079110186547,
            0.02094721794128418,
            0.0006138836033642292,
            0.0004873972211498767,
            9.382147254655138e-05,
            0.00012852763757109642,
            6.628801202168688e-05
        ],
        "align_select": "select distinct Highschooler.gr",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What is the grade of each high schooler?",
        "gold_select": "select Highschooler.gr",
        "select_candidates": [
            "select Highschooler.gr",
            "select distinct Highschooler.gr",
            "select Highschooler.ID, Highschooler.gr",
            "select Highschooler.ID, Highschooler.name, Highschooler.gr"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler",
        "table_candidates": [
            "Highschooler"
        ],
        "align_scores": [
            0.0038155484944581985,
            9.598500764695928e-05,
            0.32960060238838196,
            8.716737647773698e-05,
            0.00024002486316021532,
            8.220833115046844e-05,
            0.0001520711521152407,
            7.243342406582087e-05
        ],
        "align_select": "select distinct Highschooler.gr",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What grade is Kyle in?",
        "gold_select": "select Highschooler.gr",
        "select_candidates": [
            "select Highschooler.gr",
            "select distinct Highschooler.gr",
            "select Highschooler.gr, Highschooler.name",
            "select distinct Highschooler.gr, Highschooler.name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler",
        "table_candidates": [
            "Highschooler"
        ],
        "align_scores": [
            0.013752653263509274,
            0.00011133604130009189,
            0.022861668840050697,
            0.0002319795312359929,
            0.00021700869547203183,
            6.121952901594341e-05,
            0.00016207716544158757,
            6.32299852441065e-05
        ],
        "align_select": "select Highschooler.gr",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the grade for the high schooler named Kyle.",
        "gold_select": "select Highschooler.gr",
        "select_candidates": [
            "select Highschooler.gr",
            "select Highschooler.ID, Highschooler.gr",
            "select Highschooler.ID, Highschooler.name, Highschooler.gr",
            "select Highschooler.name, Highschooler.gr"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler",
        "table_candidates": [
            "Highschooler"
        ],
        "align_scores": [
            0.16717496514320374,
            8.571058424422517e-05,
            0.00027410296024754643,
            7.703187293373048e-05,
            0.00022229572641663253,
            7.556193304480985e-05,
            0.0002605796908028424,
            7.069668936310336e-05
        ],
        "align_select": "select Highschooler.gr",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show the names of all high schoolers in grade 10.",
        "gold_select": "select Highschooler.name",
        "select_candidates": [
            "select Highschooler.name",
            "select Highschooler.name, Highschooler.gr",
            "select distinct Highschooler.name",
            "select distinct Highschooler.name, Highschooler.gr"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler",
        "table_candidates": [
            "Highschooler"
        ],
        "align_scores": [
            0.9812538027763367,
            9.16907811188139e-05,
            0.00023745455837342888,
            6.44863466732204e-05,
            0.02534715086221695,
            8.786639955360442e-05,
            0.00015629084373358637,
            5.920476178289391e-05
        ],
        "align_select": "select Highschooler.name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of all high schoolers in grade 10?",
        "gold_select": "select Highschooler.name",
        "select_candidates": [
            "select Highschooler.name",
            "select distinct Highschooler.name",
            "select Highschooler.name, Highschooler.gr",
            "select distinct Highschooler.name, Highschooler.gr"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler",
        "table_candidates": [
            "Highschooler"
        ],
        "align_scores": [
            0.9809210300445557,
            0.00013870740076527,
            0.07494764775037766,
            0.00021677231416106224,
            0.00024382284027524292,
            6.88563086441718e-05,
            0.00019105018873233348,
            5.8325073041487485e-05
        ],
        "align_select": "select Highschooler.name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many high schoolers are there in grade 9 or 10?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), t0.c9, Highschooler.name0",
            "select count(*), Highschooler.gr",
            "select count(*), Highschooler.ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler",
        "table_candidates": [
            "Highschooler"
        ],
        "align_scores": [
            0.9934023022651672,
            0.00039616276626475155,
            0.00015930422523524612,
            0.00016059726476669312,
            0.0005216773715801537,
            0.8419803380966187,
            0.0004054419987369329,
            0.00401665223762393
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Count the number of high schoolers in grades 9 or 10.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Highschooler.ID",
            "select count(*), t0.c9, Highschooler.name0",
            "select count(*), Highschooler.gr"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler",
        "table_candidates": [
            "Highschooler"
        ],
        "align_scores": [
            0.9937055706977844,
            0.00020330733968876302,
            0.0003000849101226777,
            0.0011235852725803852,
            0.00017063782433979213,
            0.00010798775474540889,
            0.00045548498746939003,
            0.7422363758087158
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show the number of high schoolers for each grade.",
        "gold_select": "select Highschooler.gr, count(*)",
        "select_candidates": [
            "select Highschooler.gr, count(*)",
            "select count(*), Highschooler.gr",
            "select highschooler, Highschooler.gr, count(*)",
            "select highschooler Highschooler.gr, count(*)"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler",
        "table_candidates": [
            "Highschooler"
        ],
        "align_scores": [
            0.9671121835708618,
            0.00018364250718150288,
            0.966880202293396,
            0.00023180374410003424,
            0.0004032543220091611,
            0.00011070360778830945,
            0.0005442806868813932,
            0.000147680941154249
        ],
        "align_select": "select Highschooler.gr, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "How many high schoolers are in each grade?",
        "gold_select": "select Highschooler.gr, count(*)",
        "select_candidates": [
            "select Highschooler.gr, count(*)",
            "select count(*), Highschooler.gr",
            "select distinct Highschooler.gr, count(*)",
            "select sum(Highschooler.gr), Highschooler.name"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler",
        "table_candidates": [
            "Highschooler"
        ],
        "align_scores": [
            0.9292027354240417,
            0.000253283855272457,
            0.9461247324943542,
            0.00028864771593362093,
            0.0007981269736774266,
            0.00014341500354930758,
            0.00018989606178365648,
            0.0001677381369518116
        ],
        "align_select": "select Highschooler.gr, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "Which grade has the most high schoolers?",
        "gold_select": "select Highschooler.gr",
        "select_candidates": [
            "select Highschooler.gr",
            "select Highschooler.gr, t0.c3",
            "select Highschooler.gr, Highschooler.name",
            "select Highschooler.gr, Highschooler.ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler",
        "table_candidates": [
            "Highschooler"
        ],
        "align_scores": [
            0.3934912085533142,
            0.00011000655649695545,
            0.0011297448072582483,
            6.213245069375262e-05,
            0.0004532980383373797,
            6.223361560842022e-05,
            0.00038053226307965815,
            6.164608203107491e-05
        ],
        "align_select": "select Highschooler.gr",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Return the grade that has the greatest number of high schoolers.",
        "gold_select": "select Highschooler.gr",
        "select_candidates": [
            "select Highschooler.gr",
            "select Highschooler.gr the SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "select Highschooler.gr, t0.c3",
            "select Highschooler.ID, Highschooler.gr"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler",
        "table_candidates": [
            "Highschooler"
        ],
        "align_scores": [
            0.8689696192741394,
            7.806910434737802e-05,
            0.0008518057293258607,
            9.940739982994273e-05,
            0.000642983301077038,
            5.3114672482479364e-05,
            0.00026175350649282336,
            6.271032179938629e-05
        ],
        "align_select": "select Highschooler.gr",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Show me all grades that have at least 4 students.",
        "gold_select": "select Highschooler.gr",
        "select_candidates": [
            "select Highschooler.gr",
            "select Highschooler.gr, count(*)",
            "select Highschooler.gr, max(Highschooler.ID)",
            "select Highschooler.gr, t0.c3"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler",
        "table_candidates": [
            "Highschooler"
        ],
        "align_scores": [
            0.251199871301651,
            0.00016290563507936895,
            0.0017364994855597615,
            8.743376383790746e-05,
            0.00023301030159927905,
            5.9039288316853344e-05,
            0.0005646733334288001,
            6.347798625938594e-05
        ],
        "align_select": "select Highschooler.gr",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Which grades have 4 or more high schoolers?",
        "gold_select": "select Highschooler.gr",
        "select_candidates": [
            "select Highschooler.gr",
            "select Highschooler.gr, t0.c3",
            "select Highschooler.gr, max(Highschooler.ID)",
            "select Highschooler.gr, max(t0.c4)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler",
        "table_candidates": [
            "Highschooler"
        ],
        "align_scores": [
            0.31258365511894226,
            0.00017106499581132084,
            0.0012859668349847198,
            7.809875387465581e-05,
            0.00020440496155060828,
            6.43751336610876e-05,
            0.0002598079154267907,
            6.380875856848434e-05
        ],
        "align_select": "select Highschooler.gr",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Show the names of all of the high schooler Kyle's friends.",
        "gold_select": "select Highschooler.name",
        "select_candidates": [
            "select Highschooler.name",
            "select Highschooler.name, Friend.frnd_id",
            "select Highschooler.name, Friend.student_id",
            "select Highschooler.name, t1.c2"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Friend",
        "table_candidates": [
            "Highschooler Friend",
            "Highschooler Friend Likes"
        ],
        "align_scores": [
            0.8105887770652771,
            0.004295927472412586,
            0.00020561687415465713,
            0.00011632217501755804,
            0.0001906876714201644,
            0.00011221966269658878,
            0.0002763928787317127,
            9.995871369028464e-05
        ],
        "align_select": "select Highschooler.name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the names of friends of the high school student Kyle.",
        "gold_select": "select Highschooler.name",
        "select_candidates": [
            "select Friend.frnd_id",
            "select Friend.frnd_id, Highschooler.name",
            "select Friend.student_id, Highschooler.name",
            "select Friend.frnd_id, t1.c2"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Friend",
        "table_candidates": [
            "Highschooler Friend",
            "Highschooler Friend Likes"
        ],
        "align_scores": [
            0.005928398575633764,
            0.0008073050994426012,
            0.0003057631547562778,
            9.825445158639923e-05,
            0.0002591340453363955,
            9.292475442634895e-05,
            0.00032334032584913075,
            9.650224092183635e-05
        ],
        "align_select": "select Friend.frnd_id",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show the names of students who have a grade higher than 5 and have at least 2 friends.",
        "gold_select": "select Highschooler.name",
        "select_candidates": [
            "select Highschooler.name",
            "select Highschooler.name, Highschooler.gr",
            "select Highschooler.name, Friend.frnd_id",
            "select Highschooler.name, Friend.student_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-WHERE-GROUP BY-HAVING-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "Highschooler Friend",
        "table_candidates": [
            "Highschooler Friend",
            "Highschooler Friend Likes"
        ],
        "align_scores": [
            0.17595355212688446,
            0.09194862097501755,
            0.0011149722849950194,
            0.0003626562829595059,
            0.0012079766020178795,
            0.00042454508366063237,
            0.0012079478474333882,
            0.0005171310622245073
        ],
        "align_select": "select Highschooler.name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the names of high schoolers who have a grade of over 5 and have 2 or more friends?",
        "gold_select": "select Highschooler.name",
        "select_candidates": [
            "select Highschooler.name",
            "select Highschooler.name, Highschooler.gr",
            "select Highschooler.name, Friend.frnd_id",
            "select Highschooler.name, Highschooler.ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-WHERE-GROUP BY-HAVING-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "Highschooler Friend",
        "table_candidates": [
            "Highschooler Friend",
            "Highschooler Friend Likes"
        ],
        "align_scores": [
            0.06089133396744728,
            0.07147642970085144,
            0.000620344013441354,
            0.00031174617470242083,
            0.0006509877857752144,
            0.0003515696444083005,
            0.00025857676519080997,
            0.00021007267059758306
        ],
        "align_select": "select Highschooler.name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Find the average grade of all students who have some friends.",
        "gold_select": "select avg(Highschooler.gr)",
        "select_candidates": [
            "select avg(Highschooler.gr)",
            "select an avg(Highschooler.gr)",
            "select avg(Highschooler.gr), Friend.student_id",
            "select avg(t0-Highschooler.gr)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Friend",
        "table_candidates": [
            "Highschooler Friend",
            "Highschooler Friend Likes"
        ],
        "align_scores": [
            0.42821282148361206,
            0.0017863120883703232,
            0.0006307750009000301,
            0.00022911187261343002,
            0.0005613091052509844,
            0.00010676909005269408,
            0.0012158568715676665,
            0.00023562012938782573
        ],
        "align_select": "select avg(Highschooler.gr)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the average grade of students who have friends?",
        "gold_select": "select avg(Highschooler.gr)",
        "select_candidates": [
            "select avg(Highschooler.gr)",
            "select an avg(Highschooler.gr)",
            "select avg(Highschooler.gr), Friend.student_id",
            "select avg(t0-Highschooler.gr)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Friend",
        "table_candidates": [
            "Highschooler Friend",
            "Highschooler Friend Likes"
        ],
        "align_scores": [
            0.595023512840271,
            7.532940799137577e-05,
            0.0005351476138457656,
            8.901817636797205e-05,
            0.00027988842339254916,
            7.337061106227338e-05,
            0.0009906768100336194,
            7.554550393251702e-05
        ],
        "align_select": "select avg(Highschooler.gr)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the minimum grade of students who have no friends.",
        "gold_select": "select min(Highschooler.gr)",
        "select_candidates": [
            "select min(Highschooler.gr)",
            "select min(Highschooler.gr), Highschooler.ID",
            "select min(Highschooler.gr), Highschooler.name",
            "select min(Highschooler.gr), t0.c3"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Friend",
        "table_candidates": [
            "Highschooler Friend",
            "Highschooler"
        ],
        "align_scores": [
            0.29327765107154846,
            0.1813277155160904,
            0.00020920438691973686,
            0.0003549748507793993,
            0.0002834363258443773,
            0.0005924300639890134,
            0.0003701845125760883,
            0.000132793138618581
        ],
        "align_select": "select min(Highschooler.gr)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the lowest grade of students who do not have any friends?",
        "gold_select": "select min(Highschooler.gr)",
        "select_candidates": [
            "select min(Highschooler.gr)",
            "select min(Highschooler.gr), Highschooler.ID",
            "select min(Highschooler.gr), Highschooler.name",
            "select Highschooler.gr"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Friend",
        "table_candidates": [
            "Highschooler Friend",
            "Highschooler"
        ],
        "align_scores": [
            0.5532441735267639,
            0.05602733790874481,
            0.00020724881323985755,
            0.00022792570234742016,
            0.0002017720544245094,
            0.000486790610011667,
            0.04518632963299751,
            0.06038320064544678
        ],
        "align_select": "select min(Highschooler.gr)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which professionals live in the state of Indiana or have done treatment on more than 2 treatments? List his or her id, last name and cell phone.",
        "gold_select": "select Professionals.pro_id, Professionals.last_name, Professionals.cell",
        "select_candidates": [
            "select Professionals.pro_id, Professionals.last_name, Professionals.cell",
            "select Treatments.professional_id, Professionals.last_name, Professionals.cell",
            "select Professionals.first_name, Professionals.last_name, Professionals.cell",
            "select Professionals.role_code, Professionals.last_name, Professionals.cell"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-UNION-SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-WHERE-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals Treatments",
        "table_candidates": [
            "Professionals Treatments",
            "Dogs Professionals Treatments",
            "Owners Professionals Treatments",
            "Breeds Professionals Treatments",
            "Treatment_Types Professionals Treatments",
            "Charges Professionals Treatments",
            "Sizes Professionals Treatments"
        ],
        "align_scores": [
            0.1398373544216156,
            0.0033692403230816126,
            0.17820212244987488,
            0.00510832667350769,
            0.00033619359601289034,
            0.00019016892474610358,
            0.0035796118900179863,
            0.0006303161499090493
        ],
        "align_select": "select Professionals.pro_id, Professionals.last_name, Professionals.cell",
        "align_structure": "SELECT-FROM-WHERE-UNION-SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Find the id, last name and cell phone of the professionals who live in the state of Indiana or have performed more than two treatments.",
        "gold_select": "select Professionals.pro_id, Professionals.last_name, Professionals.cell",
        "select_candidates": [
            "select Professionals.pro_id, Professionals.last_name, Professionals.cell",
            "select Treatments.professional_id, Professionals.last_name, Professionals.cell",
            "select Professionals.first_name, Professionals.last_name, Professionals.cell",
            "select Professionals.role_code, Professionals.last_name, Professionals.cell"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-UNION-SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-WHERE-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals Treatments",
        "table_candidates": [
            "Professionals Treatments",
            "Dogs Professionals Treatments",
            "Owners Professionals Treatments",
            "Treatment_Types Professionals Treatments",
            "Breeds Professionals Treatments",
            "Sizes Professionals Treatments",
            "Charges Professionals Treatments"
        ],
        "align_scores": [
            0.6689456701278687,
            0.032509710639715195,
            0.6191973090171814,
            0.02708892710506916,
            0.0007446943200193346,
            0.00032458867644891143,
            0.026422513648867607,
            0.0019006234360858798
        ],
        "align_select": "select Professionals.pro_id, Professionals.last_name, Professionals.cell",
        "align_structure": "SELECT-FROM-WHERE-UNION-SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Which dogs have not cost their owner more than 1000 for treatment? List the dog names.",
        "gold_select": "select Dogs.name",
        "select_candidates": [
            "select Dogs.name",
            "select Dogs.name, Charges.chrg_amt",
            "select Dogs.name, Treatments.dog_id",
            "select Dogs.name, Dogs.age"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "Dogs Treatments",
        "table_candidates": [
            "Charges Dogs Treatments",
            "Charges Sizes Dogs Treatments",
            "Breeds Charges Dogs Treatments",
            "Charges Treatment_Types Dogs Treatments"
        ],
        "align_scores": [
            0.035953231155872345,
            0.6757534146308899,
            0.0010175809729844332,
            0.0012884916504845023,
            0.0005938495742157102,
            0.002083113417029381,
            0.0001349533995380625,
            0.00022261768754106015
        ],
        "align_select": "select Dogs.name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the names of the dogs for which the owner has not spend more than 1000 for treatment?",
        "gold_select": "select Dogs.name",
        "select_candidates": [
            "select Dogs.name",
            "select Dogs.name, Dogs.age",
            "select Dogs.name, Dogs.breed_code",
            "select Dogs.name, Dogs.dob"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "Dogs Treatments",
        "table_candidates": [
            "Charges Dogs Treatments",
            "Dogs Treatments",
            "Breeds Charges Dogs Treatments",
            "Charges Sizes Dogs Treatments",
            "Owners Dogs Treatments",
            "Sizes Dogs Treatments"
        ],
        "align_scores": [
            0.5781142711639404,
            0.9501652717590332,
            0.00017466838471591473,
            0.00016578628856223077,
            0.0013422711053863168,
            0.00038073654286563396,
            0.0044235349632799625,
            0.0004263755108695477
        ],
        "align_select": "select Dogs.name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which professional did not operate any treatment on dogs? List the professional's id, role and email.",
        "gold_select": "select Professionals.pro_id, Professionals.role_code, Professionals.email_adr",
        "select_candidates": [
            "select Professionals.pro_id, Professionals.role_code, Professionals.email_adr",
            "select Professionals.pro_id, Professionals.first_name, Professionals.email_adr",
            "select t6).c0, Professionals.role_code, Professionals.email_adr",
            "select Professionals.pro_id, Professionals.role_code, Professionals.email_adr"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM",
            "SELECT-FROM-EXCEPT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals Treatments",
        "table_candidates": [
            "Professionals Treatments",
            "Dogs Professionals Treatments"
        ],
        "align_scores": [
            0.7315673232078552,
            0.03361792117357254,
            0.0004176783550065011,
            0.00017936850781552494,
            0.00036465818993747234,
            0.00019229992176406085,
            0.7315673232078552,
            0.03361792117357254
        ],
        "align_select": "select Professionals.pro_id, Professionals.role_code, Professionals.email_adr",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM"
    },
    {
        "question": "Give me the id, role and email of the professionals who did not perform any treatment on dogs.",
        "gold_select": "select Professionals.pro_id, Professionals.role_code, Professionals.email_adr",
        "select_candidates": [
            "select Professionals.pro_id, Professionals.role_code, Professionals.email_adr",
            "select Professionals.pro_id, Professionals.first_name, Professionals.email_adr",
            "select t 6.c0, Professionals.role_code, Professionals.email_adr",
            "select Professionals.role_code, Professionals.first_name, Professionals.email_adr"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM",
            "SELECT-FROM-EXCEPT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals Treatments",
        "table_candidates": [
            "Professionals Treatments",
            "Dogs Professionals Treatments",
            "Treatment_Types Professionals Treatments",
            "Owners Professionals Treatments",
            "Breeds Professionals Treatments",
            "Charges Professionals Treatments",
            "Sizes Professionals Treatments"
        ],
        "align_scores": [
            0.7821668982505798,
            0.025736430659890175,
            0.0004504222597461194,
            0.000167655132827349,
            0.000325419387081638,
            0.00014807323168497533,
            0.000581738306209445,
            0.00018191906565334648
        ],
        "align_select": "select Professionals.pro_id, Professionals.role_code, Professionals.email_adr",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM"
    },
    {
        "question": "Which professionals have done at least two treatments? List the professional's id, role, and first name.",
        "gold_select": "select Professionals.pro_id, Professionals.role_code, Professionals.first_name",
        "select_candidates": [
            "select Professionals.pro_id, Professionals.role_code, Professionals.first_name",
            "select Treatments.professional_id, Professionals.role_code, Professionals.first_name",
            "select Professionals.pro_id, Professionals.first_name, Professionals.role_code",
            "select t8.c2, Professionals.role_code, Professionals.first_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals Treatments",
        "table_candidates": [
            "Professionals Treatments",
            "Dogs Professionals Treatments",
            "Treatment_Types Professionals Treatments",
            "Owners Professionals Treatments",
            "Breeds Professionals Treatments",
            "Sizes Professionals Treatments"
        ],
        "align_scores": [
            0.8814200162887573,
            9.754141501616687e-05,
            0.060735464096069336,
            9.713485633255914e-05,
            0.8376802802085876,
            0.00010017408203566447,
            0.0005280465702526271,
            7.14428533683531e-05
        ],
        "align_select": "select Professionals.pro_id, Professionals.role_code, Professionals.first_name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the id, role, and first name of the professionals who have performed two or more treatments?",
        "gold_select": "select Professionals.pro_id, Professionals.role_code, Professionals.first_name",
        "select_candidates": [
            "select Treatments.professional_id, Professionals.role_code, Professionals.first_name",
            "select Professionals.pro_id, Professionals.role_code, Professionals.first_name",
            "select t8.c2, Professionals.role_code, Professionals.first_name",
            "select Sizes.sz_code, Professionals.role_code, Professionals.first_name"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals Treatments",
        "table_candidates": [
            "Professionals Treatments",
            "Dogs Professionals Treatments",
            "Treatment_Types Professionals Treatments",
            "Owners Professionals Treatments",
            "Breeds Professionals Treatments"
        ],
        "align_scores": [
            0.03968615084886551,
            0.00011246442591072991,
            0.8775531649589539,
            0.00011654555419227108,
            0.000657238531857729,
            6.882729940116405e-05,
            0.00058758445084095,
            8.643879118608311e-05
        ],
        "align_select": "select Professionals.pro_id, Professionals.role_code, Professionals.first_name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What is the description of the treatment type that costs the least money in total?",
        "gold_select": "select Treatment_Types.tx_type_desc",
        "select_candidates": [
            "select Treatment_Types.tx_type_desc",
            "select Treatment_Types.tx_type_desc, Treatments.professional_id",
            "select Treatment_Types.tx_type_desc, Treatments.tx_type_code",
            "select Treatment_Types.tx_type_desc, Treatments.dog_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Treatment_Types Treatments",
        "table_candidates": [
            "Charges Treatment_Types Treatments",
            "Treatment_Types Treatments",
            "Charges Sizes Treatment_Types Treatments",
            "Breeds Charges Treatment_Types Treatments",
            "Sizes Treatment_Types Treatments",
            "Breeds Charges Sizes Treatment_Types Treatments"
        ],
        "align_scores": [
            0.994236409664154,
            6.86010971548967e-05,
            0.00014766911044716835,
            5.7775039749685675e-05,
            0.001045792712830007,
            6.119898898759857e-05,
            0.0002083291474264115,
            6.21094586676918e-05
        ],
        "align_select": "select Treatment_Types.tx_type_desc",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Give me the description of the treatment type whose total cost is the lowest.",
        "gold_select": "select Treatment_Types.tx_type_desc",
        "select_candidates": [
            "select Treatment_Types.tx_type_desc",
            "select Treatment_Types.tx_type_desc, Treatments.professional_id",
            "select Treatment_Types.tx_type_desc, Treatments.tx_type_code",
            "select Treatment_Types.tx_type_code, Treatment_Types.tx_type_desc"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-UNION-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Treatment_Types Treatments",
        "table_candidates": [
            "Treatment_Types Treatments",
            "Sizes Treatment_Types Treatments",
            "Charges Treatment_Types Treatments",
            "Breeds Treatment_Types Treatments"
        ],
        "align_scores": [
            0.9955642223358154,
            8.09896519058384e-05,
            0.00012538149894680828,
            5.886540384381078e-05,
            0.0005588971544057131,
            6.172636494738981e-05,
            0.0009783005807548761,
            7.802028994774446e-05
        ],
        "align_select": "select Treatment_Types.tx_type_desc",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Which owner has paid the largest amount of money in total for their dogs? Show the owner id and zip code.",
        "gold_select": "select Owners.owner_id, Owners.zip_code",
        "select_candidates": [
            "select Owners.owner_id, Owners.zip_code",
            "select Sizes.sz_code, Owners.zip_code",
            "select Dogs.owner_id, Owners.zip_code",
            "select Charges.chrg_id, Owners.zip_code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Owners Dogs Treatments",
        "table_candidates": [
            "Charges Owners Dogs",
            "Owners Dogs",
            "Charges Sizes Owners Dogs",
            "Breeds Charges Owners Dogs",
            "Sizes Owners Dogs",
            "Breeds Charges Sizes Owners Dogs",
            "Treatment_Types Owners Dogs",
            "Charges Sizes Dogs"
        ],
        "align_scores": [
            0.9719984531402588,
            9.741741087054834e-05,
            0.0009314113412983716,
            0.00010400652536191046,
            0.3610604703426361,
            0.0001068156270775944,
            0.0032164952717721462,
            0.00011472511687316
        ],
        "align_select": "select Owners.owner_id, Owners.zip_code",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Find the owner id and zip code of the owner who spent the most money in total for his or her dogs.",
        "gold_select": "select Owners.owner_id, Owners.zip_code",
        "select_candidates": [
            "select Owners.owner_id, Owners.zip_code",
            "select Dogs.owner_id, Owners.zip_code",
            "select Sizes.sz_code, Owners.zip_code",
            "select Owners.first_name, Owners.zip_code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Owners Dogs Treatments",
        "table_candidates": [
            "Owners Dogs",
            "Charges Owners Dogs",
            "Sizes Owners Dogs",
            "Breeds Charges Owners Dogs",
            "Treatment_Types Owners Dogs",
            "Breeds Owners Dogs",
            "Breeds Charges Sizes Owners Dogs"
        ],
        "align_scores": [
            0.9783153533935547,
            9.202890214510262e-05,
            0.8121184706687927,
            0.00010219514661002904,
            0.0014360497007146478,
            9.8986471130047e-05,
            0.0005090773920528591,
            0.00012058902211720124
        ],
        "align_select": "select Owners.owner_id, Owners.zip_code",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Which professionals have done at least two types of treatments? List the professional id and cell phone.",
        "gold_select": "select Professionals.pro_id, Professionals.cell",
        "select_candidates": [
            "select Professionals.pro_id, Professionals.cell",
            "select Treatments.professional_id, Professionals.cell",
            "select Professionals.first_name, Professionals.cell",
            "select Professionals.role_code, Professionals.cell"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals Treatments",
        "table_candidates": [
            "Professionals Treatments",
            "Dogs Professionals Treatments",
            "Treatment_Types Professionals Treatments",
            "Owners Professionals Treatments",
            "Breeds Professionals Treatments",
            "Charges Professionals Treatments",
            "Sizes Treatments"
        ],
        "align_scores": [
            0.966315746307373,
            0.0009872583905234933,
            0.3166821300983429,
            0.00040483757038600743,
            0.00035317905712872744,
            8.307993994094431e-05,
            0.42218172550201416,
            0.00047677219845354557
        ],
        "align_select": "select Professionals.pro_id, Professionals.cell",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Find the id and cell phone of the professionals who operate two or more types of treatments.",
        "gold_select": "select Professionals.pro_id, Professionals.cell",
        "select_candidates": [
            "select Professionals.pro_id, Professionals.cell",
            "select Professionals.first_name, Professionals.cell",
            "select Treatments.professional_id, Professionals.cell",
            "select Professionals.role_code, Professionals.cell"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals Treatments",
        "table_candidates": [
            "Professionals Treatments",
            "Dogs Professionals Treatments",
            "Treatment_Types Professionals Treatments",
            "Owners Professionals Treatments",
            "Sizes Professionals Treatments",
            "Charges Professionals Treatments",
            "Breeds Professionals Treatments",
            "Sizes Treatments"
        ],
        "align_scores": [
            0.9875196218490601,
            0.0006098301964811981,
            0.0005119271809235215,
            0.00010394853597972542,
            0.7791499495506287,
            0.0002366907719988376,
            0.7593050599098206,
            0.0002052831114269793
        ],
        "align_select": "select Professionals.pro_id, Professionals.cell",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the first name and last name of the professionals who have done treatment with cost below average?",
        "gold_select": "select distinct Professionals.first_name, Professionals.last_name",
        "select_candidates": [
            "select Professionals.first_name, Professionals.last_name",
            "select distinct Professionals.first_name, Professionals.last_name",
            "select Professionals.role_code, Professionals.last_name",
            "select t6).c2, Professionals.last_name"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals Treatments",
        "table_candidates": [
            "Charges Professionals Treatments",
            "Charges Sizes Professionals Treatments",
            "Breeds Charges Professionals Treatments",
            "Charges Sizes Treatments",
            "Dogs Professionals Treatments"
        ],
        "align_scores": [
            0.963548481464386,
            0.00045636616414412856,
            0.04227857664227486,
            0.00011372369772288948,
            0.0005006120773032308,
            0.00010413703421363607,
            0.0007528566638939083,
            0.0001118214349844493
        ],
        "align_select": "select Professionals.first_name, Professionals.last_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which professionals have operated a treatment that costs less than the average? Give me theor first names and last names.",
        "gold_select": "select distinct Professionals.first_name, Professionals.last_name",
        "select_candidates": [
            "select Professionals.first_name, Professionals.last_name",
            "select distinct Professionals.first_name, Professionals.last_name",
            "select count(*), Professionals.first_name, Professionals.last_name",
            "select Professionals.role_code, Professionals.last_name"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals Treatments",
        "table_candidates": [
            "Charges Professionals Treatments",
            "Charges Sizes Treatments",
            "Charges Dogs Professionals Treatments",
            "Charges Treatment_Types Professionals Treatments",
            "Charges Sizes Professionals Treatments"
        ],
        "align_scores": [
            0.1043781042098999,
            0.00033865575096569955,
            0.017282189801335335,
            0.00016561092343181372,
            0.0005364243988879025,
            0.0001093326645786874,
            0.0005771272117272019,
            0.00011202186578884721
        ],
        "align_select": "select Professionals.first_name, Professionals.last_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List the date of each treatment, together with the first name of the professional who operated it.",
        "gold_select": "select Treatments.dot, Professionals.first_name",
        "select_candidates": [
            "select Treatments.cot, Professionals.first_name",
            "select Treatments.tx_type_code, Professionals.first_name",
            "select Treatments.cot, Professionals.zip_code",
            "select Treatments.cot, Professionals.role_code"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals Treatments",
        "table_candidates": [
            "Professionals Treatments",
            "Dogs Professionals Treatments",
            "Owners Professionals Treatments",
            "Treatment_Types Professionals Treatments",
            "Breeds Professionals Treatments",
            "Charges Professionals Treatments",
            "Sizes Professionals Treatments"
        ],
        "align_scores": [
            0.011287307366728783,
            0.00016291075735352933,
            0.0004966580308973789,
            0.00011496231309138238,
            0.0012185298837721348,
            0.0002559005515649915,
            0.0007716943509876728,
            0.00014114772784523666
        ],
        "align_select": "select Treatments.cot, Professionals.first_name",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What are the date and the operating professional's first name of each treatment?",
        "gold_select": "select Treatments.dot, Professionals.first_name",
        "select_candidates": [
            "select Treatments.cot, Professionals.first_name",
            "select Treatments.tx_type_code, Professionals.first_name",
            "select t7.c6, Professionals.first_name",
            "select Treatments.cot, Professionals.zip_code"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals Treatments",
        "table_candidates": [
            "Professionals Treatments",
            "Dogs Professionals Treatments",
            "Owners Professionals Treatments",
            "Treatment_Types Professionals Treatments",
            "Sizes Professionals Treatments",
            "Charges Professionals Treatments",
            "Breeds Professionals Treatments"
        ],
        "align_scores": [
            0.2056540995836258,
            0.0018527223728597164,
            0.0007315563852898777,
            0.0002830013108905405,
            0.0007645561126992106,
            0.00042908164323307574,
            0.001436406746506691,
            0.0004654435033444315
        ],
        "align_select": "select Treatments.cot, Professionals.first_name",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "List the cost of each treatment and the corresponding treatment type description.",
        "gold_select": "select Treatments.cot, Treatment_Types.tx_type_desc",
        "select_candidates": [
            "select Treatments.cot, Treatment_Types.tx_type_desc",
            "select Treatments.cot, Treatment_Types.tx_type_code_desc",
            "select Treatments.cot, Treatment_Types.tx_type_code_description",
            "select Treatments.cot, t3.c2"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "Treatment_Types Treatments",
        "table_candidates": [
            "Treatment_Types Treatments",
            "Charges Treatment_Types Treatments",
            "Sizes Treatment_Types Treatments",
            "Charges Sizes Treatment_Types Treatments",
            "Breeds Charges Treatment_Types Treatments",
            "Breeds Treatment_Types Treatments",
            "Breeds Charges Sizes Treatment_Types Treatments"
        ],
        "align_scores": [
            0.9952096343040466,
            0.9951620697975159,
            0.9925145506858826,
            0.9893255233764648,
            0.9913562536239624,
            0.9873710870742798,
            0.00042120309080928564,
            0.0006466080085374415
        ],
        "align_select": "select Treatments.cot, Treatment_Types.tx_type_desc",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "What are the cost and treatment type description of each treatment?",
        "gold_select": "select Treatments.cot, Treatment_Types.tx_type_desc",
        "select_candidates": [
            "select Treatments.cot, Treatment_Types.tx_type_desc",
            "select Treatments.cot, Treatment_Types.tx_type_desc, Treatments.tx_type_code",
            "select Treatments.cot, Treatment_Types.tx_type_code_desc",
            "select Treatments.cot, Treatment_Types.tx_type_desc, Treatments.professional_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Treatment_Types Treatments",
        "table_candidates": [
            "Treatment_Types Treatments",
            "Sizes Treatment_Types Treatments",
            "Charges Treatment_Types Treatments",
            "Breeds Treatment_Types Treatments"
        ],
        "align_scores": [
            0.9936995506286621,
            0.00016209912428166717,
            0.00024263594241347164,
            7.815506251063198e-05,
            0.9918752312660217,
            0.00013869443500880152,
            0.00024574031704105437,
            9.32929542614147e-05
        ],
        "align_select": "select Treatments.cot, Treatment_Types.tx_type_desc",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "List each owner's first name, last name, and the size of his for her dog.",
        "gold_select": "select Owners.first_name, Owners.last_name, Dogs.sz_code",
        "select_candidates": [
            "select Owners.first_name, Owners.last_name, Dogs.wt",
            "select Owners.first_name, Owners.last_name, Dogs.sz_code",
            "select Owners.first_name, Owners.last_name, Owners.cell",
            "select Owners.first_name, Owners.last_name, Dogs.wt, Owners.owner_id"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Owners Dogs",
        "table_candidates": [
            "Sizes Owners Dogs",
            "Owners Dogs",
            "Breeds Sizes Owners Dogs",
            "Treatment_Types Owners Dogs",
            "Dogs Owners Dogs"
        ],
        "align_scores": [
            0.8512874841690063,
            0.8452225923538208,
            0.8608680963516235,
            0.9033302068710327,
            0.012597860768437386,
            0.0032350465189665556,
            0.00018082659516949207,
            0.0002836498897522688
        ],
        "align_select": "select Owners.first_name, Owners.last_name, Dogs.wt",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What are each owner's first name, last name, and the size of their dog?",
        "gold_select": "select Owners.first_name, Owners.last_name, Dogs.sz_code",
        "select_candidates": [
            "select Owners.first_name, Owners.last_name, Dogs.wt",
            "select Owners.first_name, Owners.last_name, Owners.cell",
            "select Owners.first_name, Owners.last_name, Dogs.wt, Owners.owner_id",
            "select Owners.first_name, Owners.last_name, Dogs.sz_code"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Owners Dogs",
        "table_candidates": [
            "Sizes Owners Dogs",
            "Owners Dogs",
            "Breeds Sizes Owners Dogs",
            "Treatment_Types Owners Dogs",
            "Dogs Owners Dogs"
        ],
        "align_scores": [
            0.9925225377082825,
            0.9919597506523132,
            0.01132203545421362,
            0.0022585790138691664,
            0.0002385701227467507,
            0.00031802256125956774,
            0.9932112693786621,
            0.9941065311431885
        ],
        "align_select": "select Owners.first_name, Owners.last_name, Dogs.wt",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "List the names of the dogs of the rarest breed and the treatment dates of them.",
        "gold_select": "select Dogs.name, Treatments.dot",
        "select_candidates": [
            "select Dogs.name, Treatments.tx_type_code",
            "select Dogs.name, Treatments.cot",
            "select Dogs.name, Treatments.dog_id2",
            "select Dogs.name, Treatments.dog_id0"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "Dogs Treatments",
        "table_candidates": [
            "Dogs Treatments",
            "Breeds Dogs Treatments",
            "Breeds Charges Dogs Treatments",
            "Sizes Dogs Treatments",
            "Charges Dogs Treatments",
            "Breeds Charges Sizes Dogs Treatments",
            "Breeds Charges Treatment_Types Dogs Treatments"
        ],
        "align_scores": [
            0.0006953855627216399,
            0.0007624795543961227,
            0.6382157206535339,
            0.6888063549995422,
            0.0004591308534145355,
            0.0003241684171371162,
            0.0004223310970701277,
            0.00029444575193338096
        ],
        "align_select": "select Dogs.name, Treatments.cot",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Which dogs are of the rarest breed? Show their names and treatment dates.",
        "gold_select": "select Dogs.name, Treatments.dot",
        "select_candidates": [
            "select Dogs.name, Treatments.tx_type_code",
            "select Dogs.name, Treatments.cot",
            "select Dogs.name, Treatments.dog_id2",
            "select Dogs.name, t7.c6"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "Dogs Treatments",
        "table_candidates": [
            "Breeds Dogs Treatments",
            "Dogs Treatments",
            "Breeds Charges Dogs Treatments",
            "Charges Dogs Treatments",
            "Sizes Dogs Treatments",
            "Treatment_Types Dogs Treatments",
            "Breeds Charges Sizes Dogs Treatments"
        ],
        "align_scores": [
            0.0007199898245744407,
            0.000821699679363519,
            0.2039809226989746,
            0.12860818207263947,
            0.0006214926252141595,
            0.0004143739934079349,
            0.0005677473964169621,
            0.0004605817957781255
        ],
        "align_select": "select Dogs.name, Treatments.cot",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What are the arriving date and the departing date of the dogs who have gone through a treatment?",
        "gold_select": "select distinct Dogs.date_arr, Dogs.date_departed",
        "select_candidates": [
            "select Dogs.date_arr, Dogs.date_departed",
            "select Dogs.dog_id, Dogs.date_departed",
            "select Dogs.wt, Dogs.date_arr, Dogs.date_departed",
            "select Dogs.owner_id, Dogs.date_departed"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Dogs Treatments",
        "table_candidates": [
            "Dogs Treatments",
            "Dogs Professionals Treatments"
        ],
        "align_scores": [
            0.3114772439002991,
            0.015316332690417767,
            0.0008029151940718293,
            0.00021474866662174463,
            0.00024135541752912104,
            0.00022440202883444726,
            0.0007202568231150508,
            0.00031257409136742353
        ],
        "align_select": "select Dogs.date_arr, Dogs.date_departed",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "Find the arriving date and the departing date of the dogs that received a treatment.",
        "gold_select": "select distinct Dogs.date_arr, Dogs.date_departed",
        "select_candidates": [
            "select Dogs.date_arr, Dogs.date_departed",
            "select Dogs.dog_id, Dogs.date_departed",
            "select Treatments.cot, t7.c6",
            "select distinct Dogs.date_arr, Dogs.date_departed"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Dogs Treatments",
        "table_candidates": [
            "Dogs Treatments",
            "Dogs Professionals Treatments"
        ],
        "align_scores": [
            0.5617464184761047,
            0.00011313206778140739,
            0.0006641048239544034,
            7.080585055518895e-05,
            0.0009045294136740267,
            8.662370237288997e-05,
            0.012075314298272133,
            6.73704271321185e-05
        ],
        "align_select": "select Dogs.date_arr, Dogs.date_departed",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "List the emails of the professionals who live in the state of Hawaii or the state of Wisconsin.",
        "gold_select": "select Professionals.email_adr",
        "select_candidates": [
            "select Professionals.email_adr",
            "select Professionals.email_adr, Professionals.hp",
            "select Professionals.email_adr (or Professionals.hp)",
            "select Professionals.email_adr, Professionals.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals",
        "table_candidates": [
            "Professionals",
            "Dogs Professionals",
            "Professionals Treatments",
            "Owners Professionals"
        ],
        "align_scores": [
            0.9881060123443604,
            0.15565361082553864,
            0.0002309735573362559,
            0.00010860779002541676,
            0.01972016878426075,
            0.0010925844544544816,
            0.00017264332564081997,
            8.750684355618432e-05
        ],
        "align_select": "select Professionals.email_adr",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the emails of the professionals living in either the state of Hawaii or the state of Wisconsin?",
        "gold_select": "select Professionals.email_adr",
        "select_candidates": [
            "select Professionals.email_adr",
            "select Professionals.email_adr, Professionals.hp",
            "select Professionals.email_adr, Professionals.last_name",
            "select Professionals.email_adr (or Professionals.hp)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals",
        "table_candidates": [
            "Professionals",
            "Dogs Professionals",
            "Professionals Treatments"
        ],
        "align_scores": [
            0.9921519756317139,
            0.011396382935345173,
            0.00021603961067739874,
            8.980711572803557e-05,
            0.0001466993271606043,
            7.223787542898208e-05,
            0.03373318165540695,
            0.00035997832310386
        ],
        "align_select": "select Professionals.email_adr",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the arriving date and the departing date of all the dogs?",
        "gold_select": "select Dogs.date_arr, Dogs.date_departed",
        "select_candidates": [
            "select Dogs.date_arr, Dogs.date_departed",
            "select Dogs.dog_id, Dogs.date_departed",
            "select Dogs.date_arr, Dogs.date_ad",
            "select Dogs.owner_id, Dogs.date_departed"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Dogs",
        "table_candidates": [
            "Dogs"
        ],
        "align_scores": [
            0.6982675194740295,
            0.00013316074910108,
            0.00043096067383885384,
            7.622950943186879e-05,
            0.9421955347061157,
            0.00011890991299878806,
            0.0005937975947745144,
            8.529685874236748e-05
        ],
        "align_select": "select Dogs.date_arr, Dogs.date_ad",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "List the arrival date and the departure date for all the dogs.",
        "gold_select": "select Dogs.date_arr, Dogs.date_departed",
        "select_candidates": [
            "select Dogs.date_arr, Dogs.date_departed",
            "select Dogs.dog_id, Dogs.date_departed",
            "select Dogs.owner_id, Dogs.date_departed",
            "select Dogs.date_arr, Dogs.date_ad"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Dogs",
        "table_candidates": [
            "Dogs"
        ],
        "align_scores": [
            0.5556846857070923,
            0.000102341226011049,
            0.0003840358695015311,
            6.764717545593157e-05,
            0.0004444483492989093,
            8.675572462379932e-05,
            0.8527349829673767,
            0.00013022861094214022
        ],
        "align_select": "select Dogs.date_arr, Dogs.date_ad",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "Which professionals live in a city containing the substring 'West'? List his or her role, street, city and state.",
        "gold_select": "select Professionals.role_code, Professionals.st, Professionals.city, Professionals.state",
        "select_candidates": [
            "select Professionals.role_code, Professionals.st, Professionals.city, Professionals.state",
            "select Professionals.role_code, Professionals.first_name, Professionals.st, Professionals.city, Professionals.state",
            "select Professionals.pro_id, Professionals.role_code, Professionals.st, Professionals.city, Professionals.state",
            "select Professionals.role_code, Professionals.st, Professionals.city and Professionals.state"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals",
        "table_candidates": [
            "Professionals",
            "Dogs Professionals",
            "Professionals Treatments",
            "Owners Professionals",
            "Treatment_Types Professionals",
            "Charges Professionals"
        ],
        "align_scores": [
            0.004684051498770714,
            0.00012047052587149665,
            0.000553058460354805,
            0.00011516858648974448,
            0.0003558052412699908,
            9.236015466740355e-05,
            0.001646272954531014,
            0.0001091634840122424
        ],
        "align_select": "select Professionals.role_code, Professionals.st, Professionals.city, Professionals.state",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the role, street, city and state of the professionals living in a city that contains the substring 'West'.",
        "gold_select": "select Professionals.role_code, Professionals.st, Professionals.city, Professionals.state",
        "select_candidates": [
            "select Professionals.role_code, Professionals.st, Professionals.city, Professionals.state",
            "select Professionals.role_code, Professionals.first_name, Professionals.st, Professionals.city, Professionals.state",
            "select Professionals.role_code, Professionals.st, Professionals.city, Professionals.state",
            "select Professionals.role_code, Professionals.st, Professionals.city, Professionals.state"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals",
        "table_candidates": [
            "Professionals"
        ],
        "align_scores": [
            0.890981912612915,
            9.448639320908114e-05,
            0.0005531017086468637,
            0.0001465613313484937,
            0.890981912612915,
            9.448639320908114e-05,
            0.890981912612915,
            9.448639320908114e-05
        ],
        "align_select": "select Professionals.role_code, Professionals.st, Professionals.city, Professionals.state",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which owners live in the state whose name contains the substring 'North'? List his first name, last name and email.",
        "gold_select": "select Owners.first_name, Owners.last_name, Owners.em_adr",
        "select_candidates": [
            "select Owners.first_name, Owners.last_name, Owners.hp",
            "select Owners.first_name, Owners.last_name, Owners.em_adr",
            "select Owners.first_name, Owners.last_name, t4.c 8",
            "select Owners.first_name, Owners.last_name and Owners.hp"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Owners",
        "table_candidates": [
            "Owners"
        ],
        "align_scores": [
            0.0005070120678283274,
            8.457143121631816e-05,
            0.9804378747940063,
            0.00013569070142693818,
            0.0005628933431580663,
            9.059654985321686e-05,
            0.0005421128589659929,
            8.433771290583536e-05
        ],
        "align_select": "select Owners.first_name, Owners.last_name, Owners.em_adr",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the first name, last name and email of the owners living in a state whose name contains the substring 'North'.",
        "gold_select": "select Owners.first_name, Owners.last_name, Owners.em_adr",
        "select_candidates": [
            "select Owners.first_name, Owners.last_name, Owners.hp",
            "select Owners.first_name, Owners.last_name, Owners.em_adr",
            "select Owners.first_name, Owners.last_name, t4.c 8",
            "select Owners.first_name, Owners.last_name, Owners.owner_id"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Owners",
        "table_candidates": [
            "Owners"
        ],
        "align_scores": [
            0.00048153268289752305,
            0.00010251878848066553,
            0.9777505397796631,
            0.00010056044993689284,
            0.00040144831291399896,
            0.00010850386024685577,
            0.00019675024668686092,
            0.0001087959244614467
        ],
        "align_select": "select Owners.first_name, Owners.last_name, Owners.em_adr",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How much does the most recent treatment cost?",
        "gold_select": "select Treatments.cot",
        "select_candidates": [
            "select Treatments.cot",
            "select max(Treatments.cot)",
            "select t8.c5",
            "select max(t8.c5)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Treatments",
        "table_candidates": [
            "Charges Treatments",
            "Dogs Treatments",
            "Treatments",
            "Professionals Treatments",
            "Sizes Treatments",
            "Charges"
        ],
        "align_scores": [
            0.013021220453083515,
            6.984258652664721e-05,
            9.350440086564049e-05,
            7.334187102969736e-05,
            0.0007451266865245998,
            6.639828643528745e-05,
            0.00010869523248402402,
            6.688693247269839e-05
        ],
        "align_select": "select Treatments.cot",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Show me the cost of the most recently performed treatment.",
        "gold_select": "select Treatments.cot",
        "select_candidates": [
            "select Treatments.cot",
            "select Charges.chrg_amt",
            "select t8.c5",
            "select Charges.chrg_id, Charges.chrg_amt"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Treatments",
        "table_candidates": [
            "Charges Treatments",
            "Breeds Charges Treatments",
            "Charges"
        ],
        "align_scores": [
            0.9119220972061157,
            7.248851034091786e-05,
            0.9306580424308777,
            7.22507611499168e-05,
            0.0012211976572871208,
            6.799708353355527e-05,
            0.0002863643749151379,
            6.261094677029178e-05
        ],
        "align_select": "select Treatments.cot",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "How many professionals did not operate any treatment on dogs?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Professionals.st",
            "select count(*), Professionals.st, Professionals.city",
            "select count(*), Professionals.role_code, Professionals.first_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals",
        "table_candidates": [
            "Professionals Treatments",
            "Dogs Professionals Treatments",
            "Treatment_Types Professionals Treatments",
            "Owners Professionals Treatments",
            "Charges Professionals Treatments",
            "Sizes Professionals Treatments",
            "Breeds Professionals Treatments"
        ],
        "align_scores": [
            0.9880517721176147,
            0.015024800784885883,
            0.00036289525451138616,
            0.00023800395138096064,
            0.00015046005137264729,
            0.00010544283577473834,
            0.0001427636161679402,
            9.832510841079056e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the number of professionals who have not treated any dogs.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Professionals.role_code, Professionals.st",
            "select count(*), Professionals.role_code, Professionals.first_name",
            "select count(*), Professionals.first_name, Professionals.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals",
        "table_candidates": [
            "Professionals Treatments",
            "Dogs Professionals Treatments",
            "Treatment_Types Professionals Treatments",
            "Owners Professionals Treatments",
            "Charges Professionals Treatments",
            "Breeds Professionals Treatments"
        ],
        "align_scores": [
            0.9819172024726868,
            0.03597159683704376,
            0.0001424025249434635,
            0.00011151433136546984,
            0.00015319180965889245,
            0.00010012671555159613,
            0.0005045018042437732,
            0.0006625222158618271
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List the dog name, age and weight of the dogs who have been abandoned? 1 stands for yes, and 0 stands for no.",
        "gold_select": "select Dogs.name, Dogs.age, Dogs.wt",
        "select_candidates": [
            "select Dogs.name, Dogs.age, Dogs.wt",
            "select distinct Dogs.name, Dogs.age, Dogs.wt",
            "select Dogs.name, Dogs.age, Dogs.wt, Dogs.aband_yn",
            "select Dogs.dog_id, Dogs.name, Dogs.age, Dogs.wt"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Dogs",
        "table_candidates": [
            "Dogs",
            "Dogs Professionals",
            "Dogs Treatments",
            "Dogs Sizes Treatment_Types"
        ],
        "align_scores": [
            0.28092360496520996,
            0.06483370065689087,
            0.017873147502541542,
            0.00030664599034935236,
            0.0004246463067829609,
            0.0002137470874004066,
            0.0003059644077438861,
            0.0003218959318473935
        ],
        "align_select": "select Dogs.name, Dogs.age, Dogs.wt",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the dog name, age and weight of the dogs that were abandoned? Note that 1 stands for yes, and 0 stands for no in the tables.",
        "gold_select": "select Dogs.name, Dogs.age, Dogs.wt",
        "select_candidates": [
            "select Dogs.name, Dogs.age, Dogs.wt",
            "select distinct Dogs.name, Dogs.age, Dogs.wt",
            "select Dogs.name, Dogs.age, Dogs.wt, Dogs.aband_yn",
            "select Dogs.name, Dogs.age, Dogs.wt, Dogs.dog_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Dogs",
        "table_candidates": [
            "Dogs"
        ],
        "align_scores": [
            0.604292094707489,
            0.0016469979891553521,
            0.007176263723522425,
            0.00011813190940301865,
            0.0004729626525659114,
            0.00011836283374577761,
            0.00019801611779257655,
            9.387301543029025e-05
        ],
        "align_select": "select Dogs.name, Dogs.age, Dogs.wt",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How much does each charge type costs? List both charge type and amount.",
        "gold_select": "select Charges.chrg_type, Charges.chrg_amt",
        "select_candidates": [
            "select Charges.chrg_type, Charges.chrg_amt",
            "select Charges.chrg_type, sum(Charges.chrg_amt)",
            "select Charges.chrg_type, Charges.chrg_amt.",
            "select Charges.chrg_type.c1, Charges.chrg_amt"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "Charges",
        "table_candidates": [
            "Charges"
        ],
        "align_scores": [
            0.994371771812439,
            0.0007706243777647614,
            0.9929617047309875,
            0.00019399772281758487,
            0.006221062038093805,
            0.00030340408557094634,
            0.00021984265185892582,
            0.00012622782378457487
        ],
        "align_select": "select Charges.chrg_type, Charges.chrg_amt",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "List each charge type and its amount.",
        "gold_select": "select Charges.chrg_type, Charges.chrg_amt",
        "select_candidates": [
            "select Charges.chrg_type, Charges.chrg_amt",
            "select Charges.chrg_type, sum(Charges.chrg_amt)",
            "select Charges.chrg_type, amount(Charges.chrg_amt)",
            "select Charges.chrg_type, max(Charges.chrg_amt)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "Charges",
        "table_candidates": [
            "Charges"
        ],
        "align_scores": [
            0.9946972131729126,
            0.0002003241825150326,
            0.991630494594574,
            0.0001264131860807538,
            0.00045443655108101666,
            0.00012539082672446966,
            0.005053638946264982,
            0.00014400410873349756
        ],
        "align_select": "select Charges.chrg_type, Charges.chrg_amt",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "How much does the most expensive charge type costs?",
        "gold_select": "select max(Charges.chrg_amt)",
        "select_candidates": [
            "select Charges.chrg_type",
            "select Charges.chrg_type, Charges.chrg_amt",
            "select Charges.chrg_type, sum(Charges.chrg_amt)",
            "select Charges.chrg_type, max(Charges.chrg_amt)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "Charges",
        "table_candidates": [
            "Charges"
        ],
        "align_scores": [
            0.9839788675308228,
            0.9936380982398987,
            0.00046596379252150655,
            0.0006001867586746812,
            0.00023874126782175153,
            0.0012367453891783953,
            0.00010065131209557876,
            0.00010440271580591798
        ],
        "align_select": "select Charges.chrg_type",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What is the charge amount of the most expensive charge type?",
        "gold_select": "select max(Charges.chrg_amt)",
        "select_candidates": [
            "select Charges.chrg_amt",
            "select Charges.chrg_id, Charges.chrg_amt",
            "select Charges.chrg_id, Charges.chrg_type, Charges.chrg_amt",
            "select Charges.chrg_id, Charges.chrg_type, max(Charges.chrg_amt)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "Charges",
        "table_candidates": [
            "Charges",
            "Charges Treatments",
            "Charges Treatment_Types Owners",
            "Charges Sizes",
            "Charges Dogs"
        ],
        "align_scores": [
            0.9739945530891418,
            0.9935736060142517,
            0.00035524601116776466,
            0.0025227677542716265,
            0.00017794947780203074,
            0.00017760976334102452,
            0.00015341312973760068,
            0.00020989270706195384
        ],
        "align_select": "select Charges.chrg_amt",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "List the email, cell phone and home phone of all the professionals.",
        "gold_select": "select Professionals.email_adr, Professionals.cell, Professionals.hp",
        "select_candidates": [
            "select Professionals.email_adr, Professionals.cell, Professionals.hp",
            "select Professionals.email_adr, Professionals.cell, Professionals.role_code1",
            "select Professionals.email_adr, Professionals.hp, Professionals.cell",
            "select Professionals.email_adr, Professionals.cell, Professionals.role_code3"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals",
        "table_candidates": [
            "Professionals"
        ],
        "align_scores": [
            0.4244670867919922,
            0.00011852819443447515,
            0.0005493841017596424,
            0.00015532811812590808,
            0.39863842725753784,
            0.00011691622785292566,
            0.0006434080423787236,
            0.00017142192518804222
        ],
        "align_select": "select Professionals.email_adr, Professionals.cell, Professionals.hp",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What are the email, cell phone and home phone of each professional?",
        "gold_select": "select Professionals.email_adr, Professionals.cell, Professionals.hp",
        "select_candidates": [
            "select Professionals.email_adr, Professionals.cell, Professionals.hp",
            "select Professionals.email_adr, Professionals.hp, Professionals.cell",
            "select Professionals.email_adr, Professionals.cell, Professionals.role_code1",
            "select Professionals.email_adr, Professionals.cell, Professionals.role_code3"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals",
        "table_candidates": [
            "Professionals"
        ],
        "align_scores": [
            0.9627673029899597,
            0.0001399666944053024,
            0.9593014717102051,
            0.00012723337567877024,
            0.0007230688352137804,
            7.884826482040808e-05,
            0.0008870076271705329,
            8.233258995460346e-05
        ],
        "align_select": "select Professionals.email_adr, Professionals.cell, Professionals.hp",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What are all the possible breed type and size type combinations?",
        "gold_select": "select distinct Dogs.breed_code, Dogs.sz_code",
        "select_candidates": [
            "select Sizes.size_description, t2.c2",
            "select Sizes.size_description, Sizes.sz_code",
            "select possible Sizes.size_description, t2.c2",
            "select Sizes.size_description, t2.c3"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Dogs",
        "table_candidates": [
            "Breeds Sizes",
            "Sizes Dogs",
            "Sizes Owners"
        ],
        "align_scores": [
            0.0009564761421643198,
            0.00022015774447936565,
            0.00028380705043673515,
            0.00011930333857890218,
            0.0006461392040364444,
            0.00019303527369629592,
            0.0010188091546297073,
            0.00025979403289966285
        ],
        "align_select": "select Sizes.size_description, t2.c2",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "Find the distinct breed type and size type combinations for dogs.",
        "gold_select": "select distinct Dogs.breed_code, Dogs.sz_code",
        "select_candidates": [
            "select distinct Dogs.breed_code, Dogs.sz_code",
            "select distinct t5.cbreed_type, Dogs.sz_code",
            "select distinct Dogs.owner_id, Dogs.sz_code",
            "select distinct Dogs.breed_code, Dogs.sz_code, Dogs.owner_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Dogs",
        "table_candidates": [
            "Dogs",
            "Breeds Sizes Dogs",
            "Sizes Dogs",
            "Breeds Charges Sizes Dogs",
            "Charges Sizes Dogs",
            "Treatment_Types Dogs",
            "Breeds Sizes Owners Dogs",
            "Owners Dogs"
        ],
        "align_scores": [
            0.9913303852081299,
            0.00017521651170682162,
            0.0004479858325794339,
            0.00011034779890906066,
            0.0005275166477076709,
            0.0001375808787997812,
            0.00010747052147053182,
            8.812248415779322e-05
        ],
        "align_select": "select distinct Dogs.breed_code, Dogs.sz_code",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "List the first name of all the professionals along with the description of the treatment they have done.",
        "gold_select": "select distinct Professionals.first_name, Treatment_Types.tx_type_desc",
        "select_candidates": [
            "select Professionals.first_name, Treatments.tx_type_code",
            "select Professionals.first_name, Treatments.dog_id",
            "select Professionals.first_name, Treatments.dot",
            "select Professionals.first_name, Treatments.cot"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Treatment_Types Professionals Treatments",
        "table_candidates": [
            "Sizes Professionals Treatments",
            "Sizes Treatment_Types Professionals Treatments",
            "Sizes Owners Professionals Treatments",
            "Sizes Treatments",
            "Treatment_Types Professionals Treatments",
            "Dogs Professionals Treatments",
            "Professionals Treatments"
        ],
        "align_scores": [
            0.10966623574495316,
            0.8234575986862183,
            0.0006839291891083121,
            0.0012303008697926998,
            0.09630045294761658,
            0.20840078592300415,
            0.24289275705814362,
            0.6506560444831848
        ],
        "align_select": "select Professionals.first_name, Treatments.tx_type_code",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "What are each professional's first name and description of the treatment they have performed?",
        "gold_select": "select distinct Professionals.first_name, Treatment_Types.tx_type_desc",
        "select_candidates": [
            "select Professionals.first_name, Sizes.size_description",
            "select Professionals.first_name, Treatments.cot",
            "select Professionals.first_name, Treatments.tx_type_code",
            "select Professionals.first_name, t8.c1"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Treatment_Types Professionals Treatments",
        "table_candidates": [
            "Sizes Professionals Treatments",
            "Sizes Treatment_Types Professionals Treatments",
            "Breeds Sizes Professionals Treatments",
            "Dogs Professionals Treatments",
            "Sizes Treatments"
        ],
        "align_scores": [
            0.015093027614057064,
            0.02884499542415142,
            0.3078363537788391,
            0.5421767234802246,
            0.02181556262075901,
            0.24371188879013062,
            0.0036907834000885487,
            0.002074426505714655
        ],
        "align_select": "select Professionals.first_name, Treatments.cot",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "Which professionals live in a city containing the substring 'West'? List his or her role, street, city and state.",
        "gold_select": "select Professionals.role_code, Professionals.st, Professionals.city, Professionals.state",
        "select_candidates": [
            "select Professionals.role_code, Professionals.st, Professionals.city, Professionals.state",
            "select Professionals.role_code, Professionals.first_name, Professionals.st, Professionals.city, Professionals.state",
            "select Professionals.professional_id, Professionals.role_code, Professionals.st, Professionals.city, Professionals.state",
            "select Professionals.role_code, Professionals.st, Professionals.city and Professionals.state"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals",
        "table_candidates": [
            "Professionals"
        ],
        "align_scores": [
            0.004684051498770714,
            0.00012047052587149665,
            0.000553058460354805,
            0.00011516858648974448,
            0.0003113843558821827,
            0.00010251362255075946,
            0.001646272954531014,
            0.0001091634840122424
        ],
        "align_select": "select Professionals.role_code, Professionals.st, Professionals.city, Professionals.state",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the role, street, city and state of the professionals living in a city that contains the substring 'West'.",
        "gold_select": "select Professionals.role_code, Professionals.st, Professionals.city, Professionals.state",
        "select_candidates": [
            "select Professionals.role_code, Professionals.st, Professionals.city, Professionals.state",
            "select Professionals.role_code, Professionals.first_name, Professionals.st, Professionals.city, Professionals.state",
            "select Professionals.role_code, Professionals.st, Professionals.city, Professionals.state",
            "select t8.c1, Professionals.st, Professionals.city, Professionals.state"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals",
        "table_candidates": [
            "Professionals"
        ],
        "align_scores": [
            0.890981912612915,
            9.448639320908114e-05,
            0.0005531017086468637,
            0.0001465613313484937,
            0.890981912612915,
            9.448639320908114e-05,
            0.00045202122419141233,
            8.653793338453397e-05
        ],
        "align_select": "select Professionals.role_code, Professionals.st, Professionals.city, Professionals.state",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List the dog name, age and weight of the dogs who have been abandoned? 1 stands for yes, and 0 stands for no.",
        "gold_select": "select Dogs.name, Dogs.age, Dogs.wt",
        "select_candidates": [
            "select Dogs.name, Dogs.age, Dogs.wt",
            "select distinct Dogs.name, Dogs.age, Dogs.wt",
            "select Dogs.name, Dogs.age, Dogs.wt, Dogs.abandoned_yn",
            "select Dogs.dog_id, Dogs.name, Dogs.age, Dogs.wt"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Dogs",
        "table_candidates": [
            "Dogs"
        ],
        "align_scores": [
            0.28092360496520996,
            0.06483370065689087,
            0.017873147502541542,
            0.00030664599034935236,
            0.0003705451381392777,
            0.00021077632845845073,
            0.0003059644077438861,
            0.0003218959318473935
        ],
        "align_select": "select Dogs.name, Dogs.age, Dogs.wt",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the dog name, age and weight of the dogs that were abandoned? Note that 1 stands for yes, and 0 stands for no in the tables.",
        "gold_select": "select Dogs.name, Dogs.age, Dogs.wt",
        "select_candidates": [
            "select Dogs.name, Dogs.age, Dogs.wt",
            "select distinct Dogs.name, Dogs.age, Dogs.wt",
            "select Dogs.name, Dogs.age, Dogs.wt, Dogs.abandoned_yn",
            "select Dogs.dog_id, Dogs.name, Dogs.age, Dogs.wt"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Dogs",
        "table_candidates": [
            "Dogs"
        ],
        "align_scores": [
            0.604292094707489,
            0.0016469979891553521,
            0.007176263723522425,
            0.00011813190940301865,
            0.0004253427032381296,
            0.0001243145961780101,
            0.0002986523904837668,
            0.00016749950009398162
        ],
        "align_select": "select Dogs.name, Dogs.age, Dogs.wt",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which professionals live in the state of Indiana or have done treatment on more than 2 treatments? List his or her id, last name and cell phone.",
        "gold_select": "select Professionals.professional_id, Professionals.last_name, Professionals.cell_number",
        "select_candidates": [
            "select Professionals.professional_id, Professionals.last_name, Professionals.cell_number",
            "select Professionals.first_name, Professionals.last_name, Professionals.cell_number",
            "select Treatments.pro_id, Professionals.last_name, Professionals.cell_number",
            "select Professionals.role_code, Professionals.last_name, Professionals.cell_number"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-UNION-SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-WHERE-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals Treatments",
        "table_candidates": [
            "Professionals Treatments",
            "Dogs Professionals Treatments",
            "Owners Professionals Treatments",
            "Breeds Professionals Treatments",
            "Treatment_Types Professionals Treatments",
            "Charges Professionals Treatments",
            "Sizes Professionals Treatments"
        ],
        "align_scores": [
            0.175389364361763,
            0.003943596966564655,
            0.00023080251412466168,
            0.00015498076390940696,
            0.05645584687590599,
            0.00333237461745739,
            0.003560319310054183,
            0.0005899069947190583
        ],
        "align_select": "select Professionals.professional_id, Professionals.last_name, Professionals.cell_number",
        "align_structure": "SELECT-FROM-WHERE-UNION-SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Find the id, last name and cell phone of the professionals who live in the state of Indiana or have performed more than two treatments.",
        "gold_select": "select Professionals.professional_id, Professionals.last_name, Professionals.cell_number",
        "select_candidates": [
            "select Professionals.professional_id, Professionals.last_name, Professionals.cell_number",
            "select Treatments.pro_id, Professionals.last_name, Professionals.cell_number",
            "select Professionals.first_name, Professionals.last_name, Professionals.cell_number",
            "select Professionals.role_code, Professionals.last_name, Professionals.cell_number"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-UNION-SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-WHERE-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals Treatments",
        "table_candidates": [
            "Professionals Treatments",
            "Dogs Professionals Treatments",
            "Owners Professionals Treatments",
            "Breeds Professionals Treatments",
            "Treatment_Types Professionals Treatments",
            "Sizes Professionals Treatments",
            "Charges Professionals Treatments"
        ],
        "align_scores": [
            0.7642930746078491,
            0.04309571906924248,
            0.41403788328170776,
            0.023047689348459244,
            0.0005466879811137915,
            0.00027240352937951684,
            0.039970651268959045,
            0.002187773585319519
        ],
        "align_select": "select Professionals.professional_id, Professionals.last_name, Professionals.cell_number",
        "align_structure": "SELECT-FROM-WHERE-UNION-SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Which professional did not operate any treatment on dogs? List the professional's id, role and email.",
        "gold_select": "select Professionals.professional_id, Professionals.role_code, Professionals.email_adr",
        "select_candidates": [
            "select Professionals.professional_id, Professionals.role_code, Professionals.email_adr",
            "select Professionals.professional_id, Professionals.first_name, Professionals.email_adr",
            "select Professionals.professional_id, Professionals.role_code, Professionals.email_adr",
            "select Professionals.professional_id, Professionals.street, Professionals.email_adr"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM",
            "SELECT-FROM-EXCEPT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals Treatments",
        "table_candidates": [
            "Professionals Treatments",
            "Dogs Professionals Treatments"
        ],
        "align_scores": [
            0.7235509753227234,
            0.03227827697992325,
            0.00041824369691312313,
            0.00018279712821822613,
            0.7235509753227234,
            0.03227827697992325,
            0.0005671089165844023,
            0.0002126700710505247
        ],
        "align_select": "select Professionals.professional_id, Professionals.role_code, Professionals.email_adr",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM"
    },
    {
        "question": "Give me the id, role and email of the professionals who did not perform any treatment on dogs.",
        "gold_select": "select Professionals.professional_id, Professionals.role_code, Professionals.email_adr",
        "select_candidates": [
            "select Professionals.professional_id, Professionals.role_code, Professionals.email_adr",
            "select Professionals.professional_id, Professionals.first_name, Professionals.email_adr",
            "select Professionals.role_code, Professionals.first_name, Professionals.email_adr",
            "select Professionals.professional_id, Professionals.role_code, Professionals.email_adr"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM",
            "SELECT-FROM-EXCEPT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals Treatments",
        "table_candidates": [
            "Professionals Treatments",
            "Dogs Professionals Treatments"
        ],
        "align_scores": [
            0.7706296443939209,
            0.02538399212062359,
            0.00047955839545466006,
            0.0001652965001994744,
            0.000581738306209445,
            0.00018191906565334648,
            0.7706296443939209,
            0.02538399212062359
        ],
        "align_select": "select Professionals.professional_id, Professionals.role_code, Professionals.email_adr",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM"
    },
    {
        "question": "Which professionals have done at least two treatments? List the professional's id, role, and first name.",
        "gold_select": "select Professionals.professional_id, Professionals.role_code, Professionals.first_name",
        "select_candidates": [
            "select Professionals.professional_id, Professionals.role_code, Professionals.first_name",
            "select Treatments.pro_id, Professionals.role_code, Professionals.first_name",
            "select Professionals.professional_id, Professionals.first_name, Professionals.role_code",
            "select t8.c2, Professionals.role_code, Professionals.first_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals Treatments",
        "table_candidates": [
            "Professionals Treatments",
            "Dogs Professionals Treatments",
            "Treatment_Types Professionals Treatments",
            "Owners Professionals Treatments",
            "Breeds Professionals Treatments",
            "Sizes Professionals Treatments"
        ],
        "align_scores": [
            0.9027708172798157,
            9.802535350900143e-05,
            0.17679835855960846,
            9.982650954043493e-05,
            0.8869608640670776,
            0.00010073686280520633,
            0.0005280465702526271,
            7.14428533683531e-05
        ],
        "align_select": "select Professionals.professional_id, Professionals.role_code, Professionals.first_name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the id, role, and first name of the professionals who have performed two or more treatments?",
        "gold_select": "select Professionals.professional_id, Professionals.role_code, Professionals.first_name",
        "select_candidates": [
            "select Treatments.pro_id, Professionals.role_code, Professionals.first_name",
            "select Professionals.professional_id, Professionals.role_code, Professionals.first_name",
            "select t8.c2, Professionals.role_code, Professionals.first_name",
            "select Sizes.size_code, Professionals.role_code, Professionals.first_name"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals Treatments",
        "table_candidates": [
            "Professionals Treatments",
            "Dogs Professionals Treatments",
            "Treatment_Types Professionals Treatments",
            "Owners Professionals Treatments",
            "Breeds Professionals Treatments",
            "Sizes Professionals Treatments"
        ],
        "align_scores": [
            0.07865126430988312,
            0.00010909210686804727,
            0.9089066982269287,
            0.00011767186515498906,
            0.000657238531857729,
            6.882729940116405e-05,
            0.00031692811171524227,
            7.058034680085257e-05
        ],
        "align_select": "select Professionals.professional_id, Professionals.role_code, Professionals.first_name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Which professionals have done at least two types of treatments? List the professional id and cell phone.",
        "gold_select": "select Professionals.professional_id, Professionals.cell_number",
        "select_candidates": [
            "select Professionals.professional_id, Professionals.cell_number",
            "select Treatments.pro_id, Professionals.cell_number",
            "select Professionals.first_name, Professionals.cell_number",
            "select Professionals.role_code, Professionals.cell_number"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals Treatments",
        "table_candidates": [
            "Professionals Treatments",
            "Dogs Professionals Treatments",
            "Treatment_Types Professionals Treatments",
            "Owners Professionals Treatments",
            "Breeds Professionals Treatments",
            "Charges Professionals Treatments",
            "Sizes Treatments"
        ],
        "align_scores": [
            0.9756576418876648,
            0.00033338871435262263,
            0.08286700397729874,
            0.00023115113435778767,
            0.000335581018589437,
            8.43666639411822e-05,
            0.23412322998046875,
            0.00026114200591109693
        ],
        "align_select": "select Professionals.professional_id, Professionals.cell_number",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Find the id and cell phone of the professionals who operate two or more types of treatments.",
        "gold_select": "select Professionals.professional_id, Professionals.cell_number",
        "select_candidates": [
            "select Professionals.professional_id, Professionals.cell_number",
            "select Professionals.first_name, Professionals.cell_number",
            "select Treatments.pro_id, Professionals.cell_number",
            "select Professionals.role_code, Professionals.cell_number"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals Treatments",
        "table_candidates": [
            "Professionals Treatments",
            "Dogs Professionals Treatments",
            "Treatment_Types Professionals Treatments",
            "Owners Professionals Treatments",
            "Breeds Professionals Treatments",
            "Charges Professionals Treatments",
            "Sizes Professionals Treatments",
            "Sizes Treatments"
        ],
        "align_scores": [
            0.9797051548957825,
            0.00029703127802349627,
            0.0004741493903566152,
            8.836533379508182e-05,
            0.7217651009559631,
            0.0003001397999469191,
            0.8254097700119019,
            0.00019084646191913635
        ],
        "align_select": "select Professionals.professional_id, Professionals.cell_number",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "List the date of each treatment, together with the first name of the professional who operated it.",
        "gold_select": "select Treatments.date_of_treatment, Professionals.first_name",
        "select_candidates": [
            "select Treatments.date_of_treatment, Professionals.first_name",
            "select Treatments.date_of_treatment, Professionals.role_code",
            "select Treatments.cost_of_treatment, Professionals.first_name",
            "select Treatments.dog_id, Professionals.first_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals Treatments",
        "table_candidates": [
            "Professionals Treatments",
            "Dogs Professionals Treatments",
            "Owners Professionals Treatments",
            "Treatment_Types Professionals Treatments",
            "Charges Professionals Treatments",
            "Breeds Professionals Treatments",
            "Sizes Treatments"
        ],
        "align_scores": [
            0.9698938727378845,
            0.00010520671639824286,
            0.00039574812399223447,
            0.00010309179924661294,
            0.0010623211273923516,
            0.00016330485232174397,
            0.0005534175434149802,
            0.00010393644333817065
        ],
        "align_select": "select Treatments.date_of_treatment, Professionals.first_name",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What are the date and the operating professional's first name of each treatment?",
        "gold_select": "select Treatments.date_of_treatment, Professionals.first_name",
        "select_candidates": [
            "select Treatments.date_of_treatment, Professionals.first_name",
            "select Treatments.date_of_treatment, t06.c2",
            "select Treatments.date_of_treatment, Professionals.role_code",
            "select Treatments.date_of_treatment, t6.6.c2"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals Treatments",
        "table_candidates": [
            "Professionals Treatments",
            "Dogs Professionals Treatments",
            "Owners Professionals Treatments",
            "Treatment_Types Professionals Treatments",
            "Charges Professionals Treatments",
            "Sizes Professionals Treatments",
            "Breeds Professionals Treatments",
            "Sizes Treatments"
        ],
        "align_scores": [
            0.9595766067504883,
            0.01517199631780386,
            0.0008134828531183302,
            0.0003279517695773393,
            0.0004881215572822839,
            0.00016017210145946592,
            0.0007780348532833159,
            0.0003758101083803922
        ],
        "align_select": "select Treatments.date_of_treatment, Professionals.first_name",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "List the emails of the professionals who live in the state of Hawaii or the state of Wisconsin.",
        "gold_select": "select Professionals.email_adr",
        "select_candidates": [
            "select Professionals.email_adr",
            "select Professionals.email_adr, Professionals.home_phone",
            "select Professionals.email_adr (or Professionals.home_phone)",
            "select Professionals.email_adr, Professionals.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals",
        "table_candidates": [
            "Professionals",
            "Dogs Professionals",
            "Owners Professionals"
        ],
        "align_scores": [
            0.9881060123443604,
            0.15565361082553864,
            0.00022106558026280254,
            9.53722556005232e-05,
            0.006546830292791128,
            0.00020685770141426474,
            0.00017264332564081997,
            8.750684355618432e-05
        ],
        "align_select": "select Professionals.email_adr",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the emails of the professionals living in either the state of Hawaii or the state of Wisconsin?",
        "gold_select": "select Professionals.email_adr",
        "select_candidates": [
            "select Professionals.email_adr",
            "select Professionals.email_adr, Professionals.home_phone",
            "select Professionals.email_adr, Professionals.last_name",
            "select Professionals.email_adr (or Professionals.home_phone)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals",
        "table_candidates": [
            "Professionals",
            "Dogs Professionals",
            "Owners Professionals"
        ],
        "align_scores": [
            0.9921519756317139,
            0.011396382935345173,
            0.00021035829558968544,
            7.987018034327775e-05,
            0.0001466993271606043,
            7.223787542898208e-05,
            0.008305404335260391,
            0.00010758238204289228
        ],
        "align_select": "select Professionals.email_adr",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many professionals have performed any treatment to dogs?",
        "gold_select": "select count(distinct Treatments.pro_id)",
        "select_candidates": [
            "select count(distinct Treatments.pro_id)",
            "select count (distinct Treatments.pro_id)",
            "select count(*)",
            "select count(distinct Treatments.treatment_id)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "Treatments",
        "table_candidates": [
            "Treatments",
            "Dogs Professionals Treatments",
            "Dogs Treatments",
            "Charges Treatments",
            "Professionals Treatments",
            "Breeds Treatments",
            "Sizes Treatments"
        ],
        "align_scores": [
            0.9856467843055725,
            0.9856467843055725,
            0.0507970005273819,
            0.0507970005273819,
            0.9745935201644897,
            0.9745935201644897,
            0.021601960062980652,
            0.021601960062980652
        ],
        "align_select": "select count(distinct Treatments.pro_id)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "Find the number of professionals who have ever treated dogs.",
        "gold_select": "select count(distinct Treatments.pro_id)",
        "select_candidates": [
            "select count(distinct Treatments.pro_id)",
            "select count (distinct Treatments.pro_id)",
            "select count(distinct Treatments.treatment_id)",
            "select count(distinct Treatments.dog_id)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "Treatments",
        "table_candidates": [
            "Treatments",
            "Dogs Professionals Treatments",
            "Professionals Treatments",
            "Breeds Professionals Treatments",
            "Charges Treatments",
            "Dogs Treatments",
            "Breeds Treatments"
        ],
        "align_scores": [
            0.9333752989768982,
            0.9333752989768982,
            0.06730122864246368,
            0.06730122864246368,
            0.012089919298887253,
            0.012089919298887253,
            0.020460208877921104,
            0.020460208877921104
        ],
        "align_select": "select count(distinct Treatments.pro_id)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "How many professionals did not operate any treatment on dogs?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Professionals.street",
            "select count(*), Professionals.professional_id",
            "select count(distinct Professionals.professional_id)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals",
        "table_candidates": [
            "Professionals Treatments",
            "Dogs Professionals Treatments",
            "Owners Professionals Treatments",
            "Treatment_Types Professionals Treatments",
            "Charges Professionals Treatments",
            "Sizes Professionals Treatments",
            "Breeds Professionals Treatments"
        ],
        "align_scores": [
            0.9880517721176147,
            0.015024800784885883,
            0.00046332491911016405,
            0.0002189928782172501,
            0.00035246930201537907,
            0.0003390123602002859,
            0.03070249781012535,
            0.0004464676894713193
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the number of professionals who have not treated any dogs.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Professionals.role_code, Professionals.last_name",
            "select count(*), Professionals.first_name, Professionals.last_name",
            "select count(*), Professionals.role_code, Professionals.first_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals",
        "table_candidates": [
            "Professionals Treatments",
            "Dogs Professionals Treatments",
            "Treatment_Types Professionals Treatments",
            "Owners Professionals Treatments",
            "Charges Professionals Treatments",
            "Breeds Professionals Treatments",
            "Professionals"
        ],
        "align_scores": [
            0.9819172024726868,
            0.02498120814561844,
            0.00013144339027348906,
            0.00011280136095592752,
            0.0005045018042437732,
            0.0016008318634703755,
            0.00015319180965889245,
            0.0001193054995383136
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List the email, cell phone and home phone of all the professionals.",
        "gold_select": "select Professionals.email_adr, Professionals.cell_number, Professionals.home_phone",
        "select_candidates": [
            "select Professionals.email_adr, Professionals.cell_number, Professionals.home_phone",
            "select Professionals.email_adr, Professionals.home_phone, Professionals.cell_number",
            "select Professionals.email_adr, t6.cten, Professionals.home_phone",
            "select Professionals.email_adr, Professionals.professional_id9, Professionals.cell_number"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals",
        "table_candidates": [
            "Professionals"
        ],
        "align_scores": [
            0.5075641870498657,
            0.00010447063687024638,
            0.4241211414337158,
            0.00010074570309370756,
            0.0006593450088985264,
            0.00011561741848709062,
            0.0003954326966777444,
            0.00015367078594863415
        ],
        "align_select": "select Professionals.email_adr, Professionals.cell_number, Professionals.home_phone",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What are the email, cell phone and home phone of each professional?",
        "gold_select": "select Professionals.email_adr, Professionals.cell_number, Professionals.home_phone",
        "select_candidates": [
            "select Professionals.email_adr, Professionals.cell_number, Professionals.home_phone",
            "select Professionals.email_adr, Professionals.home_phone, Professionals.cell_number",
            "select Professionals.email_adr, t6.cten, Professionals.home_phone",
            "select Professionals.email_adr, Professionals.professional_id9, Professionals.cell_number"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals",
        "table_candidates": [
            "Professionals"
        ],
        "align_scores": [
            0.9488640427589417,
            0.00011702507617883384,
            0.9486145377159119,
            0.00011452748731244355,
            0.0008183795143850148,
            8.590859943069518e-05,
            0.0003929389931727201,
            7.490306597901508e-05
        ],
        "align_select": "select Professionals.email_adr, Professionals.cell_number, Professionals.home_phone",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "List the first name of all the professionals along with the description of the treatment they have done.",
        "gold_select": "select distinct Professionals.first_name, Treatment_Types.treatment_type_description",
        "select_candidates": [
            "select Professionals.first_name, Treatment_Types.treatment_type_description",
            "select Professionals.first_name, Treatment_Types.treatment_type_description, Treatments.pro_id",
            "select Professionals.first_name, Treatment_Types.treatment_type_code_description",
            "select Professionals.first_name, t3_description"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Treatment_Types Professionals Treatments",
        "table_candidates": [
            "Treatment_Types Professionals Treatments",
            "Sizes Treatment_Types Professionals Treatments",
            "Breeds Treatment_Types Professionals Treatments",
            "Charges Treatment_Types Professionals Treatments",
            "Charges Professionals Treatments",
            "Sizes Professionals Treatments"
        ],
        "align_scores": [
            0.9357481598854065,
            0.00011623236059676856,
            0.00020660659356508404,
            8.289271499961615e-05,
            0.6401218771934509,
            0.00012853647058364004,
            0.003422277746722102,
            0.00010751285299193114
        ],
        "align_select": "select Professionals.first_name, Treatment_Types.treatment_type_description",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What are each professional's first name and description of the treatment they have performed?",
        "gold_select": "select distinct Professionals.first_name, Treatment_Types.treatment_type_description",
        "select_candidates": [
            "select Professionals.first_name, Treatment_Types.treatment_type_description",
            "select Professionals.first_name, Treatment_Types.treatment_type_description, Treatments.pro_id",
            "select Professionals.first_name, Treatment_Types.treatment_type_code_description",
            "select Professionals.first_name, t3_description"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Treatment_Types Professionals Treatments",
        "table_candidates": [
            "Treatment_Types Professionals Treatments",
            "Sizes Treatment_Types Professionals Treatments",
            "Breeds Treatment_Types Professionals Treatments",
            "Charges Treatment_Types Professionals Treatments",
            "Charges Professionals Treatments",
            "Sizes Professionals Treatments"
        ],
        "align_scores": [
            0.9574305415153503,
            0.00013878890604246408,
            0.00024296976334881037,
            9.378246613778174e-05,
            0.7946784496307373,
            0.0001572181354276836,
            0.004501353017985821,
            0.00015005256864242256
        ],
        "align_select": "select Professionals.first_name, Treatment_Types.treatment_type_description",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "Which professionals live in the state of Indiana or have done treatment on more than 2 treatments? List his or her id, last name and cell phone.",
        "gold_select": "select Professionals.pro_id, Professionals.last_name, Professionals.cell_number",
        "select_candidates": [
            "select Professionals.pro_id, Professionals.last_name, Professionals.cell_number",
            "select Professionals.first_name, Professionals.last_name, Professionals.cell_number",
            "select Treatments.pro_id, Professionals.last_name, Professionals.cell_number",
            "select Professionals.role_code, Professionals.last_name, Professionals.cell_number"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-UNION-SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-WHERE-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals Treatments",
        "table_candidates": [
            "Professionals Treatments",
            "Dogs Professionals Treatments",
            "Owners Professionals Treatments",
            "Treatment_Types Professionals Treatments",
            "Breeds Professionals Treatments",
            "Sizes Professionals Treatments",
            "Charges Professionals Treatments"
        ],
        "align_scores": [
            0.12179355323314667,
            0.0033694617450237274,
            0.00023080251412466168,
            0.00015498076390940696,
            0.05645584687590599,
            0.00333237461745739,
            0.003560319310054183,
            0.0005899069947190583
        ],
        "align_select": "select Professionals.pro_id, Professionals.last_name, Professionals.cell_number",
        "align_structure": "SELECT-FROM-WHERE-UNION-SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Find the id, last name and cell phone of the professionals who live in the state of Indiana or have performed more than two treatments.",
        "gold_select": "select Professionals.pro_id, Professionals.last_name, Professionals.cell_number",
        "select_candidates": [
            "select Professionals.pro_id, Professionals.last_name, Professionals.cell_number",
            "select Professionals.first_name, Professionals.last_name, Professionals.cell_number",
            "select Treatments.pro_id, Professionals.last_name, Professionals.cell_number",
            "select Professionals.role_code, Professionals.last_name, Professionals.cell_number"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-UNION-SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-WHERE-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals Treatments",
        "table_candidates": [
            "Professionals Treatments",
            "Dogs Professionals Treatments",
            "Owners Professionals Treatments",
            "Treatment_Types Professionals Treatments",
            "Sizes Professionals Treatments",
            "Breeds Professionals Treatments",
            "Charges Professionals Treatments"
        ],
        "align_scores": [
            0.6392126679420471,
            0.031910885125398636,
            0.0005466879811137915,
            0.00027240352937951684,
            0.41403788328170776,
            0.023047689348459244,
            0.039970651268959045,
            0.002187773585319519
        ],
        "align_select": "select Professionals.pro_id, Professionals.last_name, Professionals.cell_number",
        "align_structure": "SELECT-FROM-WHERE-UNION-SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Which dogs have not cost their owner more than 1000 for treatment? List the dog names.",
        "gold_select": "select Dogs.name",
        "select_candidates": [
            "select Dogs.name",
            "select Dogs.name, Charges.chrg_amt",
            "select Dogs.name, Treatments.dog_id",
            "select Dogs.name, Treatments.pro_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "Dogs Treatments",
        "table_candidates": [
            "Charges Dogs Treatments",
            "Charges Sizes Dogs Treatments",
            "Breeds Charges Dogs Treatments"
        ],
        "align_scores": [
            0.035953231155872345,
            0.6757534146308899,
            0.0010175809729844332,
            0.0012884916504845023,
            0.0005938495742157102,
            0.002083113417029381,
            0.000499231624417007,
            0.0006889005308039486
        ],
        "align_select": "select Dogs.name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the names of the dogs for which the owner has not spend more than 1000 for treatment?",
        "gold_select": "select Dogs.name",
        "select_candidates": [
            "select Dogs.name",
            "select Dogs.name, Treatments.dog_id",
            "select Dogs.name, Dogs.age",
            "select Dogs.name, Dogs.breed_code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "Dogs Treatments",
        "table_candidates": [
            "Charges Dogs Treatments",
            "Dogs Treatments",
            "Breeds Charges Dogs Treatments",
            "Charges Sizes Dogs Treatments",
            "Owners Dogs Treatments"
        ],
        "align_scores": [
            0.5781142711639404,
            0.9501652717590332,
            0.0013660078402608633,
            0.0002676305011846125,
            0.00017466838471591473,
            0.00016578628856223077,
            0.0013422711053863168,
            0.00038073654286563396
        ],
        "align_select": "select Dogs.name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which professional did not operate any treatment on dogs? List the professional's id, role and email.",
        "gold_select": "select Professionals.pro_id, Professionals.role_code, Professionals.email_adr",
        "select_candidates": [
            "select Professionals.pro_id, Professionals.role_code, Professionals.email_adr",
            "select Professionals.pro_id, Professionals.first_name, Professionals.email_adr",
            "select Professionals.pro_id, Professionals.role_code, Professionals.email_adr",
            "select t6).c0, Professionals.role_code, Professionals.email_adr"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM",
            "SELECT-FROM-EXCEPT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals Treatments",
        "table_candidates": [
            "Professionals Treatments",
            "Dogs Professionals Treatments"
        ],
        "align_scores": [
            0.7315673232078552,
            0.03361792117357254,
            0.0004176783550065011,
            0.00017936850781552494,
            0.7315673232078552,
            0.03361792117357254,
            0.00036465818993747234,
            0.00019229992176406085
        ],
        "align_select": "select Professionals.pro_id, Professionals.role_code, Professionals.email_adr",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM"
    },
    {
        "question": "Give me the id, role and email of the professionals who did not perform any treatment on dogs.",
        "gold_select": "select Professionals.pro_id, Professionals.role_code, Professionals.email_adr",
        "select_candidates": [
            "select Professionals.pro_id, Professionals.role_code, Professionals.email_adr",
            "select Professionals.pro_id, Professionals.first_name, Professionals.email_adr",
            "select t 6.c0, Professionals.role_code, Professionals.email_adr",
            "select Dogs.dog_id, Professionals.role_code, Professionals.email_adr"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM",
            "SELECT-FROM-EXCEPT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals Treatments",
        "table_candidates": [
            "Professionals Treatments",
            "Dogs Professionals Treatments",
            "Treatment_Types Professionals Treatments",
            "Owners Professionals Treatments",
            "Breeds Professionals Treatments",
            "Charges Professionals Treatments",
            "Sizes Professionals Treatments"
        ],
        "align_scores": [
            0.7821668982505798,
            0.025736430659890175,
            0.0004504222597461194,
            0.000167655132827349,
            0.000325419387081638,
            0.00014807323168497533,
            0.0005411701858974993,
            0.00023431492445524782
        ],
        "align_select": "select Professionals.pro_id, Professionals.role_code, Professionals.email_adr",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM"
    },
    {
        "question": "Which professionals have done at least two treatments? List the professional's id, role, and first name.",
        "gold_select": "select Professionals.pro_id, Professionals.role_code, Professionals.first_name",
        "select_candidates": [
            "select Professionals.pro_id, Professionals.role_code, Professionals.first_name",
            "select Treatments.pro_id, Professionals.role_code, Professionals.first_name",
            "select Professionals.pro_id, Professionals.first_name, Professionals.role_code",
            "select t8.c2, Professionals.role_code, Professionals.first_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals Treatments",
        "table_candidates": [
            "Professionals Treatments",
            "Dogs Professionals Treatments",
            "Treatment_Types Professionals Treatments",
            "Owners Professionals Treatments",
            "Breeds Professionals Treatments",
            "Sizes Professionals Treatments"
        ],
        "align_scores": [
            0.8814200162887573,
            9.754141501616687e-05,
            0.17679835855960846,
            9.982650954043493e-05,
            0.8376802802085876,
            0.00010017408203566447,
            0.0005280465702526271,
            7.14428533683531e-05
        ],
        "align_select": "select Professionals.pro_id, Professionals.role_code, Professionals.first_name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the id, role, and first name of the professionals who have performed two or more treatments?",
        "gold_select": "select Professionals.pro_id, Professionals.role_code, Professionals.first_name",
        "select_candidates": [
            "select Professionals.pro_id, Professionals.role_code, Professionals.first_name",
            "select Treatments.pro_id, Professionals.role_code, Professionals.first_name",
            "select t8.c2, Professionals.role_code, Professionals.first_name",
            "select Sizes.size_code, Professionals.role_code, Professionals.first_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals Treatments",
        "table_candidates": [
            "Professionals Treatments",
            "Dogs Professionals Treatments",
            "Treatment_Types Professionals Treatments",
            "Owners Professionals Treatments",
            "Breeds Professionals Treatments"
        ],
        "align_scores": [
            0.8775531649589539,
            0.00011654555419227108,
            0.07865126430988312,
            0.00010909210686804727,
            0.000657238531857729,
            6.882729940116405e-05,
            0.00031692811171524227,
            7.058034680085257e-05
        ],
        "align_select": "select Professionals.pro_id, Professionals.role_code, Professionals.first_name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What is the description of the treatment type that costs the least money in total?",
        "gold_select": "select Treatment_Types.tx_type_desc",
        "select_candidates": [
            "select Treatment_Types.tx_type_desc",
            "select Treatment_Types.tx_type_desc, Treatments.pro_id",
            "select Treatment_Types.tx_type_desc, Treatments.tx_type_code",
            "select Treatment_Types.tx_type_desc, Treatments.dog_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Treatment_Types Treatments",
        "table_candidates": [
            "Charges Treatment_Types Treatments",
            "Treatment_Types Treatments",
            "Charges Sizes Treatment_Types Treatments",
            "Breeds Charges Treatment_Types Treatments",
            "Sizes Treatment_Types Treatments",
            "Breeds Charges Sizes Treatment_Types Treatments"
        ],
        "align_scores": [
            0.994236409664154,
            6.86010971548967e-05,
            0.00019179780792910606,
            6.046868293196894e-05,
            0.001045792712830007,
            6.119898898759857e-05,
            0.0002083291474264115,
            6.21094586676918e-05
        ],
        "align_select": "select Treatment_Types.tx_type_desc",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Give me the description of the treatment type whose total cost is the lowest.",
        "gold_select": "select Treatment_Types.tx_type_desc",
        "select_candidates": [
            "select Treatment_Types.tx_type_desc",
            "select Treatment_Types.tx_type_desc, Treatments.tx_type_code",
            "select Treatment_Types.tx_type_desc, Treatments.pro_id",
            "select Treatment_Types.tx_type_code, Treatment_Types.tx_type_desc"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-UNION-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Treatment_Types Treatments",
        "table_candidates": [
            "Treatment_Types Treatments",
            "Sizes Treatment_Types Treatments",
            "Charges Treatment_Types Treatments",
            "Breeds Treatment_Types Treatments"
        ],
        "align_scores": [
            0.9955642223358154,
            8.09896519058384e-05,
            0.0005588971544057131,
            6.172636494738981e-05,
            0.00014283211203292012,
            5.9339454310247675e-05,
            0.0009783005807548761,
            7.802028994774446e-05
        ],
        "align_select": "select Treatment_Types.tx_type_desc",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Which owner has paid the largest amount of money in total for their dogs? Show the owner id and zip code.",
        "gold_select": "select Owners.owner_id, Owners.zip_code",
        "select_candidates": [
            "select Owners.owner_id, Owners.zip_code",
            "select Sizes.size_code, Owners.zip_code",
            "select Dogs.owner_id, Owners.zip_code",
            "select Owners.owner_id-, Owners.zip_code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Owners Dogs Treatments",
        "table_candidates": [
            "Charges Owners Dogs",
            "Owners Dogs",
            "Breeds Charges Owners Dogs",
            "Charges Sizes Owners Dogs",
            "Sizes Owners Dogs",
            "Charges Sizes Dogs",
            "Treatment_Types Owners Dogs"
        ],
        "align_scores": [
            0.9719984531402588,
            9.741741087054834e-05,
            0.000557378341909498,
            9.442299051443115e-05,
            0.3610604703426361,
            0.0001068156270775944,
            0.002873925492167473,
            8.440102828899398e-05
        ],
        "align_select": "select Owners.owner_id, Owners.zip_code",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Find the owner id and zip code of the owner who spent the most money in total for his or her dogs.",
        "gold_select": "select Owners.owner_id, Owners.zip_code",
        "select_candidates": [
            "select Owners.owner_id, Owners.zip_code",
            "select Dogs.owner_id, Owners.zip_code",
            "select Sizes.size_code, Owners.zip_code",
            "select Owners.first_name, Owners.zip_code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Owners Dogs Treatments",
        "table_candidates": [
            "Owners Dogs",
            "Charges Owners Dogs",
            "Sizes Owners Dogs",
            "Breeds Charges Owners Dogs",
            "Treatment_Types Owners Dogs",
            "Breeds Owners Dogs"
        ],
        "align_scores": [
            0.9783153533935547,
            9.202890214510262e-05,
            0.8121184706687927,
            0.00010219514661002904,
            0.0006959905731491745,
            9.184689406538382e-05,
            0.0005090773920528591,
            0.00012058902211720124
        ],
        "align_select": "select Owners.owner_id, Owners.zip_code",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Which professionals have done at least two types of treatments? List the professional id and cell phone.",
        "gold_select": "select Professionals.pro_id, Professionals.cell_number",
        "select_candidates": [
            "select Professionals.pro_id, Professionals.cell_number",
            "select Treatments.pro_id, Professionals.cell_number",
            "select Charges.chrg_id, Professionals.cell_number",
            "select Sizes.size_code, Professionals.cell_number"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals Treatments",
        "table_candidates": [
            "Professionals Treatments",
            "Dogs Professionals Treatments",
            "Treatment_Types Professionals Treatments",
            "Owners Professionals Treatments",
            "Charges Professionals Treatments",
            "Breeds Professionals Treatments",
            "Sizes Treatments"
        ],
        "align_scores": [
            0.9622622728347778,
            0.00041709942161105573,
            0.08286700397729874,
            0.00023115113435778767,
            0.020999059081077576,
            0.00045159360161051154,
            0.0003815966483671218,
            0.00012522497854661196
        ],
        "align_select": "select Professionals.pro_id, Professionals.cell_number",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Find the id and cell phone of the professionals who operate two or more types of treatments.",
        "gold_select": "select Professionals.pro_id, Professionals.cell_number",
        "select_candidates": [
            "select Professionals.pro_id, Professionals.cell_number",
            "select Professionals.first_name, Professionals.cell_number",
            "select Treatments.pro_id, Professionals.cell_number",
            "select Professionals.role_code, Professionals.cell_number"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals Treatments",
        "table_candidates": [
            "Professionals Treatments",
            "Dogs Professionals Treatments",
            "Treatment_Types Professionals Treatments",
            "Owners Professionals Treatments",
            "Sizes Professionals Treatments",
            "Charges Professionals Treatments",
            "Breeds Professionals Treatments"
        ],
        "align_scores": [
            0.9815350770950317,
            0.00041223084554076195,
            0.0004741493903566152,
            8.836533379508182e-05,
            0.7217651009559631,
            0.0003001397999469191,
            0.8254097700119019,
            0.00019084646191913635
        ],
        "align_select": "select Professionals.pro_id, Professionals.cell_number",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the first name and last name of the professionals who have done treatment with cost below average?",
        "gold_select": "select distinct Professionals.first_name, Professionals.last_name",
        "select_candidates": [
            "select Professionals.first_name, Professionals.last_name",
            "select distinct Professionals.first_name, Professionals.last_name",
            "select Professionals.role_code, Professionals.last_name",
            "select t6).c2, Professionals.last_name"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals Treatments",
        "table_candidates": [
            "Charges Professionals Treatments",
            "Charges Sizes Professionals Treatments",
            "Charges Dogs Professionals Treatments",
            "Charges Treatment_Types Professionals Treatments",
            "Breeds Charges Professionals Treatments",
            "Charges Sizes Treatments"
        ],
        "align_scores": [
            0.963548481464386,
            0.00045636616414412856,
            0.04227857664227486,
            0.00011372369772288948,
            0.0005006120773032308,
            0.00010413703421363607,
            0.0007528566638939083,
            0.0001118214349844493
        ],
        "align_select": "select Professionals.first_name, Professionals.last_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which professionals have operated a treatment that costs less than the average? Give me theor first names and last names.",
        "gold_select": "select distinct Professionals.first_name, Professionals.last_name",
        "select_candidates": [
            "select Professionals.first_name, Professionals.last_name",
            "select distinct Professionals.first_name, Professionals.last_name",
            "select count(*), Professionals.first_name, Professionals.last_name",
            "select Professionals.role_code, Professionals.last_name"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals Treatments",
        "table_candidates": [
            "Charges Professionals Treatments",
            "Charges Treatment_Types Professionals Treatments",
            "Charges Dogs Professionals Treatments",
            "Charges Sizes Treatments"
        ],
        "align_scores": [
            0.1043781042098999,
            0.01528864074498415,
            0.017282189801335335,
            0.0014485664432868361,
            0.0005364243988879025,
            0.0003861352161038667,
            0.0005771272117272019,
            0.0003108614182565361
        ],
        "align_select": "select Professionals.first_name, Professionals.last_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List the date of each treatment, together with the first name of the professional who operated it.",
        "gold_select": "select Treatments.dot, Professionals.first_name",
        "select_candidates": [
            "select Treatments.dog_id2, Professionals.first_name",
            "select Treatments.cot, Professionals.first_name",
            "select Treatments.dog_id, Professionals.first_name",
            "select Treatments.dog_id1, Professionals.first_name"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals Treatments",
        "table_candidates": [
            "Professionals Treatments",
            "Dogs Professionals Treatments",
            "Treatment_Types Professionals Treatments",
            "Breeds Professionals Treatments",
            "Charges Professionals Treatments",
            "Owners Professionals Treatments",
            "Sizes Professionals Treatments"
        ],
        "align_scores": [
            0.0005936843808740377,
            0.00014530494809150696,
            0.011287307366728783,
            0.00016291075735352933,
            0.0005534175434149802,
            0.00010393644333817065,
            0.0005793280433863401,
            0.00014775630552321672
        ],
        "align_select": "select Treatments.dog_id2, Professionals.first_name",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What are the date and the operating professional's first name of each treatment?",
        "gold_select": "select Treatments.dot, Professionals.first_name",
        "select_candidates": [
            "select Treatments.dog_id2, Professionals.first_name",
            "select Treatments.cot, Professionals.first_name",
            "select Treatments.dog_id3, Professionals.first_name",
            "select Treatments.dog_id, Professionals.first_name"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals Treatments",
        "table_candidates": [
            "Professionals Treatments",
            "Dogs Professionals Treatments",
            "Treatment_Types Professionals Treatments",
            "Owners Professionals Treatments",
            "Charges Professionals Treatments",
            "Breeds Professionals Treatments"
        ],
        "align_scores": [
            0.0005809260765090585,
            0.00035113547346554697,
            0.2056540995836258,
            0.0018527223728597164,
            0.0005136876716278493,
            0.00030886236345395446,
            0.0005375488544814289,
            0.0003458451828919351
        ],
        "align_select": "select Treatments.cot, Professionals.first_name",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "List the cost of each treatment and the corresponding treatment type description.",
        "gold_select": "select Treatments.cot, Treatment_Types.tx_type_desc",
        "select_candidates": [
            "select Treatments.cot, Treatment_Types.tx_type_desc",
            "select Treatments.cot, Treatment_Types.tx_type_code_desc",
            "select t-7.c5, Treatment_Types.tx_type_desc",
            "select t8.c5, Treatment_Types.tx_type_desc"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "Treatment_Types Treatments",
        "table_candidates": [
            "Treatment_Types Treatments",
            "Charges Treatment_Types Treatments",
            "Sizes Treatment_Types Treatments",
            "Charges Sizes Treatment_Types Treatments",
            "Breeds Charges Treatment_Types Treatments",
            "Breeds Treatment_Types Treatments",
            "Breeds Charges Sizes Treatment_Types Treatments"
        ],
        "align_scores": [
            0.9952096343040466,
            0.9951620697975159,
            0.9925145506858826,
            0.9893255233764648,
            0.0004089514259248972,
            0.0004582683613989502,
            0.0004431762208696455,
            0.00045461897389031947
        ],
        "align_select": "select Treatments.cot, Treatment_Types.tx_type_desc",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "What are the cost and treatment type description of each treatment?",
        "gold_select": "select Treatments.cot, Treatment_Types.tx_type_desc",
        "select_candidates": [
            "select Treatments.cot, Treatment_Types.tx_type_desc",
            "select Treatments.cot, Treatment_Types.tx_type_desc, Treatments.tx_type_code",
            "select Treatments.cot, Treatment_Types.tx_type_desc, Treatments.pro_id",
            "select Treatments.cot, Treatment_Types.tx_type_code_desc"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Treatment_Types Treatments",
        "table_candidates": [
            "Treatment_Types Treatments",
            "Sizes Treatment_Types Treatments",
            "Charges Treatment_Types Treatments",
            "Breeds Charges Treatment_Types Treatments",
            "Breeds Sizes Treatment_Types Treatments",
            "Breeds Treatment_Types Treatments",
            "Breeds Charges Sizes Treatment_Types Treatments"
        ],
        "align_scores": [
            0.9936995506286621,
            0.00016209912428166717,
            0.00024263594241347164,
            7.815506251063198e-05,
            0.00022896859445609152,
            7.80003538238816e-05,
            0.9918752312660217,
            0.00013869443500880152
        ],
        "align_select": "select Treatments.cot, Treatment_Types.tx_type_desc",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "List the names of the dogs of the rarest breed and the treatment dates of them.",
        "gold_select": "select Dogs.name, Treatments.dot",
        "select_candidates": [
            "select Dogs.name, Treatments.dog_id2",
            "select Dogs.name, Dogs.date_dpt",
            "select Dogs.name, t7.c6",
            "select Dogs.name, t07.c12"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "Dogs Treatments",
        "table_candidates": [
            "Dogs Treatments",
            "Breeds Dogs Treatments",
            "Breeds Charges Dogs Treatments",
            "Charges Dogs Treatments",
            "Sizes Dogs Treatments",
            "Breeds Charges Sizes Dogs Treatments",
            "Treatment_Types Dogs Treatments",
            "Breeds Dogs Professionals Treatments"
        ],
        "align_scores": [
            0.0004591308534145355,
            0.0003241684171371162,
            0.9670252203941345,
            0.9763005971908569,
            0.0004476042522583157,
            0.0003203581436537206,
            0.0005960114649496973,
            0.0004823853960260749
        ],
        "align_select": "select Dogs.name, Dogs.date_dpt",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Which dogs are of the rarest breed? Show their names and treatment dates.",
        "gold_select": "select Dogs.name, Treatments.dot",
        "select_candidates": [
            "select Dogs.name, Treatments.dog_id2",
            "select Dogs.name, Dogs.date_dpt",
            "select Dogs.name, t7.c6",
            "select Dogs.name, Treatments.cot"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "Dogs Treatments",
        "table_candidates": [
            "Dogs Treatments",
            "Breeds Dogs Treatments",
            "Breeds Charges Dogs Treatments",
            "Charges Dogs Treatments",
            "Treatment_Types Dogs Treatments",
            "Sizes Dogs Treatments",
            "Breeds Charges Sizes Dogs Treatments",
            "Breeds Dogs Professionals Treatments"
        ],
        "align_scores": [
            0.0006214926252141595,
            0.0004143739934079349,
            0.9862587451934814,
            0.9896163940429688,
            0.0005677473964169621,
            0.0004605817957781255,
            0.2039809226989746,
            0.12860818207263947
        ],
        "align_select": "select Dogs.name, Dogs.date_dpt",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What are the arriving date and the departing date of the dogs who have gone through a treatment?",
        "gold_select": "select distinct Dogs.date_arr, Dogs.date_dpt",
        "select_candidates": [
            "select Dogs.date_arr, Dogs.date_ad",
            "select Dogs.date_arr, Dogs.date_dpt",
            "select Dogs.dog_id, Dogs.date_ad",
            "select Dogs.dog_id, Dogs.date_dpt"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "Dogs Treatments",
        "table_candidates": [
            "Dogs Treatments",
            "Dogs Professionals Treatments"
        ],
        "align_scores": [
            0.8917040824890137,
            0.8917040824890137,
            0.8808875679969788,
            0.8808875679969788,
            0.0012615083251148462,
            0.0012615083251148462,
            0.0011223386973142624,
            0.0011223386973142624
        ],
        "align_select": "select Dogs.date_arr, Dogs.date_ad",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "Find the arriving date and the departing date of the dogs that received a treatment.",
        "gold_select": "select distinct Dogs.date_arr, Dogs.date_dpt",
        "select_candidates": [
            "select Dogs.date_arr, Dogs.date_ad",
            "select Dogs.dog_id, Dogs.date_ad",
            "select Dogs.date_arr, Dogs.date_dpt",
            "select Dogs.dog_id, Dogs.date_dpt"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Dogs Treatments",
        "table_candidates": [
            "Dogs Treatments",
            "Dogs Professionals Treatments"
        ],
        "align_scores": [
            0.9629088640213013,
            0.00018178623577114195,
            0.0010376657592132688,
            7.682419527554885e-05,
            0.9575772285461426,
            0.00026181686553172767,
            0.0007557757198810577,
            8.426520071225241e-05
        ],
        "align_select": "select Dogs.date_arr, Dogs.date_ad",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "List the emails of the professionals who live in the state of Hawaii or the state of Wisconsin.",
        "gold_select": "select Professionals.email_adr",
        "select_candidates": [
            "select Professionals.email_adr",
            "select the Professionals.email_adr",
            "select Professionals.email_adr ",
            "select t 6.c8"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals",
        "table_candidates": [
            "Professionals",
            "Dogs Professionals",
            "Professionals Treatments"
        ],
        "align_scores": [
            0.9881060123443604,
            0.15565361082553864,
            0.0011871691094711423,
            0.00026327045634388924,
            0.9881060123443604,
            0.15565361082553864,
            0.0008843745454214513,
            0.0001843117643147707
        ],
        "align_select": "select Professionals.email_adr",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the emails of the professionals living in either the state of Hawaii or the state of Wisconsin?",
        "gold_select": "select Professionals.email_adr",
        "select_candidates": [
            "select Professionals.email_adr",
            "select Professionals.email_adr, Professionals.hp",
            "select Professionals.state, Professionals.email_adr",
            "select Professionals.email_adr, Professionals.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals",
        "table_candidates": [
            "Professionals",
            "Dogs Professionals",
            "Professionals Treatments",
            "Owners Professionals"
        ],
        "align_scores": [
            0.9921519756317139,
            0.011396382935345173,
            0.00021603961067739874,
            8.980711572803557e-05,
            0.00021852273494005203,
            8.846398850437254e-05,
            0.0001466993271606043,
            7.223787542898208e-05
        ],
        "align_select": "select Professionals.email_adr",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the arriving date and the departing date of all the dogs?",
        "gold_select": "select Dogs.date_arr, Dogs.date_dpt",
        "select_candidates": [
            "select Dogs.date_arr, Dogs.date_ad",
            "select Dogs.dog_id, Dogs.date_ad",
            "select Dogs.date_arr, Dogs.date_dpt",
            "select Dogs.dog_id, Dogs.date_dpt"
        ],
        "select_labels": [
            0.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Dogs",
        "table_candidates": [
            "Dogs"
        ],
        "align_scores": [
            0.9421955347061157,
            0.00011890991299878806,
            0.0008642355096526444,
            8.522922144038603e-05,
            0.9376962184906006,
            0.00015779667592141777,
            0.0006744058337062597,
            8.49662974360399e-05
        ],
        "align_select": "select Dogs.date_arr, Dogs.date_ad",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "List the arrival date and the departure date for all the dogs.",
        "gold_select": "select Dogs.date_arr, Dogs.date_dpt",
        "select_candidates": [
            "select Dogs.date_arr, Dogs.date_ad",
            "select Dogs.dog_id, Dogs.date_ad",
            "select Dogs.dog_id, Dogs.date_dpt",
            "select Dogs.date_arr, Dogs.date_dpt"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Dogs",
        "table_candidates": [
            "Dogs"
        ],
        "align_scores": [
            0.8527349829673767,
            0.00013022861094214022,
            0.0006645726971328259,
            9.042117017088458e-05,
            0.0007277978584170341,
            9.218858031090349e-05,
            0.8808634281158447,
            0.00016674895596224815
        ],
        "align_select": "select Dogs.date_arr, Dogs.date_ad",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "How many professionals have performed any treatment to dogs?",
        "gold_select": "select count(distinct Treatments.pro_id)",
        "select_candidates": [
            "select count(distinct Treatments.pro_id)",
            "select count(*)",
            "select count (distinct Treatments.pro_id)",
            "select count(distinct Treatments.tx_id)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "Treatments",
        "table_candidates": [
            "Treatments",
            "Dogs Treatments",
            "Dogs Professionals Treatments"
        ],
        "align_scores": [
            0.9856467843055725,
            0.9856467843055725,
            0.9745935201644897,
            0.9745935201644897,
            0.0507970005273819,
            0.0507970005273819,
            0.022816704586148262,
            0.022816704586148262
        ],
        "align_select": "select count(distinct Treatments.pro_id)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "Find the number of professionals who have ever treated dogs.",
        "gold_select": "select count(distinct Treatments.pro_id)",
        "select_candidates": [
            "select count(distinct Treatments.pro_id)",
            "select count (distinct Treatments.pro_id)",
            "select count(distinct Treatments.tx_id)",
            "select count(distinct Treatments.dog_id)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "Treatments",
        "table_candidates": [
            "Treatments",
            "Dogs Professionals Treatments",
            "Professionals Treatments",
            "Breeds Professionals Treatments",
            "Charges Treatments",
            "Breeds Treatments",
            "Dogs Treatments",
            "Sizes Treatments"
        ],
        "align_scores": [
            0.9333752989768982,
            0.9333752989768982,
            0.06730122864246368,
            0.06730122864246368,
            0.014580261893570423,
            0.014580261893570423,
            0.020460208877921104,
            0.020460208877921104
        ],
        "align_select": "select count(distinct Treatments.pro_id)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "Which professionals live in a city containing the substring 'West'? List his or her role, street, city and state.",
        "gold_select": "select Professionals.role_code, Professionals.st, Professionals.city, Professionals.state",
        "select_candidates": [
            "select Professionals.role_code, Professionals.st, Professionals.city, Professionals.state",
            "select Professionals.role_code, Professionals.first_name, Professionals.st, Professionals.city, Professionals.state",
            "select Professionals.pro_id, Professionals.role_code, Professionals.st, Professionals.city, Professionals.state",
            "select Professionals.role_code, Professionals.st, Professionals.city and Professionals.state"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals",
        "table_candidates": [
            "Professionals"
        ],
        "align_scores": [
            0.004684051498770714,
            0.00012047052587149665,
            0.000553058460354805,
            0.00011516858648974448,
            0.0003558052412699908,
            9.236015466740355e-05,
            0.001646272954531014,
            0.0001091634840122424
        ],
        "align_select": "select Professionals.role_code, Professionals.st, Professionals.city, Professionals.state",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the role, street, city and state of the professionals living in a city that contains the substring 'West'.",
        "gold_select": "select Professionals.role_code, Professionals.st, Professionals.city, Professionals.state",
        "select_candidates": [
            "select Professionals.role_code, Professionals.st, Professionals.city, Professionals.state",
            "select Professionals.role_code, Professionals.first_name, Professionals.st, Professionals.city, Professionals.state",
            "select Professionals.role_code, Professionals.st, Professionals.city, Professionals.state",
            "select t8.c1, Professionals.st, Professionals.city, Professionals.state"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals",
        "table_candidates": [
            "Professionals",
            "Dogs Professionals",
            "Owners Professionals",
            "Treatment_Types Professionals",
            "Professionals Treatments"
        ],
        "align_scores": [
            0.890981912612915,
            9.448639320908114e-05,
            0.0005531017086468637,
            0.0001465613313484937,
            0.890981912612915,
            9.448639320908114e-05,
            0.00045202122419141233,
            8.653793338453397e-05
        ],
        "align_select": "select Professionals.role_code, Professionals.st, Professionals.city, Professionals.state",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which owners live in the state whose name contains the substring 'North'? List his first name, last name and email.",
        "gold_select": "select Owners.first_name, Owners.last_name, Owners.em_adr",
        "select_candidates": [
            "select Owners.first_name, Owners.last_name, Owners.home_phone",
            "select Owners.first_name, Owners.last_name, Owners.em_adr",
            "select Owners.first_name, Owners.last_name, Owners.owner_id",
            "select Owners.first_name, Owners.last_name, Owners.cell"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Owners",
        "table_candidates": [
            "Owners"
        ],
        "align_scores": [
            0.0004126269486732781,
            9.664407116360962e-05,
            0.9804378747940063,
            0.00013569070142693818,
            0.000262227316852659,
            8.393486496061087e-05,
            0.00039743789238855243,
            8.337073086295277e-05
        ],
        "align_select": "select Owners.first_name, Owners.last_name, Owners.em_adr",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the first name, last name and email of the owners living in a state whose name contains the substring 'North'.",
        "gold_select": "select Owners.first_name, Owners.last_name, Owners.em_adr",
        "select_candidates": [
            "select Owners.first_name, Owners.last_name, Owners.em_adr",
            "select Owners.first_name, Owners.last_name, Owners.home_phone",
            "select Owners.first_name, Owners.last_name, Owners.owner_id",
            "select Owners.first_name., Owners.last_name, Owners.em_adr"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Owners",
        "table_candidates": [
            "Owners",
            "Sizes Charges Sizes Owners"
        ],
        "align_scores": [
            0.9777505397796631,
            0.00010056044993689284,
            0.00027614840655587614,
            8.759467164054513e-05,
            0.00019675024668686092,
            0.0001087959244614467,
            0.007581161800771952,
            0.00010915473831119016
        ],
        "align_select": "select Owners.first_name, Owners.last_name, Owners.em_adr",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How much does the most recent treatment cost?",
        "gold_select": "select Treatments.cot",
        "select_candidates": [
            "select Treatments.cot",
            "select max(Treatments.cot)",
            "select t8.c5",
            "select min(Treatments.cot)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Treatments",
        "table_candidates": [
            "Charges Treatments",
            "Treatments",
            "Breeds Charges Treatments",
            "Dogs Treatments",
            "Dogs Charges Treatments",
            "Professionals Treatments",
            "Charges"
        ],
        "align_scores": [
            0.013021220453083515,
            6.984258652664721e-05,
            9.350440086564049e-05,
            7.334187102969736e-05,
            0.0007451266865245998,
            6.639828643528745e-05,
            0.00011506189912324771,
            7.533760071964934e-05
        ],
        "align_select": "select Treatments.cot",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Show me the cost of the most recently performed treatment.",
        "gold_select": "select Treatments.cot",
        "select_candidates": [
            "select Treatments.cot",
            "select Charges.chrg_amt",
            "select t8.c5",
            "select Treatments.cot, Treatments.dog_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Treatments",
        "table_candidates": [
            "Charges Treatments",
            "Breeds Charges Treatments",
            "Dogs Charges Treatments",
            "Dogs Treatments",
            "Treatments"
        ],
        "align_scores": [
            0.9119220972061157,
            7.248851034091786e-05,
            0.9306580424308777,
            7.22507611499168e-05,
            0.0012211976572871208,
            6.799708353355527e-05,
            0.0003380177658982575,
            5.943566793575883e-05
        ],
        "align_select": "select Treatments.cot",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "How many professionals did not operate any treatment on dogs?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Professionals.pro_id",
            "select count(*), Professionals.st",
            "select count(distinct Professionals.pro_id)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals",
        "table_candidates": [
            "Professionals Treatments",
            "Dogs Professionals Treatments",
            "Treatment_Types Professionals Treatments",
            "Owners Professionals Treatments",
            "Charges Professionals Treatments",
            "Sizes Professionals Treatments",
            "Breeds Professionals Treatments"
        ],
        "align_scores": [
            0.9880517721176147,
            0.015024800784885883,
            0.00039947693585418165,
            0.0005644143093377352,
            0.00036289525451138616,
            0.00023800395138096064,
            0.057627517729997635,
            0.0006130294059403241
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the number of professionals who have not treated any dogs.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Professionals.pro_id",
            "select count(distinct Professionals.pro_id)",
            "select count(*), Professionals.st"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals",
        "table_candidates": [
            "Professionals Treatments",
            "Dogs Professionals Treatments",
            "Treatment_Types Professionals Treatments",
            "Owners Professionals Treatments",
            "Charges Professionals Treatments",
            "Breeds Professionals Treatments",
            "Sizes Professionals Treatments"
        ],
        "align_scores": [
            0.9819172024726868,
            0.03597159683704376,
            0.00036814066697843373,
            0.000486429053125903,
            0.03018091805279255,
            0.0013711119536310434,
            0.0004185145371593535,
            0.0002377628698013723
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List the dog name, age and weight of the dogs who have been abandoned? 1 stands for yes, and 0 stands for no.",
        "gold_select": "select Dogs.name, Dogs.age, Dogs.weight",
        "select_candidates": [
            "select Dogs.name, Dogs.age, Dogs.weight",
            "select distinct Dogs.name, Dogs.age, Dogs.weight",
            "select Dogs.name, Dogs.age, Dogs.weight, Dogs.aband_yn",
            "select Dogs.dog_id, Dogs.name, Dogs.age, Dogs.weight"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Dogs",
        "table_candidates": [
            "Dogs",
            "Dogs Professionals",
            "Dogs Treatments",
            "Dogs Sizes Treatment_Types"
        ],
        "align_scores": [
            0.3193008601665497,
            0.05834385007619858,
            0.01842895708978176,
            0.0003044951008632779,
            0.000320191727951169,
            0.00018592076958157122,
            0.0003058148140553385,
            0.0003008004277944565
        ],
        "align_select": "select Dogs.name, Dogs.age, Dogs.weight",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the dog name, age and weight of the dogs that were abandoned? Note that 1 stands for yes, and 0 stands for no in the tables.",
        "gold_select": "select Dogs.name, Dogs.age, Dogs.weight",
        "select_candidates": [
            "select Dogs.name, Dogs.age, Dogs.weight",
            "select distinct Dogs.name, Dogs.age, Dogs.weight",
            "select Dogs.name, Dogs.age, Dogs.weight, Dogs.aband_yn",
            "select Dogs.name, Dogs.age, Dogs.weight - Dogs.aband_yn"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Dogs",
        "table_candidates": [
            "Dogs"
        ],
        "align_scores": [
            0.6497166752815247,
            0.0016469331458210945,
            0.00802391767501831,
            0.00011343516962369904,
            0.00037446527858264744,
            0.00010943404777208343,
            0.0008791742147877812,
            0.00011612257367232814
        ],
        "align_select": "select Dogs.name, Dogs.age, Dogs.weight",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How much does each charge type costs? List both charge type and amount.",
        "gold_select": "select Charges.chrg_type, Charges.chrg_amt",
        "select_candidates": [
            "select Charges.chrg_type, Charges.chrg_amt",
            "select Charges.chrg_type, sum(Charges.chrg_amt)",
            "select Charges.chrg_type.c1, Charges.chrg_amt",
            "select Charges.chrg_type, Charges.chrg_amt."
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "Charges",
        "table_candidates": [
            "Charges"
        ],
        "align_scores": [
            0.994371771812439,
            0.0007706243777647614,
            0.9929617047309875,
            0.00019399772281758487,
            0.00021984265185892582,
            0.00012622782378457487,
            0.006221062038093805,
            0.00030340408557094634
        ],
        "align_select": "select Charges.chrg_type, Charges.chrg_amt",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "List each charge type and its amount.",
        "gold_select": "select Charges.chrg_type, Charges.chrg_amt",
        "select_candidates": [
            "select Charges.chrg_type, Charges.chrg_amt",
            "select Charges.chrg_type, sum(Charges.chrg_amt)",
            "select Charges.chrg_type, amount(Charges.chrg_amt)",
            "select Charges.chrg_type, max(Charges.chrg_amt)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "Charges",
        "table_candidates": [
            "Charges"
        ],
        "align_scores": [
            0.9946972131729126,
            0.0002003241825150326,
            0.991630494594574,
            0.0001264131860807538,
            0.00045443655108101666,
            0.00012539082672446966,
            0.005053638946264982,
            0.00014400410873349756
        ],
        "align_select": "select Charges.chrg_type, Charges.chrg_amt",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "How much does the most expensive charge type costs?",
        "gold_select": "select max(Charges.chrg_amt)",
        "select_candidates": [
            "select Charges.chrg_type",
            "select Charges.chrg_type, Charges.chrg_amt",
            "select Charges.chrg_type, sum(Charges.chrg_amt)",
            "select Charges.chrg_type, max(Charges.chrg_amt)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "Charges",
        "table_candidates": [
            "Charges"
        ],
        "align_scores": [
            0.9839788675308228,
            0.9936380982398987,
            0.00046596379252150655,
            0.0006001867586746812,
            0.00023874126782175153,
            0.0012367453891783953,
            0.00010065131209557876,
            0.00010440271580591798
        ],
        "align_select": "select Charges.chrg_type",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What is the charge amount of the most expensive charge type?",
        "gold_select": "select max(Charges.chrg_amt)",
        "select_candidates": [
            "select Charges.chrg_amt",
            "select Charges.chrg_id, Charges.chrg_amt",
            "select Charges.chrg_id, Charges.chrg_type, Charges.chrg_amt",
            "select Charges.chrg_id, Charges.chrg_type, max(Charges.chrg_amt)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "Charges",
        "table_candidates": [
            "Charges"
        ],
        "align_scores": [
            0.9739945530891418,
            0.9935736060142517,
            0.00035524601116776466,
            0.0025227677542716265,
            0.00017794947780203074,
            0.00017760976334102452,
            0.00015341312973760068,
            0.00020989270706195384
        ],
        "align_select": "select Charges.chrg_amt",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "List the email, cell phone and home phone of all the professionals.",
        "gold_select": "select Professionals.email_adr, Professionals.cell_number, Professionals.hp",
        "select_candidates": [
            "select Professionals.email_adr, Professionals.cell_number, Professionals.email_adr",
            "select Professionals.email_adr, Professionals.cell_number, Professionals.hp",
            "select Professionals.email_adr, Professionals.hp, Professionals.email_adr",
            "select Professionals.email_adr, t6.cten, Professionals.email_adr"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals",
        "table_candidates": [
            "Professionals",
            "Dogs Professionals",
            "Owners Professionals"
        ],
        "align_scores": [
            0.0003465425397735089,
            9.637515904614702e-05,
            0.23469582200050354,
            0.00010420448961667717,
            0.0006546129588969052,
            0.0001197444144054316,
            0.0004382134648039937,
            0.00012309441808611155
        ],
        "align_select": "select Professionals.email_adr, Professionals.cell_number, Professionals.hp",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What are the email, cell phone and home phone of each professional?",
        "gold_select": "select Professionals.email_adr, Professionals.cell_number, Professionals.hp",
        "select_candidates": [
            "select Professionals.email_adr, Professionals.cell_number, Professionals.hp",
            "select Professionals.email_adr, Professionals.cell_number, Professionals.email_adr",
            "select Professionals.email_adr, Professionals.hp, Professionals.email_adr",
            "select Professionals.email_adr, t6.cten, Professionals.hp"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals",
        "table_candidates": [
            "Professionals"
        ],
        "align_scores": [
            0.7394734025001526,
            8.883602276910096e-05,
            0.0003897343995049596,
            7.470219861716032e-05,
            0.0009124880889430642,
            0.00010698413097998127,
            0.001449507544748485,
            9.476016566623002e-05
        ],
        "align_select": "select Professionals.email_adr, Professionals.cell_number, Professionals.hp",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "List the first name of all the professionals along with the description of the treatment they have done.",
        "gold_select": "select distinct Professionals.first_name, Treatment_Types.tx_type_desc",
        "select_candidates": [
            "select Professionals.first_name, Treatments.cot",
            "select Professionals.first_name, Treatments.tx_type_code",
            "select Professionals.first_name, Treatments.dog_id",
            "select Professionals.first_name, Treatments.dot"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Treatment_Types Professionals Treatments",
        "table_candidates": [
            "Sizes Professionals Treatments",
            "Sizes Treatment_Types Professionals Treatments",
            "Treatment_Types Professionals Treatments",
            "Dogs Professionals Treatments",
            "Sizes Treatments",
            "Charges Professionals Treatments",
            "Professionals Treatments"
        ],
        "align_scores": [
            0.24289275705814362,
            0.6506560444831848,
            0.10966623574495316,
            0.8234575986862183,
            0.0006839291891083121,
            0.0012303008697926998,
            0.09630045294761658,
            0.20840078592300415
        ],
        "align_select": "select Professionals.first_name, Treatments.tx_type_code",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "What are each professional's first name and description of the treatment they have performed?",
        "gold_select": "select distinct Professionals.first_name, Treatment_Types.tx_type_desc",
        "select_candidates": [
            "select Professionals.first_name, Sizes.size_description",
            "select Professionals.first_name, Treatments.dog_id",
            "select Professionals.first_name, Treatments.tx_type_code",
            "select Professionals.first_name, Treatments.cot"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Treatment_Types Professionals Treatments",
        "table_candidates": [
            "Sizes Professionals Treatments",
            "Sizes Treatment_Types Professionals Treatments",
            "Breeds Sizes Professionals Treatments",
            "Dogs Professionals Treatments",
            "Treatment_Types Professionals Treatments",
            "Sizes Treatments"
        ],
        "align_scores": [
            0.015093027614057064,
            0.02884499542415142,
            0.0007013761787675321,
            0.0007775360718369484,
            0.02181556262075901,
            0.24371188879013062,
            0.3078363537788391,
            0.5421767234802246
        ],
        "align_select": "select Professionals.first_name, Treatments.cot",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "List the name of singers in ascending order of net worth.",
        "gold_select": "select singer.Name",
        "select_candidates": [
            "select singer.Name",
            "select singer.Name, singer.net_worth_m",
            "select singer.Name, singer.Birth_Year",
            "select singer.Name de-facto-ORDER BY"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.995835542678833,
            0.0002599766885396093,
            0.00021048028429504484,
            0.00011019386874977499,
            0.00015314097981899977,
            0.00013844760542269796,
            0.005472504999488592,
            0.00013247884635347873
        ],
        "align_select": "select singer.Name",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "What are the names of singers ordered by ascending net worth?",
        "gold_select": "select singer.Name",
        "select_candidates": [
            "select singer.Name",
            "select singer.Name, singer.net_worth_m",
            "select singer.Name (ordered singer.net_worth_m)",
            "select singer.Name (ordered by singer.net_worth_m)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.9954044818878174,
            0.00028871928225271404,
            0.00018199988699052483,
            0.00011107921454822645,
            0.0007292801747098565,
            0.00020297050650697201,
            0.0006008123746141791,
            0.00016078694898169488
        ],
        "align_select": "select singer.Name",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "What is the name of the singer with the largest net worth?",
        "gold_select": "select singer.Name",
        "select_candidates": [
            "select singer.Name",
            "select singer.Name, singer.net_worth_m",
            "select singer.Name, singer.Birth_Year",
            "select singer.Singer_ID, singer.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.9757742285728455,
            6.81202654959634e-05,
            0.0004141181125305593,
            6.066140849725343e-05,
            0.0006706651765853167,
            6.0049591411370784e-05,
            0.00041246949695050716,
            6.5280357375741e-05
        ],
        "align_select": "select singer.Name",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What is the name of the singer who is worth the most?",
        "gold_select": "select singer.Name",
        "select_candidates": [
            "select singer.Name",
            "select singer.Name, singer.net_worth_m",
            "select singer.Name, singer.Birth_Year",
            "select singer.Name (or singer.Birth_Year)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.9369750022888184,
            6.842645234428346e-05,
            0.0004284048336558044,
            5.9453133872011676e-05,
            0.0004889064584858716,
            6.0839032812509686e-05,
            0.0006886028568260372,
            7.39793831598945e-05
        ],
        "align_select": "select singer.Name",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Show different citizenships and the maximum net worth of singers of each citizenship.",
        "gold_select": "select singer.Citizenship, max(singer.net_worth_m)",
        "select_candidates": [
            "select singer.Citizenship, max(singer.net_worth_m)",
            "select singer.Citizenship., max(singer.net_worth_m)",
            "select singer.Citizenship, max(singer.net_worth_m)",
            "select singer.Citizenship, Max(singer.net_worth_m)"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.9953116774559021,
            0.00036195150460116565,
            0.0017780376365408301,
            0.0003305060672573745,
            0.9953116774559021,
            0.00036195150460116565,
            0.9953116774559021,
            0.00036195150460116565
        ],
        "align_select": "select singer.Citizenship, max(singer.net_worth_m)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "For each citizenship, what is the maximum net worth?",
        "gold_select": "select singer.Citizenship, max(singer.net_worth_m)",
        "select_candidates": [
            "select singer.Citizenship, max(singer.net_worth_m)",
            "select max(singer.net_worth_m), singer.Citizenship",
            "select maximum(singer.net_worth_m), singer.Citizenship",
            "select singer.Citizenship, max(singer.net_worth_m)"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.995171844959259,
            0.00024950169608928263,
            0.9926066398620605,
            0.00016743291052989662,
            0.0013798598665744066,
            0.00014719930186402053,
            0.995171844959259,
            0.00024950169608928263
        ],
        "align_select": "select singer.Citizenship, max(singer.net_worth_m)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "List the name of singers in ascending order of net worth.",
        "gold_select": "select singer.Name",
        "select_candidates": [
            "select singer.Name",
            "select singer.Name, singer.net_worth_m",
            "select singer.Name, singer.Birth_Year",
            "select singer.Name in singer.net_worth_m"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.995835542678833,
            0.0002599766885396093,
            0.00021048028429504484,
            0.00011019386874977499,
            0.00015314097981899977,
            0.00013844760542269796,
            0.0005171472439542413,
            0.00019467927631922066
        ],
        "align_select": "select singer.Name",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "What are the names of singers ordered by ascending net worth?",
        "gold_select": "select singer.Name",
        "select_candidates": [
            "select singer.Name",
            "select singer.Name, singer.net_worth_m",
            "select singer.Name (ordered singer.net_worth_m)",
            "select singer.Name, singer.Birth_Year"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.9954044818878174,
            0.00028871928225271404,
            0.00018199988699052483,
            0.00011107921454822645,
            0.0007292801747098565,
            0.00020297050650697201,
            0.0002188822254538536,
            0.00014085782459005713
        ],
        "align_select": "select singer.Name",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "What is the name of the singer with the largest net worth?",
        "gold_select": "select singer.Name",
        "select_candidates": [
            "select singer.Name",
            "select singer.Name, singer.net_worth_m",
            "select singer.Name, singer.Birth_Year",
            "select singer.Singer_ID, singer.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.9757742285728455,
            6.81202654959634e-05,
            0.0004141181125305593,
            6.066140849725343e-05,
            0.0006706651765853167,
            6.0049591411370784e-05,
            0.00041246949695050716,
            6.5280357375741e-05
        ],
        "align_select": "select singer.Name",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What is the name of the singer who is worth the most?",
        "gold_select": "select singer.Name",
        "select_candidates": [
            "select singer.Name",
            "select singer.Name, singer.net_worth_m",
            "select singer.Name, singer.Birth_Year",
            "select singer.Singer_ID, singer.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.9369750022888184,
            6.842645234428346e-05,
            0.0004284048336558044,
            5.9453133872011676e-05,
            0.0004889064584858716,
            6.0839032812509686e-05,
            0.0004342573811300099,
            6.358868267852813e-05
        ],
        "align_select": "select singer.Name",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Show different citizenships and the maximum net worth of singers of each citizenship.",
        "gold_select": "select singer.Citizenship, max(singer.net_worth_m)",
        "select_candidates": [
            "select singer.Citizenship, max(singer.net_worth_m)",
            "select singer.Citizenship., max(singer.net_worth_m)",
            "select singer.Citizenship, max(singer.net_worth_m)",
            "select singer.Citizenship, Max(singer.net_worth_m)"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.9953116774559021,
            0.00036195150460116565,
            0.0017780376365408301,
            0.0003305060672573745,
            0.9953116774559021,
            0.00036195150460116565,
            0.9953116774559021,
            0.00036195150460116565
        ],
        "align_select": "select singer.Citizenship, max(singer.net_worth_m)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "For each citizenship, what is the maximum net worth?",
        "gold_select": "select singer.Citizenship, max(singer.net_worth_m)",
        "select_candidates": [
            "select singer.Citizenship, max(singer.net_worth_m)",
            "select max(singer.net_worth_m), singer.Citizenship",
            "select singer.Citizenship, max(singer.net_worth_m)",
            "select maximum(singer.net_worth_m), singer.Citizenship"
        ],
        "select_labels": [
            1.0,
            1.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.995171844959259,
            0.00024950169608928263,
            0.9926066398620605,
            0.00016743291052989662,
            0.995171844959259,
            0.00024950169608928263,
            0.0013798598665744066,
            0.00014719930186402053
        ],
        "align_select": "select singer.Citizenship, max(singer.net_worth_m)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "What is the feature type name of feature AirCon?",
        "gold_select": "select Ref_Feature_Types.feature_type_name",
        "select_candidates": [
            "select Ref_Feature_Types.feature_type_name",
            "select Ref_Feature_Types.feature_type_name, Other_Available_Features.feat_name",
            "select Ref_Feature_Types.feature_type_name, Other_Available_Features.feat_id",
            "select Ref_Feature_Types.feature_type_name, Other_Available_Features.feat_type_code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Ref_Feature_Types Other_Available_Features",
        "table_candidates": [
            "Ref_Feature_Types Other_Available_Features"
        ],
        "align_scores": [
            0.9962326884269714,
            8.47316550789401e-05,
            0.0003253924078308046,
            5.9947178669972345e-05,
            0.00014098873361945152,
            5.805499677080661e-05,
            0.00019471081031952053,
            6.004569513606839e-05
        ],
        "align_select": "select Ref_Feature_Types.feature_type_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show the property type descriptions of properties belonging to that code.",
        "gold_select": "select Ref_Property_Types.prop_type_desc",
        "select_candidates": [
            "select Ref_Property_Types.prop_type_desc",
            "select Ref_Property_Types.prop_type_desc, Properties.prop_type_code",
            "select Ref_Property_Types.prop_type_desc, Properties.property_id",
            "select Ref_Property_Types.prop_type_code, Ref_Property_Types.prop_type_desc"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Ref_Property_Types Properties",
        "table_candidates": [
            "Ref_Property_Types Properties",
            "Ref_Property_Types"
        ],
        "align_scores": [
            0.02635769173502922,
            0.00012890860671177506,
            0.006026260554790497,
            8.750033885007724e-05,
            0.0002988851338159293,
            9.649378625908867e-05,
            0.009094362147152424,
            7.848698442103341e-05
        ],
        "align_select": "select Ref_Property_Types.prop_type_desc",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "What are the names of properties that are either houses or apartments with more than 1 room?",
        "gold_select": "select Properties.prop_name",
        "select_candidates": [
            "select Properties.prop_name",
            "select Properties.prop_name, Properties.room_count",
            "select Properties.prop_name, Properties.prop_adr",
            "select Properties.prop_name, Properties.prop_type_code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "Properties",
        "table_candidates": [
            "Properties"
        ],
        "align_scores": [
            0.9884711503982544,
            0.9520977735519409,
            0.00028753504739142954,
            0.00015046063344925642,
            0.0003605570236686617,
            0.00014815146278124303,
            0.00020876541384495795,
            0.00012325005081947893
        ],
        "align_select": "select Properties.prop_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the feature type name of feature AirCon?",
        "gold_select": "select Ref_Feature_Types.feature_type_name",
        "select_candidates": [
            "select Ref_Feature_Types.feature_type_name",
            "select Ref_Feature_Types.feature_type_name, Other_Available_Features.feature_type_code",
            "select Ref_Feature_Types.feature_type_name, Other_Available_Features.feat_name",
            "select Ref_Feature_Types.feature_type_name, Other_Available_Features.feat_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Ref_Feature_Types Other_Available_Features",
        "table_candidates": [
            "Ref_Feature_Types Other_Available_Features"
        ],
        "align_scores": [
            0.9962326884269714,
            8.47316550789401e-05,
            0.00018248209380544722,
            6.0776575992349535e-05,
            0.0003253924078308046,
            5.9947178669972345e-05,
            0.00014098873361945152,
            5.805499677080661e-05
        ],
        "align_select": "select Ref_Feature_Types.feature_type_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show the property type descriptions of properties belonging to that code.",
        "gold_select": "select Ref_Property_Types.prop_type_desc",
        "select_candidates": [
            "select Ref_Property_Types.prop_type_desc",
            "select Ref_Property_Types.prop_type_desc, Properties.prop_type_code",
            "select Ref_Property_Types.prop_type_desc, Properties.prop_id",
            "select Ref_Property_Types.property_type_code, Ref_Property_Types.prop_type_desc"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Ref_Property_Types Properties",
        "table_candidates": [
            "Ref_Property_Types Properties"
        ],
        "align_scores": [
            0.02635769173502922,
            0.00012890860671177506,
            0.006026260554790497,
            8.750033885007724e-05,
            0.00038052682066336274,
            0.00010595991625450552,
            0.009860152378678322,
            7.938906492199749e-05
        ],
        "align_select": "select Ref_Property_Types.prop_type_desc",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "What are the names of properties that are either houses or apartments with more than 1 room?",
        "gold_select": "select Properties.prop_name",
        "select_candidates": [
            "select Properties.prop_name",
            "select Properties.prop_name, Properties.room_count",
            "select Properties.prop_name, Properties.property_address",
            "select Properties.prop_name, Properties.reqd_pr"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "Properties",
        "table_candidates": [
            "Properties"
        ],
        "align_scores": [
            0.9884711503982544,
            0.9520977735519409,
            0.00028753504739142954,
            0.00015046063344925642,
            0.0002975062816403806,
            0.00015117970178835094,
            0.00023508338199462742,
            0.0001089933211915195
        ],
        "align_select": "select Properties.prop_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the feature type name of feature AirCon?",
        "gold_select": "select Ref_Feature_Types.feat_type_name",
        "select_candidates": [
            "select Ref_Feature_Types.feat_type_name",
            "select Ref_Feature_Types.feat_type_code, Ref_Feature_Types.feat_type_name",
            "select Ref_Feature_Types.feat_type_name, Other_Available_Features.feat_type_code",
            "select Ref_Feature_Types.feat_type_name, Other_Available_Features.feat_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Ref_Feature_Types Other_Available_Features",
        "table_candidates": [
            "Ref_Feature_Types Other_Available_Features",
            "Ref_Feature_Types Ref_Property_Types Other_Available_Features",
            "Ref_Feature_Types Other_Available_Features Properties",
            "Ref_Feature_Types Other_Available_Features Other_Property_Features"
        ],
        "align_scores": [
            0.9962548017501831,
            8.352175791515037e-05,
            0.0001550141314510256,
            7.124384865164757e-05,
            0.0002066560264211148,
            6.005537943565287e-05,
            0.00032697615097276866,
            5.9427227824926376e-05
        ],
        "align_select": "select Ref_Feature_Types.feat_type_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show the property type descriptions of properties belonging to that code.",
        "gold_select": "select Ref_Property_Types.prop_type_desc",
        "select_candidates": [
            "select Ref_Property_Types.prop_type_desc",
            "select Ref_Property_Types.prop_type_desc, Properties.prop_type_code",
            "select Ref_Property_Types.prop_type_desc, Properties.prop_id",
            "select Ref_Property_Types.prop_type_code, Ref_Property_Types.prop_type_desc"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Ref_Property_Types Properties",
        "table_candidates": [
            "Ref_Property_Types Properties",
            "Ref_Property_Types"
        ],
        "align_scores": [
            0.02635769173502922,
            0.00012890860671177506,
            0.006026260554790497,
            8.750033885007724e-05,
            0.00038052682066336274,
            0.00010595991625450552,
            0.009094362147152424,
            7.848698442103341e-05
        ],
        "align_select": "select Ref_Property_Types.prop_type_desc",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "What are the names of properties that are either houses or apartments with more than 1 room?",
        "gold_select": "select Properties.prop_name",
        "select_candidates": [
            "select Properties.prop_name",
            "select Properties.prop_name, Properties.room_cnt",
            "select Properties.prop_name, Properties.prop_adr",
            "select Properties.prop_name, Properties.prop_type_code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "Properties",
        "table_candidates": [
            "Properties"
        ],
        "align_scores": [
            0.9884711503982544,
            0.9520977735519409,
            0.00044631684431806207,
            0.00020581067656166852,
            0.0003605570236686617,
            0.00014815146278124303,
            0.00020876541384495795,
            0.00012325005081947893
        ],
        "align_select": "select Properties.prop_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the feature type name of feature AirCon?",
        "gold_select": "select Ref_Feature_Types.feature_type_name",
        "select_candidates": [
            "select Ref_Feature_Types.feature_type_name",
            "select Ref_Feature_Types.feature_type_name, Other_Available_Features.feature_name",
            "select Ref_Feature_Types.feature_type_code, Ref_Feature_Types.feature_type_name",
            "select Ref_Feature_Types.feature_type_name, Ref_Feature_Types.feature_type_code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Ref_Feature_Types Other_Available_Features",
        "table_candidates": [
            "Ref_Feature_Types Other_Available_Features",
            "Ref_Feature_Types Ref_Property_Types Other_Available_Features",
            "Ref_Feature_Types Other_Available_Features Properties",
            "Ref_Feature_Types Other_Available_Features Other_Property_Features"
        ],
        "align_scores": [
            0.9962326884269714,
            8.47316550789401e-05,
            0.00022857642034068704,
            6.079993909224868e-05,
            0.00015776189684402198,
            7.16172726242803e-05,
            0.00016276324458885938,
            6.346448935801163e-05
        ],
        "align_select": "select Ref_Feature_Types.feature_type_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of properties that are either houses or apartments with more than 1 room?",
        "gold_select": "select Properties.prop_name",
        "select_candidates": [
            "select Properties.prop_name",
            "select Properties.prop_name, Properties.room_count",
            "select Properties.prop_name, Properties.prop_adr",
            "select Properties.prop_name, Properties.property_type_code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "Properties",
        "table_candidates": [
            "Properties",
            "Other_Available_Features Properties",
            "Ref_Property_Types Properties"
        ],
        "align_scores": [
            0.9884711503982544,
            0.9520977735519409,
            0.00028753504739142954,
            0.00015046063344925642,
            0.0003605570236686617,
            0.00014815146278124303,
            0.00020375658641569316,
            0.00013581238454207778
        ],
        "align_select": "select Properties.prop_name",
        "align_structure": "SELECT-FROM-WHERE"
    }
]