[
    {
        "question": "What is the average, minimum, and maximum age of all singers from Netherlands?",
        "gold_select": "select avg(singer.Age), min(singer.Age), max(singer.Age)",
        "select_candidates": [
            "select avg(singer.Age), min(singer.Age), max(singer.Age)",
            "select avg(singer.Is_male), min(singer.Age), max(singer.Age)",
            "select avg(singer.Age), min(singer.Age), max(singer.Age)",
            "select avg(singer.Age), min(singer.Age), max(singer.Is_male)"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.9954240918159485,
            0.00012370842159725726,
            0.00020396029867697507,
            7.084733078954741e-05,
            0.9954240918159485,
            0.00012370842159725726,
            0.0002502936404198408,
            7.518745405832306e-05
        ],
        "align_select": "select avg(singer.Age), min(singer.Age), max(singer.Age)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the average, minimum, and maximum age of all singers from United States?",
        "gold_select": "select avg(singer.Age), min(singer.Age), max(singer.Age)",
        "select_candidates": [
            "select avg(singer.Age), min(singer.Age), max(singer.Age)",
            "select avg(singer.Is_male), min(singer.Age), max(singer.Age)",
            "select avg(singer.Age), min(singer.Age), max(singer.Is_male)",
            "select avg(singer.Age), min(singer.Age), max(singer.Age)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.9943705201148987,
            0.00010249338811263442,
            0.00022835029812995344,
            7.04889462213032e-05,
            0.00021536687563639134,
            7.126267882995307e-05,
            0.9943705201148987,
            0.00010249338811263442
        ],
        "align_select": "select avg(singer.Age), min(singer.Age), max(singer.Age)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the number of cat pets that are raised by female students (with sex F).",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Student.StuID",
            "select count(*), Student.Sex",
            "select count(*), Student.LName"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Student Has_Pet Pets",
        "table_candidates": [
            "Student Has_Pet Pets",
            "Student Has_Pet"
        ],
        "align_scores": [
            0.991459846496582,
            0.008738909848034382,
            0.000503957737237215,
            0.0007672442006878555,
            0.0003464054607320577,
            0.7031693458557129,
            0.0004954140749759972,
            0.0027433503419160843
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many cat pets are raised by female students?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Student.Sex",
            "select count(*), Student.StuID",
            "select count(*), Student.Sex"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Student Has_Pet Pets",
        "table_candidates": [
            "Student Has_Pet Pets",
            "Student Has_Pet"
        ],
        "align_scores": [
            0.9879204034805298,
            0.000130499349324964,
            0.00044869372504763305,
            7.84177755122073e-05,
            0.0003477568388916552,
            6.80724042467773e-05,
            0.00044869372504763305,
            7.84177755122073e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the first name of students who have cat or cat pet.",
        "gold_select": "select distinct Student.Fname",
        "select_candidates": [
            "select Student.Fname",
            "select distinct Student.Fname",
            "select Student.StuID, Student.Fname",
            "select distinct Student.Fname, Student.LName"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Student Has_Pet Pets",
        "table_candidates": [
            "Student Has_Pet Pets"
        ],
        "align_scores": [
            0.9439062476158142,
            0.00277464697137475,
            0.013233926147222519,
            0.00014489429304376245,
            0.0001721902226563543,
            7.57825982873328e-05,
            0.00013345462502911687,
            6.669895810773596e-05
        ],
        "align_select": "select Student.Fname",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the first name of students who have dog or dog pet.",
        "gold_select": "select distinct Student.Fname",
        "select_candidates": [
            "select Student.Fname",
            "select distinct Student.Fname",
            "select Student.StuID, Student.Fname",
            "select distinct Student.Fname, Student.LName"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Student Has_Pet Pets",
        "table_candidates": [
            "Student Has_Pet Pets"
        ],
        "align_scores": [
            0.9360420107841492,
            0.014573200605809689,
            0.017893673852086067,
            0.00018593903223518282,
            0.00018433493096381426,
            9.536297875456512e-05,
            0.0001989103911910206,
            7.300484139705077e-05
        ],
        "align_select": "select Student.Fname",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the first names of every student who has a cat or cat as a pet?",
        "gold_select": "select distinct Student.Fname",
        "select_candidates": [
            "select Student.Fname",
            "select distinct Student.Fname",
            "select Student.StuID, Student.Fname",
            "select distinct Student.Fname, Student.LName"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Student Has_Pet Pets",
        "table_candidates": [
            "Student Has_Pet Pets",
            "Student Has_Pet"
        ],
        "align_scores": [
            0.2667976915836334,
            0.06546849012374878,
            0.020365115255117416,
            0.0002598718274384737,
            0.0002038176025962457,
            8.624414476798847e-05,
            0.0002577227132860571,
            7.006405940046534e-05
        ],
        "align_select": "select Student.Fname",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the first names of every student who has a dog or dog as a pet?",
        "gold_select": "select distinct Student.Fname",
        "select_candidates": [
            "select Student.Fname",
            "select distinct Student.Fname",
            "select Student.StuID, Student.Fname",
            "select distinct Student.Fname, Student.LName"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Student Has_Pet Pets",
        "table_candidates": [
            "Student Has_Pet Pets",
            "Student Has_Pet"
        ],
        "align_scores": [
            0.357950896024704,
            0.2180047482252121,
            0.024439910426735878,
            0.0004042887594550848,
            0.00021342572290450335,
            0.00010454477887833491,
            0.00029258712311275303,
            8.097134559648111e-05
        ],
        "align_select": "select Student.Fname",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the major and age of students who do not have a dog pet.",
        "gold_select": "select Student.Major, Student.Age",
        "select_candidates": [
            "select Student.Major, Student.Age",
            "select distinct Student.Major, Student.Age",
            "select Student.Fname, Student.Age, Student.Major",
            "select Student.Fname, Student.Major, Student.Age"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "Student Has_Pet Pets",
        "table_candidates": [
            "Student Has_Pet Pets",
            "Student Pets"
        ],
        "align_scores": [
            0.14763443171977997,
            0.14763443171977997,
            0.012263602577149868,
            0.012263602577149868,
            0.00023218530986923724,
            0.00023218530986923724,
            0.00017348225810565054,
            0.00017348225810565054
        ],
        "align_select": "select Student.Major, Student.Age",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "What major is every student who does not own a dog as a pet, and also how old are they?",
        "gold_select": "select Student.Major, Student.Age",
        "select_candidates": [
            "select Student.Major, Student.Age",
            "select Student.Fname, Student.Major, Student.Age",
            "select distinct Student.Major, Student.Age",
            "select Student.LName, Student.Age"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "Student Has_Pet Pets",
        "table_candidates": [
            "Student Has_Pet Pets",
            "Student Pets",
            "Student Has_Pet"
        ],
        "align_scores": [
            0.05198507755994797,
            0.9720845222473145,
            0.0001818359742173925,
            0.0002763991942629218,
            0.012447046115994453,
            0.05514485016465187,
            0.0002952992799691856,
            0.0009457831620238721
        ],
        "align_select": "select Student.Major, Student.Age",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the id of students who do not have a dog pet.",
        "gold_select": "select Student.StuID",
        "select_candidates": [
            "select Has_Pet.StuID",
            "select Student.StuID",
            "select Has_Pet.StuID, Pets.PetType",
            "select Has_Pet.StuID, Has_Pet.PetID"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Student Has_Pet Pets",
        "table_candidates": [
            "Student Has_Pet Pets",
            "Has_Pet Pets"
        ],
        "align_scores": [
            0.984310507774353,
            0.0007227358291856945,
            0.6677654385566711,
            0.0015583676286041737,
            0.0006800366099923849,
            0.00014479871606454253,
            0.00014883805124554783,
            8.27401308924891e-05
        ],
        "align_select": "select Has_Pet.StuID",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "What is the id of the pet owned by the student whose last name is 'Kim'?",
        "gold_select": "select Has_Pet.PetID",
        "select_candidates": [
            "select Has_Pet.PetID",
            "select Has_Pet.PetID, Student.Fname",
            "select Has_Pet.PetID, Student.StuID",
            "select Has_Pet.PetID, Student.LName"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Student Has_Pet",
        "table_candidates": [
            "Student Has_Pet Pets",
            "Student Has_Pet"
        ],
        "align_scores": [
            0.2581813633441925,
            8.743243961362168e-05,
            0.00024291465524584055,
            6.411060167010874e-05,
            0.0002398610522504896,
            7.160381210269406e-05,
            0.00022409608936868608,
            7.23203775123693e-05
        ],
        "align_select": "select Has_Pet.PetID",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many car makers are there in germany?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), countries.CountryId",
            "select count(*), countries.CountryName",
            "select count(*), countries.CountryId, countries.CountryName"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "countries car_makers",
        "table_candidates": [
            "countries car_makers"
        ],
        "align_scores": [
            0.9940225481987,
            8.341175998793915e-05,
            0.00023059421801008284,
            0.00010582136746961623,
            0.00019787607016041875,
            8.545807213522494e-05,
            0.0001492493465775624,
            6.078567821532488e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many car makers are there in uk?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), countries.CountryName",
            "select count(*), countries.CountryId",
            "select count(*) (car_makers.Maker)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "countries car_makers",
        "table_candidates": [
            "countries car_makers",
            "countries car_makers model_list"
        ],
        "align_scores": [
            0.99365234375,
            6.968744128243998e-05,
            0.00018666112737264484,
            7.013927097432315e-05,
            0.000200237293029204,
            8.361261279787868e-05,
            0.0005275835283100605,
            6.636985926888883e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many car makers are there in usa?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), countries.CountryId",
            "select count(*), countries.CountryName",
            "select count(*), car_makers.Maker"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "countries car_makers",
        "table_candidates": [
            "countries car_makers"
        ],
        "align_scores": [
            0.9938852190971375,
            7.288254710147157e-05,
            0.00020172222866676748,
            8.517201786162332e-05,
            0.00019266385061200708,
            7.218346581794322e-05,
            0.0002613504766486585,
            5.7469631428830326e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many car makers are there in sweden?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), countries.CountryId",
            "select count(*), countries.CountryId, countries.CountryName",
            "select count(*), countries.CountryName"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "countries car_makers",
        "table_candidates": [
            "countries car_makers"
        ],
        "align_scores": [
            0.9935623407363892,
            8.553324005333707e-05,
            0.00023507216246798635,
            9.029055217979476e-05,
            0.0001446704991394654,
            5.9283524024067447e-05,
            0.00020238420984242111,
            7.261629070853814e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many car makers are there in japan?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), countries.CountryId",
            "select count(*), countries.CountryId, countries.CountryName",
            "select count(*), countries.CountryName"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "countries car_makers",
        "table_candidates": [
            "countries car_makers"
        ],
        "align_scores": [
            0.9932259917259216,
            7.686984463362023e-05,
            0.00023814060841687024,
            9.050933294929564e-05,
            0.00015288549184333533,
            6.070116796763614e-05,
            0.00020810360729228705,
            7.506638212362304e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many car models are produced in the germany?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(distinct model_list.Model)",
            "select count(distinct model_list.Maker)",
            "select count(model_list.Model)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "countries car_makers model_list",
        "table_candidates": [
            "countries car_makers model_list car_names",
            "countries car_makers model_list",
            "countries car_makers",
            "countries car_makers car_names"
        ],
        "align_scores": [
            0.9928107857704163,
            0.0009914254769682884,
            0.19001199305057526,
            0.00013365023187361658,
            0.0031222279649227858,
            9.871085057966411e-05,
            0.9891140460968018,
            0.0002824788971338421
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many car models are produced in the uk?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(distinct model_list.Model)",
            "select count(*), countries.CountryId",
            "select count(*), countries.CountryName"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "countries car_makers model_list",
        "table_candidates": [
            "countries car_makers model_list car_names",
            "countries car_makers model_list",
            "countries car_makers",
            "countries car_makers car_names"
        ],
        "align_scores": [
            0.9931269884109497,
            0.0014189997455105186,
            0.22482633590698242,
            0.00014351267600432038,
            0.00022608791186939925,
            0.00029389941482804716,
            0.00024238623154815286,
            0.0006385170854628086
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many car models are produced in the sweden?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(distinct model_list.Model)",
            "select count(*), countries.CountryId",
            "select count(model_list.Model)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "countries car_makers model_list",
        "table_candidates": [
            "countries car_makers model_list car_names",
            "countries car_makers model_list",
            "countries car_makers",
            "countries car_makers car_names"
        ],
        "align_scores": [
            0.9926635026931763,
            0.0020472295582294464,
            0.1827235221862793,
            0.00012767844600602984,
            0.00021738601208198816,
            0.0002200884628109634,
            0.9921132326126099,
            0.00029595656087622046
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many car models are produced in the japan?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(distinct model_list.Model)",
            "select count(model_list.Model)",
            "select count(*), countries.CountryId"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "countries car_makers model_list",
        "table_candidates": [
            "countries car_makers model_list car_names",
            "countries car_makers model_list",
            "countries car_makers",
            "countries car_makers car_names"
        ],
        "align_scores": [
            0.9910610318183899,
            0.0006744440761394799,
            0.12418292462825775,
            0.00013343934551812708,
            0.9855875968933105,
            0.00026144194998778403,
            0.0002162259042961523,
            0.00027955134282819927
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many car models are produced in the italy?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(distinct model_list.Model)",
            "select count(*), countries.CountryId",
            "select count(model_list.Model)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "countries car_makers model_list",
        "table_candidates": [
            "countries car_makers model_list car_names",
            "countries car_makers model_list",
            "countries car_makers",
            "countries car_makers car_names"
        ],
        "align_scores": [
            0.9926356673240662,
            0.0005248874658718705,
            0.3635450303554535,
            0.00013814114208798856,
            0.00022352969972416759,
            0.00023989719920791686,
            0.9905803799629211,
            0.0002544471062719822
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which countries in america have at least 3 car manufacturers?",
        "gold_select": "select countries.CountryName",
        "select_candidates": [
            "select countries.CountryName",
            "select countries.CountryName, continents.ContId",
            "select countries.CountryName, continents.Continent",
            "select countries.CountryName, car_makers.Country"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY-HAVING",
            "SELECT-FROM-WHERE-GROUP BY-HAVING-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "continents countries car_makers",
        "table_candidates": [
            "continents countries car_makers"
        ],
        "align_scores": [
            0.9043040871620178,
            0.00019293867808301002,
            0.003908274695277214,
            0.0001257929834537208,
            0.00047465195530094206,
            0.00010015851876232773,
            0.001536248018965125,
            8.171264926204458e-05
        ],
        "align_select": "select countries.CountryName",
        "align_structure": "SELECT-FROM-WHERE-GROUP BY-HAVING"
    },
    {
        "question": "Which countries in asia have at least 3 car manufacturers?",
        "gold_select": "select countries.CountryName",
        "select_candidates": [
            "select countries.CountryName",
            "select countries.CountryName, continents.Continent",
            "select countries.CountryName, continents.ContId",
            "select countries.CountryName, t0.c2"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY-HAVING",
            "SELECT-FROM-WHERE-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "continents countries car_makers",
        "table_candidates": [
            "continents countries car_makers",
            "countries car_makers"
        ],
        "align_scores": [
            0.9537733197212219,
            0.00014259548333939165,
            0.00044418746256269515,
            7.25462450645864e-05,
            0.002841802779585123,
            7.329837535507977e-05,
            0.00022443049238063395,
            6.325240974547341e-05
        ],
        "align_select": "select countries.CountryName",
        "align_structure": "SELECT-FROM-WHERE-GROUP BY-HAVING"
    },
    {
        "question": "What is the average edispl of the cars of model honda?",
        "gold_select": "select avg(cars_data.Edispl)",
        "select_candidates": [
            "select avg(cars_data.Edispl)",
            "select an avg(cars_data.Edispl)",
            "select avg(cars_data.Edispl)",
            "select  avg(cars_data.Edispl)"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_names cars_data",
        "table_candidates": [
            "car_names cars_data",
            "model_list car_names cars_data",
            "car_makers car_names cars_data",
            "car_makers model_list car_names cars_data",
            "countries car_names cars_data",
            "continents car_names cars_data"
        ],
        "align_scores": [
            0.9964755177497864,
            8.543321746401489e-05,
            0.000379774282919243,
            0.00011810644355136901,
            0.9964755177497864,
            8.543321746401489e-05,
            0.9964755177497864,
            8.543321746401489e-05
        ],
        "align_select": "select avg(cars_data.Edispl)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the average edispl of the cars of model buick?",
        "gold_select": "select avg(cars_data.Edispl)",
        "select_candidates": [
            "select avg(cars_data.Edispl)",
            "select an avg(cars_data.Edispl)",
            "select  avg(cars_data.Edispl)",
            "select avg(cars_data.Edispl)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_names cars_data",
        "table_candidates": [
            "car_names cars_data",
            "model_list car_names cars_data",
            "car_makers car_names cars_data",
            "car_makers model_list car_names cars_data",
            "countries car_names cars_data",
            "continents car_names cars_data"
        ],
        "align_scores": [
            0.9964932799339294,
            8.541994611732662e-05,
            0.0003788155154325068,
            0.00011499114771140739,
            0.9964932799339294,
            8.541994611732662e-05,
            0.9964932799339294,
            8.541994611732662e-05
        ],
        "align_select": "select avg(cars_data.Edispl)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the average edispl of the cars of model chrysler?",
        "gold_select": "select avg(cars_data.Edispl)",
        "select_candidates": [
            "select avg(cars_data.Edispl)",
            "select an avg(cars_data.Edispl)",
            "select avg(cars_data.Edispl)",
            "select  avg(cars_data.Edispl)"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_names cars_data",
        "table_candidates": [
            "car_names cars_data",
            "model_list car_names cars_data",
            "car_makers model_list car_names cars_data",
            "car_makers car_names cars_data",
            "countries car_names cars_data",
            "continents car_names cars_data",
            "car_makers model_list cars_data",
            "car_makers cars_data"
        ],
        "align_scores": [
            0.9965026378631592,
            7.399420428555459e-05,
            0.0003751627809833735,
            9.828732436290011e-05,
            0.9965026378631592,
            7.399420428555459e-05,
            0.9965026378631592,
            7.399420428555459e-05
        ],
        "align_select": "select avg(cars_data.Edispl)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the average edispl of the cars of model chevrolet?",
        "gold_select": "select avg(cars_data.Edispl)",
        "select_candidates": [
            "select avg(cars_data.Edispl)",
            "select an avg(cars_data.Edispl)",
            "select  avg(cars_data.Edispl)",
            "select avg(cars_data.Edispl)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_names cars_data",
        "table_candidates": [
            "car_names cars_data",
            "model_list car_names cars_data",
            "car_makers car_names cars_data",
            "car_makers model_list car_names cars_data",
            "countries car_names cars_data",
            "continents car_names cars_data"
        ],
        "align_scores": [
            0.9964979887008667,
            8.561975118936971e-05,
            0.0003741166729014367,
            0.00011655467096716166,
            0.9964979887008667,
            8.561975118936971e-05,
            0.9964979887008667,
            8.561975118936971e-05
        ],
        "align_select": "select avg(cars_data.Edispl)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the average edispl of the cars of model amc?",
        "gold_select": "select avg(cars_data.Edispl)",
        "select_candidates": [
            "select avg(cars_data.Edispl)",
            "select an avg(cars_data.Edispl)",
            "select avg(cars_data.Edispl)",
            "select  avg(cars_data.Edispl)"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_names cars_data",
        "table_candidates": [
            "car_names cars_data",
            "model_list car_names cars_data",
            "car_makers car_names cars_data",
            "cars_data",
            "continents car_names cars_data",
            "car_makers cars_data",
            "model_list cars_data",
            "countries cars_data"
        ],
        "align_scores": [
            0.9963954091072083,
            0.00011668477236526087,
            0.000380487646907568,
            0.0001078349378076382,
            0.9963954091072083,
            0.00011668477236526087,
            0.9963954091072083,
            0.00011668477236526087
        ],
        "align_select": "select avg(cars_data.Edispl)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many car models were produced by the maker with full name General Motors?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(distinct model_list.Model)",
            "select count(*), car_makers.Maker",
            "select count(model_list.Model)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_makers model_list",
        "table_candidates": [
            "car_makers model_list car_names",
            "countries car_makers model_list car_names",
            "continents car_makers model_list car_names",
            "car_makers model_list",
            "car_makers model_list car_makers car_names"
        ],
        "align_scores": [
            0.9910879731178284,
            0.00014048762386664748,
            0.6236659288406372,
            8.025574061321095e-05,
            0.0004607774317264557,
            0.0001097562417271547,
            0.9934080839157104,
            0.00011413326865294948
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many car models were produced by the maker with full name Volkswagen?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), car_makers.Maker, car_makers.FullName",
            "select count(*), car_makers.Maker",
            "select count(distinct model_list.Model)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_makers model_list",
        "table_candidates": [
            "car_makers model_list car_names",
            "countries car_makers model_list car_names",
            "continents car_makers model_list car_names",
            "car_makers model_list"
        ],
        "align_scores": [
            0.9878303408622742,
            0.00016446436347905546,
            0.00014822605589870363,
            6.846673204563558e-05,
            0.0004534149484243244,
            0.0001436128659406677,
            0.7813572883605957,
            8.206327765947208e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many car models were produced by the maker with full name Ford Motor Company?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), car_makers.Maker, car_makers.FullName",
            "select count(*), car_makers.Maker",
            "select count(distinct model_list.Model)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_makers model_list",
        "table_candidates": [
            "car_makers model_list car_names",
            "car_makers model_list",
            "countries car_makers model_list car_names",
            "continents car_makers model_list car_names"
        ],
        "align_scores": [
            0.9920995235443115,
            0.00013382530596572906,
            0.00015073777467478067,
            7.382800686173141e-05,
            0.000469381979200989,
            0.00014144547458272427,
            0.7563490271568298,
            8.647984213894233e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many car models were produced by the maker with full name Toyota?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), car_makers.Maker, car_makers.FullName",
            "select count(*), car_makers.Maker",
            "select count(distinct model_list.Model)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_makers model_list",
        "table_candidates": [
            "car_makers model_list car_names",
            "countries car_makers model_list car_names",
            "car_makers model_list"
        ],
        "align_scores": [
            0.9884127974510193,
            0.0001420470653101802,
            0.00014425849076360464,
            6.809571641497314e-05,
            0.0004462997894734144,
            0.0001249916385859251,
            0.7123182415962219,
            8.171903755282983e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many car models were produced by the maker with full name Chrysler?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), car_makers.Maker, car_makers.FullName",
            "select count(*), car_makers.Maker",
            "select count(distinct model_list.Model)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_makers model_list",
        "table_candidates": [
            "car_makers model_list car_names",
            "countries car_makers model_list car_names",
            "continents car_makers model_list car_names",
            "car_makers model_list"
        ],
        "align_scores": [
            0.9911342263221741,
            0.00803812500089407,
            0.00014731919509358704,
            0.00019599904771894217,
            0.0004748192150145769,
            0.07826041430234909,
            0.8177412152290344,
            0.0001716080296318978
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the number of car models created by the car maker General Motors?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(distinct model_list.Model)",
            "select count(*), car_makers.Id",
            "select count(model_list.Model)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_makers model_list",
        "table_candidates": [
            "car_makers model_list car_names",
            "countries car_makers model_list car_names",
            "continents car_makers model_list car_names",
            "car_makers model_list"
        ],
        "align_scores": [
            0.9917077422142029,
            8.126869943225756e-05,
            0.04013928771018982,
            7.973700849106535e-05,
            0.0003669314901344478,
            6.841445429017767e-05,
            0.9939500093460083,
            9.516385762253776e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the number of car models created by the car maker Volkswagen?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), car_makers.Maker, car_makers.FullName",
            "select count(*), car_makers.Maker",
            "select count(*), car_makers.Id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_makers model_list",
        "table_candidates": [
            "car_makers model_list car_names",
            "countries car_makers model_list car_names",
            "continents car_makers model_list car_names",
            "car_makers model_list"
        ],
        "align_scores": [
            0.9915930032730103,
            8.303756476379931e-05,
            0.0001386190706398338,
            5.9756664995802566e-05,
            0.0002925006556324661,
            6.308242154773325e-05,
            0.0004028193943668157,
            7.162348629208282e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the number of car models created by the car maker Ford Motor Company?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), car_makers.Maker, car_makers.FullName",
            "select count(*), car_makers.FullName",
            "select count(model_list.Model)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_makers model_list",
        "table_candidates": [
            "car_makers model_list car_names",
            "car_makers model_list",
            "countries car_makers model_list car_names",
            "continents car_makers model_list car_names"
        ],
        "align_scores": [
            0.993935763835907,
            8.230230014305562e-05,
            0.00013473571743816137,
            6.409593333955854e-05,
            0.0004498980997595936,
            7.37348455004394e-05,
            0.9955042004585266,
            9.894475078908727e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the number of car models created by the car maker Toyota?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), car_makers.Maker, car_makers.FullName",
            "select count(*), car_makers.Maker",
            "select count(*), car_makers.FullName"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_makers model_list",
        "table_candidates": [
            "car_makers model_list car_names",
            "countries car_makers model_list car_names",
            "car_makers model_list",
            "continents car_makers model_list car_names"
        ],
        "align_scores": [
            0.9912478923797607,
            8.346579852513969e-05,
            0.0001375940046273172,
            6.074268094380386e-05,
            0.0002893271448556334,
            6.395148375304416e-05,
            0.00037876766873523593,
            6.645960093010217e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the number of car models created by the car maker Chrysler?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), car_makers.Maker, car_makers.FullName",
            "select count(*), car_makers.Maker",
            "select count(distinct model_list.Model)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_makers model_list",
        "table_candidates": [
            "car_makers model_list car_names",
            "countries car_makers model_list car_names",
            "continents car_makers model_list car_names",
            "car_makers model_list"
        ],
        "align_scores": [
            0.9925069212913513,
            8.323187648784369e-05,
            0.00013934266462456435,
            6.20027058175765e-05,
            0.00029730837559327483,
            6.284117989707738e-05,
            0.11563172936439514,
            7.654171349713579e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which distinctive models are produced by maker with the full name Fiat or weighing more than 3500?",
        "gold_select": "select distinct model_list.Model",
        "select_candidates": [
            "select distinct model_list.Model",
            "select distinct model_list.Model, car_makers.Maker",
            "select distinct model_list.Model, car_makers.FullName",
            "select distinct model_list.Model, model_list.Maker"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_makers model_list car_names cars_data",
        "table_candidates": [
            "car_makers model_list cars_data",
            "car_makers model_list car_names",
            "car_makers model_list car_makers cars_data",
            "countries car_makers model_list cars_data",
            "countries car_makers model_list car_names",
            "car_makers model_list car_makers car_names"
        ],
        "align_scores": [
            0.9641494154930115,
            0.018862521275877953,
            0.0008019052329473197,
            0.00020953336206730455,
            0.001154633122496307,
            0.00021875121456105262,
            0.0002955691306851804,
            0.00010102419764734805
        ],
        "align_select": "select distinct model_list.Model",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which distinctive models are produced by maker with the full name Renault or weighing more than 3500?",
        "gold_select": "select distinct model_list.Model",
        "select_candidates": [
            "select distinct model_list.Model",
            "select distinct model_list.Model, model_list.Maker",
            "select distinct model_list.Model, car_makers.Maker",
            "select distinct model_list.Model, car_makers.FullName"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_makers model_list car_names cars_data",
        "table_candidates": [
            "car_makers model_list car_names",
            "car_makers model_list cars_data",
            "car_makers model_list car_makers cars_data",
            "countries car_makers model_list car_names",
            "countries car_makers model_list cars_data",
            "car_makers model_list car_makers car_names",
            "model_list car_makers car_names"
        ],
        "align_scores": [
            0.9008768796920776,
            0.008266894146800041,
            0.00021364785789046437,
            0.0001176000660052523,
            0.0006177850882522762,
            0.0002511609345674515,
            0.000854467274621129,
            0.0002704598300624639
        ],
        "align_select": "select distinct model_list.Model",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which distinctive models are produced by maker with the full name Peugeaut or weighing more than 3500?",
        "gold_select": "select distinct model_list.Model",
        "select_candidates": [
            "select distinct model_list.Model",
            "select distinct model_list.Model, model_list.Maker",
            "select distinct model_list.Model, car_makers.Maker",
            "select distinctive model_list.Model"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_makers model_list car_names cars_data",
        "table_candidates": [
            "car_makers model_list car_names",
            "car_makers model_list cars_data",
            "car_makers model_list car_makers cars_data",
            "countries car_makers model_list car_names",
            "countries car_makers model_list cars_data",
            "car_makers model_list car_makers car_names"
        ],
        "align_scores": [
            0.9566190838813782,
            0.03888413682579994,
            0.00019614785560406744,
            0.0001306011836277321,
            0.0008200852898880839,
            0.0002493794308975339,
            0.009426044300198555,
            0.003364640288054943
        ],
        "align_select": "select distinct model_list.Model",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which distinctive models are produced by maker with the full name Volkswagen or weighing more than 3500?",
        "gold_select": "select distinct model_list.Model",
        "select_candidates": [
            "select distinct model_list.Model",
            "select distinct model_list.Model, model_list.Maker",
            "select distinct model_list.Model, model_list.ModelId",
            "select distinct model_list.Model, car_names.Model"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_makers model_list car_names cars_data",
        "table_candidates": [
            "car_makers model_list car_names",
            "car_makers model_list cars_data",
            "car_makers model_list car_makers cars_data",
            "countries car_makers model_list car_names",
            "countries car_makers model_list cars_data",
            "continents car_makers model_list car_names",
            "car_makers model_list car_makers car_names"
        ],
        "align_scores": [
            0.9554227590560913,
            0.05848521366715431,
            0.0002538541448302567,
            0.00012599850015249103,
            0.00028637066134251654,
            0.00014324934454634786,
            0.00028940054471604526,
            0.00012902863090857863
        ],
        "align_select": "select distinct model_list.Model",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which distinctive models are produced by maker with the full name Honda or weighing more than 3500?",
        "gold_select": "select distinct model_list.Model",
        "select_candidates": [
            "select distinct model_list.Model",
            "select distinct car_names.Make",
            "select distinct model_list.Model, model_list.Maker",
            "select distinct car_names.Model"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_makers model_list car_names cars_data",
        "table_candidates": [
            "car_makers model_list car_names",
            "car_makers model_list cars_data",
            "car_makers model_list car_makers cars_data",
            "countries car_makers model_list car_names",
            "car_makers model_list car_makers car_names",
            "model_list car_makers car_names",
            "countries car_makers model_list cars_data"
        ],
        "align_scores": [
            0.9457714557647705,
            0.035211119800806046,
            0.3470485806465149,
            0.011751066893339157,
            0.00027175634750165045,
            0.00012518295261543244,
            0.9676657319068909,
            0.17117956280708313
        ],
        "align_select": "select distinct model_list.Model",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the different models created by either the car maker Fiat or weighed more than 3500?",
        "gold_select": "select distinct model_list.Model",
        "select_candidates": [
            "select distinct model_list.Model",
            "select count(distinct model_list.Model)",
            "select distinct model_list.Model, model_list.Maker",
            "select distinct model_list.Model, cars_data.MPG"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_makers model_list car_names cars_data",
        "table_candidates": [
            "model_list car_names cars_data",
            "car_makers model_list cars_data",
            "car_makers model_list car_names cars_data",
            "model_list car_makers car_names cars_data",
            "model_list car_makers model_list cars_data",
            "continents car_makers model_list cars_data",
            "model_list cars_data"
        ],
        "align_scores": [
            0.989098310470581,
            0.00042894011130556464,
            0.0021953354589641094,
            8.910819451557472e-05,
            0.0002213081024819985,
            8.050256292335689e-05,
            0.00022198753140401095,
            8.7512016762048e-05
        ],
        "align_select": "select distinct model_list.Model",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the different models created by either the car maker Renault or weighed more than 3500?",
        "gold_select": "select distinct model_list.Model",
        "select_candidates": [
            "select distinct model_list.Model",
            "select distinct model_list.Model, model_list.Maker",
            "select count(distinct model_list.Model)",
            "select distinct car_names.Make"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_makers model_list car_names cars_data",
        "table_candidates": [
            "car_makers model_list cars_data",
            "car_makers model_list car_names cars_data",
            "model_list car_names cars_data",
            "countries car_makers model_list cars_data",
            "continents car_makers model_list cars_data",
            "model_list car_makers car_names cars_data",
            "car_makers model_list car_names"
        ],
        "align_scores": [
            0.9849083423614502,
            0.000311826093820855,
            0.00022447820811066777,
            8.226156933233142e-05,
            0.001651189522817731,
            8.358749619219452e-05,
            0.18918021023273468,
            0.00047405625809915364
        ],
        "align_select": "select distinct model_list.Model",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the different models created by either the car maker Peugeaut or weighed more than 3500?",
        "gold_select": "select distinct model_list.Model",
        "select_candidates": [
            "select distinct model_list.Model",
            "select count(distinct model_list.Model)",
            "select distinct model_list.Model, model_list.Maker",
            "select distinct model_list.Model, car_makers.Maker"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_makers model_list car_names cars_data",
        "table_candidates": [
            "car_makers model_list cars_data",
            "car_makers model_list car_names cars_data",
            "car_makers model_list car_names",
            "countries car_makers model_list cars_data"
        ],
        "align_scores": [
            0.9886680245399475,
            0.0005226542707532644,
            0.0028000015299767256,
            9.813534416025504e-05,
            0.00022659721435047686,
            8.804109529592097e-05,
            0.0004684635787270963,
            0.00012076164421159774
        ],
        "align_select": "select distinct model_list.Model",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the different models created by either the car maker Volkswagen or weighed more than 3500?",
        "gold_select": "select distinct model_list.Model",
        "select_candidates": [
            "select distinct model_list.Model",
            "select count(distinct model_list.Model)",
            "select distinct model_list.Model, cars_data.MPG",
            "select distinct model_list.Model, model_list.Maker"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_makers model_list car_names cars_data",
        "table_candidates": [
            "model_list car_names cars_data",
            "car_makers model_list cars_data",
            "car_makers model_list car_names cars_data",
            "model_list cars_data",
            "model_list car_makers car_names cars_data",
            "countries model_list cars_data"
        ],
        "align_scores": [
            0.9891582727432251,
            0.00033497402910143137,
            0.0019717568065971136,
            8.600138971814886e-05,
            0.0002194527187384665,
            8.511908526998013e-05,
            0.00021814575302414596,
            8.022490510484204e-05
        ],
        "align_select": "select distinct model_list.Model",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the different models created by either the car maker Honda or weighed more than 3500?",
        "gold_select": "select distinct model_list.Model",
        "select_candidates": [
            "select distinct model_list.Model",
            "select distinct model_list.Model, model_list.Maker",
            "select distinct car_names.Make",
            "select distinct model_list.Model, car_names.Model"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_makers model_list car_names cars_data",
        "table_candidates": [
            "car_makers model_list cars_data",
            "car_makers model_list car_names cars_data",
            "car_makers model_list car_names",
            "countries car_makers model_list cars_data",
            "continents car_makers model_list car_names cars_data",
            "continents car_makers model_list cars_data"
        ],
        "align_scores": [
            0.9866135716438293,
            0.00033769808942452073,
            0.00024243246298283339,
            7.84595831646584e-05,
            0.16624176502227783,
            0.00042801868403330445,
            0.00028335038223303854,
            9.032214438775554e-05
        ],
        "align_select": "select distinct model_list.Model",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "For a honda model, how many cylinders does the version with least accelerate have?",
        "gold_select": "select cars_data.Cylinders",
        "select_candidates": [
            "select cars_data.Cylinders",
            "select cars_data.Id, cars_data.Cylinders",
            "select cars_data.Cylinders, car_names.Model, car_names.Make",
            "select cars_data.Cylinders, car_names.Model"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_names cars_data",
        "table_candidates": [
            "cars_data",
            "car_names cars_data",
            "model_list cars_data",
            "model_list car_names cars_data",
            "continents car_names cars_data",
            "car_makers cars_data",
            "countries cars_data"
        ],
        "align_scores": [
            0.9834454655647278,
            0.6592637300491333,
            0.000310183793772012,
            0.0002583855530247092,
            0.00014708029630128294,
            0.00013481704809237272,
            0.0006510907551273704,
            0.0002034851786447689
        ],
        "align_select": "select cars_data.Cylinders",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT"
    },
    {
        "question": "For a buick model, how many cylinders does the version with least accelerate have?",
        "gold_select": "select cars_data.Cylinders",
        "select_candidates": [
            "select cars_data.Cylinders",
            "select cars_data.Id, cars_data.Cylinders",
            "select cars_data.Cylinders, cars_data.Accelerate",
            "select cars_data.Cylinders, cars_data.Edispl"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_names cars_data",
        "table_candidates": [
            "model_list cars_data",
            "car_names cars_data",
            "model_list car_names cars_data",
            "continents model_list cars_data",
            "car_makers cars_data",
            "countries cars_data",
            "cars_data"
        ],
        "align_scores": [
            0.9849173426628113,
            0.7258239984512329,
            0.0002901708066929132,
            0.0002818270877469331,
            0.0006435945397242904,
            0.00021377662778832018,
            0.00048665839130990207,
            0.000249749660724774
        ],
        "align_select": "select cars_data.Cylinders",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT"
    },
    {
        "question": "For a chrysler model, how many cylinders does the version with least accelerate have?",
        "gold_select": "select cars_data.Cylinders",
        "select_candidates": [
            "select cars_data.Cylinders",
            "select cars_data.Id, cars_data.Cylinders",
            "select cars_data.Cylinders, cars_data.Accelerate",
            "select cars_data.Cylinders, cars_data.Edispl"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_names cars_data",
        "table_candidates": [
            "cars_data",
            "model_list cars_data",
            "car_names cars_data",
            "car_makers cars_data",
            "countries cars_data"
        ],
        "align_scores": [
            0.9847275018692017,
            0.7548744082450867,
            0.00029959180392324924,
            0.00028153948369435966,
            0.0007567847496829927,
            0.00022499397164210677,
            0.0005499706603586674,
            0.0002701273770071566
        ],
        "align_select": "select cars_data.Cylinders",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT"
    },
    {
        "question": "For a chevrolet model, how many cylinders does the version with least accelerate have?",
        "gold_select": "select cars_data.Cylinders",
        "select_candidates": [
            "select cars_data.Cylinders",
            "select cars_data.Id, cars_data.Cylinders",
            "select cars_data.Cylinders, cars_data.Accelerate",
            "select cars_data.Cylinders, cars_data.Edispl"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_names cars_data",
        "table_candidates": [
            "model_list cars_data",
            "car_names cars_data",
            "car_makers cars_data",
            "cars_data",
            "model_list car_names cars_data",
            "continents model_list cars_data",
            "countries cars_data"
        ],
        "align_scores": [
            0.9850281476974487,
            0.7027178406715393,
            0.00024761451641097665,
            0.0002583258901722729,
            0.0005301680648699403,
            0.00019550109573174268,
            0.00046907621435821056,
            0.00025366281624883413
        ],
        "align_select": "select cars_data.Cylinders",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT"
    },
    {
        "question": "For a amc model, how many cylinders does the version with least accelerate have?",
        "gold_select": "select cars_data.Cylinders",
        "select_candidates": [
            "select cars_data.Cylinders",
            "select cars_data.Id, cars_data.Cylinders",
            "select cars_data.Cylinders, cars_data.Edispl",
            "select cars_data.Cylinders, cars_data.Accelerate"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_names cars_data",
        "table_candidates": [
            "cars_data"
        ],
        "align_scores": [
            0.9862273335456848,
            0.8294371366500854,
            0.0003279680386185646,
            0.00026282278122380376,
            0.0004577248473651707,
            0.0002493798965588212,
            0.0006655449979007244,
            0.00020630481594707817
        ],
        "align_select": "select cars_data.Cylinders",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT"
    },
    {
        "question": "Which models are lighter than 3500 but not built by the 'Fiat'?",
        "gold_select": "select distinct model_list.Model",
        "select_candidates": [
            "select car_names.Model",
            "select model_list.Model",
            "select car_names.Make",
            "select model_list.Maker"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "car_makers model_list car_names cars_data",
        "table_candidates": [
            "model_list cars_data",
            "model_list car_names",
            "car_makers model_list cars_data",
            "countries model_list cars_data",
            "car_makers model_list car_names",
            "continents model_list cars_data",
            "countries model_list car_names",
            "continents model_list car_names"
        ],
        "align_scores": [
            0.9487128257751465,
            0.9487128257751465,
            0.812330961227417,
            0.812330961227417,
            0.8644474744796753,
            0.8644474744796753,
            0.7647709846496582,
            0.7647709846496582
        ],
        "align_select": "select car_names.Model",
        "align_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "Which models are lighter than 3500 but not built by the 'General Motors'?",
        "gold_select": "select distinct model_list.Model",
        "select_candidates": [
            "select model_list.Model",
            "select car_makers.Maker, model_list.Model",
            "select model_list.Model, car_makers.Maker",
            "select t3.c3, model_list.Model"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "car_makers model_list car_names cars_data",
        "table_candidates": [
            "car_makers model_list cars_data",
            "countries car_makers model_list cars_data",
            "continents car_makers model_list cars_data",
            "car_makers model_list car_names",
            "car_makers car_names cars_data"
        ],
        "align_scores": [
            0.7669979929924011,
            0.7669979929924011,
            0.0004059851635247469,
            0.0004059851635247469,
            0.0006118500023148954,
            0.0006118500023148954,
            0.00028698318055830896,
            0.00028698318055830896
        ],
        "align_select": "select model_list.Model",
        "align_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "Which models are lighter than 3500 but not built by the 'Renault'?",
        "gold_select": "select distinct model_list.Model",
        "select_candidates": [
            "select car_names.Model",
            "select model_list.Model",
            "select car_names.Make",
            "select car_names.Model, model_list.Model"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "car_makers model_list car_names cars_data",
        "table_candidates": [
            "model_list cars_data",
            "model_list car_names",
            "car_makers model_list cars_data",
            "model_list car_names cars_data",
            "countries model_list cars_data",
            "continents model_list cars_data",
            "countries model_list car_names",
            "car_makers model_list car_names"
        ],
        "align_scores": [
            0.7871708869934082,
            0.7871708869934082,
            0.9279040694236755,
            0.9279040694236755,
            0.819708526134491,
            0.819708526134491,
            0.0001850943808676675,
            0.0001850943808676675
        ],
        "align_select": "select car_names.Model",
        "align_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "Which models are lighter than 3500 but not built by the 'Peugeaut'?",
        "gold_select": "select distinct model_list.Model",
        "select_candidates": [
            "select model_list.Model",
            "select model_list.Maker, model_list.Model",
            "select t3.c3, model_list.Maker",
            "select model_list.Model, model_list.Maker"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "car_makers model_list car_names cars_data",
        "table_candidates": [
            "car_makers model_list cars_data",
            "car_makers model_list car_names",
            "countries car_makers model_list cars_data",
            "continents car_makers model_list cars_data",
            "car_makers model_list"
        ],
        "align_scores": [
            0.9614115357398987,
            0.9614115357398987,
            0.00025371936499141157,
            0.00025371936499141157,
            0.0003208266571164131,
            0.0003208266571164131,
            0.0004741405718959868,
            0.0004741405718959868
        ],
        "align_select": "select model_list.Model",
        "align_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "Which models are lighter than 3500 but not built by the 'Volkswagen'?",
        "gold_select": "select distinct model_list.Model",
        "select_candidates": [
            "select car_names.Model",
            "select car_names.Model, model_list.Model",
            "select model_list.Model",
            "select car_names.Model, car_names.Make"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "car_makers model_list car_names cars_data",
        "table_candidates": [
            "model_list cars_data",
            "model_list car_names",
            "model_list car_names cars_data",
            "car_makers model_list cars_data",
            "countries model_list cars_data",
            "car_makers model_list car_names",
            "countries model_list car_names"
        ],
        "align_scores": [
            0.6808168292045593,
            0.6808168292045593,
            0.0001934532047016546,
            0.0001934532047016546,
            0.8558327555656433,
            0.8558327555656433,
            0.00024360953830182552,
            0.00024360953830182552
        ],
        "align_select": "select car_names.Model",
        "align_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the different models wthat are lighter than 3500 but were not built by the Fiat?",
        "gold_select": "select distinct model_list.Model",
        "select_candidates": [
            "select distinct car_names.Model",
            "select distinct model_list.Model",
            "select distinct car_names.Model, model_list.Model",
            "select distinct model_list.Maker"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "car_makers model_list car_names cars_data",
        "table_candidates": [
            "model_list cars_data",
            "car_makers model_list cars_data",
            "countries model_list cars_data",
            "model_list car_names",
            "continents model_list cars_data",
            "car_makers model_list car_names",
            "countries model_list car_names"
        ],
        "align_scores": [
            0.383422315120697,
            0.383422315120697,
            0.2752760350704193,
            0.2752760350704193,
            0.0003177243925165385,
            0.0003177243925165385,
            0.14581173658370972,
            0.14581173658370972
        ],
        "align_select": "select distinct car_names.Model",
        "align_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the different models wthat are lighter than 3500 but were not built by the General Motors?",
        "gold_select": "select distinct model_list.Model",
        "select_candidates": [
            "select distinct model_list.Model",
            "select distinct model_list.Model, car_makers.Maker",
            "select model_list.Model",
            "select distinct car_names.Make"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "car_makers model_list car_names cars_data",
        "table_candidates": [
            "car_makers model_list cars_data",
            "countries car_makers model_list cars_data",
            "continents car_makers model_list cars_data",
            "car_makers model_list car_names",
            "car_makers model_list"
        ],
        "align_scores": [
            0.12097512185573578,
            0.12097512185573578,
            0.0012278056237846613,
            0.0012278056237846613,
            0.24549899995326996,
            0.24549899995326996,
            0.24300143122673035,
            0.24300143122673035
        ],
        "align_select": "select distinct model_list.Model",
        "align_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the different models wthat are lighter than 3500 but were not built by the Renault?",
        "gold_select": "select distinct model_list.Model",
        "select_candidates": [
            "select distinct model_list.Model",
            "select distinct car_names.Model",
            "select distinct car_names.Make",
            "select distinct car_names.Model, model_list.Model"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "car_makers model_list car_names cars_data",
        "table_candidates": [
            "model_list cars_data",
            "car_makers model_list cars_data",
            "model_list car_names",
            "countries model_list cars_data",
            "car_makers model_list car_names",
            "continents model_list cars_data",
            "model_list car_names cars_data"
        ],
        "align_scores": [
            0.25021830201148987,
            0.25021830201148987,
            0.2856498658657074,
            0.2856498658657074,
            0.20361286401748657,
            0.20361286401748657,
            0.00030224898364394903,
            0.00030224898364394903
        ],
        "align_select": "select distinct model_list.Model",
        "align_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the different models wthat are lighter than 3500 but were not built by the Peugeaut?",
        "gold_select": "select distinct model_list.Model",
        "select_candidates": [
            "select distinct model_list.Model",
            "select distinct model_list.Model, car_makers.Maker",
            "select distinct model_list.Model, model_list.Maker",
            "select distinct model_list.Model, model_list.Maker"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "car_makers model_list car_names cars_data",
        "table_candidates": [
            "car_makers model_list cars_data",
            "car_makers model_list car_names",
            "countries car_makers model_list cars_data",
            "countries car_makers model_list car_names",
            "car_makers model_list",
            "continents car_makers model_list cars_data",
            "continents car_makers model_list car_names"
        ],
        "align_scores": [
            0.21604245901107788,
            0.21604245901107788,
            0.0031241236720234156,
            0.0031241236720234156,
            0.0006272828322835267,
            0.0006272828322835267,
            0.0006272828322835267,
            0.0006272828322835267
        ],
        "align_select": "select distinct model_list.Model",
        "align_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the different models wthat are lighter than 3500 but were not built by the Volkswagen?",
        "gold_select": "select distinct model_list.Model",
        "select_candidates": [
            "select distinct car_names.Model",
            "select distinct car_names.Model, car_names.Make",
            "select distinct model_list.Model",
            "select distinct car_names.Model, model_list.Model"
        ],
        "select_labels": [
            0.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "car_makers model_list car_names cars_data",
        "table_candidates": [
            "model_list car_names",
            "model_list cars_data",
            "model_list car_names cars_data",
            "car_makers model_list car_names",
            "car_makers model_list cars_data",
            "countries model_list car_names",
            "continents model_list car_names"
        ],
        "align_scores": [
            0.4237060248851776,
            0.4237060248851776,
            0.0009687214624136686,
            0.0009687214624136686,
            0.3906509578227997,
            0.3906509578227997,
            0.0003468983923085034,
            0.0003468983923085034
        ],
        "align_select": "select distinct car_names.Model",
        "align_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "What is the abbreviation of Airline \"Northwest Airlines\"?",
        "gold_select": "select airlines.Abbreviation",
        "select_candidates": [
            "select airlines.Abbreviation",
            "select airlines.Airline, airlines.Abbreviation",
            "select airlines.Abbreviation, airlines.Airline",
            "select airlines.Abbreviation (flying-to-airlines.Airline)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines",
        "table_candidates": [
            "airlines"
        ],
        "align_scores": [
            0.9947308301925659,
            0.0001391923287883401,
            0.0002009470626944676,
            7.019635086180642e-05,
            0.000246139446971938,
            6.778562965337187e-05,
            0.0012093973346054554,
            7.550079317297786e-05
        ],
        "align_select": "select airlines.Abbreviation",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the abbreviation of Airline \"United Airlines\"?",
        "gold_select": "select airlines.Abbreviation",
        "select_candidates": [
            "select airlines.Abbreviation",
            "select airlines.Airline, airlines.Abbreviation",
            "select airlines.Abbreviation, airlines.Airline",
            "select airlines.Abbreviation, airlines.Country"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines",
        "table_candidates": [
            "airlines"
        ],
        "align_scores": [
            0.9920628666877747,
            0.00022323835582938045,
            0.00020071613835170865,
            8.135701500577852e-05,
            0.00023389418493025005,
            7.749479118501768e-05,
            0.00018963585898745805,
            6.899926665937528e-05
        ],
        "align_select": "select airlines.Abbreviation",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the abbreviation of Airline \"US Airways\"?",
        "gold_select": "select airlines.Abbreviation",
        "select_candidates": [
            "select airlines.Abbreviation",
            "select airlines.Airline, airlines.Abbreviation",
            "select airlines.Abbreviation, airlines.Airline",
            "select airlines.Abbreviation (http://airlines.Abbreviation)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines",
        "table_candidates": [
            "airlines"
        ],
        "align_scores": [
            0.9948518872261047,
            0.00012311931641306728,
            0.0002157205599360168,
            6.86615749145858e-05,
            0.0002599694998934865,
            6.663240492343903e-05,
            0.016786780208349228,
            8.329746196977794e-05
        ],
        "align_select": "select airlines.Abbreviation",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the abbreviation of Airline \"Delta Airlines\"?",
        "gold_select": "select airlines.Abbreviation",
        "select_candidates": [
            "select airlines.Abbreviation",
            "select airlines.Airline, airlines.Abbreviation",
            "select airlines.uid, airlines.Abbreviation",
            "select airlines.Abbreviation, airlines.Airline"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines",
        "table_candidates": [
            "airlines"
        ],
        "align_scores": [
            0.994857907295227,
            0.00011569406342459843,
            0.00017807695257943124,
            6.512038089567795e-05,
            0.00014087234740145504,
            6.928780931048095e-05,
            0.00020004017278552055,
            6.222885713214055e-05
        ],
        "align_select": "select airlines.Abbreviation",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the abbreviation of Airline \"American Airlines\"?",
        "gold_select": "select airlines.Abbreviation",
        "select_candidates": [
            "select airlines.Abbreviation",
            "select airlines.Airline, airlines.Abbreviation",
            "select airlines.Abbreviation, airlines.Airline",
            "select airlines.uid, airlines.Abbreviation"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines",
        "table_candidates": [
            "airlines"
        ],
        "align_scores": [
            0.9933694005012512,
            0.00014562714204657823,
            0.0002063754218397662,
            6.987343658693135e-05,
            0.0002406761486781761,
            6.722987745888531e-05,
            0.00016470556147396564,
            7.237771205836907e-05
        ],
        "align_select": "select airlines.Abbreviation",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which airline has abbreviation 'American'?",
        "gold_select": "select airlines.Airline",
        "select_candidates": [
            "select airlines.Airline",
            "select airlines.Airline, airlines.Abbreviation",
            "select airlines.Airline, airlines.Country",
            "select airlines.uid, airlines.Airline"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines",
        "table_candidates": [
            "airlines"
        ],
        "align_scores": [
            0.8073058724403381,
            0.0001325038610957563,
            0.00029595743399113417,
            7.579864904982969e-05,
            0.00013907159154769033,
            6.734371709171683e-05,
            0.0002003824629355222,
            6.883569585625082e-05
        ],
        "align_select": "select airlines.Airline",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which airline has abbreviation 'Northwest'?",
        "gold_select": "select airlines.Airline",
        "select_candidates": [
            "select airlines.Airline",
            "select airlines.Airline, airlines.Abbreviation",
            "select airlines.Airline, airlines.Country",
            "select airlines.Airline, airlines.Abbreviation, airlines.Country"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines",
        "table_candidates": [
            "airlines"
        ],
        "align_scores": [
            0.974389374256134,
            0.0001327457866864279,
            0.0002833479375112802,
            7.470097625628114e-05,
            0.00013256919919513166,
            6.393697549356148e-05,
            0.00013203064736444503,
            6.626551476074383e-05
        ],
        "align_select": "select airlines.Airline",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which airline has abbreviation 'Continental'?",
        "gold_select": "select airlines.Airline",
        "select_candidates": [
            "select airlines.Airline",
            "select airlines.Airline, airlines.Abbreviation",
            "select airlines.Airline, airlines.Country",
            "select airlines.uid, airlines.Airline"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines",
        "table_candidates": [
            "airlines"
        ],
        "align_scores": [
            0.9538258910179138,
            0.0001288189087063074,
            0.00029684725450351834,
            7.24925848771818e-05,
            0.00013764177856501192,
            6.674681935692206e-05,
            0.00019994292233604938,
            6.743322592228651e-05
        ],
        "align_select": "select airlines.Airline",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which airline has abbreviation 'USAir'?",
        "gold_select": "select airlines.Airline",
        "select_candidates": [
            "select airlines.Airline",
            "select airlines.Airline, airlines.Abbreviation",
            "select airlines.uid, airlines.Airline",
            "select airlines.Airline, airlines.Country"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines",
        "table_candidates": [
            "airlines"
        ],
        "align_scores": [
            0.9701142311096191,
            0.00012979125312995166,
            0.0003567257081158459,
            7.591286703245714e-05,
            0.00020041664538439363,
            7.129638834157959e-05,
            0.00014909870515111834,
            6.900289008626714e-05
        ],
        "align_select": "select airlines.Airline",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which airline has abbreviation 'Allegiant'?",
        "gold_select": "select airlines.Airline",
        "select_candidates": [
            "select airlines.Airline",
            "select airlines.Airline, airlines.Abbreviation",
            "select airlines.Airline, airlines.Country",
            "select airlines.uid, airlines.Airline"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines",
        "table_candidates": [
            "airlines"
        ],
        "align_scores": [
            0.9752631783485413,
            0.00012911701924167573,
            0.00028865927015431225,
            7.150398596422747e-05,
            0.0001338240399491042,
            6.55116600682959e-05,
            0.00018262170488014817,
            6.972680421313271e-05
        ],
        "align_select": "select airlines.Airline",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give the airline with abbreviation 'American'.",
        "gold_select": "select airlines.Airline",
        "select_candidates": [
            "select airlines.Airline",
            "select airlines.Airline, airlines.Abbreviation",
            "select airlines.Airline, airlines.Abbreviation, airlines.Country",
            "select airlines.Airline, airlines.Country"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines",
        "table_candidates": [
            "airlines"
        ],
        "align_scores": [
            0.9155274629592896,
            8.177985000656918e-05,
            0.00023472726752515882,
            6.724776903865859e-05,
            0.00012423568114172667,
            6.187595135997981e-05,
            0.00014042574912309647,
            5.7677607401274145e-05
        ],
        "align_select": "select airlines.Airline",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give the airline with abbreviation 'Northwest'.",
        "gold_select": "select airlines.Airline",
        "select_candidates": [
            "select airlines.Airline",
            "select airlines.Airline, airlines.Abbreviation",
            "select airlines.Airline, airlines.Abbreviation, airlines.Country",
            "select airlines.uid, airlines.Airline"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines",
        "table_candidates": [
            "airlines"
        ],
        "align_scores": [
            0.9782739281654358,
            8.241421164711937e-05,
            0.0002140362630598247,
            6.814462540205568e-05,
            0.00012228415289428085,
            6.226406549103558e-05,
            0.0001679376873653382,
            6.324620335362852e-05
        ],
        "align_select": "select airlines.Airline",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give the airline with abbreviation 'Continental'.",
        "gold_select": "select airlines.Airline",
        "select_candidates": [
            "select airlines.Airline",
            "select airlines.Airline, airlines.Abbreviation",
            "select airlines.Airline, airlines.Abbreviation, airlines.Country",
            "select airlines.Airline, airlines.Country"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines",
        "table_candidates": [
            "airlines"
        ],
        "align_scores": [
            0.964503824710846,
            7.80893606133759e-05,
            0.00024003036378417164,
            6.582841160707176e-05,
            0.00012548628728836775,
            6.07724032306578e-05,
            0.00013271225907374173,
            5.806391345686279e-05
        ],
        "align_select": "select airlines.Airline",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give the airline with abbreviation 'USAir'.",
        "gold_select": "select airlines.Airline",
        "select_candidates": [
            "select airlines.Airline",
            "select airlines.Airline, airlines.Abbreviation",
            "select airlines.uid, airlines.Airline",
            "select airlines.Airline, airlines.Abbreviation, airlines.Country"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines",
        "table_candidates": [
            "airlines"
        ],
        "align_scores": [
            0.9729296565055847,
            8.747196989133954e-05,
            0.00025688885943964124,
            6.751842010999098e-05,
            0.00017492870392743498,
            6.382988067343831e-05,
            0.00013548227434512228,
            5.9477741160662845e-05
        ],
        "align_select": "select airlines.Airline",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give the airline with abbreviation 'Allegiant'.",
        "gold_select": "select airlines.Airline",
        "select_candidates": [
            "select airlines.Airline",
            "select airlines.Airline, airlines.Abbreviation",
            "select airlines.Airline, airlines.Abbreviation, airlines.Country",
            "select airlines.uid, airlines.Airline"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines",
        "table_candidates": [
            "airlines"
        ],
        "align_scores": [
            0.9406110048294067,
            8.180668373825029e-05,
            0.0002762000076472759,
            6.697053322568536e-05,
            0.0001384264905937016,
            5.949714613961987e-05,
            0.0001758380967658013,
            6.32495793979615e-05
        ],
        "align_select": "select airlines.Airline",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the airport name for airport 'ANQ'?",
        "gold_select": "select airports.AirportName",
        "select_candidates": [
            "select airports.AirportName",
            "select airports.AirportName, airports.AirportCode",
            "select airports.AirportName, airports.Country",
            "select avg(airports.AirportName)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports",
        "table_candidates": [
            "airports"
        ],
        "align_scores": [
            0.9927774667739868,
            0.00012933068501297385,
            0.0001592636835994199,
            6.902052700752392e-05,
            0.0001640843547647819,
            6.054593904991634e-05,
            0.0006908452487550676,
            5.802527448395267e-05
        ],
        "align_select": "select airports.AirportName",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the airport name for airport 'ALM'?",
        "gold_select": "select airports.AirportName",
        "select_candidates": [
            "select airports.AirportName",
            "select airports.AirportName, airports.AirportCode",
            "select avg(airports.AirportName)",
            "select airports.AirportName, airports.Country"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports",
        "table_candidates": [
            "airports"
        ],
        "align_scores": [
            0.9927676916122437,
            0.00017229039804078639,
            0.00017437482893001288,
            7.303414167836308e-05,
            0.0006751430919393897,
            5.947139652562328e-05,
            0.00017638923600316048,
            6.089556700317189e-05
        ],
        "align_select": "select airports.AirportName",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the airport name for airport 'LTS'?",
        "gold_select": "select airports.AirportName",
        "select_candidates": [
            "select airports.AirportName",
            "select airports.AirportName, airports.Country",
            "select airports.AirportName, airports.AirportCode",
            "select avg(airports.AirportName)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports",
        "table_candidates": [
            "airports"
        ],
        "align_scores": [
            0.9935917258262634,
            0.0002205749915447086,
            0.0001770446979207918,
            5.882461118744686e-05,
            0.00016931271238718182,
            7.343578181462362e-05,
            0.0007049741107039154,
            6.183559162309393e-05
        ],
        "align_select": "select airports.AirportName",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the airport name for airport 'RLI'?",
        "gold_select": "select airports.AirportName",
        "select_candidates": [
            "select airports.AirportName",
            "select airports.AirportName, airports.Country",
            "select airports.AirportName, airports.AirportCode",
            "select airports.AirportName, airports.AirportCode, airports.Country"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports",
        "table_candidates": [
            "airports"
        ],
        "align_scores": [
            0.9927899837493896,
            0.00013792187382932752,
            0.0001749087095959112,
            5.90262861805968e-05,
            0.0001613146159797907,
            7.064182864269242e-05,
            0.0001546486164443195,
            5.9522120864130557e-05
        ],
        "align_select": "select airports.AirportName",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the airport name for airport 'AKC'?",
        "gold_select": "select airports.AirportName",
        "select_candidates": [
            "select airports.AirportName",
            "select avg(airports.AirportName)",
            "select airports.AirportName, airports.AirportCode",
            "select airports.AirportName, airports.Country"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports",
        "table_candidates": [
            "airports"
        ],
        "align_scores": [
            0.9933140873908997,
            0.00015215409803204238,
            0.0007138474611565471,
            6.168289110064507e-05,
            0.00017553087673150003,
            6.615318852709606e-05,
            0.00016933241568040103,
            6.0064372519264e-05
        ],
        "align_select": "select airports.AirportName",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the name of the airport with code 'ANQ'.",
        "gold_select": "select airports.AirportName",
        "select_candidates": [
            "select airports.AirportName",
            "select airports.AirportName, airports.Country",
            "select avg(airports.AirportName)",
            "select airports.AirportName, airports.Country, airports.CountryAbbrev"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports",
        "table_candidates": [
            "airports"
        ],
        "align_scores": [
            0.9754248857498169,
            0.00016169590526260436,
            0.00015169387916103005,
            5.832106762682088e-05,
            0.0008353263256140053,
            6.27643967163749e-05,
            0.0001568637089803815,
            5.765544847236015e-05
        ],
        "align_select": "select airports.AirportName",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the name of the airport with code 'ALM'.",
        "gold_select": "select airports.AirportName",
        "select_candidates": [
            "select airports.AirportName",
            "select airports.AirportName, airports.Country",
            "select avg(airports.AirportName)",
            "select airports.AirportName, airports.AirportCode"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports",
        "table_candidates": [
            "airports"
        ],
        "align_scores": [
            0.9767813682556152,
            0.00018355794600211084,
            0.00015837338287383318,
            6.00230268901214e-05,
            0.0007848829263821244,
            6.69776854920201e-05,
            0.00015747561701573431,
            7.169756281655282e-05
        ],
        "align_select": "select airports.AirportName",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the name of the airport with code 'LTS'.",
        "gold_select": "select airports.AirportName",
        "select_candidates": [
            "select airports.AirportName",
            "select airports.AirportName, airports.Country",
            "select avg(airports.AirportName)",
            "select airports.AirportName, airports.Country, airports.CountryAbbrev"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports",
        "table_candidates": [
            "airports"
        ],
        "align_scores": [
            0.9874891638755798,
            0.00014873206964693964,
            0.00015469077334273607,
            5.9892616263823584e-05,
            0.0007633534842170775,
            5.9403773775557056e-05,
            0.0001612331107025966,
            5.862440593773499e-05
        ],
        "align_select": "select airports.AirportName",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the name of the airport with code 'RLI'.",
        "gold_select": "select airports.AirportName",
        "select_candidates": [
            "select airports.AirportName",
            "select airports.AirportNameaeroprom-with-the-characteristics-of-WHERE",
            "select airports.AirportName, airports.Country",
            "select airports.AirportNameaeroprom-with-the-word 'RLI'"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports",
        "table_candidates": [
            "airports"
        ],
        "align_scores": [
            0.9839407801628113,
            0.0001753130927681923,
            0.0008157309493981302,
            7.844806532375515e-05,
            0.00014724224456585944,
            5.903833152842708e-05,
            0.000965343788266182,
            8.266363147413358e-05
        ],
        "align_select": "select airports.AirportName",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the name of the airport with code 'AKC'.",
        "gold_select": "select airports.AirportName",
        "select_candidates": [
            "select airports.AirportName",
            "select avg(airports.AirportName)",
            "select airports.AirportName, airports.Country",
            "select airports.AirportName, airports.AirportCode"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports",
        "table_candidates": [
            "airports"
        ],
        "align_scores": [
            0.9845603704452515,
            0.000184774529770948,
            0.000846200855448842,
            6.611970457015559e-05,
            0.00014884884876664728,
            5.772966324002482e-05,
            0.00017091367044486105,
            6.840453715994954e-05
        ],
        "align_select": "select airports.AirportName",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are flight numbers of Airline \"Northwest Airlines\"?",
        "gold_select": "select flights.FlightNo",
        "select_candidates": [
            "select flights.FlightNo",
            "select flights.FlightNo, airlines.Airline",
            "select flights.FlightNo, airlines.Abbreviation",
            "select flights.FlightNo, airlines.Airline, airlines.Abbreviation"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines flights"
        ],
        "align_scores": [
            0.9942407608032227,
            0.00019612353935372084,
            0.0002614339755382389,
            6.189465784700587e-05,
            0.00037679143133573234,
            7.196847582235932e-05,
            0.00019066639652010053,
            6.992429553065449e-05
        ],
        "align_select": "select flights.FlightNo",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are flight numbers of Airline \"US Airways\"?",
        "gold_select": "select flights.FlightNo",
        "select_candidates": [
            "select flights.FlightNo",
            "select flights.FlightNo, airlines.Airline",
            "select flights.FlightNo, airlines.Abbreviation",
            "select flights.FlightNo, airlines.Airline, flights.SourceAirport"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines flights",
            "airlines airports flights"
        ],
        "align_scores": [
            0.9949795603752136,
            0.0001961497328011319,
            0.0002546228060964495,
            5.9642348787747324e-05,
            0.00037793847150169313,
            6.839247362222522e-05,
            0.0001995326892938465,
            5.928995960857719e-05
        ],
        "align_select": "select flights.FlightNo",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are flight numbers of Airline \"JetBlue Airways\"?",
        "gold_select": "select flights.FlightNo",
        "select_candidates": [
            "select flights.FlightNo",
            "select flights.FlightNo, airlines.Airline",
            "select flights.FlightNo, airlines.Abbreviation",
            "select flights.FlightNo, airlines.Airline, airlines.Abbreviation"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines flights",
            "airlines airports flights"
        ],
        "align_scores": [
            0.9954138398170471,
            0.00024083221796900034,
            0.00021220218332018703,
            5.974042505840771e-05,
            0.00035424495581537485,
            7.034430745989084e-05,
            0.0001917581248562783,
            7.025836384855211e-05
        ],
        "align_select": "select flights.FlightNo",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are flight numbers of Airline \"Delta Airlines\"?",
        "gold_select": "select flights.FlightNo",
        "select_candidates": [
            "select flights.FlightNo",
            "select flights.FlightNo, airlines.Airline",
            "select flights.FlightNo, airlines.Abbreviation",
            "select flights.FlightNo, airlines.Airline, airlines.Abbreviation"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines flights"
        ],
        "align_scores": [
            0.9953063130378723,
            0.00013483531074598432,
            0.0002204936317866668,
            6.408309127436951e-05,
            0.00026632219669409096,
            6.834552914369851e-05,
            0.00013917693286202848,
            6.490414671134204e-05
        ],
        "align_select": "select flights.FlightNo",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are flight numbers of Airline \"American Airlines\"?",
        "gold_select": "select flights.FlightNo",
        "select_candidates": [
            "select flights.FlightNo",
            "select flights.FlightNo, airlines.Airline",
            "select flights.FlightNo, airlines.Abbreviation",
            "select flights.FlightNo, airlines.Airline, airlines.Abbreviation"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines flights"
        ],
        "align_scores": [
            0.9948009252548218,
            0.00020691234385594726,
            0.0002674861461855471,
            6.101740291342139e-05,
            0.00037996930768713355,
            7.188788731582463e-05,
            0.0001974168117158115,
            6.975898577366024e-05
        ],
        "align_select": "select flights.FlightNo",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which flight numbers correspond to Northwest Airlines flights?",
        "gold_select": "select flights.FlightNo",
        "select_candidates": [
            "select flights.FlightNo",
            "select distinct flights.FlightNo",
            "select flights.Airline, flights.FlightNo",
            "select flights.FlightNo, airlines.Abbreviation"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines flights",
            "airlines airports flights"
        ],
        "align_scores": [
            0.9923961758613586,
            0.17176814377307892,
            0.036906372755765915,
            0.0002493708743713796,
            0.00017708656378090382,
            9.138212044490501e-05,
            0.0005266758380457759,
            0.00016067385149654
        ],
        "align_select": "select flights.FlightNo",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which flight numbers correspond to US Airways flights?",
        "gold_select": "select flights.FlightNo",
        "select_candidates": [
            "select flights.FlightNo",
            "select flights.Airline, flights.FlightNo",
            "select distinct flights.FlightNo",
            "select flights.FlightNo, airlines.Airline"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines flights",
            "airlines airports flights"
        ],
        "align_scores": [
            0.9929094314575195,
            0.47080355882644653,
            0.00022867404913995415,
            0.0001270828943233937,
            0.03611093387007713,
            0.0002585881156846881,
            0.000517751497682184,
            0.00020733418932650238
        ],
        "align_select": "select flights.FlightNo",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which flight numbers correspond to JetBlue Airways flights?",
        "gold_select": "select flights.FlightNo",
        "select_candidates": [
            "select flights.FlightNo",
            "select flights.Airline, flights.FlightNo",
            "select flights.FlightNo, airlines.Abbreviation",
            "select distinct flights.FlightNo"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines flights",
            "airlines airports flights"
        ],
        "align_scores": [
            0.9941376447677612,
            0.5291900634765625,
            0.0002067849418381229,
            0.00012308009900152683,
            0.000682799203786999,
            0.00031373125966638327,
            0.03196125850081444,
            0.0003274412883911282
        ],
        "align_select": "select flights.FlightNo",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which flight numbers correspond to Delta Airlines flights?",
        "gold_select": "select flights.FlightNo",
        "select_candidates": [
            "select flights.FlightNo",
            "select distinct flights.FlightNo",
            "select flights.Airline, flights.FlightNo",
            "select flights.FlightNo, airlines.Abbreviation"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines flights",
            "airlines airports flights"
        ],
        "align_scores": [
            0.993281364440918,
            0.10542872548103333,
            0.03762446716427803,
            0.00020676896383520216,
            0.00015690036525484174,
            8.9064116764348e-05,
            0.0005141850560903549,
            0.0001273511297767982
        ],
        "align_select": "select flights.FlightNo",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which flight numbers correspond to American Airlines flights?",
        "gold_select": "select flights.FlightNo",
        "select_candidates": [
            "select flights.FlightNo",
            "select flights.Airline, flights.FlightNo",
            "select flights.FlightNo, airlines.Airline",
            "select flights.FlightNo, airlines.Abbreviation"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines flights",
        "table_candidates": [
            "airlines flights",
            "airlines airports flights"
        ],
        "align_scores": [
            0.9939182996749878,
            0.18721966445446014,
            0.0001927544508362189,
            9.977025911211967e-05,
            0.0005303009529598057,
            0.0001420929911546409,
            0.0005128463380970061,
            0.00015301747771445662
        ],
        "align_select": "select flights.FlightNo",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the document id, template id and description for document named \"Understanding DB\"?",
        "gold_select": "select Documents.Document_ID, Documents.Template_ID, Documents.Document_Description",
        "select_candidates": [
            "select Documents.Document_ID, Documents.Template_ID, Documents.Document_Description",
            "select Documents.Document_ID, Documents.Template_ID & Documents.Document_Description",
            "select Documents.Document_ID, Documents.Template_ID.c1, Documents.Document_Description",
            "select Documents.Document_ID, Documents.Template_ID, Documents.Document_Description."
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents",
        "table_candidates": [
            "Documents"
        ],
        "align_scores": [
            0.995265007019043,
            0.00010962120722979307,
            0.8688132166862488,
            7.947927224449813e-05,
            0.0010697024408727884,
            8.366269321413711e-05,
            0.001112857018597424,
            7.589911547256634e-05
        ],
        "align_select": "select Documents.Document_ID, Documents.Template_ID, Documents.Document_Description",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the document id, template id and description for document named \"Palm reading\"?",
        "gold_select": "select Documents.Document_ID, Documents.Template_ID, Documents.Document_Description",
        "select_candidates": [
            "select Documents.Document_ID, Documents.Template_ID, Documents.Document_Description",
            "select Documents.Document_ID, Documents.Template_ID & Documents.Document_Description",
            "select Documents.Document_ID, Documents.Template_ID.c1, Documents.Document_Description",
            "select Documents.Document_ID, Documents.Template_ID, Documents.Document_Description."
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents",
        "table_candidates": [
            "Documents"
        ],
        "align_scores": [
            0.9950687885284424,
            0.0001005696612992324,
            0.8662402033805847,
            7.72512357798405e-05,
            0.001303906668908894,
            7.982206443557516e-05,
            0.0012326608411967754,
            7.512596494052559e-05
        ],
        "align_select": "select Documents.Document_ID, Documents.Template_ID, Documents.Document_Description",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the document id, template id and description for document named \"Summer Show\"?",
        "gold_select": "select Documents.Document_ID, Documents.Template_ID, Documents.Document_Description",
        "select_candidates": [
            "select Documents.Document_ID, Documents.Template_ID, Documents.Document_Description",
            "select Documents.Document_ID, Documents.Template_ID & Documents.Document_Description",
            "select Documents.Document_ID, Documents.Template_ID.c1, Documents.Document_Description",
            "select Documents.Document_ID, Documents.Template_ID, Documents.Document_Description."
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents",
        "table_candidates": [
            "Documents"
        ],
        "align_scores": [
            0.9954426288604736,
            0.00010958348138956353,
            0.9131783843040466,
            7.776595157338306e-05,
            0.0011109018232673407,
            8.047683513723314e-05,
            0.0012729621957987547,
            7.745806942693889e-05
        ],
        "align_select": "select Documents.Document_ID, Documents.Template_ID, Documents.Document_Description",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the document id, template id and description for document named \"How to read a book\"?",
        "gold_select": "select Documents.Document_ID, Documents.Template_ID, Documents.Document_Description",
        "select_candidates": [
            "select Documents.Document_ID, Documents.Template_ID, Documents.Document_Description",
            "select Documents.Document_ID, Documents.Template_ID & Documents.Document_Description",
            "select Documents.Document_ID, Documents.Template_ID.c1, Documents.Document_Description",
            "select Documents.Document_ID, Documents.Template_ID, Documents.Document_Description."
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents",
        "table_candidates": [
            "Documents"
        ],
        "align_scores": [
            0.9945047497749329,
            0.00010035890591097996,
            0.7748547196388245,
            7.496865873690695e-05,
            0.0014273931737989187,
            7.909224223112687e-05,
            0.0012974815908819437,
            7.340679439948872e-05
        ],
        "align_select": "select Documents.Document_ID, Documents.Template_ID, Documents.Document_Description",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the document id, template id and description for document named \"Customer reviews\"?",
        "gold_select": "select Documents.Document_ID, Documents.Template_ID, Documents.Document_Description",
        "select_candidates": [
            "select Documents.Document_ID, Documents.Template_ID, Documents.Document_Description",
            "select Documents.Document_ID, Documents.Template_ID, Documents.Document_Description.",
            "select Documents.Document_ID, Documents.Template_ID & Documents.Document_Description",
            "select Documents.Document_ID, Documents.Template_ID.c1, Documents.Document_Description"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents",
        "table_candidates": [
            "Documents"
        ],
        "align_scores": [
            0.9953106045722961,
            9.675749606685713e-05,
            0.001426901901140809,
            7.194041245384142e-05,
            0.9344218969345093,
            7.672190986340865e-05,
            0.0022903340868651867,
            8.240203169407323e-05
        ],
        "align_select": "select Documents.Document_ID, Documents.Template_ID, Documents.Document_Description",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the document id, template id, and description for the document with the name Understanding DB.",
        "gold_select": "select Documents.Document_ID, Documents.Template_ID, Documents.Document_Description",
        "select_candidates": [
            "select Documents.Document_ID, Documents.Template_ID, Documents.Document_Description",
            "select Documents.Document_ID, Documents.Template_ID.c1, Documents.Document_Description",
            "select Documents.Document_ID, Documents.Template_ID, Documents.Document_Description.",
            "select Documents.Document_ID, Documents.Template_ID, Documents.Document_Description"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents",
        "table_candidates": [
            "Documents"
        ],
        "align_scores": [
            0.9948858618736267,
            9.747678996063769e-05,
            0.0009326306753791869,
            7.620872929692268e-05,
            0.001383058144710958,
            7.433522841893137e-05,
            0.9948858618736267,
            9.747678996063769e-05
        ],
        "align_select": "select Documents.Document_ID, Documents.Template_ID, Documents.Document_Description",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the document id, template id, and description for the document with the name Palm reading.",
        "gold_select": "select Documents.Document_ID, Documents.Template_ID, Documents.Document_Description",
        "select_candidates": [
            "select Documents.Document_ID, Documents.Template_ID, Documents.Document_Description",
            "select Documents.Document_ID, Documents.Template_ID.c1, Documents.Document_Description",
            "select Documents.Document_ID, Documents.Template_ID, Documents.Document_Description.",
            "select Documents.Document_ID, Documents.Template_ID, Documents.Document_Description"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents",
        "table_candidates": [
            "Documents"
        ],
        "align_scores": [
            0.9955969452857971,
            9.419977868674323e-05,
            0.0015334199415519834,
            7.901067874627188e-05,
            0.0018982547335326672,
            7.395033026114106e-05,
            0.9955969452857971,
            9.419977868674323e-05
        ],
        "align_select": "select Documents.Document_ID, Documents.Template_ID, Documents.Document_Description",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the document id, template id, and description for the document with the name Summer Show.",
        "gold_select": "select Documents.Document_ID, Documents.Template_ID, Documents.Document_Description",
        "select_candidates": [
            "select Documents.Document_ID, Documents.Template_ID, Documents.Document_Description",
            "select Documents.Document_ID, Documents.Template_ID.c1, Documents.Document_Description",
            "select Documents.Document_ID, Documents.Template_ID, Documents.Document_Description.",
            "select Documents.Document_ID, Documents.Template_ID, Documents.Document_Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents",
        "table_candidates": [
            "Documents"
        ],
        "align_scores": [
            0.9955495595932007,
            0.00010421233309898525,
            0.0012943902984261513,
            8.096439705695957e-05,
            0.0018391669727861881,
            7.71676714066416e-05,
            0.9949941039085388,
            0.0001132710967794992
        ],
        "align_select": "select Documents.Document_ID, Documents.Template_ID, Documents.Document_Description",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the document id, template id, and description for the document with the name How to read a book.",
        "gold_select": "select Documents.Document_ID, Documents.Template_ID, Documents.Document_Description",
        "select_candidates": [
            "select Documents.Document_ID, Documents.Template_ID, Documents.Document_Description",
            "select Documents.Document_ID, Documents.Template_ID.c1, Documents.Document_Description",
            "select Documents.Document_ID, Documents.Template_ID, Documents.Document_Description.",
            "select Documents.Document_ID, Documents.Template_ID, Documents.Document_Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents",
        "table_candidates": [
            "Documents"
        ],
        "align_scores": [
            0.9948352575302124,
            9.65168874245137e-05,
            0.002374848583713174,
            8.071363117778674e-05,
            0.0018743745749816298,
            7.406507938867435e-05,
            0.9897708892822266,
            0.0001173164855572395
        ],
        "align_select": "select Documents.Document_ID, Documents.Template_ID, Documents.Document_Description",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the document id, template id, and description for the document with the name Customer reviews.",
        "gold_select": "select Documents.Document_ID, Documents.Template_ID, Documents.Document_Description",
        "select_candidates": [
            "select Documents.Document_ID, Documents.Template_ID, Documents.Document_Description",
            "select Documents.Document_ID, Documents.Template_ID.c1, Documents.Document_Description",
            "select Documents.Document_ID, Documents.Template_ID, Documents.Document_Description.",
            "select Documents.Document_ID, Documents.Template_ID, Documents.Document_Description"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents",
        "table_candidates": [
            "Documents"
        ],
        "align_scores": [
            0.9941771030426025,
            8.911847544368356e-05,
            0.0010824439814314246,
            8.477303344989195e-05,
            0.0021201870404183865,
            7.368016667896882e-05,
            0.9941771030426025,
            8.911847544368356e-05
        ],
        "align_select": "select Documents.Document_ID, Documents.Template_ID, Documents.Document_Description",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many documents are using the template with type code 'PP'?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Templates.Template_Type_Code",
            "select count(Documents.Document_ID)",
            "select count(*), Templates.Template_Details"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates Documents",
        "table_candidates": [
            "Templates Documents",
            "Ref_Template_Types Templates Documents"
        ],
        "align_scores": [
            0.9950653910636902,
            0.00018812074267771095,
            0.0002526933967601508,
            0.0005668867961503565,
            0.012228822335600853,
            0.00015793998318258673,
            0.00035343688796274364,
            0.004519165959209204
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many documents are using the template with type code 'BK'?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Templates.Template_Type_Code",
            "select count(Documents.Document_ID)",
            "select count(*), Templates.Template_Details"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates Documents",
        "table_candidates": [
            "Templates Documents",
            "Ref_Template_Types Templates Documents"
        ],
        "align_scores": [
            0.9939045310020447,
            0.00022101163631305099,
            0.0002575998951215297,
            0.0008383360109291971,
            0.008517485111951828,
            0.00016585775301791728,
            0.00034159666392952204,
            0.0037478713784366846
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Count the number of documents that use the PP template type.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Templates.Template_Type_Code",
            "select count(Documents.Document_ID)",
            "select count(*), Templates.Template_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates Documents",
        "table_candidates": [
            "Templates Documents",
            "Ref_Template_Types Templates Documents"
        ],
        "align_scores": [
            0.9960824251174927,
            0.00013418168236967176,
            0.00023824757954571396,
            0.00039081915747374296,
            0.0028023365885019302,
            0.00010006581578636542,
            0.00020511580805759877,
            0.00021361118706408888
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Count the number of documents that use the BK template type.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Templates.Template_Type_Code",
            "select count(Documents.Document_ID)",
            "select count(*), Templates.Template_Details"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates Documents",
        "table_candidates": [
            "Templates Documents",
            "Ref_Template_Types Templates Documents"
        ],
        "align_scores": [
            0.9956099390983582,
            0.00013788859359920025,
            0.00023624097229912877,
            0.0006865406758151948,
            0.002577023347839713,
            9.987201337935403e-05,
            0.00026533580967225134,
            0.005293095484375954
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the ids of templates with template type code PPT or PPT?",
        "gold_select": "select Templates.Template_ID",
        "select_candidates": [
            "select Templates.Template_ID",
            "select Templates.Template_ID, Templates.Template_Type_Code",
            "select Templates.Template_ID, Templates.Template_Type_Code, Templates.Date_Effective_From",
            "select Templates.Template_ID, Templates.Template_Type_Code, max(Templates.Template_ID)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates",
        "table_candidates": [
            "Templates",
            "Ref_Template_Types Templates",
            "Templates Documents Paragraphs"
        ],
        "align_scores": [
            0.8990405797958374,
            0.000440965493908152,
            0.0001279621646972373,
            7.331682718358934e-05,
            0.0001633668434806168,
            8.86108900886029e-05,
            0.00011268245725659654,
            6.886655319249257e-05
        ],
        "align_select": "select Templates.Template_ID",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the ids of templates with template type code CV or PPT?",
        "gold_select": "select Templates.Template_ID",
        "select_candidates": [
            "select Templates.Template_ID",
            "select Templates.Template_ID, Templates.Template_Type_Code",
            "select Templates.Template_ID, Templates.Template_Details",
            "select Templates.Template_ID, Templates.Date_Effective_From"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates",
        "table_candidates": [
            "Templates",
            "Ref_Template_Types Templates"
        ],
        "align_scores": [
            0.9961565136909485,
            0.001652324921451509,
            0.0001451420976081863,
            7.35505745979026e-05,
            0.0001669631019467488,
            7.718805136391893e-05,
            0.0002040706021944061,
            7.20321258995682e-05
        ],
        "align_select": "select Templates.Template_ID",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the ids of templates with template type code AD or PPT?",
        "gold_select": "select Templates.Template_ID",
        "select_candidates": [
            "select Templates.Template_ID",
            "select Templates.Template_ID, Templates.Template_Type_Code",
            "select Templates.Template_ID, Templates.Template_Details",
            "select Templates.Template_ID, Templates.Date_Effective_From"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates",
        "table_candidates": [
            "Templates"
        ],
        "align_scores": [
            0.9950615763664246,
            0.0022560185752809048,
            0.00013814272824674845,
            7.480169733753428e-05,
            0.00015932245878502727,
            8.093683572951704e-05,
            0.0001962417591130361,
            7.653646025573835e-05
        ],
        "align_select": "select Templates.Template_ID",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the ids of templates with template type code BK or PPT?",
        "gold_select": "select Templates.Template_ID",
        "select_candidates": [
            "select Templates.Template_ID",
            "select Templates.Template_ID, Templates.Template_Type_Code",
            "select Templates.Template_ID, Templates.Template_Details",
            "select Templates.Template_ID, Templates.Date_Effective_From"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates",
        "table_candidates": [
            "Templates",
            "Ref_Template_Types Templates"
        ],
        "align_scores": [
            0.9957915544509888,
            0.004374267533421516,
            0.00014007189020048827,
            7.48692182241939e-05,
            0.00016414005949627608,
            8.004890696611255e-05,
            0.0001978807704290375,
            7.914128218544647e-05
        ],
        "align_select": "select Templates.Template_ID",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the ids of templates with template type code PP or CV?",
        "gold_select": "select Templates.Template_ID",
        "select_candidates": [
            "select Templates.Template_ID",
            "select Templates.Template_ID, Templates.Template_Type_Code",
            "select Templates.Template_ID, Templates.Date_Effective_From",
            "select Templates.Template_ID, Templates.Template_Details"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates",
        "table_candidates": [
            "Templates",
            "Ref_Template_Types Templates",
            "Templates Documents Paragraphs"
        ],
        "align_scores": [
            0.9957873225212097,
            0.000845561211463064,
            0.0001477077166782692,
            7.579148950753734e-05,
            0.00018672180885914713,
            7.409622776322067e-05,
            0.00015978922601789236,
            7.652201020391658e-05
        ],
        "align_select": "select Templates.Template_ID",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the ids of templates with template type code PP or AD?",
        "gold_select": "select Templates.Template_ID",
        "select_candidates": [
            "select Templates.Template_ID",
            "select Templates.Template_ID, Templates.Template_Type_Code",
            "select Templates.Template_ID, Templates.Date_Effective_From",
            "select Templates.Template_ID, Templates.Template_Details"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates",
        "table_candidates": [
            "Templates"
        ],
        "align_scores": [
            0.9958719611167908,
            0.004121711011976004,
            0.00014481943799182773,
            8.12142388895154e-05,
            0.00021764400298707187,
            8.415703632635996e-05,
            0.00016029694234021008,
            8.464814891340211e-05
        ],
        "align_select": "select Templates.Template_ID",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the ids of templates with template type code PP or PP?",
        "gold_select": "select Templates.Template_ID",
        "select_candidates": [
            "select Templates.Template_ID",
            "select Templates.Template_ID, Templates.Template_Type_Code",
            "select Templates.Template_ID, Templates.Template_Type_Code, Templates.Date_Effective_From",
            "select Templates.Template_ID, Templates.Template_Type_Code, max(Templates.Template_ID)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates",
        "table_candidates": [
            "Templates",
            "Ref_Template_Types Templates",
            "Templates Documents Paragraphs"
        ],
        "align_scores": [
            0.8541909456253052,
            0.00021015983656980097,
            0.0001355395361315459,
            7.418920722557232e-05,
            0.00016621651593595743,
            8.41575165395625e-05,
            0.00011150573118356988,
            7.020264456514269e-05
        ],
        "align_select": "select Templates.Template_ID",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the ids of templates with template type code PP or BK?",
        "gold_select": "select Templates.Template_ID",
        "select_candidates": [
            "select Templates.Template_ID",
            "select Templates.Template_ID, Templates.Template_Type_Code",
            "select Templates.Template_ID, Templates.Date_Effective_From",
            "select Templates.Template_ID, Templates.Template_Details"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates",
        "table_candidates": [
            "Templates"
        ],
        "align_scores": [
            0.9958122372627258,
            0.0019344029715284705,
            0.00014455868222285062,
            7.716230174992234e-05,
            0.00019035523291677237,
            8.000968227861449e-05,
            0.0001561083918204531,
            7.962076051626354e-05
        ],
        "align_select": "select Templates.Template_ID",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the ids of templates that have the code PPT or PPT.",
        "gold_select": "select Templates.Template_ID",
        "select_candidates": [
            "select Templates.Template_ID",
            "select Templates.Template_ID, Templates.Template_Type_Code",
            "select Templates.Template_ID - Templates.Template_Type_Code",
            "select Templates.Template_ID, Templates.Date_Effective_From"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates",
        "table_candidates": [
            "Templates",
            "Templates Documents Paragraphs",
            "Templates Documents"
        ],
        "align_scores": [
            0.958549976348877,
            0.00020819688506890088,
            0.00011639208241831511,
            6.372403731802478e-05,
            0.00013446500815916806,
            6.68189677526243e-05,
            0.0001598024828126654,
            6.338471575872973e-05
        ],
        "align_select": "select Templates.Template_ID",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the ids of templates that have the code CV or PPT.",
        "gold_select": "select Templates.Template_ID",
        "select_candidates": [
            "select Templates.Template_ID",
            "select Templates.Template_ID, Templates.Template_Type_Code",
            "select Templates.Template_ID, Templates.Date_Effective_From",
            "select Templates.Template_ID, Templates.Template_Details"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates",
        "table_candidates": [
            "Templates"
        ],
        "align_scores": [
            0.9959366321563721,
            0.0005072414642199874,
            0.000137569077196531,
            7.07362123648636e-05,
            0.0001772294781403616,
            6.958245649002492e-05,
            0.0001853904250310734,
            7.223415741464123e-05
        ],
        "align_select": "select Templates.Template_ID",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the ids of templates that have the code AD or PPT.",
        "gold_select": "select Templates.Template_ID",
        "select_candidates": [
            "select Templates.Template_ID",
            "select Templates.Template_ID, Templates.Template_Type_Code",
            "select Templates.Template_ID, Templates.Date_Effective_From",
            "select Templates.Template_ID - Templates.Template_Type_Code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates",
        "table_candidates": [
            "Templates",
            "Templates Documents Paragraphs",
            "Templates Documents"
        ],
        "align_scores": [
            0.9935505390167236,
            0.0008482129778712988,
            0.00011950395128224045,
            6.99120937497355e-05,
            0.00014944215945433825,
            7.246148015838116e-05,
            0.00015157865709625185,
            7.7020340540912e-05
        ],
        "align_select": "select Templates.Template_ID",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the ids of templates that have the code BK or PPT.",
        "gold_select": "select Templates.Template_ID",
        "select_candidates": [
            "select Templates.Template_ID",
            "select Templates.Template_ID, Templates.Template_Type_Code",
            "select Templates.Template_ID, Templates.Date_Effective_From",
            "select Templates.Template_ID, Templates.Template_Details"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates",
        "table_candidates": [
            "Templates",
            "Templates Documents Paragraphs",
            "Ref_Template_Types Templates",
            "Templates Documents"
        ],
        "align_scores": [
            0.9957850575447083,
            0.001286151586100459,
            0.00011534113582456484,
            6.745277642039582e-05,
            0.00016670633340254426,
            7.533666939707473e-05,
            0.00018047142657451332,
            7.3881252319552e-05
        ],
        "align_select": "select Templates.Template_ID",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the ids of templates that have the code PP or CV.",
        "gold_select": "select Templates.Template_ID",
        "select_candidates": [
            "select Templates.Template_ID",
            "select Templates.Template_ID, Templates.Template_Type_Code",
            "select Templates.Template_ID, Templates.Date_Effective_From",
            "select Templates.Template_ID, Templates.Template_Details"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates",
        "table_candidates": [
            "Templates"
        ],
        "align_scores": [
            0.9955690503120422,
            0.0003967657685279846,
            0.00011025629646610469,
            6.832650251453742e-05,
            0.00016643221897538751,
            6.411769572878256e-05,
            0.0001618100213818252,
            6.929316441528499e-05
        ],
        "align_select": "select Templates.Template_ID",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the ids of templates that have the code PP or AD.",
        "gold_select": "select Templates.Template_ID",
        "select_candidates": [
            "select Templates.Template_ID",
            "select Templates.Template_ID, Templates.Template_Type_Code",
            "select Templates.Template_ID - Templates.Template_Type_Code",
            "select Templates.Template_ID, Templates.Date_Effective_From"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates",
        "table_candidates": [
            "Templates"
        ],
        "align_scores": [
            0.9953239560127258,
            0.0005682871560566127,
            0.00011396643822081387,
            7.131516031222418e-05,
            0.00014412897871807218,
            7.508126873290166e-05,
            0.00017122489225585014,
            7.031606219243258e-05
        ],
        "align_select": "select Templates.Template_ID",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the ids of templates that have the code PP or PP.",
        "gold_select": "select Templates.Template_ID",
        "select_candidates": [
            "select Templates.Template_ID",
            "select Templates.Template_ID, Templates.Template_Type_Code",
            "select Templates.Template_ID - Templates.Template_Type_Code",
            "select Templates.Template_ID, Templates.Date_Effective_From"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates",
        "table_candidates": [
            "Templates",
            "Templates Documents Paragraphs",
            "Templates Documents"
        ],
        "align_scores": [
            0.9680553078651428,
            0.00018311011081095785,
            0.00010358617873862386,
            6.428839697036892e-05,
            0.00014269640087150037,
            6.67810018057935e-05,
            0.00014675279089715332,
            6.129840039648116e-05
        ],
        "align_select": "select Templates.Template_ID",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the ids of templates that have the code PP or BK.",
        "gold_select": "select Templates.Template_ID",
        "select_candidates": [
            "select Templates.Template_ID",
            "select Templates.Template_ID, Templates.Template_Type_Code",
            "select Templates.Template_ID, Templates.Date_Effective_From",
            "select Templates.Template_ID, Templates.Template_Details"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates",
        "table_candidates": [
            "Templates"
        ],
        "align_scores": [
            0.9954812526702881,
            0.0003950788814108819,
            0.00010619640670483932,
            6.790169572923332e-05,
            0.00016844253696035594,
            6.655608012806624e-05,
            0.0001587792212376371,
            6.945160566829145e-05
        ],
        "align_select": "select Templates.Template_ID",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many templates have template type code PPT?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Templates.Template_Type_Code",
            "select count(*), Templates.Template_ID",
            "select count(*), Templates.Template_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates",
        "table_candidates": [
            "Templates"
        ],
        "align_scores": [
            0.9959140419960022,
            8.877758955350146e-05,
            0.0002187529025832191,
            6.088389636715874e-05,
            0.00019619238446466625,
            6.367994501488283e-05,
            0.00019619238446466625,
            6.367994501488283e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many templates have template type code AD?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Templates.Template_Type_Code",
            "select count(*), Templates.Template_ID",
            "select count(*), Templates.Version_Number"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates",
        "table_candidates": [
            "Templates"
        ],
        "align_scores": [
            0.9940124154090881,
            9.712948667583987e-05,
            0.0002562589361332357,
            5.769510244135745e-05,
            0.00019643684208858758,
            7.320596341742203e-05,
            0.00020301967742852867,
            9.644485544413328e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many templates have template type code PP?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Templates.Template_Type_Code",
            "select count(*), Templates.Template_ID",
            "select count(*), Templates.Template_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates",
        "table_candidates": [
            "Templates"
        ],
        "align_scores": [
            0.9947755336761475,
            8.407553832512349e-05,
            0.00021422839199658483,
            6.146029045339674e-05,
            0.00019711433560587466,
            5.9183090343140066e-05,
            0.00019711433560587466,
            5.9183090343140066e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many templates have template type code BK?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Templates.Template_Type_Code",
            "select count(*), Templates.Template_ID",
            "select count(*), Templates.Template_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates",
        "table_candidates": [
            "Templates"
        ],
        "align_scores": [
            0.9919163584709167,
            8.225302008213475e-05,
            0.0002786184486467391,
            6.344669964164495e-05,
            0.00019614375196397305,
            6.0658054280793294e-05,
            0.00019614375196397305,
            6.0658054280793294e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Count the number of templates of the type PPT.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Templates.Template_Type_Code",
            "select count(*), Templates.Template_ID",
            "select count(*),"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates",
        "table_candidates": [
            "Templates"
        ],
        "align_scores": [
            0.9963125586509705,
            8.590056677348912e-05,
            0.00020935482461936772,
            5.954993321211077e-05,
            0.00018478775746189058,
            5.655475615640171e-05,
            0.0004230568010825664,
            5.4965592426015064e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Count the number of templates of the type AD.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Templates.Template_Type_Code",
            "select count(*), Templates.Template_ID",
            "select count(*),"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates",
        "table_candidates": [
            "Templates"
        ],
        "align_scores": [
            0.9959121942520142,
            0.00011074573558289558,
            0.0002364016108913347,
            6.222340743988752e-05,
            0.00019356870325282216,
            6.23325613560155e-05,
            0.0004261487629264593,
            6.688922439934686e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Count the number of templates of the type PP.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Templates.Template_Type_Code",
            "select count(*), Templates.Template_ID",
            "select count(*),"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates",
        "table_candidates": [
            "Templates"
        ],
        "align_scores": [
            0.9957518577575684,
            9.98941104626283e-05,
            0.00018650616402737796,
            5.885749123990536e-05,
            0.00017823510279413313,
            5.759126725024544e-05,
            0.0003916036512237042,
            5.526918175746687e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Count the number of templates of the type BK.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Templates.Template_Type_Code",
            "select count(*), Templates.Template_ID",
            "select count(*),"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates",
        "table_candidates": [
            "Templates"
        ],
        "align_scores": [
            0.995868444442749,
            0.00012606073869392276,
            0.00020614491950254887,
            0.0005090066115371883,
            0.00017574371304363012,
            9.313518239650875e-05,
            0.0004197347443550825,
            0.0021542462054640055
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the template type code of the template used by document with the name \"Understanding DB\"?",
        "gold_select": "select Templates.Template_Type_Code",
        "select_candidates": [
            "select Templates.Template_Type_Code",
            "select Templates.Template_Type_Code, Documents.Template_ID",
            "select Templates.Template_Type_Code, Templates.Template_Details",
            "select Templates.Template_Type_Code (ref. Templates.Template_Details)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates Documents",
        "table_candidates": [
            "Templates Documents",
            "Ref_Template_Types Templates Documents"
        ],
        "align_scores": [
            0.9948722720146179,
            9.421173308510333e-05,
            0.00016443659842479974,
            6.693031900795177e-05,
            0.00022308727784547955,
            6.55714757158421e-05,
            0.0006635999889113009,
            6.526435754494742e-05
        ],
        "align_select": "select Templates.Template_Type_Code",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the template type code of the template used by document with the name \"Summer Show\"?",
        "gold_select": "select Templates.Template_Type_Code",
        "select_candidates": [
            "select Templates.Template_Type_Code",
            "select Templates.Template_Type_Code, Documents.Template_ID",
            "select Templates.Template_Type_Code, Templates.Template_Details",
            "select Templates.Template_Type_Code (ref. Templates.Template_Details)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates Documents",
        "table_candidates": [
            "Templates Documents",
            "Ref_Template_Types Templates Documents"
        ],
        "align_scores": [
            0.9953069090843201,
            9.118905290961266e-05,
            0.00017218956782016903,
            6.735487841069698e-05,
            0.0001974478509509936,
            6.458783173002303e-05,
            0.0009534472483210266,
            6.597673200303689e-05
        ],
        "align_select": "select Templates.Template_Type_Code",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the template type code of the template used by document with the name \"Customer reviews\"?",
        "gold_select": "select Templates.Template_Type_Code",
        "select_candidates": [
            "select Templates.Template_Type_Code",
            "select Templates.Template_Type_Code, Documents.Template_ID",
            "select Templates.Template_Type_Code, Templates.Template_Details",
            "select Templates.Template_Type_Code (ref. Templates.Template_Details)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates Documents",
        "table_candidates": [
            "Templates Documents",
            "Ref_Template_Types Templates Documents"
        ],
        "align_scores": [
            0.9948617815971375,
            0.00010540142829995602,
            0.00018966860079672188,
            7.228211325127631e-05,
            0.0002082119754049927,
            6.849193596281111e-05,
            0.0011434386251494288,
            6.89398220856674e-05
        ],
        "align_select": "select Templates.Template_Type_Code",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the template type code of the template used by document with the name \"How Google people work\"?",
        "gold_select": "select Templates.Template_Type_Code",
        "select_candidates": [
            "select Templates.Template_Type_Code",
            "select Templates.Template_Type_Code, Documents.Template_ID",
            "select Templates.Template_Type_Code, Templates.Template_Details",
            "select Templates.Template_Type_Code, Templates.Date_Effective_From"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates Documents",
        "table_candidates": [
            "Templates Documents",
            "Ref_Template_Types Templates Documents"
        ],
        "align_scores": [
            0.9945583343505859,
            0.00010439584730193019,
            0.0002095687377732247,
            7.310139335459098e-05,
            0.0002497837122064084,
            7.261615246534348e-05,
            0.0002872399927582592,
            6.86989733367227e-05
        ],
        "align_select": "select Templates.Template_Type_Code",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the template type code of the template used by document with the name \"Welcome to NY\"?",
        "gold_select": "select Templates.Template_Type_Code",
        "select_candidates": [
            "select Templates.Template_Type_Code",
            "select Templates.Template_Type_Code, Documents.Template_ID",
            "select Templates.Template_Type_Code, Templates.Template_Details",
            "select Templates.Template_Type_Code, Templates.Date_Effective_From"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates Documents",
        "table_candidates": [
            "Templates Documents",
            "Ref_Template_Types Templates Documents"
        ],
        "align_scores": [
            0.9948648810386658,
            9.052556561073288e-05,
            0.00017543869034852833,
            6.80841549183242e-05,
            0.00019661108672153205,
            6.47787528578192e-05,
            0.00017077162920031697,
            5.9463680372573435e-05
        ],
        "align_select": "select Templates.Template_Type_Code",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the template type code of the template that is used by a document named Understanding DB.",
        "gold_select": "select Templates.Template_Type_Code",
        "select_candidates": [
            "select Templates.Template_Type_Code",
            "select Templates.Template_Type_Code, Documents.Template_ID",
            "select Templates.Template_Type_Code, Documents.Document_ID",
            "select Templates.Template_Type_Code (ref. Templates.Template_Details)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates Documents",
        "table_candidates": [
            "Templates Documents",
            "Ref_Template_Types Templates Documents"
        ],
        "align_scores": [
            0.9945235252380371,
            9.123671770794317e-05,
            0.00022988338605500758,
            7.232327334349975e-05,
            0.00023091718321666121,
            7.262654253281653e-05,
            0.0005584493046626449,
            6.491570820799097e-05
        ],
        "align_select": "select Templates.Template_Type_Code",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the template type code of the template that is used by a document named Summer Show.",
        "gold_select": "select Templates.Template_Type_Code",
        "select_candidates": [
            "select Templates.Template_Type_Code",
            "select Templates.Template_Type_Code, Documents.Template_ID",
            "select Templates.Template_Type_Code (ref. Templates.Template_Details)",
            "select Templates.Template_Type_Code (ref. Templates.Date_Effective_From)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates Documents",
        "table_candidates": [
            "Templates Documents",
            "Ref_Template_Types Templates Documents"
        ],
        "align_scores": [
            0.9944275617599487,
            9.809481707634404e-05,
            0.00021626587840728462,
            7.428803655784577e-05,
            0.0005433963378891349,
            7.121981616364792e-05,
            0.0003233313618693501,
            6.66955893393606e-05
        ],
        "align_select": "select Templates.Template_Type_Code",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the template type code of the template that is used by a document named Customer reviews.",
        "gold_select": "select Templates.Template_Type_Code",
        "select_candidates": [
            "select Templates.Template_Type_Code",
            "select Templates.Template_Type_Code, Documents.Template_ID",
            "select Templates.Template_Type_Code (ref. Templates.Template_Details)",
            "select Templates.Template_Type_Code, Documents.Document_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates Documents",
        "table_candidates": [
            "Templates Documents",
            "Ref_Template_Types Templates Documents"
        ],
        "align_scores": [
            0.9940548539161682,
            0.00010382004984421656,
            0.00024044357996899635,
            7.428180833812803e-05,
            0.0006734413909725845,
            7.331738743232563e-05,
            0.00021148573432583362,
            6.853008380858228e-05
        ],
        "align_select": "select Templates.Template_Type_Code",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the template type code of the template that is used by a document named How Google people work.",
        "gold_select": "select Templates.Template_Type_Code",
        "select_candidates": [
            "select Templates.Template_Type_Code",
            "select Templates.Template_Type_Code, Documents.Template_ID",
            "select Templates.Template_Type_Code, Templates.Template_Details",
            "select Templates.Template_Type_Code (ref. Templates.Template_Details)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates Documents",
        "table_candidates": [
            "Templates Documents",
            "Ref_Template_Types Templates Documents"
        ],
        "align_scores": [
            0.9938775897026062,
            0.00011335407907608896,
            0.00021269702119752765,
            7.565170380985364e-05,
            0.0002711688575800508,
            7.802281470503658e-05,
            0.0005783403175882995,
            7.263582665473223e-05
        ],
        "align_select": "select Templates.Template_Type_Code",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the template type code of the template that is used by a document named Welcome to NY.",
        "gold_select": "select Templates.Template_Type_Code",
        "select_candidates": [
            "select Templates.Template_Type_Code",
            "select Templates.Template_Type_Code, Documents.Template_ID",
            "select Templates.Template_Type_Code (ref. Templates.Template_Details)",
            "select Templates.Template_Type_Code, Templates.Template_Details"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates Documents",
        "table_candidates": [
            "Templates Documents",
            "Ref_Template_Types Templates Documents"
        ],
        "align_scores": [
            0.9949442744255066,
            0.00010031995770987123,
            0.0002279493783134967,
            7.172203913796693e-05,
            0.0006365053704939783,
            6.927175854798406e-05,
            0.00025471264962106943,
            6.96216884534806e-05
        ],
        "align_select": "select Templates.Template_Type_Code",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show all document names using templates with template type code PPT.",
        "gold_select": "select Documents.Document_Name",
        "select_candidates": [
            "select Documents.Document_Name",
            "select Documents.Document_ID, Documents.Document_Name",
            "select Documents.Document_Name, Templates.Template_Details",
            "select Documents.Document_Name, Documents.Document_Description"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates Documents",
        "table_candidates": [
            "Templates Documents",
            "Ref_Template_Types Templates Documents"
        ],
        "align_scores": [
            0.9965820908546448,
            9.422762377653271e-05,
            0.00012837133544962853,
            6.630179996136576e-05,
            0.000384488666895777,
            6.41876831650734e-05,
            0.00016638237866573036,
            6.525465869344771e-05
        ],
        "align_select": "select Documents.Document_Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show all document names using templates with template type code AD.",
        "gold_select": "select Documents.Document_Name",
        "select_candidates": [
            "select Documents.Document_Name",
            "select Documents.Document_ID, Documents.Document_Name",
            "select Documents.Document_Name, Documents.Document_Description",
            "select Documents.Document_Name, Templates.Template_Details"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates Documents",
        "table_candidates": [
            "Templates Documents",
            "Ref_Template_Types Templates Documents"
        ],
        "align_scores": [
            0.996208667755127,
            7.86766322562471e-05,
            0.00012610811972990632,
            6.588216638192534e-05,
            0.00015043653547763824,
            6.310709432000294e-05,
            0.000377524527721107,
            6.178149487823248e-05
        ],
        "align_select": "select Documents.Document_Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show all document names using templates with template type code PP.",
        "gold_select": "select Documents.Document_Name",
        "select_candidates": [
            "select Documents.Document_Name",
            "select Documents.Document_ID, Documents.Document_Name",
            "select Documents.Document_Name, Documents.Document_Description",
            "select Documents.Document_Name, Templates.Template_Details"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates Documents",
        "table_candidates": [
            "Templates Documents",
            "Ref_Template_Types Templates Documents"
        ],
        "align_scores": [
            0.9957901835441589,
            6.927499634912238e-05,
            0.00011628866923274472,
            6.599164044018835e-05,
            0.00014341226778924465,
            6.524059426737949e-05,
            0.000349786423612386,
            6.321707769529894e-05
        ],
        "align_select": "select Documents.Document_Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of documents that use templates with the code PPT?",
        "gold_select": "select Documents.Document_Name",
        "select_candidates": [
            "select Documents.Document_Name",
            "select Documents.Document_Name, Documents.Document_Description",
            "select Documents.Document_ID, Documents.Document_Name",
            "select Documents.Template_ID, Documents.Document_Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates Documents",
        "table_candidates": [
            "Templates Documents",
            "Ref_Template_Types Templates Documents"
        ],
        "align_scores": [
            0.9945940375328064,
            0.00015868751506786793,
            0.0002879127860069275,
            6.576798477908596e-05,
            0.00016649204189889133,
            6.863263115519658e-05,
            0.00020741426851600409,
            6.839670822955668e-05
        ],
        "align_select": "select Documents.Document_Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of documents that use templates with the code AD?",
        "gold_select": "select Documents.Document_Name",
        "select_candidates": [
            "select Documents.Document_Name",
            "select Documents.Document_Name, Documents.Document_Description",
            "select Documents.Document_ID, Documents.Document_Name",
            "select Documents.Template_ID, Documents.Document_Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates Documents",
        "table_candidates": [
            "Templates Documents",
            "Documents",
            "Ref_Template_Types Templates Documents"
        ],
        "align_scores": [
            0.9913948178291321,
            0.00010626328003127128,
            0.00020921336545143276,
            6.108657544245943e-05,
            0.00015457812696695328,
            6.553496496053413e-05,
            0.00020161761494819075,
            6.620185740757734e-05
        ],
        "align_select": "select Documents.Document_Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of documents that use templates with the code PP?",
        "gold_select": "select Documents.Document_Name",
        "select_candidates": [
            "select Documents.Document_Name",
            "select Documents.Document_Name, Documents.Document_Description",
            "select Documents.Document_ID, Documents.Document_Name",
            "select Documents.Template_ID, Documents.Document_Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates Documents",
        "table_candidates": [
            "Templates Documents",
            "Ref_Template_Types Templates Documents",
            "Documents"
        ],
        "align_scores": [
            0.9949127435684204,
            0.00010131024464499205,
            0.00023573383805342019,
            5.845380655955523e-05,
            0.00015230043209157884,
            6.51426162221469e-05,
            0.00018117019499186426,
            6.61070880596526e-05
        ],
        "align_select": "select Documents.Document_Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the template type descriptions for template type code \"PPT\".",
        "gold_select": "select Ref_Template_Types.Template_Type_Description",
        "select_candidates": [
            "select Ref_Template_Types.Template_Type_Description",
            "select Ref_Template_Types.Template_Type_Code, Ref_Template_Types.Template_Type_Description",
            "select Ref_Template_Types.Template_Type_Description, t0.c2",
            "select Ref_Template_Types.Template_Type_Description, Ref_Template_Types.Template_Type_Code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Ref_Template_Types",
        "table_candidates": [
            "Ref_Template_Types",
            "Ref_Template_Types Templates"
        ],
        "align_scores": [
            0.9959843158721924,
            9.481277811573818e-05,
            0.00015042319137137383,
            8.137920667650178e-05,
            0.0002542259462643415,
            7.869532419135794e-05,
            0.00012836877431254834,
            7.686955359531567e-05
        ],
        "align_select": "select Ref_Template_Types.Template_Type_Description",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the template type descriptions for template type code \"CV\".",
        "gold_select": "select Ref_Template_Types.Template_Type_Description",
        "select_candidates": [
            "select Ref_Template_Types.Template_Type_Description",
            "select Ref_Template_Types.Template_Type_Code, Ref_Template_Types.Template_Type_Description",
            "select Ref_Template_Types.Template_Type_Description, t0.c2",
            "select Ref_Template_Types.Template_Type_Description, Ref_Template_Types.Template_Type_Code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Ref_Template_Types",
        "table_candidates": [
            "Ref_Template_Types"
        ],
        "align_scores": [
            0.9955562949180603,
            8.35393657325767e-05,
            0.00014644651673734188,
            7.672512583667412e-05,
            0.00026506520225666463,
            8.130521018756554e-05,
            0.0001282328594243154,
            7.268314948305488e-05
        ],
        "align_select": "select Ref_Template_Types.Template_Type_Description",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the template type descriptions for template type code \"PP\".",
        "gold_select": "select Ref_Template_Types.Template_Type_Description",
        "select_candidates": [
            "select Ref_Template_Types.Template_Type_Description",
            "select Ref_Template_Types.Template_Type_Code, Ref_Template_Types.Template_Type_Description",
            "select Ref_Template_Types.Template_Type_Description, t0.c2",
            "select Ref_Template_Types.Template_Type_Description, Ref_Template_Types.Template_Type_Code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Ref_Template_Types",
        "table_candidates": [
            "Ref_Template_Types",
            "Ref_Template_Types Templates"
        ],
        "align_scores": [
            0.9959914088249207,
            8.78467908478342e-05,
            0.0001467813563067466,
            7.824769272701815e-05,
            0.00025749256019480526,
            7.687417382840067e-05,
            0.00013049636618234217,
            7.50775434426032e-05
        ],
        "align_select": "select Ref_Template_Types.Template_Type_Description",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the template type descriptions for template type code \"BK\".",
        "gold_select": "select Ref_Template_Types.Template_Type_Description",
        "select_candidates": [
            "select Ref_Template_Types.Template_Type_Description",
            "select Ref_Template_Types.Template_Type_Code, Ref_Template_Types.Template_Type_Description",
            "select Ref_Template_Types.Template_Type_Description, t0.c2",
            "select Ref_Template_Types.Template_Type_Description, Ref_Template_Types.Template_Type_Code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Ref_Template_Types",
        "table_candidates": [
            "Ref_Template_Types",
            "Ref_Template_Types Templates"
        ],
        "align_scores": [
            0.9955449104309082,
            8.563452865928411e-05,
            0.00014760057092644274,
            7.74876243667677e-05,
            0.00024625493097119033,
            7.642938726348802e-05,
            0.00012829572369810194,
            7.353501132456586e-05
        ],
        "align_select": "select Ref_Template_Types.Template_Type_Description",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the template type description of the template type with the code PPT.",
        "gold_select": "select Ref_Template_Types.Template_Type_Description",
        "select_candidates": [
            "select Ref_Template_Types.Template_Type_Description",
            "select Ref_Template_Types.Template_Type_Code, Ref_Template_Types.Template_Type_Description",
            "select Ref_Template_Types.Template_Type_Description, t0.c2",
            "select Ref_Template_Types.Template_Type_Description, Ref_Template_Types.Template_Type_Code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Ref_Template_Types",
        "table_candidates": [
            "Ref_Template_Types",
            "Ref_Template_Types Templates"
        ],
        "align_scores": [
            0.9961928129196167,
            7.826260844012722e-05,
            0.00013111490989103913,
            6.64583349134773e-05,
            0.00020625993784051389,
            7.299467688426375e-05,
            9.885760664474219e-05,
            6.476410635514185e-05
        ],
        "align_select": "select Ref_Template_Types.Template_Type_Description",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the template type description of the template type with the code CV.",
        "gold_select": "select Ref_Template_Types.Template_Type_Description",
        "select_candidates": [
            "select Ref_Template_Types.Template_Type_Description",
            "select Ref_Template_Types.Template_Type_Code, Ref_Template_Types.Template_Type_Description",
            "select Ref_Template_Types.Template_Type_Description, t0.c2",
            "select Ref_Template_Types.Template_Type_Description, Ref_Template_Types.Template_Type_Code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Ref_Template_Types",
        "table_candidates": [
            "Ref_Template_Types",
            "Ref_Template_Types Templates"
        ],
        "align_scores": [
            0.9956598877906799,
            6.983260391280055e-05,
            0.0001382741320412606,
            6.506736826850101e-05,
            0.0002333273005206138,
            7.419189932988957e-05,
            9.73485002759844e-05,
            6.539007881656289e-05
        ],
        "align_select": "select Ref_Template_Types.Template_Type_Description",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the template type description of the template type with the code PP.",
        "gold_select": "select Ref_Template_Types.Template_Type_Description",
        "select_candidates": [
            "select Ref_Template_Types.Template_Type_Description",
            "select Ref_Template_Types.Template_Type_Code, Ref_Template_Types.Template_Type_Description",
            "select Ref_Template_Types.Template_Type_Description, t0.c2",
            "select Ref_Template_Types.Template_Type_Description, Ref_Template_Types.Template_Type_Code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Ref_Template_Types",
        "table_candidates": [
            "Ref_Template_Types",
            "Ref_Template_Types Templates"
        ],
        "align_scores": [
            0.9958599209785461,
            6.106316141085699e-05,
            0.00017009170551318675,
            6.648260750807822e-05,
            0.00019524550589267164,
            6.521049363072962e-05,
            0.00011148393241455778,
            6.331349140964448e-05
        ],
        "align_select": "select Ref_Template_Types.Template_Type_Description",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the template type description of the template type with the code BK.",
        "gold_select": "select Ref_Template_Types.Template_Type_Description",
        "select_candidates": [
            "select Ref_Template_Types.Template_Type_Description",
            "select Ref_Template_Types.Template_Type_Code, Ref_Template_Types.Template_Type_Description",
            "select Ref_Template_Types.Template_Type_Description, t0.c2",
            "select Ref_Template_Types.Template_Type_Description, Ref_Template_Types.Template_Type_Code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Ref_Template_Types",
        "table_candidates": [
            "Ref_Template_Types",
            "Ref_Template_Types Templates"
        ],
        "align_scores": [
            0.9960231781005859,
            6.621536886086687e-05,
            0.0001446215610485524,
            6.510685489047319e-05,
            0.00020624857279472053,
            6.992189446464181e-05,
            0.00010088837734656408,
            6.257865607040003e-05
        ],
        "align_select": "select Ref_Template_Types.Template_Type_Description",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the template type code for template type description \"CV\".",
        "gold_select": "select Ref_Template_Types.Template_Type_Code",
        "select_candidates": [
            "select Ref_Template_Types.Template_Type_Code",
            "select t0.c, Ref_Template_Types.Template_Type_Description",
            "select Ref_Template_Types.Template_Type_Code, Ref_Template_Types.Template_Type_Description",
            "select Ref_Template_Types.Template_Type_Description, Ref_Template_Types.Template_Type_Code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Ref_Template_Types",
        "table_candidates": [
            "Ref_Template_Types",
            "Ref_Template_Types Templates"
        ],
        "align_scores": [
            0.9961494207382202,
            7.190215546870604e-05,
            0.00015980872558429837,
            7.093953172443435e-05,
            0.000128541374579072,
            6.0508882597787306e-05,
            0.00015230885765049607,
            6.291823228821158e-05
        ],
        "align_select": "select Ref_Template_Types.Template_Type_Code",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the template type code for template type description \"Advertisement\".",
        "gold_select": "select Ref_Template_Types.Template_Type_Code",
        "select_candidates": [
            "select Ref_Template_Types.Template_Type_Code",
            "select Templates.Template_Type_Code",
            "select Ref_Template_Types.Template_Type_Code, Ref_Template_Types.Template_Type_Description",
            "select t0.c, Templates.Template_Type_Code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Ref_Template_Types",
        "table_candidates": [
            "Ref_Template_Types"
        ],
        "align_scores": [
            0.9958791732788086,
            7.503960659960285e-05,
            0.9959577918052673,
            8.059134415816516e-05,
            0.00013727240730077028,
            6.106618820922449e-05,
            0.00026613689260557294,
            6.646334077231586e-05
        ],
        "align_select": "select Ref_Template_Types.Template_Type_Code",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the template type code for template type description \"Paper\".",
        "gold_select": "select Ref_Template_Types.Template_Type_Code",
        "select_candidates": [
            "select Ref_Template_Types.Template_Type_Code",
            "select t0.c, Ref_Template_Types.Template_Type_Description",
            "select Ref_Template_Types.Template_Type_Code, Ref_Template_Types.Template_Type_Description",
            "select Ref_Template_Types.Template_Type_Code (symbol Ref_Template_Types.Template_Type_Description)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Ref_Template_Types",
        "table_candidates": [
            "Ref_Template_Types",
            "Ref_Template_Types Templates"
        ],
        "align_scores": [
            0.9961817264556885,
            7.729861681582406e-05,
            0.00018424286099616438,
            7.526450644945726e-05,
            0.00014225851919036359,
            6.280793604673818e-05,
            0.0002393336035311222,
            7.545400148956105e-05
        ],
        "align_select": "select Ref_Template_Types.Template_Type_Code",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the template type code for template type description \"Presentation\".",
        "gold_select": "select Ref_Template_Types.Template_Type_Code",
        "select_candidates": [
            "select Ref_Template_Types.Template_Type_Code",
            "select t0.c, Ref_Template_Types.Template_Type_Description",
            "select Ref_Template_Types.Template_Type_Code, Ref_Template_Types.Template_Type_Description",
            "select t0.c, Templates.Template_Type_Code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Ref_Template_Types",
        "table_candidates": [
            "Ref_Template_Types",
            "Ref_Template_Types Templates"
        ],
        "align_scores": [
            0.9962078332901001,
            7.20327443559654e-05,
            0.00017128238687291741,
            7.628521416336298e-05,
            0.00013028811372350901,
            6.113167182775214e-05,
            0.0002628433285281062,
            6.382634455803782e-05
        ],
        "align_select": "select Ref_Template_Types.Template_Type_Code",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the type code of the template type with the description \"CV\".",
        "gold_select": "select Ref_Template_Types.Template_Type_Code",
        "select_candidates": [
            "select Ref_Template_Types.Template_Type_Code",
            "select Ref_Template_Types.Template_Type_Description, Templates.Template_Type_Code",
            "select Ref_Template_Types.Template_Type_Description, Ref_Template_Types.Template_Type_Code",
            "select t0.c, Ref_Template_Types.Template_Type_Description"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Ref_Template_Types",
        "table_candidates": [
            "Ref_Template_Types",
            "Ref_Template_Types Templates"
        ],
        "align_scores": [
            0.9961830973625183,
            8.462265395792201e-05,
            0.00015606716624461114,
            6.69539367663674e-05,
            0.00012898043496534228,
            6.949737871764228e-05,
            0.00013266163296066225,
            7.253808144014329e-05
        ],
        "align_select": "select Ref_Template_Types.Template_Type_Code",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the type code of the template type with the description \"Advertisement\".",
        "gold_select": "select Ref_Template_Types.Template_Type_Code",
        "select_candidates": [
            "select Ref_Template_Types.Template_Type_Code",
            "select Templates.Template_Type_Code",
            "select Ref_Template_Types.Template_Type_Code, Ref_Template_Types.Template_Type_Description",
            "select t0.c, Ref_Template_Types.Template_Type_Description"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Ref_Template_Types",
        "table_candidates": [
            "Ref_Template_Types",
            "Ref_Template_Types Templates"
        ],
        "align_scores": [
            0.9959800243377686,
            8.860666275722906e-05,
            0.9965984225273132,
            0.00010558934445725754,
            0.000136001588543877,
            6.307893636403605e-05,
            0.00016850662359502167,
            8.260209142463282e-05
        ],
        "align_select": "select Ref_Template_Types.Template_Type_Code",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the type code of the template type with the description \"Paper\".",
        "gold_select": "select Ref_Template_Types.Template_Type_Code",
        "select_candidates": [
            "select Ref_Template_Types.Template_Type_Code",
            "select t0.c, Ref_Template_Types.Template_Type_Description",
            "select Ref_Template_Types.Template_Type_Code, Ref_Template_Types.Template_Type_Description",
            "select Ref_Template_Types.Template_Type_Description, Templates.Template_Type_Code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Ref_Template_Types",
        "table_candidates": [
            "Ref_Template_Types",
            "Ref_Template_Types Templates"
        ],
        "align_scores": [
            0.9962567090988159,
            8.797899499768391e-05,
            0.00015659363998565823,
            7.735826511634514e-05,
            0.00013619130186270922,
            6.249480065889657e-05,
            0.0001816668373066932,
            6.997271702857688e-05
        ],
        "align_select": "select Ref_Template_Types.Template_Type_Code",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the type code of the template type with the description \"Presentation\".",
        "gold_select": "select Ref_Template_Types.Template_Type_Code",
        "select_candidates": [
            "select Ref_Template_Types.Template_Type_Code",
            "select t0.c, Ref_Template_Types.Template_Type_Description",
            "select Ref_Template_Types.Template_Type_Description, Templates.Template_Type_Code",
            "select Ref_Template_Types.Template_Type_Code, Ref_Template_Types.Template_Type_Description"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Ref_Template_Types",
        "table_candidates": [
            "Ref_Template_Types",
            "Ref_Template_Types Templates"
        ],
        "align_scores": [
            0.9960816502571106,
            8.340030763065442e-05,
            0.0001487837143940851,
            7.49274913687259e-05,
            0.00018370713223703206,
            6.862595910206437e-05,
            0.0001303936296608299,
            6.227290577953681e-05
        ],
        "align_select": "select Ref_Template_Types.Template_Type_Code",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the template ids with template type description \"CV\".",
        "gold_select": "select Templates.Template_ID",
        "select_candidates": [
            "select Templates.Template_ID",
            "select Templates.Template_ID, Ref_Template_Types.Template_Type_Description",
            "select Templates.Template_ID, Templates.Template_Details",
            "select Templates.Template_ID, Templates.Template_Type_Code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Ref_Template_Types Templates",
        "table_candidates": [
            "Ref_Template_Types Templates"
        ],
        "align_scores": [
            0.9967648983001709,
            0.00010714502423070371,
            0.00015630782581865788,
            7.021462079137564e-05,
            0.000133820969494991,
            6.414809467969462e-05,
            0.00013237605162430555,
            6.337691593216732e-05
        ],
        "align_select": "select Templates.Template_ID",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the template ids with template type description \"Book\".",
        "gold_select": "select Templates.Template_ID",
        "select_candidates": [
            "select Templates.Template_ID",
            "select Templates.Template_ID, Ref_Template_Types.Template_Type_Description",
            "select Templates.Template_ID, Templates.Template_Type_Code",
            "select Templates.Template_ID, Templates.Template_Details"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Ref_Template_Types Templates",
        "table_candidates": [
            "Ref_Template_Types Templates"
        ],
        "align_scores": [
            0.9966670870780945,
            0.00012405595043674111,
            0.0001657557877479121,
            7.183059642557055e-05,
            0.0001354686974082142,
            6.544591451529413e-05,
            0.00013747336925007403,
            6.584468064829707e-05
        ],
        "align_select": "select Templates.Template_ID",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the template ids with template type description \"Advertisement\".",
        "gold_select": "select Templates.Template_ID",
        "select_candidates": [
            "select Templates.Template_ID",
            "select Templates.Template_ID, Ref_Template_Types.Template_Type_Description",
            "select Templates.Template_ID, Templates.Template_Type_Code",
            "select Templates.Template_ID, Templates.Template_Details"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Ref_Template_Types Templates",
        "table_candidates": [
            "Ref_Template_Types Templates"
        ],
        "align_scores": [
            0.9964216947555542,
            0.00012315291678532958,
            0.00015460967551916838,
            7.07640647306107e-05,
            0.00013331978698261082,
            6.4423045841977e-05,
            0.00013578181096818298,
            6.538639718201011e-05
        ],
        "align_select": "select Templates.Template_ID",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the template ids with template type description \"Paper\".",
        "gold_select": "select Templates.Template_ID",
        "select_candidates": [
            "select Templates.Template_ID",
            "select Templates.Template_ID, Ref_Template_Types.Template_Type_Description",
            "select Templates.Template_ID, Templates.Template_Type_Code",
            "select Templates.Template_ID, t0.c2"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Ref_Template_Types Templates",
        "table_candidates": [
            "Ref_Template_Types Templates"
        ],
        "align_scores": [
            0.9966542720794678,
            0.00012476979463826865,
            0.00015697666094638407,
            7.188309245975688e-05,
            0.0001391217519994825,
            6.748803571099415e-05,
            0.00032299154554493725,
            7.654208457097411e-05
        ],
        "align_select": "select Templates.Template_ID",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the ids corresponding to templates with the description 'CV'.",
        "gold_select": "select Templates.Template_ID",
        "select_candidates": [
            "select Templates.Template_ID",
            "select Templates.Template_ID, Ref_Template_Types.Template_Type_Description",
            "select Templates.Template_ID, Templates.Template_Details",
            "select Templates.Template_ID, Templates.Template_Type_Code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Ref_Template_Types Templates",
        "table_candidates": [
            "Ref_Template_Types Templates",
            "Ref_Template_Types Templates Documents",
            "Ref_Template_Types Templates Paragraphs"
        ],
        "align_scores": [
            0.9966838955879211,
            0.0001188295500469394,
            0.00017488519370090216,
            6.930525705683976e-05,
            0.00014532434579450637,
            6.55820476822555e-05,
            0.00010757776180980727,
            6.323685374809429e-05
        ],
        "align_select": "select Templates.Template_ID",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the ids corresponding to templates with the description 'Book'.",
        "gold_select": "select Templates.Template_ID",
        "select_candidates": [
            "select Templates.Template_ID",
            "select Templates.Template_ID, Ref_Template_Types.Template_Type_Description",
            "select Templates.Template_ID, Templates.Template_Type_Code",
            "select Templates.Template_ID, t0.c2"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Ref_Template_Types Templates",
        "table_candidates": [
            "Ref_Template_Types Templates",
            "Ref_Template_Types Templates Documents"
        ],
        "align_scores": [
            0.9966309666633606,
            0.00012836718815378845,
            0.00017309545364696532,
            7.089509745128453e-05,
            0.00011529582843650132,
            6.524719356093556e-05,
            0.00029928176081739366,
            7.59078684495762e-05
        ],
        "align_select": "select Templates.Template_ID",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the ids corresponding to templates with the description 'Advertisement'.",
        "gold_select": "select Templates.Template_ID",
        "select_candidates": [
            "select Templates.Template_ID",
            "select Templates.Template_ID, Ref_Template_Types.Template_Type_Description",
            "select Templates.Template_ID, Templates.Template_Details",
            "select Templates.Template_ID, Templates.Template_Type_Code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Ref_Template_Types Templates",
        "table_candidates": [
            "Ref_Template_Types Templates",
            "Ref_Template_Types Templates Documents",
            "Ref_Template_Types Templates Paragraphs"
        ],
        "align_scores": [
            0.9965710639953613,
            0.00012126821820857003,
            0.00015873411030042917,
            7.004468352533877e-05,
            0.00015057114069350064,
            6.694231706205755e-05,
            0.0001153896446339786,
            6.41397200524807e-05
        ],
        "align_select": "select Templates.Template_ID",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the ids corresponding to templates with the description 'Paper'.",
        "gold_select": "select Templates.Template_ID",
        "select_candidates": [
            "select Templates.Template_ID",
            "select Templates.Template_ID ",
            "select Templates.Template_IDs",
            "select Templates.Version_Number"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Ref_Template_Types Templates",
        "table_candidates": [
            "Ref_Template_Types Templates",
            "Ref_Template_Types Templates Documents",
            "Ref_Template_Types Templates Paragraphs"
        ],
        "align_scores": [
            0.9966238737106323,
            0.00014133828517515212,
            0.9966238737106323,
            0.00014133828517515212,
            0.9965435862541199,
            0.00012269156286492944,
            0.006311511155217886,
            7.558817742392421e-05
        ],
        "align_select": "select Templates.Template_ID",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many paragraphs for the document with name 'Customer reviews'?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Documents.Document_ID",
            "select count(*), Documents.Document_Description",
            "select count(*), Documents.Template_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents Paragraphs",
        "table_candidates": [
            "Documents Paragraphs",
            "Ref_Template_Types Documents Paragraphs",
            "Templates Documents Paragraphs"
        ],
        "align_scores": [
            0.9817814826965332,
            7.891053974162787e-05,
            0.00016884776414372027,
            6.0147023759782314e-05,
            0.0002981747093144804,
            6.197704351507127e-05,
            0.00021927159104961902,
            6.69568034936674e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many paragraphs for the document with name 'Welcome to NY'?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Documents.Document_ID",
            "select count(*), Documents.Template_ID",
            "select count(*), Documents.Document_Description"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents Paragraphs",
        "table_candidates": [
            "Documents Paragraphs",
            "Ref_Template_Types Documents Paragraphs",
            "Templates Documents Paragraphs"
        ],
        "align_scores": [
            0.9928112626075745,
            6.928048242116347e-05,
            0.00015724723925814033,
            5.954595690127462e-05,
            0.0001875578163890168,
            6.117121665738523e-05,
            0.00029843609081581235,
            6.193591980263591e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many paragraphs for the document with name 'How to write a CV'?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Documents.Document_ID",
            "select count(*), Documents.Template_ID",
            "select count(*), Documents.Document_Description"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents Paragraphs",
        "table_candidates": [
            "Documents Paragraphs",
            "Ref_Template_Types Documents Paragraphs",
            "Templates Documents Paragraphs"
        ],
        "align_scores": [
            0.8508327603340149,
            6.639398634433746e-05,
            0.0001566695427754894,
            5.609625077340752e-05,
            0.00020208567730151117,
            6.0294842114672065e-05,
            0.0002568523632362485,
            5.615984628093429e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many paragraphs for the document with name 'A history of Arts'?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Documents.Document_ID",
            "select count(*), Documents.Template_ID",
            "select count(*), Documents.Document_Description"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents Paragraphs",
        "table_candidates": [
            "Documents Paragraphs",
            "Ref_Template_Types Documents Paragraphs",
            "Templates Documents Paragraphs"
        ],
        "align_scores": [
            0.9931676983833313,
            6.902158202137798e-05,
            0.00016601014067418873,
            5.982919174130075e-05,
            0.00021209272381383926,
            6.48563145659864e-05,
            0.0002949036716017872,
            6.14522650721483e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Count the number of paragraphs in the document named 'Customer reviews'.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Documents.Document_ID",
            "select count(*), Documents.Document_Description",
            "select count(*), Documents.Template_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents Paragraphs",
        "table_candidates": [
            "Documents Paragraphs",
            "Ref_Template_Types Documents Paragraphs",
            "Templates Documents Paragraphs"
        ],
        "align_scores": [
            0.9940576553344727,
            0.00015004271699581295,
            0.0001640907721593976,
            0.00010245732119074091,
            0.0003120780165772885,
            0.0005070646875537932,
            0.000236884894547984,
            0.00012073572725057602
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Count the number of paragraphs in the document named 'Welcome to NY'.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Documents.Document_ID",
            "select count(distinct Paragraphs.Paragraph_Text)",
            "select count(*), Documents.Template_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents Paragraphs",
        "table_candidates": [
            "Documents Paragraphs",
            "Ref_Template_Types Documents Paragraphs",
            "Templates Documents Paragraphs"
        ],
        "align_scores": [
            0.9952911138534546,
            7.234852091642097e-05,
            0.00015834016085136682,
            6.129115354269743e-05,
            0.0010005778167396784,
            6.830994971096516e-05,
            0.00019624980632215738,
            6.419367855414748e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Count the number of paragraphs in the document named 'How to write a CV'.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Documents.Document_ID",
            "select count(*), Documents.Template_ID",
            "select count(*), Documents.Document_Description"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents Paragraphs",
        "table_candidates": [
            "Documents Paragraphs",
            "Ref_Template_Types Documents Paragraphs",
            "Templates Documents Paragraphs"
        ],
        "align_scores": [
            0.9905789494514465,
            6.541096809087321e-05,
            0.00015140330651775002,
            5.722042988054454e-05,
            0.00019911381241399795,
            6.393044895958155e-05,
            0.00021745481353718787,
            5.648726801155135e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Count the number of paragraphs in the document named 'A history of Arts'.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Documents.Document_ID",
            "select count(*), Documents.Template_ID",
            "select count(*), Documents.Document_Description"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents Paragraphs",
        "table_candidates": [
            "Documents Paragraphs",
            "Ref_Template_Types Documents Paragraphs",
            "Templates Documents Paragraphs"
        ],
        "align_scores": [
            0.9927653670310974,
            6.514906999655068e-05,
            0.00015938201977405697,
            6.382269930327311e-05,
            0.0002313027944182977,
            6.926561763975769e-05,
            0.00026900219381786883,
            6.0404647229006514e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show all paragraph ids and texts for the document with name 'Palm reading'.",
        "gold_select": "select Paragraphs.Paragraph_ID, Paragraphs.Paragraph_Text",
        "select_candidates": [
            "select Paragraphs.Paragraph_ID, Paragraphs.Paragraph_Text",
            "select Documents.Document_ID, Paragraphs.Paragraph_Text",
            "select Documents.Document_ID, Documents.Document_Name",
            "select Paragraphs.Document_ID, Paragraphs.Paragraph_Text"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents Paragraphs",
        "table_candidates": [
            "Documents Paragraphs",
            "Ref_Template_Types Documents Paragraphs",
            "Templates Documents Paragraphs"
        ],
        "align_scores": [
            0.9957354068756104,
            0.00012092790711903945,
            0.0004773159744217992,
            8.980814163805917e-05,
            0.00033479463309049606,
            8.105006418190897e-05,
            0.0007429211982525885,
            8.816173067316413e-05
        ],
        "align_select": "select Paragraphs.Paragraph_ID, Paragraphs.Paragraph_Text",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show all paragraph ids and texts for the document with name 'Summer Show'.",
        "gold_select": "select Paragraphs.Paragraph_ID, Paragraphs.Paragraph_Text",
        "select_candidates": [
            "select Paragraphs.Paragraph_ID, Paragraphs.Paragraph_Text",
            "select Documents.Document_ID, Paragraphs.Paragraph_Text",
            "select Documents.Document_ID, Documents.Document_Name",
            "select Paragraphs.Document_ID, Paragraphs.Paragraph_Text"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents Paragraphs",
        "table_candidates": [
            "Documents Paragraphs",
            "Ref_Template_Types Documents Paragraphs",
            "Templates Documents Paragraphs"
        ],
        "align_scores": [
            0.9962175488471985,
            0.00012011104263365269,
            0.0005396524793468416,
            8.663065091241151e-05,
            0.00028648017905652523,
            9.3499940703623e-05,
            0.0008094566292129457,
            8.451587200397626e-05
        ],
        "align_select": "select Paragraphs.Paragraph_ID, Paragraphs.Paragraph_Text",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show all paragraph ids and texts for the document with name 'Customer reviews'.",
        "gold_select": "select Paragraphs.Paragraph_ID, Paragraphs.Paragraph_Text",
        "select_candidates": [
            "select Paragraphs.Paragraph_ID, Paragraphs.Paragraph_Text",
            "select Documents.Document_ID, Paragraphs.Paragraph_Text",
            "select Documents.Document_ID, Documents.Document_Name",
            "select Paragraphs.Document_ID, Paragraphs.Paragraph_Text"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents Paragraphs",
        "table_candidates": [
            "Documents Paragraphs",
            "Ref_Template_Types Documents Paragraphs",
            "Templates Documents Paragraphs"
        ],
        "align_scores": [
            0.9958934783935547,
            0.00012930874072480947,
            0.0005367558333091438,
            8.732127753319219e-05,
            0.00030245885136537254,
            8.709251414984465e-05,
            0.0008581372676417232,
            9.354881331091747e-05
        ],
        "align_select": "select Paragraphs.Paragraph_ID, Paragraphs.Paragraph_Text",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show all paragraph ids and texts for the document with name 'About Korea'.",
        "gold_select": "select Paragraphs.Paragraph_ID, Paragraphs.Paragraph_Text",
        "select_candidates": [
            "select Paragraphs.Paragraph_ID, Paragraphs.Paragraph_Text",
            "select Documents.Document_ID, Paragraphs.Paragraph_Text",
            "select Documents.Document_ID, Documents.Document_Name",
            "select Paragraphs.Document_ID, Paragraphs.Paragraph_Text"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents Paragraphs",
        "table_candidates": [
            "Documents Paragraphs",
            "Ref_Template_Types Documents Paragraphs",
            "Templates Documents Paragraphs"
        ],
        "align_scores": [
            0.9956943988800049,
            0.0001302795426454395,
            0.000540463428478688,
            9.40457612159662e-05,
            0.0002713974972721189,
            9.286992280976847e-05,
            0.0008173488895408809,
            9.366190352011472e-05
        ],
        "align_select": "select Paragraphs.Paragraph_ID, Paragraphs.Paragraph_Text",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show all paragraph ids and texts for the document with name 'How Google people work'.",
        "gold_select": "select Paragraphs.Paragraph_ID, Paragraphs.Paragraph_Text",
        "select_candidates": [
            "select Paragraphs.Paragraph_ID, Paragraphs.Paragraph_Text",
            "select Documents.Document_ID, Paragraphs.Paragraph_Text",
            "select Documents.Document_ID, Documents.Document_Name",
            "select Paragraphs.Document_ID, Paragraphs.Paragraph_Text"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents Paragraphs",
        "table_candidates": [
            "Documents Paragraphs",
            "Ref_Template_Types Documents Paragraphs",
            "Templates Documents Paragraphs"
        ],
        "align_scores": [
            0.9952636957168579,
            0.00011847823043353856,
            0.0005213054828345776,
            8.380738290725276e-05,
            0.0003178422339260578,
            9.550658432999626e-05,
            0.000732985557988286,
            8.845993579598144e-05
        ],
        "align_select": "select Paragraphs.Paragraph_ID, Paragraphs.Paragraph_Text",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the ids and texts of paragraphs in the document titled 'Palm reading'?",
        "gold_select": "select Paragraphs.Paragraph_ID, Paragraphs.Paragraph_Text",
        "select_candidates": [
            "select Paragraphs.Paragraph_ID, Paragraphs.Paragraph_Text",
            "select Documents.Document_ID, Paragraphs.Paragraph_Text",
            "select param_Paragraphs.Paragraph_ID, Paragraphs.Paragraph_Text",
            "select Documents.Document_ID, Documents.Document_Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents Paragraphs",
        "table_candidates": [
            "Documents Paragraphs"
        ],
        "align_scores": [
            0.9951517581939697,
            0.00013878944446332753,
            0.000457386311609298,
            0.0001120451488532126,
            0.0004870623233728111,
            8.288354001706466e-05,
            0.0006365099106915295,
            7.799283775966614e-05
        ],
        "align_select": "select Paragraphs.Paragraph_ID, Paragraphs.Paragraph_Text",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the ids and texts of paragraphs in the document titled 'Summer Show'?",
        "gold_select": "select Paragraphs.Paragraph_ID, Paragraphs.Paragraph_Text",
        "select_candidates": [
            "select Paragraphs.Paragraph_ID, Paragraphs.Paragraph_Text",
            "select Documents.Document_ID, Paragraphs.Paragraph_Text",
            "select param_Paragraphs.Paragraph_ID, Paragraphs.Paragraph_Text",
            "select Paragraphs.Document_ID, Paragraphs.Paragraph_Text"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents Paragraphs",
        "table_candidates": [
            "Documents Paragraphs"
        ],
        "align_scores": [
            0.9957693815231323,
            0.0001457020262023434,
            0.0005956335226073861,
            0.00010681450658012182,
            0.0005035733920522034,
            7.96529566287063e-05,
            0.001066448981873691,
            9.287249849876389e-05
        ],
        "align_select": "select Paragraphs.Paragraph_ID, Paragraphs.Paragraph_Text",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the ids and texts of paragraphs in the document titled 'Customer reviews'?",
        "gold_select": "select Paragraphs.Paragraph_ID, Paragraphs.Paragraph_Text",
        "select_candidates": [
            "select Paragraphs.Paragraph_ID, Paragraphs.Paragraph_Text",
            "select Documents.Document_ID, Paragraphs.Paragraph_Text",
            "select param_Paragraphs.Paragraph_ID, Paragraphs.Paragraph_Text",
            "select Documents.Document_ID, Documents.Document_Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents Paragraphs",
        "table_candidates": [
            "Documents Paragraphs"
        ],
        "align_scores": [
            0.9952234625816345,
            0.00012750006862916052,
            0.0005402296665124595,
            0.00010057090548798442,
            0.000526550633367151,
            8.014974446268752e-05,
            0.00043974898289889097,
            7.968600402818993e-05
        ],
        "align_select": "select Paragraphs.Paragraph_ID, Paragraphs.Paragraph_Text",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the ids and texts of paragraphs in the document titled 'About Korea'?",
        "gold_select": "select Paragraphs.Paragraph_ID, Paragraphs.Paragraph_Text",
        "select_candidates": [
            "select Paragraphs.Paragraph_ID, Paragraphs.Paragraph_Text",
            "select Documents.Document_ID, Paragraphs.Paragraph_Text",
            "select Documents.Document_ID, Documents.Document_Name",
            "select Paragraphs.Paragraph_ID, Paragraphs.Paragraph_Text, Paragraphs.Document_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents Paragraphs",
        "table_candidates": [
            "Documents Paragraphs"
        ],
        "align_scores": [
            0.9951239228248596,
            0.00014467698929365724,
            0.0005669683450832963,
            0.00011461478425189853,
            0.0006773523637093604,
            7.36203946871683e-05,
            0.00016449856047984213,
            6.448923522839323e-05
        ],
        "align_select": "select Paragraphs.Paragraph_ID, Paragraphs.Paragraph_Text",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the ids and texts of paragraphs in the document titled 'How Google people work'?",
        "gold_select": "select Paragraphs.Paragraph_ID, Paragraphs.Paragraph_Text",
        "select_candidates": [
            "select Paragraphs.Paragraph_ID, Paragraphs.Paragraph_Text",
            "select Documents.Document_ID, Paragraphs.Paragraph_Text",
            "select param_Paragraphs.Paragraph_ID, Paragraphs.Paragraph_Text",
            "select Paragraphs.Paragraph_ID, Paragraphs.Paragraph_Text, Paragraphs.Other_Details"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents Paragraphs",
        "table_candidates": [
            "Documents Paragraphs"
        ],
        "align_scores": [
            0.9939756989479065,
            0.00011256776633672416,
            0.0005221603787504137,
            9.834893717197701e-05,
            0.0009729114244692028,
            9.460774890612811e-05,
            0.0002718097239267081,
            5.987644908600487e-05
        ],
        "align_select": "select Paragraphs.Paragraph_ID, Paragraphs.Paragraph_Text",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show all paragraph texts for the document \"Palm reading\".",
        "gold_select": "select Paragraphs.Paragraph_Text",
        "select_candidates": [
            "select Paragraphs.Paragraph_Text",
            "select Paragraphs.Document_ID, Paragraphs.Paragraph_Text",
            "select Paragraphs.Paragraph_ID, Paragraphs.Paragraph_Text",
            "select Paragraphs.Paragraph_Text, Documents.Document_Description"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents Paragraphs",
        "table_candidates": [
            "Documents Paragraphs",
            "Ref_Template_Types Documents Paragraphs",
            "Templates Documents Paragraphs"
        ],
        "align_scores": [
            0.9960786700248718,
            8.936015365179628e-05,
            0.00018837077368516475,
            6.918356666574255e-05,
            0.00014292461855802685,
            6.38832789263688e-05,
            0.0001822645717766136,
            6.368420145008713e-05
        ],
        "align_select": "select Paragraphs.Paragraph_Text",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show all paragraph texts for the document \"Summer Show\".",
        "gold_select": "select Paragraphs.Paragraph_Text",
        "select_candidates": [
            "select Paragraphs.Paragraph_Text",
            "select Paragraphs.Document_ID, Paragraphs.Paragraph_Text",
            "select Paragraphs.Paragraph_Text, Documents.Document_Description",
            "select Paragraphs.Paragraph_Text, Paragraphs.Other_Details"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents Paragraphs",
        "table_candidates": [
            "Documents Paragraphs",
            "Ref_Template_Types Documents Paragraphs",
            "Templates Documents Paragraphs"
        ],
        "align_scores": [
            0.9965196847915649,
            9.379731636727229e-05,
            0.0001732501550577581,
            6.820118869654834e-05,
            0.000183746189577505,
            6.326303264359012e-05,
            0.00019238960521761328,
            6.172696157591417e-05
        ],
        "align_select": "select Paragraphs.Paragraph_Text",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show all paragraph texts for the document \"About Korea\".",
        "gold_select": "select Paragraphs.Paragraph_Text",
        "select_candidates": [
            "select Paragraphs.Paragraph_Text",
            "select Paragraphs.Document_ID, Paragraphs.Paragraph_Text",
            "select Paragraphs.Paragraph_ID, Paragraphs.Paragraph_Text",
            "select Paragraphs.Paragraph_Text, Documents.Document_Description"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents Paragraphs",
        "table_candidates": [
            "Documents Paragraphs",
            "Ref_Template_Types Documents Paragraphs",
            "Templates Documents Paragraphs"
        ],
        "align_scores": [
            0.996209979057312,
            8.815727778710425e-05,
            0.00017017895879689604,
            6.80173106957227e-05,
            0.00014635255502071232,
            6.520737952087075e-05,
            0.00017966394079849124,
            6.342722190311179e-05
        ],
        "align_select": "select Paragraphs.Paragraph_Text",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show all paragraph texts for the document \"How Google people work\".",
        "gold_select": "select Paragraphs.Paragraph_Text",
        "select_candidates": [
            "select Paragraphs.Paragraph_Text",
            "select Paragraphs.Document_ID, Paragraphs.Paragraph_Text",
            "select Paragraphs.Paragraph_ID, Paragraphs.Paragraph_Text",
            "select Paragraphs.Paragraph_Text, Documents.Document_Description"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents Paragraphs",
        "table_candidates": [
            "Documents Paragraphs",
            "Ref_Template_Types Documents Paragraphs",
            "Templates Documents Paragraphs"
        ],
        "align_scores": [
            0.9952040910720825,
            8.186661580111831e-05,
            0.0002546460891608149,
            7.210751937236637e-05,
            0.00016808892542030662,
            6.694001785945147e-05,
            0.0002462988195475191,
            6.358844257192686e-05
        ],
        "align_select": "select Paragraphs.Paragraph_Text",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show all paragraph texts for the document \"Welcome to NY\".",
        "gold_select": "select Paragraphs.Paragraph_Text",
        "select_candidates": [
            "select Paragraphs.Paragraph_Text",
            "select Paragraphs.Document_ID, Paragraphs.Paragraph_Text",
            "select Paragraphs.Paragraph_Text, Documents.Document_Description",
            "select Paragraphs.Paragraph_Text, Paragraphs.Other_Details"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents Paragraphs",
        "table_candidates": [
            "Documents Paragraphs",
            "Ref_Template_Types Documents Paragraphs",
            "Templates Documents Paragraphs"
        ],
        "align_scores": [
            0.9960554838180542,
            0.00010379638843005523,
            0.0002049861941486597,
            6.793888314859942e-05,
            0.00017884249973576516,
            6.273807230172679e-05,
            0.00018659279157873243,
            6.381807179423049e-05
        ],
        "align_select": "select Paragraphs.Paragraph_Text",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the paragraph texts for the document with the name 'Palm reading'?",
        "gold_select": "select Paragraphs.Paragraph_Text",
        "select_candidates": [
            "select Paragraphs.Paragraph_Text",
            "select Paragraphs.Document_ID, Paragraphs.Paragraph_Text",
            "select Paragraphs.Paragraph_Text, Documents.Document_Description",
            "select Paragraphs.Paragraph_Text, Paragraphs.Document_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents Paragraphs",
        "table_candidates": [
            "Documents Paragraphs",
            "Ref_Template_Types Documents Paragraphs",
            "Templates Documents Paragraphs"
        ],
        "align_scores": [
            0.9950291514396667,
            0.00010015087900683284,
            0.0001669423800194636,
            7.173195626819506e-05,
            0.00023232483363244683,
            6.48905333946459e-05,
            0.00013111454609315842,
            6.435893737943843e-05
        ],
        "align_select": "select Paragraphs.Paragraph_Text",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the paragraph texts for the document with the name 'Summer Show'?",
        "gold_select": "select Paragraphs.Paragraph_Text",
        "select_candidates": [
            "select Paragraphs.Paragraph_Text",
            "select Paragraphs.Document_ID, Paragraphs.Paragraph_Text",
            "select Paragraphs.Paragraph_Text, Paragraphs.Other_Details",
            "select Paragraphs.Paragraph_Text, Paragraphs.Document_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents Paragraphs",
        "table_candidates": [
            "Documents Paragraphs",
            "Ref_Template_Types Documents Paragraphs",
            "Templates Documents Paragraphs"
        ],
        "align_scores": [
            0.9960078001022339,
            0.00011004937550751492,
            0.00016373863036278635,
            7.077142072375864e-05,
            0.00018549227388575673,
            6.563822535099462e-05,
            0.00013469805708155036,
            6.437120464397594e-05
        ],
        "align_select": "select Paragraphs.Paragraph_Text",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the paragraph texts for the document with the name 'About Korea'?",
        "gold_select": "select Paragraphs.Paragraph_Text",
        "select_candidates": [
            "select Paragraphs.Paragraph_Text",
            "select Paragraphs.Paragraph_Text, Documents.Document_Description",
            "select Paragraphs.Document_ID, Paragraphs.Paragraph_Text",
            "select Paragraphs.Paragraph_ID, Paragraphs.Paragraph_Text"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents Paragraphs",
        "table_candidates": [
            "Documents Paragraphs",
            "Ref_Template_Types Documents Paragraphs"
        ],
        "align_scores": [
            0.9955417513847351,
            0.00010651058983057737,
            0.00022770499344915152,
            6.461913289967924e-05,
            0.00016170729941222817,
            7.177335646701977e-05,
            0.00015225369133986533,
            6.8684559664689e-05
        ],
        "align_select": "select Paragraphs.Paragraph_Text",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the paragraph texts for the document with the name 'How Google people work'?",
        "gold_select": "select Paragraphs.Paragraph_Text",
        "select_candidates": [
            "select Paragraphs.Paragraph_Text",
            "select Paragraphs.Paragraph_Text, Paragraphs.Document_ID",
            "select Paragraphs.Document_ID, Paragraphs.Paragraph_Text",
            "select Paragraphs.Paragraph_Text, Paragraphs.Other_Details"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents Paragraphs",
        "table_candidates": [
            "Documents Paragraphs",
            "Ref_Template_Types Documents Paragraphs"
        ],
        "align_scores": [
            0.9947566986083984,
            8.85654371813871e-05,
            0.00013454517466016114,
            6.251435843296349e-05,
            0.00017550210759509355,
            6.927704816916957e-05,
            0.00020071039034519345,
            6.289453449426219e-05
        ],
        "align_select": "select Paragraphs.Paragraph_Text",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the paragraph texts for the document with the name 'Welcome to NY'?",
        "gold_select": "select Paragraphs.Paragraph_Text",
        "select_candidates": [
            "select Paragraphs.Paragraph_Text",
            "select Paragraphs.Document_ID, Paragraphs.Paragraph_Text",
            "select Paragraphs.Paragraph_Text, Paragraphs.Document_ID",
            "select Paragraphs.Paragraph_Text, Paragraphs.Other_Details"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents Paragraphs",
        "table_candidates": [
            "Documents Paragraphs",
            "Ref_Template_Types Documents Paragraphs",
            "Templates Documents Paragraphs"
        ],
        "align_scores": [
            0.9954997897148132,
            0.0001240136189153418,
            0.00017347035463899374,
            7.378197187790647e-05,
            0.0001319706061622128,
            6.439515709644184e-05,
            0.0001912200532387942,
            6.686358392471448e-05
        ],
        "align_select": "select Paragraphs.Paragraph_Text",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the opening year and staff number of the museum named RiverPark Museum?",
        "gold_select": "select museum.Num_of_Staff, museum.Open_Year",
        "select_candidates": [
            "select museum.Open_Year, museum.Num_of_Staff",
            "select museum.Museum_ID, museum.Open_Year, museum.Num_of_Staff",
            "select museum.Name, museum.Num_of_Staff",
            "select museum.Num_of_Staff, museum.Open_Year"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "museum",
        "table_candidates": [
            "museum"
        ],
        "align_scores": [
            0.9955497980117798,
            8.584186434745789e-05,
            0.00020079115347471088,
            6.63429091218859e-05,
            0.001763825654052198,
            0.00011092128261225298,
            0.9956627488136292,
            8.623231406090781e-05
        ],
        "align_select": "select museum.Open_Year, museum.Num_of_Staff",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the opening year and staff number of the museum named Capital Plaza Museum?",
        "gold_select": "select museum.Num_of_Staff, museum.Open_Year",
        "select_candidates": [
            "select museum.Open_Year, museum.Num_of_Staff",
            "select museum.Museum_ID, museum.Open_Year, museum.Num_of_Staff",
            "select museum.Name, museum.Num_of_Staff",
            "select museum.Num_of_Staff, museum.Open_Year"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "museum",
        "table_candidates": [
            "museum"
        ],
        "align_scores": [
            0.9955266118049622,
            7.953644671943039e-05,
            0.0001893977023428306,
            6.589737313333899e-05,
            0.0016191501636058092,
            0.00011902902042493224,
            0.9956186413764954,
            8.097991667455062e-05
        ],
        "align_select": "select museum.Open_Year, museum.Num_of_Staff",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the opening year and staff number of the museum named ZirMed Gateway Museum?",
        "gold_select": "select museum.Num_of_Staff, museum.Open_Year",
        "select_candidates": [
            "select museum.Open_Year, museum.Num_of_Staff",
            "select museum.Museum_ID, museum.Open_Year, museum.Num_of_Staff",
            "select museum.Name, museum.Num_of_Staff",
            "select museum.Num_of_Staff, museum.Open_Year"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "museum",
        "table_candidates": [
            "museum"
        ],
        "align_scores": [
            0.9941034913063049,
            8.491729386150837e-05,
            0.00020734069403260946,
            6.787580787204206e-05,
            0.001574355293996632,
            0.00011247429210925475,
            0.9940251708030701,
            8.334140875376761e-05
        ],
        "align_select": "select museum.Open_Year, museum.Num_of_Staff",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the opening year and staff number of the museum named Willow Grande Museum?",
        "gold_select": "select museum.Num_of_Staff, museum.Open_Year",
        "select_candidates": [
            "select museum.Open_Year, museum.Num_of_Staff",
            "select museum.Museum_ID, museum.Open_Year, museum.Num_of_Staff",
            "select museum.Name, museum.Num_of_Staff",
            "select museum.Num_of_Staff, museum.Open_Year"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "museum",
        "table_candidates": [
            "museum"
        ],
        "align_scores": [
            0.995435893535614,
            8.54769823490642e-05,
            0.00020366102398838848,
            6.66310079395771e-05,
            0.001621825504116714,
            0.0001135912534664385,
            0.9954896569252014,
            8.799334318609908e-05
        ],
        "align_select": "select museum.Open_Year, museum.Num_of_Staff",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the opening year and staff number of the museum named Central City District Residential Museum?",
        "gold_select": "select museum.Num_of_Staff, museum.Open_Year",
        "select_candidates": [
            "select museum.Open_Year, museum.Num_of_Staff",
            "select museum.Museum_ID, museum.Open_Year, museum.Num_of_Staff",
            "select museum.Name, museum.Num_of_Staff",
            "select museum.Num_of_Staff, museum.Open_Year"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "museum",
        "table_candidates": [
            "museum"
        ],
        "align_scores": [
            0.9953383207321167,
            8.414997137151659e-05,
            0.00020644550386350602,
            6.723488331772387e-05,
            0.0015510943485423923,
            0.00011998740956187248,
            0.9954038858413696,
            8.436971984338015e-05
        ],
        "align_select": "select museum.Open_Year, museum.Num_of_Staff",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List the first name and birth date of all players from the country with code EST.",
        "gold_select": "select players.first_name, players.birth_date",
        "select_candidates": [
            "select players.first_name, players.birth_date",
            "select distinct players.first_name, players.birth_date",
            "select players.first_name, players.last_name",
            "select players.first_name, players.hand"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "players",
        "table_candidates": [
            "players"
        ],
        "align_scores": [
            0.9737185835838318,
            0.00015404931036755443,
            0.013541068881750107,
            9.32269831537269e-05,
            0.00027356852660886943,
            7.40745454095304e-05,
            0.00051887147128582,
            7.523579552071169e-05
        ],
        "align_select": "select players.first_name, players.birth_date",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List the first name and birth date of all players from the country with code ECA.",
        "gold_select": "select players.first_name, players.birth_date",
        "select_candidates": [
            "select players.first_name, players.birth_date",
            "select distinct players.first_name, players.birth_date",
            "select players.first_name, players.last_name",
            "select players.first_name, players.hand"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "players",
        "table_candidates": [
            "players"
        ],
        "align_scores": [
            0.9914994835853577,
            0.00019789890211541206,
            0.011342968791723251,
            0.00010591788304736838,
            0.00026346580125391483,
            8.93502656253986e-05,
            0.0005672229453921318,
            8.166809129761532e-05
        ],
        "align_select": "select players.first_name, players.birth_date",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List the first name and birth date of all players from the country with code URS.",
        "gold_select": "select players.first_name, players.birth_date",
        "select_candidates": [
            "select players.first_name, players.birth_date",
            "select distinct players.first_name, players.birth_date",
            "select players.first_name, players.last_name",
            "select players.first_name, players.hand"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "players",
        "table_candidates": [
            "players"
        ],
        "align_scores": [
            0.9872812628746033,
            0.00015057559357956052,
            0.012913841754198074,
            0.00010298322013113648,
            0.0002852330799214542,
            7.884984370321035e-05,
            0.0006935674464330077,
            8.082299609668553e-05
        ],
        "align_select": "select players.first_name, players.birth_date",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List the first name and birth date of all players from the country with code CGO.",
        "gold_select": "select players.first_name, players.birth_date",
        "select_candidates": [
            "select players.first_name, players.birth_date",
            "select distinct players.first_name, players.birth_date",
            "select players.first_name, players.last_name",
            "select players.first_name, players.hand"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "players",
        "table_candidates": [
            "players"
        ],
        "align_scores": [
            0.9788514375686646,
            0.00015392435307148844,
            0.010572228580713272,
            9.149382094619796e-05,
            0.00022795438417233527,
            8.988472836790606e-05,
            0.00039480775012634695,
            7.825164357200265e-05
        ],
        "align_select": "select players.first_name, players.birth_date",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List the first name and birth date of all players from the country with code REU.",
        "gold_select": "select players.first_name, players.birth_date",
        "select_candidates": [
            "select players.first_name, players.birth_date",
            "select distinct players.first_name, players.birth_date",
            "select players.first_name, players.last_name",
            "select players.first_name, players.hand"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "players",
        "table_candidates": [
            "players"
        ],
        "align_scores": [
            0.9917355179786682,
            0.00016305281314998865,
            0.011591236107051373,
            0.00010982335516018793,
            0.0002771607250906527,
            8.104898006422445e-05,
            0.0006619947962462902,
            7.791901589371264e-05
        ],
        "align_select": "select players.first_name, players.birth_date",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the first names and birth dates of players from the EST?",
        "gold_select": "select players.first_name, players.birth_date",
        "select_candidates": [
            "select players.first_name, players.birth_date",
            "select players.first_name, players.last_name, players.birth_date",
            "select players.first_name, players.hand, players.birth_date",
            "select players.first_name, players.last_name, players.hand, players.birth_date"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "players",
        "table_candidates": [
            "players"
        ],
        "align_scores": [
            0.9925393462181091,
            0.00012284747208468616,
            0.0003115260333288461,
            6.101694089011289e-05,
            0.00027603365015238523,
            7.606497092638165e-05,
            0.00017722102347761393,
            6.667359411949292e-05
        ],
        "align_select": "select players.first_name, players.birth_date",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the first names and birth dates of players from the ECA?",
        "gold_select": "select players.first_name, players.birth_date",
        "select_candidates": [
            "select players.first_name, players.birth_date",
            "select players.first_name, players.last_name, players.birth_date",
            "select players.first_name, players.hand, players.birth_date",
            "select distinct players.first_name, players.birth_date"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "players",
        "table_candidates": [
            "players"
        ],
        "align_scores": [
            0.9902722239494324,
            0.000145309793879278,
            0.0003141686029266566,
            6.124452193034813e-05,
            0.0003064647607970983,
            7.704187009949237e-05,
            0.011279945261776447,
            7.672432548133656e-05
        ],
        "align_select": "select players.first_name, players.birth_date",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the first names and birth dates of players from the URS?",
        "gold_select": "select players.first_name, players.birth_date",
        "select_candidates": [
            "select players.first_name, players.birth_date",
            "select players.first_name, players.last_name, players.birth_date",
            "select players.first_name, players.hand, players.birth_date",
            "select players.first_name, players.last_name, players.hand, players.birth_date"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "players",
        "table_candidates": [
            "players"
        ],
        "align_scores": [
            0.9891188144683838,
            0.00012536405120044947,
            0.0002872388868127018,
            6.056251368136145e-05,
            0.00027662061620503664,
            7.529701542807743e-05,
            0.00018574605928733945,
            6.783504068152979e-05
        ],
        "align_select": "select players.first_name, players.birth_date",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the first names and birth dates of players from the CGO?",
        "gold_select": "select players.first_name, players.birth_date",
        "select_candidates": [
            "select players.first_name, players.birth_date",
            "select players.first_name, players.last_name, players.birth_date",
            "select players.first_name, players.hand, players.birth_date",
            "select players.first_name, players.last_name, players.hand, players.birth_date"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "players",
        "table_candidates": [
            "players"
        ],
        "align_scores": [
            0.9916788935661316,
            0.000123738864203915,
            0.0002611039381008595,
            5.972726648906246e-05,
            0.00023519682872574776,
            7.337453280342743e-05,
            0.00017301375919487327,
            6.449495413107798e-05
        ],
        "align_select": "select players.first_name, players.birth_date",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the first names and birth dates of players from the REU?",
        "gold_select": "select players.first_name, players.birth_date",
        "select_candidates": [
            "select players.first_name, players.birth_date",
            "select players.first_name, players.last_name, players.birth_date",
            "select players.first_name, players.hand, players.birth_date",
            "select players.first_name, players.last_name, players.hand, players.birth_date"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "players",
        "table_candidates": [
            "players"
        ],
        "align_scores": [
            0.9894893765449524,
            0.00012695026816800237,
            0.00026750395772978663,
            6.18196718278341e-05,
            0.00027833596686832607,
            7.833787822164595e-05,
            0.00018131711112800986,
            6.901684537297115e-05
        ],
        "align_select": "select players.first_name, players.birth_date",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the country code and first name of the players who won in both tourney WTA Championships and Cincinnati?",
        "gold_select": "select players.country_code, players.first_name",
        "select_candidates": [
            "select players.country_code, players.first_name",
            "select players.first_name, players.country_code",
            "select t0-c5, players.first_name",
            "select t 0.c5, players.first_name"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "players matches",
        "table_candidates": [
            "players matches"
        ],
        "align_scores": [
            0.9804674386978149,
            0.004728690255433321,
            0.9847089052200317,
            0.000656701682601124,
            0.00027839967515319586,
            0.00015667312254663557,
            0.0004552803002297878,
            0.0001671121863182634
        ],
        "align_select": "select players.country_code, players.first_name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the country code and first name of the players who won in both tourney WTA Championships and Birmingham?",
        "gold_select": "select players.country_code, players.first_name",
        "select_candidates": [
            "select players.country_code, players.first_name",
            "select players.first_name, players.country_code",
            "select t0-c5, players.first_name",
            "select t 0.c5, players.first_name"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "players matches",
        "table_candidates": [
            "players matches"
        ],
        "align_scores": [
            0.980409562587738,
            0.002802666975185275,
            0.9846612811088562,
            0.0005350849241949618,
            0.00028674089116975665,
            0.00015043193707242608,
            0.00043511216063052416,
            0.00015789433382451534
        ],
        "align_select": "select players.country_code, players.first_name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the country code and first name of the players who won in both tourney WTA Championships and Charleston?",
        "gold_select": "select players.country_code, players.first_name",
        "select_candidates": [
            "select players.country_code, players.first_name",
            "select players.first_name, players.country_code",
            "select t0-c5, players.first_name",
            "select t 0.c5, players.first_name"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "players matches",
        "table_candidates": [
            "players matches"
        ],
        "align_scores": [
            0.9639996290206909,
            0.006632907781749964,
            0.9759609699249268,
            0.0009119309252128005,
            0.0002843050751835108,
            0.0001754032273311168,
            0.00043830854701809585,
            0.00018358667148277164
        ],
        "align_select": "select players.country_code, players.first_name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the country code and first name of the players who won in both tourney WTA Championships and Wuhan?",
        "gold_select": "select players.country_code, players.first_name",
        "select_candidates": [
            "select players.country_code, players.first_name",
            "select players.first_name, players.country_code",
            "select t0-c5, players.first_name",
            "select t 0.c5, players.first_name"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "players matches",
        "table_candidates": [
            "players matches"
        ],
        "align_scores": [
            0.9521527886390686,
            0.004422640427947044,
            0.9693753719329834,
            0.0005822370294481516,
            0.00027561813476495445,
            0.0001332376996288076,
            0.00047096735215745866,
            0.00016154057811945677
        ],
        "align_select": "select players.country_code, players.first_name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the country code and first name of the players who won in both tourney WTA Championships and Monterrey?",
        "gold_select": "select players.country_code, players.first_name",
        "select_candidates": [
            "select players.country_code, players.first_name",
            "select players.first_name, players.country_code",
            "select t0-c5, players.first_name",
            "select t 0.c5, players.first_name"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "players matches",
        "table_candidates": [
            "players matches"
        ],
        "align_scores": [
            0.9843438863754272,
            0.0011309782275930047,
            0.9862964153289795,
            0.00037079036701470613,
            0.00029224588070064783,
            0.00013305577158462256,
            0.0004604952991940081,
            0.000153004948515445
        ],
        "align_select": "select players.country_code, players.first_name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the country code and first name of the players who won in both tourney Cincinnati and Australian Open?",
        "gold_select": "select players.country_code, players.first_name",
        "select_candidates": [
            "select players.country_code, players.first_name",
            "select players.first_name, players.country_code",
            "select players.player_id, players.first_name",
            "select t 0.c5, players.first_name"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "players matches",
        "table_candidates": [
            "players matches"
        ],
        "align_scores": [
            0.9799915552139282,
            0.0012395083904266357,
            0.9841710925102234,
            0.00047154465573839843,
            0.00043432111851871014,
            0.00014723943604622036,
            0.00046253323671408,
            0.0001504698011558503
        ],
        "align_select": "select players.country_code, players.first_name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the country code and first name of the players who won in both tourney Birmingham and Australian Open?",
        "gold_select": "select players.country_code, players.first_name",
        "select_candidates": [
            "select players.country_code, players.first_name",
            "select players.first_name, players.country_code",
            "select players.player_id, players.first_name",
            "select t 0.c5, players.first_name"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "players matches",
        "table_candidates": [
            "players matches"
        ],
        "align_scores": [
            0.9837632179260254,
            0.0032081007957458496,
            0.9861721396446228,
            0.0008950218325480819,
            0.000423593504820019,
            0.000148614271893166,
            0.00045951525680720806,
            0.00015765498392283916
        ],
        "align_select": "select players.country_code, players.first_name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the country code and first name of the players who won in both tourney Australian Open and Australian Open?",
        "gold_select": "select players.country_code, players.first_name",
        "select_candidates": [
            "select players.country_code, players.first_name",
            "select players.first_name, players.country_code",
            "select players.first_name, players.last_name",
            "select t 0.c5, players.first_name"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "players matches",
        "table_candidates": [
            "players matches"
        ],
        "align_scores": [
            0.9156796336174011,
            0.0013375850394368172,
            0.9375545382499695,
            0.0005139163695275784,
            0.0002808662538882345,
            0.00010265751916449517,
            0.000500114110764116,
            0.00015010210336185992
        ],
        "align_select": "select players.country_code, players.first_name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the country code and first name of the players who won in both tourney Monterrey and Australian Open?",
        "gold_select": "select players.country_code, players.first_name",
        "select_candidates": [
            "select players.country_code, players.first_name",
            "select players.first_name, players.country_code",
            "select players.player_id, players.first_name",
            "select t 0.c5, players.first_name"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "players matches",
        "table_candidates": [
            "players matches"
        ],
        "align_scores": [
            0.9886958599090576,
            0.0010230214102193713,
            0.9894012808799744,
            0.0004541392845567316,
            0.0003717228537425399,
            0.0001282962184632197,
            0.0004688392800744623,
            0.00013530567230191082
        ],
        "align_select": "select players.country_code, players.first_name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the country code and first name of the players who won in both tourney Rabat and Australian Open?",
        "gold_select": "select players.country_code, players.first_name",
        "select_candidates": [
            "select players.country_code, players.first_name",
            "select players.first_name, players.country_code",
            "select players.player_id, players.first_name",
            "select t 0.c5, players.first_name"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "players matches",
        "table_candidates": [
            "players matches"
        ],
        "align_scores": [
            0.9863929152488708,
            0.00164041668176651,
            0.9877055287361145,
            0.000532560225110501,
            0.00037743168650195,
            0.00013599639351014048,
            0.00047553711920045316,
            0.00014828772691544145
        ],
        "align_select": "select players.country_code, players.first_name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the first names and country codes for players who won both the WTA Championships and the Cincinnati?",
        "gold_select": "select players.country_code, players.first_name",
        "select_candidates": [
            "select players.first_name, players.country_code",
            "select players.player_id, players.first_name, players.country_code",
            "select players.first_name, players.country_code, players.player_id",
            "select players.first_name, players.country_code, players.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "players matches",
        "table_candidates": [
            "players matches"
        ],
        "align_scores": [
            0.9878070950508118,
            0.0016222286503762007,
            0.00020197108096908778,
            0.00012880662688985467,
            0.0001388725795550272,
            9.477463026996702e-05,
            0.00024320941884070635,
            0.00021731639571953565
        ],
        "align_select": "select players.first_name, players.country_code",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the first names and country codes for players who won both the WTA Championships and the Birmingham?",
        "gold_select": "select players.country_code, players.first_name",
        "select_candidates": [
            "select players.first_name, players.country_code",
            "select players.player_id, players.first_name, players.country_code",
            "select players.first_name, players.country_code, players.player_id",
            "select players.first_name, players.country_code, players.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "players matches",
        "table_candidates": [
            "players matches"
        ],
        "align_scores": [
            0.9861741065979004,
            0.001549671171233058,
            0.00021312333410605788,
            0.00013146481069270521,
            0.00014194782124832273,
            9.57595621002838e-05,
            0.000263309630099684,
            0.00023511855397373438
        ],
        "align_select": "select players.first_name, players.country_code",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the first names and country codes for players who won both the WTA Championships and the Charleston?",
        "gold_select": "select players.country_code, players.first_name",
        "select_candidates": [
            "select players.first_name, players.country_code",
            "select players.player_id, players.first_name, players.country_code",
            "select players.first_name, players.country_code, players.player_id",
            "select players.first_name, players.country_code, players.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "players matches",
        "table_candidates": [
            "players matches"
        ],
        "align_scores": [
            0.9903227686882019,
            0.0019501055357977748,
            0.0002071774797514081,
            0.00013028450484853238,
            0.00014529579493682832,
            9.345528815174475e-05,
            0.0002344675740459934,
            0.00021249675774015486
        ],
        "align_select": "select players.first_name, players.country_code",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the first names and country codes for players who won both the WTA Championships and the Wuhan?",
        "gold_select": "select players.country_code, players.first_name",
        "select_candidates": [
            "select players.first_name, players.country_code",
            "select players.player_id, players.first_name, players.country_code",
            "select players.first_name, players.country_code, players.player_id",
            "select players.first_name, players.country_code, players.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "players matches",
        "table_candidates": [
            "players matches"
        ],
        "align_scores": [
            0.9865645170211792,
            0.0012139722239226103,
            0.00018000294221565127,
            0.00011985087621724233,
            0.0001312826934736222,
            9.206138201989233e-05,
            0.00022098381305113435,
            0.00019935944874305278
        ],
        "align_select": "select players.first_name, players.country_code",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the first names and country codes for players who won both the WTA Championships and the Monterrey?",
        "gold_select": "select players.country_code, players.first_name",
        "select_candidates": [
            "select players.first_name, players.country_code",
            "select players.player_id, players.first_name, players.country_code",
            "select players.first_name, players.country_code, players.player_id",
            "select players.first_name, players.country_code, players.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "players matches",
        "table_candidates": [
            "players matches"
        ],
        "align_scores": [
            0.991805911064148,
            0.0017534071812406182,
            0.00021198719332460314,
            0.0001288324419874698,
            0.00014195701805874705,
            9.425485040992498e-05,
            0.0002594563993625343,
            0.00021662995277438313
        ],
        "align_select": "select players.first_name, players.country_code",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the first names and country codes for players who won both the Cincinnati and the Australian Open?",
        "gold_select": "select players.country_code, players.first_name",
        "select_candidates": [
            "select players.first_name, players.country_code",
            "select players.first_name, players.country_code, players.player_id",
            "select t0, players.first_name, players.country_code",
            "select players.first_name, players.country_code, players.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "players matches",
        "table_candidates": [
            "players matches"
        ],
        "align_scores": [
            0.9903535842895508,
            0.0013216686202213168,
            0.00013198357191868126,
            9.802685235626996e-05,
            0.00033690640702843666,
            0.00011947662278544158,
            0.00020659634901676327,
            0.00011110674677183852
        ],
        "align_select": "select players.first_name, players.country_code",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the first names and country codes for players who won both the Birmingham and the Australian Open?",
        "gold_select": "select players.country_code, players.first_name",
        "select_candidates": [
            "select players.first_name, players.country_code",
            "select players.first_name, players.country_code, players.player_id",
            "select t0, players.first_name, players.country_code",
            "select players.first_name, players.country_code, players.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "players matches",
        "table_candidates": [
            "players matches"
        ],
        "align_scores": [
            0.9897103905677795,
            0.008372758515179157,
            0.00013135843619238585,
            0.00010289311467204243,
            0.00033346787677146494,
            0.00014429123257286847,
            0.00020951760234311223,
            0.00012933388643432409
        ],
        "align_select": "select players.first_name, players.country_code",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the first names and country codes for players who won both the Australian Open and the Australian Open?",
        "gold_select": "select players.country_code, players.first_name",
        "select_candidates": [
            "select players.first_name, players.country_code",
            "select players.first_name, players.country_code, players.player_id",
            "select t0, players.first_name, players.country_code",
            "select players.first_name, players.country_code, matches.winner_entry"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "players matches",
        "table_candidates": [
            "players matches",
            "players matches rankings"
        ],
        "align_scores": [
            0.9282194375991821,
            0.00044747028732672334,
            0.0001395841536577791,
            9.349361789645627e-05,
            0.0003270637826062739,
            0.00013850638060830534,
            0.00026209308998659253,
            0.00015577634621877223
        ],
        "align_select": "select players.first_name, players.country_code",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the first names and country codes for players who won both the Monterrey and the Australian Open?",
        "gold_select": "select players.country_code, players.first_name",
        "select_candidates": [
            "select players.first_name, players.country_code",
            "select players.first_name, players.country_code, players.player_id",
            "select t0, players.first_name, players.country_code",
            "select players.first_name, players.country_code, players.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "players matches",
        "table_candidates": [
            "players matches"
        ],
        "align_scores": [
            0.9916173815727234,
            0.0008664753986522555,
            0.0001309416111325845,
            8.714559953659773e-05,
            0.00033385216374881566,
            0.00013536657206714153,
            0.00020963148563168943,
            0.00018195617303717881
        ],
        "align_select": "select players.first_name, players.country_code",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the first names and country codes for players who won both the Rabat and the Australian Open?",
        "gold_select": "select players.country_code, players.first_name",
        "select_candidates": [
            "select players.first_name, players.country_code",
            "select players.first_name, players.country_code, players.player_id",
            "select t0, players.first_name, players.country_code",
            "select players.first_name, players.country_code, players.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "players matches",
        "table_candidates": [
            "players matches"
        ],
        "align_scores": [
            0.9900681972503662,
            0.0015953961992636323,
            0.0001288172061322257,
            9.59645039984025e-05,
            0.00032703945180401206,
            0.00011529275070643052,
            0.00019506088574416935,
            0.00010840747563634068
        ],
        "align_select": "select players.first_name, players.country_code",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "List the first and last name of all players who are left / R hand in the order of birth date.",
        "gold_select": "select players.first_name, players.last_name",
        "select_candidates": [
            "select players.first_name, players.last_name",
            "select players.first_name, players.last_name (Date, Last), players.hand",
            "select players.first_name, players.last_name (Date, Last)",
            "select players.first_name, players.last_name, players.hand"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY",
            "SELECT-FROM-GROUP BY-HAVING-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "players",
        "table_candidates": [
            "players"
        ],
        "align_scores": [
            0.9926577210426331,
            0.0016011937987059355,
            0.0001800374302547425,
            0.00012755565694533288,
            0.00037437514401972294,
            0.00020470218441914767,
            0.0004435477312654257,
            0.0003008996427524835
        ],
        "align_select": "select players.first_name, players.last_name",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY"
    },
    {
        "question": "List the first and last name of all players who are left / hand in the order of birth date.",
        "gold_select": "select players.first_name, players.last_name",
        "select_candidates": [
            "select players.first_name, players.last_name",
            "select players.first_name, players.last_name (Date, Last), players.hand",
            "select players.first_name, players.last_name (Date, Last)",
            "select players.first_name, players.last_name, players.hand"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY",
            "SELECT-FROM-WHERE-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "players",
        "table_candidates": [
            "players"
        ],
        "align_scores": [
            0.9887893199920654,
            0.9887893199920654,
            0.0001771581737557426,
            0.0001771581737557426,
            0.00031287851743400097,
            0.00031287851743400097,
            0.00038765533827245235,
            0.00038765533827245235
        ],
        "align_select": "select players.first_name, players.last_name",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY"
    },
    {
        "question": "List the first and last name of all players who are left / U hand in the order of birth date.",
        "gold_select": "select players.first_name, players.last_name",
        "select_candidates": [
            "select players.first_name, players.last_name",
            "select players.first_name, players.last_name (Date, Last)",
            "select players.first_name, players.last_name (Date, Last), players.hand",
            "select players.first_name, players.last_name, players.hand"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY",
            "SELECT-FROM-GROUP BY-HAVING-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "players",
        "table_candidates": [
            "players"
        ],
        "align_scores": [
            0.9915549159049988,
            0.000650801055599004,
            0.0004437236348167062,
            0.0001990190939977765,
            0.00017789890989661217,
            0.00012426362081896514,
            0.0005016616196371615,
            0.0002750828571151942
        ],
        "align_select": "select players.first_name, players.last_name",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY"
    },
    {
        "question": "Find the name of the winner who has the highest rank points and participated in the Cincinnati tourney.",
        "gold_select": "select matches.winner_name",
        "select_candidates": [
            "select matches.winner_name",
            "select matches.winner_name, rankings.ranking_points",
            "select matches.tourney_name, matches.winner_name",
            "select matches.winner_name, matches.winner_rank"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "matches",
        "table_candidates": [
            "matches rankings",
            "matches"
        ],
        "align_scores": [
            0.8300999402999878,
            0.643348753452301,
            0.000720498152077198,
            0.0009674983448348939,
            0.0003688530996441841,
            0.00025363281019963324,
            0.0004616518854163587,
            0.0005131801008246839
        ],
        "align_select": "select matches.winner_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the name of the winner who has the highest rank points and participated in the Istanbul tourney.",
        "gold_select": "select matches.winner_name",
        "select_candidates": [
            "select matches.winner_name",
            "select matches.winner_name, rankings.ranking_points",
            "select matches.tourney_name, matches.winner_name",
            "select matches.winner_name, matches.winner_rank"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "matches",
        "table_candidates": [
            "matches rankings",
            "players matches rankings",
            "matches"
        ],
        "align_scores": [
            0.8159341812133789,
            0.4297506511211395,
            0.0006487598293460906,
            0.0011598499258980155,
            0.00034039997262880206,
            0.0002969899505842477,
            0.00044249865459278226,
            0.000549566640984267
        ],
        "align_select": "select matches.winner_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the name of the winner who has the highest rank points and participated in the Birmingham tourney.",
        "gold_select": "select matches.winner_name",
        "select_candidates": [
            "select matches.winner_name",
            "select matches.winner_name, rankings.ranking_points",
            "select matches.tourney_name, matches.winner_name",
            "select matches.winner_name, matches.winner_rank"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "matches",
        "table_candidates": [
            "matches rankings",
            "players matches rankings",
            "matches"
        ],
        "align_scores": [
            0.8156045079231262,
            0.5867152810096741,
            0.0006921854801476002,
            0.0009405324817635119,
            0.0003520662139635533,
            0.00026968217571265996,
            0.0004354671691544354,
            0.0004837381711695343
        ],
        "align_select": "select matches.winner_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the name of the winner who has the highest rank points and participated in the Limoges tourney.",
        "gold_select": "select matches.winner_name",
        "select_candidates": [
            "select matches.winner_name",
            "select matches.winner_name, rankings.ranking_points",
            "select matches.tourney_name, matches.winner_name",
            "select matches.winner_name, matches.winner_rank"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "matches",
        "table_candidates": [
            "matches rankings",
            "matches"
        ],
        "align_scores": [
            0.8194547295570374,
            0.7145352959632874,
            0.0006887839990667999,
            0.001034372253343463,
            0.00036277022445574403,
            0.0003072810359299183,
            0.0004297415434848517,
            0.0005618213326670229
        ],
        "align_select": "select matches.winner_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the name of the winner who has the highest rank points and participated in the s-Hertogenbosch tourney.",
        "gold_select": "select matches.winner_name",
        "select_candidates": [
            "select matches.winner_name",
            "select matches.winner_name, rankings.ranking_points",
            "select matches.tourney_name, matches.winner_name",
            "select matches.winner_name, matches.winner_rank"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "matches",
        "table_candidates": [
            "matches rankings",
            "players matches rankings"
        ],
        "align_scores": [
            0.8514743447303772,
            0.3959890902042389,
            0.0007768110372126102,
            0.0019764567259699106,
            0.0004690650384873152,
            0.00037824828177690506,
            0.0005295963492244482,
            0.0007158519583754241
        ],
        "align_select": "select matches.winner_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the name of the winner with the most rank points who participated in the Cincinnati tournament?",
        "gold_select": "select matches.winner_name",
        "select_candidates": [
            "select matches.winner_name",
            "select matches.winner_name, rankings.ranking_points",
            "select matches.winner_name, matches.winner_rank",
            "select matches.winner_name, matches.winner_rank_points"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "matches",
        "table_candidates": [
            "matches rankings",
            "matches"
        ],
        "align_scores": [
            0.9780087471008301,
            0.001326398691162467,
            0.0016715092351660132,
            0.00016926882381085306,
            0.0007933068554848433,
            0.0001394994033034891,
            0.0007305945036932826,
            0.00012476133997552097
        ],
        "align_select": "select matches.winner_name",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT"
    },
    {
        "question": "What is the name of the winner with the most rank points who participated in the Istanbul tournament?",
        "gold_select": "select matches.winner_name",
        "select_candidates": [
            "select matches.winner_name",
            "select matches.winner_name, rankings.ranking_points",
            "select matches.winner_name, matches.winner_rank",
            "select matches.winner_name, matches.winner_rank_points"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "matches",
        "table_candidates": [
            "matches rankings",
            "matches"
        ],
        "align_scores": [
            0.9602805972099304,
            0.0012737184297293425,
            0.0014344211667776108,
            0.0001776568533387035,
            0.000742534059099853,
            0.00014791276771575212,
            0.0007965105469338596,
            0.0001291628141188994
        ],
        "align_select": "select matches.winner_name",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT"
    },
    {
        "question": "What is the name of the winner with the most rank points who participated in the Birmingham tournament?",
        "gold_select": "select matches.winner_name",
        "select_candidates": [
            "select matches.winner_name",
            "select matches.winner_name, rankings.ranking_points",
            "select matches.winner_name, matches.winner_rank",
            "select matches.winner_name, matches.winner_rank_points"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "matches",
        "table_candidates": [
            "matches rankings",
            "matches"
        ],
        "align_scores": [
            0.9753881096839905,
            0.001273640664294362,
            0.0015983901685103774,
            0.0001673200895311311,
            0.0007304515456780791,
            0.00013630848843604326,
            0.000720956944860518,
            0.00011965470184804872
        ],
        "align_select": "select matches.winner_name",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT"
    },
    {
        "question": "What is the name of the winner with the most rank points who participated in the Limoges tournament?",
        "gold_select": "select matches.winner_name",
        "select_candidates": [
            "select matches.winner_name",
            "select matches.winner_name, rankings.ranking_points",
            "select matches.winner_name, matches.winner_rank",
            "select matches.winner_name, matches.winner_rank_points"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "matches",
        "table_candidates": [
            "matches rankings",
            "matches"
        ],
        "align_scores": [
            0.9744857549667358,
            0.001145174028351903,
            0.0013512918958440423,
            0.00015968855586834252,
            0.0006965638604015112,
            0.0001364178315270692,
            0.0007427623495459557,
            0.00011583801097003743
        ],
        "align_select": "select matches.winner_name",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT"
    },
    {
        "question": "What is the name of the winner with the most rank points who participated in the s-Hertogenbosch tournament?",
        "gold_select": "select matches.winner_name",
        "select_candidates": [
            "select matches.winner_name",
            "select matches.winner_name, rankings.ranking_points",
            "select matches.winner_name, matches.winner_rank",
            "select matches.winner_name.c1, matches.loser_age"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "matches",
        "table_candidates": [
            "matches rankings",
            "matches"
        ],
        "align_scores": [
            0.9768344759941101,
            0.001643820316530764,
            0.001625223085284233,
            0.00020309558021835983,
            0.0008618005667813122,
            0.0001626487501198426,
            0.0003729170421138406,
            0.0002173632092308253
        ],
        "align_select": "select matches.winner_name",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT"
    },
    {
        "question": "How many different winners both participated in the Cincinnati and were left handed?",
        "gold_select": "select count(distinct matches.winner_name)",
        "select_candidates": [
            "select count(*)",
            "select count(distinct matches.winner_id)",
            "select count(*), matches.winner_entry",
            "select count(distinct matches.loser_age)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "matches",
        "table_candidates": [
            "matches",
            "players matches",
            "matches rankings"
        ],
        "align_scores": [
            0.9869974851608276,
            0.78999263048172,
            0.9092922806739807,
            0.014352597296237946,
            0.00047989311860874295,
            0.0020995631348341703,
            0.00039257548633031547,
            0.0001375024439767003
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many different winners both participated in the Birmingham and were left handed?",
        "gold_select": "select count(distinct matches.winner_name)",
        "select_candidates": [
            "select count(*)",
            "select count(distinct matches.winner_id)",
            "select count(*), matches.winner_entry",
            "select count(distinct matches.loser_age)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "matches",
        "table_candidates": [
            "matches",
            "players matches",
            "matches rankings"
        ],
        "align_scores": [
            0.9855101108551025,
            0.780079185962677,
            0.9077316522598267,
            0.010887312702834606,
            0.00046218818170018494,
            0.0018888643244281411,
            0.00037750761839561164,
            0.00012841407442465425
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many different winners both participated in the Wuhan and were left handed?",
        "gold_select": "select count(distinct matches.winner_name)",
        "select_candidates": [
            "select count(*)",
            "select count(distinct matches.winner_id)",
            "select count(*), matches.winner_entry",
            "select count(distinct matches.loser_age)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "matches",
        "table_candidates": [
            "matches",
            "players matches",
            "matches rankings"
        ],
        "align_scores": [
            0.9871771335601807,
            0.7758415341377258,
            0.8141530752182007,
            0.007544277235865593,
            0.0003685476549435407,
            0.001538450364023447,
            0.00031677045626565814,
            0.0001240708661498502
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many different winners both participated in the Monterrey and were left handed?",
        "gold_select": "select count(distinct matches.winner_name)",
        "select_candidates": [
            "select count(*)",
            "select count(distinct matches.winner_id)",
            "select count(distinct matches.loser_age)",
            "select count(*), matches.winner_entry"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "matches",
        "table_candidates": [
            "matches",
            "players matches",
            "matches rankings"
        ],
        "align_scores": [
            0.9880058169364929,
            0.7787131667137146,
            0.84014892578125,
            0.009850557893514633,
            0.0003498560981824994,
            0.00011994211672572419,
            0.0004202333511784673,
            0.0018780769314616919
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many different winners both participated in the Brisbane and were left handed?",
        "gold_select": "select count(distinct matches.winner_name)",
        "select_candidates": [
            "select count(*)",
            "select count(distinct matches.winner_id)",
            "select count(*), matches.winner_entry",
            "select count(distinct matches.loser_age)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "matches",
        "table_candidates": [
            "matches",
            "players matches",
            "matches rankings"
        ],
        "align_scores": [
            0.9885950684547424,
            0.7570239305496216,
            0.9292457699775696,
            0.012337331660091877,
            0.0004567336873151362,
            0.0019558139611035585,
            0.0004263888986315578,
            0.00012872253137174994
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the number of left handed winners who participated in the Cincinnati.",
        "gold_select": "select count(distinct matches.winner_name)",
        "select_candidates": [
            "select count(*)",
            "select count(distinct matches.winner_entry)",
            "select count(distinct matches.loser_age)",
            "select count(distinct matches.winner_hand)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "matches",
        "table_candidates": [
            "matches",
            "matches rankings",
            "players matches"
        ],
        "align_scores": [
            0.9865429401397705,
            0.0007900462951511145,
            0.03626521676778793,
            0.00012692026211880147,
            0.0003352331114001572,
            9.348059393232688e-05,
            0.0014024415286257863,
            0.00012317029177211225
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the number of left handed winners who participated in the Birmingham.",
        "gold_select": "select count(distinct matches.winner_name)",
        "select_candidates": [
            "select count(*)",
            "select count(distinct matches.winner_entry)",
            "select count(distinct matches.loser_age)",
            "select count(distinct matches.winner_hand)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "matches",
        "table_candidates": [
            "matches",
            "players matches",
            "matches rankings"
        ],
        "align_scores": [
            0.9847244024276733,
            0.0007025803788565099,
            0.027189720422029495,
            0.00011747106327675283,
            0.00028841692255809903,
            9.292997856391594e-05,
            0.0012123638298362494,
            0.00011494730279082432
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the number of left handed winners who participated in the Wuhan.",
        "gold_select": "select count(distinct matches.winner_name)",
        "select_candidates": [
            "select count(*)",
            "select count(distinct matches.winner_entry)",
            "select count(distinct matches.loser_age)",
            "select count(distinct matches.winner_hand)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "matches",
        "table_candidates": [
            "matches",
            "players matches",
            "matches rankings"
        ],
        "align_scores": [
            0.9906721115112305,
            0.0006959043093957007,
            0.010308592580258846,
            0.00011624876788118854,
            0.00024728188873268664,
            0.00010103604290634394,
            0.0007207356975413859,
            0.00011296982120256871
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the number of left handed winners who participated in the Monterrey.",
        "gold_select": "select count(distinct matches.winner_name)",
        "select_candidates": [
            "select count(*)",
            "select count(distinct matches.winner_entry)",
            "select count(distinct matches.loser_age)",
            "select count(distinct matches.winner_hand)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "matches",
        "table_candidates": [
            "matches",
            "players matches",
            "matches rankings"
        ],
        "align_scores": [
            0.9901178479194641,
            6.678685895167291e-05,
            0.016156336292624474,
            6.332290649879724e-05,
            0.0002673607086762786,
            6.260575173655525e-05,
            0.0010804274352267385,
            8.51598524604924e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the number of left handed winners who participated in the Brisbane.",
        "gold_select": "select count(distinct matches.winner_name)",
        "select_candidates": [
            "select count(*)",
            "select count(distinct matches.winner_entry)",
            "select count(distinct matches.loser_age)",
            "select count(distinct matches.winner_hand)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "matches",
        "table_candidates": [
            "matches",
            "players matches",
            "matches rankings"
        ],
        "align_scores": [
            0.9884464740753174,
            0.0009768095333129168,
            0.022315645590424538,
            0.00011673866538330913,
            0.00030395592330023646,
            9.570678957970813e-05,
            0.0011744445655494928,
            0.00011801785876741633
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many ships ended up being 'Wrecked'?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), ship.disposition_of_ship",
            "select count(*), ship.id",
            "select count(*), ship.lost_in_battle"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "ship",
        "table_candidates": [
            "ship"
        ],
        "align_scores": [
            0.9913291931152344,
            0.0035642902366816998,
            0.00020344133372418582,
            0.0016323243035003543,
            0.0002377281925873831,
            0.00044447463005781174,
            0.000230416189879179,
            0.002107011154294014
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many ships ended up being 'Sank'?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), ship.disposition_of_ship",
            "select count(*), ship.id",
            "select count(*), ship.lost_in_battle"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "ship",
        "table_candidates": [
            "ship"
        ],
        "align_scores": [
            0.9912883043289185,
            9.764638525666669e-05,
            0.00022367083874996752,
            6.378983380272985e-05,
            0.000244363269302994,
            7.405152427963912e-05,
            0.00021598236344289035,
            6.899605068610981e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many ships ended up being 'Scuttled'?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), ship.disposition_of_ship",
            "select count(*), ship.id",
            "select count(*), ship.lost_in_battle"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "ship",
        "table_candidates": [
            "ship"
        ],
        "align_scores": [
            0.9936729669570923,
            0.007888095453381538,
            0.0002404655679129064,
            0.0013477111933752894,
            0.00024868917535059154,
            0.0004933528252877295,
            0.00022858053853269666,
            0.0022786627523601055
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the death and injury situations caused by the ship with tonnage '391'?",
        "gold_select": "select death.killed, death.injured",
        "select_candidates": [
            "select death.killed, death.injured",
            "select distinct death.killed, death.injured",
            "select death.caused_by_ship_id, death.killed, death.injured",
            "select death.id, death.killed, death.injured"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "ship death",
        "table_candidates": [
            "ship death"
        ],
        "align_scores": [
            0.9781776666641235,
            0.00010473336442373693,
            0.003796926001086831,
            8.058903767960146e-05,
            0.0002904287539422512,
            7.093405292835087e-05,
            0.00021491989900823683,
            7.507160626119003e-05
        ],
        "align_select": "select death.killed, death.injured",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the name and results of the battles when the bulgarian commander is not 'Unknown'",
        "gold_select": "select battle.name, battle.result",
        "select_candidates": [
            "select battle.name, battle.result",
            "select battle.id, battle.name, battle.result",
            "select battle.name, battle.result, battle.bulgarian_commander",
            "select battle.name, battle.date, battle.result"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "battle",
        "table_candidates": [
            "battle"
        ],
        "align_scores": [
            0.994391143321991,
            0.0001233119983226061,
            0.00028987356927245855,
            7.845075742807239e-05,
            0.0002479221438989043,
            6.088627196731977e-05,
            0.00043050493695773184,
            7.757663843221962e-05
        ],
        "align_select": "select battle.name, battle.result",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the name and results of the battles when the bulgarian commander is not 'Kaloyan'",
        "gold_select": "select battle.name, battle.result",
        "select_candidates": [
            "select battle.name, battle.result",
            "select battle.id, battle.name, battle.result",
            "select battle.name, battle.bulgarian_commander, battle.result",
            "select battle.name, battle.result, battle.bulgarian_commander"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "battle",
        "table_candidates": [
            "battle"
        ],
        "align_scores": [
            0.9916492700576782,
            0.00019067840185016394,
            0.0002680769539438188,
            9.388948092237115e-05,
            0.0002886669826693833,
            7.717598782619461e-05,
            0.00018700600776355714,
            6.86480852891691e-05
        ],
        "align_select": "select battle.name, battle.result",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the name and results of the battles when the bulgarian commander is not 'Ivan Asen II'",
        "gold_select": "select battle.name, battle.result",
        "select_candidates": [
            "select battle.name, battle.result",
            "select battle.id, battle.name, battle.result",
            "select battle.name, battle.bulgarian_commander, battle.result",
            "select battle.name, battle.date, battle.result"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "battle",
        "table_candidates": [
            "battle"
        ],
        "align_scores": [
            0.9893408417701721,
            0.00022223043197300285,
            0.00028851511888206005,
            8.780725329415873e-05,
            0.00028244900749996305,
            7.878716132836416e-05,
            0.0003810484486166388,
            8.46468610689044e-05
        ],
        "align_select": "select battle.name, battle.result",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the different ids and names of the battles that lost any '8 gun Brig' type shipes?",
        "gold_select": "select distinct battle.id, battle.name",
        "select_candidates": [
            "select distinct battle.id, battle.name",
            "select distinct battle.name, battle.id",
            "select distinct battle.name, battle.date",
            "select unique battle.id, battle.name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "battle ship",
        "table_candidates": [
            "battle ship"
        ],
        "align_scores": [
            0.9891392588615417,
            0.0002553925442043692,
            0.9876178503036499,
            0.0002395442861597985,
            0.0003803362196777016,
            7.513906894018874e-05,
            0.0005951778148300946,
            0.00010746048064902425
        ],
        "align_select": "select distinct battle.id, battle.name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the different ids and names of the battles that lost any '18-gun Brig' type shipes?",
        "gold_select": "select distinct battle.id, battle.name",
        "select_candidates": [
            "select distinct battle.id, battle.name",
            "select distinct battle.name, battle.id",
            "select distinct battle.name, battle.date",
            "select unique battle.id, battle.name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "battle ship",
        "table_candidates": [
            "battle ship"
        ],
        "align_scores": [
            0.9872531294822693,
            0.00026507684378884733,
            0.9852843880653381,
            0.00024248147383332253,
            0.0004050649586133659,
            7.510984869441018e-05,
            0.0006592161953449249,
            0.00011377662303857505
        ],
        "align_select": "select distinct battle.id, battle.name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the distinct battle names which are between bulgarian commander 'Kaloyan' and latin commander 'Thierry de Termond'?",
        "gold_select": "select battle.name",
        "select_candidates": [
            "select distinct battle.name",
            "select distinct battle.name, battle.bulgarian_commander, battle.latin_commander",
            "select distinct battle.name, battle.date",
            "select distinct battle.name de battle.bulgarian_commander, battle.latin_commander"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "battle",
        "table_candidates": [
            "battle"
        ],
        "align_scores": [
            0.9942247271537781,
            0.0002359366335440427,
            0.00022040936164557934,
            6.494097760878503e-05,
            0.00022652656480204314,
            7.887232641223818e-05,
            0.000614614225924015,
            7.580906094517559e-05
        ],
        "align_select": "select distinct battle.name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the distinct battle names which are between bulgarian commander 'Kaloyan' and latin commander 'Unknown'?",
        "gold_select": "select battle.name",
        "select_candidates": [
            "select distinct battle.name",
            "select distinct battle.name, battle.date",
            "select distinct battle.name de battle.bulgarian_commander, battle.latin_commander",
            "select distinct battle.name, battle.latin_commander"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "battle",
        "table_candidates": [
            "battle"
        ],
        "align_scores": [
            0.9948019981384277,
            0.00023612861696165055,
            0.0002092933573294431,
            7.968319550855085e-05,
            0.002910921350121498,
            7.361134339589626e-05,
            0.0002681142068468034,
            7.694905070820823e-05
        ],
        "align_select": "select distinct battle.name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many battles did not lose any ship with tonnage 't'?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), ship.tonnage",
            "select count(*), ship.id",
            "select count(distinct battle.name)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "battle ship",
        "table_candidates": [
            "battle ship"
        ],
        "align_scores": [
            0.9938185811042786,
            0.005086963064968586,
            0.00033445231383666396,
            0.000172154774190858,
            0.0003167795075569302,
            0.00016079952183645219,
            0.20112036168575287,
            0.0004051066061947495
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show names, results and bulgarian commanders of the battles with no ships lost in the 'SW Approaches'.",
        "gold_select": "select battle.name, battle.result, battle.bulgarian_commander",
        "select_candidates": [
            "select battle.name, battle.result, battle.bulgarian_commander",
            "select battle.name, battle.bulgarian_commander, battle.result",
            "select battle.name, battle.result, battle.bulgarian_commander",
            "select battle.name, battle.date, battle.bulgarian_commander"
        ],
        "select_labels": [
            1.0,
            1.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "battle ship",
        "table_candidates": [
            "battle ship"
        ],
        "align_scores": [
            0.0023214633110910654,
            0.0004812853585463017,
            0.0020038702059537172,
            0.0003802464925684035,
            0.0023214633110910654,
            0.0004812853585463017,
            0.0002896108489949256,
            0.00014585019380319864
        ],
        "align_select": "select battle.name, battle.result, battle.bulgarian_commander",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "Show names, results and bulgarian commanders of the battles with no ships lost in the 'Mid-Atlantic'.",
        "gold_select": "select battle.name, battle.result, battle.bulgarian_commander",
        "select_candidates": [
            "select battle.name, battle.result, battle.bulgarian_commander",
            "select battle.name, battle.bulgarian_commander, battle.result",
            "select battle.name, battle.result, battle.bulgarian_commander",
            "select battle.name, battle.date, battle.bulgarian_commander"
        ],
        "select_labels": [
            1.0,
            1.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "battle ship",
        "table_candidates": [
            "battle ship"
        ],
        "align_scores": [
            0.0006325141876004636,
            0.0005132126389071345,
            0.000574611418414861,
            0.00040170460124500096,
            0.0006325141876004636,
            0.0005132126389071345,
            0.0002727302198763937,
            0.00014895292406436056
        ],
        "align_select": "select battle.name, battle.result, battle.bulgarian_commander",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "How is the ds course described?",
        "gold_select": "select Courses.course_description",
        "select_candidates": [
            "select Courses.course_description",
            "select Courses.course_description, Courses.other_details",
            "select Courses.course_description (or Courses.other_details)",
            "select Courses.course_description (Courses.other_details)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Courses",
        "table_candidates": [
            "Courses"
        ],
        "align_scores": [
            0.9954793453216553,
            7.849356188671663e-05,
            0.00020238960860297084,
            6.357231177389622e-05,
            0.9926887154579163,
            7.634133362444118e-05,
            0.0002733432629611343,
            6.511381070595235e-05
        ],
        "align_select": "select Courses.course_description",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How is the oop course described?",
        "gold_select": "select Courses.course_description",
        "select_candidates": [
            "select Courses.course_description",
            "select Courses.course_description, Courses.other_details",
            "select Courses.course_description (or Courses.other_details)",
            "select Courses.course_description (Courses.other_details)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Courses",
        "table_candidates": [
            "Courses",
            "Courses Student_Enrolment_Courses"
        ],
        "align_scores": [
            0.9954538345336914,
            8.955585508374497e-05,
            0.00020579496049322188,
            6.500765448436141e-05,
            0.9934551119804382,
            7.962910603964701e-05,
            0.00028232732438482344,
            6.576152372872457e-05
        ],
        "align_select": "select Courses.course_description",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How is the en course described?",
        "gold_select": "select Courses.course_description",
        "select_candidates": [
            "select Courses.course_description",
            "select Courses.course_description, Courses.other_details",
            "select Courses.course_description (or Courses.other_details)",
            "select Courses.course_description, t1.c4"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Courses",
        "table_candidates": [
            "Courses",
            "Courses Student_Enrolment_Courses"
        ],
        "align_scores": [
            0.9955191612243652,
            7.252964860526845e-05,
            0.00017685421335045248,
            5.915566725889221e-05,
            0.9934558272361755,
            6.93316978868097e-05,
            0.0004360684542916715,
            6.849494093330577e-05
        ],
        "align_select": "select Courses.course_description",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How is the cal course described?",
        "gold_select": "select Courses.course_description",
        "select_candidates": [
            "select Courses.course_description",
            "select Courses.course_description, Courses.other_details",
            "select t1.c6, Courses.course_description",
            "select Courses.course_description (or Courses.other_details)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Courses",
        "table_candidates": [
            "Courses",
            "Courses Student_Enrolment_Courses"
        ],
        "align_scores": [
            0.995334804058075,
            8.501906268065795e-05,
            0.00019350410730112344,
            6.438090349547565e-05,
            0.00032425494282506406,
            6.823489093221724e-05,
            0.9927667379379272,
            7.736867701169103e-05
        ],
        "align_select": "select Courses.course_description",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How is the dl course described?",
        "gold_select": "select Courses.course_description",
        "select_candidates": [
            "select Courses.course_description",
            "select Courses.course_description, Courses.other_details",
            "select Courses.course_description (or Courses.other_details)",
            "select Courses.course_description (Courses.other_details)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Courses",
        "table_candidates": [
            "Courses"
        ],
        "align_scores": [
            0.9963087439537048,
            7.648851169506088e-05,
            0.00019733265799004585,
            6.007743286318146e-05,
            0.9942402839660645,
            7.413397543132305e-05,
            0.0002960313286166638,
            6.320611282717437e-05
        ],
        "align_select": "select Courses.course_description",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the descriptions for all the ds courses?",
        "gold_select": "select Courses.course_description",
        "select_candidates": [
            "select Courses.course_description",
            "select Courses.course_description, Courses.other_details",
            "select t1.c5, Courses.course_description",
            "select Courses.course_description, Courses.course_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Courses",
        "table_candidates": [
            "Courses",
            "Courses Student_Enrolment_Courses",
            "Courses Student_Enrolment"
        ],
        "align_scores": [
            0.9945613741874695,
            0.0001915439497679472,
            0.0002122598234564066,
            6.88658983563073e-05,
            0.0002862726978491992,
            7.806433859514073e-05,
            0.00015108601655811071,
            6.712001777486876e-05
        ],
        "align_select": "select Courses.course_description",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the descriptions for all the oop courses?",
        "gold_select": "select Courses.course_description",
        "select_candidates": [
            "select Courses.course_description",
            "select Courses.course_description, Courses.other_details",
            "select t1.c5, Courses.course_description",
            "select Courses.course_description, t1.c4"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Courses",
        "table_candidates": [
            "Courses"
        ],
        "align_scores": [
            0.9952084422111511,
            0.0001783146581146866,
            0.00020339322509244084,
            6.661537918262184e-05,
            0.00027988682268187404,
            7.555285264970735e-05,
            0.00043518125312402844,
            7.65491568017751e-05
        ],
        "align_select": "select Courses.course_description",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the descriptions for all the en courses?",
        "gold_select": "select Courses.course_description",
        "select_candidates": [
            "select Courses.course_description",
            "select Courses.course_description, Courses.other_details",
            "select t1.c5, Courses.course_description",
            "select Courses.course_description, Courses.course_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Courses",
        "table_candidates": [
            "Courses"
        ],
        "align_scores": [
            0.9953539371490479,
            0.00011065232683904469,
            0.0001923670497490093,
            6.336119986372069e-05,
            0.0002994541428051889,
            7.126145646907389e-05,
            0.00013349700020626187,
            6.172660505399108e-05
        ],
        "align_select": "select Courses.course_description",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the descriptions for all the cal courses?",
        "gold_select": "select Courses.course_description",
        "select_candidates": [
            "select Courses.course_description",
            "select Courses.course_description, Courses.other_details",
            "select t1.c5, Courses.course_description",
            "select Courses.course_description, Courses.course_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Courses",
        "table_candidates": [
            "Courses"
        ],
        "align_scores": [
            0.9942582845687866,
            0.00014716756413690746,
            0.00019272687495686114,
            6.776675581932068e-05,
            0.0003021187731064856,
            7.774060213705525e-05,
            0.00013832659169565886,
            6.617414328502491e-05
        ],
        "align_select": "select Courses.course_description",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the descriptions for all the dl courses?",
        "gold_select": "select Courses.course_description",
        "select_candidates": [
            "select Courses.course_description",
            "select Courses.course_description, Courses.other_details",
            "select t1.c5, Courses.course_description",
            "select Courses.course_description, Courses.course_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Courses",
        "table_candidates": [
            "Courses",
            "Courses Student_Enrolment_Courses",
            "Courses Student_Enrolment"
        ],
        "align_scores": [
            0.9951564073562622,
            0.0001365205243928358,
            0.00020672754908446223,
            6.300679524429142e-05,
            0.00030615285504609346,
            7.314343383768573e-05,
            0.00012114720448153093,
            6.163884972920641e-05
        ],
        "align_select": "select Courses.course_description",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the zip code of the address in the city Michelleburgh?",
        "gold_select": "select Addresses.zip_postcode",
        "select_candidates": [
            "select Addresses.zip_postcode",
            "select Addresses.address_id, Addresses.zip_postcode",
            "select Addresses.zip_postcode, Addresses.state_province_county",
            "select Addresses.zip_postcode, Addresses.other_address_details"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Addresses",
        "table_candidates": [
            "Addresses"
        ],
        "align_scores": [
            0.9932142496109009,
            0.00011381949298083782,
            0.00016980388318188488,
            6.771056359866634e-05,
            0.00020981367561034858,
            6.128519453341141e-05,
            0.00016918346227612346,
            5.605936166830361e-05
        ],
        "align_select": "select Addresses.zip_postcode",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the zip code of the address in the city Lake Careyberg?",
        "gold_select": "select Addresses.zip_postcode",
        "select_candidates": [
            "select Addresses.zip_postcode",
            "select Addresses.zip_postcode, Addresses.state_province_county",
            "select Addresses.zip_postcode, Addresses.city",
            "select Addresses.zip_postcode, Addresses.other_address_details"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Addresses",
        "table_candidates": [
            "Addresses"
        ],
        "align_scores": [
            0.9925603866577148,
            0.00012351441546343267,
            0.00022906468075234443,
            6.296174979070202e-05,
            0.00019766090554185212,
            6.021497756591998e-05,
            0.0001762937317835167,
            5.875268470845185e-05
        ],
        "align_select": "select Addresses.zip_postcode",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the zip code of the address in the city New Clemensburgh?",
        "gold_select": "select Addresses.zip_postcode",
        "select_candidates": [
            "select Addresses.zip_postcode",
            "select Addresses.zip_postcode, Addresses.state_province_county",
            "select Addresses.zip_postcode, Addresses.other_address_details",
            "select Addresses.zip_postcode (or Addresses.state_province_county)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Addresses",
        "table_candidates": [
            "Addresses"
        ],
        "align_scores": [
            0.9916623830795288,
            0.00012797131785191596,
            0.00023411127040162683,
            6.537829904118553e-05,
            0.00018126177019439638,
            5.957424582447857e-05,
            0.6420600414276123,
            9.033980313688517e-05
        ],
        "align_select": "select Addresses.zip_postcode",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the zip code of the address in the city South Palma?",
        "gold_select": "select Addresses.zip_postcode",
        "select_candidates": [
            "select Addresses.zip_postcode",
            "select Addresses.zip_postcode, Addresses.state_province_county",
            "select Addresses.zip_postcode, Addresses.city",
            "select Addresses.zip_postcode, Addresses.other_address_details"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Addresses",
        "table_candidates": [
            "Addresses"
        ],
        "align_scores": [
            0.992857813835144,
            0.00011797498154919595,
            0.00028633492183871567,
            6.243654934223741e-05,
            0.00019169889856129885,
            5.7671277318149805e-05,
            0.00018299977818969637,
            5.7682223996380344e-05
        ],
        "align_select": "select Addresses.zip_postcode",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the zip code of the address in the city Mariliehaven?",
        "gold_select": "select Addresses.zip_postcode",
        "select_candidates": [
            "select Addresses.zip_postcode",
            "select Addresses.zip_postcode, Addresses.state_province_county",
            "select Addresses.zip_postcode, Addresses.other_address_details",
            "select Addresses.zip_postcode, Addresses.country"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Addresses",
        "table_candidates": [
            "Addresses"
        ],
        "align_scores": [
            0.9899542331695557,
            0.00013613533519674093,
            0.00023244714247994125,
            6.314116762951016e-05,
            0.000175528199179098,
            5.863883416168392e-05,
            0.00018531459500081837,
            5.490251714945771e-05
        ],
        "align_select": "select Addresses.zip_postcode",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the zip code for Michelleburgh?",
        "gold_select": "select Addresses.zip_postcode",
        "select_candidates": [
            "select Addresses.zip_postcode",
            "select Addresses.zip_postcode, Addresses.city",
            "select Addresses.zip_postcode (or Addresses.state_province_county)",
            "select Addresses.zip_postcode, Addresses.state_province_county"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Addresses",
        "table_candidates": [
            "Addresses"
        ],
        "align_scores": [
            0.9929890632629395,
            0.00014427458518184721,
            0.0001890267594717443,
            5.5091219110181555e-05,
            0.9451406598091125,
            8.82269159774296e-05,
            0.00022730219643563032,
            6.232834130059928e-05
        ],
        "align_select": "select Addresses.zip_postcode",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the zip code for Lake Careyberg?",
        "gold_select": "select Addresses.zip_postcode",
        "select_candidates": [
            "select Addresses.zip_postcode",
            "select Addresses.zip_postcode, Addresses.city",
            "select Addresses.address_id, Addresses.zip_postcode",
            "select Addresses.zip_postcode, Addresses.state_province_county"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Addresses",
        "table_candidates": [
            "Addresses",
            "Addresses Student_Enrolment",
            "Addresses Transcripts"
        ],
        "align_scores": [
            0.9932791590690613,
            0.00013643800048157573,
            0.00020066906290594488,
            5.635619891108945e-05,
            0.0001874984591268003,
            6.607823161175475e-05,
            0.00024012969515752047,
            6.167048559291288e-05
        ],
        "align_select": "select Addresses.zip_postcode",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the zip code for New Clemensburgh?",
        "gold_select": "select Addresses.zip_postcode",
        "select_candidates": [
            "select Addresses.zip_postcode",
            "select Addresses.zip_postcode, Addresses.city",
            "select Addresses.zip_postcode, Addresses.state_province_county",
            "select Addresses.zip_postcode, Addresses.country"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Addresses",
        "table_candidates": [
            "Addresses",
            "Addresses Transcripts"
        ],
        "align_scores": [
            0.9941115975379944,
            0.0001312055828748271,
            0.00019190848979633301,
            5.8300716773374006e-05,
            0.00026769403484649956,
            6.323130946839228e-05,
            0.0001847473904490471,
            5.740406777476892e-05
        ],
        "align_select": "select Addresses.zip_postcode",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the zip code for South Palma?",
        "gold_select": "select Addresses.zip_postcode",
        "select_candidates": [
            "select Addresses.zip_postcode",
            "select Addresses.zip_postcode, Addresses.city",
            "select Addresses.zip_postcode, Addresses.state_province_county",
            "select Addresses.zip_postcode, Addresses.country"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Addresses",
        "table_candidates": [
            "Addresses",
            "Addresses Transcripts"
        ],
        "align_scores": [
            0.9953097701072693,
            0.00011961659038206562,
            0.00019386161875445396,
            5.7958583056461066e-05,
            0.00029907922726124525,
            6.1693528550677e-05,
            0.0001731477677822113,
            5.749529373133555e-05
        ],
        "align_select": "select Addresses.zip_postcode",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the zip code for Mariliehaven?",
        "gold_select": "select Addresses.zip_postcode",
        "select_candidates": [
            "select Addresses.zip_postcode",
            "select Addresses.zip_postcode, Addresses.city",
            "select Addresses.address_id, Addresses.zip_postcode",
            "select Addresses.zip_postcode, Addresses.state_province_county"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Addresses",
        "table_candidates": [
            "Addresses"
        ],
        "align_scores": [
            0.9915652275085449,
            0.00017866848793346435,
            0.00021136335271876305,
            5.630688610835932e-05,
            0.00021042449225205928,
            6.713013863191009e-05,
            0.0002498554240446538,
            6.555478466907516e-05
        ],
        "align_select": "select Addresses.zip_postcode",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Who is enrolled in a Master degree program? List the first name, middle name, last name.",
        "gold_select": "select distinct Students.first_name, Students.middle_name, Students.last_name",
        "select_candidates": [
            "select Students.first_name, Students.middle_name, Students.last_name",
            "select Students.student_id, Students.first_name, Students.middle_name, Students.last_name",
            "select distinct Students.first_name, Students.middle_name, Students.last_name",
            "select Students.first_name, Students.middle_name, Students.last_name"
        ],
        "select_labels": [
            0.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Degree_Programs Students Student_Enrolment",
        "table_candidates": [
            "Degree_Programs Students Student_Enrolment",
            "Departments Degree_Programs Students Student_Enrolment",
            "Addresses Degree_Programs Students Student_Enrolment",
            "Courses Degree_Programs Students Student_Enrolment",
            "Courses Students Student_Enrolment"
        ],
        "align_scores": [
            0.9882083535194397,
            0.00014483848644886166,
            0.00021909520728513598,
            9.192523430101573e-05,
            0.02301601879298687,
            7.02625184203498e-05,
            0.9882083535194397,
            0.00014483848644886166
        ],
        "align_select": "select Students.first_name, Students.middle_name, Students.last_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the semester when both Bachelor students and Bachelor students got enrolled in.",
        "gold_select": "select distinct Student_Enrolment.semester_id",
        "select_candidates": [
            "select Semesters.semester_name",
            "select Semesters.semester_name, Students.student_id",
            "select Student_Enrolment.degree_program_id",
            "select Semesters.semester_name, Students.current_address_id"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Degree_Programs Student_Enrolment",
        "table_candidates": [
            "Degree_Programs Students Student_Enrolment",
            "Departments Degree_Programs Students Student_Enrolment",
            "Departments Degree_Programs Semesters Students Student_Enrolment",
            "Courses Degree_Programs Students Student_Enrolment",
            "Addresses Degree_Programs Students Student_Enrolment",
            "Departments Degree_Programs Semesters Student_Enrolment",
            "Degree_Programs Semesters Students Student_Enrolment",
            "Semesters Students Student_Enrolment"
        ],
        "align_scores": [
            0.9684963822364807,
            0.002437245100736618,
            0.00018634743173606694,
            0.00012410660565365106,
            0.02156246453523636,
            0.00883910059928894,
            0.00014640616427641362,
            8.400581282330677e-05
        ],
        "align_select": "select Semesters.semester_name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "Find the semester when both Master students and Master students got enrolled in.",
        "gold_select": "select distinct Student_Enrolment.semester_id",
        "select_candidates": [
            "select Semesters.semester_name",
            "select Semesters.semester_name, Students.student_id",
            "select Semesters.semester_name, Students.ssn",
            "select Semesters.semester_name, Students.current_address_id"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Degree_Programs Student_Enrolment",
        "table_candidates": [
            "Degree_Programs Students Student_Enrolment",
            "Departments Degree_Programs Semesters Students Student_Enrolment",
            "Departments Degree_Programs Semesters Student_Enrolment",
            "Departments Degree_Programs Students Student_Enrolment",
            "Semesters Students Student_Enrolment",
            "Courses Departments Degree_Programs Semesters Student_Enrolment",
            "Departments Degree_Programs Student_Enrolment",
            "Courses Degree_Programs Students Student_Enrolment"
        ],
        "align_scores": [
            0.9305999875068665,
            0.0005372576997615397,
            0.00018304515106137842,
            0.00010503039811737835,
            0.0008602275047451258,
            0.0001088151111616753,
            0.00014359508350025862,
            7.823873602319509e-05
        ],
        "align_select": "select Semesters.semester_name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "Describe the section c.",
        "gold_select": "select Sections.section_description",
        "select_candidates": [
            "select Sections.section_description",
            "select Sections.course_id, Sections.section_description",
            "select Sections.section_description, Sections.section_name",
            "select Sections.section_description, Sections.other_details"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Sections",
        "table_candidates": [
            "Sections",
            "Departments Sections",
            "Degree_Programs Sections",
            "Addresses Sections",
            "Addresses Courses Sections",
            "Addresses Courses Departments Sections",
            "Courses Sections",
            "Addresses Courses Degree_Programs Sections"
        ],
        "align_scores": [
            0.996299684047699,
            7.649566396139562e-05,
            0.0001282471785089001,
            5.989747296553105e-05,
            0.00012404649169184268,
            5.7332021242473274e-05,
            0.00021548087534029037,
            5.5721237004036084e-05
        ],
        "align_select": "select Sections.section_description",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Describe the section k.",
        "gold_select": "select Sections.section_description",
        "select_candidates": [
            "select Sections.section_description",
            "select Sections.course_id, Sections.section_description",
            "select Sections.section_name, Sections.section_description",
            "select Sections.section_description, Sections.section_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Sections",
        "table_candidates": [
            "Sections",
            "Departments Sections",
            "Degree_Programs Sections",
            "Addresses Sections",
            "Courses Sections",
            "Sections Transcripts",
            "Sections Student_Enrolment_Courses",
            "Sections Student_Enrolment"
        ],
        "align_scores": [
            0.9962353110313416,
            7.957019988680258e-05,
            0.00012431673530954868,
            5.890696047572419e-05,
            0.00015712568711023778,
            6.369470793288201e-05,
            0.0001202189814648591,
            5.7771074352785945e-05
        ],
        "align_select": "select Sections.section_description",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Describe the section f.",
        "gold_select": "select Sections.section_description",
        "select_candidates": [
            "select Sections.section_description",
            "select Sections.course_id, Sections.section_description",
            "select Sections.section_description, Sections.section_name",
            "select Sections.section_name, Sections.section_description"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Sections",
        "table_candidates": [
            "Sections",
            "Departments Sections",
            "Degree_Programs Sections",
            "Addresses Sections",
            "Addresses Courses Sections",
            "Courses Sections",
            "Sections Transcripts",
            "Sections Student_Enrolment_Courses"
        ],
        "align_scores": [
            0.996421217918396,
            7.788492803229019e-05,
            0.00013876681623514742,
            6.0093934735050425e-05,
            0.00012772933405358344,
            5.530635462491773e-05,
            0.00016290982603095472,
            6.274142651818693e-05
        ],
        "align_select": "select Sections.section_description",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Describe the section a.",
        "gold_select": "select Sections.section_description",
        "select_candidates": [
            "select Sections.section_description",
            "select Sections.section_name, Sections.section_description",
            "select Sections.course_id, Sections.section_description",
            "select Sections.section_description, Sections.section_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Sections",
        "table_candidates": [
            "Sections",
            "Departments Sections",
            "Degree_Programs Sections",
            "Addresses Sections",
            "Addresses Courses Sections",
            "Courses Sections",
            "Sections Transcripts",
            "Sections Student_Enrolment_Courses"
        ],
        "align_scores": [
            0.9960324168205261,
            7.255018863361329e-05,
            0.0001692911027930677,
            6.318657688098028e-05,
            0.00012675818288698792,
            5.7461027608951554e-05,
            0.00012266090197954327,
            5.4857613577041775e-05
        ],
        "align_select": "select Sections.section_description",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Describe the section e.",
        "gold_select": "select Sections.section_description",
        "select_candidates": [
            "select Sections.section_description",
            "select Sections.course_id, Sections.section_description",
            "select Sections.section_description, Sections.section_name",
            "select Sections.section_description, Sections.other_details"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Sections",
        "table_candidates": [
            "Sections",
            "Departments Sections",
            "Degree_Programs Sections",
            "Addresses Sections",
            "Courses Sections",
            "Sections Transcripts",
            "Sections Student_Enrolment_Courses",
            "Sections Student_Enrolment"
        ],
        "align_scores": [
            0.9961082339286804,
            7.960739458212629e-05,
            0.00012683241220656782,
            6.274573388509452e-05,
            0.00010357294377172366,
            6.403496081475168e-05,
            0.00017458476941101253,
            6.328583549475297e-05
        ],
        "align_select": "select Sections.section_description",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the description for the section named c?",
        "gold_select": "select Sections.section_description",
        "select_candidates": [
            "select Sections.section_description",
            "select Sections.section_name, Sections.section_description",
            "select Sections.section_description, Sections.section_name",
            "select Sections.course_id, Sections.section_description"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Sections",
        "table_candidates": [
            "Sections",
            "Departments Sections",
            "Degree_Programs Sections",
            "Addresses Courses Departments Sections",
            "Addresses Departments Sections",
            "Addresses Courses Sections",
            "Addresses Departments Degree_Programs Sections",
            "Addresses Sections"
        ],
        "align_scores": [
            0.9964809417724609,
            7.310746150324121e-05,
            0.00015498118591494858,
            6.459559517679736e-05,
            0.0001299465511692688,
            6.028127245372161e-05,
            0.00015146133955568075,
            6.0788461269112304e-05
        ],
        "align_select": "select Sections.section_description",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the description for the section named k?",
        "gold_select": "select Sections.section_description",
        "select_candidates": [
            "select Sections.section_description",
            "select Sections.section_description, Sections.section_name",
            "select Sections.section_name, Sections.section_description",
            "select Sections.course_id, Sections.section_description"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Sections",
        "table_candidates": [
            "Sections",
            "Departments Sections",
            "Degree_Programs Sections",
            "Addresses Courses Departments Sections",
            "Addresses Departments Sections",
            "Addresses Courses Sections",
            "Addresses Sections",
            "Addresses Departments Degree_Programs Sections"
        ],
        "align_scores": [
            0.9963693618774414,
            7.409263344015926e-05,
            0.00012267658894415945,
            5.994226012262516e-05,
            0.00014992959040682763,
            6.407624459825456e-05,
            0.00014231713430490345,
            5.70847223571036e-05
        ],
        "align_select": "select Sections.section_description",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the description for the section named f?",
        "gold_select": "select Sections.section_description",
        "select_candidates": [
            "select Sections.section_description",
            "select Sections.section_name, Sections.section_description",
            "select Sections.section_description, Sections.section_name",
            "select Sections.course_id, Sections.section_description"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Sections",
        "table_candidates": [
            "Sections",
            "Departments Sections",
            "Degree_Programs Sections",
            "Addresses Courses Departments Sections",
            "Addresses Departments Sections",
            "Addresses Courses Sections",
            "Addresses Sections",
            "Addresses Departments Degree_Programs Sections"
        ],
        "align_scores": [
            0.9965012073516846,
            7.444319635396823e-05,
            0.00015051975788082927,
            6.416712130885571e-05,
            0.00013111003499943763,
            6.013211532263085e-05,
            0.0001527012063888833,
            5.82479260629043e-05
        ],
        "align_select": "select Sections.section_description",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the description for the section named a?",
        "gold_select": "select Sections.section_description",
        "select_candidates": [
            "select Sections.section_description",
            "select Sections.section_name, Sections.section_description",
            "select Sections.section_description, Sections.section_name",
            "select Sections.course_id, Sections.section_description"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Sections",
        "table_candidates": [
            "Sections",
            "Departments Sections",
            "Degree_Programs Sections",
            "Addresses Courses Departments Sections",
            "Addresses Departments Sections",
            "Addresses Courses Sections",
            "Addresses Sections",
            "Addresses Courses Departments Degree_Programs"
        ],
        "align_scores": [
            0.9964501857757568,
            7.604306301800534e-05,
            0.0001590653118910268,
            6.46068001515232e-05,
            0.00013447218225337565,
            6.117366865510121e-05,
            0.0001461934152757749,
            5.8807672758121043e-05
        ],
        "align_select": "select Sections.section_description",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the description for the section named e?",
        "gold_select": "select Sections.section_description",
        "select_candidates": [
            "select Sections.section_description",
            "select Sections.section_description, Sections.section_name",
            "select Sections.course_id, Sections.section_description",
            "select Sections.section_name, Sections.section_description"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Sections",
        "table_candidates": [
            "Sections",
            "Departments Sections",
            "Degree_Programs Sections",
            "Addresses Courses Departments Sections",
            "Addresses Departments Sections",
            "Addresses Courses Sections",
            "Addresses Sections",
            "Addresses Departments Degree_Programs Sections"
        ],
        "align_scores": [
            0.9965324401855469,
            7.624281715834513e-05,
            0.0001304483594140038,
            6.0082187701482326e-05,
            0.00014908263983670622,
            5.7805678807199e-05,
            0.00015824762522242963,
            6.403301085811108e-05
        ],
        "align_select": "select Sections.section_description",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the first name of the students who permanently live in the country Haiti or have the cell phone number 1-879-796-8987x164.",
        "gold_select": "select Students.first_name",
        "select_candidates": [
            "select Students.first_name",
            "select Students.first_name, Students.middle_name, Students.last_name",
            "select Students.first_name, Students.last_name",
            "select Students.first_name, Students.middle_name, Students.cell_mobile_number"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Addresses Students",
        "table_candidates": [
            "Addresses Students",
            "Addresses Departments Degree_Programs Students",
            "Addresses Semesters Students",
            "Addresses Departments Degree_Programs Semesters Students",
            "Addresses Courses Students",
            "Addresses Degree_Programs Students",
            "Addresses Departments Degree_Programs Sections Students"
        ],
        "align_scores": [
            0.41404151916503906,
            0.9234693646430969,
            0.00026343113859184086,
            0.00018622489005792886,
            0.00020943451090715826,
            0.000176353903952986,
            0.00018281264055985957,
            0.00013097471673972905
        ],
        "align_select": "select Students.first_name",
        "align_structure": "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
    },
    {
        "question": "Find the first name of the students who permanently live in the country Haiti or have the cell phone number 436.613.7683.",
        "gold_select": "select Students.first_name",
        "select_candidates": [
            "select Students.first_name",
            "select Students.first_name, Students.last_name",
            "select Students.first_name, Students.middle_name, Students.last_name",
            "select Students.first_name, Students.middle_name, Students.cell_mobile_number"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Addresses Students",
        "table_candidates": [
            "Addresses Students",
            "Addresses Departments Degree_Programs Students",
            "Addresses Semesters Students",
            "Addresses Courses Students",
            "Addresses Departments Degree_Programs Semesters Students",
            "Addresses Degree_Programs Students",
            "Addresses Courses Departments Degree_Programs Students"
        ],
        "align_scores": [
            0.8771435618400574,
            0.9837333559989929,
            0.00019295838137622923,
            0.0001514451578259468,
            0.00022438254381995648,
            0.00019066275854129344,
            0.00016446498921141028,
            0.00011882581020472571
        ],
        "align_select": "select Students.first_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the first name of the students who permanently live in the country Haiti or have the cell phone number 877.549.9067x8723.",
        "gold_select": "select Students.first_name",
        "select_candidates": [
            "select Students.first_name",
            "select Students.first_name, Students.last_name, Students.cell_mobile_number",
            "select Students.first_name, Students.middle_name, Students.last_name",
            "select Students.first_name, Students.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Addresses Students",
        "table_candidates": [
            "Addresses Students",
            "Addresses Departments Degree_Programs Students",
            "Addresses Semesters Students",
            "Addresses Courses Students",
            "Addresses Departments Degree_Programs Semesters Students",
            "Addresses Degree_Programs Students",
            "Addresses Departments Degree_Programs Sections Students"
        ],
        "align_scores": [
            0.36231452226638794,
            0.5813493728637695,
            0.00017990736523643136,
            0.0001369944220641628,
            0.0002409199660178274,
            0.00017881693202070892,
            0.0002336608013138175,
            0.00015303528925869614
        ],
        "align_select": "select Students.first_name",
        "align_structure": "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
    },
    {
        "question": "Find the first name of the students who permanently live in the country Haiti or have the cell phone number 677.401.9382.",
        "gold_select": "select Students.first_name",
        "select_candidates": [
            "select Students.first_name",
            "select Students.first_name, Students.last_name",
            "select Students.first_name, Students.middle_name, Students.last_name",
            "select Students.student_id, Students.first_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Addresses Students",
        "table_candidates": [
            "Addresses Students",
            "Addresses Semesters Students",
            "Addresses Courses Students",
            "Addresses Sections Students",
            "Addresses Degree_Programs Students"
        ],
        "align_scores": [
            0.8655299544334412,
            0.9813438653945923,
            0.0001911502331495285,
            0.00015021578292362392,
            0.0002280944027006626,
            0.00019583241373766214,
            0.00021322944667190313,
            0.00014151024515740573
        ],
        "align_select": "select Students.first_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the first name of the students who permanently live in the country Haiti or have the cell phone number (462)246-7921.",
        "gold_select": "select Students.first_name",
        "select_candidates": [
            "select Students.first_name",
            "select Students.first_name, Students.last_name",
            "select Students.first_name, Students.middle_name, Students.last_name",
            "select Students.first_name, Students.last_name, Students.cell_mobile_number"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Addresses Students",
        "table_candidates": [
            "Addresses Students",
            "Addresses Departments Degree_Programs Students",
            "Addresses Semesters Students",
            "Addresses Courses Students",
            "Addresses Departments Degree_Programs Semesters Students",
            "Addresses Degree_Programs Students",
            "Addresses Departments Degree_Programs Sections Students"
        ],
        "align_scores": [
            0.7862964868545532,
            0.9816032648086548,
            0.00020241623860783875,
            0.0001589049497852102,
            0.0002494978834874928,
            0.0001800185564206913,
            0.00017548218602314591,
            0.00013915887393523008
        ],
        "align_select": "select Students.first_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the first names of the students who live in Haiti permanently or have the cell phone number 1-879-796-8987x164?",
        "gold_select": "select Students.first_name",
        "select_candidates": [
            "select Students.first_name",
            "select Students.first_name, Students.last_name",
            "select Students.first_name, Students.middle_name, Students.last_name",
            "select Students.first_name, Students.last_name, Students.cell_mobile_number"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Addresses Students",
        "table_candidates": [
            "Addresses Students",
            "Addresses Departments Degree_Programs Students",
            "Addresses Semesters Students",
            "Addresses Courses Students",
            "Addresses Departments Degree_Programs Semesters Students",
            "Addresses Departments Degree_Programs Sections Students",
            "Addresses Sections Students",
            "Addresses Departments Sections Students"
        ],
        "align_scores": [
            0.18243996798992157,
            0.9228196740150452,
            0.0002257695305161178,
            0.0002447484293952584,
            0.0002856834908016026,
            0.00031332418438978493,
            0.00016973170568235219,
            0.00016326406330335885
        ],
        "align_select": "select Students.first_name",
        "align_structure": "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the first names of the students who live in Haiti permanently or have the cell phone number 436.613.7683?",
        "gold_select": "select Students.first_name",
        "select_candidates": [
            "select Students.first_name",
            "select Students.first_name, Students.last_name",
            "select Students.first_name, Students.middle_name, Students.last_name",
            "select Students.first_name, Students.last_name, Students.cell_mobile_number"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Addresses Students",
        "table_candidates": [
            "Addresses Students",
            "Addresses Departments Degree_Programs Students",
            "Addresses Courses Students",
            "Addresses Semesters Students",
            "Addresses Departments Degree_Programs Semesters Students",
            "Addresses Courses Departments Degree_Programs Students",
            "Addresses Sections Students",
            "Addresses Departments Degree_Programs Sections Students"
        ],
        "align_scores": [
            0.8952341675758362,
            0.9917119741439819,
            0.00020759034669026732,
            0.00020590468193404377,
            0.0002993813541252166,
            0.0003286929859314114,
            0.00016440714534837753,
            0.0001605790457688272
        ],
        "align_select": "select Students.first_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the first names of the students who live in Haiti permanently or have the cell phone number 877.549.9067x8723?",
        "gold_select": "select Students.first_name",
        "select_candidates": [
            "select Students.first_name",
            "select Students.first_name, Students.last_name",
            "select Students.first_name, Students.middle_name, Students.last_name",
            "select Students.first_name, Students.last_name, Students.cell_mobile_number"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Addresses Students",
        "table_candidates": [
            "Addresses Students",
            "Addresses Departments Degree_Programs Students",
            "Addresses Courses Students",
            "Addresses Semesters Students",
            "Addresses Departments Degree_Programs Semesters Students",
            "Addresses Courses Departments Degree_Programs Students",
            "Addresses Departments Degree_Programs Sections Students",
            "Addresses Sections Students"
        ],
        "align_scores": [
            0.17421793937683105,
            0.4197257161140442,
            0.00024623333592899144,
            0.00019816360145341605,
            0.0002833944745361805,
            0.00028117868350818753,
            0.00017609246424399316,
            0.00015247044211719185
        ],
        "align_select": "select Students.first_name",
        "align_structure": "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the first names of the students who live in Haiti permanently or have the cell phone number 677.401.9382?",
        "gold_select": "select Students.first_name",
        "select_candidates": [
            "select Students.first_name",
            "select Students.first_name, Students.last_name",
            "select Students.first_name, Students.middle_name, Students.last_name",
            "select Students.first_name, Students.last_name, Students.cell_mobile_number"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Addresses Students",
        "table_candidates": [
            "Addresses Students",
            "Addresses Departments Degree_Programs Students",
            "Addresses Courses Students",
            "Addresses Semesters Students",
            "Addresses Departments Degree_Programs Semesters Students",
            "Addresses Sections Students",
            "Addresses Departments Degree_Programs Sections Students",
            "Addresses Departments Sections Students"
        ],
        "align_scores": [
            0.8551961779594421,
            0.9916804432868958,
            0.00021865883900318295,
            0.0002120741264661774,
            0.0003316211514174938,
            0.0004030408163089305,
            0.00016295613022521138,
            0.0001617609814275056
        ],
        "align_select": "select Students.first_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the first names of the students who live in Haiti permanently or have the cell phone number (462)246-7921?",
        "gold_select": "select Students.first_name",
        "select_candidates": [
            "select Students.first_name",
            "select Students.first_name, Students.last_name",
            "select Students.first_name, Students.middle_name, Students.last_name",
            "select Students.first_name, Students.last_name, Students.cell_mobile_number"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Addresses Students",
        "table_candidates": [
            "Addresses Students",
            "Addresses Departments Degree_Programs Students",
            "Addresses Courses Students",
            "Addresses Semesters Students",
            "Addresses Sections Students",
            "Addresses Departments Sections Students",
            "Addresses Departments Students"
        ],
        "align_scores": [
            0.7213332653045654,
            0.990661084651947,
            0.0002259480388602242,
            0.00023527306620962918,
            0.00035323380143381655,
            0.0004290840879548341,
            0.0001699457789072767,
            0.00016439726459793746
        ],
        "align_select": "select Students.first_name",
        "align_structure": "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
    },
    {
        "question": "List all cartoon directed by \"Brandon Vietti\".",
        "gold_select": "select Cartoon.Title",
        "select_candidates": [
            "select Cartoon.Title",
            "select Cartoon.Title, Cartoon.Directed_by",
            "select Cartoon.id",
            "select Cartoon.id, Cartoon.Title, Cartoon.Directed_by"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Cartoon",
        "table_candidates": [
            "Cartoon"
        ],
        "align_scores": [
            0.9944213032722473,
            9.854118252405897e-05,
            0.00018342497060075402,
            6.321973341982812e-05,
            0.0063818530179560184,
            6.348772876663134e-05,
            0.00012350641191005707,
            6.582364585483447e-05
        ],
        "align_select": "select Cartoon.Title",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List all cartoon directed by \"Michael Chang\".",
        "gold_select": "select Cartoon.Title",
        "select_candidates": [
            "select Cartoon.Title",
            "select Cartoon.Title, Cartoon.Directed_by",
            "select Cartoon.id",
            "select Cartoon.id, Cartoon.Title, Cartoon.Directed_by"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Cartoon",
        "table_candidates": [
            "Cartoon"
        ],
        "align_scores": [
            0.9951209425926208,
            9.98154646367766e-05,
            0.00018682370136957616,
            6.395939999492839e-05,
            0.005434185732156038,
            6.580437911907211e-05,
            0.00012567033991217613,
            6.463946920121089e-05
        ],
        "align_select": "select Cartoon.Title",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of all cartoons directed by Brandon Vietti?",
        "gold_select": "select Cartoon.Title",
        "select_candidates": [
            "select Cartoon.Title",
            "select Cartoon.Title, Cartoon.Directed_by",
            "select Cartoon.Title, Cartoon.Channel",
            "select Cartoon.Title, Cartoon.Written_by"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Cartoon",
        "table_candidates": [
            "Cartoon"
        ],
        "align_scores": [
            0.9922826886177063,
            0.000173265696503222,
            0.0002679609169717878,
            5.9554135077632964e-05,
            0.0001821288897190243,
            5.603487807093188e-05,
            0.00020506689907051623,
            5.479983883560635e-05
        ],
        "align_select": "select Cartoon.Title",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of all cartoons directed by Michael Chang?",
        "gold_select": "select Cartoon.Title",
        "select_candidates": [
            "select Cartoon.Title",
            "select Cartoon.Title, Cartoon.Directed_by",
            "select Cartoon.Title, Cartoon.Channel",
            "select Cartoon.Title, Cartoon.Written_by"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Cartoon",
        "table_candidates": [
            "Cartoon"
        ],
        "align_scores": [
            0.992151141166687,
            0.00015881813305895776,
            0.0002551336365286261,
            5.977148248348385e-05,
            0.00016443472122773528,
            5.742032954003662e-05,
            0.00019471564155537635,
            5.466105722007342e-05
        ],
        "align_select": "select Cartoon.Title",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many cartoons were written by \"James Krieg\"?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Cartoon.id",
            "select count(*), Cartoon.Title",
            "select count(*), Cartoon.Written_by"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Cartoon",
        "table_candidates": [
            "Cartoon",
            "TV_series Cartoon"
        ],
        "align_scores": [
            0.9929113984107971,
            9.131609840551391e-05,
            0.00028835091507062316,
            5.550273635890335e-05,
            0.0002713136491365731,
            5.647552461596206e-05,
            0.00031250916072167456,
            6.0312093410175294e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many cartoons were written by \"Matt Wayne\"?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Cartoon.id",
            "select count(*), Cartoon.Title",
            "select count(*), Cartoon.Written_by"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Cartoon",
        "table_candidates": [
            "Cartoon",
            "TV_series Cartoon",
            "TV_Channel Cartoon"
        ],
        "align_scores": [
            0.9941923022270203,
            8.973965304903686e-05,
            0.0002778099733404815,
            5.556417454499751e-05,
            0.00028272223426029086,
            5.7046789152082056e-05,
            0.0002954014635179192,
            6.175191811053082e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many cartoons were written by \"Adam Beechen\"?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Cartoon.id",
            "select count(*), Cartoon.Title",
            "select count(*), Cartoon.Written_by"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Cartoon",
        "table_candidates": [
            "Cartoon",
            "TV_series Cartoon",
            "TV_Channel Cartoon"
        ],
        "align_scores": [
            0.9940221905708313,
            9.233268065145239e-05,
            0.0002759962808340788,
            5.4595526307821274e-05,
            0.00026778236497193575,
            5.6194563512690365e-05,
            0.0002958400291390717,
            6.0069240134907886e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many cartoons were written by \"Michael Jelenic\"?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Cartoon.id",
            "select count(*), Cartoon.Title",
            "select count(*), Cartoon.Written_by"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Cartoon",
        "table_candidates": [
            "Cartoon",
            "TV_series Cartoon",
            "TV_Channel Cartoon"
        ],
        "align_scores": [
            0.9946866035461426,
            0.00013792951358482242,
            0.00029657597769983113,
            7.182107219705358e-05,
            0.00027303045499138534,
            7.277753320522606e-05,
            0.0003091145190410316,
            6.626430695177987e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the number of cartoones written by James Krieg?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Cartoon.id",
            "select count(*), Cartoon.Title",
            "select count(*), Cartoon.Written_by"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Cartoon",
        "table_candidates": [
            "Cartoon",
            "TV_series Cartoon"
        ],
        "align_scores": [
            0.9906095862388611,
            0.00024321404634974897,
            0.0002582278975751251,
            0.00017400876095052809,
            0.0002489750913809985,
            0.0005797970807179809,
            0.00022509611153509468,
            0.001680975197814405
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the number of cartoones written by Matt Wayne?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Cartoon.id",
            "select count(*), Cartoon.Title",
            "select count(*), Cartoon.Written_by"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Cartoon",
        "table_candidates": [
            "Cartoon",
            "TV_series Cartoon"
        ],
        "align_scores": [
            0.9893479347229004,
            0.00035062176175415516,
            0.00025129696587100625,
            0.00021795445354655385,
            0.0002533297229092568,
            0.0007974329055286944,
            0.00021884571469854563,
            0.0016809520311653614
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the number of cartoones written by Adam Beechen?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Cartoon.id",
            "select count(*), Cartoon.Title",
            "select count(*), Cartoon.Written_by"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Cartoon",
        "table_candidates": [
            "Cartoon",
            "TV_series Cartoon"
        ],
        "align_scores": [
            0.9896366000175476,
            0.00030382731347344816,
            0.00024805573048070073,
            0.00018132886907551438,
            0.00024347066937480122,
            0.0005968576297163963,
            0.00023266398056875914,
            0.0022961643990129232
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the number of cartoones written by Michael Jelenic?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Cartoon.id",
            "select count(*), Cartoon.Title",
            "select count(*), Cartoon.Written_by"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Cartoon",
        "table_candidates": [
            "Cartoon",
            "TV_series Cartoon",
            "TV_Channel Cartoon"
        ],
        "align_scores": [
            0.9915195107460022,
            0.0003677656641229987,
            0.00025266880402341485,
            0.00017935789946932346,
            0.0002446453145239502,
            0.0006749969907104969,
            0.00023045000853016973,
            0.0017249088268727064
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List the title of all cartoon directed by \"Ben Jones\" or \"Ben Jones\".",
        "gold_select": "select Cartoon.Title",
        "select_candidates": [
            "select Cartoon.Title",
            "select Cartoon.Title, Cartoon.Directed_by",
            "select Cartoon.Title, Cartoon.id",
            "select Cartoon.Title (or Cartoon.Directed_by)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Cartoon",
        "table_candidates": [
            "Cartoon",
            "TV_series Cartoon",
            "TV_Channel Cartoon",
            "TV_Channel TV_series Cartoon"
        ],
        "align_scores": [
            0.9129279255867004,
            0.0001482715888414532,
            0.0001478287304053083,
            6.274070619838312e-05,
            0.0001662202994339168,
            6.493843829957768e-05,
            0.06539487838745117,
            7.598217780468985e-05
        ],
        "align_select": "select Cartoon.Title",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List the title of all cartoon directed by \"Ben Jones\" or \"Michael Chang\".",
        "gold_select": "select Cartoon.Title",
        "select_candidates": [
            "select Cartoon.Title",
            "select Cartoon.Title, Cartoon.Directed_by",
            "select Cartoon.Title, Cartoon.Channel",
            "select Cartoon.Title, Cartoon.id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Cartoon",
        "table_candidates": [
            "Cartoon"
        ],
        "align_scores": [
            0.9884644150733948,
            0.00020715573919005692,
            0.00016945679089985788,
            6.461080920416862e-05,
            0.00015776927466504276,
            6.714140181429684e-05,
            0.0001700805005384609,
            6.752344779670238e-05
        ],
        "align_select": "select Cartoon.Title",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List the title of all cartoon directed by \"Brandon Vietti\" or \"Brandon Vietti\".",
        "gold_select": "select Cartoon.Title",
        "select_candidates": [
            "select Cartoon.Title",
            "select Cartoon.Title, Cartoon.Directed_by",
            "select Cartoon.Title, Cartoon.Channel",
            "select Cartoon.Title, Cartoon.id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Cartoon",
        "table_candidates": [
            "Cartoon",
            "TV_series Cartoon",
            "TV_Channel Cartoon",
            "TV_Channel TV_series Cartoon"
        ],
        "align_scores": [
            0.9023026823997498,
            0.0001896311587188393,
            0.00016722326108720154,
            7.33621563995257e-05,
            0.000180383853148669,
            6.98755684425123e-05,
            0.00020034328917972744,
            7.273008668562397e-05
        ],
        "align_select": "select Cartoon.Title",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List the title of all cartoon directed by \"Michael Chang\" or \"Brandon Vietti\".",
        "gold_select": "select Cartoon.Title",
        "select_candidates": [
            "select Cartoon.Title",
            "select Cartoon.Title, Cartoon.Directed_by",
            "select Cartoon.Title, Cartoon.Channel",
            "select Cartoon.Title, Cartoon.id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Cartoon",
        "table_candidates": [
            "Cartoon"
        ],
        "align_scores": [
            0.9887265563011169,
            0.00022849231027066708,
            0.00018589806859381497,
            6.569571269210428e-05,
            0.00018326501594856381,
            6.711336027365178e-05,
            0.0002125287865055725,
            7.041047501843423e-05
        ],
        "align_select": "select Cartoon.Title",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the titles of all cartoons directed by Ben Jones or Ben Jones?",
        "gold_select": "select Cartoon.Title",
        "select_candidates": [
            "select Cartoon.Title",
            "select Cartoon.Title, Cartoon.Directed_by",
            "select Cartoon.Title, Cartoon.Directed_by, Cartoon.Written_by",
            "select Cartoon.Title, Cartoon.Directed_by, Cartoon.id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Cartoon",
        "table_candidates": [
            "Cartoon"
        ],
        "align_scores": [
            0.9399080872535706,
            0.0004267341282684356,
            0.00019475165754556656,
            7.270844798767939e-05,
            0.0001459372870158404,
            7.611212640767917e-05,
            0.00015127804363146424,
            8.249024540418759e-05
        ],
        "align_select": "select Cartoon.Title",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the titles of all cartoons directed by Ben Jones or Michael Chang?",
        "gold_select": "select Cartoon.Title",
        "select_candidates": [
            "select Cartoon.Title",
            "select Cartoon.Title, Cartoon.Directed_by",
            "select Cartoon.Title, Cartoon.Channel",
            "select Cartoon.Title (or Cartoon.Directed_by)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Cartoon",
        "table_candidates": [
            "Cartoon"
        ],
        "align_scores": [
            0.9916529059410095,
            0.00041913538007065654,
            0.0002141997974831611,
            6.777884118491784e-05,
            0.00017207041673827916,
            6.326412403723225e-05,
            0.8639083504676819,
            7.98150576883927e-05
        ],
        "align_select": "select Cartoon.Title",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the titles of all cartoons directed by Brandon Vietti or Brandon Vietti?",
        "gold_select": "select Cartoon.Title",
        "select_candidates": [
            "select Cartoon.Title",
            "select Cartoon.Title, Cartoon.Directed_by",
            "select Cartoon.Title (or Cartoon.Directed_by)",
            "select Cartoon.Title (or Cartoon.Written_by)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Cartoon",
        "table_candidates": [
            "Cartoon"
        ],
        "align_scores": [
            0.9636202454566956,
            0.0006595306913368404,
            0.0001987653668038547,
            8.78367354744114e-05,
            0.6870583891868591,
            8.684462954988703e-05,
            0.003776304889470339,
            8.615455590188503e-05
        ],
        "align_select": "select Cartoon.Title",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the titles of all cartoons directed by Michael Chang or Brandon Vietti?",
        "gold_select": "select Cartoon.Title",
        "select_candidates": [
            "select Cartoon.Title",
            "select Cartoon.Title, Cartoon.Directed_by",
            "select Cartoon.Title, Cartoon.Channel",
            "select Cartoon.Title, Cartoon.id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Cartoon",
        "table_candidates": [
            "Cartoon"
        ],
        "align_scores": [
            0.9889722466468811,
            0.0004191495245322585,
            0.00024394027423113585,
            6.979545287322253e-05,
            0.00020427715207915753,
            6.432370719267055e-05,
            0.00025422716862522066,
            7.168224692577496e-05
        ],
        "align_select": "select Cartoon.Title",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the Package Option of TV Channel with serial name \"Classica\"?",
        "gold_select": "select TV_Channel.Package_Option",
        "select_candidates": [
            "select TV_Channel.Package_Option",
            "select TV_Channel.Package_Option, TV_Channel.series_name",
            "select TV_Channel.Package_Option, TV_Channel.Pay_per_view_PPV",
            "select TV_Channel.Package_Option, t0.c9"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel",
            "TV_Channel TV_series Cartoon",
            "TV_Channel TV_series"
        ],
        "align_scores": [
            0.9947803616523743,
            9.47352236835286e-05,
            0.00013443936768453568,
            6.430740177165717e-05,
            0.00020680209854617715,
            6.657638732576743e-05,
            0.0004279548011254519,
            6.929699156899005e-05
        ],
        "align_select": "select TV_Channel.Package_Option",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the Package Option of TV Channel with serial name \"MTV Music\"?",
        "gold_select": "select TV_Channel.Package_Option",
        "select_candidates": [
            "select TV_Channel.Package_Option",
            "select TV_Channel.Package_Option, TV_Channel.Pay_per_view_PPV",
            "select TV_Channel.Package_Option, TV_Channel.series_name",
            "select TV_Channel.Package_Option, t0.c9"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel",
            "TV_Channel TV_series Cartoon",
            "TV_Channel TV_series"
        ],
        "align_scores": [
            0.99367356300354,
            9.615429735276848e-05,
            0.00021474456298165023,
            6.99849333614111e-05,
            0.00012158605386503041,
            6.459121505031362e-05,
            0.0004261787689756602,
            7.378077862085775e-05
        ],
        "align_select": "select TV_Channel.Package_Option",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the Package Option of TV Channel with serial name \"MTV Live HD\"?",
        "gold_select": "select TV_Channel.Package_Option",
        "select_candidates": [
            "select TV_Channel.Package_Option",
            "select TV_Channel.Hight_definition_TV, TV_Channel.Package_Option",
            "select TV_Channel.Package_Option, TV_Channel.Pay_per_view_PPV",
            "select TV_Channel.Package_Option, TV_Channel.series_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel",
            "TV_Channel TV_series Cartoon",
            "TV_Channel TV_series",
            "TV_series TV_Channel"
        ],
        "align_scores": [
            0.9943594336509705,
            9.90408516372554e-05,
            0.00022263127902988344,
            7.107699639163911e-05,
            0.0002450865868013352,
            7.332340464927256e-05,
            0.00013122684322297573,
            6.667600973742083e-05
        ],
        "align_select": "select TV_Channel.Package_Option",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the Package Options of the TV Channels whose series names are Classica?",
        "gold_select": "select TV_Channel.Package_Option",
        "select_candidates": [
            "select TV_Channel.Package_Option",
            "select TV_Channel.Package_Option, TV_Channel.series_name",
            "select TV_Channel.Package_Option, TV_Channel.Pay_per_view_PPV",
            "select TV_Channel.Package_Option, TV_Channel.Pixel_aspect_ratio_PAR"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel"
        ],
        "align_scores": [
            0.992824912071228,
            8.808031998341903e-05,
            0.00016218445671256632,
            6.293953629210591e-05,
            0.0002821959787979722,
            6.687193672405556e-05,
            0.00023034479818306863,
            6.425254105124623e-05
        ],
        "align_select": "select TV_Channel.Package_Option",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the Package Options of the TV Channels whose series names are MTV Music?",
        "gold_select": "select TV_Channel.Package_Option",
        "select_candidates": [
            "select TV_Channel.Package_Option",
            "select TV_Channel.Package_Option, TV_Channel.series_name",
            "select TV_Channel.Hight_definition_TV, TV_Channel.Package_Option",
            "select TV_Channel.Package_Option, TV_Channel.Pay_per_view_PPV"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel"
        ],
        "align_scores": [
            0.4620443880558014,
            8.179950236808509e-05,
            0.00016131368465721607,
            6.613490404561162e-05,
            0.00021395363728515804,
            7.033329893602058e-05,
            0.00022458676539827138,
            6.793797365389764e-05
        ],
        "align_select": "select TV_Channel.Package_Option",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the Package Options of the TV Channels whose series names are MTV Live HD?",
        "gold_select": "select TV_Channel.Package_Option",
        "select_candidates": [
            "select TV_Channel.Package_Option",
            "select TV_Channel.Package_Option, TV_Channel.series_name",
            "select TV_Channel.Hight_definition_TV, TV_Channel.Package_Option",
            "select TV_Channel.Package_Option, TV_Channel.Pay_per_view_PPV"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel"
        ],
        "align_scores": [
            0.5776394009590149,
            8.194409747375175e-05,
            0.00016496899479534477,
            6.61147860228084e-05,
            0.00022662896662950516,
            6.741586548741907e-05,
            0.0002396315394435078,
            6.64591570966877e-05
        ],
        "align_select": "select TV_Channel.Package_Option",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many TV Channel using language Italian?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), TV_Channel.Language",
            "select count(*), TV_Channel.Country",
            "select count(*), TV_Channel.id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel"
        ],
        "align_scores": [
            0.9956737160682678,
            8.840275404509157e-05,
            0.00025276467204093933,
            6.618089537369087e-05,
            0.00027354585472494364,
            5.995564060867764e-05,
            0.00024504403700120747,
            6.135265721241012e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many TV Channels use the Italian language?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), TV_Channel.Language",
            "select count(*), TV_Channel.Language, TV_Channel.Country",
            "select count(*), TV_Channel.Language, TV_Channel.Content"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel"
        ],
        "align_scores": [
            0.9939472675323486,
            8.641900785733014e-05,
            0.00027314110775478184,
            7.114548498066142e-05,
            0.00010276858665747568,
            5.935139051871374e-05,
            0.00010013263090513647,
            5.9029891417594627e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the TV Channel that shows the cartoon \"Journey to the Center of the Bat!\"? List the TV Channel's series name.",
        "gold_select": "select TV_Channel.series_name",
        "select_candidates": [
            "select TV_Channel.series_name",
            "select TV_Channel.series_name, TV_series.Channel",
            "select TV_Channel.series_name, Cartoon.Channel",
            "select TV_Channel.id, TV_Channel.series_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel TV_series Cartoon",
            "TV_Channel Cartoon",
            "TV_Channel TV_Channel TV_series Cartoon"
        ],
        "align_scores": [
            0.9893827438354492,
            0.00011596400145208463,
            0.0007337318384088576,
            8.291230915347114e-05,
            0.001171535230241716,
            9.61979603744112e-05,
            0.00023813199368305504,
            9.593120194040239e-05
        ],
        "align_select": "select TV_Channel.series_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the TV Channel that shows the cartoon \"Evil Under the Sea!\"? List the TV Channel's series name.",
        "gold_select": "select TV_Channel.series_name",
        "select_candidates": [
            "select TV_Channel.series_name",
            "select TV_Channel.series_name, TV_series.Channel",
            "select TV_Channel.series_name, Cartoon.Channel",
            "select TV_Channel.id, TV_Channel.series_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel TV_series Cartoon",
            "TV_Channel Cartoon",
            "TV_Channel TV_Channel TV_series Cartoon"
        ],
        "align_scores": [
            0.9918972253799438,
            0.00011099789844593033,
            0.000631422211881727,
            7.94463194324635e-05,
            0.001025954494252801,
            8.95871125976555e-05,
            0.00020527017477434129,
            9.098085865844041e-05
        ],
        "align_select": "select TV_Channel.series_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the TV Channel that shows the cartoon \"Dawn of the Dead Man!\"? List the TV Channel's series name.",
        "gold_select": "select TV_Channel.series_name",
        "select_candidates": [
            "select TV_Channel.series_name",
            "select TV_Channel.series_name, TV_series.Channel",
            "select TV_Channel.series_name, Cartoon.Channel",
            "select TV_Channel.id, TV_Channel.series_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel TV_series Cartoon",
            "TV_Channel Cartoon",
            "TV_Channel TV_Channel TV_series Cartoon"
        ],
        "align_scores": [
            0.9887101054191589,
            0.00010901202767854556,
            0.0006989926914684474,
            8.108848851406947e-05,
            0.0010944980895146728,
            9.053738904185593e-05,
            0.00022878528397995979,
            9.209526615450159e-05
        ],
        "align_select": "select TV_Channel.series_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the TV Channel that shows the cartoon \"Day of the Dark Knight!\"? List the TV Channel's series name.",
        "gold_select": "select TV_Channel.series_name",
        "select_candidates": [
            "select TV_Channel.series_name",
            "select TV_Channel.series_name, TV_series.Channel",
            "select TV_Channel.series_name, Cartoon.Channel",
            "select TV_Channel.id, TV_Channel.series_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel TV_series Cartoon",
            "TV_Channel Cartoon",
            "TV_Channel TV_Channel TV_series Cartoon"
        ],
        "align_scores": [
            0.9904217720031738,
            0.00010601692338241264,
            0.0006005237810313702,
            8.27138646855019e-05,
            0.0009681605151854455,
            9.046515333466232e-05,
            0.00023077920195646584,
            9.358378883916885e-05
        ],
        "align_select": "select TV_Channel.series_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the TV Channel that shows the cartoon \"Enter the Outsiders!\"? List the TV Channel's series name.",
        "gold_select": "select TV_Channel.series_name",
        "select_candidates": [
            "select TV_Channel.series_name",
            "select TV_Channel.series_name, TV_series.Channel",
            "select TV_Channel.series_name, Cartoon.Channel",
            "select TV_Channel.id, TV_Channel.series_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel TV_series Cartoon",
            "TV_Channel Cartoon",
            "TV_Channel TV_Channel TV_series Cartoon"
        ],
        "align_scores": [
            0.9916694164276123,
            0.00010764970647869632,
            0.0005647075595334172,
            7.82032948336564e-05,
            0.00097006990108639,
            8.763794903643429e-05,
            0.00022294606606010348,
            8.847883145790547e-05
        ],
        "align_select": "select TV_Channel.series_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List the title of all Cartoons showed on TV Channel with series name \"MTV Classic\".",
        "gold_select": "select Cartoon.Title",
        "select_candidates": [
            "select Cartoon.Title",
            "select Cartoon.Title, TV_Channel.series_name",
            "select Cartoon.Title, TV_Channel.Country",
            "select Cartoon.Title, TV_Channel.Language"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel TV_series Cartoon",
            "TV_Channel Cartoon"
        ],
        "align_scores": [
            0.9883329272270203,
            0.00015922253078315407,
            0.0002077834215015173,
            6.746280996594578e-05,
            0.0002751508145593107,
            6.357351958286017e-05,
            0.00020325520017649978,
            6.421963917091489e-05
        ],
        "align_select": "select Cartoon.Title",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List the title of all Cartoons showed on TV Channel with series name \"MTV Rocks\".",
        "gold_select": "select Cartoon.Title",
        "select_candidates": [
            "select Cartoon.Title",
            "select Cartoon.Title, TV_Channel.series_name",
            "select Cartoon.Title, TV_Channel.Country",
            "select Cartoon.Title, TV_Channel.Language"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel TV_series Cartoon",
            "TV_Channel Cartoon"
        ],
        "align_scores": [
            0.9922623634338379,
            0.00014724252105224878,
            0.00020949380996171385,
            6.521397881442681e-05,
            0.00024139501329045743,
            6.270482117542997e-05,
            0.00019249474280513823,
            6.264003604883328e-05
        ],
        "align_select": "select Cartoon.Title",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List the title of all Cartoons showed on TV Channel with series name \"Classica\".",
        "gold_select": "select Cartoon.Title",
        "select_candidates": [
            "select Cartoon.Title",
            "select Cartoon.Title, TV_Channel.series_name",
            "select Cartoon.Title, TV_Channel.Country",
            "select Cartoon.Title, TV_Channel.Language"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel TV_series Cartoon",
            "TV_Channel Cartoon"
        ],
        "align_scores": [
            0.991381824016571,
            0.00015980064927134663,
            0.00020787635003216565,
            6.63128012092784e-05,
            0.00022223468113224953,
            6.234694592421874e-05,
            0.00019162835087627172,
            6.29260393907316e-05
        ],
        "align_select": "select Cartoon.Title",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List the title of all Cartoons showed on TV Channel with series name \"MTV Hits\".",
        "gold_select": "select Cartoon.Title",
        "select_candidates": [
            "select Cartoon.Title",
            "select Cartoon.Title, TV_Channel.series_name",
            "select Cartoon.Title, TV_Channel.Country",
            "select Cartoon.Title, TV_Channel.Language"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel TV_series Cartoon",
            "TV_Channel Cartoon"
        ],
        "align_scores": [
            0.9916609525680542,
            0.0001715560065349564,
            0.00021922851738054305,
            6.515540735563263e-05,
            0.00025207590078935027,
            6.279643275775015e-05,
            0.00019059551414102316,
            6.263489922275767e-05
        ],
        "align_select": "select Cartoon.Title",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List the title of all Cartoons showed on TV Channel with series name \"MTV Music\".",
        "gold_select": "select Cartoon.Title",
        "select_candidates": [
            "select Cartoon.Title",
            "select Cartoon.Title, TV_Channel.series_name",
            "select Cartoon.Title, TV_Channel.Country",
            "select Cartoon.Title, TV_Channel.Language"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel TV_series Cartoon",
            "TV_Channel Cartoon"
        ],
        "align_scores": [
            0.9792018532752991,
            0.00015738524962216616,
            0.00020789042173419148,
            6.538265733979642e-05,
            0.00025995014584623277,
            6.410534115275368e-05,
            0.00020311260595917702,
            6.369963375618681e-05
        ],
        "align_select": "select Cartoon.Title",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the title of all the cartools that are on the TV Channel with the series name \"MTV Classic\"?",
        "gold_select": "select Cartoon.Title",
        "select_candidates": [
            "select Cartoon.Title",
            "select Cartoon.Title, TV_Channel.Country",
            "select Cartoon.Title, TV_Channel.series_name",
            "select Cartoon.Title, TV_Channel.Language"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel TV_series Cartoon",
            "TV_Channel Cartoon",
            "TV_Channel TV_series"
        ],
        "align_scores": [
            0.835392415523529,
            0.00017429571016691625,
            0.0002467560116201639,
            6.682610546704382e-05,
            0.0003350407932884991,
            7.4055053119082e-05,
            0.00020947703160345554,
            6.690619193250313e-05
        ],
        "align_select": "select Cartoon.Title",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the title of all the cartools that are on the TV Channel with the series name \"MTV Rocks\"?",
        "gold_select": "select Cartoon.Title",
        "select_candidates": [
            "select Cartoon.Title",
            "select Cartoon.Title, TV_Channel.Country",
            "select Cartoon.Title, TV_Channel.series_name",
            "select Cartoon.Title, TV_Channel.Language"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel TV_series Cartoon",
            "TV_Channel Cartoon",
            "TV_Channel TV_series"
        ],
        "align_scores": [
            0.9114521145820618,
            0.00016455596778541803,
            0.0002329858543816954,
            6.684114487143233e-05,
            0.0003000339784193784,
            7.169182208599523e-05,
            0.00020303999190218747,
            6.642748485319316e-05
        ],
        "align_select": "select Cartoon.Title",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the title of all the cartools that are on the TV Channel with the series name \"Classica\"?",
        "gold_select": "select Cartoon.Title",
        "select_candidates": [
            "select Cartoon.Title",
            "select Cartoon.Title, TV_Channel.Country",
            "select Cartoon.Title, TV_Channel.series_name",
            "select Cartoon.Title, TV_Channel.Language"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel TV_series Cartoon",
            "TV_Channel Cartoon",
            "TV_Channel TV_series"
        ],
        "align_scores": [
            0.922380805015564,
            0.00018110423116013408,
            0.00022307067411020398,
            6.48890490992926e-05,
            0.00032052950700744987,
            7.226887828437611e-05,
            0.00023750978289172053,
            6.483065226348117e-05
        ],
        "align_select": "select Cartoon.Title",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the title of all the cartools that are on the TV Channel with the series name \"MTV Hits\"?",
        "gold_select": "select Cartoon.Title",
        "select_candidates": [
            "select Cartoon.Title",
            "select Cartoon.Title, TV_Channel.Country",
            "select Cartoon.Title, TV_Channel.series_name",
            "select Cartoon.Title, TV_Channel.Language"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel TV_series Cartoon",
            "TV_Channel Cartoon",
            "TV_Channel TV_series"
        ],
        "align_scores": [
            0.9388018846511841,
            0.00017785585077945143,
            0.00026483082910999656,
            6.743605626979843e-05,
            0.0003439548599999398,
            7.236549572553486e-05,
            0.00022633076878264546,
            6.707919237669557e-05
        ],
        "align_select": "select Cartoon.Title",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the title of all the cartools that are on the TV Channel with the series name \"MTV Music\"?",
        "gold_select": "select Cartoon.Title",
        "select_candidates": [
            "select Cartoon.Title",
            "select Cartoon.Title, TV_Channel.Country",
            "select Cartoon.Title, TV_Channel.series_name",
            "select Cartoon.Title, TV_Channel.Language"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel TV_series Cartoon",
            "TV_Channel Cartoon",
            "TV_Channel TV_series"
        ],
        "align_scores": [
            0.2861676514148712,
            0.00014068011660128832,
            0.0002332721633138135,
            6.523698539240286e-05,
            0.0002501094713807106,
            6.943517655599862e-05,
            0.00020049730665050447,
            6.497176218545064e-05
        ],
        "align_select": "select Cartoon.Title",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the air date of TV series with Episode \"Emily\"?",
        "gold_select": "select TV_series.Air_Date",
        "select_candidates": [
            "select TV_series.Air_Date",
            "select TV_series.id, TV_series.Air_Date",
            "select TV_series.Air_Date (or TV_series.Rating)",
            "select TV_series.Air_Date (http://TV_series.Air_Date)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_series",
        "table_candidates": [
            "TV_series"
        ],
        "align_scores": [
            0.9958772659301758,
            8.675721619511023e-05,
            0.00013843244232703,
            6.553177809109911e-05,
            0.000489157042466104,
            6.568475509993732e-05,
            0.0034585886169224977,
            7.726973126409575e-05
        ],
        "align_select": "select TV_series.Air_Date",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the air date of TV series with Episode \"Blowback\"?",
        "gold_select": "select TV_series.Air_Date",
        "select_candidates": [
            "select TV_series.Air_Date",
            "select TV_series.id, TV_series.Air_Date",
            "select TV_series.Air_Date (or TV_series.Rating)",
            "select TV_series.Air_Date (http://TV_series.Air_Date)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_series",
        "table_candidates": [
            "TV_series"
        ],
        "align_scores": [
            0.9960092306137085,
            9.179304470308125e-05,
            0.00014253238623496145,
            6.720898090861738e-05,
            0.0004423468781169504,
            6.735918577760458e-05,
            0.0037663260009139776,
            8.187972707673907e-05
        ],
        "align_select": "select TV_series.Air_Date",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the air date of TV series with Episode \"Winterland\"?",
        "gold_select": "select TV_series.Air_Date",
        "select_candidates": [
            "select TV_series.Air_Date",
            "select TV_series.id, TV_series.Air_Date",
            "select TV_series.Air_Date (or TV_series.Rating)",
            "select TV_series.Air_Date (http://TV_series.Air_Date)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_series",
        "table_candidates": [
            "TV_series"
        ],
        "align_scores": [
            0.9960885047912598,
            8.712474664207548e-05,
            0.00013951391156297177,
            6.501886673504487e-05,
            0.0005083722644485533,
            6.425910396501422e-05,
            0.0040341708809137344,
            7.509917486459017e-05
        ],
        "align_select": "select TV_series.Air_Date",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the air date of TV series with Episode \"Home By Another Way\"?",
        "gold_select": "select TV_series.Air_Date",
        "select_candidates": [
            "select TV_series.Air_Date",
            "select TV_series.id, TV_series.Air_Date",
            "select TV_series.Air_Date (or TV_series.Rating)",
            "select TV_series.Air_Date, TV_series.Rating"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_series",
        "table_candidates": [
            "TV_series"
        ],
        "align_scores": [
            0.9957036375999451,
            8.35886166896671e-05,
            0.0001486573601141572,
            6.408450281014666e-05,
            0.00047723460011184216,
            6.414240488084033e-05,
            0.00013738960842601955,
            5.320318814483471e-05
        ],
        "align_select": "select TV_series.Air_Date",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the air date of TV series with Episode \"Friendly Skies\"?",
        "gold_select": "select TV_series.Air_Date",
        "select_candidates": [
            "select TV_series.Air_Date",
            "select TV_series.id, TV_series.Air_Date",
            "select TV_series.Air_Date (or TV_series.Rating)",
            "select TV_series.Air_Date (http://TV_series.Air_Date)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_series",
        "table_candidates": [
            "TV_series"
        ],
        "align_scores": [
            0.9958431124687195,
            9.381663403473794e-05,
            0.00015045117470435798,
            6.74699476803653e-05,
            0.000584810390137136,
            6.648374983342364e-05,
            0.0042729489505290985,
            7.911608554422855e-05
        ],
        "align_select": "select TV_series.Air_Date",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "When did the episode \"Emily\" air?",
        "gold_select": "select TV_series.Air_Date",
        "select_candidates": [
            "select TV_series.Air_Date",
            "select TV_series.id, TV_series.Air_Date",
            "select TV_series.Air_Date, TV_series.Rating",
            "select Cartoon.Directed_by"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_series",
        "table_candidates": [
            "TV_series"
        ],
        "align_scores": [
            0.9950072765350342,
            7.956883200677112e-05,
            0.00015373351925518364,
            6.472582754213363e-05,
            0.00012866621545981616,
            5.901665645069443e-05,
            0.011326925829052925,
            8.136097312672064e-05
        ],
        "align_select": "select TV_series.Air_Date",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "When did the episode \"Blowback\" air?",
        "gold_select": "select TV_series.Air_Date",
        "select_candidates": [
            "select TV_series.Air_Date",
            "select TV_series.id, TV_series.Air_Date",
            "select TV_series.Air_Date, TV_series.Rating",
            "select Cartoon.Directed_by"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_series",
        "table_candidates": [
            "TV_series"
        ],
        "align_scores": [
            0.99468994140625,
            8.64386311150156e-05,
            0.00016342636081390083,
            6.528882659040391e-05,
            0.00013227283488959074,
            6.058879807824269e-05,
            0.01816379837691784,
            8.819385402603075e-05
        ],
        "align_select": "select TV_series.Air_Date",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "When did the episode \"Winterland\" air?",
        "gold_select": "select TV_series.Air_Date",
        "select_candidates": [
            "select TV_series.Air_Date",
            "select TV_series.id, TV_series.Air_Date",
            "select TV_series.Air_Date, TV_series.Rating",
            "select Cartoon.Directed_by"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_series",
        "table_candidates": [
            "TV_series"
        ],
        "align_scores": [
            0.995043158531189,
            8.342957880813628e-05,
            0.00015000280109234154,
            6.474687688751146e-05,
            0.0001219865953316912,
            5.9169320593355224e-05,
            0.012268380261957645,
            8.100824925350025e-05
        ],
        "align_select": "select TV_series.Air_Date",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "When did the episode \"Home By Another Way\" air?",
        "gold_select": "select TV_series.Air_Date",
        "select_candidates": [
            "select TV_series.Air_Date",
            "select TV_series.id, TV_series.Air_Date",
            "select TV_series.Air_Date, TV_series.Rating",
            "select TV_series.Air_Date, TV_series.Weekly_Rank"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_series",
        "table_candidates": [
            "TV_series"
        ],
        "align_scores": [
            0.9945387244224548,
            8.546638127882034e-05,
            0.0001570284803165123,
            6.212308653630316e-05,
            0.00012824313307646662,
            5.8218498452333733e-05,
            0.00011915212235180661,
            6.313309131655842e-05
        ],
        "align_select": "select TV_series.Air_Date",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "When did the episode \"Friendly Skies\" air?",
        "gold_select": "select TV_series.Air_Date",
        "select_candidates": [
            "select TV_series.Air_Date",
            "select TV_series.id, TV_series.Air_Date",
            "select TV_series.Air_Date, TV_series.Rating",
            "select TV_series.Air_Date, TV_series.Weekly_Rank"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_series",
        "table_candidates": [
            "TV_series"
        ],
        "align_scores": [
            0.9951967597007751,
            8.4326857177075e-05,
            0.0001585870486451313,
            6.4824715082068e-05,
            0.00013573029718827456,
            5.9865484217880294e-05,
            0.00011973229993600398,
            6.389601185219362e-05
        ],
        "align_select": "select TV_series.Air_Date",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is Weekly Rank of TV series with Episode \"Emily\"?",
        "gold_select": "select TV_series.Weekly_Rank",
        "select_candidates": [
            "select TV_series.Weekly_Rank",
            "select TV_series.id, TV_series.Weekly_Rank",
            "select TV_series.Weekly_Rank, TV_series.Viewers_m",
            "select TV_series.Weekly_Rank, TV_series.Channel"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_series",
        "table_candidates": [
            "TV_series",
            "TV_Channel TV_series"
        ],
        "align_scores": [
            0.9962754249572754,
            9.752969344845042e-05,
            0.00015743054973427206,
            6.71252710162662e-05,
            0.00013401520845945925,
            6.324831338133663e-05,
            0.00017495773499831557,
            5.996925392537378e-05
        ],
        "align_select": "select TV_series.Weekly_Rank",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is Weekly Rank of TV series with Episode \"Blowback\"?",
        "gold_select": "select TV_series.Weekly_Rank",
        "select_candidates": [
            "select TV_series.Weekly_Rank",
            "select TV_series.id, TV_series.Weekly_Rank",
            "select TV_series.Weekly_Rank, TV_series.Viewers_m",
            "select TV_series.Weekly_Rank, TV_series.Channel"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_series",
        "table_candidates": [
            "TV_series"
        ],
        "align_scores": [
            0.9962238073348999,
            0.0001143485278589651,
            0.00015979746240191162,
            7.11294705979526e-05,
            0.00012981069448869675,
            6.465537444455549e-05,
            0.00017131342610809952,
            6.170258711790666e-05
        ],
        "align_select": "select TV_series.Weekly_Rank",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is Weekly Rank of TV series with Episode \"Winterland\"?",
        "gold_select": "select TV_series.Weekly_Rank",
        "select_candidates": [
            "select TV_series.Weekly_Rank",
            "select TV_series.id, TV_series.Weekly_Rank",
            "select TV_series.Weekly_Rank, TV_series.Viewers_m",
            "select TV_series.Weekly_Rank, TV_series.Channel"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_series",
        "table_candidates": [
            "TV_series",
            "TV_Channel TV_series"
        ],
        "align_scores": [
            0.9962544441223145,
            9.778727689990774e-05,
            0.00015293245087377727,
            6.636195030296221e-05,
            0.00013525495887733996,
            6.214471795829013e-05,
            0.00016955180035438389,
            5.9677160606952384e-05
        ],
        "align_select": "select TV_series.Weekly_Rank",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is Weekly Rank of TV series with Episode \"Home By Another Way\"?",
        "gold_select": "select TV_series.Weekly_Rank",
        "select_candidates": [
            "select TV_series.Weekly_Rank",
            "select TV_series.id, TV_series.Weekly_Rank",
            "select TV_series.Weekly_Rank, TV_series.Viewers_m",
            "select TV_series.Weekly_Rank, TV_series.Channel"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_series",
        "table_candidates": [
            "TV_series",
            "TV_Channel TV_series"
        ],
        "align_scores": [
            0.9961183071136475,
            0.00010251704225083813,
            0.00017180385475512594,
            6.838255649199709e-05,
            0.00014500388351734728,
            6.24620370217599e-05,
            0.00017816305626183748,
            6.22596126049757e-05
        ],
        "align_select": "select TV_series.Weekly_Rank",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is Weekly Rank of TV series with Episode \"Friendly Skies\"?",
        "gold_select": "select TV_series.Weekly_Rank",
        "select_candidates": [
            "select TV_series.Weekly_Rank",
            "select TV_series.id, TV_series.Weekly_Rank",
            "select TV_series.Weekly_Rank, TV_series.Viewers_m",
            "select TV_series.Weekly_Rank, TV_series.Channel"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_series",
        "table_candidates": [
            "TV_series"
        ],
        "align_scores": [
            0.9961181879043579,
            0.00011336521856719628,
            0.0001662702561588958,
            7.051610009511933e-05,
            0.00014350474521052092,
            6.510461389552802e-05,
            0.00018666646792553365,
            6.32930823485367e-05
        ],
        "align_select": "select TV_series.Weekly_Rank",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the weekly rank for the episode \"Emily\"?",
        "gold_select": "select TV_series.Weekly_Rank",
        "select_candidates": [
            "select TV_series.Weekly_Rank",
            "select TV_series.Weekly_Rank, TV_series.Viewers_m",
            "select TV_series.Weekly_Rank, TV_series.Air_Date",
            "select TV_series.Weekly_Rank, TV_series.Channel"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_series",
        "table_candidates": [
            "TV_series"
        ],
        "align_scores": [
            0.9960262775421143,
            7.9527118941769e-05,
            0.00014335619925986975,
            6.069613300496712e-05,
            0.00011828193964902312,
            5.9403548220871016e-05,
            0.0001640333648538217,
            5.865449202246964e-05
        ],
        "align_select": "select TV_series.Weekly_Rank",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the weekly rank for the episode \"Blowback\"?",
        "gold_select": "select TV_series.Weekly_Rank",
        "select_candidates": [
            "select TV_series.Weekly_Rank",
            "select TV_series.Weekly_Rank, TV_series.Viewers_m",
            "select TV_series.Weekly_Rank, TV_series.Air_Date",
            "select TV_series.Weekly_Rank, TV_series.Channel"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_series",
        "table_candidates": [
            "TV_series",
            "TV_Channel TV_series"
        ],
        "align_scores": [
            0.996273398399353,
            8.768843690631911e-05,
            0.00013784770271740854,
            6.190995190991089e-05,
            0.00011846738925669342,
            6.026035043760203e-05,
            0.00016162669635377824,
            5.9812758991029114e-05
        ],
        "align_select": "select TV_series.Weekly_Rank",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the weekly rank for the episode \"Winterland\"?",
        "gold_select": "select TV_series.Weekly_Rank",
        "select_candidates": [
            "select TV_series.Weekly_Rank",
            "select TV_series.Weekly_Rank, TV_series.Viewers_m",
            "select TV_series.Weekly_Rank, TV_series.Air_Date",
            "select TV_series.Weekly_Rank, TV_series.Channel"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_series",
        "table_candidates": [
            "TV_series",
            "TV_Channel TV_series"
        ],
        "align_scores": [
            0.9957414865493774,
            8.021655958145857e-05,
            0.00014506891602650285,
            6.103591294959188e-05,
            0.00011584696039790288,
            5.867351501365192e-05,
            0.00015663607337046415,
            5.8198344049742445e-05
        ],
        "align_select": "select TV_series.Weekly_Rank",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the weekly rank for the episode \"Home By Another Way\"?",
        "gold_select": "select TV_series.Weekly_Rank",
        "select_candidates": [
            "select TV_series.Weekly_Rank",
            "select TV_series.Weekly_Rank, TV_series.Viewers_m",
            "select TV_series.Weekly_Rank, TV_series.Air_Date",
            "select TV_series.Weekly_Rank, TV_series.Channel"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_series",
        "table_candidates": [
            "TV_series",
            "TV_Channel TV_series"
        ],
        "align_scores": [
            0.996076762676239,
            8.00985362729989e-05,
            0.0001509762805653736,
            6.030991062289104e-05,
            0.00012491454253904521,
            5.9404399507911876e-05,
            0.00014947167073842138,
            5.910181062063202e-05
        ],
        "align_select": "select TV_series.Weekly_Rank",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the weekly rank for the episode \"Friendly Skies\"?",
        "gold_select": "select TV_series.Weekly_Rank",
        "select_candidates": [
            "select TV_series.Weekly_Rank",
            "select TV_series.Weekly_Rank, TV_series.Viewers_m",
            "select TV_series.Weekly_Rank, TV_series.Channel",
            "select TV_series.Weekly_Rank, TV_series.Air_Date"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_series",
        "table_candidates": [
            "TV_series",
            "TV_Channel TV_series"
        ],
        "align_scores": [
            0.995497465133667,
            8.208917279262096e-05,
            0.00015251552395056933,
            6.119566387496889e-05,
            0.0001810514077078551,
            5.9367528592702e-05,
            0.0001219182086060755,
            6.0342987126205117e-05
        ],
        "align_select": "select TV_series.Weekly_Rank",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the TV Channel of TV series with Episode \"Emily\"? List the TV Channel's series name.",
        "gold_select": "select TV_Channel.series_name",
        "select_candidates": [
            "select TV_Channel.series_name",
            "select TV_series.Channel",
            "select TV_Channel.series_name, TV_series.Channel",
            "select TV_Channel.series_name, TV_series.Channel"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel TV_series",
        "table_candidates": [
            "TV_Channel TV_series"
        ],
        "align_scores": [
            0.9939269423484802,
            9.425457392353565e-05,
            0.8660756945610046,
            7.169257150962949e-05,
            0.0005860402015969157,
            7.174899656092748e-05,
            0.0005860402015969157,
            7.174899656092748e-05
        ],
        "align_select": "select TV_Channel.series_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the TV Channel of TV series with Episode \"Blowback\"? List the TV Channel's series name.",
        "gold_select": "select TV_Channel.series_name",
        "select_candidates": [
            "select TV_series.Channel",
            "select TV_Channel.series_name",
            "select TV_series.Channel, TV_Channel.series_name",
            "select TV_Channel.series_name, TV_series.Channel"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel TV_series",
        "table_candidates": [
            "TV_Channel TV_series"
        ],
        "align_scores": [
            0.8491650819778442,
            7.092126907082275e-05,
            0.9938768744468689,
            9.169874101644382e-05,
            0.00046021511661820114,
            8.835615153657272e-05,
            0.0005624369950965047,
            7.39133101888001e-05
        ],
        "align_select": "select TV_series.Channel",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the TV Channel of TV series with Episode \"Winterland\"? List the TV Channel's series name.",
        "gold_select": "select TV_Channel.series_name",
        "select_candidates": [
            "select TV_Channel.series_name",
            "select TV_series.Channel",
            "select TV_Channel.series_name, TV_series.Channel",
            "select TV_series.Channel, TV_Channel.series_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel TV_series",
        "table_candidates": [
            "TV_Channel TV_series"
        ],
        "align_scores": [
            0.9939824938774109,
            9.235998004442081e-05,
            0.8935655355453491,
            7.022634235909209e-05,
            0.0005617962451651692,
            6.977601879043505e-05,
            0.00040462921606376767,
            8.304271614179015e-05
        ],
        "align_select": "select TV_Channel.series_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the TV Channel of TV series with Episode \"Home By Another Way\"? List the TV Channel's series name.",
        "gold_select": "select TV_Channel.series_name",
        "select_candidates": [
            "select TV_Channel.series_name",
            "select TV_series.Channel",
            "select TV_Channel.series_name, TV_series.Channel",
            "select TV_series.Channel, TV_Channel.series_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel TV_series",
        "table_candidates": [
            "TV_Channel TV_series"
        ],
        "align_scores": [
            0.9938719272613525,
            8.562383300159127e-05,
            0.9323689937591553,
            6.916311394888908e-05,
            0.0006295554921962321,
            7.273175287991762e-05,
            0.00042781594675034285,
            8.432074537267908e-05
        ],
        "align_select": "select TV_Channel.series_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the TV Channel of TV series with Episode \"Friendly Skies\"? List the TV Channel's series name.",
        "gold_select": "select TV_Channel.series_name",
        "select_candidates": [
            "select TV_Channel.series_name",
            "select TV_series.Channel",
            "select TV_Channel.series_name, TV_series.Channel",
            "select TV_Channel.series_name, TV_series.Channel"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel TV_series",
        "table_candidates": [
            "TV_Channel TV_series"
        ],
        "align_scores": [
            0.9937493801116943,
            9.934722766047344e-05,
            0.8161578178405762,
            7.451180863426998e-05,
            0.0006123731145635247,
            7.325267506530508e-05,
            0.0006123731145635247,
            7.325267506530508e-05
        ],
        "align_select": "select TV_Channel.series_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the name of the series that has the episode \"Emily\"?",
        "gold_select": "select TV_Channel.series_name",
        "select_candidates": [
            "select TV_Channel.series_name",
            "select TV_series.Episode, TV_Channel.series_name",
            "select TV_Channel.series_name, TV_series.Episode",
            "select TV_Channel.series_name, TV_series.Channel"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel TV_series",
        "table_candidates": [
            "TV_Channel TV_series"
        ],
        "align_scores": [
            0.9859165549278259,
            8.750800770940259e-05,
            0.00021126803767401725,
            6.469959043897688e-05,
            0.00019426501239649951,
            6.0053429479012266e-05,
            0.00020808674162253737,
            5.990088902763091e-05
        ],
        "align_select": "select TV_Channel.series_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the name of the series that has the episode \"Blowback\"?",
        "gold_select": "select TV_Channel.series_name",
        "select_candidates": [
            "select TV_Channel.series_name",
            "select TV_Channel.series_name, TV_series.Channel",
            "select TV_Channel.series_name, TV_series.Viewers_m",
            "select TV_series.Episode, TV_Channel.series_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel TV_series",
        "table_candidates": [
            "TV_Channel TV_series"
        ],
        "align_scores": [
            0.986473560333252,
            9.504442277830094e-05,
            0.00021755354828201234,
            6.206315447343513e-05,
            0.00011583315063035116,
            5.672066981787793e-05,
            0.0001728383358567953,
            6.514187407447025e-05
        ],
        "align_select": "select TV_Channel.series_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the name of the series that has the episode \"Winterland\"?",
        "gold_select": "select TV_Channel.series_name",
        "select_candidates": [
            "select TV_Channel.series_name",
            "select TV_series.Episode, TV_Channel.series_name",
            "select TV_Channel.series_name, TV_series.Episode",
            "select TV_series.Episode"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel TV_series",
        "table_candidates": [
            "TV_Channel TV_series"
        ],
        "align_scores": [
            0.9849787354469299,
            9.511685493635014e-05,
            0.0001985320122912526,
            6.242106610443443e-05,
            0.00019587053975556046,
            5.968860205030069e-05,
            0.7948660254478455,
            7.416572771035135e-05
        ],
        "align_select": "select TV_Channel.series_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the name of the series that has the episode \"Home By Another Way\"?",
        "gold_select": "select TV_Channel.series_name",
        "select_candidates": [
            "select TV_Channel.series_name",
            "select TV_series.Episode, TV_Channel.series_name",
            "select TV_Channel.series_name, TV_series.Channel",
            "select TV_Channel.series_name, TV_series.Episode"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel TV_series",
        "table_candidates": [
            "TV_Channel TV_series"
        ],
        "align_scores": [
            0.9833061099052429,
            8.74867255333811e-05,
            0.00019571592565625906,
            6.184420635690913e-05,
            0.00022069195983931422,
            6.05558707320597e-05,
            0.00021248054690659046,
            5.948591206106357e-05
        ],
        "align_select": "select TV_Channel.series_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the name of the series that has the episode \"Friendly Skies\"?",
        "gold_select": "select TV_Channel.series_name",
        "select_candidates": [
            "select TV_Channel.series_name",
            "select TV_series.Episode, TV_Channel.series_name",
            "select TV_Channel.series_name, TV_series.Episode",
            "select TV_Channel.series_name, TV_series.Channel"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel TV_series",
        "table_candidates": [
            "TV_Channel TV_series",
            "TV_series"
        ],
        "align_scores": [
            0.980309247970581,
            0.00011035200441256166,
            0.00020475899509619921,
            6.477442366303876e-05,
            0.0002336331963306293,
            6.119548925198615e-05,
            0.0002355976466787979,
            6.178349576657638e-05
        ],
        "align_select": "select TV_Channel.series_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List the Episode of all TV series showed on TV Channel with series name \"Classica\".",
        "gold_select": "select TV_series.Episode",
        "select_candidates": [
            "select TV_series.Episode",
            "select TV_series.Episode, TV_Channel.Country",
            "select TV_series.id, TV_series.Episode",
            "select TV_series.Episode, TV_Channel.series_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel TV_series",
        "table_candidates": [
            "TV_Channel TV_series"
        ],
        "align_scores": [
            0.9933820962905884,
            0.00011725597141776234,
            0.00016027050151024014,
            6.21163344476372e-05,
            0.00019147401326335967,
            7.853721035644412e-05,
            0.00017412810120731592,
            6.890032091178e-05
        ],
        "align_select": "select TV_series.Episode",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List the Episode of all TV series showed on TV Channel with series name \"myDeejay\".",
        "gold_select": "select TV_series.Episode",
        "select_candidates": [
            "select TV_series.Episode",
            "select TV_series.Episode, TV_Channel.Country",
            "select TV_series.Episode, TV_Channel.series_name",
            "select TV_series.id, TV_series.Episode"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel TV_series",
        "table_candidates": [
            "TV_Channel TV_series"
        ],
        "align_scores": [
            0.9906284213066101,
            0.00011409517901483923,
            0.00017601993749849498,
            6.257436325540766e-05,
            0.00017422456585336477,
            6.988050154177472e-05,
            0.00020314940775278956,
            8.306029485538602e-05
        ],
        "align_select": "select TV_series.Episode",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List the Episode of all TV series showed on TV Channel with series name \"MTV Music\".",
        "gold_select": "select TV_series.Episode",
        "select_candidates": [
            "select TV_series.Episode",
            "select TV_series.Episode, TV_Channel.Country",
            "select TV_series.Episode, TV_series.Air_Date",
            "select TV_series.id, TV_series.Episode"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel TV_series",
        "table_candidates": [
            "TV_Channel TV_series"
        ],
        "align_scores": [
            0.978857159614563,
            0.00011824991088360548,
            0.00020366374519653618,
            6.519487942568958e-05,
            0.0002437473158352077,
            7.01270328136161e-05,
            0.0002070303598884493,
            8.320965571328998e-05
        ],
        "align_select": "select TV_series.Episode",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List the Episode of all TV series showed on TV Channel with series name \"MTV Dance\".",
        "gold_select": "select TV_series.Episode",
        "select_candidates": [
            "select TV_series.Episode",
            "select TV_series.Episode, TV_Channel.Country",
            "select TV_series.Episode, TV_Channel.series_name",
            "select TV_series.id, TV_series.Episode"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel TV_series",
        "table_candidates": [
            "TV_Channel TV_series"
        ],
        "align_scores": [
            0.995089590549469,
            0.0001234703668160364,
            0.00019789248472079635,
            6.434923852793872e-05,
            0.00015442314906977117,
            7.054839079501107e-05,
            0.0002050019975285977,
            8.304065704578534e-05
        ],
        "align_select": "select TV_series.Episode",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List the Episode of all TV series showed on TV Channel with series name \"Rock TV\".",
        "gold_select": "select TV_series.Episode",
        "select_candidates": [
            "select TV_series.Episode",
            "select TV_series.Episode, TV_Channel.Country",
            "select TV_series.Episode, TV_Channel.series_name",
            "select TV_series.id, TV_series.Episode"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel TV_series",
        "table_candidates": [
            "TV_Channel TV_series"
        ],
        "align_scores": [
            0.9814995527267456,
            0.00011206952331122011,
            0.00017932214541360736,
            6.23067026026547e-05,
            0.00016058226174209267,
            6.851956277387217e-05,
            0.0001911258150357753,
            7.963123061927035e-05
        ],
        "align_select": "select TV_series.Episode",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the episode for the TV series named \"Classica\"?",
        "gold_select": "select TV_series.Episode",
        "select_candidates": [
            "select TV_series.Episode",
            "select TV_series.Episode, TV_Channel.Country",
            "select TV_series.Episode, TV_Channel.series_name",
            "select TV_series.Episode, TV_series.Air_Date"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel TV_series",
        "table_candidates": [
            "TV_Channel TV_series"
        ],
        "align_scores": [
            0.9958343505859375,
            6.818720430601388e-05,
            0.00012167199747636914,
            5.296980816638097e-05,
            0.00012163569772383198,
            5.657562360283919e-05,
            0.0002068253670586273,
            5.656472421833314e-05
        ],
        "align_select": "select TV_series.Episode",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the episode for the TV series named \"myDeejay\"?",
        "gold_select": "select TV_series.Episode",
        "select_candidates": [
            "select TV_series.Episode",
            "select TV_series.Episode, TV_Channel.Country",
            "select TV_series.Episode, TV_series.Air_Date",
            "select TV_series.Episode, TV_Channel.series_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel TV_series",
        "table_candidates": [
            "TV_Channel TV_series"
        ],
        "align_scores": [
            0.9943143725395203,
            7.338285649893805e-05,
            0.00012731031165458262,
            5.633110413327813e-05,
            0.0002241148758912459,
            5.927922029513866e-05,
            0.0001349706290056929,
            5.881776814931072e-05
        ],
        "align_select": "select TV_series.Episode",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the episode for the TV series named \"MTV Music\"?",
        "gold_select": "select TV_series.Episode",
        "select_candidates": [
            "select TV_series.Episode",
            "select TV_series.Episode, TV_Channel.Country",
            "select TV_series.Episode, TV_Channel.series_name",
            "select TV_series.Episode, TV_series.Air_Date"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel TV_series",
        "table_candidates": [
            "TV_Channel TV_series"
        ],
        "align_scores": [
            0.9958556294441223,
            6.850108184153214e-05,
            0.00012978109589312226,
            5.698676613974385e-05,
            0.00014348803961183876,
            5.9648777096299455e-05,
            0.0002511001075617969,
            5.9054324083263054e-05
        ],
        "align_select": "select TV_series.Episode",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the episode for the TV series named \"MTV Dance\"?",
        "gold_select": "select TV_series.Episode",
        "select_candidates": [
            "select TV_series.Episode",
            "select TV_series.Episode, TV_Channel.Country",
            "select TV_series.Episode, TV_Channel.series_name",
            "select TV_series.Episode, TV_series.Air_Date"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel TV_series",
        "table_candidates": [
            "TV_Channel TV_series"
        ],
        "align_scores": [
            0.9960318207740784,
            7.266824832186103e-05,
            0.00012306745338719338,
            5.7465578720439225e-05,
            0.00014035265485290438,
            5.9355126722948626e-05,
            0.0002369192661717534,
            5.905477155465633e-05
        ],
        "align_select": "select TV_series.Episode",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the episode for the TV series named \"Rock TV\"?",
        "gold_select": "select TV_series.Episode",
        "select_candidates": [
            "select TV_series.Episode",
            "select TV_series.Episode, TV_Channel.Country",
            "select TV_series.Episode, TV_Channel.series_name",
            "select TV_series.Episode, TV_series.Air_Date"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel TV_series",
        "table_candidates": [
            "TV_Channel TV_series"
        ],
        "align_scores": [
            0.9954330921173096,
            6.96259448886849e-05,
            0.0001286221668124199,
            5.470350879477337e-05,
            0.00013201126421336085,
            5.7901681429939345e-05,
            0.0002238765446236357,
            5.7859400840243325e-05
        ],
        "align_select": "select TV_series.Episode",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "which countries' tv channels are playing some cartoon written by Steven Melching?",
        "gold_select": "select TV_Channel.Country",
        "select_candidates": [
            "select TV_Channel.Country",
            "select distinct TV_Channel.Country",
            "select TV_Channel.Country, TV_Channel.Language",
            "select TV_Channel.Country, Cartoon.Channel"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel Cartoon"
        ],
        "align_scores": [
            0.6582338213920593,
            0.014794252812862396,
            0.19952717423439026,
            0.0004902130458503962,
            0.00021381332771852612,
            0.00015651006833650172,
            0.0020277982112020254,
            0.0001979885419132188
        ],
        "align_select": "select TV_Channel.Country",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "which countries' tv channels are playing some cartoon written by James Krieg?",
        "gold_select": "select TV_Channel.Country",
        "select_candidates": [
            "select TV_Channel.Country",
            "select distinct TV_Channel.Country",
            "select TV_Channel.Country, TV_Channel.Language",
            "select TV_Channel.Country, Cartoon.Channel"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel Cartoon"
        ],
        "align_scores": [
            0.8828017115592957,
            0.011876768432557583,
            0.2669644057750702,
            0.0004058325139340013,
            0.00021728280989918858,
            0.0001554084155941382,
            0.002033805474638939,
            0.0001896398316603154
        ],
        "align_select": "select TV_Channel.Country",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "which countries' tv channels are playing some cartoon written by Joseph Kuhr?",
        "gold_select": "select TV_Channel.Country",
        "select_candidates": [
            "select TV_Channel.Country",
            "select distinct TV_Channel.Country",
            "select TV_Channel.Country, TV_Channel.Language",
            "select TV_Channel.Country, Cartoon.Channel"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel Cartoon"
        ],
        "align_scores": [
            0.8716466426849365,
            0.015154067426919937,
            0.30138856172561646,
            0.0004775298875756562,
            0.00021792456391267478,
            0.0001573297195136547,
            0.0018231882713735104,
            0.00019295229867566377
        ],
        "align_select": "select TV_Channel.Country",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "which countries' tv channels are playing some cartoon written by Matt Wayne?",
        "gold_select": "select TV_Channel.Country",
        "select_candidates": [
            "select TV_Channel.Country",
            "select distinct TV_Channel.Country",
            "select TV_Channel.Country, TV_Channel.Language",
            "select TV_Channel.Country, Cartoon.Channel"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel Cartoon"
        ],
        "align_scores": [
            0.8714137673377991,
            0.013628802262246609,
            0.2633225619792938,
            0.00047487084520980716,
            0.00020071212202310562,
            0.00015137558511923999,
            0.002354276366531849,
            0.00018507003551349044
        ],
        "align_select": "select TV_Channel.Country",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "which countries' tv channels are playing some cartoon written by J. M. DeMatteis?",
        "gold_select": "select TV_Channel.Country",
        "select_candidates": [
            "select TV_Channel.Country",
            "select distinct TV_Channel.Country",
            "select TV_Channel.Country, TV_Channel.Language",
            "select TV_Channel.Country, Cartoon.Channel"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel Cartoon"
        ],
        "align_scores": [
            0.907319188117981,
            0.01359106507152319,
            0.3680858910083771,
            0.00049395184032619,
            0.00022768460621591657,
            0.00014127806934993714,
            0.0021610576659440994,
            0.00017531275807414204
        ],
        "align_select": "select TV_Channel.Country",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the countries that have cartoons on TV that were written by Steven Melching?",
        "gold_select": "select TV_Channel.Country",
        "select_candidates": [
            "select TV_Channel.Country",
            "select distinct TV_Channel.Country",
            "select TV_Channel.Country, Cartoon.Channel",
            "select TV_Channel.Country, TV_Channel.Language"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel Cartoon"
        ],
        "align_scores": [
            0.7016282677650452,
            0.026273315772414207,
            0.23881502449512482,
            0.0009095767163671553,
            0.0005541053251363337,
            0.00016990477161016315,
            0.0003721087414305657,
            0.00018831025226972997
        ],
        "align_select": "select TV_Channel.Country",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the countries that have cartoons on TV that were written by James Krieg?",
        "gold_select": "select TV_Channel.Country",
        "select_candidates": [
            "select TV_Channel.Country",
            "select distinct TV_Channel.Country",
            "select TV_Channel.Country, Cartoon.Channel",
            "select TV_Channel.Country, TV_Channel.Language"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel Cartoon"
        ],
        "align_scores": [
            0.8797428011894226,
            0.02730177901685238,
            0.32084357738494873,
            0.000665346160531044,
            0.0005414554616436362,
            0.00015470065409317613,
            0.00038605844019912183,
            0.0001828386157285422
        ],
        "align_select": "select TV_Channel.Country",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the countries that have cartoons on TV that were written by Joseph Kuhr?",
        "gold_select": "select TV_Channel.Country",
        "select_candidates": [
            "select TV_Channel.Country",
            "select distinct TV_Channel.Country",
            "select TV_Channel.Country, Cartoon.Channel",
            "select TV_Channel.Country, TV_Channel.Language"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel Cartoon"
        ],
        "align_scores": [
            0.8658749461174011,
            0.023199113085865974,
            0.28536421060562134,
            0.0009327862062491477,
            0.0005620463052764535,
            0.00015851690841373056,
            0.0003682319074869156,
            0.00018669175915420055
        ],
        "align_select": "select TV_Channel.Country",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the countries that have cartoons on TV that were written by Matt Wayne?",
        "gold_select": "select TV_Channel.Country",
        "select_candidates": [
            "select TV_Channel.Country",
            "select distinct TV_Channel.Country",
            "select TV_Channel.Country, Cartoon.Channel",
            "select TV_Channel.Country, TV_Channel.Language"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel Cartoon"
        ],
        "align_scores": [
            0.8765033483505249,
            0.03240331634879112,
            0.32631927728652954,
            0.0008448709850199521,
            0.0006373358191922307,
            0.00016227849118877202,
            0.0003573238500393927,
            0.0001834363501984626
        ],
        "align_select": "select TV_Channel.Country",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the countries that have cartoons on TV that were written by J. M. DeMatteis?",
        "gold_select": "select TV_Channel.Country",
        "select_candidates": [
            "select TV_Channel.Country",
            "select distinct TV_Channel.Country",
            "select count(distinct TV_Channel.Country)",
            "select TV_Channel.Country, Cartoon.Channel"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel Cartoon"
        ],
        "align_scores": [
            0.884050726890564,
            0.022215591743588448,
            0.1880263388156891,
            0.0008951090276241302,
            0.04521737992763519,
            9.19971353141591e-05,
            0.0005611024098470807,
            0.00014488931628875434
        ],
        "align_select": "select TV_Channel.Country",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "which countries' tv channels are not playing any cartoon written by James Krieg?",
        "gold_select": "select TV_Channel.Country",
        "select_candidates": [
            "select TV_Channel.Country",
            "select TV_Channel.Country, Cartoon.Channel",
            "select TV_Channel.Country, TV_Channel.Language",
            "select TV_Channel.series_name, TV_Channel.Country"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel Cartoon"
        ],
        "align_scores": [
            0.9684265851974487,
            0.9684265851974487,
            0.0006690197624266148,
            0.0006690197624266148,
            0.0002194043918279931,
            0.0002194043918279931,
            0.00022440716566052288,
            0.00022440716566052288
        ],
        "align_select": "select TV_Channel.Country",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "which countries' tv channels are not playing any cartoon written by Matt Wayne?",
        "gold_select": "select TV_Channel.Country",
        "select_candidates": [
            "select TV_Channel.Country",
            "select TV_Channel.Country, Cartoon.Channel",
            "select TV_Channel.Country, TV_Channel.Language",
            "select distinct TV_Channel.Country"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel Cartoon",
            "TV_Channel TV_series Cartoon"
        ],
        "align_scores": [
            0.9686750769615173,
            0.9800699949264526,
            0.0007761198794469237,
            0.0011658070143312216,
            0.00022605599951930344,
            0.00027647666865959764,
            0.04399002715945244,
            0.02104870229959488
        ],
        "align_select": "select TV_Channel.Country",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "which countries' tv channels are not playing any cartoon written by J. M. DeMatteis?",
        "gold_select": "select TV_Channel.Country",
        "select_candidates": [
            "select TV_Channel.Country",
            "select TV_Channel.Country, Cartoon.Channel",
            "select distinct TV_Channel.Country",
            "select TV_Channel.Country, TV_Channel.Language"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel Cartoon"
        ],
        "align_scores": [
            0.9822270274162292,
            0.9822270274162292,
            0.0006477965507656336,
            0.0006477965507656336,
            0.04497772827744484,
            0.04497772827744484,
            0.00023585477902088314,
            0.00023585477902088314
        ],
        "align_select": "select TV_Channel.Country",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "which countries' tv channels are not playing any cartoon written by Adam Beechen?",
        "gold_select": "select TV_Channel.Country",
        "select_candidates": [
            "select TV_Channel.Country",
            "select TV_Channel.Country, Cartoon.Channel",
            "select TV_Channel.Country, TV_Channel.Language",
            "select TV_Channel.series_name, TV_Channel.Country"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel Cartoon"
        ],
        "align_scores": [
            0.9692682027816772,
            0.9801385402679443,
            0.0007208493771031499,
            0.0010759261203929782,
            0.00022524896485265344,
            0.0002777093613985926,
            0.00023420459183398634,
            0.00023237487766891718
        ],
        "align_select": "select TV_Channel.Country",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "which countries' tv channels are not playing any cartoon written by Michael Jelenic?",
        "gold_select": "select TV_Channel.Country",
        "select_candidates": [
            "select TV_Channel.Country",
            "select TV_Channel.Country, Cartoon.Channel",
            "select TV_Channel.Country, TV_Channel.Language",
            "select distinct TV_Channel.Country"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel Cartoon"
        ],
        "align_scores": [
            0.9739248752593994,
            0.9813319444656372,
            0.0007873676950111985,
            0.001150398631580174,
            0.00023069580493029207,
            0.00027373890043236315,
            0.0455908328294754,
            0.021049128845334053
        ],
        "align_select": "select TV_Channel.Country",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the countries that are not playing cartoons written by James Krieg?",
        "gold_select": "select TV_Channel.Country",
        "select_candidates": [
            "select TV_Channel.Country",
            "select TV_Channel.Country, Cartoon.Channel",
            "select TV_Channel.series_name, TV_Channel.Country",
            "select TV_Channel.Country, TV_Channel.Language"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel Cartoon"
        ],
        "align_scores": [
            0.9840142130851746,
            0.9840142130851746,
            0.00027768180007115006,
            0.00027768180007115006,
            0.00022345533943735063,
            0.00022345533943735063,
            0.0001595363428350538,
            0.0001595363428350538
        ],
        "align_select": "select TV_Channel.Country",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the countries that are not playing cartoons written by Matt Wayne?",
        "gold_select": "select TV_Channel.Country",
        "select_candidates": [
            "select TV_Channel.Country",
            "select TV_Channel.Country, Cartoon.Channel",
            "select TV_Channel.Country, Cartoon.Written_by",
            "select TV_Channel.series_name, TV_Channel.Country"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel Cartoon"
        ],
        "align_scores": [
            0.9872948527336121,
            0.9901635050773621,
            0.0002999842108692974,
            0.0003906971833202988,
            0.0006158503820188344,
            0.0006174883455969393,
            0.00022651490871794522,
            0.00027699803467839956
        ],
        "align_select": "select TV_Channel.Country",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the countries that are not playing cartoons written by J. M. DeMatteis?",
        "gold_select": "select TV_Channel.Country",
        "select_candidates": [
            "select TV_Channel.Country",
            "select TV_Channel.Country, Cartoon.Channel",
            "select TV_Channel.series_name, TV_Channel.Country",
            "select TV_Channel.Country, TV_Channel.Language"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel Cartoon"
        ],
        "align_scores": [
            0.9901352524757385,
            0.9905068874359131,
            0.0002999590360559523,
            0.0003858399286400527,
            0.0002548690827097744,
            0.00028792486409656703,
            0.00016450481780339032,
            0.00019869829702656716
        ],
        "align_select": "select TV_Channel.Country",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the countries that are not playing cartoons written by Adam Beechen?",
        "gold_select": "select TV_Channel.Country",
        "select_candidates": [
            "select TV_Channel.Country",
            "select TV_Channel.Country, Cartoon.Channel",
            "select TV_Channel.Country, Cartoon.Written_by",
            "select TV_Channel.series_name, TV_Channel.Country"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel Cartoon"
        ],
        "align_scores": [
            0.9868568778038025,
            0.9897847771644592,
            0.00029073929181322455,
            0.0003718427906278521,
            0.0005936385132372379,
            0.0005884722340852022,
            0.00022354738030117005,
            0.0002811352605931461
        ],
        "align_select": "select TV_Channel.Country",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the countries that are not playing cartoons written by Michael Jelenic?",
        "gold_select": "select TV_Channel.Country",
        "select_candidates": [
            "select TV_Channel.Country",
            "select TV_Channel.Country, Cartoon.Written_by",
            "select TV_Channel.Country, Cartoon.Channel",
            "select TV_Channel.series_name, TV_Channel.Country"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel Cartoon"
        ],
        "align_scores": [
            0.9853708744049072,
            0.9889040589332581,
            0.0006206497200764716,
            0.0006287756259553134,
            0.000303122476907447,
            0.0003939494490623474,
            0.00022542086662724614,
            0.0002765241079032421
        ],
        "align_select": "select TV_Channel.Country",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "Find the series name and country of the tv channel that is playing some cartoons directed by Michael Chang and Michael Chang?",
        "gold_select": "select TV_Channel.series_name, TV_Channel.Country",
        "select_candidates": [
            "select TV_Channel.series_name, TV_Channel.Country",
            "select Cartoon.Title, TV_Channel.series_name, TV_Channel.Country",
            "select TV_Channel.series_name, TV_Channel.Country, Cartoon.Channel",
            "select TV_Channel.series_name, TV_Channel.Country, TV_Channel.Language"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel Cartoon",
            "TV_Channel TV_series Cartoon",
            "TV_Channel TV_Channel Cartoon"
        ],
        "align_scores": [
            0.0005500345723703504,
            0.00012715344200842083,
            0.00016206881264224648,
            0.00012155069998698309,
            0.0001394545688526705,
            0.00010055680468212813,
            0.00012525841884780675,
            9.96526432572864e-05
        ],
        "align_select": "select TV_Channel.series_name, TV_Channel.Country",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "Find the series name and country of the tv channel that is playing some cartoons directed by Ben Jones and Ben Jones?",
        "gold_select": "select TV_Channel.series_name, TV_Channel.Country",
        "select_candidates": [
            "select TV_Channel.series_name, TV_Channel.Country",
            "select Cartoon.Title, TV_Channel.series_name, TV_Channel.Country",
            "select TV_Channel.series_name, TV_Channel.Country, Cartoon.Channel",
            "select TV_Channel.series_name, TV_Channel.Country, TV_Channel.Language"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel Cartoon",
            "TV_Channel TV_series Cartoon",
            "TV_Channel TV_Channel TV_series Cartoon",
            "TV_Channel TV_Channel Cartoon"
        ],
        "align_scores": [
            0.001259179669432342,
            0.00015009695198386908,
            0.00016496727766934782,
            0.00011883804836543277,
            0.00014563450531568378,
            0.00010507027036510408,
            0.00012742691615130752,
            9.153597056865692e-05
        ],
        "align_select": "select TV_Channel.series_name, TV_Channel.Country",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "Find the series name and country of the tv channel that is playing some cartoons directed by Ben Jones and Brandon Vietti?",
        "gold_select": "select TV_Channel.series_name, TV_Channel.Country",
        "select_candidates": [
            "select TV_Channel.series_name, TV_Channel.Country",
            "select TV_Channel.series_name, TV_Channel.Country, Cartoon.Channel",
            "select TV_Channel.series_name, TV_Channel.Country, t2.c8",
            "select TV_Channel.series_name, TV_Channel.Country, TV_Channel.Language"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel Cartoon",
            "TV_Channel TV_series Cartoon",
            "TV_Channel Cartoon TV_series Cartoon",
            "TV_Channel TV_Channel Cartoon"
        ],
        "align_scores": [
            0.0013476046733558178,
            0.00029694518889300525,
            0.0001442335924366489,
            0.00010095746256411076,
            0.00012947827053721994,
            8.904950664145872e-05,
            0.0001346795615972951,
            9.193610458169132e-05
        ],
        "align_select": "select TV_Channel.series_name, TV_Channel.Country",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "What is the series name and country of all TV channels that are playing cartoons directed by Michael Chang and cartoons directed by Michael Chang?",
        "gold_select": "select TV_Channel.series_name, TV_Channel.Country",
        "select_candidates": [
            "select TV_Channel.series_name, TV_Channel.Country",
            "select Cartoon.Title, TV_Channel.series_name, TV_Channel.Country",
            "select TV_Channel.series_name, TV_Channel.Country, TV_Channel.Language",
            "select TV_Channel.series_name, TV_Channel.Country, TV_Channel.id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel TV_series Cartoon",
            "TV_Channel Cartoon",
            "TV_Channel TV_Channel TV_series Cartoon",
            "TV_Channel TV_Channel Cartoon"
        ],
        "align_scores": [
            0.930804431438446,
            0.0003135426086373627,
            0.0006474305992014706,
            0.00016388828225899488,
            0.0002171055384678766,
            9.158731700154021e-05,
            0.00016507536929566413,
            9.430314094061032e-05
        ],
        "align_select": "select TV_Channel.series_name, TV_Channel.Country",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "What is the series name and country of all TV channels that are playing cartoons directed by Ben Jones and cartoons directed by Ben Jones?",
        "gold_select": "select TV_Channel.series_name, TV_Channel.Country",
        "select_candidates": [
            "select TV_Channel.series_name, TV_Channel.Country",
            "select Cartoon.Title, TV_Channel.series_name, TV_Channel.Country",
            "select TV_Channel.series_name, TV_Channel.Country, TV_Channel.Language",
            "select TV_Channel.series_name, TV_Channel.Country, Cartoon.Channel"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel TV_series Cartoon",
            "TV_Channel Cartoon",
            "TV_Channel TV_Channel TV_series Cartoon"
        ],
        "align_scores": [
            0.9308324456214905,
            0.0003166333772242069,
            0.0005011678440496325,
            0.0001462194777559489,
            0.00020727349328808486,
            8.856628119247034e-05,
            0.0003005940234288573,
            0.00014812264998909086
        ],
        "align_select": "select TV_Channel.series_name, TV_Channel.Country",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "What is the series name and country of all TV channels that are playing cartoons directed by Ben Jones and cartoons directed by Brandon Vietti?",
        "gold_select": "select TV_Channel.series_name, TV_Channel.Country",
        "select_candidates": [
            "select TV_Channel.series_name, TV_Channel.Country",
            "select TV_Channel.series_name, TV_Channel.Country, TV_Channel.Language",
            "select TV_Channel.series_name, TV_Channel.Country, TV_series.Channel",
            "select TV_Channel.series_name, TV_Channel.Country, t2.c8"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel Cartoon",
            "TV_Channel TV_series Cartoon",
            "TV_Channel Cartoon TV_series Cartoon",
            "TV_Channel Cartoon TV_series"
        ],
        "align_scores": [
            0.982315719127655,
            0.982315719127655,
            0.00020828007836826146,
            0.00020828007836826146,
            0.0002912056224886328,
            0.0002912056224886328,
            0.0001923176896525547,
            0.0001923176896525547
        ],
        "align_select": "select TV_Channel.series_name, TV_Channel.Country",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "find the pixel aspect ratio and nation of the tv channels that do not use Italian.",
        "gold_select": "select TV_Channel.Pixel_aspect_ratio_PAR, TV_Channel.Country",
        "select_candidates": [
            "select TV_Channel.Pixel_aspect_ratio_PAR, TV_Channel.Country",
            "select TV_Channel.id, TV_Channel.Pixel_aspect_ratio_PAR, TV_Channel.Country",
            "select TV_Channel.Pixel_aspect_ratio_PAR.c5, TV_Channel.Country",
            "select TV_Channel.Country, TV_Channel.Pixel_aspect_ratio_PAR"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel"
        ],
        "align_scores": [
            0.7110180258750916,
            0.00015345423889812082,
            0.0002185910998377949,
            7.744861068204045e-05,
            0.0003392425714991987,
            8.74642064445652e-05,
            0.9661388993263245,
            0.00014049699530005455
        ],
        "align_select": "select TV_Channel.Country, TV_Channel.Pixel_aspect_ratio_PAR",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the pixel aspect ratio and country of origin for all TV channels that do not use Italian?",
        "gold_select": "select TV_Channel.Pixel_aspect_ratio_PAR, TV_Channel.Country",
        "select_candidates": [
            "select TV_Channel.Pixel_aspect_ratio_PAR, TV_Channel.Country",
            "select TV_Channel.id, TV_Channel.Pixel_aspect_ratio_PAR, TV_Channel.Country",
            "select TV_Channel.Country, TV_Channel.Pixel_aspect_ratio_PAR",
            "select TV_Channel.Pixel_aspect_ratio_PAR.c5, TV_Channel.Country"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel"
        ],
        "align_scores": [
            0.8224560618400574,
            0.00016930482524912804,
            0.0002199001028202474,
            8.310942212119699e-05,
            0.9116459488868713,
            0.00016067952674347907,
            0.0003458128485362977,
            9.461217268835753e-05
        ],
        "align_select": "select TV_Channel.Pixel_aspect_ratio_PAR, TV_Channel.Country",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "find the id of tv channels that do not play any cartoon directed by Brandon Vietti.",
        "gold_select": "select TV_Channel.id",
        "select_candidates": [
            "select TV_Channel.id",
            "select TV_Channel.id, Cartoon.Channel",
            "select TV_Channel.id, TV_Channel.series_name",
            "select t0.c, Cartoon.Channel"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel Cartoon",
            "TV_Channel TV_series Cartoon"
        ],
        "align_scores": [
            0.9733799695968628,
            0.9733799695968628,
            0.000472786370664835,
            0.000472786370664835,
            0.0002726901730056852,
            0.0002726901730056852,
            0.00027896667597815394,
            0.00027896667597815394
        ],
        "align_select": "select TV_Channel.id",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "find the id of tv channels that do not play any cartoon directed by Michael Chang.",
        "gold_select": "select TV_Channel.id",
        "select_candidates": [
            "select TV_Channel.id",
            "select TV_Channel.id, Cartoon.Channel",
            "select TV_Channel.id, TV_Channel.series_name",
            "select t0.c, Cartoon.Channel"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel Cartoon",
            "TV_Channel TV_series Cartoon"
        ],
        "align_scores": [
            0.9761155247688293,
            0.9761155247688293,
            0.00043806564644910395,
            0.00043806564644910395,
            0.00027895625680685043,
            0.00027895625680685043,
            0.00024359606322832406,
            0.00024359606322832406
        ],
        "align_select": "select TV_Channel.id",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the ids of the TV channels that do not have any cartoons directed by Brandon Vietti?",
        "gold_select": "select TV_Channel.id",
        "select_candidates": [
            "select TV_Channel.id",
            "select TV_Channel.id, Cartoon.Channel",
            "select TV_Channel.id, TV_Channel.series_name",
            "select TV_Channel.id, t2.c8"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel Cartoon",
            "TV_Channel TV_series Cartoon"
        ],
        "align_scores": [
            0.9719929099082947,
            0.9719929099082947,
            0.0005105649470351636,
            0.0005105649470351636,
            0.00020343724463600665,
            0.00020343724463600665,
            0.00041564987623132765,
            0.00041564987623132765
        ],
        "align_select": "select TV_Channel.id",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the ids of the TV channels that do not have any cartoons directed by Michael Chang?",
        "gold_select": "select TV_Channel.id",
        "select_candidates": [
            "select TV_Channel.id",
            "select TV_Channel.id, Cartoon.Channel",
            "select TV_Channel.id, TV_Channel.series_name",
            "select t0.c, Cartoon.Channel"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel Cartoon",
            "TV_Channel TV_series Cartoon"
        ],
        "align_scores": [
            0.9738999009132385,
            0.9738999009132385,
            0.0005036369548179209,
            0.0005036369548179209,
            0.0002052635099971667,
            0.0002052635099971667,
            0.0002857981889974326,
            0.0002857981889974326
        ],
        "align_select": "select TV_Channel.id",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "find the package option of the tv channel that do not have any cartoon directed by Brandon Vietti.",
        "gold_select": "select TV_Channel.Package_Option",
        "select_candidates": [
            "select TV_Channel.Package_Option",
            "select TV_Channel.Package_Option, Cartoon.Channel",
            "select TV_Channel.Pixel_aspect_ratio_PAR, TV_Channel.Package_Option",
            "select TV_Channel.Package_Option, TV_Channel.Pixel_aspect_ratio_PAR"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel Cartoon"
        ],
        "align_scores": [
            0.9821130633354187,
            0.0043892404064536095,
            0.0002716716262511909,
            0.00014909700257703662,
            0.00019405655621085316,
            0.0001315952540608123,
            0.00018888154590968043,
            0.00011756879393942654
        ],
        "align_select": "select TV_Channel.Package_Option",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "find the package option of the tv channel that do not have any cartoon directed by Michael Chang.",
        "gold_select": "select TV_Channel.Package_Option",
        "select_candidates": [
            "select TV_Channel.Package_Option",
            "select TV_Channel.Package_Option, Cartoon.Channel",
            "select TV_Channel.Pixel_aspect_ratio_PAR, TV_Channel.Package_Option",
            "select TV_Channel.Package_Option, TV_Channel.Pixel_aspect_ratio_PAR"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel Cartoon"
        ],
        "align_scores": [
            0.9832839965820312,
            0.0031916822772473097,
            0.00025402146275155246,
            0.0001496850309194997,
            0.00018043562886305153,
            0.0001289442734559998,
            0.00017373089212924242,
            0.00011643314064713195
        ],
        "align_select": "select TV_Channel.Package_Option",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the package options of all tv channels that are not playing any cartoons directed by Brandon Vietti?",
        "gold_select": "select TV_Channel.Package_Option",
        "select_candidates": [
            "select TV_Channel.Package_Option",
            "select TV_Channel.Package_Option, Cartoon.Channel",
            "select TV_Channel.Pixel_aspect_ratio_PAR, TV_Channel.Package_Option",
            "select TV_Channel.Hight_definition_TV, TV_Channel.Package_Option"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel Cartoon"
        ],
        "align_scores": [
            0.977148175239563,
            0.007932137697935104,
            0.00036725730751641095,
            0.00013507105177268386,
            0.00025921757332980633,
            0.00016676643281243742,
            0.0002171510859625414,
            0.0001332544779870659
        ],
        "align_select": "select TV_Channel.Package_Option",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the package options of all tv channels that are not playing any cartoons directed by Michael Chang?",
        "gold_select": "select TV_Channel.Package_Option",
        "select_candidates": [
            "select TV_Channel.Package_Option",
            "select TV_Channel.Package_Option, Cartoon.Channel",
            "select TV_Channel.Pixel_aspect_ratio_PAR, TV_Channel.Package_Option",
            "select TV_Channel.Hight_definition_TV, TV_Channel.Package_Option"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel Cartoon"
        ],
        "align_scores": [
            0.9799450635910034,
            0.004873204044997692,
            0.0003378243127372116,
            0.00013871322153136134,
            0.0002566736366134137,
            0.00016323292220477015,
            0.00021804777497891337,
            0.00013296862016431987
        ],
        "align_select": "select TV_Channel.Package_Option",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "Show names of people whose nationality is not \"Bulgaria\".",
        "gold_select": "select people.Name",
        "select_candidates": [
            "select people.Name",
            "select people.Name, people.Nationality",
            "select people.Name, people.Birth_Date",
            "select people.Name, people.Height"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "people",
        "table_candidates": [
            "people"
        ],
        "align_scores": [
            0.9946616291999817,
            0.0001364029012620449,
            0.00018449441995471716,
            5.940904520684853e-05,
            0.00018568267114460468,
            6.287199357757345e-05,
            0.0001225928426720202,
            6.083961488911882e-05
        ],
        "align_select": "select people.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of people who are not from Bulgaria?",
        "gold_select": "select people.Name",
        "select_candidates": [
            "select people.Name",
            "select people.Name, people.Birth_Date",
            "select people.Name, people.Nationality",
            "select people.Name, people.Height"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "people",
        "table_candidates": [
            "people",
            "poker_player people"
        ],
        "align_scores": [
            0.9886060357093811,
            0.00012898806016892195,
            0.00013230110926087946,
            5.716692248824984e-05,
            0.0001167465525213629,
            5.710214463761076e-05,
            0.00013633188791573048,
            5.37322302989196e-05
        ],
        "align_select": "select people.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is last date created of votes from the state 'NJn'?",
        "gold_select": "select max(VOTES.created)",
        "select_candidates": [
            "select max(VOTES.created)",
            "select VOTES.created",
            "select min(VOTES.created)",
            "select the max(VOTES.created)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "VOTES",
        "table_candidates": [
            "VOTES",
            "CONTESTANTS VOTES",
            "AREA_CODE_STATE VOTES",
            "AREA_CODE_STATE CONTESTANTS VOTES"
        ],
        "align_scores": [
            0.9702109694480896,
            0.00018029578495770693,
            0.9814034700393677,
            0.9964205026626587,
            0.017648059874773026,
            0.00013145127741154283,
            0.0004062521329615265,
            0.00015794178762007505
        ],
        "align_select": "select max(VOTES.created)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is last date created of votes from the state 'NY'?",
        "gold_select": "select max(VOTES.created)",
        "select_candidates": [
            "select max(VOTES.created)",
            "select VOTES.created",
            "select min(VOTES.created)",
            "select max(VOTES.created), VOTES.phone_number"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "VOTES",
        "table_candidates": [
            "VOTES",
            "AREA_CODE_STATE VOTES",
            "AREA_CODE_STATE CONTESTANTS VOTES",
            "CONTESTANTS VOTES"
        ],
        "align_scores": [
            0.9886571764945984,
            0.00017009867588058114,
            0.9741669297218323,
            0.9963275790214539,
            0.012394695542752743,
            0.0001295035908697173,
            0.00011348548287060112,
            7.991125312400982e-05
        ],
        "align_select": "select max(VOTES.created)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of the contestants whose names are not 'Nita Coster'",
        "gold_select": "select CONTESTANTS.contestant_name",
        "select_candidates": [
            "select CONTESTANTS.contestant_name",
            "select CONTESTANTS.contestant_name, t1.c2",
            "select CONTESTANTS.contestant_name, CONTESTANTS.contestant_number",
            "select CONTESTANTS.contestant_name, t1.c3"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "CONTESTANTS",
        "table_candidates": [
            "CONTESTANTS"
        ],
        "align_scores": [
            0.9904137253761292,
            0.003031660569831729,
            0.0005043292185291648,
            0.00011746110249077901,
            0.00015149182581808418,
            9.000524005386978e-05,
            0.0004759874427691102,
            0.00013122909876983613
        ],
        "align_select": "select CONTESTANTS.contestant_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of the contestants whose names are not 'Kurt Walser'",
        "gold_select": "select CONTESTANTS.contestant_name",
        "select_candidates": [
            "select CONTESTANTS.contestant_name",
            "select CONTESTANTS.contestant_name, t1.c2",
            "select CONTESTANTS.contestant_name, CONTESTANTS.contestant_number",
            "select CONTESTANTS.contestant_name, t1.c3"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "CONTESTANTS",
        "table_candidates": [
            "CONTESTANTS"
        ],
        "align_scores": [
            0.9908825755119324,
            0.0041533056646585464,
            0.000493135186843574,
            0.0001315977715421468,
            0.0001556825009174645,
            8.314952719956636e-05,
            0.0004720933211501688,
            0.00012242859520483762
        ],
        "align_select": "select CONTESTANTS.contestant_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of the contestants whose names are not 'Kelly Clauss'",
        "gold_select": "select CONTESTANTS.contestant_name",
        "select_candidates": [
            "select CONTESTANTS.contestant_name",
            "select CONTESTANTS.contestant_name, t1.c2",
            "select CONTESTANTS.contestant_name, CONTESTANTS.contestant_number",
            "select CONTESTANTS.contestant_name, t1.c3"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "CONTESTANTS",
        "table_candidates": [
            "CONTESTANTS"
        ],
        "align_scores": [
            0.9838062524795532,
            0.0035922946408391,
            0.000518196087796241,
            0.00011993353837169707,
            0.00016209864406846464,
            9.238509665010497e-05,
            0.0005063783610239625,
            0.00013988475257065147
        ],
        "align_select": "select CONTESTANTS.contestant_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of the contestants whose names are not 'Edwina Burnam'",
        "gold_select": "select CONTESTANTS.contestant_name",
        "select_candidates": [
            "select CONTESTANTS.contestant_name",
            "select CONTESTANTS.contestant_name, t1.c2",
            "select CONTESTANTS.contestant_name, CONTESTANTS.contestant_number",
            "select CONTESTANTS.contestant_name, t1.c3"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "CONTESTANTS",
        "table_candidates": [
            "CONTESTANTS"
        ],
        "align_scores": [
            0.9904363751411438,
            0.004787243437021971,
            0.0004907509428448975,
            0.00012267775309737772,
            0.0001577888469910249,
            9.098893497139215e-05,
            0.00048056375817395747,
            0.0001393963466398418
        ],
        "align_select": "select CONTESTANTS.contestant_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of the contestants whose names are not 'Alana Bregman'",
        "gold_select": "select CONTESTANTS.contestant_name",
        "select_candidates": [
            "select CONTESTANTS.contestant_name",
            "select CONTESTANTS.contestant_name, t1.c2",
            "select CONTESTANTS.contestant_name (non-Alana Bregman)",
            "select CONTESTANTS.contestant_name, CONTESTANTS.contestant_number"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "CONTESTANTS",
        "table_candidates": [
            "CONTESTANTS"
        ],
        "align_scores": [
            0.9909065961837769,
            0.0028730183839797974,
            0.0005219451268203557,
            0.00012867749319411814,
            0.14110593497753143,
            0.00038771648542024195,
            0.0001568294537719339,
            9.827374015003443e-05
        ],
        "align_select": "select CONTESTANTS.contestant_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the number of votes from state 'NJn' or 'CA'?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), VOTES.state",
            "select count(*), VOTES.state",
            "select count(*), VOTES.vote_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "VOTES",
        "table_candidates": [
            "VOTES",
            "AREA_CODE_STATE VOTES"
        ],
        "align_scores": [
            0.7900237441062927,
            0.00015669282583985478,
            0.00022998533677309752,
            0.06837617605924606,
            0.00022998533677309752,
            0.06837617605924606,
            0.00016203205450437963,
            0.00011938606621697545
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the number of votes from state 'CA' or 'CA'?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), VOTES.state",
            "select count(*), AREA_CODE_STATE.state",
            "select count(*), VOTES.state"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "VOTES",
        "table_candidates": [
            "VOTES",
            "AREA_CODE_STATE VOTES",
            "AREA_CODE_STATE CONTESTANTS VOTES",
            "CONTESTANTS VOTES"
        ],
        "align_scores": [
            0.9618017673492432,
            0.00011797970364568755,
            0.00021999195450916886,
            0.00728315906599164,
            0.00022183393593877554,
            0.002136298455297947,
            0.00021999195450916886,
            0.00728315906599164
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the number of votes from state 'NY' or 'NY'?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), AREA_CODE_STATE.state",
            "select count(*), VOTES.state",
            "select count(*), AREA_CODE_STATE.state"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "VOTES",
        "table_candidates": [
            "AREA_CODE_STATE VOTES",
            "VOTES",
            "AREA_CODE_STATE CONTESTANTS VOTES",
            "CONTESTANTS VOTES"
        ],
        "align_scores": [
            0.983366072177887,
            0.00012493181566242129,
            0.00023764117213431746,
            0.002592558739706874,
            0.00021676135656889528,
            0.007613333873450756,
            0.00023764117213431746,
            0.002592558739706874
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the create dates, states, and phone numbers of the votes that were for the contestant named 'Kelly Clauss'?",
        "gold_select": "select VOTES.created, VOTES.state, VOTES.phone_number",
        "select_candidates": [
            "select VOTES.created, VOTES.state, VOTES.phone_number",
            "select VOTES.created, VOTES.state, VOTES.phone_number",
            "select VOTES.created), VOTES.state, VOTES.phone_number",
            "select VOTES.created, VOTES.state, VOTES.phone_number"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "CONTESTANTS VOTES",
        "table_candidates": [
            "CONTESTANTS VOTES"
        ],
        "align_scores": [
            0.9911203980445862,
            0.00013064005179330707,
            0.9911203980445862,
            0.00013064005179330707,
            0.006386465858668089,
            8.568247721996158e-05,
            0.9911203980445862,
            0.00013064005179330707
        ],
        "align_select": "select VOTES.created, VOTES.state, VOTES.phone_number",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the create dates, states, and phone numbers of the votes that were for the contestant named 'Alana Bregman'?",
        "gold_select": "select VOTES.created, VOTES.state, VOTES.phone_number",
        "select_candidates": [
            "select VOTES.created, VOTES.state, VOTES.phone_number",
            "select VOTES.created, VOTES.state, VOTES.phone_number",
            "select VOTES.created, VOTES.state, VOTES.phone_number",
            "select VOTES.created), VOTES.state, VOTES.phone_number"
        ],
        "select_labels": [
            1.0,
            1.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "CONTESTANTS VOTES",
        "table_candidates": [
            "CONTESTANTS VOTES"
        ],
        "align_scores": [
            0.9911674857139587,
            0.00015272916061803699,
            0.9911674857139587,
            0.00015272916061803699,
            0.9911674857139587,
            0.00015272916061803699,
            0.005984344519674778,
            8.87462665559724e-05
        ],
        "align_select": "select VOTES.created, VOTES.state, VOTES.phone_number",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List the area codes in which voters voted both for the contestant 'Kelly Clauss' and the contestant 'Kelly Clauss'.",
        "gold_select": "select AREA_CODE_STATE.area_code",
        "select_candidates": [
            "select AREA_CODE_STATE.area_code",
            "select VOTES.state",
            "select VOTES.vote_id",
            "select AREA_CODE_STATE.state"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "AREA_CODE_STATE CONTESTANTS VOTES",
        "table_candidates": [
            "AREA_CODE_STATE CONTESTANTS VOTES",
            "CONTESTANTS VOTES"
        ],
        "align_scores": [
            0.9383511543273926,
            0.00203129556030035,
            0.10812920331954956,
            0.0009658599738031626,
            0.020422829315066338,
            0.0023893704637885094,
            0.01577274315059185,
            0.0005429283482953906
        ],
        "align_select": "select AREA_CODE_STATE.area_code",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "What is the total surface area of the countries in the Southern and Central Asia region?",
        "gold_select": "select sum(country.SurfaceArea)",
        "select_candidates": [
            "select sum(country.SurfaceArea)",
            "select sum(country.SurfaceArea), country.Name",
            "select sum(country.SurfaceArea), country.Region",
            "select sum(country.SurfaceArea), country.Code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9953794479370117,
            0.00017208073404617608,
            0.00017425481928512454,
            8.328475087182596e-05,
            0.00019436764705460519,
            9.036756091518328e-05,
            0.00013336200208868831,
            9.367432357976213e-05
        ],
        "align_select": "select sum(country.SurfaceArea)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the total surface area of the countries in the Australia and New Zealand region?",
        "gold_select": "select sum(country.SurfaceArea)",
        "select_candidates": [
            "select sum(country.SurfaceArea)",
            "select sum(country.SurfaceArea), country.Name",
            "select sum(country.SurfaceArea), country.Region",
            "select sum(country.SurfaceArea), country.Code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "sqlite_sequence country"
        ],
        "align_scores": [
            0.9963829517364502,
            0.0033060593996196985,
            0.00019124537357129157,
            0.00027418186073191464,
            0.00026134325889870524,
            0.00039801685488782823,
            0.00015413510845974088,
            0.00045910367043688893
        ],
        "align_select": "select sum(country.SurfaceArea)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the total surface area of the countries in the Eastern Europe region?",
        "gold_select": "select sum(country.SurfaceArea)",
        "select_candidates": [
            "select sum(country.SurfaceArea)",
            "select sum(country.SurfaceArea), country.Name",
            "select sum(country.SurfaceArea), country.Code",
            "select sum(country.SurfaceArea), country.IndepYear"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9965460896492004,
            0.00022368320787791163,
            0.00016916330787353218,
            0.006658931728452444,
            0.00013658042007591575,
            0.015482206828892231,
            0.00013167269935365766,
            0.0006022307206876576
        ],
        "align_select": "select sum(country.SurfaceArea)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the total surface area of the countries in the Southern Africa region?",
        "gold_select": "select sum(country.SurfaceArea)",
        "select_candidates": [
            "select sum(country.SurfaceArea)",
            "select sum(country.SurfaceArea), country.Name",
            "select sum(country.SurfaceArea), country.Code",
            "select sum(country.SurfaceArea), country.IndepYear"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "sqlite_sequence country"
        ],
        "align_scores": [
            0.996505856513977,
            0.0002229958336101845,
            0.0001678112312220037,
            0.0035610299091786146,
            0.00013718368427362293,
            0.0063502732664346695,
            0.0001321356976404786,
            0.00037570332642644644
        ],
        "align_select": "select sum(country.SurfaceArea)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the total surface area of the countries in the Micronesia region?",
        "gold_select": "select sum(country.SurfaceArea)",
        "select_candidates": [
            "select sum(country.SurfaceArea)",
            "select sum(country.SurfaceArea), country.Name",
            "select sum(country.SurfaceArea), country.Code",
            "select sum(country.SurfaceArea) descripted in country.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "sqlite_sequence country"
        ],
        "align_scores": [
            0.9965558052062988,
            0.0001353907136945054,
            0.00015741930110380054,
            9.224432869814336e-05,
            0.00013104741810820997,
            8.438348595518619e-05,
            0.0006771528860554099,
            0.00011493513738969341
        ],
        "align_select": "select sum(country.SurfaceArea)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which continent is Nepal in?",
        "gold_select": "select country.Continent",
        "select_candidates": [
            "select country.Continent",
            "select country.Continent, country.Name",
            "select country.Continent, country.Region",
            "select country.Code, country.Continent"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9961420893669128,
            0.00015856558457016945,
            0.00018229168199468404,
            7.566923159174621e-05,
            0.0003051408857572824,
            7.48781458241865e-05,
            0.00018772849580273032,
            7.294533861568198e-05
        ],
        "align_select": "select country.Continent",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which continent is Hong Kong in?",
        "gold_select": "select country.Continent",
        "select_candidates": [
            "select country.Continent",
            "select country.Continent, country.Region",
            "select country.Code, country.Continent",
            "select country.Continent, country.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "sqlite_sequence country",
            "city country",
            "city sqlite_sequence country"
        ],
        "align_scores": [
            0.9961519837379456,
            0.0001699091517366469,
            0.0003231559821870178,
            7.416579319396988e-05,
            0.00020250657689757645,
            7.528789137722924e-05,
            0.00018910733342636377,
            7.812020339770243e-05
        ],
        "align_select": "select country.Continent",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which continent is Lesotho in?",
        "gold_select": "select country.Continent",
        "select_candidates": [
            "select country.Continent",
            "select country.Continent, country.Region",
            "select country.Code, country.Continent",
            "select country.Continent, country.Capital"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9957801103591919,
            0.0001775967248249799,
            0.0002835768973454833,
            7.539214857388288e-05,
            0.0001965385745279491,
            7.63236457714811e-05,
            0.0001440102787455544,
            6.163484795251861e-05
        ],
        "align_select": "select country.Continent",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which continent is Bouvet Island in?",
        "gold_select": "select country.Continent",
        "select_candidates": [
            "select country.Continent",
            "select country.Continent, country.Name",
            "select country.Continent, country.Region",
            "select country.Continent, country.Capital"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9964317083358765,
            0.00019463544595055282,
            0.0001906344259623438,
            8.276980952359736e-05,
            0.00029585216543637216,
            7.909722626209259e-05,
            0.00014296115841716528,
            6.103998748585582e-05
        ],
        "align_select": "select country.Continent",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which continent is Slovakia in?",
        "gold_select": "select country.Continent",
        "select_candidates": [
            "select country.Continent",
            "select country.Continent, country.Region",
            "select country.Continent, country.Name",
            "select country.Continent, country.Capital"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9962999224662781,
            0.00013690063497051597,
            0.0002575787657406181,
            7.191298936959356e-05,
            0.00017092622874770314,
            7.39110546419397e-05,
            0.00013901061902288347,
            5.9088459238409996e-05
        ],
        "align_select": "select country.Continent",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the continent name which Nepal belongs to?",
        "gold_select": "select country.Continent",
        "select_candidates": [
            "select country.Continent",
            "select country.Continent, country.Name",
            "select country.Code, country.Continent",
            "select country.Code, country.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.996109664440155,
            0.00012359782704152167,
            0.00024300730729009956,
            7.326832565013319e-05,
            0.00019304118177387863,
            8.120510028675199e-05,
            0.00018090989033225924,
            7.31522886781022e-05
        ],
        "align_select": "select country.Continent",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the continent name which Hong Kong belongs to?",
        "gold_select": "select country.Continent",
        "select_candidates": [
            "select country.Continent",
            "select country.Continent, country.Name",
            "select country.Code, country.Continent",
            "select country.Code, country.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "sqlite_sequence country",
            "city sqlite_sequence country",
            "city country"
        ],
        "align_scores": [
            0.9957258701324463,
            0.00012503145262598991,
            0.00026049299049191177,
            7.54385328036733e-05,
            0.00022319321578834206,
            8.714908472029492e-05,
            0.00021272948652040213,
            8.206679194699973e-05
        ],
        "align_select": "select country.Continent",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the continent name which Lesotho belongs to?",
        "gold_select": "select country.Continent",
        "select_candidates": [
            "select country.Continent",
            "select country.Continent, country.Name",
            "select country.Code, country.Continent",
            "select country.Code, country.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.995733916759491,
            0.00012002369476249442,
            0.0002536750980652869,
            7.474188168998808e-05,
            0.00020615651737898588,
            8.203541801776737e-05,
            0.00021054370154161006,
            8.713021816220134e-05
        ],
        "align_select": "select country.Continent",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the continent name which Bouvet Island belongs to?",
        "gold_select": "select country.Continent",
        "select_candidates": [
            "select country.Continent",
            "select country.Continent, country.Name",
            "select country.Code, country.Continent",
            "select country.Continent (http://country.Continent)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9960476756095886,
            0.0001232026843354106,
            0.0002573744859546423,
            7.433409336954355e-05,
            0.0002242012124042958,
            8.150401117745787e-05,
            0.011857169680297375,
            7.95846208347939e-05
        ],
        "align_select": "select country.Continent",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the continent name which Slovakia belongs to?",
        "gold_select": "select country.Continent",
        "select_candidates": [
            "select country.Continent",
            "select country.Continent, country.Name",
            "select country.Code, country.Continent",
            "select country.Code, country.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9958876967430115,
            0.00010844313510460779,
            0.00027818369562737644,
            7.271066715475172e-05,
            0.00020596811373252422,
            7.975222251843661e-05,
            0.00022595020709559321,
            8.34590318845585e-05
        ],
        "align_select": "select country.Continent",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which region is the city Ikorodu located in?",
        "gold_select": "select country.Region",
        "select_candidates": [
            "select country.Region",
            "select country.Region, city.CountryCode",
            "select country.Region, city.Name",
            "select country.Name, city.District"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "city country",
        "table_candidates": [
            "city country",
            "city",
            "city sqlite_sequence country",
            "city sqlite_sequence"
        ],
        "align_scores": [
            0.9959906935691833,
            0.00014253483095671982,
            0.00015665042155887932,
            8.600000001024455e-05,
            0.00017093194765038788,
            7.814962009433657e-05,
            0.00022612219618167728,
            7.292259397218004e-05
        ],
        "align_select": "select country.Region",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which region is the city Sete Lagoas located in?",
        "gold_select": "select country.Region",
        "select_candidates": [
            "select country.Region",
            "select country.Region, city.CountryCode",
            "select country.Region, city.Name",
            "select country.Name, city.District"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "city country",
        "table_candidates": [
            "city country",
            "city sqlite_sequence country",
            "city"
        ],
        "align_scores": [
            0.9926032423973083,
            0.00012472661910578609,
            0.00015589850954711437,
            7.769463991280645e-05,
            0.0001817928277887404,
            7.641219417564571e-05,
            0.0001877675240393728,
            7.514373282901943e-05
        ],
        "align_select": "select country.Region",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which region is the city Iseyin located in?",
        "gold_select": "select country.Region",
        "select_candidates": [
            "select country.Region",
            "select country.Region, city.CountryCode",
            "select country.Name, city.District",
            "select distinct country.Region"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "city country",
        "table_candidates": [
            "city country",
            "city",
            "city sqlite_sequence country"
        ],
        "align_scores": [
            0.9876344799995422,
            0.00014000617375131696,
            0.00017681460303720087,
            8.016899664653465e-05,
            0.00023870551376603544,
            7.634081703145057e-05,
            0.07431984692811966,
            0.0003123188216704875
        ],
        "align_select": "select country.Region",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which region is the city Ahome located in?",
        "gold_select": "select country.Region",
        "select_candidates": [
            "select country.Region",
            "select country.Region, city.CountryCode",
            "select country.Name, city.District",
            "select country.Region, city.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "city country",
        "table_candidates": [
            "city country",
            "city sqlite_sequence country",
            "city"
        ],
        "align_scores": [
            0.9898361563682556,
            0.0001383644703309983,
            0.00019845498900394887,
            7.807573274476454e-05,
            0.00028586137341335416,
            8.001296373549849e-05,
            0.0002307358372490853,
            7.15123096597381e-05
        ],
        "align_select": "select country.Region",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which region is the city Clarksville located in?",
        "gold_select": "select country.Region",
        "select_candidates": [
            "select country.Region",
            "select country.Region, city.CountryCode",
            "select country.Region, city.Name",
            "select country.Name, city.District"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "city country",
        "table_candidates": [
            "city country",
            "city sqlite_sequence country",
            "city"
        ],
        "align_scores": [
            0.9953849911689758,
            0.00012786021397914737,
            0.00014101641136221588,
            7.815133722033352e-05,
            0.00015948980581015348,
            7.418553286697716e-05,
            0.0002456007350701839,
            7.053695298964158e-05
        ],
        "align_select": "select country.Region",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What region is Ikorodu in?",
        "gold_select": "select country.Region",
        "select_candidates": [
            "select country.Region",
            "select country.Region, city.CountryCode",
            "select country.Region, city.Name",
            "select distinct country.Region"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "city country",
        "table_candidates": [
            "city country",
            "city sqlite_sequence country"
        ],
        "align_scores": [
            0.9962695837020874,
            0.00011874335177708417,
            0.00016133260214701295,
            8.233887638198212e-05,
            0.00018051460210699588,
            7.503752567572519e-05,
            0.03517268970608711,
            0.00023252982646226883
        ],
        "align_select": "select country.Region",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What region is Sete Lagoas in?",
        "gold_select": "select country.Region",
        "select_candidates": [
            "select country.Region",
            "select country.Region, city.CountryCode",
            "select country.Region, city.Name",
            "select country.Region, city.District"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "city country",
        "table_candidates": [
            "city country"
        ],
        "align_scores": [
            0.9930076599121094,
            9.20630554901436e-05,
            0.00016793097893241793,
            7.236356032080948e-05,
            0.00019577995408326387,
            6.7951186792925e-05,
            0.00037766023888252676,
            7.533184543717653e-05
        ],
        "align_select": "select country.Region",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What region is Iseyin in?",
        "gold_select": "select country.Region",
        "select_candidates": [
            "select country.Region",
            "select country.Region, city.CountryCode",
            "select country.Region, city.Name",
            "select distinct country.Region"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "city country",
        "table_candidates": [
            "city country",
            "city sqlite_sequence country"
        ],
        "align_scores": [
            0.9897609353065491,
            0.0001320477604167536,
            0.00017229763034265488,
            7.729515345999971e-05,
            0.00020410038996487856,
            7.209094474092126e-05,
            0.04943331331014633,
            0.00023722757759969682
        ],
        "align_select": "select country.Region",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What region is Ahome in?",
        "gold_select": "select country.Region",
        "select_candidates": [
            "select country.Region",
            "select country.Region, city.CountryCode",
            "select country.Region, city.Name",
            "select distinct country.Region"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "city country",
        "table_candidates": [
            "city country",
            "city sqlite_sequence country"
        ],
        "align_scores": [
            0.9199691414833069,
            0.0001083602401195094,
            0.00019268957839813083,
            6.46838016109541e-05,
            0.0001893059816211462,
            6.28846391919069e-05,
            0.04290826618671417,
            0.00021913468663115054
        ],
        "align_select": "select country.Region",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What region is Clarksville in?",
        "gold_select": "select country.Region",
        "select_candidates": [
            "select country.Region",
            "select country.Region, city.CountryCode",
            "select country.Region, city.Name",
            "select distinct country.Region"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "city country",
        "table_candidates": [
            "city country"
        ],
        "align_scores": [
            0.9937756061553955,
            8.029217133298516e-05,
            0.0001525411062175408,
            0.00010242519056191668,
            0.0001629019097890705,
            8.195924601750448e-05,
            0.04929069057106972,
            0.00013880079495720565
        ],
        "align_select": "select country.Region",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which language is the most popular in Nepal?",
        "gold_select": "select countrylanguage.Language",
        "select_candidates": [
            "select countrylanguage.Language",
            "select countrylanguage.Language, country.LocalName",
            "select countrylanguage.Language, country.Code",
            "select countrylanguage.Language, country.Capital"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.995240330696106,
            0.9950207471847534,
            0.0005022577242925763,
            0.00031153520103543997,
            0.00034786094329319894,
            0.0002460216637700796,
            0.00020373679581098258,
            0.00023215607507154346
        ],
        "align_select": "select countrylanguage.Language",
        "align_structure": "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Which language is the most popular in Hong Kong?",
        "gold_select": "select countrylanguage.Language",
        "select_candidates": [
            "select countrylanguage.Language",
            "select countrylanguage.Language, country.Name",
            "select countrylanguage.Language, country.Code",
            "select countrylanguage.Language, country.Capital"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9935571551322937,
            0.9946483969688416,
            0.00025187700521200895,
            0.0003143046051263809,
            0.0003079291491303593,
            0.00035952424514107406,
            0.0002350493159610778,
            0.00020748269162140787
        ],
        "align_select": "select countrylanguage.Language",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT"
    },
    {
        "question": "Which language is the most popular in Dominican Republic?",
        "gold_select": "select countrylanguage.Language",
        "select_candidates": [
            "select countrylanguage.Language",
            "select countrylanguage.Language, country.LocalName",
            "select countrylanguage.Language, country.Code",
            "select countrylanguage.Language, country.Capital"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.9948169589042664,
            0.9956011772155762,
            0.0003169293631799519,
            0.0005460906540974975,
            0.00025043400819413364,
            0.0003542115446180105,
            0.00021577120060101151,
            0.00020443342509679496
        ],
        "align_select": "select countrylanguage.Language",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT"
    },
    {
        "question": "Which language is the most popular in Lesotho?",
        "gold_select": "select countrylanguage.Language",
        "select_candidates": [
            "select countrylanguage.Language",
            "select countrylanguage.Language, country.LocalName",
            "select countrylanguage.Language, country.Code",
            "select countrylanguage.Language, country.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9953569769859314,
            0.994821310043335,
            0.0005307505489327013,
            0.0003693080507218838,
            0.0003866285551339388,
            0.0002696446608752012,
            0.0003139575128443539,
            0.0002456377260386944
        ],
        "align_select": "select countrylanguage.Language",
        "align_structure": "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Which language is the most popular in Slovakia?",
        "gold_select": "select countrylanguage.Language",
        "select_candidates": [
            "select countrylanguage.Language",
            "select countrylanguage.Language, country.Code",
            "select countrylanguage.Language, country.Name",
            "select countrylanguage.Language, country.Capital"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9945211410522461,
            0.9952799081802368,
            0.00023502195836044848,
            0.00033693804289214313,
            0.0002216734574176371,
            0.00027947567286901176,
            0.00023197643167804927,
            0.00021140447643119842
        ],
        "align_select": "select countrylanguage.Language",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT"
    },
    {
        "question": "What language is predominantly spoken in Nepal?",
        "gold_select": "select countrylanguage.Language",
        "select_candidates": [
            "select countrylanguage.Language",
            "select countrylanguage.Language, country.LocalName",
            "select countrylanguage.Language, country.Name",
            "select countrylanguage.Language, country.Code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.99140864610672,
            0.0067146578803658485,
            0.0004524016403593123,
            0.00021484367607627064,
            0.00029386693495325744,
            0.0001530148583697155,
            0.00029069415177218616,
            0.0001567526051076129
        ],
        "align_select": "select countrylanguage.Language",
        "align_structure": "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What language is predominantly spoken in Hong Kong?",
        "gold_select": "select countrylanguage.Language",
        "select_candidates": [
            "select countrylanguage.Language",
            "select countrylanguage.Language, country.Name",
            "select countrylanguage.Language, country.Code",
            "select countrylanguage.Language, country.Capital"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9884435534477234,
            0.015304083935916424,
            0.0003199564234819263,
            0.0001899822527775541,
            0.0003389387275092304,
            0.00020601485448423773,
            0.00016668123134877533,
            0.00011675321729853749
        ],
        "align_select": "select countrylanguage.Language",
        "align_structure": "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What language is predominantly spoken in Dominican Republic?",
        "gold_select": "select countrylanguage.Language",
        "select_candidates": [
            "select countrylanguage.Language",
            "select countrylanguage.Language, country.LocalName",
            "select countrylanguage.Language, country.Code",
            "select countrylanguage.Language, country.Capital"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9918450713157654,
            0.006047786679118872,
            0.0005055193905718625,
            0.0002461786207277328,
            0.00030866044107824564,
            0.00016560919175390154,
            0.0001541336387163028,
            0.00010436110460432246
        ],
        "align_select": "select countrylanguage.Language",
        "align_structure": "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What language is predominantly spoken in Lesotho?",
        "gold_select": "select countrylanguage.Language",
        "select_candidates": [
            "select countrylanguage.Language",
            "select countrylanguage.Language, country.LocalName",
            "select countrylanguage.Language, country.Code",
            "select countrylanguage.Language, country.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9916679859161377,
            0.010469895787537098,
            0.0004873691068496555,
            0.0002398745418759063,
            0.0003526081272866577,
            0.000186428107554093,
            0.0003202768857590854,
            0.00017335097072646022
        ],
        "align_select": "select countrylanguage.Language",
        "align_structure": "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What language is predominantly spoken in Slovakia?",
        "gold_select": "select countrylanguage.Language",
        "select_candidates": [
            "select countrylanguage.Language",
            "select countrylanguage.Language, country.Code",
            "select countrylanguage.Language, country.Name",
            "select countrylanguage.Language, country.Capital"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9906496405601501,
            0.010268868878483772,
            0.0003199082857463509,
            0.00017413124442100525,
            0.0003059387381654233,
            0.00016138075443450361,
            0.0001650234335102141,
            0.00010515536996535957
        ],
        "align_select": "select countrylanguage.Language",
        "align_structure": "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What are the population and life expectancies in Nepal?",
        "gold_select": "select country.Population, country.LifeExpectancy",
        "select_candidates": [
            "select country.Population, country.LifeExpectancy",
            "select country.Code, country.Population, country.LifeExpectancy",
            "select country.Name, country.Population, country.LifeExpectancy",
            "select country.IndepYear, country.Population, country.LifeExpectancy"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.994155764579773,
            0.00034212920581921935,
            0.00022851169342175126,
            8.132056245813146e-05,
            0.00021729794389102608,
            7.446534436894581e-05,
            0.00020011153537780046,
            6.591963028768077e-05
        ],
        "align_select": "select country.Population, country.LifeExpectancy",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the population and life expectancies in Hong Kong?",
        "gold_select": "select country.Population, country.LifeExpectancy",
        "select_candidates": [
            "select country.Population, country.LifeExpectancy",
            "select country.Code, country.Name, country.Population, country.LifeExpectancy",
            "select country.Code, country.Population, country.LifeExpectancy",
            "select country.Name, country.Population, country.LifeExpectancy"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "city country",
            "city sqlite_sequence country",
            "sqlite_sequence country"
        ],
        "align_scores": [
            0.993842601776123,
            0.00033935188548639417,
            0.00023469749430660158,
            8.840696682455018e-05,
            0.00024459496489726007,
            8.646203787066042e-05,
            0.00023908386356197298,
            7.465205999324098e-05
        ],
        "align_select": "select country.Population, country.LifeExpectancy",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the population and life expectancies in Dominican Republic?",
        "gold_select": "select country.Population, country.LifeExpectancy",
        "select_candidates": [
            "select country.Population, country.LifeExpectancy",
            "select country.Code, country.Population, country.LifeExpectancy",
            "select country.IndepYear, country.Population, country.LifeExpectancy",
            "select country.Name, country.Population, country.LifeExpectancy"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "city country"
        ],
        "align_scores": [
            0.9940173625946045,
            0.0002555172541178763,
            0.00024711928563192487,
            8.269902900792658e-05,
            0.0002105758321704343,
            7.383920456049964e-05,
            0.0002350078575545922,
            7.421906047966331e-05
        ],
        "align_select": "select country.Population, country.LifeExpectancy",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the population and life expectancies in Lesotho?",
        "gold_select": "select country.Population, country.LifeExpectancy",
        "select_candidates": [
            "select country.Population, country.LifeExpectancy",
            "select country.Code, country.Population, country.LifeExpectancy",
            "select country.IndepYear, country.Population, country.LifeExpectancy",
            "select country.Name, country.Population, country.LifeExpectancy"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9938415288925171,
            0.0001162008848041296,
            0.00022551782603841275,
            0.00010338210995541885,
            0.0001984027767321095,
            8.178406278602779e-05,
            0.00022093871666584164,
            0.00010425844811834395
        ],
        "align_select": "select country.Population, country.LifeExpectancy",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the population and life expectancies in Bouvet Island?",
        "gold_select": "select country.Population, country.LifeExpectancy",
        "select_candidates": [
            "select country.Population, country.LifeExpectancy",
            "select country.Code, country.Population, country.LifeExpectancy",
            "select country.Code, country.Name, country.Population, country.LifeExpectancy",
            "select country.Name, country.Population, country.LifeExpectancy"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9947478175163269,
            0.0001244369923369959,
            0.00023631710791960359,
            0.00010585064592305571,
            0.00024161329201888293,
            8.693652489455417e-05,
            0.00023636962578166276,
            0.00011269062088103965
        ],
        "align_select": "select country.Population, country.LifeExpectancy",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the region and population of Nepal?",
        "gold_select": "select country.Population, country.Region",
        "select_candidates": [
            "select country.Region, country.Population",
            "select country.Name, country.Region, country.Population",
            "select country.Continent, country.Region, country.Population",
            "select country.Region, country.Population, country.Capital"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "city country"
        ],
        "align_scores": [
            0.9960997104644775,
            0.00010566569835646078,
            0.00020411027071531862,
            8.9303168351762e-05,
            0.00023634033277630806,
            8.711053669685498e-05,
            0.000173229695064947,
            9.105784556595609e-05
        ],
        "align_select": "select country.Region, country.Population",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the region and population of Hong Kong?",
        "gold_select": "select country.Population, country.Region",
        "select_candidates": [
            "select country.Region, country.Population",
            "select country.Name, country.Region, country.Population",
            "select country.Continent, country.Region, country.Population",
            "select country.Region, country.Population, country.Capital"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "city country",
            "country",
            "city sqlite_sequence country"
        ],
        "align_scores": [
            0.9959729313850403,
            9.701506496639922e-05,
            0.0002312684227945283,
            9.6815092547331e-05,
            0.00026660875300876796,
            7.765361806377769e-05,
            0.0002046143781626597,
            9.173922444460914e-05
        ],
        "align_select": "select country.Region, country.Population",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the region and population of Dominican Republic?",
        "gold_select": "select country.Population, country.Region",
        "select_candidates": [
            "select country.Region, country.Population",
            "select country.Name, country.Region, country.Population",
            "select country.Continent, country.Region, country.Population",
            "select country.Region, country.Population, country.Capital"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "city country",
            "city sqlite_sequence country"
        ],
        "align_scores": [
            0.995779275894165,
            0.00011544367589522153,
            0.000226916978135705,
            9.262635285267606e-05,
            0.00030049573979340494,
            8.514401270076632e-05,
            0.0002137193805538118,
            9.296872303821146e-05
        ],
        "align_select": "select country.Region, country.Population",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the region and population of Lesotho?",
        "gold_select": "select country.Population, country.Region",
        "select_candidates": [
            "select country.Region, country.Population",
            "select country.Name, country.Region, country.Population",
            "select country.Continent, country.Region, country.Population",
            "select country.Region, country.Population, country.Capital"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "city country",
            "city sqlite_sequence country"
        ],
        "align_scores": [
            0.9961766004562378,
            0.00011436945351306349,
            0.0002337332407478243,
            8.838532085064799e-05,
            0.00023246067576110363,
            8.618298306828365e-05,
            0.00021522420865949243,
            9.147097443928942e-05
        ],
        "align_select": "select country.Region, country.Population",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the region and population of Bouvet Island?",
        "gold_select": "select country.Population, country.Region",
        "select_candidates": [
            "select country.Region, country.Population",
            "select country.Name, country.Region, country.Population",
            "select country.Continent, country.Region, country.Population",
            "select country.Region, country.Population, country.LifeExpectancy"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "city country"
        ],
        "align_scores": [
            0.9963132739067078,
            0.00011097904643975198,
            0.00024143366317730397,
            9.316404612036422e-05,
            0.0002951714559458196,
            8.702775812707841e-05,
            0.00044584099669009447,
            7.13738045305945e-05
        ],
        "align_select": "select country.Region, country.Population",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What region does Nepal belong to and what is its population?",
        "gold_select": "select country.Population, country.Region",
        "select_candidates": [
            "select country.Region, country.Population",
            "select country.Name, country.Region, country.Population",
            "select country.Continent, country.Region, country.Population",
            "select country.Continent, country.Population"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9960446357727051,
            7.172799087129533e-05,
            0.00019181483366992325,
            6.232251325855032e-05,
            0.000330381648382172,
            5.688534292858094e-05,
            0.1722247153520584,
            6.865240720799193e-05
        ],
        "align_select": "select country.Region, country.Population",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What region does Hong Kong belong to and what is its population?",
        "gold_select": "select country.Population, country.Region",
        "select_candidates": [
            "select country.Region, country.Population",
            "select country.Name, country.Region, country.Population",
            "select country.Continent, country.Region, country.Population",
            "select country.Continent, country.Population"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "city country",
            "sqlite_sequence country",
            "city sqlite_sequence country"
        ],
        "align_scores": [
            0.9954826831817627,
            0.00017683666374068707,
            0.00020676186250057071,
            0.00010226259473711252,
            0.00033544699545018375,
            8.689176320331171e-05,
            0.043786656111478806,
            0.00018206392996944487
        ],
        "align_select": "select country.Region, country.Population",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What region does Dominican Republic belong to and what is its population?",
        "gold_select": "select country.Population, country.Region",
        "select_candidates": [
            "select country.Region, country.Population",
            "select country.Name, country.Region, country.Population",
            "select country.Continent, country.Region, country.Population",
            "select country.Continent, country.Population"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "city country"
        ],
        "align_scores": [
            0.9963247179985046,
            0.00010106072295457125,
            0.00020242897153366357,
            8.52619850775227e-05,
            0.0003572625864762813,
            7.032538269413635e-05,
            0.9908663630485535,
            0.0001015719972201623
        ],
        "align_select": "select country.Region, country.Population",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What region does Lesotho belong to and what is its population?",
        "gold_select": "select country.Population, country.Region",
        "select_candidates": [
            "select country.Region, country.Population",
            "select country.Name, country.Region, country.Population",
            "select country.Continent, country.Region, country.Population",
            "select country.Region, count(*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "city country",
            "sqlite_sequence country"
        ],
        "align_scores": [
            0.9962879419326782,
            0.07085289061069489,
            0.00019204028649255633,
            0.0001987746509257704,
            0.00030353458714671433,
            0.00017881591338664293,
            0.9504254460334778,
            0.9807274341583252
        ],
        "align_select": "select country.Region, country.Population",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What region does Bouvet Island belong to and what is its population?",
        "gold_select": "select country.Population, country.Region",
        "select_candidates": [
            "select country.Region, country.Population",
            "select country.Name, country.Region, country.Population",
            "select country.Continent, country.Region, country.Population",
            "select country.Region, sum(country.Population)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9967638254165649,
            0.002212114632129669,
            0.0002057771198451519,
            0.00015172542771324515,
            0.0003079426824115217,
            0.00016142601089086384,
            0.0007914037560112774,
            0.5097028613090515
        ],
        "align_select": "select country.Region, country.Population",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the average expected life expectancy for countries in the region of Southern and Central Asia?",
        "gold_select": "select avg(country.LifeExpectancy)",
        "select_candidates": [
            "select avg(country.LifeExpectancy)",
            "select an avg(country.LifeExpectancy)",
            "select  avg(country.LifeExpectancy)",
            "select the avg(country.LifeExpectancy)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9881042838096619,
            0.0001505427062511444,
            0.00038438313640654087,
            0.00012746606080327183,
            0.9881042838096619,
            0.0001505427062511444,
            0.00041652837535366416,
            0.00015928024367894977
        ],
        "align_select": "select avg(country.LifeExpectancy)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the average expected life expectancy for countries in the region of Australia and New Zealand?",
        "gold_select": "select avg(country.LifeExpectancy)",
        "select_candidates": [
            "select avg(country.LifeExpectancy)",
            "select an avg(country.LifeExpectancy)",
            "select  avg(country.LifeExpectancy)",
            "select the avg(country.LifeExpectancy)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "sqlite_sequence country"
        ],
        "align_scores": [
            0.9918798804283142,
            0.0001585987047292292,
            0.0004509767168201506,
            0.00011783883383031934,
            0.9918798804283142,
            0.0001585987047292292,
            0.000512193888425827,
            0.0001423566573066637
        ],
        "align_select": "select avg(country.LifeExpectancy)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the average expected life expectancy for countries in the region of Caribbean?",
        "gold_select": "select avg(country.LifeExpectancy)",
        "select_candidates": [
            "select avg(country.LifeExpectancy)",
            "select an avg(country.LifeExpectancy)",
            "select  avg(country.LifeExpectancy)",
            "select avg(country.LifeExpectancy"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "sqlite_sequence country"
        ],
        "align_scores": [
            0.9932603240013123,
            0.00012280087685212493,
            0.00041699627763591707,
            0.00012004474410787225,
            0.9932603240013123,
            0.00012280087685212493,
            0.8961132168769836,
            0.00012858376430813223
        ],
        "align_select": "select avg(country.LifeExpectancy)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the average expected life expectancy for countries in the region of Eastern Europe?",
        "gold_select": "select avg(country.LifeExpectancy)",
        "select_candidates": [
            "select avg(country.LifeExpectancy)",
            "select an avg(country.LifeExpectancy)",
            "select  avg(country.LifeExpectancy)",
            "select the avg(country.LifeExpectancy)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "sqlite_sequence country"
        ],
        "align_scores": [
            0.9938727617263794,
            0.00018049500067718327,
            0.0004024636000394821,
            0.00013121285883244127,
            0.9938727617263794,
            0.00018049500067718327,
            0.00044695803080685437,
            0.00016677886014804244
        ],
        "align_select": "select avg(country.LifeExpectancy)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the average expected life expectancy for countries in the region of Southern Africa?",
        "gold_select": "select avg(country.LifeExpectancy)",
        "select_candidates": [
            "select avg(country.LifeExpectancy)",
            "select an avg(country.LifeExpectancy)",
            "select  avg(country.LifeExpectancy)",
            "select avg(country.Population)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9933063387870789,
            0.00015983646153472364,
            0.0004246487224008888,
            0.0001270842330995947,
            0.9933063387870789,
            0.00015983646153472364,
            0.0007035086746327579,
            0.00014912958431523293
        ],
        "align_select": "select avg(country.LifeExpectancy)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How long is the people\u2019s average life expectancy in Southern and Central Asia?",
        "gold_select": "select avg(country.LifeExpectancy)",
        "select_candidates": [
            "select avg(country.LifeExpectancy)",
            "select avg(country.LifeExpectancy), country.Population",
            "select an avg(country.LifeExpectancy)",
            "select  avg(country.LifeExpectancy)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "sqlite_sequence country"
        ],
        "align_scores": [
            0.9923720359802246,
            0.0001771223614923656,
            0.0001349531376035884,
            0.00015274285397026688,
            0.00039581055170856416,
            0.00013584797852672637,
            0.9923720359802246,
            0.0001771223614923656
        ],
        "align_select": "select avg(country.LifeExpectancy)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How long is the people\u2019s average life expectancy in Australia and New Zealand?",
        "gold_select": "select avg(country.LifeExpectancy)",
        "select_candidates": [
            "select avg(country.LifeExpectancy)",
            "select an avg(country.LifeExpectancy)",
            "select avg(country.LifeExpectancy), country.Region",
            "select avg(country.LifeExpectancy), country.Population"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "sqlite_sequence country"
        ],
        "align_scores": [
            0.9938219785690308,
            0.17760112881660461,
            0.000453661399660632,
            0.00023847600095905364,
            0.00020815145398955792,
            0.00011456462380010635,
            0.00014407248818315566,
            9.607785614207387e-05
        ],
        "align_select": "select avg(country.LifeExpectancy)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How long is the people\u2019s average life expectancy in Caribbean?",
        "gold_select": "select avg(country.LifeExpectancy)",
        "select_candidates": [
            "select avg(country.LifeExpectancy)",
            "select an avg(country.LifeExpectancy)",
            "select avg(country.LifeExpectancy), country.Population",
            "select  avg(country.LifeExpectancy)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "sqlite_sequence country"
        ],
        "align_scores": [
            0.9937083721160889,
            7.45074066799134e-05,
            0.00041277724085375667,
            9.856298856902868e-05,
            0.00013309014320839196,
            6.344385474221781e-05,
            0.9937083721160889,
            7.45074066799134e-05
        ],
        "align_select": "select avg(country.LifeExpectancy)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How long is the people\u2019s average life expectancy in Eastern Europe?",
        "gold_select": "select avg(country.LifeExpectancy)",
        "select_candidates": [
            "select avg(country.LifeExpectancy)",
            "select an avg(country.LifeExpectancy)",
            "select avg(country.LifeExpectancy), country.Population",
            "select  avg(country.LifeExpectancy)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "city country",
            "sqlite_sequence country"
        ],
        "align_scores": [
            0.9945945143699646,
            0.00014399655628949404,
            0.0004400182224344462,
            0.00013066697283647954,
            0.0001336960995104164,
            0.0001600928808329627,
            0.9945945143699646,
            0.00014399655628949404
        ],
        "align_select": "select avg(country.LifeExpectancy)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How long is the people\u2019s average life expectancy in Southern Africa?",
        "gold_select": "select avg(country.LifeExpectancy)",
        "select_candidates": [
            "select avg(country.LifeExpectancy)",
            "select an avg(country.LifeExpectancy)",
            "select avg(country.LifeExpectancy), country.Population",
            "select  avg(country.LifeExpectancy)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "sqlite_sequence country",
            "city country"
        ],
        "align_scores": [
            0.9943470358848572,
            0.00014069583266973495,
            0.0004542717942968011,
            0.00012638355838134885,
            0.0001380573958158493,
            0.00018607897800393403,
            0.9943470358848572,
            0.00014069583266973495
        ],
        "align_select": "select avg(country.LifeExpectancy)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the name of country that has the shortest life expectancy in Oceania?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Continent",
            "select country.Name, country.Code",
            "select country.Name, country.LifeExpectancy"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9929419755935669,
            0.0002596974663902074,
            0.0002615636039990932,
            0.00010803266923176125,
            0.0011663729092106223,
            0.00013638962991535664,
            0.0006577683961950243,
            9.965948993340135e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT"
    },
    {
        "question": "What is the name of country that has the shortest life expectancy in South America?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Region",
            "select country.Name, country.Continent",
            "select country.Name, country.Code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9914413690567017,
            0.00031354589737020433,
            0.00023792048159521073,
            0.00011316250311210752,
            0.0002734040026552975,
            0.00011595792602747679,
            0.0010575831402093172,
            0.00014635031402576715
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT"
    },
    {
        "question": "What is the name of country that has the shortest life expectancy in Europe?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Continent",
            "select country.Name, country.Code",
            "select country.Name, country.Region"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.99054354429245,
            0.0004288853670004755,
            0.0003035302215721458,
            0.00014223479956854135,
            0.001022853422909975,
            0.0001532632450107485,
            0.000258634943747893,
            0.00012849185441154987
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT"
    },
    {
        "question": "What is the name of country that has the shortest life expectancy in Antarctica?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Region",
            "select country.Name, country.Continent",
            "select country.Name, country.Code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9931150078773499,
            0.0002077788522001356,
            0.00022126674593891948,
            9.302574471803382e-05,
            0.0002373725874349475,
            9.226350812241435e-05,
            0.001125459442846477,
            0.00011791932047344744
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT"
    },
    {
        "question": "What is the name of country that has the shortest life expectancy in North America?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Region",
            "select country.Name, country.Continent",
            "select country.Name, country.Code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9900318384170532,
            0.00044121971586719155,
            0.0002419641677988693,
            0.0001293945824727416,
            0.00028063339414075017,
            0.0001249934284714982,
            0.0009986987570300698,
            0.0001598378294147551
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT"
    },
    {
        "question": "Give the name of the country in Oceania with the lowest life expectancy.",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Continent",
            "select country.Name, country.LifeExpectancy",
            "select country.Name, country.Population"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9937498569488525,
            0.00022376407287083566,
            0.0002216223074356094,
            0.00010160629608435556,
            0.0006964761996641755,
            9.250083530787379e-05,
            0.00017798783665057272,
            8.797588816378266e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT"
    },
    {
        "question": "Give the name of the country in South America with the lowest life expectancy.",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Region",
            "select country.Name, country.Continent",
            "select country.Name, country.Population"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9912202954292297,
            0.00031661250977776945,
            0.00020802664221264422,
            0.00010407866648165509,
            0.00023298896849155426,
            0.00011227991490159184,
            0.00019293592777103186,
            9.502447937848046e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT"
    },
    {
        "question": "Give the name of the country in Europe with the lowest life expectancy.",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Continent",
            "select country.Name, country.Region",
            "select country.Name, country.LifeExpectancy"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9909108281135559,
            0.00024645222583785653,
            0.0002384116523899138,
            0.00011397774505894631,
            0.00022668343444820493,
            0.00010098192433360964,
            0.0008402441744692624,
            9.504758781986311e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT"
    },
    {
        "question": "Give the name of the country in Antarctica with the lowest life expectancy.",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Region",
            "select country.Name, country.Continent",
            "select country.Name (country.LifeExpectancy)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9935294985771179,
            0.00021219348127488047,
            0.00019223152776248753,
            9.500980377197266e-05,
            0.00022738956613466144,
            0.00010402289626654238,
            0.002145657315850258,
            8.437527139903978e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT"
    },
    {
        "question": "Give the name of the country in North America with the lowest life expectancy.",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Region",
            "select country.Name, country.Continent",
            "select country.Name, country.Population"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9904066920280457,
            0.0003389377670828253,
            0.00021732220193371177,
            0.00011056202492909506,
            0.00024782170657999814,
            0.00011692916450556368,
            0.0001889775594463572,
            9.479685832047835e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT"
    },
    {
        "question": "What is the total population and maximum GNP in Oceania?",
        "gold_select": "select sum(country.Population), max(country.GNP)",
        "select_candidates": [
            "select sum(country.Population), max(country.GNP)",
            "select max(country.GNP), sum(country.Population)",
            "select country.Population, max(country.GNP)",
            "select sum(country.IndepYear), max(country.GNP)"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.995781660079956,
            0.00017789822595659643,
            0.9962638020515442,
            0.00024223836953751743,
            0.987640917301178,
            0.00010371646203566343,
            0.00026409782003611326,
            9.556187433190644e-05
        ],
        "align_select": "select sum(country.Population), max(country.GNP)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the total population and maximum GNP in South America?",
        "gold_select": "select sum(country.Population), max(country.GNP)",
        "select_candidates": [
            "select sum(country.Population), max(country.GNP)",
            "select max(country.GNP), sum(country.Population)",
            "select sum(country.IndepYear), max(country.GNP)",
            "select sum(country.Population, max(country.GNP)"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9954237341880798,
            0.00012090681411791593,
            0.9960055947303772,
            0.00010543579264776781,
            0.00024886924074962735,
            8.862154209055007e-05,
            0.0035895511973649263,
            0.00016950268764048815
        ],
        "align_select": "select sum(country.Population), max(country.GNP)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the total population and maximum GNP in Europe?",
        "gold_select": "select sum(country.Population), max(country.GNP)",
        "select_candidates": [
            "select sum(country.Population), max(country.GNP)",
            "select max(country.GNP), sum(country.Population)",
            "select country.Population, max(country.GNP)",
            "select sum(country.IndepYear), max(country.GNP)"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9957048296928406,
            0.00011309798719594255,
            0.9962095022201538,
            8.760493801673874e-05,
            0.988742470741272,
            0.00014729672693647444,
            0.00022370668011717498,
            8.24645976535976e-05
        ],
        "align_select": "select sum(country.Population), max(country.GNP)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the total population and maximum GNP in Antarctica?",
        "gold_select": "select sum(country.Population), max(country.GNP)",
        "select_candidates": [
            "select sum(country.Population), max(country.GNP)",
            "select max(country.GNP), sum(country.Population)",
            "select sum(country.IndepYear), max(country.GNP)",
            "select total(country.Population), max(country.GNP)"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9957237243652344,
            7.423527131322771e-05,
            0.9961793422698975,
            7.037752220639959e-05,
            0.00025577808264642954,
            7.557526987511665e-05,
            0.0006749832537025213,
            0.00012793460336979479
        ],
        "align_select": "select sum(country.Population), max(country.GNP)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the total population and maximum GNP in North America?",
        "gold_select": "select sum(country.Population), max(country.GNP)",
        "select_candidates": [
            "select sum(country.Population), max(country.GNP)",
            "select max(country.GNP), sum(country.Population)",
            "select sum(country.IndepYear), max(country.GNP)",
            "select sum(country.Population, max(country.GNP)"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9954967498779297,
            0.00012280227383598685,
            0.9960933327674866,
            0.0001494882017141208,
            0.000254392740316689,
            8.241098839789629e-05,
            0.003198000369593501,
            0.00011151114449603483
        ],
        "align_select": "select sum(country.Population), max(country.GNP)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give the average life expectancy for countries in Oceania which are republics?",
        "gold_select": "select avg(country.LifeExpectancy)",
        "select_candidates": [
            "select avg(country.LifeExpectancy)",
            "select avg(country.LifeExpectancy), country.Population",
            "select an avg(country.LifeExpectancy)",
            "select avg(country.LifeExpectancy), country.GovernmentForm"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9956763386726379,
            0.00014195362746249884,
            0.00015649096167180687,
            8.925983274821192e-05,
            0.0004046388203278184,
            0.00010628860036376864,
            0.00021269336866680533,
            0.0005226448411121964
        ],
        "align_select": "select avg(country.LifeExpectancy)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give the average life expectancy for countries in South America which are republics?",
        "gold_select": "select avg(country.LifeExpectancy)",
        "select_candidates": [
            "select avg(country.LifeExpectancy)",
            "select avg(country.LifeExpectancy), country.Population",
            "select an avg(country.LifeExpectancy)",
            "select  avg(country.LifeExpectancy)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9953519105911255,
            0.0002573970996309072,
            0.000147846934851259,
            9.476576815359294e-05,
            0.00042060227133333683,
            0.00011890492169186473,
            0.9953519105911255,
            0.0002573970996309072
        ],
        "align_select": "select avg(country.LifeExpectancy)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give the average life expectancy for countries in Asia which are republics?",
        "gold_select": "select avg(country.LifeExpectancy)",
        "select_candidates": [
            "select avg(country.LifeExpectancy)",
            "select avg(country.LifeExpectancy), country.Population",
            "select an avg(country.LifeExpectancy)",
            "select  avg(country.LifeExpectancy)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9955084323883057,
            0.00013686268357560039,
            0.00015577131125610322,
            8.86183261172846e-05,
            0.0004130031738895923,
            0.00010823507909663022,
            0.9955084323883057,
            0.00013686268357560039
        ],
        "align_select": "select avg(country.LifeExpectancy)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give the average life expectancy for countries in Europe which are republics?",
        "gold_select": "select avg(country.LifeExpectancy)",
        "select_candidates": [
            "select avg(country.LifeExpectancy)",
            "select avg(country.LifeExpectancy), country.Population",
            "select an avg(country.LifeExpectancy)",
            "select avg(country.LifeExpectancy), country.Continent"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9955933690071106,
            0.00013494439190253615,
            0.0001528540306026116,
            8.899228851078078e-05,
            0.00039935242966748774,
            0.00010922357614617795,
            0.00018532130343373865,
            9.452903759665787e-05
        ],
        "align_select": "select avg(country.LifeExpectancy)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give the average life expectancy for countries in Antarctica which are republics?",
        "gold_select": "select avg(country.LifeExpectancy)",
        "select_candidates": [
            "select avg(country.LifeExpectancy)",
            "select avg(country.LifeExpectancy), country.Population",
            "select an avg(country.LifeExpectancy)",
            "select  avg(country.LifeExpectancy)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "sqlite_sequence country",
            "city sqlite_sequence country",
            "city country"
        ],
        "align_scores": [
            0.9949641227722168,
            0.00013225202565081418,
            0.00014754188305232674,
            0.00017489169840700924,
            0.0003882763267029077,
            0.0001188734095194377,
            0.9949641227722168,
            0.00013225202565081418
        ],
        "align_select": "select avg(country.LifeExpectancy)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the total surface area of the continents Oceania and Europe?",
        "gold_select": "select sum(country.SurfaceArea)",
        "select_candidates": [
            "select sum(country.SurfaceArea)",
            "select sum(country.SurfaceArea), country.Continent",
            "select sum(country.SurfaceArea), country.Population",
            "select sum(country.SurfaceArea), country.Continent1"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "city country",
            "sqlite_sequence country"
        ],
        "align_scores": [
            0.9964248538017273,
            0.00033176757278852165,
            0.0001657316170167178,
            9.679514914751053e-05,
            0.00014300599286798388,
            8.789120329311118e-05,
            0.000179168171598576,
            9.77033851086162e-05
        ],
        "align_select": "select sum(country.SurfaceArea)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the total surface area of the continents South America and Europe?",
        "gold_select": "select sum(country.SurfaceArea)",
        "select_candidates": [
            "select sum(country.SurfaceArea)",
            "select sum(country.SurfaceArea), country.Continent",
            "select sum(country.SurfaceArea), country.Population",
            "select sum(country.SurfaceArea), country.IndepYear"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "city country",
            "sqlite_sequence country"
        ],
        "align_scores": [
            0.9955586194992065,
            0.0004314893449191004,
            0.00015512446407228708,
            0.00010267749894410372,
            0.00014917807129677385,
            9.03992768144235e-05,
            0.00011092762724729255,
            9.088876686291769e-05
        ],
        "align_select": "select sum(country.SurfaceArea)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the total surface area of the continents Europe and Europe?",
        "gold_select": "select sum(country.SurfaceArea)",
        "select_candidates": [
            "select sum(country.SurfaceArea)",
            "select sum(country.SurfaceArea), country.Continent",
            "select sum(country.SurfaceArea)across country.Continent, country.Region",
            "select sum(country.SurfaceArea)across country.Continent, country.SurfaceArea"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "city country",
            "sqlite_sequence country"
        ],
        "align_scores": [
            0.5913850665092468,
            0.00024425028823316097,
            0.00015121932665351778,
            9.594272705726326e-05,
            0.00014924223069101572,
            0.00010095554171130061,
            0.0001268312189495191,
            9.840210987022147e-05
        ],
        "align_select": "select sum(country.SurfaceArea)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the total surface area of the continents Antarctica and Europe?",
        "gold_select": "select sum(country.SurfaceArea)",
        "select_candidates": [
            "select sum(country.SurfaceArea)",
            "select sum(country.SurfaceArea), country.Continent",
            "select sum(country.SurfaceArea), country.IndepYear",
            "select sum(country.SurfaceArea), country.Population"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "city country",
            "sqlite_sequence country",
            "country countrylanguage"
        ],
        "align_scores": [
            0.9960475564002991,
            0.00021201629715505987,
            0.00016843306366354227,
            9.037557174451649e-05,
            0.00011818587518064305,
            8.369381248485297e-05,
            0.00014911749167367816,
            8.453175541944802e-05
        ],
        "align_select": "select sum(country.SurfaceArea)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the total surface area of the continents North America and Europe?",
        "gold_select": "select sum(country.SurfaceArea)",
        "select_candidates": [
            "select sum(country.SurfaceArea)",
            "select sum(country.SurfaceArea), country.Continent",
            "select sum(country.SurfaceArea) def. country.Continent",
            "select sum(country.SurfaceArea) delimited by country.Continent"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "city country",
            "sqlite_sequence country"
        ],
        "align_scores": [
            0.9964866638183594,
            0.000383986858651042,
            0.0001702187437331304,
            0.00010201928671449423,
            0.00027340816450305283,
            0.00017440061492379755,
            0.0002610105730127543,
            0.00010391086834715679
        ],
        "align_select": "select sum(country.SurfaceArea)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the total surface area of the continents Asia and Oceania?",
        "gold_select": "select sum(country.SurfaceArea)",
        "select_candidates": [
            "select sum(country.SurfaceArea)",
            "select sum(country.SurfaceArea), country.Continent",
            "select sum(country.SurfaceArea) delimited by country.Continent",
            "select sum(country.SurfaceArea), country.Population"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "sqlite_sequence country",
            "city country"
        ],
        "align_scores": [
            0.9966962337493896,
            0.0003314059285912663,
            0.00016838376177474856,
            9.462543675908819e-05,
            0.0002703165228012949,
            9.431536454940215e-05,
            0.00016208644956350327,
            8.646088826935738e-05
        ],
        "align_select": "select sum(country.SurfaceArea)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the total surface area of the continents Asia and South America?",
        "gold_select": "select sum(country.SurfaceArea)",
        "select_candidates": [
            "select sum(country.SurfaceArea)",
            "select sum(country.SurfaceArea), country.Continent",
            "select sum(country.SurfaceArea) def. country.Continent",
            "select sum(country.SurfaceArea) delimited by country.Continent"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "sqlite_sequence country",
            "city country",
            "country countrylanguage"
        ],
        "align_scores": [
            0.9953255653381348,
            0.000340893428074196,
            0.00015610050468239933,
            9.726666030474007e-05,
            0.00025334375095553696,
            0.00013740126451011747,
            0.00022296479437500238,
            9.779268293641508e-05
        ],
        "align_select": "select sum(country.SurfaceArea)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the total surface area of the continents Asia and Asia?",
        "gold_select": "select sum(country.SurfaceArea)",
        "select_candidates": [
            "select sum(country.SurfaceArea)",
            "select sum(country.SurfaceArea), country.Continent",
            "select sum(country.SurfaceArea), country.Continent",
            "select sum(country.SurfaceArea) def. country.Continent"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "sqlite_sequence country",
            "city country"
        ],
        "align_scores": [
            0.7943735122680664,
            0.0002229263336630538,
            0.00015655455354135484,
            9.802647400647402e-05,
            0.00015655455354135484,
            9.802647400647402e-05,
            0.00023882002278696746,
            0.00012445170432329178
        ],
        "align_select": "select sum(country.SurfaceArea)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the total surface area of the continents Asia and Antarctica?",
        "gold_select": "select sum(country.SurfaceArea)",
        "select_candidates": [
            "select sum(country.SurfaceArea)",
            "select sum(country.SurfaceArea), country.Continent",
            "select sum(country.SurfaceArea) delimited by country.Continent",
            "select sum(country.SurfaceArea) def. country.Continent"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "country countrylanguage",
            "city country",
            "sqlite_sequence country"
        ],
        "align_scores": [
            0.9935262203216553,
            0.00019219999376218766,
            0.00017236106214113533,
            8.975419768830761e-05,
            0.00022335353423841298,
            9.400791896041483e-05,
            0.0002607707865536213,
            0.00011323847866151482
        ],
        "align_select": "select sum(country.SurfaceArea)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the total surface area of the continents Asia and North America?",
        "gold_select": "select sum(country.SurfaceArea)",
        "select_candidates": [
            "select sum(country.SurfaceArea)",
            "select sum(country.SurfaceArea), country.Continent",
            "select sum(country.SurfaceArea) def. country.Continent",
            "select sum(country.SurfaceArea) delimited by country.Continent"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "city country",
            "sqlite_sequence country"
        ],
        "align_scores": [
            0.9958425164222717,
            0.0003708621661644429,
            0.00016541112563572824,
            9.95922164293006e-05,
            0.000264674803474918,
            0.0001457367470720783,
            0.00021256563195493072,
            9.911152301356196e-05
        ],
        "align_select": "select sum(country.SurfaceArea)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give the total surface area covered by countries in Oceania or Europe.",
        "gold_select": "select sum(country.SurfaceArea)",
        "select_candidates": [
            "select sum(country.SurfaceArea)",
            "select sum(country.SurfaceArea), country.Name",
            "select sum(country.SurfaceArea), country.IndepYear",
            "select sum(country.SurfaceArea), country.Continent"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "sqlite_sequence country"
        ],
        "align_scores": [
            0.9963666200637817,
            0.0015038278652355075,
            0.0001625383592909202,
            0.00023051156313158572,
            0.00011720108886947855,
            0.0001770830131135881,
            0.00015519472071900964,
            0.00015886554319877177
        ],
        "align_select": "select sum(country.SurfaceArea)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give the total surface area covered by countries in South America or Europe.",
        "gold_select": "select sum(country.SurfaceArea)",
        "select_candidates": [
            "select sum(country.SurfaceArea)",
            "select sum(country.SurfaceArea), country.Continent",
            "select sum(country.SurfaceArea) delimited by country.Continent",
            "select sum(country.SurfaceArea), country.Region"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9946229457855225,
            0.0010586017742753029,
            0.0001464142551412806,
            0.00018534551782067865,
            0.0009224583627656102,
            0.00010205247963313013,
            0.00020949741883669049,
            0.0002423968689981848
        ],
        "align_select": "select sum(country.SurfaceArea)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give the total surface area covered by countries in Europe or Europe.",
        "gold_select": "select sum(country.SurfaceArea)",
        "select_candidates": [
            "select sum(country.SurfaceArea)",
            "select sum(country.SurfaceArea), country.Continent",
            "select sum(country.SurfaceArea), country.Name",
            "select sum(country.SurfaceArea), country.IndepYear"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9890450239181519,
            0.00010164262494072318,
            0.00012407216127030551,
            7.114317122614011e-05,
            0.00016607997531536967,
            7.489377458114177e-05,
            0.000110350847535301,
            6.506656063720584e-05
        ],
        "align_select": "select sum(country.SurfaceArea)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give the total surface area covered by countries in Antarctica or Europe.",
        "gold_select": "select sum(country.SurfaceArea)",
        "select_candidates": [
            "select sum(country.SurfaceArea)",
            "select sum(country.SurfaceArea), country.Continent",
            "select sum(country.SurfaceArea), country.Name",
            "select sum(country.SurfaceArea), country.IndepYear"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9951382875442505,
            0.0003254699695389718,
            0.00018512934911996126,
            0.00012011218495899811,
            0.00017623287567403167,
            0.00018613433348946273,
            0.00011328417167533189,
            0.00015400597476400435
        ],
        "align_select": "select sum(country.SurfaceArea)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give the total surface area covered by countries in North America or Europe.",
        "gold_select": "select sum(country.SurfaceArea)",
        "select_candidates": [
            "select sum(country.SurfaceArea)",
            "select sum(country.SurfaceArea), country.Continent",
            "select sum(country.SurfaceArea), country.Region",
            "select sum(country.SurfaceArea), country.IndepYear"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9964231848716736,
            0.01419865246862173,
            0.00014805374667048454,
            0.0002229945530416444,
            0.00021348046720959246,
            0.00022226266446523368,
            0.00011916530638700351,
            0.00015679103671573102
        ],
        "align_select": "select sum(country.SurfaceArea)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give the total surface area covered by countries in Asia or Oceania.",
        "gold_select": "select sum(country.SurfaceArea)",
        "select_candidates": [
            "select sum(country.SurfaceArea)",
            "select sum(country.SurfaceArea), country.Name",
            "select sum(country.SurfaceArea), country.IndepYear",
            "select sum(country.SurfaceArea), country.Continent"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9966073036193848,
            0.00012119365419493988,
            0.00017488718731328845,
            0.004991194698959589,
            0.00012560001050587744,
            0.0005488685565069318,
            0.00017419966752640903,
            0.22950780391693115
        ],
        "align_select": "select sum(country.SurfaceArea)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give the total surface area covered by countries in Asia or South America.",
        "gold_select": "select sum(country.SurfaceArea)",
        "select_candidates": [
            "select sum(country.SurfaceArea)",
            "select sum(country.SurfaceArea), country.Continent",
            "select sum(country.SurfaceArea), country.Region",
            "select sum(country.SurfaceArea) delimited by country.Continent"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9951640367507935,
            0.0007745786570012569,
            0.00015708357386756688,
            0.00024004433362279087,
            0.00022321578580886126,
            0.0003005355247296393,
            0.0007696556276641786,
            0.00011414044274715707
        ],
        "align_select": "select sum(country.SurfaceArea)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give the total surface area covered by countries in Asia or Asia.",
        "gold_select": "select sum(country.SurfaceArea)",
        "select_candidates": [
            "select sum(country.SurfaceArea)",
            "select sum(country.SurfaceArea), country.Continent",
            "select sum(country.SurfaceArea), country.Name",
            "select sum(country.SurfaceArea), country.IndepYear"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "sqlite_sequence country",
            "city country"
        ],
        "align_scores": [
            0.9574344754219055,
            0.0001495728938607499,
            0.00011860777885885909,
            0.29537034034729004,
            0.00017261566244997084,
            0.0009732006001286209,
            0.00011407603597035632,
            0.00027709334972314537
        ],
        "align_select": "select sum(country.SurfaceArea)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give the total surface area covered by countries in Asia or Antarctica.",
        "gold_select": "select sum(country.SurfaceArea)",
        "select_candidates": [
            "select sum(country.SurfaceArea)",
            "select sum(country.SurfaceArea), country.Continent",
            "select sum(country.SurfaceArea), country.Region",
            "select sum(country.SurfaceArea), country.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "sqlite_sequence country",
            "city country"
        ],
        "align_scores": [
            0.9935320615768433,
            0.00014871818711981177,
            0.00019009278912562877,
            0.00012581961345858872,
            0.00024570661480538547,
            0.00018874327361118048,
            0.00018492272647563368,
            0.00017880159430205822
        ],
        "align_select": "select sum(country.SurfaceArea)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give the total surface area covered by countries in Asia or North America.",
        "gold_select": "select sum(country.SurfaceArea)",
        "select_candidates": [
            "select sum(country.SurfaceArea)",
            "select sum(country.SurfaceArea), country.Continent",
            "select sum(country.SurfaceArea), country.Region",
            "select sum(country.SurfaceArea), country.IndepYear"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9958898425102234,
            0.0007145150448195636,
            0.00014923753042239696,
            0.00026235939003527164,
            0.0002061649865936488,
            0.0002933177456725389,
            0.00011725675722118467,
            0.00014408746210392565
        ],
        "align_select": "select sum(country.SurfaceArea)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many people live in Binh Dinh district?",
        "gold_select": "select sum(city.Population)",
        "select_candidates": [
            "select sum(city.Population)",
            "select count(*)",
            "select city.Population",
            "select sum(city.Population), city.District"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "city",
        "table_candidates": [
            "city"
        ],
        "align_scores": [
            0.8156448602676392,
            6.154287984827533e-05,
            0.9956795573234558,
            8.224886551033705e-05,
            0.9947690367698669,
            9.832679643295705e-05,
            0.00013617961667478085,
            6.397916877176613e-05
        ],
        "align_select": "select sum(city.Population)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many people live in Indiana district?",
        "gold_select": "select sum(city.Population)",
        "select_candidates": [
            "select sum(city.Population)",
            "select count(*)",
            "select city.Population",
            "select sum(city.Population), city.District"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "city",
        "table_candidates": [
            "city"
        ],
        "align_scores": [
            0.9728292226791382,
            6.49426510790363e-05,
            0.9955769777297974,
            7.525273395003751e-05,
            0.9952405691146851,
            0.00010011821723310277,
            0.00012002506264252588,
            6.392807699739933e-05
        ],
        "align_select": "select sum(city.Population)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many people live in Thimphu district?",
        "gold_select": "select sum(city.Population)",
        "select_candidates": [
            "select sum(city.Population)",
            "select count(*)",
            "select city.Population",
            "select sum(city.Population), city.District"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "city",
        "table_candidates": [
            "city",
            "city country"
        ],
        "align_scores": [
            0.7825868129730225,
            6.519145972561091e-05,
            0.99418044090271,
            9.246475383406505e-05,
            0.9923059344291687,
            0.00011459719826234505,
            0.00014983239816501737,
            6.428152846638113e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many people live in Oromia district?",
        "gold_select": "select sum(city.Population)",
        "select_candidates": [
            "select sum(city.Population)",
            "select city.Population",
            "select count(*)",
            "select sum(city.Population), city.District"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "city",
        "table_candidates": [
            "city"
        ],
        "align_scores": [
            0.9621037840843201,
            7.205383735708892e-05,
            0.9953246116638184,
            9.34530544327572e-05,
            0.9958688020706177,
            8.202977915061638e-05,
            0.00014069931057747453,
            6.349487375700846e-05
        ],
        "align_select": "select sum(city.Population)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many people live in Monagas district?",
        "gold_select": "select sum(city.Population)",
        "select_candidates": [
            "select sum(city.Population)",
            "select city.Population",
            "select count(*)",
            "select sum(city.Population), city.District"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "city",
        "table_candidates": [
            "city"
        ],
        "align_scores": [
            0.7310499548912048,
            6.920440500834957e-05,
            0.9951984286308289,
            0.0001114942497224547,
            0.9957660436630249,
            9.791622869670391e-05,
            0.00013337319251149893,
            6.379141268553212e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the total population of Binh Dinh district?",
        "gold_select": "select sum(city.Population)",
        "select_candidates": [
            "select sum(city.Population)",
            "select sum(city.Population), city.District",
            "select sum(city.Population), city.District, city.Population",
            "select sum(city.Population), city.District"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "city",
        "table_candidates": [
            "city",
            "city country"
        ],
        "align_scores": [
            0.9969527721405029,
            0.00279887649230659,
            0.00015240328502841294,
            0.006058122031390667,
            0.00026131534832529724,
            0.00010895653394982219,
            0.00015240328502841294,
            0.006058122031390667
        ],
        "align_select": "select sum(city.Population)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the total population of Indiana district?",
        "gold_select": "select sum(city.Population)",
        "select_candidates": [
            "select sum(city.Population)",
            "select sum(city.Population), city.District",
            "select sum(city.Population), city.District, city.Population",
            "select sum(city.Population), city.District"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "city",
        "table_candidates": [
            "city"
        ],
        "align_scores": [
            0.9966102242469788,
            0.0018745557172223926,
            0.0001421691704308614,
            0.18275505304336548,
            0.00018209988775197417,
            0.00013339660654310137,
            0.0001421691704308614,
            0.18275505304336548
        ],
        "align_select": "select sum(city.Population)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the total population of Thimphu district?",
        "gold_select": "select sum(city.Population)",
        "select_candidates": [
            "select sum(city.Population)",
            "select sum(city.Population), city.District",
            "select sum(city.Population), city.District, city.Population",
            "select sum(city.Population), city.District, city.Population"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "city",
        "table_candidates": [
            "city"
        ],
        "align_scores": [
            0.9963139891624451,
            0.0011190578807145357,
            0.0001556451024953276,
            0.0026709879748523235,
            0.0002536083629820496,
            9.741239773575217e-05,
            0.0002536083629820496,
            9.741239773575217e-05
        ],
        "align_select": "select sum(city.Population)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the total population of Oromia district?",
        "gold_select": "select sum(city.Population)",
        "select_candidates": [
            "select sum(city.Population)",
            "select sum(city.Population), city.District",
            "select sum(city.Population), city.District, city.Population",
            "select sum(city.Population), city.District, city.District"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "city",
        "table_candidates": [
            "city"
        ],
        "align_scores": [
            0.9969735145568848,
            0.00035390202538110316,
            0.00013848523667547852,
            0.025341663509607315,
            0.00019471118866931647,
            0.00013456723536364734,
            0.00014746228407602757,
            0.00011542035645106807
        ],
        "align_select": "select sum(city.Population)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the total population of Monagas district?",
        "gold_select": "select sum(city.Population)",
        "select_candidates": [
            "select sum(city.Population)",
            "select sum(city.Population), city.District",
            "select sum(city.Population), city.District, city.Population",
            "select sum(city.Population), city.District, city.District"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "city",
        "table_candidates": [
            "city",
            "city country"
        ],
        "align_scores": [
            0.9968153834342957,
            0.0004387428634800017,
            0.00014641271263826638,
            0.08253498375415802,
            0.00020332884741947055,
            0.00014062190894037485,
            0.00015394826186820865,
            0.0001231891947099939
        ],
        "align_select": "select sum(city.Population)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many type of governments are in Oceania?",
        "gold_select": "select count(distinct country.GovernmentForm)",
        "select_candidates": [
            "select count(distinct country.GovernmentForm)",
            "select count(distinct country.Name)",
            "select count(distinct country.GovernmentForm",
            "select count(distinct country.IndepYear)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9951025247573853,
            0.9951025247573853,
            0.02758856862783432,
            0.02758856862783432,
            0.4573202133178711,
            0.4573202133178711,
            0.0005994202219881117,
            0.0005994202219881117
        ],
        "align_select": "select count(distinct country.GovernmentForm)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many type of governments are in South America?",
        "gold_select": "select count(distinct country.GovernmentForm)",
        "select_candidates": [
            "select count(distinct country.GovernmentForm)",
            "select count(distinct country.Name)",
            "select count(distinct country.GovernmentForm",
            "select count(distinct country.IndepYear)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9952214360237122,
            0.9952214360237122,
            0.05399197340011597,
            0.05399197340011597,
            0.4463212788105011,
            0.4463212788105011,
            0.000586609065067023,
            0.000586609065067023
        ],
        "align_select": "select count(distinct country.GovernmentForm)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many type of governments are in Asia?",
        "gold_select": "select count(distinct country.GovernmentForm)",
        "select_candidates": [
            "select count(distinct country.GovernmentForm)",
            "select count(distinct country.Name)",
            "select count(distinct country.GovernmentForm",
            "select count(distinct country.IndepYear)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9936104416847229,
            9.049691288964823e-05,
            0.012461742386221886,
            7.962759264046326e-05,
            0.38707825541496277,
            0.00013798815780319273,
            0.0005156892002560198,
            8.366077963728458e-05
        ],
        "align_select": "select count(distinct country.GovernmentForm)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many type of governments are in Antarctica?",
        "gold_select": "select count(distinct country.GovernmentForm)",
        "select_candidates": [
            "select count(distinct country.GovernmentForm)",
            "select count(distinct country.Name)",
            "select count(distinct country.GovernmentForm",
            "select count(distinct country.IndepYear)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "country countrylanguage",
            "sqlite_sequence country",
            "city country"
        ],
        "align_scores": [
            0.9947898387908936,
            0.9947898387908936,
            0.10911958664655685,
            0.10911958664655685,
            0.3511822819709778,
            0.3511822819709778,
            0.0008732816204428673,
            0.0008732816204428673
        ],
        "align_select": "select count(distinct country.GovernmentForm)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many type of governments are in North America?",
        "gold_select": "select count(distinct country.GovernmentForm)",
        "select_candidates": [
            "select count(distinct country.GovernmentForm)",
            "select count(distinct country.Name)",
            "select count(distinct country.GovernmentForm",
            "select count(distinct country.IndepYear)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9949573874473572,
            0.9949573874473572,
            0.027908049523830414,
            0.027908049523830414,
            0.4337230324745178,
            0.4337230324745178,
            0.0005768830305896699,
            0.0005768830305896699
        ],
        "align_select": "select count(distinct country.GovernmentForm)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many different forms of governments are there in Oceania?",
        "gold_select": "select count(distinct country.GovernmentForm)",
        "select_candidates": [
            "select count(distinct country.GovernmentForm)",
            "select count(distinct country.Name)",
            "select count(distinct country.GovernmentForm",
            "select count(distinct country.LocalName)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9959661960601807,
            0.9959661960601807,
            0.20024822652339935,
            0.20024822652339935,
            0.6122133135795593,
            0.6122133135795593,
            0.03246638551354408,
            0.03246638551354408
        ],
        "align_select": "select count(distinct country.GovernmentForm)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many different forms of governments are there in South America?",
        "gold_select": "select count(distinct country.GovernmentForm)",
        "select_candidates": [
            "select count(distinct country.GovernmentForm)",
            "select count(distinct country.Name)",
            "select count(distinct country.GovernmentForm",
            "select count(distinct country.LocalName)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9953147172927856,
            0.9953147172927856,
            0.2889787256717682,
            0.2889787256717682,
            0.47798269987106323,
            0.47798269987106323,
            0.08437468856573105,
            0.08437468856573105
        ],
        "align_select": "select count(distinct country.GovernmentForm)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many different forms of governments are there in Asia?",
        "gold_select": "select count(distinct country.GovernmentForm)",
        "select_candidates": [
            "select count(distinct country.GovernmentForm)",
            "select count(distinct country.Name)",
            "select count(distinct country.GovernmentForm",
            "select count(distinct country.LocalName)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9954115748405457,
            0.9954115748405457,
            0.05246781185269356,
            0.05246781185269356,
            0.5153475999832153,
            0.5153475999832153,
            0.021962428465485573,
            0.021962428465485573
        ],
        "align_select": "select count(distinct country.GovernmentForm)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many different forms of governments are there in Antarctica?",
        "gold_select": "select count(distinct country.GovernmentForm)",
        "select_candidates": [
            "select count(distinct country.GovernmentForm)",
            "select count(distinct country.Name)",
            "select count(distinct country.GovernmentForm",
            "select count(distinct country.LocalName)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "city country",
            "sqlite_sequence country"
        ],
        "align_scores": [
            0.9957137107849121,
            0.9957137107849121,
            0.5055539608001709,
            0.5055539608001709,
            0.5340232849121094,
            0.5340232849121094,
            0.04435596615076065,
            0.04435596615076065
        ],
        "align_select": "select count(distinct country.GovernmentForm)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many different forms of governments are there in North America?",
        "gold_select": "select count(distinct country.GovernmentForm)",
        "select_candidates": [
            "select count(distinct country.GovernmentForm)",
            "select count(distinct country.Name)",
            "select count(distinct country.GovernmentForm",
            "select count(distinct country.IndepYear)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.995191216468811,
            0.995191216468811,
            0.5083414316177368,
            0.5083414316177368,
            0.4479362368583679,
            0.4479362368583679,
            0.00523392902687192,
            0.00523392902687192
        ],
        "align_select": "select count(distinct country.GovernmentForm)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the total number of languages used in Nepal?",
        "gold_select": "select count(countrylanguage.Language)",
        "select_candidates": [
            "select count(distinct countrylanguage.Language)",
            "select count(*)",
            "select count(countrylanguage.Language)",
            "select count(selection count(distinct countrylanguage.Language)"
        ],
        "select_labels": [
            0.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9964644908905029,
            0.00013944233069196343,
            0.9947705864906311,
            0.0016537666087970138,
            0.9959239959716797,
            0.0004998348886147141,
            0.00039858868694864213,
            9.131713886745274e-05
        ],
        "align_select": "select count(distinct countrylanguage.Language)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the total number of languages used in Hong Kong?",
        "gold_select": "select count(countrylanguage.Language)",
        "select_candidates": [
            "select count(distinct countrylanguage.Language)",
            "select count(distinct country.Name)",
            "select count(distinct countrylanguage.Language, count(distinct countrylanguage.IsOfficial)",
            "select count(distinct countrylanguage.Language, count(distinct countrylanguage.Language)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country"
        ],
        "align_scores": [
            0.9962776303291321,
            0.0001368912635371089,
            0.1599007546901703,
            0.00015364120190497488,
            0.0003641332732513547,
            0.0001480649079894647,
            0.00015614456788171083,
            0.00013587946887128055
        ],
        "align_select": "select count(distinct countrylanguage.Language)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the total number of languages used in Dominican Republic?",
        "gold_select": "select count(countrylanguage.Language)",
        "select_candidates": [
            "select count(distinct countrylanguage.Language)",
            "select count(*)",
            "select count(countrylanguage.Language)",
            "select count(selection count(distinct countrylanguage.Language)"
        ],
        "select_labels": [
            0.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9968210458755493,
            0.0001336155692115426,
            0.9948371648788452,
            0.002948529552668333,
            0.9957931041717529,
            0.00038384817889891565,
            0.0003756906371563673,
            9.277875506086275e-05
        ],
        "align_select": "select count(distinct countrylanguage.Language)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the total number of languages used in Lesotho?",
        "gold_select": "select count(countrylanguage.Language)",
        "select_candidates": [
            "select count(distinct countrylanguage.Language)",
            "select count(countrylanguage.Language)",
            "select count(*)",
            "select count(selection count(distinct countrylanguage.Language)"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9963066577911377,
            0.00017072164337150753,
            0.996024489402771,
            0.00045045753358863294,
            0.9949358701705933,
            0.0009763024281710386,
            0.00043658213689923286,
            9.306034189648926e-05
        ],
        "align_select": "select count(distinct countrylanguage.Language)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the total number of languages used in Slovakia?",
        "gold_select": "select count(countrylanguage.Language)",
        "select_candidates": [
            "select count(distinct countrylanguage.Language)",
            "select count(countrylanguage.Language)",
            "select count(*)",
            "select count(count(distinct countrylanguage.Language)"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9963749051094055,
            0.00012889843492303044,
            0.9957977533340454,
            0.00021164164354559034,
            0.9946880340576172,
            0.0013823715271428227,
            0.0007760829757899046,
            0.00010508869308978319
        ],
        "align_select": "select count(distinct countrylanguage.Language)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many languages are spoken in Nepal?",
        "gold_select": "select count(countrylanguage.Language)",
        "select_candidates": [
            "select count(distinct countrylanguage.Language)",
            "select count(speechcount(distinct countrylanguage.Language)",
            "select count(countrylanguage.Language)",
            "select count(count(distinct countrylanguage.Language)"
        ],
        "select_labels": [
            0.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9966509938240051,
            0.00011448032455518842,
            0.0006327718729153275,
            0.00010525176912778988,
            0.9966204166412354,
            0.0006687692366540432,
            0.0005267293308861554,
            8.997408440336585e-05
        ],
        "align_select": "select count(distinct countrylanguage.Language)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many languages are spoken in Hong Kong?",
        "gold_select": "select count(countrylanguage.Language)",
        "select_candidates": [
            "select count(distinct countrylanguage.Language)",
            "select count(distinct country.Name)",
            "select count(distinct countrylanguage.Language, count(distinct country.Name)",
            "select count(distinct countrylanguage.Language, count(distinct countrylanguage.IsOfficial)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country"
        ],
        "align_scores": [
            0.9962322115898132,
            0.0001116041312343441,
            0.47541090846061707,
            0.00012873885862063617,
            0.00015205926320049912,
            9.567684901412576e-05,
            0.0002164177130907774,
            0.00011121052375528961
        ],
        "align_select": "select count(distinct countrylanguage.Language)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many languages are spoken in Dominican Republic?",
        "gold_select": "select count(countrylanguage.Language)",
        "select_candidates": [
            "select count(distinct countrylanguage.Language)",
            "select count(speechcount(distinct countrylanguage.Language)",
            "select count(countrylanguage.Language)",
            "select count(count(distinct countrylanguage.Language)"
        ],
        "select_labels": [
            0.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9968240261077881,
            0.00012027827324345708,
            0.0007697560940869153,
            0.00011736536544049159,
            0.9968727231025696,
            0.0007908500265330076,
            0.0005056567606516182,
            0.00010175142233492807
        ],
        "align_select": "select count(distinct countrylanguage.Language)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many languages are spoken in Lesotho?",
        "gold_select": "select count(countrylanguage.Language)",
        "select_candidates": [
            "select count(distinct countrylanguage.Language)",
            "select count(speechcount(distinct countrylanguage.Language)",
            "select count(count(distinct countrylanguage.Language)",
            "select count(countrylanguage.Language)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9966992735862732,
            0.0001485114189563319,
            0.0007914372836239636,
            0.00011856841592816636,
            0.0006317173829302192,
            9.813309588935226e-05,
            0.9968302845954895,
            0.0009316200739704072
        ],
        "align_select": "select count(distinct countrylanguage.Language)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many languages are spoken in Slovakia?",
        "gold_select": "select count(countrylanguage.Language)",
        "select_candidates": [
            "select count(distinct countrylanguage.Language)",
            "select count(speechcount(distinct countrylanguage.Language)",
            "select count(distinct countrylanguage.Language, count(distinct countrylanguage.IsOfficial)",
            "select count(countrylanguage.Language)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9965094923973083,
            0.00010877101885853335,
            0.0006926789646968246,
            0.0001022875658236444,
            0.00023191582295112312,
            0.00011075429210904986,
            0.9966602325439453,
            0.000518700631801039
        ],
        "align_select": "select count(distinct countrylanguage.Language)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many official languages does Nepal have?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(distinct countrylanguage.IsOfficial)",
            "select count(countrylanguage.IsOfficial)",
            "select count(distinct countrylanguage.Language)",
            "select count(1, countrylanguage.IsOfficial)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.09664104878902435,
            7.040946366032586e-05,
            0.007603966165333986,
            8.008349686861038e-05,
            0.9940124154090881,
            6.733259942848235e-05,
            0.0016657026717439294,
            8.888737647794187e-05
        ],
        "align_select": "select count(distinct countrylanguage.Language)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many official languages does Hong Kong have?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(distinct countrylanguage.IsOfficial)",
            "select count(distinct countrylanguage.Language)",
            "select count(countrylanguage.IsOfficial)",
            "select count(distinct countrylanguage.IsOfficial"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.2668837904930115,
            6.572059646714479e-05,
            0.99498051404953,
            6.283188849920407e-05,
            0.020812135189771652,
            8.181463635992259e-05,
            0.016325773671269417,
            7.777419523335993e-05
        ],
        "align_select": "select count(distinct countrylanguage.Language)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many official languages does Dominican Republic have?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(distinct countrylanguage.IsOfficial)",
            "select count(distinct countrylanguage.Language)",
            "select count(countrylanguage.IsOfficial)",
            "select count((distinct countrylanguage.IsOfficial)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.32858654856681824,
            6.927837239345536e-05,
            0.9958421587944031,
            6.671594746876508e-05,
            0.021430453285574913,
            7.746501069050282e-05,
            0.004621963482350111,
            7.965470285853371e-05
        ],
        "align_select": "select count(distinct countrylanguage.Language)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many official languages does Slovakia have?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(distinct countrylanguage.IsOfficial)",
            "select count(distinct countrylanguage.Language)",
            "select count(countrylanguage.IsOfficial)",
            "select count(1, countrylanguage.IsOfficial)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.2865736186504364,
            6.747162115061656e-05,
            0.9948234558105469,
            6.391392525983974e-05,
            0.021498970687389374,
            7.642654964001849e-05,
            0.0016842569457367063,
            8.651135431136936e-05
        ],
        "align_select": "select count(distinct countrylanguage.Language)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many official languages does Bolivia have?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(distinct countrylanguage.IsOfficial)",
            "select count(distinct countrylanguage.Language)",
            "select count(countrylanguage.IsOfficial)",
            "select count(*)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.23350253701210022,
            6.660851795459166e-05,
            0.9941387176513672,
            6.380005652317777e-05,
            0.016596492379903793,
            7.479287160094827e-05,
            0.9046071767807007,
            9.283875988330692e-05
        ],
        "align_select": "select count(distinct countrylanguage.Language)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many official languages are spoken in Nepal?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(distinct countrylanguage.IsOfficial)",
            "select count(distinct countrylanguage.Language)",
            "select count(countrylanguage.IsOfficial)",
            "select count(1, countrylanguage.IsOfficial)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.21743716299533844,
            0.0001287167688133195,
            0.9764533042907715,
            0.00014535179070662707,
            0.02651377022266388,
            0.002186306519433856,
            0.0018677375046536326,
            0.0005376616027206182
        ],
        "align_select": "select count(distinct countrylanguage.Language)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many official languages are spoken in Hong Kong?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(distinct countrylanguage.IsOfficial)",
            "select count(distinct countrylanguage.Language)",
            "select count(countrylanguage.IsOfficial)",
            "select count(distinct countrylanguage.IsOfficial"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.7503987550735474,
            0.00014586687029805034,
            0.9872661828994751,
            0.00014422231470234692,
            0.1720026731491089,
            0.0028797483537346125,
            0.0851677879691124,
            0.0001675186795182526
        ],
        "align_select": "select count(distinct countrylanguage.Language)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many official languages are spoken in Dominican Republic?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(distinct countrylanguage.IsOfficial)",
            "select count(distinct countrylanguage.Language)",
            "select count(countrylanguage.IsOfficial)",
            "select count(count(distinct countrylanguage.IsOfficial)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.72246253490448,
            0.00012307845463510603,
            0.9955872297286987,
            0.00015025760512799025,
            0.2799680531024933,
            0.002192093525081873,
            0.0006374071817845106,
            0.0001254843664355576
        ],
        "align_select": "select count(distinct countrylanguage.Language)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many official languages are spoken in Slovakia?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(distinct countrylanguage.IsOfficial)",
            "select count(distinct countrylanguage.Language)",
            "select count(countrylanguage.IsOfficial)",
            "select count(distinct t3.c6)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.7494483590126038,
            0.00013634371862281114,
            0.99444180727005,
            0.00014105623995419592,
            0.14530661702156067,
            0.0020050108432769775,
            0.0005041653057560325,
            0.00011799005733337253
        ],
        "align_select": "select count(distinct countrylanguage.Language)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many official languages are spoken in Bolivia?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(distinct countrylanguage.IsOfficial)",
            "select count(distinct countrylanguage.Language)",
            "select count(countrylanguage.IsOfficial)",
            "select count(count(distinct countrylanguage.IsOfficial)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.35165414214134216,
            0.0001279624120797962,
            0.9918550252914429,
            0.0001332272804575041,
            0.041787028312683105,
            0.002813395345583558,
            0.0006424910388886929,
            0.00012092929682694376
        ],
        "align_select": "select count(distinct countrylanguage.Language)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of nations speak both Catalan and French?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, countrylanguage.Language",
            "select country.Name, countrylanguage.CountryCode",
            "select country.Name, country.LocalName"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.993866503238678,
            0.00035039332578890026,
            0.0003155289450660348,
            0.00014543358702212572,
            0.0005242706974968314,
            0.00020867704006377608,
            0.00043453354737721384,
            0.0002442060213070363
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of nations speak both Swahili and French?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, countrylanguage.Language",
            "select country.Name, countrylanguage.CountryCode",
            "select country.Name, country.LocalName"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.9920971393585205,
            0.9920971393585205,
            0.00031916372245177627,
            0.00031916372245177627,
            0.0004185215220786631,
            0.0004185215220786631,
            0.0003903563192579895,
            0.0003903563192579895
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of nations speak both Japanese and French?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, countrylanguage.Language",
            "select country.Name, countrylanguage.CountryCode",
            "select country.Name, country.LocalName"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.9918438792228699,
            0.9918438792228699,
            0.0003254457551520318,
            0.0003254457551520318,
            0.0003752263728529215,
            0.0003752263728529215,
            0.0003424788301344961,
            0.0003424788301344961
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of nations speak both Crioulo and French?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, countrylanguage.Language",
            "select country.Name, countrylanguage.CountryCode",
            "select country.Name, country.LocalName"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.9941983222961426,
            0.9941983222961426,
            0.0002985000901389867,
            0.0002985000901389867,
            0.00044490574509836733,
            0.00044490574509836733,
            0.0004202204872854054,
            0.0004202204872854054
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of nations speak both Malagasy and French?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, countrylanguage.Language",
            "select country.Name, countrylanguage.CountryCode",
            "select country.Name, country.LocalName"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.99443519115448,
            0.026256339624524117,
            0.0002826885029207915,
            0.00021904967434238642,
            0.0003735925711225718,
            0.0002398254000581801,
            0.00039757281774654984,
            0.0002857932704500854
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of nations speak both English and Ndebele?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, countrylanguage.Language",
            "select country.Name, countrylanguage.CountryCode",
            "select country.Name, country.LocalName"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.9924018383026123,
            0.0002627393405418843,
            0.0002780150680337101,
            0.00012069060176145285,
            0.0004022869106847793,
            0.00015337392687797546,
            0.0009040978620760143,
            0.00020649981161113828
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of nations speak both English and Ainu?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, countrylanguage.Language",
            "select country.Name, countrylanguage.CountryCode",
            "select country.Name, country.LocalName"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.990344226360321,
            0.0013773180544376373,
            0.0002894916106015444,
            8.533778600394726e-05,
            0.00033136954880319536,
            0.00010870082769542933,
            0.0007750623044557869,
            0.0001072573650162667
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of nations speak both English and Tokelau?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, countrylanguage.Language",
            "select country.Name, countrylanguage.CountryCode",
            "select country.Name, country.LocalName"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.9910940527915955,
            0.00023895326012279838,
            0.00027549886726774275,
            0.00013028550893068314,
            0.00023895941558293998,
            0.0001459866762161255,
            0.0011266962392255664,
            0.0002072315983241424
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of nations speak both English and Palau?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, countrylanguage.CountryCode",
            "select country.Name, countrylanguage.Language",
            "select country.Name, country.Code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.9946087598800659,
            0.024059217423200607,
            0.0003734556376002729,
            0.0002475288638379425,
            0.00028329179622232914,
            0.0002181833697250113,
            0.00029774094582535326,
            0.0002244998177047819
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of nations speak both English and Malay?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, countrylanguage.Language",
            "select country.Name, countrylanguage.CountryCode",
            "select country.Name, country.LocalName"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.9930700659751892,
            0.014146087691187859,
            0.00028712552739307284,
            0.00021636325982399285,
            0.00037889101076871157,
            0.00024748663417994976,
            0.00087242282461375,
            0.00035422618384473026
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "Give the names of nations that speak both Catalan and French.",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, countrylanguage.Language",
            "select country.Name, countrylanguage.CountryCode",
            "select country.Name, country.LocalName"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.9942732453346252,
            0.0005342608783394098,
            0.000224660849198699,
            0.00014668366929981858,
            0.0004111878224648535,
            0.0002077356621157378,
            0.0006015789695084095,
            0.00026195644750259817
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "Give the names of nations that speak both Swahili and French.",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, countrylanguage.Language",
            "select country.Name, countrylanguage.CountryCode",
            "select country.Name, country.LocalName"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.9942228198051453,
            0.9942228198051453,
            0.00025169961736537516,
            0.00025169961736537516,
            0.0003612169239204377,
            0.0003612169239204377,
            0.0004816249420400709,
            0.0004816249420400709
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "Give the names of nations that speak both Japanese and French.",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, countrylanguage.Language",
            "select country.Name, countrylanguage.CountryCode",
            "select country.Name, country.Capital"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.9941190481185913,
            0.0015547748189419508,
            0.00024863824364729226,
            8.05434028734453e-05,
            0.00036788664874620736,
            0.00011235027341172099,
            0.0002166353224311024,
            8.209379302570596e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "Give the names of nations that speak both Crioulo and French.",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, countrylanguage.Language",
            "select country.Name, countrylanguage.CountryCode",
            "select country.Name, country.LocalName"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.9945363998413086,
            0.0028086865786463022,
            0.00021743867546319962,
            9.166096424451098e-05,
            0.0003334272187203169,
            0.0001358955487376079,
            0.00046094832941889763,
            0.00013908989785704762
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "Give the names of nations that speak both Malagasy and French.",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, countrylanguage.Language",
            "select country.Name, countrylanguage.CountryCode",
            "select country.Name, country.LocalName"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.994141161441803,
            0.0011874949559569359,
            0.00023471025633625686,
            8.177672862075269e-05,
            0.0003215242177248001,
            0.00011908556916750968,
            0.0004953850293532014,
            0.00012142627383582294
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "Give the names of nations that speak both English and Ndebele.",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, countrylanguage.Language",
            "select country.Name, countrylanguage.CountryCode",
            "select country.Name, country.Capital"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.994220495223999,
            0.0014342197682708502,
            0.0002377871423959732,
            8.830687875160947e-05,
            0.0003443312016315758,
            0.00012160298501839861,
            0.00023780393530614674,
            8.604682807344943e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "Give the names of nations that speak both English and Ainu.",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, countrylanguage.Language",
            "select country.Name, countrylanguage.CountryCode",
            "select country.Name, country.Capital"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.993715226650238,
            0.001971776597201824,
            0.00023523897107224911,
            8.581494330428541e-05,
            0.00034810081706382334,
            0.00011402317613828927,
            0.00020310138643253595,
            8.539306872989982e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "Give the names of nations that speak both English and Tokelau.",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, countrylanguage.Language",
            "select country.Name, country.LocalName",
            "select country.Name, countrylanguage.CountryCode"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.9894010424613953,
            0.00437799422070384,
            0.0002211125975009054,
            9.337234951090068e-05,
            0.0010102925589308143,
            0.00016488345863763243,
            0.00028669164748862386,
            0.000131521126604639
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "Give the names of nations that speak both English and Palau.",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, countrylanguage.Language",
            "select country.Name, countrylanguage.CountryCode",
            "select country.Name, country.Code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.9947032332420349,
            0.0025769940111786127,
            0.00021193707652855664,
            8.817762864055112e-05,
            0.00031704510911367834,
            0.0001276022376259789,
            0.00025720722624100745,
            9.711540042189881e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "Give the names of nations that speak both English and Malay.",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, countrylanguage.Language",
            "select country.Name, countrylanguage.CountryCode",
            "select country.Name, country.LocalName"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.9937764406204224,
            0.00214012386277318,
            0.00022686914599034935,
            8.629194780951366e-05,
            0.00034375127870589495,
            0.00011799186177086085,
            0.000966524938121438,
            0.00013741961447522044
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of nations where both Malagasy and French are official languages?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, countrylanguage.CountryCode",
            "select country.Name, country.LocalName",
            "select country.Name, countrylanguage.IsOfficial"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.9932358860969543,
            0.9932358860969543,
            0.0005263150087557733,
            0.0005263150087557733,
            0.00045237469021230936,
            0.00045237469021230936,
            0.0002351228176848963,
            0.0002351228176848963
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of nations where both Bislama and French are official languages?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, countrylanguage.Language",
            "select country.Name, country.LocalName",
            "select country.Name, countrylanguage.CountryCode"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.9940288066864014,
            0.9940288066864014,
            0.00028015728457830846,
            0.00028015728457830846,
            0.0005061298725195229,
            0.0005061298725195229,
            0.0005834397743456066,
            0.0005834397743456066
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of nations where both German and French are official languages?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, countrylanguage.Language",
            "select country.Name, country.LocalName",
            "select country.Name, countrylanguage.IsOfficial"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage"
        ],
        "align_scores": [
            0.9941930174827576,
            0.0008490353357046843,
            0.0002648649096954614,
            0.0001428405666956678,
            0.0003790492773987353,
            0.00020066829165443778,
            0.00025688958703540266,
            0.00012579707254189998
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of nations where both Kirundi and French are official languages?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.LocalName",
            "select country.Name, countrylanguage.CountryCode",
            "select country.Name, countrylanguage.Language"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.9936093091964722,
            0.9936093091964722,
            0.0005429004086181521,
            0.0005429004086181521,
            0.0005882215918973088,
            0.0005882215918973088,
            0.0002850955061148852,
            0.0002850955061148852
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of nations where both French and French are official languages?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, countrylanguage.IsOfficial",
            "select country.Name, countrylanguage.Language",
            "select country.Name, countrylanguage.CountryCode"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.9815441370010376,
            0.00037686520954594016,
            0.00020272351684980094,
            0.00010103739623446018,
            0.00021139216551091522,
            0.00011405515397200361,
            0.0004081040096934885,
            0.00016501793288625777
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of nations where both English and Palau are official languages?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, countrylanguage.CountryCode",
            "select country.Name, countrylanguage.IsOfficial",
            "select country.Name, countrylanguage.Language"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.9941707253456116,
            0.0019050572300329804,
            0.0005230109090916812,
            0.00015858568076509982,
            0.0002389434666838497,
            0.00010573805775493383,
            0.00024971371749415994,
            0.00010887407552218065
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of nations where both English and Chamorro are official languages?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, countrylanguage.CountryCode",
            "select country.Name, countrylanguage.Language",
            "select country.Name, country.LocalName"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.9936156272888184,
            0.0006175063317641616,
            0.0005731717683374882,
            0.00020125960872974247,
            0.0002538916887715459,
            0.00013601896353065968,
            0.0006773681379854679,
            0.00023735471768304706
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of nations where both English and Zulu are official languages?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, countrylanguage.CountryCode",
            "select country.Name, country.LocalName",
            "select country.Name, countrylanguage.Language"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.9941282272338867,
            0.0005449734744615853,
            0.0005219244631007314,
            0.00018853570509236306,
            0.0005880175158381462,
            0.0002397654898231849,
            0.0002609565563034266,
            0.00013129193393979222
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of nations where both English and English are official languages?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, countrylanguage.Language",
            "select country.Name, countrylanguage.IsOfficial",
            "select country.Name, countrylanguage.CountryCode"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.9813017249107361,
            0.00039918150287121534,
            0.00020210689399391413,
            0.00011258858285145834,
            0.00018874453962780535,
            9.919416334014386e-05,
            0.0003615452442318201,
            0.00015814596554264426
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of nations where both English and Irish are official languages?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, countrylanguage.Language",
            "select country.Name, countrylanguage.CountryCode",
            "select country.Name, country.LocalName"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.993425726890564,
            0.0006595916347578168,
            0.00024810159811750054,
            0.0001323500764556229,
            0.0004954093019478023,
            0.0001977513893507421,
            0.00039922489668242633,
            0.0002044630382442847
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "Give the names of countries with Malagasy and French as official languages.",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, countrylanguage.IsOfficial",
            "select country.Name, countrylanguage.Language",
            "select country.Name, countrylanguage.Language, countrylanguage.IsOfficial"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.9920201897621155,
            0.0003358790127094835,
            0.00018338405061513186,
            7.88652541814372e-05,
            0.0001682996517047286,
            7.145580457290635e-05,
            0.00013097358169034123,
            7.837567682145163e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "Give the names of countries with Bislama and French as official languages.",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, countrylanguage.IsOfficial",
            "select country.Name, countrylanguage.Language",
            "select country.Name, country.Capital"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.9952985644340515,
            0.9912508726119995,
            0.00021447280596476048,
            0.00022828370856586844,
            0.00019371807866264135,
            0.00017522586858831346,
            0.00022820358572062105,
            0.0001788200024748221
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "Give the names of countries with German and French as official languages.",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, countrylanguage.Language",
            "select country.Name, country.Capital",
            "select country.Name, countrylanguage.IsOfficial"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.9953497052192688,
            0.00039466365706175566,
            0.00018002645811066031,
            6.837707769591361e-05,
            0.00025812993408180773,
            8.665667701279745e-05,
            0.0002000188105739653,
            7.900947821326554e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "Give the names of countries with Kirundi and French as official languages.",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, countrylanguage.IsOfficial",
            "select country.Name, countrylanguage.Language",
            "select country.Name, country.Capital"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.9953032732009888,
            0.0010743015445768833,
            0.00020934744679834694,
            0.00010020149784395471,
            0.00019284618610981852,
            8.103923755697906e-05,
            0.0002066085289698094,
            0.00010196775110671297
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "Give the names of countries with French and French as official languages.",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, countrylanguage.IsOfficial",
            "select country.Name, country.Capital",
            "select country.Name, countrylanguage.Language"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.7298846244812012,
            0.979873538017273,
            0.00023446825798600912,
            0.00016310242062900215,
            0.00019962099031545222,
            0.00019757798872888088,
            0.0002529211633373052,
            0.00014928067685104907
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "Give the names of countries with English and Palau as official languages.",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, countrylanguage.IsOfficial",
            "select country.Name, countrylanguage.Language",
            "select country.Name, countrylanguage.Language, countrylanguage.IsOfficial"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.9956057667732239,
            0.9928581714630127,
            0.0001883750519482419,
            0.0002397083444520831,
            0.0001834436843637377,
            0.00017949649190995842,
            0.0001366687356494367,
            0.00014611439837608486
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "Give the names of countries with English and Chamorro as official languages.",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, countrylanguage.Language",
            "select country.Name, country.Capital",
            "select country.Name, countrylanguage.Language, countrylanguage.IsOfficial"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.995451033115387,
            0.000978102209046483,
            0.00018975957937072963,
            8.14483137219213e-05,
            0.0002681791374925524,
            0.00010602996189845726,
            0.0001389129611197859,
            8.596425323048607e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "Give the names of countries with English and Zulu as official languages.",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, countrylanguage.Language",
            "select country.Name, country.Capital",
            "select country.Name, countrylanguage.Language, countrylanguage.IsOfficial"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.9957043528556824,
            0.9930295348167419,
            0.00018199572514276952,
            0.00019227791926823556,
            0.0002464832505211234,
            0.00018995472055394202,
            0.00013371116074267775,
            0.00015139348397497088
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "Give the names of countries with English and English as official languages.",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, countrylanguage.IsOfficial",
            "select country.Name, country.Capital",
            "select country.Name, countrylanguage.Language"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.6451680660247803,
            0.989544689655304,
            0.00025983716477639973,
            0.00015907744818832725,
            0.00020176186808384955,
            0.00023061531828716397,
            0.00022756698308512568,
            0.00015012957737781107
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "Give the names of countries with English and Irish as official languages.",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, countrylanguage.Language",
            "select country.Name, countrylanguage.Language, countrylanguage.IsOfficial",
            "select country.Name, country.Capital"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.9924321174621582,
            0.9950821399688721,
            0.00019513122970238328,
            0.00017720343021210283,
            0.00017901038518175483,
            0.0001499221398262307,
            0.00019180915842298418,
            0.00023862291709519923
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the number of distinct continents where Nepali is spoken?",
        "gold_select": "select count( distinct country.Continent)",
        "select_candidates": [
            "select count(distinct country.Continent)",
            "select count(distinct country.Population)",
            "select count (distinct country.Continent)",
            "select count(distinct country.Name)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.99652099609375,
            0.0002474840439390391,
            0.0005890555330552161,
            0.00012662650260608643,
            0.0066609978675842285,
            0.0003368108591530472,
            0.0023085272405296564,
            0.00018583820201456547
        ],
        "align_select": "select count(distinct country.Continent)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the number of distinct continents where Limba is spoken?",
        "gold_select": "select count( distinct country.Continent)",
        "select_candidates": [
            "select count(distinct country.Continent)",
            "select count(distinct country.Population)",
            "select count(separate country.Continent)",
            "select count(distinct country.Name)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.9914737939834595,
            0.0003546907100826502,
            0.000624326872639358,
            0.00012971553951501846,
            0.059042803943157196,
            0.0008768614497967064,
            0.0017515176441520452,
            0.0006869137287139893
        ],
        "align_select": "select count(distinct country.Continent)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the number of distinct continents where Ndebele is spoken?",
        "gold_select": "select count( distinct country.Continent)",
        "select_candidates": [
            "select count(distinct country.Continent)",
            "select count(distinct country.Population)",
            "select count(separate country.Continent)",
            "select count(distinct t2).c2"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.9965338706970215,
            0.0002460497780703008,
            0.0004989050794392824,
            0.00011703713971655816,
            0.019137896597385406,
            0.0010439392644912004,
            0.0003110698307864368,
            0.00013617079821415246
        ],
        "align_select": "select count(distinct country.Continent)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the number of distinct continents where Ainu is spoken?",
        "gold_select": "select count( distinct country.Continent)",
        "select_candidates": [
            "select count(distinct country.Continent)",
            "select count(distinct country.Population)",
            "select count(separate country.Continent)",
            "select count(distinct t2).c2"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.9966517090797424,
            0.0002572572266217321,
            0.0006762213306501508,
            0.0001335921260761097,
            0.04122147709131241,
            0.0010270567145198584,
            0.0003387069737073034,
            0.00015891555813141167
        ],
        "align_select": "select count(distinct country.Continent)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the number of distinct continents where Maranao is spoken?",
        "gold_select": "select count( distinct country.Continent)",
        "select_candidates": [
            "select count(distinct country.Continent)",
            "select count(distinct country.Population)",
            "select count(distinct country.Name)",
            "select count (distinct country.Continent)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.9962706565856934,
            0.0002841790555976331,
            0.0005251553957350552,
            0.00011224447371205315,
            0.002578140003606677,
            0.00020230974769219756,
            0.01008551474660635,
            0.0002958312979899347
        ],
        "align_select": "select count(distinct country.Continent)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many continents speak Nepali?",
        "gold_select": "select count( distinct country.Continent)",
        "select_candidates": [
            "select count(distinct country.Continent)",
            "select count(continents)",
            "select count(country.Continent)",
            "select count(count(distinct country.Continent)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.9909023642539978,
            7.020913471933454e-05,
            0.1888926923274994,
            6.216847395990044e-05,
            0.9553573727607727,
            6.400162965292111e-05,
            0.0009579322068020701,
            6.941372703295201e-05
        ],
        "align_select": "select count(distinct country.Continent)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many continents speak Limba?",
        "gold_select": "select count( distinct country.Continent)",
        "select_candidates": [
            "select count(distinct country.Continent)",
            "select count(continents)",
            "select count(country.Continent)",
            "select count(*)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.9386692047119141,
            0.0002856625069398433,
            0.8671882152557373,
            0.00032417921465821564,
            0.9823346138000488,
            0.0014507510932162404,
            0.9880231618881226,
            0.012387563474476337
        ],
        "align_select": "select count(distinct country.Continent)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many continents speak Ndebele?",
        "gold_select": "select count( distinct country.Continent)",
        "select_candidates": [
            "select count(distinct country.Continent)",
            "select count(country.Continent)",
            "select count(continents)",
            "select count(count(distinct country.Continent)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.9873491525650024,
            0.0002326908434042707,
            0.9366769194602966,
            0.001302176620811224,
            0.1844756156206131,
            0.000391791807487607,
            0.000819299544673413,
            0.0001248841726919636
        ],
        "align_select": "select count(distinct country.Continent)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many continents speak Ainu?",
        "gold_select": "select count( distinct country.Continent)",
        "select_candidates": [
            "select count(distinct country.Continent)",
            "select count(country.Continent)",
            "select count(continents)",
            "select count(*)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.9886492490768433,
            0.0002878430823329836,
            0.9927511215209961,
            0.0017614446114748716,
            0.6441447138786316,
            0.0002916608063969761,
            0.9760389924049377,
            0.01015287172049284
        ],
        "align_select": "select count(distinct country.Continent)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many continents speak Maranao?",
        "gold_select": "select count( distinct country.Continent)",
        "select_candidates": [
            "select count(distinct country.Continent)",
            "select count(country.Continent)",
            "select count(continents)",
            "select count(*)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.9897360801696777,
            7.750062650302425e-05,
            0.9769245386123657,
            6.781253614462912e-05,
            0.26004260778427124,
            6.894658872624859e-05,
            0.9616348147392273,
            0.00011198756692465395
        ],
        "align_select": "select count(distinct country.Continent)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the regions that use English or Nepali?",
        "gold_select": "select distinct country.Region",
        "select_candidates": [
            "select country.Region",
            "select distinct country.Region",
            "select country.Region, countrylanguage.Language",
            "select country.Region, countrylanguage.CountryCode"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.9895802140235901,
            0.08935506641864777,
            0.021142762154340744,
            0.00027989858062937856,
            0.0002470681502018124,
            0.00012787508603651077,
            0.00024605236831121147,
            0.0001427455135853961
        ],
        "align_select": "select country.Region",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the regions that use English or Limba?",
        "gold_select": "select distinct country.Region",
        "select_candidates": [
            "select country.Region",
            "select distinct country.Region",
            "select country.Region, countrylanguage.CountryCode",
            "select country.Region, country.SurfaceArea"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.8480876684188843,
            0.03375115245580673,
            0.026725711300969124,
            0.00027475052047520876,
            0.0002611494855955243,
            0.00013508547272067517,
            0.0002719790209084749,
            0.00013712196960113943
        ],
        "align_select": "select country.Region",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the regions that use English or Ndebele?",
        "gold_select": "select distinct country.Region",
        "select_candidates": [
            "select country.Region",
            "select distinct country.Region",
            "select country.Region, countrylanguage.CountryCode",
            "select country.Region, country.SurfaceArea"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.9919044375419617,
            0.22763878107070923,
            0.02353757992386818,
            0.0002553974336478859,
            0.00020945968572050333,
            0.00013617183140013367,
            0.00028628468862734735,
            0.00013821545871905982
        ],
        "align_select": "select country.Region",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the regions that use English or Ainu?",
        "gold_select": "select distinct country.Region",
        "select_candidates": [
            "select country.Region",
            "select distinct country.Region",
            "select country.Region, countrylanguage.CountryCode",
            "select country.Region, country.SurfaceArea"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.9709874391555786,
            0.15973593294620514,
            0.01921934261918068,
            0.00020233826944604516,
            0.00022943364456295967,
            0.00014273475972004235,
            0.0002737992035690695,
            0.00014621138689108193
        ],
        "align_select": "select country.Region",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the regions that use English or Maranao?",
        "gold_select": "select distinct country.Region",
        "select_candidates": [
            "select country.Region",
            "select distinct country.Region",
            "select country.Region, countrylanguage.CountryCode",
            "select country.Region, country.SurfaceArea"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9568859934806824,
            0.3279179036617279,
            0.03276192396879196,
            0.00028537341859191656,
            0.0002180024894187227,
            0.00014543329598382115,
            0.00025034279678948224,
            0.00015774973144289106
        ],
        "align_select": "select country.Region",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the regions that use Nepali or Dutch?",
        "gold_select": "select distinct country.Region",
        "select_candidates": [
            "select country.Region",
            "select distinct country.Region",
            "select country.Region, countrylanguage.CountryCode",
            "select country.Region, countrylanguage.Language"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.9837296605110168,
            0.15616364777088165,
            0.023973960429430008,
            0.00020299878087826073,
            0.0001980372326215729,
            0.00014916413056198508,
            0.00024250712885987014,
            0.0001393315033055842
        ],
        "align_select": "select country.Region",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the regions that use Limba or Dutch?",
        "gold_select": "select distinct country.Region",
        "select_candidates": [
            "select country.Region",
            "select distinct country.Region",
            "select country.Region, country.SurfaceArea",
            "select country.Region, countrylanguage.CountryCode"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.5164105892181396,
            0.04989524930715561,
            0.023738598451018333,
            0.00017541542183607817,
            0.0002458997187204659,
            0.00013515801401808858,
            0.00022142843226902187,
            0.00012904612231068313
        ],
        "align_select": "select country.Region",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the regions that use Ndebele or Dutch?",
        "gold_select": "select distinct country.Region",
        "select_candidates": [
            "select country.Region",
            "select distinct country.Region",
            "select country.Region, countrylanguage.CountryCode",
            "select country.Region, country.SurfaceArea"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.9870437979698181,
            0.2035813331604004,
            0.029721388593316078,
            0.00018343827105127275,
            0.0002176589478040114,
            0.00015332245675381273,
            0.0002970768546219915,
            0.00015423184959217906
        ],
        "align_select": "select country.Region",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the regions that use Ainu or Dutch?",
        "gold_select": "select distinct country.Region",
        "select_candidates": [
            "select country.Region",
            "select distinct country.Region",
            "select country.Region, countrylanguage.CountryCode",
            "select country.Region, country.SurfaceArea"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.9784518480300903,
            0.20494425296783447,
            0.022263633087277412,
            0.0001687882177066058,
            0.00021582569752354175,
            0.00015790564066264778,
            0.00025600765366107225,
            0.00013634176866617054
        ],
        "align_select": "select country.Region",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the regions that use Maranao or Dutch?",
        "gold_select": "select distinct country.Region",
        "select_candidates": [
            "select country.Region",
            "select distinct country.Region",
            "select country.Region, countrylanguage.CountryCode",
            "select country.Region, country.SurfaceArea"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.948578417301178,
            0.29137519001960754,
            0.026620376855134964,
            0.00021850940538570285,
            0.00018415434169583023,
            0.00015488591452594846,
            0.00022776906553190202,
            0.0001503246749052778
        ],
        "align_select": "select country.Region",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which regions speak Nepali or English?",
        "gold_select": "select distinct country.Region",
        "select_candidates": [
            "select country.Region",
            "select distinct country.Region",
            "select country.Region, countrylanguage.Language",
            "select country.Region-, countrylanguage.Language"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.9756129384040833,
            0.0652124285697937,
            0.047252289950847626,
            0.00031375879188999534,
            0.0002504450094420463,
            0.00013814088015351444,
            0.00022831305977888405,
            9.848350600805134e-05
        ],
        "align_select": "select country.Region",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which regions speak Limba or English?",
        "gold_select": "select distinct country.Region",
        "select_candidates": [
            "select country.Region",
            "select distinct country.Region",
            "select country.Region, countrylanguage.Language",
            "select country.Region, countrylanguage.CountryCode"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.7042560577392578,
            0.03370308876037598,
            0.04228014126420021,
            0.00028493732679635286,
            0.00020742097694892436,
            0.00013022389612160623,
            0.00016059911285992712,
            0.0001278168347198516
        ],
        "align_select": "select country.Region",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which regions speak Ndebele or English?",
        "gold_select": "select distinct country.Region",
        "select_candidates": [
            "select country.Region",
            "select distinct country.Region",
            "select country.Region, countrylanguage.Language",
            "select country.Region, countrylanguage.CountryCode"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.9811826348304749,
            0.1882276087999344,
            0.04560183733701706,
            0.0002974785165861249,
            0.00020590153872035444,
            0.0001407724485034123,
            0.0001474752207286656,
            0.00013240674161352217
        ],
        "align_select": "select country.Region",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which regions speak Ainu or English?",
        "gold_select": "select distinct country.Region",
        "select_candidates": [
            "select country.Region",
            "select distinct country.Region",
            "select country.Region, countrylanguage.Language",
            "select country.Region, countrylanguage.CountryCode"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.9509754776954651,
            0.053926482796669006,
            0.04667509347200394,
            0.00023358152247965336,
            0.00022256105148699135,
            0.00013689359184354544,
            0.00016119038627948612,
            0.0001419625768903643
        ],
        "align_select": "select country.Region",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which regions speak Maranao or English?",
        "gold_select": "select distinct country.Region",
        "select_candidates": [
            "select country.Region",
            "select distinct country.Region",
            "select country.Region, countrylanguage.Language",
            "select country.Region, countrylanguage.CountryCode"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.880617082118988,
            0.2628459930419922,
            0.042201604694128036,
            0.0003035858098883182,
            0.00024272804148495197,
            0.0001477758924011141,
            0.00014433995238505304,
            0.0001474463933845982
        ],
        "align_select": "select country.Region",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which regions speak Dutch or Nepali?",
        "gold_select": "select distinct country.Region",
        "select_candidates": [
            "select country.Region",
            "select distinct country.Region",
            "select country.Region, countrylanguage.Language",
            "select country.Region, countrylanguage.CountryCode"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.9835209846496582,
            0.2631639242172241,
            0.06624722480773926,
            0.0003958973684348166,
            0.00027285193209536374,
            0.00015307324065361172,
            0.0001551000605104491,
            0.00017077781376428902
        ],
        "align_select": "select country.Region",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which regions speak Dutch or Limba?",
        "gold_select": "select distinct country.Region",
        "select_candidates": [
            "select country.Region",
            "select distinct country.Region",
            "select country.Region, countrylanguage.Language",
            "select country.Region, countrylanguage.CountryCode"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.8467708230018616,
            0.08935502171516418,
            0.06837663799524307,
            0.0003301470715086907,
            0.0001881420612335205,
            0.00014531629858538508,
            0.00015248994168359786,
            0.00013612872862722725
        ],
        "align_select": "select country.Region",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which regions speak Dutch or Ndebele?",
        "gold_select": "select distinct country.Region",
        "select_candidates": [
            "select country.Region",
            "select distinct country.Region",
            "select country.Region, countrylanguage.CountryCode",
            "select country.Region, countrylanguage.Language"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9848938584327698,
            0.21965515613555908,
            0.0873924046754837,
            0.00029122899286448956,
            0.00015568516391795129,
            0.00013689436309505254,
            0.00017301112529821694,
            0.00013611004396807402
        ],
        "align_select": "select country.Region",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which regions speak Dutch or Ainu?",
        "gold_select": "select distinct country.Region",
        "select_candidates": [
            "select country.Region",
            "select distinct country.Region",
            "select country.Region, countrylanguage.CountryCode",
            "select country.Region, countrylanguage.Language"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9031355381011963,
            0.14918498694896698,
            0.05467811971902847,
            0.0002588797069620341,
            0.00016188471636269242,
            0.0001493954478064552,
            0.00021697598276659846,
            0.00014570077473763376
        ],
        "align_select": "select country.Region",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which regions speak Dutch or Maranao?",
        "gold_select": "select distinct country.Region",
        "select_candidates": [
            "select country.Region",
            "select distinct country.Region",
            "select country.Region, countrylanguage.CountryCode",
            "select country.Region, countrylanguage.Language"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.7389119267463684,
            0.3938864469528198,
            0.05362967029213905,
            0.00035140325780957937,
            0.00015963024634402245,
            0.00015356240328401327,
            0.00021173912682570517,
            0.0001517799828434363
        ],
        "align_select": "select country.Region",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which countries have either English or Nepali as an official language?",
        "gold_select": "select *",
        "select_candidates": [
            "select country.Name",
            "select country.Name, countrylanguage.CountryCode",
            "select country.Name, country.Code",
            "select countrylanguage.CountryCode"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9251098036766052,
            0.016007523983716965,
            0.0010449079563841224,
            0.0003011493245139718,
            0.0013207964366301894,
            0.0003008113126270473,
            0.4025389552116394,
            0.16057296097278595
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which countries have either English or Limba as an official language?",
        "gold_select": "select *",
        "select_candidates": [
            "select country.Name",
            "select countrylanguage.CountryCode",
            "select country.Name, countrylanguage.CountryCode",
            "select country.Name, country.Continent"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "countrylanguage",
            "country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.8426575660705566,
            0.025012249127030373,
            0.44295936822891235,
            0.15154561400413513,
            0.001179024577140808,
            0.000367727130651474,
            0.0002903694985434413,
            0.00018622062634676695
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which countries have either English or Ndebele as an official language?",
        "gold_select": "select *",
        "select_candidates": [
            "select country.Name",
            "select country.Name, countrylanguage.CountryCode",
            "select country.Name, country.Continent",
            "select countrylanguage.CountryCode"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "countrylanguage",
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence countrylanguage",
            "sqlite_sequence country countrylanguage",
            "countrylanguage country countrylanguage"
        ],
        "align_scores": [
            0.9524135589599609,
            0.04294539988040924,
            0.0012987705413252115,
            0.00035076620406471193,
            0.00027268679696135223,
            0.00017331924755126238,
            0.5026987791061401,
            0.37605875730514526
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which countries have either English or Ainu as an official language?",
        "gold_select": "select *",
        "select_candidates": [
            "select country.Name",
            "select country.Name, countrylanguage.CountryCode",
            "select countrylanguage.CountryCode",
            "select country.Name, country.Continent"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "countrylanguage",
            "country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.9148352146148682,
            0.020208487287163734,
            0.0010069783311337233,
            0.0002925056905951351,
            0.49663928151130676,
            0.15410259366035461,
            0.00027281237998977304,
            0.0001723332970868796
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which countries have either English or Maranao as an official language?",
        "gold_select": "select *",
        "select_candidates": [
            "select country.Name",
            "select country.Name, countrylanguage.CountryCode",
            "select countrylanguage.CountryCode",
            "select country.Name, country.Continent"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "countrylanguage",
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence countrylanguage",
            "sqlite_sequence country countrylanguage",
            "countrylanguage country countrylanguage"
        ],
        "align_scores": [
            0.7910326719284058,
            0.020638199523091316,
            0.0008402090170420706,
            0.00031549829873256385,
            0.32668355107307434,
            0.2625184953212738,
            0.0002592783421278,
            0.00015672929293941706
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which countries have either Nepali or Dutch as an official language?",
        "gold_select": "select *",
        "select_candidates": [
            "select country.Name",
            "select country.Name, countrylanguage.CountryCode",
            "select country.Name, country.Code",
            "select country.Name, country.Region"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.9490973353385925,
            0.05858277902007103,
            0.0013896808959543705,
            0.00036285733222030103,
            0.0015582942869514227,
            0.00034610775765031576,
            0.0002770878199953586,
            0.00014479430683422834
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which countries have either Limba or Dutch as an official language?",
        "gold_select": "select *",
        "select_candidates": [
            "select country.Name",
            "select country.Name, countrylanguage.CountryCode",
            "select countrylanguage.CountryCode",
            "select country.Name, country.Continent"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "countrylanguage",
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence countrylanguage",
            "sqlite_sequence country countrylanguage",
            "countrylanguage country countrylanguage"
        ],
        "align_scores": [
            0.8103519082069397,
            0.010303320363163948,
            0.001443958026356995,
            0.00027710580616258085,
            0.4822077751159668,
            0.06053370237350464,
            0.0003237520868424326,
            0.0001436306774849072
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which countries have either Ndebele or Dutch as an official language?",
        "gold_select": "select *",
        "select_candidates": [
            "select country.Name",
            "select country.Name, countrylanguage.CountryCode",
            "select country.Name, country.Continent",
            "select country.Name, country.Code"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9414066076278687,
            0.0856793150305748,
            0.0013470235280692577,
            0.0003733118064701557,
            0.0003588048566598445,
            0.00020259697339497507,
            0.0013148147845640779,
            0.00031586753902956843
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which countries have either Ainu or Dutch as an official language?",
        "gold_select": "select *",
        "select_candidates": [
            "select country.Name",
            "select country.Name, countrylanguage.CountryCode",
            "select country.Name, country.Continent",
            "select country.Name, country.Code"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "countrylanguage",
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9426213502883911,
            0.01810736022889614,
            0.0014180054422467947,
            0.0002749315754044801,
            0.00033739753416739404,
            0.00016279677220154554,
            0.0013756819535046816,
            0.00022291547793429345
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which countries have either Maranao or Dutch as an official language?",
        "gold_select": "select *",
        "select_candidates": [
            "select country.Name",
            "select country.Name, countrylanguage.CountryCode",
            "select country.Name, country.Code",
            "select country.Name, country.Continent"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.8138169646263123,
            0.03738110885024071,
            0.0009491330129094422,
            0.00032364469370804727,
            0.0009246665285900235,
            0.00026597603573463857,
            0.00029327356605790555,
            0.0001643902069190517
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the city with the largest population that uses Nepali.",
        "gold_select": "select city.Name, city.Population",
        "select_candidates": [
            "select city.Name",
            "select city.Name, countrylanguage.Language",
            "select city.ID, city.Name",
            "select city.Name, countrylanguage.IsOfficial"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "city countrylanguage",
        "table_candidates": [
            "city country countrylanguage",
            "city countrylanguage",
            "city sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9801895022392273,
            0.0006181143689900637,
            0.0013374525588005781,
            0.00017247599316760898,
            0.0006002940353937447,
            0.0001605906873010099,
            0.0011662550969049335,
            0.0002220415190095082
        ],
        "align_select": "select city.Name",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT"
    },
    {
        "question": "Find the city with the largest population that uses Limba.",
        "gold_select": "select city.Name, city.Population",
        "select_candidates": [
            "select city.Name",
            "select city.ID, city.Name",
            "select city.Name, countrylanguage.Language",
            "select city.Name, city.District"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "city countrylanguage",
        "table_candidates": [
            "city countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.9861613512039185,
            0.0004033655859529972,
            0.0006128854583948851,
            0.0001544800034025684,
            0.0009394340449944139,
            0.00015359108510892838,
            0.0003098054730799049,
            0.00011381265358068049
        ],
        "align_select": "select city.Name",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT"
    },
    {
        "question": "Find the city with the largest population that uses Ndebele.",
        "gold_select": "select city.Name, city.Population",
        "select_candidates": [
            "select city.Name",
            "select city.ID, city.Name",
            "select city.Name, countrylanguage.Language",
            "select city.Name, countrylanguage.IsOfficial"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "city countrylanguage",
        "table_candidates": [
            "city countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.9856502413749695,
            0.00043493969133123755,
            0.00042512218351475894,
            0.0001355843705823645,
            0.000866173766553402,
            0.00013816538557875901,
            0.0004798352892976254,
            0.00015748538135085255
        ],
        "align_select": "select city.Name",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT"
    },
    {
        "question": "Find the city with the largest population that uses Ainu.",
        "gold_select": "select city.Name, city.Population",
        "select_candidates": [
            "select city.Name",
            "select city.ID, city.Name",
            "select city.Name, countrylanguage.Language",
            "select city.Name, countrylanguage.IsOfficial"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "city countrylanguage",
        "table_candidates": [
            "city countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.9854559302330017,
            0.0007082853117026389,
            0.0005375834298320115,
            0.00015522565809078515,
            0.0009686844423413277,
            0.0001435676822438836,
            0.0005266424850560725,
            0.00015716762572992593
        ],
        "align_select": "select city.Name",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT"
    },
    {
        "question": "Find the city with the largest population that uses Maranao.",
        "gold_select": "select city.Name, city.Population",
        "select_candidates": [
            "select city.Name",
            "select city.ID, city.Name",
            "select city.Name, countrylanguage.Language",
            "select city.Name, countrylanguage.IsOfficial"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "city countrylanguage",
        "table_candidates": [
            "city countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.9871905446052551,
            0.0005362015217542648,
            0.0006032418459653854,
            0.00016537107876501977,
            0.0007599710952490568,
            0.00014126325550023466,
            0.000986969331279397,
            0.0002107879554387182
        ],
        "align_select": "select city.Name",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT"
    },
    {
        "question": "What is the most populace city that speaks Nepali?",
        "gold_select": "select city.Name, city.Population",
        "select_candidates": [
            "select city.Name",
            "select city.Name, countrylanguage.Language",
            "select city.ID, city.Name",
            "select city.Name, countrylanguage.IsOfficial"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "city countrylanguage",
        "table_candidates": [
            "city country countrylanguage",
            "city sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.5758327841758728,
            0.01251247525215149,
            0.00021361118706408888,
            0.0001369810925098136,
            0.0002858537482097745,
            0.0001631044433452189,
            0.00027441931888461113,
            0.0001366252254229039
        ],
        "align_select": "select city.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the most populace city that speaks Limba?",
        "gold_select": "select city.Name, city.Population",
        "select_candidates": [
            "select city.Name",
            "select city.Name, countrylanguage.Language",
            "select city.ID, city.Name",
            "select city.Name, city.Population"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "city countrylanguage",
        "table_candidates": [
            "city countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.9905441999435425,
            0.0001345689088338986,
            0.0006959258462302387,
            8.838118810672313e-05,
            0.0007147472933866084,
            7.741480658296496e-05,
            0.0002897207741625607,
            6.228620623005554e-05
        ],
        "align_select": "select city.Name",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT"
    },
    {
        "question": "What is the most populace city that speaks Ndebele?",
        "gold_select": "select city.Name, city.Population",
        "select_candidates": [
            "select city.Name",
            "select city.Name, countrylanguage.Language",
            "select city.ID, city.Name",
            "select city.Name, countrylanguage.IsOfficial"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "city countrylanguage",
        "table_candidates": [
            "city countrylanguage",
            "city country countrylanguage",
            "city sqlite_sequence countrylanguage",
            "city countrylanguage country"
        ],
        "align_scores": [
            0.9938777089118958,
            0.0031498039606958628,
            0.0006996018346399069,
            0.0001301770971622318,
            0.00042889229371212423,
            0.00013425260840449482,
            0.0005170260556042194,
            0.00012280837108846754
        ],
        "align_select": "select city.Name",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT"
    },
    {
        "question": "What is the most populace city that speaks Ainu?",
        "gold_select": "select city.Name, city.Population",
        "select_candidates": [
            "select city.Name",
            "select city.Name, countrylanguage.Language",
            "select city.ID, city.Name",
            "select city.Name, countrylanguage.IsOfficial"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "city countrylanguage",
        "table_candidates": [
            "city countrylanguage",
            "city country countrylanguage",
            "city countrylanguage country",
            "city sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.9936303496360779,
            0.5333977937698364,
            0.0007837706943973899,
            0.00019922471255995333,
            0.000690234883222729,
            0.00026818044716492295,
            0.0006898468127474189,
            0.0002570910146459937
        ],
        "align_select": "select city.Name",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT"
    },
    {
        "question": "What is the most populace city that speaks Maranao?",
        "gold_select": "select city.Name, city.Population",
        "select_candidates": [
            "select city.Name",
            "select city.Name, countrylanguage.Language",
            "select city.ID, city.Name",
            "select city.Name, countrylanguage.IsOfficial"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "city countrylanguage",
        "table_candidates": [
            "city countrylanguage",
            "city country countrylanguage",
            "city sqlite_sequence countrylanguage",
            "city countrylanguage country"
        ],
        "align_scores": [
            0.9923464059829712,
            0.4658244550228119,
            0.0006691603921353817,
            0.00020473929180298,
            0.0004924839013256133,
            0.0002680222096387297,
            0.0007757686544209719,
            0.0002442120749037713
        ],
        "align_select": "select city.Name",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT"
    },
    {
        "question": "What is average life expectancy in the countries where Nepali is not the official language?",
        "gold_select": "select avg(country.LifeExpectancy)",
        "select_candidates": [
            "select avg(country.LifeExpectancy)",
            "select avg(country.LifeExpectancy), countrylanguage.Language",
            "select an avg(country.LifeExpectancy)",
            "select avg(country.LifeExpectancy), countrylanguage.CountryCode"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence countrylanguage",
            "country"
        ],
        "align_scores": [
            0.992385745048523,
            0.0004333789984229952,
            0.00013236040831543505,
            0.0003183129010722041,
            0.00048197375144809484,
            0.00015731051098555326,
            0.00017384008970111609,
            0.00041293821414001286
        ],
        "align_select": "select avg(country.LifeExpectancy)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is average life expectancy in the countries where Limba is not the official language?",
        "gold_select": "select avg(country.LifeExpectancy)",
        "select_candidates": [
            "select avg(country.LifeExpectancy)",
            "select avg(country.LifeExpectancy), countrylanguage.CountryCode",
            "select avg(country.LifeExpectancy), countrylanguage.Language",
            "select an avg(country.LifeExpectancy)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage",
            "country",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.979611337184906,
            0.0002759391791187227,
            0.000141439275466837,
            0.00033219862962141633,
            0.00014208271750248969,
            0.00024949407088570297,
            0.000454925699159503,
            0.0001496054173912853
        ],
        "align_select": "select avg(country.LifeExpectancy)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is average life expectancy in the countries where Ndebele is not the official language?",
        "gold_select": "select avg(country.LifeExpectancy)",
        "select_candidates": [
            "select avg(country.LifeExpectancy)",
            "select avg(country.LifeExpectancy), countrylanguage.Language",
            "select an avg(country.LifeExpectancy)",
            "select avg(country.LifeExpectancy), countrylanguage.CountryCode"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence countrylanguage",
            "country"
        ],
        "align_scores": [
            0.9832713007926941,
            0.00038383714854717255,
            0.0001242626749444753,
            0.0002981155994348228,
            0.00044238855480216444,
            0.0001462881191400811,
            0.00013480470806825906,
            0.00018106729839928448
        ],
        "align_select": "select avg(country.LifeExpectancy)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is average life expectancy in the countries where Ainu is not the official language?",
        "gold_select": "select avg(country.LifeExpectancy)",
        "select_candidates": [
            "select avg(country.LifeExpectancy)",
            "select avg(country.LifeExpectancy), countrylanguage.Language",
            "select avg(country.LifeExpectancy), countrylanguage.CountryCode",
            "select an avg(country.LifeExpectancy)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence countrylanguage",
            "country"
        ],
        "align_scores": [
            0.9890189170837402,
            0.00025297829415649176,
            0.0001303509925492108,
            0.0002474179782439023,
            0.00015263044042512774,
            0.0003065337659791112,
            0.0004371522518340498,
            0.00015019947022665292
        ],
        "align_select": "select avg(country.LifeExpectancy)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is average life expectancy in the countries where Maranao is not the official language?",
        "gold_select": "select avg(country.LifeExpectancy)",
        "select_candidates": [
            "select avg(country.LifeExpectancy)",
            "select avg(country.LifeExpectancy), countrylanguage.Language",
            "select avg(country.LifeExpectancy), countrylanguage.CountryCode",
            "select an avg(country.LifeExpectancy)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence countrylanguage",
            "country"
        ],
        "align_scores": [
            0.9814894795417786,
            0.00042579465662129223,
            0.00013183742703404278,
            0.0003409210767131299,
            0.0001435748126823455,
            0.00031548176775686443,
            0.00046106125228106976,
            0.00015498251013923436
        ],
        "align_select": "select avg(country.LifeExpectancy)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give the mean life expectancy of countries in which Nepali is not the official language.",
        "gold_select": "select avg(country.LifeExpectancy)",
        "select_candidates": [
            "select avg(country.LifeExpectancy)",
            "select an avg(country.LifeExpectancy)",
            "select avg(country.LifeExpectancy), countrylanguage.Language",
            "select avg(country.LifeExpectancy), countrylanguage.CountryCode"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage",
            "country",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.9925729036331177,
            0.00014781112258788198,
            0.0004167895531281829,
            0.00010863276111194864,
            0.00013057094474788755,
            0.0002898442908190191,
            0.00014527888561133295,
            0.00024872642825357616
        ],
        "align_select": "select avg(country.LifeExpectancy)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give the mean life expectancy of countries in which Limba is not the official language.",
        "gold_select": "select avg(country.LifeExpectancy)",
        "select_candidates": [
            "select avg(country.LifeExpectancy)",
            "select an avg(country.LifeExpectancy)",
            "select avg(country.LifeExpectancy), countrylanguage.Language",
            "select avg(country.LifeExpectancy), countrylanguage.CountryCode"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage",
            "country",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.972947359085083,
            0.00014210844528861344,
            0.00042542588198557496,
            0.0001025893070618622,
            0.0001742475142236799,
            0.00016132413293235004,
            0.0001370035606669262,
            0.00020613943343050778
        ],
        "align_select": "select avg(country.LifeExpectancy)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give the mean life expectancy of countries in which Ndebele is not the official language.",
        "gold_select": "select avg(country.LifeExpectancy)",
        "select_candidates": [
            "select avg(country.LifeExpectancy)",
            "select avg(country.LifeExpectancy), countrylanguage.Language",
            "select an avg(country.LifeExpectancy)",
            "select avg(country.LifeExpectancy), countrylanguage.CountryCode"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "country",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.9834169149398804,
            0.00016204007260967046,
            0.00011490751057863235,
            0.00027812639018520713,
            0.0003703029069583863,
            0.00010596466745482758,
            0.00012242929369676858,
            0.00013392807159107178
        ],
        "align_select": "select avg(country.LifeExpectancy)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give the mean life expectancy of countries in which Ainu is not the official language.",
        "gold_select": "select avg(country.LifeExpectancy)",
        "select_candidates": [
            "select avg(country.LifeExpectancy)",
            "select an avg(country.LifeExpectancy)",
            "select avg(country.LifeExpectancy), countrylanguage.Language",
            "select avg(country.LifeExpectancy), countrylanguage.CountryCode"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "country",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.9848142266273499,
            0.00011709921091096476,
            0.00040335467201657593,
            0.00011290596739854664,
            0.00013297317491378635,
            0.00022858903685119003,
            0.00013412976113613695,
            0.00021723391546402127
        ],
        "align_select": "select avg(country.LifeExpectancy)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give the mean life expectancy of countries in which Maranao is not the official language.",
        "gold_select": "select avg(country.LifeExpectancy)",
        "select_candidates": [
            "select avg(country.LifeExpectancy)",
            "select an avg(country.LifeExpectancy)",
            "select avg(country.LifeExpectancy), countrylanguage.Language",
            "select avg(country.LifeExpectancy), countrylanguage.CountryCode"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence countrylanguage",
            "country"
        ],
        "align_scores": [
            0.9796373248100281,
            0.0001659313275013119,
            0.00040431765955872834,
            0.00010782291064970195,
            0.0001317072456004098,
            0.00027167759253643453,
            0.00012610186240635812,
            0.00017774802108760923
        ],
        "align_select": "select avg(country.LifeExpectancy)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the total number of people living in the nations that do not use Nepali?",
        "gold_select": "select sum(country.Population)",
        "select_candidates": [
            "select sum(country.Population)",
            "select sum(country.Population), countrylanguage.Language",
            "select sum(country.Population), country.Name",
            "select sum(country.Population), countrylanguage.Language"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "sqlite_sequence countrylanguage",
            "country"
        ],
        "align_scores": [
            0.9913449287414551,
            0.0006933401455171406,
            0.00021692553127650172,
            0.0011722382623702288,
            0.00020425884576980025,
            0.01385299302637577,
            0.00021692553127650172,
            0.0011722382623702288
        ],
        "align_select": "select sum(country.Population)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the total number of people living in the nations that do not use Limba?",
        "gold_select": "select sum(country.Population)",
        "select_candidates": [
            "select sum(country.Population)",
            "select sum(country.Population), countrylanguage.Language",
            "select sum(country.Population), countrylanguage.CountryCode",
            "select sum(country.Population), countrylanguage.Language"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage",
            "countrylanguage country",
            "sqlite_sequence countrylanguage",
            "countrylanguage country countrylanguage",
            "country"
        ],
        "align_scores": [
            0.9830341339111328,
            0.0018731073942035437,
            0.00019435281865298748,
            0.00014809750427957624,
            0.0001823507627705112,
            0.00021442784054670483,
            0.00019435281865298748,
            0.00014809750427957624
        ],
        "align_select": "select sum(country.Population)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the total number of people living in the nations that do not use Ndebele?",
        "gold_select": "select sum(country.Population)",
        "select_candidates": [
            "select sum(country.Population)",
            "select sum(country.Population), countrylanguage.Language",
            "select sum(country.Population), countrylanguage.CountryCode",
            "select sum(country.Population), countrylanguage.Language"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence countrylanguage",
            "country"
        ],
        "align_scores": [
            0.992260754108429,
            0.0008582109585404396,
            0.00018213530711364,
            0.0001758399448590353,
            0.00016108497220557183,
            0.00018338579684495926,
            0.00018213530711364,
            0.0001758399448590353
        ],
        "align_select": "select sum(country.Population)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the total number of people living in the nations that do not use Ainu?",
        "gold_select": "select sum(country.Population)",
        "select_candidates": [
            "select sum(country.Population)",
            "select sum(country.Population), countrylanguage.Language",
            "select sum(country.Population), countrylanguage.CountryCode",
            "select sum(country.Population), countrylanguage.Language"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence countrylanguage",
            "country"
        ],
        "align_scores": [
            0.9921751618385315,
            0.0014852597378194332,
            0.00018120737513527274,
            0.00014198519056662917,
            0.00015474656538572162,
            0.00018377054948359728,
            0.00018120737513527274,
            0.00014198519056662917
        ],
        "align_select": "select sum(country.Population)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the total number of people living in the nations that do not use Maranao?",
        "gold_select": "select sum(country.Population)",
        "select_candidates": [
            "select sum(country.Population)",
            "select sum(country.Population), countrylanguage.Language",
            "select sum(country.Population), countrylanguage.CountryCode",
            "select sum(country.Population), countrylanguage.Language"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence countrylanguage",
            "country"
        ],
        "align_scores": [
            0.9906725287437439,
            0.0011492924531921744,
            0.00020802208746317774,
            0.00015490893565583974,
            0.00017025232955347747,
            0.00021092448150739074,
            0.00020802208746317774,
            0.00015490893565583974
        ],
        "align_select": "select sum(country.Population)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many people live in countries that do not speak Nepali?",
        "gold_select": "select sum(country.Population)",
        "select_candidates": [
            "select count(*)",
            "select sum(country.Population)",
            "select count(country.Population)",
            "select country.Population"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.9887935519218445,
            0.0003889193758368492,
            0.9294572472572327,
            0.00019064276420976967,
            0.941100537776947,
            0.00018563540652394295,
            0.9905800223350525,
            0.003348920727148652
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many people live in countries that do not speak Limba?",
        "gold_select": "select sum(country.Population)",
        "select_candidates": [
            "select sum(country.Population)",
            "select count(*)",
            "select country.Population",
            "select country.Code, sum(country.Population)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.5949795842170715,
            0.0005464699352160096,
            0.9438502788543701,
            0.0011437400244176388,
            0.9519714713096619,
            0.6490486860275269,
            0.00024326509446837008,
            0.0005184319452382624
        ],
        "align_select": "select country.Population",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many people live in countries that do not speak Ndebele?",
        "gold_select": "select sum(country.Population)",
        "select_candidates": [
            "select sum(country.Population)",
            "select count(*)",
            "select country.Population",
            "select count(country.Population)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.9049884080886841,
            0.000459157774457708,
            0.976704478263855,
            0.0007655738154426217,
            0.9899829030036926,
            0.19859164953231812,
            0.9654788970947266,
            0.0005154877435415983
        ],
        "align_select": "select sum(country.Population)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many people live in countries that do not speak Ainu?",
        "gold_select": "select sum(country.Population)",
        "select_candidates": [
            "select sum(country.Population)",
            "select count(*)",
            "select country.Population",
            "select country.Code, sum(country.Population)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.8129837512969971,
            0.0002782810479402542,
            0.9833425283432007,
            0.0006596665480174124,
            0.9895029067993164,
            0.22917549312114716,
            0.00023658516875002533,
            0.000342114653903991
        ],
        "align_select": "select sum(country.Population)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many people live in countries that do not speak Maranao?",
        "gold_select": "select sum(country.Population)",
        "select_candidates": [
            "select sum(country.Population)",
            "select count(*)",
            "select country.Population",
            "select country.Code, sum(country.Population)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.8965790867805481,
            0.0006471795495599508,
            0.9817404747009277,
            0.0011278861202299595,
            0.9770179986953735,
            0.5666041374206543,
            0.0002252365229651332,
            0.0004503357922658324
        ],
        "align_select": "select sum(country.Population)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the official language spoken in the country whose head of state is Bakili Muluzi?",
        "gold_select": "select countrylanguage.Language",
        "select_candidates": [
            "select countrylanguage.Language",
            "select countrylanguage.Language, countrylanguage.IsOfficial",
            "select countrylanguage.Language, countrylanguage.IsOfficial, countrylanguage.Percentage",
            "select countrylanguage.Language, countrylanguage.IsOfficial"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.990439772605896,
            0.0003965572395827621,
            0.00034185938420705497,
            9.567649249220267e-05,
            0.00023605722526554018,
            8.599040302215144e-05,
            0.00034185938420705497,
            9.567649249220267e-05
        ],
        "align_select": "select countrylanguage.Language",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the official language spoken in the country whose head of state is Albert II?",
        "gold_select": "select countrylanguage.Language",
        "select_candidates": [
            "select countrylanguage.Language",
            "select countrylanguage.Language, countrylanguage.IsOfficial",
            "select countrylanguage.Language, countrylanguage.IsOfficial, countrylanguage.Percentage",
            "select countrylanguage.Language, countrylanguage.IsOfficial"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9940125346183777,
            0.00033543756580911577,
            0.0003899472358170897,
            9.549128299113363e-05,
            0.00023314007557928562,
            8.730388799449429e-05,
            0.0003899472358170897,
            9.549128299113363e-05
        ],
        "align_select": "select countrylanguage.Language",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the official language spoken in the country whose head of state is Ricardo Lagos Escobar?",
        "gold_select": "select countrylanguage.Language",
        "select_candidates": [
            "select countrylanguage.Language",
            "select countrylanguage.Language, countrylanguage.IsOfficial",
            "select countrylanguage.Language, countrylanguage.IsOfficial, countrylanguage.Percentage",
            "select countrylanguage.Language, countrylanguage.IsOfficial"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9928707480430603,
            0.0003152171557303518,
            0.0003514987474773079,
            9.440201392862946e-05,
            0.0002192383399233222,
            8.651977259432897e-05,
            0.0003514987474773079,
            9.440201392862946e-05
        ],
        "align_select": "select countrylanguage.Language",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the official language spoken in the country whose head of state is George W. Bush?",
        "gold_select": "select countrylanguage.Language",
        "select_candidates": [
            "select countrylanguage.Language",
            "select countrylanguage.Language, countrylanguage.IsOfficial",
            "select countrylanguage.Language, countrylanguage.IsOfficial, countrylanguage.Percentage",
            "select countrylanguage.Language, countrylanguage.IsOfficial"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9923511147499084,
            0.00028822285821661353,
            0.0003974968276452273,
            9.163552749669179e-05,
            0.0002305038651684299,
            8.362343942280859e-05,
            0.0003974968276452273,
            9.163552749669179e-05
        ],
        "align_select": "select countrylanguage.Language",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the official language spoken in the country whose head of state is Jiang Zemin?",
        "gold_select": "select countrylanguage.Language",
        "select_candidates": [
            "select countrylanguage.Language",
            "select countrylanguage.Language, countrylanguage.IsOfficial",
            "select countrylanguage.Language, countrylanguage.IsOfficial",
            "select countrylanguage.Language, country.HeadOfState"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9894355535507202,
            0.0003289513406343758,
            0.00037214139592833817,
            0.00010054148151539266,
            0.00037214139592833817,
            0.00010054148151539266,
            0.0002475949877407402,
            7.91568381828256e-05
        ],
        "align_select": "select countrylanguage.Language",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the official language used in the country the name of whose head of state is Bakili Muluzi.",
        "gold_select": "select countrylanguage.Language",
        "select_candidates": [
            "select countrylanguage.Language",
            "select countrylanguage.Language, countrylanguage.IsOfficial",
            "select countrylanguage.Language, countrylanguage.IsOfficial, countrylanguage.Percentage",
            "select countrylanguage.Language, countrylanguage.IsOfficial"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9934849143028259,
            0.00024281276273541152,
            0.0004195466754026711,
            9.912002133205533e-05,
            0.00025269773323088884,
            8.855006308294833e-05,
            0.0004195466754026711,
            9.912002133205533e-05
        ],
        "align_select": "select countrylanguage.Language",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the official language used in the country the name of whose head of state is Albert II.",
        "gold_select": "select countrylanguage.Language",
        "select_candidates": [
            "select countrylanguage.Language",
            "select countrylanguage.Language, countrylanguage.IsOfficial",
            "select countrylanguage.Language, countrylanguage.IsOfficial, countrylanguage.Percentage",
            "select countrylanguage.Language, countrylanguage.IsOfficial"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9946958422660828,
            0.00021454643865581602,
            0.0003771770279854536,
            8.923004497773945e-05,
            0.00023029583098832518,
            8.140412683133036e-05,
            0.0003771770279854536,
            8.923004497773945e-05
        ],
        "align_select": "select countrylanguage.Language",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the official language used in the country the name of whose head of state is Ricardo Lagos Escobar.",
        "gold_select": "select countrylanguage.Language",
        "select_candidates": [
            "select countrylanguage.Language",
            "select countrylanguage.Language, countrylanguage.IsOfficial",
            "select countrylanguage.Language, countrylanguage.IsOfficial",
            "select countrylanguage.Language, countrylanguage.IsOfficial, countrylanguage.Percentage"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9943568110466003,
            0.0002188596990890801,
            0.0003464859037194401,
            9.123654308496043e-05,
            0.0003464859037194401,
            9.123654308496043e-05,
            0.0002073634386761114,
            8.3916776929982e-05
        ],
        "align_select": "select countrylanguage.Language",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the official language used in the country the name of whose head of state is George W. Bush.",
        "gold_select": "select countrylanguage.Language",
        "select_candidates": [
            "select countrylanguage.Language",
            "select countrylanguage.Language, countrylanguage.IsOfficial",
            "select countrylanguage.Language, countrylanguage.IsOfficial, countrylanguage.Percentage",
            "select countrylanguage.Language, countrylanguage.IsOfficial"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9945929646492004,
            0.00020520362886600196,
            0.0003580138727556914,
            8.911566692404449e-05,
            0.0002078143006656319,
            7.980599912116304e-05,
            0.0003580138727556914,
            8.911566692404449e-05
        ],
        "align_select": "select countrylanguage.Language",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the official language used in the country the name of whose head of state is Jiang Zemin.",
        "gold_select": "select countrylanguage.Language",
        "select_candidates": [
            "select countrylanguage.Language",
            "select countrylanguage.Language, countrylanguage.IsOfficial",
            "select countrylanguage.Language, countrylanguage.IsOfficial, countrylanguage.Percentage",
            "select countrylanguage.Language, countrylanguage.IsOfficial"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9920250177383423,
            0.00020237146236468107,
            0.00044288396020419896,
            9.685193072073162e-05,
            0.00020782342471648008,
            8.379819337278605e-05,
            0.00044288396020419896,
            9.685193072073162e-05
        ],
        "align_select": "select countrylanguage.Language",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the countries that have greater surface area than any country in Oceania?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.SurfaceArea",
            "select country.Name, country.Continent",
            "select country.Name, country.Region"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.7126484513282776,
            0.0020722525659948587,
            0.00040234578773379326,
            8.511688793078065e-05,
            0.0003436195838730782,
            0.0001209420952363871,
            0.00031510836561210454,
            0.00013119407230988145
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the countries that have greater surface area than any country in South America?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Region",
            "select country.Name, country.Continent",
            "select country.Name, country.SurfaceArea"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.6828815340995789,
            0.001553173759020865,
            0.000365006533684209,
            0.00011144034942844883,
            0.000367772881872952,
            0.00011514268408063799,
            0.00045715266605839133,
            9.467201016377658e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the countries that have greater surface area than any country in Asia?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Continent",
            "select country.Name, country.Region",
            "select country.Name, country.SurfaceArea"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.6767821907997131,
            0.000765154545661062,
            0.0003609645937103778,
            0.00010067491530207917,
            0.0003465240588411689,
            0.00010051866411231458,
            0.00044687860645353794,
            8.263329800684005e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the countries that have greater surface area than any country in Antarctica?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Code",
            "select country.Name, country.SurfaceArea",
            "select country.Name, country.Region"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.7496098279953003,
            0.0016841503093019128,
            0.0021591144613921642,
            0.0002326795074623078,
            0.00042611383832991123,
            9.413817315362394e-05,
            0.0003341412520967424,
            0.0001307744241785258
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the countries that have greater surface area than any country in North America?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Region",
            "select country.Name, country.SurfaceArea",
            "select country.Name, country.Continent"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.6562926769256592,
            0.006088866852223873,
            0.00037431286182254553,
            0.00015096590504981577,
            0.000483572919620201,
            0.00018136759172193706,
            0.00036979297874495387,
            0.00015733661712147295
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which countries have greater area than that of any country in Oceania?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.SurfaceArea",
            "select country.Name, country.Continent",
            "select country.Name, country.Region"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.7928783893585205,
            0.0005760877393186092,
            0.00039534104871563613,
            7.352729880949482e-05,
            0.00032658703275956213,
            9.710354788694531e-05,
            0.0003180219791829586,
            9.170320117846131e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which countries have greater area than that of any country in South America?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Region",
            "select country.Code, country.Name",
            "select country.Name, country.Continent"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.694193422794342,
            0.0006775498623028398,
            0.00032986392034217715,
            8.651202369946986e-05,
            0.0026925080455839634,
            0.0001656466192798689,
            0.00033356391941197217,
            9.84008947852999e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which countries have greater area than that of any country in Asia?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Continent",
            "select country.Name, country.Region",
            "select country.Code, country.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.7168034315109253,
            0.0004008456598967314,
            0.00030723007512278855,
            8.61136504681781e-05,
            0.000309473107336089,
            8.17520049167797e-05,
            0.0026598714757710695,
            0.00013643149577546865
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which countries have greater area than that of any country in Antarctica?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Code",
            "select country.Name, country.SurfaceArea",
            "select country.Name, country.Region"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.7594388127326965,
            0.0006843326846137643,
            0.0024843011051416397,
            0.00015931623056530952,
            0.00040021943277679384,
            8.091985364444554e-05,
            0.00030444838921539485,
            9.18780715437606e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which countries have greater area than that of any country in North America?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Region",
            "select country.Code, country.Name",
            "select country.Name, country.Continent"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.6589150428771973,
            0.00046290442696772516,
            0.00033363577676936984,
            9.214603778673336e-05,
            0.002752601867541671,
            0.00017385699902661145,
            0.0003406991600058973,
            0.00010622719855746254
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the African countries that have a population less than any country in Oceania?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Continent",
            "select country.Name, country.Population",
            "select country.Code, country.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.8141722679138184,
            0.021846067160367966,
            0.00032288534566760063,
            0.00016484146181028336,
            0.0003897358838003129,
            0.0001181671759695746,
            0.002615727251395583,
            0.00025982080842368305
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the African countries that have a population less than any country in Africa?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Continent",
            "select country.Code, country.Name",
            "select african country.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "sqlite_sequence country",
            "city country"
        ],
        "align_scores": [
            0.41049984097480774,
            0.0019085583044216037,
            0.00035123061388731003,
            0.00010143977851839736,
            0.0020443517714738846,
            0.00020188115013297647,
            0.06391315162181854,
            0.0005825110129080713
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which African countries have a smaller population than that of any country in South America?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Continent",
            "select country.Name, country.Population",
            "select country.Code, country.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.622932493686676,
            0.0013380972668528557,
            0.0003403191512916237,
            0.0001267569896299392,
            0.00046900674351491034,
            8.464928396278992e-05,
            0.003929092548787594,
            0.00017200480215251446
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which African countries have a smaller population than that of any country in Europe?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Continent",
            "select country.Name, country.Population",
            "select country.Code, country.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.6362739205360413,
            0.0013705557212233543,
            0.00032623944571241736,
            0.00011656345304800197,
            0.0004970824811607599,
            8.957796671893448e-05,
            0.0051713185384869576,
            0.0001966555428225547
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which African countries have a smaller population than that of any country in North America?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Continent",
            "select country.Name, country.Population",
            "select distinct country.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.528842568397522,
            0.0013045291416347027,
            0.00031610194128006697,
            0.00011369832645868883,
            0.0004492218722589314,
            8.670064562465996e-05,
            0.15167120099067688,
            0.0007450428674928844
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which Asian countries have a population that is larger than any country in Oceania?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Continent",
            "select country.Name, country.Population",
            "select country.Code, country.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.7459424734115601,
            0.0013074452290311456,
            0.0003610454441513866,
            0.00012486011837609112,
            0.0004300717846490443,
            8.529474871465936e-05,
            0.005340550094842911,
            0.0002228330122306943
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which Asian countries have a population that is larger than any country in South America?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Continent",
            "select country.Name, country.Continent, country.Region",
            "select country.Name, country.Continent, country.Population"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.5886375904083252,
            0.0010111882584169507,
            0.00039871371700428426,
            0.00012740357487928122,
            0.00025765292230062187,
            7.498425111407414e-05,
            0.00021441435092128813,
            6.891358498251066e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which Asian countries have a population that is larger than any country in Europe?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Continent",
            "select country.Name, country.Population",
            "select country.Code, country.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "city country",
            "sqlite_sequence country"
        ],
        "align_scores": [
            0.6386969685554504,
            0.0006977055454626679,
            0.00047814546269364655,
            0.0001338863221462816,
            0.0004977450589649379,
            8.96306082722731e-05,
            0.006273302249610424,
            0.00022979530331213027
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which Asian countries have a population that is larger than any country in Antarctica?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Continent",
            "select country.Name, country.Population",
            "select country.Name, country.Code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.6361840963363647,
            0.01263817586004734,
            0.00031436063000001013,
            0.00014371794532053173,
            0.00035822519566863775,
            0.00012613482249435037,
            0.00293245492503047,
            0.0003826928441412747
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which Asian countries have a population that is larger than any country in North America?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Continent",
            "select country.Name, country.Population",
            "select country.Code, country.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "sqlite_sequence country",
            "city country",
            "city sqlite_sequence country"
        ],
        "align_scores": [
            0.5005684494972229,
            0.0006212323205545545,
            0.0004240544803906232,
            0.00012577787856571376,
            0.00042798518552444875,
            8.507964957971126e-05,
            0.00490710511803627,
            0.00018651025311555713
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the Asian countries which have a population larger than that of any country in Asia?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Continent",
            "select distinct country.Name",
            "select country.Code, country.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "sqlite_sequence country",
            "city country",
            "city sqlite_sequence country"
        ],
        "align_scores": [
            0.3612149655818939,
            0.002179123926907778,
            0.00036569350049830973,
            0.00013682495045941323,
            0.1410982757806778,
            0.001123939175158739,
            0.0018773064948618412,
            0.0002400505036348477
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the country codes for countries that do not speak Nepali?",
        "gold_select": "select countrylanguage.CountryCode",
        "select_candidates": [
            "select country.Code",
            "select countrylanguage.CountryCode",
            "select country.Name, country.Code",
            "select country.Name, countrylanguage.CountryCode"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.8526394367218018,
            0.004852215759456158,
            0.893190324306488,
            0.5343112349510193,
            0.00034740858245640993,
            0.00015230450662784278,
            0.0003060729359276593,
            0.00023830959980841726
        ],
        "align_select": "select country.Code",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the country codes for countries that do not speak Limba?",
        "gold_select": "select countrylanguage.CountryCode",
        "select_candidates": [
            "select country.Code",
            "select countrylanguage.CountryCode",
            "select country.Name, countrylanguage.CountryCode",
            "select country.Name, country.Continent"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "countrylanguage",
        "table_candidates": [
            "countrylanguage",
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence countrylanguage",
            "countrylanguage country countrylanguage"
        ],
        "align_scores": [
            0.005687805358320475,
            0.0002477224625181407,
            0.5030443668365479,
            0.003845114493742585,
            0.00032384070800617337,
            0.00019023385539185256,
            0.00021044275490567088,
            0.00010531622683629394
        ],
        "align_select": "select countrylanguage.CountryCode",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the country codes for countries that do not speak Ndebele?",
        "gold_select": "select countrylanguage.CountryCode",
        "select_candidates": [
            "select countrylanguage.CountryCode",
            "select country.Name, countrylanguage.CountryCode",
            "select country.Code",
            "select country.Name, country.Continent"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "countrylanguage",
        "table_candidates": [
            "countrylanguage",
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.5248011350631714,
            0.92954021692276,
            0.0002135341928806156,
            0.00023771276755724102,
            0.0072339484468102455,
            0.905498743057251,
            0.0002080548001686111,
            0.00017247909272555262
        ],
        "align_select": "select countrylanguage.CountryCode",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the country codes for countries that do not speak Ainu?",
        "gold_select": "select countrylanguage.CountryCode",
        "select_candidates": [
            "select countrylanguage.CountryCode",
            "select country.Name, countrylanguage.CountryCode",
            "select country.Name, country.Continent",
            "select countrylanguage.CountryCode, countrylanguage.Language"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "countrylanguage",
        "table_candidates": [
            "countrylanguage",
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.2797548770904541,
            0.8859803080558777,
            0.00020944008429069072,
            0.0002569106291048229,
            0.00014810371794737875,
            0.00017001322703436017,
            0.00011396991612855345,
            0.00023087512818165123
        ],
        "align_select": "select countrylanguage.CountryCode",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the country codes for countries that do not speak Maranao?",
        "gold_select": "select countrylanguage.CountryCode",
        "select_candidates": [
            "select countrylanguage.CountryCode",
            "select country.Code",
            "select country.Name, countrylanguage.CountryCode",
            "select country.Name, country.Continent"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "countrylanguage",
        "table_candidates": [
            "countrylanguage",
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "sqlite_sequence countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.4191688597202301,
            0.0016485732048749924,
            0.002115429611876607,
            0.0001826985098887235,
            0.00022297816758509725,
            0.00013875092554371804,
            0.00013802344619762152,
            9.359003161080182e-05
        ],
        "align_select": "select countrylanguage.CountryCode",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "Return the country codes for countries that do not speak Nepali.",
        "gold_select": "select countrylanguage.CountryCode",
        "select_candidates": [
            "select country.Code",
            "select countrylanguage.CountryCode",
            "select country.Name, country.Code",
            "select country.Name, countrylanguage.CountryCode"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.9752116799354553,
            0.0009106511133722961,
            0.9755789041519165,
            0.19463330507278442,
            0.00023159013653639704,
            0.00011775200255215168,
            0.00021768116857856512,
            0.00019829913799185306
        ],
        "align_select": "select country.Code",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the country codes for countries that do not speak Limba.",
        "gold_select": "select countrylanguage.CountryCode",
        "select_candidates": [
            "select country.Code",
            "select country.Name, countrylanguage.CountryCode",
            "select countrylanguage.CountryCode",
            "select country.Name, country.Continent"
        ],
        "select_labels": [
            0.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "countrylanguage",
        "table_candidates": [
            "countrylanguage",
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "sqlite_sequence countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.001626751385629177,
            0.00019723974401131272,
            0.0002951911883428693,
            0.00017736606241669506,
            0.2520653307437897,
            0.0024563453625887632,
            0.00020342154311947525,
            9.762227273313329e-05
        ],
        "align_select": "select countrylanguage.CountryCode",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "Return the country codes for countries that do not speak Ndebele.",
        "gold_select": "select countrylanguage.CountryCode",
        "select_candidates": [
            "select countrylanguage.CountryCode",
            "select country.Name, countrylanguage.CountryCode",
            "select country.Code",
            "select country.Name, country.Continent"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "countrylanguage",
        "table_candidates": [
            "countrylanguage",
            "country countrylanguage",
            "sqlite_sequence countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.1714627891778946,
            0.9813185334205627,
            0.00018755171913653612,
            0.00017991935601457953,
            0.0010692913783714175,
            0.9827691912651062,
            0.00015533019904978573,
            0.00013978927745483816
        ],
        "align_select": "select country.Code",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the country codes for countries that do not speak Ainu.",
        "gold_select": "select countrylanguage.CountryCode",
        "select_candidates": [
            "select countrylanguage.CountryCode",
            "select country.Name, countrylanguage.CountryCode",
            "select country.Code",
            "select country.Name, country.Continent"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "countrylanguage",
        "table_candidates": [
            "countrylanguage",
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.049627695232629776,
            0.9675495028495789,
            0.00017192053201142699,
            0.00019829270604532212,
            0.0005671635153703392,
            0.9752519130706787,
            0.00012629800767172128,
            0.00014053157065063715
        ],
        "align_select": "select country.Code",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the country codes for countries that do not speak Maranao.",
        "gold_select": "select countrylanguage.CountryCode",
        "select_candidates": [
            "select countrylanguage.CountryCode",
            "select country.Code",
            "select country.Name, countrylanguage.CountryCode",
            "select country.Name, country.Continent"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "countrylanguage",
        "table_candidates": [
            "countrylanguage",
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "sqlite_sequence countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.25486528873443604,
            0.0017045577988028526,
            0.0007527748239226639,
            0.00018608571554068476,
            0.00021550882956944406,
            0.00012934942787978798,
            0.00011819252540590242,
            8.32402947708033e-05
        ],
        "align_select": "select countrylanguage.CountryCode",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the country codes of countries where people use languages other than Nepali?",
        "gold_select": "select distinct countrylanguage.CountryCode",
        "select_candidates": [
            "select country.Code",
            "select countrylanguage.CountryCode",
            "select country.Name, countrylanguage.CountryCode",
            "select country.Name, country.Code"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "countrylanguage",
        "table_candidates": [
            "countrylanguage",
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.7168174982070923,
            0.03871443495154381,
            0.8579457402229309,
            0.0945873111486435,
            0.00044440830242820084,
            0.0001340811577392742,
            0.00042231299448758364,
            0.00013928260887041688
        ],
        "align_select": "select country.Code",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the country codes of countries where people use languages other than Limba?",
        "gold_select": "select distinct countrylanguage.CountryCode",
        "select_candidates": [
            "select countrylanguage.CountryCode",
            "select country.Name, countrylanguage.CountryCode",
            "select countrylanguage.CountryCode (http://countrylanguage.CountryCode.c1)",
            "select distinct countrylanguage.CountryCode"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "countrylanguage",
        "table_candidates": [
            "countrylanguage",
            "country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.9222737550735474,
            0.5635912418365479,
            0.0004213298379909247,
            0.00019049194816034287,
            0.00048123736632987857,
            0.00031025477801449597,
            0.09485805779695511,
            0.00033355149207636714
        ],
        "align_select": "select countrylanguage.CountryCode",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the country codes of countries where people use languages other than Ndebele?",
        "gold_select": "select distinct countrylanguage.CountryCode",
        "select_candidates": [
            "select countrylanguage.CountryCode",
            "select countrylanguage.CountryCode, countrylanguage.Language",
            "select distinct countrylanguage.CountryCode",
            "select countrylanguage.CountryCode, countrylanguage.Language, countrylanguage.IsOfficial"
        ],
        "select_labels": [
            0.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "countrylanguage",
        "table_candidates": [
            "countrylanguage",
            "country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.9097921252250671,
            0.04979446157813072,
            0.0002799687790684402,
            0.00010516418842598796,
            0.06176920607686043,
            0.00024079871946014464,
            0.00019218646048102528,
            7.918402116047218e-05
        ],
        "align_select": "select countrylanguage.CountryCode",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the country codes of countries where people use languages other than Ainu?",
        "gold_select": "select distinct countrylanguage.CountryCode",
        "select_candidates": [
            "select countrylanguage.CountryCode",
            "select countrylanguage.CountryCode, countrylanguage.Language",
            "select distinct countrylanguage.CountryCode",
            "select countrylanguage.CountryCode, countrylanguage.Language, countrylanguage.IsOfficial"
        ],
        "select_labels": [
            0.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "countrylanguage",
        "table_candidates": [
            "countrylanguage",
            "country countrylanguage"
        ],
        "align_scores": [
            0.9023188352584839,
            0.05870624631643295,
            0.00027060889988206327,
            0.0001000518022920005,
            0.07298220694065094,
            0.00023844641691539437,
            0.00018691243894863874,
            8.11978243291378e-05
        ],
        "align_select": "select countrylanguage.CountryCode",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the country codes of countries where people use languages other than Maranao?",
        "gold_select": "select distinct countrylanguage.CountryCode",
        "select_candidates": [
            "select countrylanguage.CountryCode",
            "select country.Name, countrylanguage.CountryCode",
            "select countrylanguage.CountryCode, countrylanguage.Language",
            "select countrylanguage.CountryCode (http://countrylanguage.CountryCode.c1)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "countrylanguage",
        "table_candidates": [
            "countrylanguage",
            "country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.9219460487365723,
            0.14902526140213013,
            0.0003867452614940703,
            0.00013219252286944538,
            0.0002726558595895767,
            0.00010941213986370713,
            0.0004311144002713263,
            0.0002540180867072195
        ],
        "align_select": "select countrylanguage.CountryCode",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give the country codes for countries in which people speak langauges that are not Nepali.",
        "gold_select": "select distinct countrylanguage.CountryCode",
        "select_candidates": [
            "select country.Code",
            "select countrylanguage.CountryCode",
            "select country.Name, countrylanguage.CountryCode",
            "select country.Name, country.Code"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "countrylanguage",
        "table_candidates": [
            "countrylanguage",
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.5009603500366211,
            0.011064291000366211,
            0.4761354327201843,
            0.05241653695702553,
            0.000440054340288043,
            0.000124691185192205,
            0.00042750424472615123,
            0.00013304295134730637
        ],
        "align_select": "select country.Code",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give the country codes for countries in which people speak langauges that are not Limba.",
        "gold_select": "select distinct countrylanguage.CountryCode",
        "select_candidates": [
            "select countrylanguage.CountryCode",
            "select country.Name, countrylanguage.CountryCode",
            "select country.Name, country.Continent",
            "select distinct countrylanguage.CountryCode"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "countrylanguage",
        "table_candidates": [
            "countrylanguage",
            "country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.7705152034759521,
            0.1449631303548813,
            0.00036575907142832875,
            0.00016096796025522053,
            0.00022184726549312472,
            0.00023408963170368224,
            0.06423705071210861,
            0.0007002729689702392
        ],
        "align_select": "select countrylanguage.CountryCode",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give the country codes for countries in which people speak langauges that are not Ndebele.",
        "gold_select": "select distinct countrylanguage.CountryCode",
        "select_candidates": [
            "select countrylanguage.CountryCode",
            "select distinct countrylanguage.CountryCode",
            "select country.Name, countrylanguage.CountryCode",
            "select countrylanguage.CountryCode, countrylanguage.Language"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "countrylanguage",
        "table_candidates": [
            "countrylanguage",
            "country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.635779082775116,
            0.04044993221759796,
            0.07647861540317535,
            0.0006441898294724524,
            0.0003485869965516031,
            0.00011683531920425594,
            0.00028058901079930365,
            0.00010113090684171766
        ],
        "align_select": "select countrylanguage.CountryCode",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give the country codes for countries in which people speak langauges that are not Ainu.",
        "gold_select": "select distinct countrylanguage.CountryCode",
        "select_candidates": [
            "select countrylanguage.CountryCode",
            "select distinct countrylanguage.CountryCode",
            "select country.Name, countrylanguage.CountryCode",
            "select countrylanguage.CountryCode, countrylanguage.Language"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "countrylanguage",
        "table_candidates": [
            "countrylanguage",
            "country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.5786727666854858,
            0.06356806308031082,
            0.07201310247182846,
            0.000509275880176574,
            0.0003773464122787118,
            0.00011643180914688855,
            0.0002548858756199479,
            9.954873530659825e-05
        ],
        "align_select": "select countrylanguage.CountryCode",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give the country codes for countries in which people speak langauges that are not Maranao.",
        "gold_select": "select distinct countrylanguage.CountryCode",
        "select_candidates": [
            "select countrylanguage.CountryCode",
            "select country.Name, countrylanguage.CountryCode",
            "select distinct countrylanguage.CountryCode",
            "select countrylanguage.CountryCode, countrylanguage.Language"
        ],
        "select_labels": [
            0.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "countrylanguage",
        "table_candidates": [
            "countrylanguage",
            "country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.5116177797317505,
            0.04740013927221298,
            0.00036721036303788424,
            0.0001211864801007323,
            0.06420879065990448,
            0.0006450133514590561,
            0.0003406041651032865,
            0.00010246973397443071
        ],
        "align_select": "select countrylanguage.CountryCode",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the codes of the countries that do not speak Nepali and whose government forms are not Republic?",
        "gold_select": "select country.Code",
        "select_candidates": [
            "select country.Code",
            "select country.Name, country.Code2",
            "select country.Name, country.Code",
            "select country.Code, country.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.13559900224208832,
            0.7810139656066895,
            0.00024481542641296983,
            0.0002779013884719461,
            0.00029678415739908814,
            0.00036744814133271575,
            0.0002955488453153521,
            0.00048349337885156274
        ],
        "align_select": "select country.Code",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the codes of the countries that do not speak Limba and whose government forms are not Republic?",
        "gold_select": "select country.Code",
        "select_candidates": [
            "select country.Code",
            "select country.Code, country.GovernmentForm",
            "select country.Code, country.GovernmentForm",
            "select country.Name, country.Code2"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.048686373978853226,
            0.8609184622764587,
            0.00014677531726192683,
            0.0007177568622864783,
            0.00014677531726192683,
            0.0007177568622864783,
            0.0002555679820943624,
            0.00025034710415638983
        ],
        "align_select": "select country.Code",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the codes of the countries that do not speak Ndebele and whose government forms are not Republic?",
        "gold_select": "select country.Code",
        "select_candidates": [
            "select country.Code",
            "select country.Code, country.GovernmentForm",
            "select country.Name, country.Code2",
            "select country.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.16645734012126923,
            0.7231229543685913,
            0.00016013026470318437,
            0.0007210317999124527,
            0.0002794945612549782,
            0.00029939645901322365,
            0.8202297687530518,
            0.00654949527233839
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the codes of the countries that do not speak Ainu and whose government forms are not Republic?",
        "gold_select": "select country.Code",
        "select_candidates": [
            "select country.Code",
            "select country.Code, country.GovernmentForm",
            "select country.Name, country.Code2",
            "select country.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.08544059097766876,
            0.8802912831306458,
            0.00013701726857107133,
            0.0007508433191105723,
            0.0002510419290047139,
            0.0002801794616971165,
            0.7717998027801514,
            0.006909790448844433
        ],
        "align_select": "select country.Code",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the codes of the countries that do not speak Maranao and whose government forms are not Republic?",
        "gold_select": "select country.Code",
        "select_candidates": [
            "select country.Code",
            "select country.Code, country.GovernmentForm",
            "select country.Name, country.Code2",
            "select country.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.10704739391803741,
            0.8040202856063843,
            0.0001489236601628363,
            0.000723796896636486,
            0.0002651312097441405,
            0.0002829446748364717,
            0.7874632477760315,
            0.007589212153106928
        ],
        "align_select": "select country.Code",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the codes of the countries that do not speak English and whose government forms are not Constitutional Monarchy (Emirate)?",
        "gold_select": "select country.Code",
        "select_candidates": [
            "select country.Code",
            "select country.Code2",
            "select country.Name",
            "select countrylanguage.CountryCode"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.9608771204948425,
            0.0853452980518341,
            0.11116736382246017,
            0.19404903054237366,
            0.010411728173494339,
            0.5360089540481567,
            0.934934139251709,
            0.33641839027404785
        ],
        "align_select": "select country.Code",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the codes of the countries that do not speak English and whose government forms are not Monarchy (Sultanate)?",
        "gold_select": "select country.Code",
        "select_candidates": [
            "select country.Code",
            "select country.Name",
            "select country.Code2",
            "select countrylanguage.CountryCode"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.931582510471344,
            0.01741795800626278,
            0.00826703105121851,
            0.30141496658325195,
            0.05280498415231705,
            0.03399688005447388,
            0.9302405714988708,
            0.1071835532784462
        ],
        "align_select": "select country.Code",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the codes of the countries that do not speak English and whose government forms are not Autonomous Area?",
        "gold_select": "select country.Code",
        "select_candidates": [
            "select country.Code",
            "select country.Name",
            "select country.Code2",
            "select countrylanguage.CountryCode"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.9464223384857178,
            0.14670924842357635,
            0.009813346900045872,
            0.9284160733222961,
            0.06965552270412445,
            0.11626036465167999,
            0.948746919631958,
            0.5601323246955872
        ],
        "align_select": "select country.Code",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the codes of the countries that do not speak English and whose government forms are not Constitutional Monarchy?",
        "gold_select": "select country.Code",
        "select_candidates": [
            "select country.Code",
            "select country.Name",
            "select country.Code2",
            "select countrylanguage.CountryCode"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.9683624505996704,
            0.03889169543981552,
            0.010042954236268997,
            0.5515204668045044,
            0.1236114650964737,
            0.0705781951546669,
            0.9471198320388794,
            0.2482733428478241
        ],
        "align_select": "select country.Code",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the codes of the countries that do not speak English and whose government forms are not Territorial Collectivity of France?",
        "gold_select": "select country.Code",
        "select_candidates": [
            "select country.Code",
            "select country.Name, country.Code",
            "select country.Code, country.GovernmentForm",
            "select country.Name, country.Code2"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.9360648393630981,
            0.17490226030349731,
            0.0005305636441335082,
            0.0004823260533157736,
            0.0021125730127096176,
            0.0002822777896653861,
            0.00038089847657829523,
            0.00042988714994862676
        ],
        "align_select": "select country.Code",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the codes of countries that do not speak Nepali and do not have Republics for governments.",
        "gold_select": "select country.Code",
        "select_candidates": [
            "select country.Code",
            "select country.Name, country.Code2",
            "select country.Code, country.Name",
            "select country.Name, country.Code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.02868593856692314,
            0.5113625526428223,
            0.00021445461607072502,
            0.00025072760763578117,
            0.00019939955382142216,
            0.00025106489192694426,
            0.00025670495233498514,
            0.000272181088803336
        ],
        "align_select": "select country.Code",
        "align_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "Return the codes of countries that do not speak Limba and do not have Republics for governments.",
        "gold_select": "select country.Code",
        "select_candidates": [
            "select country.Code",
            "select country.Code, country.GovernmentForm",
            "select country.Name, country.Code2",
            "select country.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.011245334520936012,
            0.25142496824264526,
            0.00019931803399231285,
            0.00022028876992408186,
            0.00021368003217503428,
            0.00025334517704322934,
            0.676255464553833,
            0.8672581315040588
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "Return the codes of countries that do not speak Ndebele and do not have Republics for governments.",
        "gold_select": "select country.Code",
        "select_candidates": [
            "select country.Code",
            "select country.Code, country.GovernmentForm",
            "select country.Name, country.Code2",
            "select country.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.0763406977057457,
            0.5752096176147461,
            0.00019806026830337942,
            0.00023352852440439165,
            0.00023488620354328305,
            0.00029865410760976374,
            0.8902033567428589,
            0.9719530344009399
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "Return the codes of countries that do not speak Ainu and do not have Republics for governments.",
        "gold_select": "select country.Code",
        "select_candidates": [
            "select country.Code",
            "select country.Code, country.GovernmentForm",
            "select country.Name, country.Code2",
            "select country.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.04589075967669487,
            0.6005785465240479,
            0.00020960569963790476,
            0.00025259077665396035,
            0.000233399638091214,
            0.0002914428187068552,
            0.9090909957885742,
            0.9825474619865417
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "Return the codes of countries that do not speak Maranao and do not have Republics for governments.",
        "gold_select": "select country.Code",
        "select_candidates": [
            "select country.Code",
            "select country.Code, country.GovernmentForm",
            "select country.Name, country.Code2",
            "select country.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.02769424021244049,
            0.44329363107681274,
            0.00018493173411116004,
            0.00021924354950897396,
            0.0002150709624402225,
            0.0002606987254694104,
            0.8482478260993958,
            0.9652627110481262
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "Which cities are in European countries where Nepali is not the official language?",
        "gold_select": "select distinct city.Name",
        "select_candidates": [
            "select city.Name",
            "select city.ID, city.Name",
            "select city.Name, country.Code",
            "select city.Name, country.Continent"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "city country countrylanguage",
        "table_candidates": [
            "city country countrylanguage",
            "city country",
            "city sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.011096502654254436,
            0.000607298978138715,
            0.00023611600045114756,
            0.00018852204084396362,
            0.00018936571723315865,
            0.0002191445091739297,
            0.0001387327938573435,
            0.00011689592793118209
        ],
        "align_select": "select city.Name",
        "align_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "Which cities are in European countries where Limba is not the official language?",
        "gold_select": "select distinct city.Name",
        "select_candidates": [
            "select city.Name",
            "select city.ID",
            "select city.Name, country.Name",
            "select city.ID, city.Name"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "city country countrylanguage",
        "table_candidates": [
            "city country countrylanguage",
            "city sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.003855297574773431,
            0.7130205035209656,
            0.007354248780757189,
            0.08842688053846359,
            0.0001483273081248626,
            0.00030364427948370576,
            0.00016132504970300943,
            0.00035314002889208496
        ],
        "align_select": "select city.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which cities are in European countries where Ndebele is not the official language?",
        "gold_select": "select distinct city.Name",
        "select_candidates": [
            "select city.Name",
            "select city.ID, city.Name",
            "select city.Name, country.Name",
            "select city.Name, country.Code"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "city country countrylanguage",
        "table_candidates": [
            "city country countrylanguage",
            "city sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.02292509377002716,
            0.00049390405183658,
            0.00020136097737122327,
            0.00015729491133242846,
            0.0001663387520238757,
            0.0001436104066669941,
            0.00016928529657889158,
            0.00017979588301386684
        ],
        "align_select": "select city.Name",
        "align_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "Which cities are in European countries where Ainu is not the official language?",
        "gold_select": "select distinct city.Name",
        "select_candidates": [
            "select city.Name",
            "select city.ID, city.Name",
            "select city.Name, country.Name",
            "select city.Name, country.Code"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "city country countrylanguage",
        "table_candidates": [
            "city country countrylanguage",
            "city sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.006229440215975046,
            0.6797705888748169,
            0.00018383785209152848,
            0.0004001072666142136,
            0.00014891527825966477,
            0.0003250277950428426,
            0.00014949304750189185,
            0.0003427177725825459
        ],
        "align_select": "select city.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which cities are in European countries where Maranao is not the official language?",
        "gold_select": "select distinct city.Name",
        "select_candidates": [
            "select city.Name",
            "select city.ID, city.Name",
            "select city.Name, country.Name",
            "select city.Name, country.Code"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "city country countrylanguage",
        "table_candidates": [
            "city country countrylanguage",
            "city sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.013381839729845524,
            0.555426299571991,
            0.0001968827418750152,
            0.0003848190826829523,
            0.00016385545313823968,
            0.0003624082892201841,
            0.00017506335279904306,
            0.000377215095795691
        ],
        "align_select": "select city.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of cities in Oceania for which English is not the official language?",
        "gold_select": "select distinct city.Name",
        "select_candidates": [
            "select city.Name",
            "select city.Name, country.Name",
            "select distinct city.Name",
            "select city.Name, countrylanguage.Language"
        ],
        "select_labels": [
            0.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "city country countrylanguage",
        "table_candidates": [
            "city country countrylanguage",
            "city sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9910405278205872,
            0.0011496318038553,
            0.00022587741841562092,
            0.00013643683632835746,
            0.023690056055784225,
            0.019424201920628548,
            0.00022632969194091856,
            0.00013278212281875312
        ],
        "align_select": "select city.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of cities in South America for which English is not the official language?",
        "gold_select": "select distinct city.Name",
        "select_candidates": [
            "select city.Name",
            "select distinct city.Name",
            "select city.Name, countrylanguage.Language",
            "select city.Name, country.Name"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "city country countrylanguage",
        "table_candidates": [
            "city country countrylanguage",
            "city sqlite_sequence country countrylanguage",
            "city country"
        ],
        "align_scores": [
            0.00236504920758307,
            0.9812073111534119,
            0.036045316606760025,
            0.029294531792402267,
            0.00015814854123163968,
            0.00024067638150881976,
            0.0001434957084711641,
            0.00023474851332139224
        ],
        "align_select": "select city.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of cities in Asia for which English is not the official language?",
        "gold_select": "select distinct city.Name",
        "select_candidates": [
            "select city.Name",
            "select city.Name, country.Name",
            "select distinct city.Name",
            "select city.ID, city.Name"
        ],
        "select_labels": [
            0.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "city country countrylanguage",
        "table_candidates": [
            "city country countrylanguage",
            "city sqlite_sequence country countrylanguage",
            "city country"
        ],
        "align_scores": [
            0.9853019118309021,
            0.0014325468800961971,
            0.00022544771491084248,
            0.00013341111480258405,
            0.026543397456407547,
            0.02429717592895031,
            0.0003098545130342245,
            0.00014429123257286847
        ],
        "align_select": "select city.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of cities in North America for which English is not the official language?",
        "gold_select": "select distinct city.Name",
        "select_candidates": [
            "select city.Name",
            "select distinct city.Name",
            "select city.Name, countrylanguage.Language",
            "select city.Name, country.Name"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "city country countrylanguage",
        "table_candidates": [
            "city country countrylanguage",
            "city sqlite_sequence country countrylanguage",
            "city country"
        ],
        "align_scores": [
            0.002815962303429842,
            0.9776256680488586,
            0.03781113773584366,
            0.026931408792734146,
            0.00015785325376782566,
            0.00024301659141201526,
            0.00015135940338950604,
            0.0002535106905270368
        ],
        "align_select": "select city.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of cities in Africa for which English is not the official language?",
        "gold_select": "select distinct city.Name",
        "select_candidates": [
            "select city.Name",
            "select city.Name, country.Name",
            "select distinct city.Name",
            "select city.Name, countrylanguage.Language"
        ],
        "select_labels": [
            0.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "city country countrylanguage",
        "table_candidates": [
            "city country countrylanguage",
            "city sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9842200875282288,
            0.002148131374269724,
            0.0002419715456198901,
            0.00014545743761118501,
            0.022909939289093018,
            0.023935673758387566,
            0.00023493102344218642,
            0.00015419536794070154
        ],
        "align_select": "select city.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of cities in Europe for which Nepali is not the official language?",
        "gold_select": "select distinct city.Name",
        "select_candidates": [
            "select city.Name",
            "select city.Name, country.Name",
            "select distinct city.Name",
            "select city.Name, countrylanguage.Language"
        ],
        "select_labels": [
            0.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "city country countrylanguage",
        "table_candidates": [
            "city country countrylanguage",
            "city country"
        ],
        "align_scores": [
            0.0056190951727330685,
            0.0021748896688222885,
            0.00017064009443856776,
            0.00015987001825124025,
            0.03230941295623779,
            0.00914493203163147,
            0.00025279459077864885,
            0.00024437374668195844
        ],
        "align_select": "select city.Name",
        "align_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of cities in Europe for which Limba is not the official language?",
        "gold_select": "select distinct city.Name",
        "select_candidates": [
            "select city.Name",
            "select city.Name, country.Name",
            "select city.ID, city.Name",
            "select city.Name, countrylanguage.Language"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "city country countrylanguage",
        "table_candidates": [
            "city country countrylanguage",
            "city sqlite_sequence country countrylanguage",
            "city country"
        ],
        "align_scores": [
            0.003900600364431739,
            0.00031966587994247675,
            0.00014707469381392002,
            8.659307059133425e-05,
            0.0001533829781692475,
            0.00013202587433625013,
            0.0002155959518859163,
            0.00017766904784366488
        ],
        "align_select": "select city.Name",
        "align_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of cities in Europe for which Ndebele is not the official language?",
        "gold_select": "select distinct city.Name",
        "select_candidates": [
            "select city.Name",
            "select city.Name, country.Name",
            "select distinct city.Name",
            "select city.Name, country.Continent"
        ],
        "select_labels": [
            0.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "city country countrylanguage",
        "table_candidates": [
            "city country countrylanguage",
            "city sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.004658043384552002,
            0.0016787243075668812,
            0.0001497944031143561,
            0.0001401691697537899,
            0.023867253214120865,
            0.006423539016395807,
            0.00013476613094098866,
            0.00012194204464321956
        ],
        "align_select": "select city.Name",
        "align_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of cities in Europe for which Ainu is not the official language?",
        "gold_select": "select distinct city.Name",
        "select_candidates": [
            "select city.Name",
            "select city.Name, country.Name",
            "select city.Name, country.Continent",
            "select city.Name, countrylanguage.Language"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "city country countrylanguage",
        "table_candidates": [
            "city country countrylanguage",
            "city sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.002044176682829857,
            0.00029272492974996567,
            0.0001513190072728321,
            8.995503594633192e-05,
            0.0001340988092124462,
            0.00011052324407501146,
            0.00017605855828151107,
            0.00014656370331067592
        ],
        "align_select": "select city.Name",
        "align_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of cities in Europe for which Maranao is not the official language?",
        "gold_select": "select distinct city.Name",
        "select_candidates": [
            "select city.Name",
            "select city.Name, country.Name",
            "select city.Name, country.Continent",
            "select city.ID, city.Name"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "city country countrylanguage",
        "table_candidates": [
            "city country countrylanguage",
            "city sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.005491518881171942,
            0.0003039104340132326,
            0.00016096704348456115,
            9.60525794653222e-05,
            0.00014014924818184227,
            0.00011627891944954172,
            0.0001700274588074535,
            0.00014819852367509156
        ],
        "align_select": "select city.Name",
        "align_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "Return the different names of cities that are in Asia and for which Nepali is the official language.",
        "gold_select": "select distinct city.Name",
        "select_candidates": [
            "select distinct city.Name",
            "select distinct city.Name, country.Name",
            "select count(distinct city.Name)",
            "select distinct city.Name, countrylanguage.Language"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "city country countrylanguage",
        "table_candidates": [
            "city country countrylanguage",
            "city sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9932310581207275,
            0.00016411158139817417,
            0.00023493279877584428,
            6.633291923208162e-05,
            0.0008962781284935772,
            7.493120938306674e-05,
            0.00038256190600804985,
            6.57846758258529e-05
        ],
        "align_select": "select distinct city.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the different names of cities that are in Asia and for which Kirgiz is the official language.",
        "gold_select": "select distinct city.Name",
        "select_candidates": [
            "select distinct city.Name",
            "select distinct city.Name, country.Capital",
            "select distinct city.Name, country.Continent",
            "select distinct city.Name, countrylanguage.Language"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "city country countrylanguage",
        "table_candidates": [
            "city country countrylanguage",
            "city sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9895758628845215,
            0.0001710721553536132,
            0.00023511475592385978,
            7.069830462569371e-05,
            0.00020651558588724583,
            6.663863314315677e-05,
            0.0002867526200134307,
            6.576566374860704e-05
        ],
        "align_select": "select distinct city.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the different names of cities that are in Asia and for which Dzongkha is the official language.",
        "gold_select": "select distinct city.Name",
        "select_candidates": [
            "select distinct city.Name",
            "select distinct city.Name, country.Capital",
            "select distinct city.Name, country.Name",
            "select distinct city.Name, country.Continent"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "city country countrylanguage",
        "table_candidates": [
            "city country countrylanguage",
            "city sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9935372471809387,
            0.00015827041352167726,
            0.00023082297411747277,
            6.764158024452627e-05,
            0.00021394262148533016,
            6.56119518680498e-05,
            0.0001937186170835048,
            6.312430195976049e-05
        ],
        "align_select": "select distinct city.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the different names of cities that are in Asia and for which Thai is the official language.",
        "gold_select": "select distinct city.Name",
        "select_candidates": [
            "select distinct city.Name",
            "select distinct city.Name, country.Continent",
            "select distinct city.Name, countrylanguage.IsOfficial",
            "select distinct city.Name, country.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "city country countrylanguage",
        "table_candidates": [
            "city country countrylanguage",
            "city sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9933945536613464,
            0.0001382146729156375,
            0.000193543586647138,
            6.545296491822228e-05,
            0.0007064288365654647,
            7.268349872902036e-05,
            0.00022774799435865134,
            6.527855293825269e-05
        ],
        "align_select": "select distinct city.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the different names of cities that are in Asia and for which Malay is the official language.",
        "gold_select": "select distinct city.Name",
        "select_candidates": [
            "select distinct city.Name",
            "select distinct city.Name, country.Continent",
            "select distinct city.Name, country.Name",
            "select distinct city.Name, countrylanguage.Language"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "city country countrylanguage",
        "table_candidates": [
            "city country countrylanguage",
            "city sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9929681420326233,
            0.0001338381989626214,
            0.00020052961190231144,
            6.439171556849033e-05,
            0.00025173486210405827,
            6.335564830806106e-05,
            0.00031699278042651713,
            6.265879346756265e-05
        ],
        "align_select": "select distinct city.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "how many countries are in Oceania?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), country.Code",
            "select count(*), country.Name",
            "select count(*), country.Capital"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9959329962730408,
            8.567625627620146e-05,
            0.0005641034804284573,
            6.016962288413197e-05,
            0.000451684434665367,
            6.0684320487780496e-05,
            0.00020929836318828166,
            5.273675196804106e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "how many countries are in South America?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), country.Code",
            "select count(*), country.Name",
            "select count(*), country.Continent"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9953461289405823,
            6.936694990145043e-05,
            0.0005385515396483243,
            5.9884558140765876e-05,
            0.00047541793901473284,
            5.721377601730637e-05,
            0.0003265210543759167,
            6.479165313066915e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "how many countries are in Europe?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), country.Code",
            "select count(*), country.Name",
            "select count(*), country.Continent"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9955068826675415,
            0.0006856840918771923,
            0.0005663672345690429,
            0.0005596173577941954,
            0.00048484286526218057,
            0.0004952469607815146,
            0.00034445986966602504,
            0.000247722928179428
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "how many countries are in Antarctica?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), country.Name",
            "select count(*), country.Code",
            "select count(*), country.Continent"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "sqlite_sequence country",
            "city country"
        ],
        "align_scores": [
            0.9943957328796387,
            7.361717143794522e-05,
            0.0004918803460896015,
            5.942348434473388e-05,
            0.0006242769304662943,
            6.181024218676612e-05,
            0.00027386550209484994,
            6.716111965943128e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "how many countries are in North America?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), country.Code",
            "select count(*), country.Name",
            "select count(*), country.Code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9952021837234497,
            8.774892194196582e-05,
            0.0005626294878311455,
            6.986217340454459e-05,
            0.0005128035554662347,
            6.633026350755244e-05,
            0.0005626294878311455,
            6.986217340454459e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Count the number of countries in Oceania.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), country.Name",
            "select count(*), country.Code",
            "select count(*), country.Capital"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.996227502822876,
            0.00023169172345660627,
            0.000252051861025393,
            0.001961836125701666,
            0.0003020058502443135,
            0.0013565398985520005,
            0.0001731867523631081,
            0.00046163031947799027
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Count the number of countries in South America.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), country.Name",
            "select count(*), country.Code",
            "select count(*), country.Continent"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.995536208152771,
            0.00018450514471624047,
            0.0002393210306763649,
            0.0012832534266635776,
            0.0002998435520567,
            0.001310234540142119,
            0.0002713208959903568,
            0.0008360965875908732
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Count the number of countries in Europe.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), country.Name",
            "select count(*), country.Code",
            "select count(*), country.Capital"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9958211183547974,
            0.00036680593620985746,
            0.00023211092047858983,
            0.0076400768011808395,
            0.000268905539996922,
            0.008288673125207424,
            0.00016615029016975313,
            0.0002957539982162416
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Count the number of countries in Antarctica.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), country.Name",
            "select count(*), country.Code",
            "select count(*), country.Name, country.Continent"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "city country"
        ],
        "align_scores": [
            0.9957138299942017,
            0.000448821228928864,
            0.0002839832450263202,
            0.004393177106976509,
            0.00035620847484096885,
            0.001581768156029284,
            0.000118217445560731,
            9.957086149370298e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Count the number of countries in North America.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), country.Name",
            "select count(*), country.Code",
            "select count(*), country.Capital"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9953540563583374,
            0.00016988195420708507,
            0.00023376154422294348,
            0.0014005935518071055,
            0.0002665569190867245,
            0.001196939731016755,
            0.0001675747480476275,
            0.00026651573716662824
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the total number of countries where Nepali is spoken by the largest percentage of people?",
        "gold_select": "select count(*), max(countrylanguage.Percentage)",
        "select_candidates": [
            "select count(*)",
            "select count(*), countrylanguage.CountryCode",
            "select count(*), country.Name",
            "select count(*) dependant on countrylanguage.CountryCode, countrylanguage.Language"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence countrylanguage",
            "countrylanguage"
        ],
        "align_scores": [
            0.8894311189651489,
            0.009412189945578575,
            0.002156605012714863,
            0.00806466955691576,
            0.001244705286808312,
            0.003442827146500349,
            0.000293192220851779,
            0.00012907048221677542
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the total number of countries where Limba is spoken by the largest percentage of people?",
        "gold_select": "select count(*), max(countrylanguage.Percentage)",
        "select_candidates": [
            "select count(*)",
            "select count(*), countrylanguage.CountryCode",
            "select count(*), countrylanguage.CountryCode, countrylanguage.Language",
            "select count(*) dependant on countrylanguage.CountryCode, countrylanguage.Language"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "countrylanguage",
        "table_candidates": [
            "countrylanguage",
            "country countrylanguage",
            "sqlite_sequence countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.7395364046096802,
            0.023308364674448967,
            0.002140119904652238,
            0.0062975576147437096,
            0.00019120638899039477,
            0.0001710558426566422,
            0.00024367781588807702,
            0.0001174530407297425
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the total number of countries where Ndebele is spoken by the largest percentage of people?",
        "gold_select": "select count(*), max(countrylanguage.Percentage)",
        "select_candidates": [
            "select count(*)",
            "select count(*), countrylanguage.CountryCode",
            "select count(*), country.Name",
            "select count(*), countrylanguage.Language"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "countrylanguage",
        "table_candidates": [
            "countrylanguage",
            "country countrylanguage",
            "sqlite_sequence countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.890038251876831,
            0.0035656942054629326,
            0.0022618197835981846,
            0.004779990296810865,
            0.0010104058310389519,
            0.001976060913875699,
            0.00048105529276654124,
            0.0010675325756892562
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the total number of countries where Ainu is spoken by the largest percentage of people?",
        "gold_select": "select count(*), max(countrylanguage.Percentage)",
        "select_candidates": [
            "select count(*)",
            "select count(*), countrylanguage.CountryCode",
            "select count(*), countrylanguage.Language",
            "select count(*), country.Name"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "countrylanguage",
        "table_candidates": [
            "countrylanguage",
            "country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.839436411857605,
            0.009073697961866856,
            0.0023718485608696938,
            0.007533683907240629,
            0.0005003205733373761,
            0.0014310968108475208,
            0.0011761016212403774,
            0.0027903642039746046
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the total number of countries where Maranao is spoken by the largest percentage of people?",
        "gold_select": "select count(*), max(countrylanguage.Percentage)",
        "select_candidates": [
            "select count(*)",
            "select count(*), countrylanguage.CountryCode",
            "select count(*), countrylanguage.CountryCode, countrylanguage.Language",
            "select count(*) dependant on countrylanguage.CountryCode, countrylanguage.Language"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "countrylanguage",
        "table_candidates": [
            "countrylanguage",
            "country countrylanguage",
            "sqlite_sequence countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.898487389087677,
            0.007529549300670624,
            0.002153662033379078,
            0.006004275754094124,
            0.00021793969790451229,
            0.0001872490392997861,
            0.00028573357849381864,
            0.00011964602890657261
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Count the number of countries for which Nepali is the predominantly spoken language.",
        "gold_select": "select count(*), max(countrylanguage.Percentage)",
        "select_candidates": [
            "select count(*)",
            "select count(distinct countrylanguage.CountryCode)",
            "select count(*), countrylanguage.CountryCode",
            "select count(*), country.Name"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.9866162538528442,
            7.802453183103353e-05,
            0.89657062292099,
            6.47224296699278e-05,
            0.0008108654292300344,
            6.837785622337833e-05,
            0.00042697705794125795,
            6.508648948511109e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Count the number of countries for which Limba is the predominantly spoken language.",
        "gold_select": "select count(*), max(countrylanguage.Percentage)",
        "select_candidates": [
            "select count(*)",
            "select count(*), countrylanguage.CountryCode",
            "select count(distinct countrylanguage.CountryCode)",
            "select count(countrylanguage.CountryCode)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "countrylanguage",
        "table_candidates": [
            "countrylanguage",
            "country countrylanguage",
            "sqlite_sequence countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9503028392791748,
            0.008134802803397179,
            0.0011583472369238734,
            0.031878191977739334,
            0.8052597045898438,
            0.0005068476893939078,
            0.10914929956197739,
            0.0007785135530866683
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Count the number of countries for which Ndebele is the predominantly spoken language.",
        "gold_select": "select count(*), max(countrylanguage.Percentage)",
        "select_candidates": [
            "select count(*)",
            "select count(*), countrylanguage.CountryCode",
            "select count(distinct countrylanguage.CountryCode)",
            "select count(countrylanguage.CountryCode)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "countrylanguage",
        "table_candidates": [
            "countrylanguage",
            "country countrylanguage"
        ],
        "align_scores": [
            0.9480894207954407,
            7.372661639237776e-05,
            0.0006214396562427282,
            6.323504931060597e-05,
            0.6481853723526001,
            6.304267299128696e-05,
            0.0444059744477272,
            7.368030492216349e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Count the number of countries for which Ainu is the predominantly spoken language.",
        "gold_select": "select count(*), max(countrylanguage.Percentage)",
        "select_candidates": [
            "select count(*)",
            "select count(*), countrylanguage.CountryCode",
            "select count(distinct countrylanguage.CountryCode)",
            "select count(countrylanguage.CountryCode)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "countrylanguage",
        "table_candidates": [
            "countrylanguage",
            "country countrylanguage"
        ],
        "align_scores": [
            0.9694362878799438,
            8.047230949159712e-05,
            0.000748893478885293,
            7.038818148430437e-05,
            0.912369966506958,
            6.202742952154949e-05,
            0.18745802342891693,
            7.29842358850874e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Count the number of countries for which Maranao is the predominantly spoken language.",
        "gold_select": "select count(*), max(countrylanguage.Percentage)",
        "select_candidates": [
            "select count(*)",
            "select count(distinct countrylanguage.CountryCode)",
            "select count(*), countrylanguage.CountryCode",
            "select count(countrylanguage.CountryCode)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "countrylanguage",
        "table_candidates": [
            "countrylanguage",
            "country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.972915768623352,
            8.060010441113263e-05,
            0.9137238264083862,
            6.575801671715453e-05,
            0.0007473147707059979,
            7.192635530373082e-05,
            0.10419923812150955,
            7.478915358660743e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the codes of countries where Nepali is spoken by the largest percentage of people?",
        "gold_select": "select countrylanguage.CountryCode, max(countrylanguage.Percentage)",
        "select_candidates": [
            "select country.Code",
            "select country.Name, country.Code",
            "select country.Name, country.Code2",
            "select country.Name, countrylanguage.CountryCode"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.9839454293251038,
            0.9661946296691895,
            0.002669147215783596,
            0.0010778767755255103,
            0.0013144353870302439,
            0.0005746158421970904,
            0.002873671241104603,
            0.0012236777693033218
        ],
        "align_select": "select country.Code",
        "align_structure": "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What are the codes of countries where Limba is spoken by the largest percentage of people?",
        "gold_select": "select countrylanguage.CountryCode, max(countrylanguage.Percentage)",
        "select_candidates": [
            "select country.Code",
            "select country.Name, country.Code2",
            "select country.Name, country.Continent",
            "select country.Name"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9367044568061829,
            0.9323908686637878,
            0.0011492518242448568,
            0.0006363009451888502,
            0.0011113494401797652,
            0.000435695139458403,
            0.7427389025688171,
            0.7622027397155762
        ],
        "align_select": "select country.Code",
        "align_structure": "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What are the codes of countries where Ndebele is spoken by the largest percentage of people?",
        "gold_select": "select countrylanguage.CountryCode, max(countrylanguage.Percentage)",
        "select_candidates": [
            "select country.Code",
            "select country.Name, country.Code2",
            "select country.Name, country.Code",
            "select country.Name, country.Continent"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9826334118843079,
            0.9765816926956177,
            0.0012703975662589073,
            0.0006336279329843819,
            0.002632451243698597,
            0.001263330108486116,
            0.0006461798911914229,
            0.00038620809209533036
        ],
        "align_select": "select country.Code",
        "align_structure": "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What are the codes of countries where Ainu is spoken by the largest percentage of people?",
        "gold_select": "select countrylanguage.CountryCode, max(countrylanguage.Percentage)",
        "select_candidates": [
            "select countrylanguage.CountryCode",
            "select country.Code",
            "select country.Name, country.Code2",
            "select country.Name, country.Continent"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "countrylanguage",
        "table_candidates": [
            "countrylanguage",
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.978518009185791,
            0.9800890684127808,
            0.980280339717865,
            0.983970582485199,
            0.0012196445604786277,
            0.000581492786295712,
            0.0007265651365742087,
            0.0003472125390544534
        ],
        "align_select": "select countrylanguage.CountryCode",
        "align_structure": "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What are the codes of countries where Maranao is spoken by the largest percentage of people?",
        "gold_select": "select countrylanguage.CountryCode, max(countrylanguage.Percentage)",
        "select_candidates": [
            "select country.Code",
            "select country.Name, country.Code2",
            "select country.Name, country.Code",
            "select country.Name, country.Continent"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.9844129681587219,
            0.982045590877533,
            0.0011698835296556354,
            0.0006251074373722076,
            0.0018880644347518682,
            0.0009979592869058251,
            0.0006974486168473959,
            0.00035757792647928
        ],
        "align_select": "select country.Code",
        "align_structure": "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Return the codes of countries for which Nepali is the predominantly spoken language.",
        "gold_select": "select countrylanguage.CountryCode, max(countrylanguage.Percentage)",
        "select_candidates": [
            "select country.Code",
            "select countrylanguage.CountryCode",
            "select country.Name, countrylanguage.CountryCode",
            "select country.Name, country.Code"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence countrylanguage",
            "countrylanguage"
        ],
        "align_scores": [
            0.9582101702690125,
            9.753712947713211e-05,
            0.8961184024810791,
            0.00011910169996554032,
            0.00030431689810939133,
            6.645979010500014e-05,
            0.0002681295445654541,
            5.8893034292850643e-05
        ],
        "align_select": "select country.Code",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the codes of countries for which Limba is the predominantly spoken language.",
        "gold_select": "select countrylanguage.CountryCode, max(countrylanguage.Percentage)",
        "select_candidates": [
            "select countrylanguage.CountryCode",
            "select country.Name, countrylanguage.CountryCode",
            "select country.Name, country.Continent",
            "select country.Name, country.Code"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "countrylanguage",
        "table_candidates": [
            "countrylanguage",
            "country countrylanguage",
            "sqlite_sequence countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.9516423344612122,
            0.00025415903655812144,
            0.00033686673850752413,
            8.792321750661358e-05,
            0.00014979967090766877,
            7.512410229537636e-05,
            0.00025075775920413435,
            7.485465903300792e-05
        ],
        "align_select": "select countrylanguage.CountryCode",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the codes of countries for which Ndebele is the predominantly spoken language.",
        "gold_select": "select countrylanguage.CountryCode, max(countrylanguage.Percentage)",
        "select_candidates": [
            "select countrylanguage.CountryCode",
            "select country.Name, countrylanguage.CountryCode",
            "select country.Name, country.Continent",
            "select country.Name, country.Code2"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "countrylanguage",
        "table_candidates": [
            "countrylanguage",
            "country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.9326685070991516,
            0.00010418331658001989,
            0.0002486799203325063,
            6.153008143883198e-05,
            0.00015508393698837608,
            6.904179463163018e-05,
            0.00018701367662288249,
            6.779274553991854e-05
        ],
        "align_select": "select countrylanguage.CountryCode",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the codes of countries for which Ainu is the predominantly spoken language.",
        "gold_select": "select countrylanguage.CountryCode, max(countrylanguage.Percentage)",
        "select_candidates": [
            "select countrylanguage.CountryCode",
            "select country.Name, countrylanguage.CountryCode",
            "select countrylanguage.CountryCode, countrylanguage.Language",
            "select countrylanguage.Language, countrylanguage.CountryCode"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "countrylanguage",
        "table_candidates": [
            "countrylanguage",
            "country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.9641543030738831,
            0.0001114293045247905,
            0.00025480351177975535,
            6.209951243363321e-05,
            0.00021521332382690161,
            5.899009920540266e-05,
            0.00024567521177232265,
            6.360892439261079e-05
        ],
        "align_select": "select countrylanguage.CountryCode",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the codes of countries for which Maranao is the predominantly spoken language.",
        "gold_select": "select countrylanguage.CountryCode, max(countrylanguage.Percentage)",
        "select_candidates": [
            "select countrylanguage.CountryCode",
            "select country.Name, countrylanguage.CountryCode",
            "select country.Name, country.Continent",
            "select country.Name, country.Code2"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "countrylanguage",
        "table_candidates": [
            "countrylanguage",
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.9368729591369629,
            0.00011270480172242969,
            0.000280844047665596,
            6.344427674775943e-05,
            0.00015289118164218962,
            7.114114123396575e-05,
            0.0001989665615838021,
            6.5670843468979e-05
        ],
        "align_select": "select countrylanguage.CountryCode",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of conductors whose nationalities are not \"UK\"?",
        "gold_select": "select conductor.Name",
        "select_candidates": [
            "select conductor.Name",
            "select conductor.Name, conductor.Nationality",
            "select conductor.Conductor_ID, conductor.Name",
            "select conductor.Name, conductor.Age"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor",
        "table_candidates": [
            "conductor",
            "conductor orchestra",
            "conductor performance"
        ],
        "align_scores": [
            0.9953184723854065,
            0.00016633732593618333,
            0.0001869029802037403,
            6.137548916740343e-05,
            0.0001881108619272709,
            7.335180271184072e-05,
            0.00014097473467700183,
            6.890334043418989e-05
        ],
        "align_select": "select conductor.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of conductors whose nationalities are not \"France\"?",
        "gold_select": "select conductor.Name",
        "select_candidates": [
            "select conductor.Name",
            "select conductor.Name, conductor.Nationality",
            "select conductor.Conductor_ID, conductor.Name",
            "select conductor.Name, conductor.Age"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor",
        "table_candidates": [
            "conductor"
        ],
        "align_scores": [
            0.9950243830680847,
            0.00018077883578371257,
            0.00019294180674478412,
            5.983261144137941e-05,
            0.00018556159920990467,
            7.28623999748379e-05,
            0.0001390138058923185,
            6.546064832946286e-05
        ],
        "align_select": "select conductor.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the names of conductors that do not have the nationality \"UK\".",
        "gold_select": "select conductor.Name",
        "select_candidates": [
            "select conductor.Name",
            "select conductor.Name, conductor.Nationality",
            "select conductor.Conductor_ID, conductor.Name",
            "select conductor.Name, conductor.Age"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor",
        "table_candidates": [
            "conductor",
            "conductor orchestra",
            "conductor orchestra performance"
        ],
        "align_scores": [
            0.995105504989624,
            0.00010197202936979011,
            0.00013841713371220976,
            5.716926898458041e-05,
            0.00013870475231669843,
            6.420518911909312e-05,
            0.00014365589595399797,
            5.9918031183769926e-05
        ],
        "align_select": "select conductor.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the names of conductors that do not have the nationality \"France\".",
        "gold_select": "select conductor.Name",
        "select_candidates": [
            "select conductor.Name",
            "select conductor.Name, conductor.Nationality",
            "select conductor.Conductor_ID, conductor.Name",
            "select conductor.Name, conductor.Age"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor",
        "table_candidates": [
            "conductor",
            "conductor orchestra",
            "conductor orchestra performance"
        ],
        "align_scores": [
            0.9951474070549011,
            9.93281792034395e-05,
            0.00014401302905753255,
            5.5118864111136645e-05,
            0.00013957910414319485,
            6.162356294225901e-05,
            0.00013805885100737214,
            5.737424726248719e-05
        ],
        "align_select": "select conductor.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the maximum and minimum share of performances whose type is not \"Auditions 1\".",
        "gold_select": "select max(performance.Share), min(performance.Share)",
        "select_candidates": [
            "select max(performance.Share), min(performance.Share)",
            "select max(t2.c8), min(performance.Share)",
            "select max(t2.c7), min(performance.Share)",
            "select maximum(performance.Share), min(performance.Share)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "performance",
        "table_candidates": [
            "performance"
        ],
        "align_scores": [
            0.9954730868339539,
            0.00011883056868100539,
            0.00032983749406412244,
            8.600090222898871e-05,
            0.000336023629643023,
            8.558374247513711e-05,
            0.0006376638193614781,
            7.664528675377369e-05
        ],
        "align_select": "select max(performance.Share), min(performance.Share)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the maximum and minimum share of performances whose type is not \"Live final results\".",
        "gold_select": "select max(performance.Share), min(performance.Share)",
        "select_candidates": [
            "select max(performance.Share), min(performance.Share)",
            "select max(t2.c8), min(performance.Share)",
            "select max(t2.c7), min(performance.Share)",
            "select max(performance.Share ), min(performance.Share)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "performance",
        "table_candidates": [
            "performance"
        ],
        "align_scores": [
            0.9962397813796997,
            0.00010618344822432846,
            0.0003276923671364784,
            8.054040517890826e-05,
            0.00033581946627236903,
            8.110496128210798e-05,
            0.004353433847427368,
            0.00010329814540455118
        ],
        "align_select": "select max(performance.Share), min(performance.Share)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the maximum and minimum shares for performances that do not have the type \"Auditions 1\".",
        "gold_select": "select max(performance.Share), min(performance.Share)",
        "select_candidates": [
            "select max(performance.Share), min(performance.Share)",
            "select max(t2.c8), min(performance.Share)",
            "select max(t2.c7), min(performance.Share)",
            "select max(performance.Share ), min(performance.Share)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "performance",
        "table_candidates": [
            "performance"
        ],
        "align_scores": [
            0.99513840675354,
            0.00010913423466263339,
            0.00033956713741645217,
            9.162592323264107e-05,
            0.00034620476071722806,
            9.158504690276459e-05,
            0.002836325205862522,
            0.00010729613859439269
        ],
        "align_select": "select max(performance.Share), min(performance.Share)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the maximum and minimum shares for performances that do not have the type \"Live final results\".",
        "gold_select": "select max(performance.Share), min(performance.Share)",
        "select_candidates": [
            "select max(performance.Share), min(performance.Share)",
            "select max(t2.c8), min(performance.Share)",
            "select max(t2.c7), min(performance.Share)",
            "select max(performance.Share ), min(performance.Share)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "performance",
        "table_candidates": [
            "performance"
        ],
        "align_scores": [
            0.9959489107131958,
            0.00011331625137245283,
            0.00036727500264532864,
            8.858909859554842e-05,
            0.0003770803159568459,
            8.939169492805377e-05,
            0.003658351255580783,
            0.00011342056677676737
        ],
        "align_select": "select max(performance.Share), min(performance.Share)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the number of orchestras whose record format is \"DVD\" or \"DVD\".",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), orchestra.Orchestra_ID",
            "select count(*), orchestra.Orchestra",
            "select count(*),"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "orchestra",
        "table_candidates": [
            "orchestra"
        ],
        "align_scores": [
            0.22594383358955383,
            0.00018875263049267232,
            0.00017757438763510436,
            0.00010411618859507143,
            0.0002581464359536767,
            0.0001557886862428859,
            0.0005239067832008004,
            0.00017182955343741924
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the number of orchestras whose record format is \"CD / LP\" or \"DVD\".",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), orchestra.Major_Record_Format",
            "select count(*), orchestra.Orchestra_ID",
            "select count(*), orchestra.Orchestra"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "orchestra",
        "table_candidates": [
            "orchestra"
        ],
        "align_scores": [
            0.9876553416252136,
            6.833946099504828e-05,
            0.0002803720999509096,
            6.274956103879958e-05,
            0.0001828197855502367,
            6.117051816545427e-05,
            0.00029922209796495736,
            6.469243817264214e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the number of orchestras whose record format is \"CD\" or \"CD\".",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), orchestra.Major_Record_Format",
            "select count(*), orchestra.Orchestra_ID",
            "select count(*), orchestra.Orchestra"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "orchestra",
        "table_candidates": [
            "orchestra"
        ],
        "align_scores": [
            0.0846203863620758,
            6.152691639726982e-05,
            0.0002262347552459687,
            6.174102600198239e-05,
            0.00017257221043109894,
            6.338550156215206e-05,
            0.00023569156473968178,
            6.066326022846624e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Count the number of orchestras that have DVD or DVD as their record format.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), orchestra.Orchestra_ID",
            "select count(*), orchestra.Orchestra",
            "select count(*),"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "orchestra",
        "table_candidates": [
            "orchestra"
        ],
        "align_scores": [
            0.6262096762657166,
            6.971776019781828e-05,
            0.00019637690274976194,
            6.253569881664589e-05,
            0.00024575580027885735,
            5.813632742501795e-05,
            0.0006251258892007172,
            6.87669453327544e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Count the number of orchestras that have CD / LP or DVD as their record format.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), orchestra.Major_Record_Format",
            "select count(*), orchestra.Orchestra_ID",
            "select count(*), orchestra.Orchestra"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "orchestra",
        "table_candidates": [
            "orchestra"
        ],
        "align_scores": [
            0.8948687314987183,
            9.476071136305109e-05,
            0.00024310163280460984,
            5.79495208512526e-05,
            0.0001975081249838695,
            6.434359238483012e-05,
            0.0002582668385002762,
            6.121661135694012e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Count the number of orchestras that have CD or CD as their record format.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), orchestra.Orchestra_ID",
            "select count(*), orchestra.Major_Record_Format",
            "select count(*), orchestra.Orchestra"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "orchestra",
        "table_candidates": [
            "orchestra"
        ],
        "align_scores": [
            0.4293178617954254,
            0.0008196781855076551,
            0.0001829097600420937,
            0.0018055178225040436,
            0.00023778056493028998,
            0.000709882820956409,
            0.0002328528353245929,
            0.0065572503954172134
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What grade is Tiffany in?",
        "gold_select": "select Highschooler.grade",
        "select_candidates": [
            "select Highschooler.grade",
            "select distinct Highschooler.grade",
            "select Highschooler.name, Highschooler.grade",
            "select Highschooler.grade, Highschooler.name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler",
        "table_candidates": [
            "Highschooler"
        ],
        "align_scores": [
            0.9938262104988098,
            9.143651550402865e-05,
            0.06161537766456604,
            0.00019694434013217688,
            0.0002094484807457775,
            5.634335320792161e-05,
            0.00014944943541195244,
            5.5811964557506144e-05
        ],
        "align_select": "select Highschooler.grade",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What grade is Kris in?",
        "gold_select": "select Highschooler.grade",
        "select_candidates": [
            "select Highschooler.grade",
            "select distinct Highschooler.grade",
            "select Highschooler.name, Highschooler.grade",
            "select Highschooler.grade, Highschooler.name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler",
        "table_candidates": [
            "Highschooler"
        ],
        "align_scores": [
            0.9918925762176514,
            9.717562352307141e-05,
            0.07359559088945389,
            0.0002382841776125133,
            0.00019102559599559754,
            5.7054621720453724e-05,
            0.00013850544928573072,
            5.664196942234412e-05
        ],
        "align_select": "select Highschooler.grade",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What grade is Gabriel in?",
        "gold_select": "select Highschooler.grade",
        "select_candidates": [
            "select Highschooler.grade",
            "select distinct Highschooler.grade",
            "select Highschooler.name, Highschooler.grade",
            "select Highschooler.grade, Highschooler.name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler",
        "table_candidates": [
            "Highschooler"
        ],
        "align_scores": [
            0.992061972618103,
            0.00010310880315955728,
            0.06789059937000275,
            0.00019415834685787559,
            0.00019678272656165063,
            5.750187483499758e-05,
            0.00014816290058661252,
            5.77685386815574e-05
        ],
        "align_select": "select Highschooler.grade",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What grade is Alexis in?",
        "gold_select": "select Highschooler.grade",
        "select_candidates": [
            "select Highschooler.grade",
            "select distinct Highschooler.grade",
            "select Highschooler.name, Highschooler.grade",
            "select Highschooler.grade, Highschooler.name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler",
        "table_candidates": [
            "Highschooler"
        ],
        "align_scores": [
            0.9929636120796204,
            9.68390959315002e-05,
            0.06495630741119385,
            0.0002069968031719327,
            0.00019727095786947757,
            5.5593642173334956e-05,
            0.00014096451923251152,
            5.547956607188098e-05
        ],
        "align_select": "select Highschooler.grade",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What grade is Jessica in?",
        "gold_select": "select Highschooler.grade",
        "select_candidates": [
            "select Highschooler.grade",
            "select distinct Highschooler.grade",
            "select Highschooler.name, Highschooler.grade",
            "select Highschooler.grade, Highschooler.name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler",
        "table_candidates": [
            "Highschooler"
        ],
        "align_scores": [
            0.9935845732688904,
            9.212503937305883e-05,
            0.06814531981945038,
            0.00019694339425768703,
            0.00019890507974196225,
            5.694971332559362e-05,
            0.00015124543278943747,
            5.676601722370833e-05
        ],
        "align_select": "select Highschooler.grade",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the grade for the high schooler named Tiffany.",
        "gold_select": "select Highschooler.grade",
        "select_candidates": [
            "select Highschooler.grade",
            "select Highschooler.ID, Highschooler.name, Highschooler.grade",
            "select Highschooler.ID, Highschooler.grade",
            "select Highschooler.name, Highschooler.grade"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler",
        "table_candidates": [
            "Highschooler"
        ],
        "align_scores": [
            0.9655197858810425,
            8.299727778648958e-05,
            0.00015758270455989987,
            6.973052222747356e-05,
            0.00026085207355208695,
            6.998926983214915e-05,
            0.00019798948778770864,
            6.402873259503394e-05
        ],
        "align_select": "select Highschooler.grade",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the grade for the high schooler named Kris.",
        "gold_select": "select Highschooler.grade",
        "select_candidates": [
            "select Highschooler.grade",
            "select Highschooler.ID, Highschooler.name, Highschooler.grade",
            "select Highschooler.ID, Highschooler.grade",
            "select Highschooler.name, Highschooler.grade"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler",
        "table_candidates": [
            "Highschooler"
        ],
        "align_scores": [
            0.983722984790802,
            7.835625729057938e-05,
            0.00015955902927089483,
            7.045923848636448e-05,
            0.00026092995540238917,
            7.022634235909209e-05,
            0.000198404275579378,
            6.600378401344642e-05
        ],
        "align_select": "select Highschooler.grade",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the grade for the high schooler named Gabriel.",
        "gold_select": "select Highschooler.grade",
        "select_candidates": [
            "select Highschooler.grade",
            "select Highschooler.ID, Highschooler.name, Highschooler.grade",
            "select Highschooler.ID, Highschooler.grade",
            "select Highschooler.name, Highschooler.grade"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler",
        "table_candidates": [
            "Highschooler"
        ],
        "align_scores": [
            0.975340723991394,
            8.708745008334517e-05,
            0.00016160342784132808,
            6.892607780173421e-05,
            0.00024410687910858542,
            6.813903019065037e-05,
            0.00020477599173318595,
            6.424684397643432e-05
        ],
        "align_select": "select Highschooler.grade",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the grade for the high schooler named Alexis.",
        "gold_select": "select Highschooler.grade",
        "select_candidates": [
            "select Highschooler.grade",
            "select Highschooler.ID, Highschooler.name, Highschooler.grade",
            "select Highschooler.ID, Highschooler.grade",
            "select Highschooler.name, Highschooler.grade"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler",
        "table_candidates": [
            "Highschooler"
        ],
        "align_scores": [
            0.9765966534614563,
            7.925411773612723e-05,
            0.00015231699217110872,
            6.68268694425933e-05,
            0.00025400088634341955,
            6.694857438560575e-05,
            0.00020841415971517563,
            6.32536830380559e-05
        ],
        "align_select": "select Highschooler.grade",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the grade for the high schooler named Jessica.",
        "gold_select": "select Highschooler.grade",
        "select_candidates": [
            "select Highschooler.grade",
            "select Highschooler.ID, Highschooler.name, Highschooler.grade",
            "select Highschooler.ID, Highschooler.grade",
            "select Highschooler.name, Highschooler.grade"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler",
        "table_candidates": [
            "Highschooler"
        ],
        "align_scores": [
            0.8975384831428528,
            7.489449490094557e-05,
            0.00015227618860080838,
            6.861882138764486e-05,
            0.00024930620566010475,
            6.763087003491819e-05,
            0.0002105637831846252,
            6.298541120486334e-05
        ],
        "align_select": "select Highschooler.grade",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show the ID of the high schooler named Tiffany.",
        "gold_select": "select Highschooler.ID",
        "select_candidates": [
            "select Highschooler.ID",
            "select Highschooler.name, Highschooler.ID",
            "select Highschooler.ID, Highschooler.name",
            "select t0.c, Highschooler.name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler",
        "table_candidates": [
            "Highschooler"
        ],
        "align_scores": [
            0.3731946647167206,
            7.94692023191601e-05,
            0.00021321725216694176,
            6.330756878014654e-05,
            0.00021701116929762065,
            5.966600656392984e-05,
            0.00021086193737573922,
            6.401981954695657e-05
        ],
        "align_select": "select Highschooler.ID",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show the ID of the high schooler named Logan.",
        "gold_select": "select Highschooler.ID",
        "select_candidates": [
            "select Highschooler.ID",
            "select Highschooler.name, Highschooler.ID",
            "select Highschooler.ID, Highschooler.name",
            "select Highschooler.ID, Highschooler.name, Highschooler.grade"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler",
        "table_candidates": [
            "Highschooler"
        ],
        "align_scores": [
            0.450460284948349,
            8.419917867286131e-05,
            0.00022093702864367515,
            6.622407090617344e-05,
            0.0002444331767037511,
            6.288397707976401e-05,
            0.00013413243868853897,
            5.716932355426252e-05
        ],
        "align_select": "select Highschooler.ID",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show the ID of the high schooler named Kris.",
        "gold_select": "select Highschooler.ID",
        "select_candidates": [
            "select Highschooler.ID",
            "select Highschooler.name, Highschooler.ID",
            "select Highschooler.ID, Highschooler.name",
            "select t0.c, Highschooler.name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler",
        "table_candidates": [
            "Highschooler"
        ],
        "align_scores": [
            0.33764901757240295,
            7.763436587993056e-05,
            0.00019342993618920445,
            6.374385702656582e-05,
            0.00022127939155325294,
            6.12402000115253e-05,
            0.000318027421599254,
            6.52689632261172e-05
        ],
        "align_select": "select Highschooler.ID",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show the ID of the high schooler named Gabriel.",
        "gold_select": "select Highschooler.ID",
        "select_candidates": [
            "select Highschooler.ID",
            "select Highschooler.name, Highschooler.ID",
            "select Highschooler.ID, Highschooler.name",
            "select t0.c, Highschooler.name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler",
        "table_candidates": [
            "Highschooler"
        ],
        "align_scores": [
            0.27608224749565125,
            8.568786142859608e-05,
            0.00020596811373252422,
            6.472773384302855e-05,
            0.00022640523093286902,
            6.208653940120712e-05,
            0.0003153653524350375,
            6.341693369904533e-05
        ],
        "align_select": "select Highschooler.ID",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show the ID of the high schooler named Alexis.",
        "gold_select": "select Highschooler.ID",
        "select_candidates": [
            "select Highschooler.ID",
            "select Highschooler.name, Highschooler.ID",
            "select Highschooler.ID, Highschooler.name",
            "select Highschooler.ID, Highschooler.name, Highschooler.grade"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler",
        "table_candidates": [
            "Highschooler"
        ],
        "align_scores": [
            0.38492658734321594,
            8.104325388558209e-05,
            0.0002193721738876775,
            6.419037526939064e-05,
            0.00022074375010561198,
            6.127969390945509e-05,
            0.0001327228674199432,
            5.650305320159532e-05
        ],
        "align_select": "select Highschooler.ID",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the names of friends of the high school student Tiffany.",
        "gold_select": "select Highschooler.name",
        "select_candidates": [
            "select Friend.friend_id",
            "select Friend.friend_id, Highschooler.name",
            "select Friend.friend_id, t1.c2",
            "select distinct Friend.friend_id"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Friend",
        "table_candidates": [
            "Highschooler Friend",
            "Highschooler Friend Likes"
        ],
        "align_scores": [
            0.005482175387442112,
            0.0006566406227648258,
            0.0002634768607094884,
            9.085662168217823e-05,
            0.00034585705725476146,
            8.760068158153445e-05,
            0.006778294686228037,
            0.0001365957868983969
        ],
        "align_select": "select Friend.friend_id",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the names of friends of the high school student Logan.",
        "gold_select": "select Highschooler.name",
        "select_candidates": [
            "select Friend.friend_id",
            "select Friend.friend_id, t1.c2",
            "select Friend.friend_id, Highschooler.name",
            "select Friend.student_id, Highschooler.name"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Friend",
        "table_candidates": [
            "Highschooler Friend",
            "Highschooler Friend Likes"
        ],
        "align_scores": [
            0.006171403918415308,
            0.0005631236708723009,
            0.0002933700452558696,
            8.692300616530702e-05,
            0.0002663795603439212,
            9.055646660272032e-05,
            0.00028614880284294486,
            9.440534631721675e-05
        ],
        "align_select": "select Friend.friend_id",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the names of friends of the high school student Kris.",
        "gold_select": "select Highschooler.name",
        "select_candidates": [
            "select Friend.friend_id",
            "select Friend.friend_id, Highschooler.name",
            "select Friend.friend_id, t1.c2",
            "select Friend.student_id, Highschooler.name"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Friend",
        "table_candidates": [
            "Highschooler Friend",
            "Highschooler Friend Likes"
        ],
        "align_scores": [
            0.006018097512423992,
            0.0006177061586640775,
            0.00024861120618879795,
            8.737559255678207e-05,
            0.0002832863829098642,
            8.797387272352353e-05,
            0.0002617522550281137,
            8.999330748338252e-05
        ],
        "align_select": "select Friend.friend_id",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the names of friends of the high school student Gabriel.",
        "gold_select": "select Highschooler.name",
        "select_candidates": [
            "select Friend.friend_id",
            "select Friend.friend_id, t1.c2",
            "select Friend.friend_id, Highschooler.name",
            "select Friend.friend_id, Friend.student_id"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Friend",
        "table_candidates": [
            "Highschooler Friend",
            "Highschooler Friend Likes"
        ],
        "align_scores": [
            0.004482618998736143,
            0.0006127464585006237,
            0.00028490391559898853,
            8.93119431566447e-05,
            0.00024190508702304214,
            9.245550609193742e-05,
            0.00011434372572693974,
            7.811938849044964e-05
        ],
        "align_select": "select Friend.friend_id",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the names of friends of the high school student Alexis.",
        "gold_select": "select Highschooler.name",
        "select_candidates": [
            "select Friend.friend_id",
            "select Friend.friend_id, Highschooler.name",
            "select Friend.friend_id, t1.c2",
            "select distinct Friend.friend_id"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Friend",
        "table_candidates": [
            "Highschooler Friend",
            "Highschooler Friend Likes"
        ],
        "align_scores": [
            0.0052876598201692104,
            0.0005579310818575323,
            0.0002528117038309574,
            8.578081906307489e-05,
            0.00028037934680469334,
            8.783087105257437e-05,
            0.005954263266175985,
            0.00011976451060036197
        ],
        "align_select": "select Friend.friend_id",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many friends does the high school student Kris have?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(Friend.friend_id)",
            "select count(t1.c2)",
            "select count(*)",
            "select count(Friend.student_id)"
        ],
        "select_labels": [
            0.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Friend",
        "table_candidates": [
            "Highschooler Friend"
        ],
        "align_scores": [
            0.041657187044620514,
            9.733586921356618e-05,
            0.0007914293673820794,
            8.10191486380063e-05,
            0.994421660900116,
            8.94494223757647e-05,
            0.001580235781148076,
            0.00010878201283048838
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many friends does the high school student Gabriel have?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(Friend.friend_id)",
            "select count(t1.c2)",
            "select count(*)",
            "select count(Friend.student_id)"
        ],
        "select_labels": [
            0.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Friend",
        "table_candidates": [
            "Highschooler Friend"
        ],
        "align_scores": [
            0.03203657269477844,
            9.799170220503584e-05,
            0.0008168012136593461,
            8.217791037168354e-05,
            0.994042694568634,
            9.428856719750911e-05,
            0.0012154335854575038,
            0.00011852604075102136
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many friends does the high school student Alexis have?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(Friend.friend_id)",
            "select count(t1.c2)",
            "select count(*)",
            "select count(Friend.student_id)"
        ],
        "select_labels": [
            0.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Friend",
        "table_candidates": [
            "Highschooler Friend"
        ],
        "align_scores": [
            0.05542120710015297,
            9.612570283934474e-05,
            0.0007614701753482223,
            7.568598084617406e-05,
            0.9942435622215271,
            8.522052667103708e-05,
            0.0018066507764160633,
            0.00011050364264519885
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many friends does the high school student Jordan have?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(Friend.friend_id)",
            "select count(t1.c2)",
            "select count(*)",
            "select count(Friend.student_id)"
        ],
        "select_labels": [
            0.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Friend",
        "table_candidates": [
            "Highschooler Friend",
            "Highschooler Friend Likes"
        ],
        "align_scores": [
            0.04052853584289551,
            8.93581091077067e-05,
            0.0007857360178604722,
            8.288337994599715e-05,
            0.9944208264350891,
            8.973588410299271e-05,
            0.001367139513604343,
            0.00010358459985582158
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many friends does the high school student Andrew have?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(Friend.friend_id)",
            "select count(t1.c2)",
            "select count(Friend.student_id)",
            "select count(*)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Friend",
        "table_candidates": [
            "Highschooler Friend",
            "Highschooler Friend Likes"
        ],
        "align_scores": [
            0.035733986645936966,
            9.564411448081955e-05,
            0.0007680957205593586,
            8.322029316332191e-05,
            0.001694012782536447,
            0.00010950627620331943,
            0.9944062232971191,
            9.063024481292814e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Count the number of friends Kris has.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(Friend.friend_id)",
            "select count(*)",
            "select count(distinct Friend.friend_id)",
            "select count(t1.c2)"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Friend",
        "table_candidates": [
            "Highschooler Friend"
        ],
        "align_scores": [
            0.010139907710254192,
            7.277628174051642e-05,
            0.9955658316612244,
            7.71156555856578e-05,
            0.00365960830822587,
            6.406843749573454e-05,
            0.000367145286872983,
            8.841447561280802e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Count the number of friends Gabriel has.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(Friend.friend_id)",
            "select count(*)",
            "select count(t1.c2)",
            "select count(Friend.student_id)"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Friend",
        "table_candidates": [
            "Highschooler Friend",
            "Highschooler Friend Likes"
        ],
        "align_scores": [
            0.014049869030714035,
            0.00017531978664919734,
            0.9948770403862,
            0.001590255182236433,
            0.0003723186382558197,
            0.00014524759899359196,
            0.0018093393882736564,
            0.00017655818373896182
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Count the number of friends Alexis has.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(Friend.friend_id)",
            "select count(distinct Friend.friend_id)",
            "select count(t1.c2)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Friend",
        "table_candidates": [
            "Highschooler Friend",
            "Highschooler Friend Likes"
        ],
        "align_scores": [
            0.99513840675354,
            7.442020432790741e-05,
            0.01695038564503193,
            7.093392196111381e-05,
            0.004852302838116884,
            6.276607746258378e-05,
            0.000372565962607041,
            5.7698071032064036e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Count the number of friends Jordan has.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(Friend.friend_id)",
            "select count(*)",
            "select count(distinct Friend.friend_id)",
            "select count(t1.c2)"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Friend",
        "table_candidates": [
            "Highschooler Friend",
            "Highschooler Friend Likes"
        ],
        "align_scores": [
            0.025662727653980255,
            8.214078115997836e-05,
            0.9953665733337402,
            7.368396472884342e-05,
            0.006362370681017637,
            6.686670531053096e-05,
            0.0003385287709534168,
            8.337693725479767e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Count the number of friends Andrew has.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(Friend.friend_id)",
            "select count(*)",
            "select count(distinct Friend.friend_id)",
            "select count(t1.c2)"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Friend",
        "table_candidates": [
            "Highschooler Friend"
        ],
        "align_scores": [
            0.028137924149632454,
            0.00020135214435867965,
            0.9954383969306946,
            0.0025589787401258945,
            0.0061417026445269585,
            9.012401278596371e-05,
            0.00034919666359201074,
            0.0001600061950739473
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many likes does Gabriel have?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Highschooler.name",
            "select count(*), Highschooler.name",
            "select count(*), Highschooler.ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Likes",
        "table_candidates": [
            "Highschooler Likes"
        ],
        "align_scores": [
            0.9957335591316223,
            0.00021809476311318576,
            0.0002651273971423507,
            0.0010054977610707283,
            0.0002651273971423507,
            0.0010054977610707283,
            0.0002697691088542342,
            0.00032353823189623654
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the number of likes that the high schooler named Gabriel has.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Highschooler.name",
            "select count(*), Highschooler.ID",
            "select count(*), Highschooler.name, Likes.student_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Likes",
        "table_candidates": [
            "Highschooler Likes",
            "Highschooler Friend Likes"
        ],
        "align_scores": [
            0.9907107949256897,
            6.624927482334897e-05,
            0.00023060872626956552,
            5.629388761008158e-05,
            0.0002255343715660274,
            5.642901305691339e-05,
            0.0001339421287411824,
            5.7705339713720605e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which professionals live in the state of Montana or have done treatment on more than 2 treatments? List his or her id, last name and cell phone.",
        "gold_select": "select Professionals.professional_id, Professionals.last_name, Professionals.cell_number",
        "select_candidates": [
            "select Professionals.professional_id, Professionals.last_name, Professionals.cell_number",
            "select Professionals.first_name, Professionals.last_name, Professionals.cell_number",
            "select Treatments.professional_id, Professionals.last_name, Professionals.cell_number",
            "select Professionals.role_code, Professionals.last_name, Professionals.cell_number"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-UNION-SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-WHERE-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals Treatments",
        "table_candidates": [
            "Professionals Treatments",
            "Dogs Professionals Treatments",
            "Breeds Professionals Treatments",
            "Owners Professionals Treatments",
            "Charges Professionals Treatments",
            "Sizes Professionals Treatments",
            "Treatment_Types Professionals Treatments"
        ],
        "align_scores": [
            0.2155427485704422,
            0.004078760277479887,
            0.00022545868705492467,
            0.00015664265083614737,
            0.13195496797561646,
            0.00454039266332984,
            0.004624930210411549,
            0.0006498827715404332
        ],
        "align_select": "select Professionals.professional_id, Professionals.last_name, Professionals.cell_number",
        "align_structure": "SELECT-FROM-WHERE-UNION-SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Which professionals live in the state of SouthCarolina or have done treatment on more than 2 treatments? List his or her id, last name and cell phone.",
        "gold_select": "select Professionals.professional_id, Professionals.last_name, Professionals.cell_number",
        "select_candidates": [
            "select Professionals.professional_id, Professionals.last_name, Professionals.cell_number",
            "select Professionals.first_name, Professionals.last_name, Professionals.cell_number",
            "select Treatments.professional_id, Professionals.last_name, Professionals.cell_number",
            "select Professionals.role_code, Professionals.last_name, Professionals.cell_number"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-UNION-SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-WHERE-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals Treatments",
        "table_candidates": [
            "Professionals Treatments",
            "Dogs Professionals Treatments",
            "Breeds Professionals Treatments",
            "Charges Professionals Treatments",
            "Owners Professionals Treatments",
            "Treatment_Types Professionals Treatments",
            "Sizes Professionals Treatments"
        ],
        "align_scores": [
            0.24319978058338165,
            0.004995108116418123,
            0.0002279465552419424,
            0.00015121573233045638,
            0.09818773716688156,
            0.004723946563899517,
            0.0046053603291511536,
            0.0006372914649546146
        ],
        "align_select": "select Professionals.professional_id, Professionals.last_name, Professionals.cell_number",
        "align_structure": "SELECT-FROM-WHERE-UNION-SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Which professionals live in the state of Alabama or have done treatment on more than 2 treatments? List his or her id, last name and cell phone.",
        "gold_select": "select Professionals.professional_id, Professionals.last_name, Professionals.cell_number",
        "select_candidates": [
            "select Professionals.professional_id, Professionals.last_name, Professionals.cell_number",
            "select Professionals.first_name, Professionals.last_name, Professionals.cell_number",
            "select Treatments.professional_id, Professionals.last_name, Professionals.cell_number",
            "select Professionals.role_code, Professionals.last_name, Professionals.cell_number"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-UNION-SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-WHERE-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals Treatments",
        "table_candidates": [
            "Professionals Treatments",
            "Dogs Professionals Treatments",
            "Owners Professionals Treatments",
            "Breeds Professionals Treatments",
            "Charges Professionals Treatments",
            "Sizes Professionals Treatments",
            "Treatment_Types Professionals Treatments"
        ],
        "align_scores": [
            0.24320746958255768,
            0.0039051182102411985,
            0.00022337546397466213,
            0.00015215192979667336,
            0.15175741910934448,
            0.004596956539899111,
            0.004978198558092117,
            0.0006354764336720109
        ],
        "align_select": "select Professionals.professional_id, Professionals.last_name, Professionals.cell_number",
        "align_structure": "SELECT-FROM-WHERE-UNION-SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Which professionals live in the state of Hawaii or have done treatment on more than 2 treatments? List his or her id, last name and cell phone.",
        "gold_select": "select Professionals.professional_id, Professionals.last_name, Professionals.cell_number",
        "select_candidates": [
            "select Professionals.professional_id, Professionals.last_name, Professionals.cell_number",
            "select Professionals.first_name, Professionals.last_name, Professionals.cell_number",
            "select Treatments.professional_id, Professionals.last_name, Professionals.cell_number",
            "select Professionals.role_code, Professionals.last_name, Professionals.cell_number"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-UNION-SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-WHERE-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals Treatments",
        "table_candidates": [
            "Professionals Treatments",
            "Dogs Professionals Treatments",
            "Owners Professionals Treatments",
            "Breeds Professionals Treatments",
            "Charges Professionals Treatments",
            "Sizes Professionals Treatments",
            "Treatment_Types Professionals Treatments"
        ],
        "align_scores": [
            0.17857907712459564,
            0.003285445971414447,
            0.0002327183319721371,
            0.00015641086793038994,
            0.07725092768669128,
            0.0033502671867609024,
            0.0034247911535203457,
            0.0005833679460920393
        ],
        "align_select": "select Professionals.professional_id, Professionals.last_name, Professionals.cell_number",
        "align_structure": "SELECT-FROM-WHERE-UNION-SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Which professionals live in the state of Mississippi or have done treatment on more than 2 treatments? List his or her id, last name and cell phone.",
        "gold_select": "select Professionals.professional_id, Professionals.last_name, Professionals.cell_number",
        "select_candidates": [
            "select Professionals.professional_id, Professionals.last_name, Professionals.cell_number",
            "select Professionals.first_name, Professionals.last_name, Professionals.cell_number",
            "select Treatments.professional_id, Professionals.last_name, Professionals.cell_number",
            "select Professionals.role_code, Professionals.last_name, Professionals.cell_number"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-UNION-SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-WHERE-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals Treatments",
        "table_candidates": [
            "Professionals Treatments",
            "Dogs Professionals Treatments",
            "Owners Professionals Treatments",
            "Breeds Professionals Treatments",
            "Sizes Professionals Treatments",
            "Treatment_Types Professionals Treatments",
            "Charges Professionals Treatments"
        ],
        "align_scores": [
            0.221100851893425,
            0.0036903205327689648,
            0.00023143913131207228,
            0.0001564113044878468,
            0.1553894430398941,
            0.004509360063821077,
            0.006472182925790548,
            0.0007045342354103923
        ],
        "align_select": "select Professionals.professional_id, Professionals.last_name, Professionals.cell_number",
        "align_structure": "SELECT-FROM-WHERE-UNION-SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Find the id, last name and cell phone of the professionals who live in the state of Montana or have performed more than two treatments.",
        "gold_select": "select Professionals.professional_id, Professionals.last_name, Professionals.cell_number",
        "select_candidates": [
            "select Professionals.professional_id, Professionals.last_name, Professionals.cell_number",
            "select Professionals.first_name, Professionals.last_name, Professionals.cell_number",
            "select Treatments.professional_id, Professionals.last_name, Professionals.cell_number",
            "select Professionals.role_code, Professionals.last_name, Professionals.cell_number"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-UNION-SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-WHERE-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals Treatments",
        "table_candidates": [
            "Professionals Treatments",
            "Dogs Professionals Treatments",
            "Owners Professionals Treatments",
            "Breeds Professionals Treatments",
            "Treatment_Types Professionals Treatments",
            "Sizes Professionals Treatments",
            "Charges Professionals Treatments"
        ],
        "align_scores": [
            0.7715860605239868,
            0.038352303206920624,
            0.0004748773935716599,
            0.0002509373298380524,
            0.5894332528114319,
            0.027180364355444908,
            0.03452921286225319,
            0.002118909265846014
        ],
        "align_select": "select Professionals.professional_id, Professionals.last_name, Professionals.cell_number",
        "align_structure": "SELECT-FROM-WHERE-UNION-SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Find the id, last name and cell phone of the professionals who live in the state of SouthCarolina or have performed more than two treatments.",
        "gold_select": "select Professionals.professional_id, Professionals.last_name, Professionals.cell_number",
        "select_candidates": [
            "select Professionals.professional_id, Professionals.last_name, Professionals.cell_number",
            "select Professionals.first_name, Professionals.last_name, Professionals.cell_number",
            "select Treatments.professional_id, Professionals.last_name, Professionals.cell_number",
            "select Professionals.role_code, Professionals.last_name, Professionals.cell_number"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-UNION-SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-WHERE-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals Treatments",
        "table_candidates": [
            "Professionals Treatments",
            "Dogs Professionals Treatments",
            "Owners Professionals Treatments",
            "Breeds Professionals Treatments",
            "Treatment_Types Professionals Treatments",
            "Sizes Professionals Treatments",
            "Charges Professionals Treatments"
        ],
        "align_scores": [
            0.787550151348114,
            0.06495510041713715,
            0.0005012810579501092,
            0.0002663186169229448,
            0.4608868956565857,
            0.0306144617497921,
            0.02639024145901203,
            0.002193993655964732
        ],
        "align_select": "select Professionals.professional_id, Professionals.last_name, Professionals.cell_number",
        "align_structure": "SELECT-FROM-WHERE-UNION-SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Find the id, last name and cell phone of the professionals who live in the state of Alabama or have performed more than two treatments.",
        "gold_select": "select Professionals.professional_id, Professionals.last_name, Professionals.cell_number",
        "select_candidates": [
            "select Professionals.professional_id, Professionals.last_name, Professionals.cell_number",
            "select Professionals.first_name, Professionals.last_name, Professionals.cell_number",
            "select Treatments.professional_id, Professionals.last_name, Professionals.cell_number",
            "select Professionals.role_code, Professionals.last_name, Professionals.cell_number"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-UNION-SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-WHERE-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals Treatments",
        "table_candidates": [
            "Professionals Treatments",
            "Dogs Professionals Treatments",
            "Owners Professionals Treatments",
            "Breeds Professionals Treatments",
            "Treatment_Types Professionals Treatments",
            "Sizes Professionals Treatments",
            "Charges Professionals Treatments"
        ],
        "align_scores": [
            0.8297803401947021,
            0.03582324832677841,
            0.00046101969201117754,
            0.0002324511151527986,
            0.617303192615509,
            0.02452433854341507,
            0.0515756793320179,
            0.002051491988822818
        ],
        "align_select": "select Professionals.professional_id, Professionals.last_name, Professionals.cell_number",
        "align_structure": "SELECT-FROM-WHERE-UNION-SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Find the id, last name and cell phone of the professionals who live in the state of Hawaii or have performed more than two treatments.",
        "gold_select": "select Professionals.professional_id, Professionals.last_name, Professionals.cell_number",
        "select_candidates": [
            "select Professionals.professional_id, Professionals.last_name, Professionals.cell_number",
            "select Professionals.first_name, Professionals.last_name, Professionals.cell_number",
            "select Treatments.professional_id, Professionals.last_name, Professionals.cell_number",
            "select Professionals.role_code, Professionals.last_name, Professionals.cell_number"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-UNION-SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-WHERE-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals Treatments",
        "table_candidates": [
            "Professionals Treatments",
            "Dogs Professionals Treatments",
            "Owners Professionals Treatments",
            "Breeds Professionals Treatments",
            "Treatment_Types Professionals Treatments",
            "Sizes Professionals Treatments",
            "Charges Professionals Treatments"
        ],
        "align_scores": [
            0.8655221462249756,
            0.03383367881178856,
            0.0005099939298816025,
            0.00023973714269232005,
            0.6897339820861816,
            0.023154960945248604,
            0.03183095529675484,
            0.0015945353079587221
        ],
        "align_select": "select Professionals.professional_id, Professionals.last_name, Professionals.cell_number",
        "align_structure": "SELECT-FROM-WHERE-UNION-SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Find the id, last name and cell phone of the professionals who live in the state of Mississippi or have performed more than two treatments.",
        "gold_select": "select Professionals.professional_id, Professionals.last_name, Professionals.cell_number",
        "select_candidates": [
            "select Professionals.professional_id, Professionals.last_name, Professionals.cell_number",
            "select Professionals.first_name, Professionals.last_name, Professionals.cell_number",
            "select Treatments.professional_id, Professionals.last_name, Professionals.cell_number",
            "select Professionals.role_code, Professionals.last_name, Professionals.cell_number"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-UNION-SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-WHERE-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals Treatments",
        "table_candidates": [
            "Professionals Treatments",
            "Dogs Professionals Treatments",
            "Owners Professionals Treatments",
            "Treatment_Types Professionals Treatments",
            "Breeds Professionals Treatments",
            "Sizes Professionals Treatments"
        ],
        "align_scores": [
            0.8130871653556824,
            0.03842763975262642,
            0.000501214643009007,
            0.00024358188966289163,
            0.6889593601226807,
            0.028047388419508934,
            0.07448891550302505,
            0.0025458727031946182
        ],
        "align_select": "select Professionals.professional_id, Professionals.last_name, Professionals.cell_number",
        "align_structure": "SELECT-FROM-WHERE-UNION-SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Which dogs are owned by someone who lives in Arizona? List the owner's first name and the dog's name.",
        "gold_select": "select Owners.first_name, Dogs.name",
        "select_candidates": [
            "select Owners.first_name, Dogs.name",
            "select Owners.first_name, Owners.state",
            "select Owners.first_name, Owners.last_name",
            "select Dogs.owner_id, Dogs.name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Owners Dogs",
        "table_candidates": [
            "Owners Dogs",
            "Sizes Owners Dogs",
            "Treatment_Types Owners Dogs",
            "Breeds Owners Dogs"
        ],
        "align_scores": [
            0.9516589641571045,
            0.0002605714835226536,
            0.0007537560304626822,
            9.948220395017415e-05,
            0.0007471104036085308,
            0.00011215963604627177,
            0.00046810958883725107,
            8.635278936708346e-05
        ],
        "align_select": "select Owners.first_name, Dogs.name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which dogs are owned by someone who lives in Vermont? List the owner's first name and the dog's name.",
        "gold_select": "select Owners.first_name, Dogs.name",
        "select_candidates": [
            "select Owners.first_name, Dogs.name",
            "select Owners.first_name, Owners.state",
            "select Dogs.owner_id, Dogs.name",
            "select Owners.first_name, Dogs.name, Owners.zip_code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Owners Dogs",
        "table_candidates": [
            "Owners Dogs",
            "Sizes Owners Dogs",
            "Treatment_Types Owners Dogs",
            "Breeds Owners Dogs"
        ],
        "align_scores": [
            0.9505478143692017,
            0.0002928349422290921,
            0.0008503356366418302,
            0.0001052238731062971,
            0.00048265070654451847,
            8.622458699392155e-05,
            0.00021603752975352108,
            9.933841647580266e-05
        ],
        "align_select": "select Owners.first_name, Dogs.name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which dogs are owned by someone who lives in NewYork? List the owner's first name and the dog's name.",
        "gold_select": "select Owners.first_name, Dogs.name",
        "select_candidates": [
            "select Owners.first_name, Dogs.name",
            "select Owners.first_name, Owners.state",
            "select Dogs.owner_id, Dogs.name",
            "select Owners.first_name, Dogs.name, Owners.zip_code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Owners Dogs",
        "table_candidates": [
            "Owners Dogs",
            "Sizes Owners Dogs",
            "Treatment_Types Owners Dogs",
            "Breeds Owners Dogs"
        ],
        "align_scores": [
            0.9500486850738525,
            0.00020807702094316483,
            0.0007866439991630614,
            9.729189332574606e-05,
            0.0003931702231056988,
            8.336779137607664e-05,
            0.00020339865295682102,
            9.818849503062665e-05
        ],
        "align_select": "select Owners.first_name, Dogs.name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which dogs are owned by someone who lives in Wisconsin? List the owner's first name and the dog's name.",
        "gold_select": "select Owners.first_name, Dogs.name",
        "select_candidates": [
            "select Owners.first_name, Dogs.name",
            "select Owners.first_name, Owners.state",
            "select Dogs.owner_id, Dogs.name",
            "select Owners.first_name, Dogs.name, Owners.zip_code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Owners Dogs",
        "table_candidates": [
            "Owners Dogs",
            "Treatment_Types Owners Dogs",
            "Sizes Owners Dogs",
            "Breeds Owners Dogs",
            "Dogs Owners Dogs"
        ],
        "align_scores": [
            0.939315915107727,
            0.00025995238684117794,
            0.0007165622082538903,
            0.00010195549839409068,
            0.00046878299326635897,
            8.525011071469635e-05,
            0.00021872346405871212,
            9.582166967447847e-05
        ],
        "align_select": "select Owners.first_name, Dogs.name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which dogs are owned by someone who lives in Maryland? List the owner's first name and the dog's name.",
        "gold_select": "select Owners.first_name, Dogs.name",
        "select_candidates": [
            "select Owners.first_name, Dogs.name",
            "select Owners.first_name, Owners.state",
            "select Dogs.owner_id, Dogs.name",
            "select Owners.first_name, Owners.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Owners Dogs",
        "table_candidates": [
            "Owners Dogs",
            "Sizes Owners Dogs",
            "Treatment_Types Owners Dogs",
            "Breeds Owners Dogs"
        ],
        "align_scores": [
            0.9492848515510559,
            0.0003063999174628407,
            0.0008431358146481216,
            0.00010327570635126904,
            0.0004936089389957488,
            8.67960334289819e-05,
            0.0007066510152071714,
            0.00011286375956842676
        ],
        "align_select": "select Owners.first_name, Dogs.name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the first names of owners living in Arizona and the names of dogs they own.",
        "gold_select": "select Owners.first_name, Dogs.name",
        "select_candidates": [
            "select Owners.first_name, Owners.last_name",
            "select Owners.first_name, Owners.last_name, Dogs.name",
            "select Owners.first_name, Owners.last_name, Owners.state",
            "select Owners.first_name, Owners.last_name, Dogs.name, Owners.first_name"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Owners Dogs",
        "table_candidates": [
            "Owners Dogs",
            "Sizes Owners Dogs"
        ],
        "align_scores": [
            0.0006934025441296399,
            8.909682219382375e-05,
            0.0001882420328911394,
            6.26339387963526e-05,
            0.0001645686716074124,
            6.711937749059871e-05,
            0.0001548401196487248,
            6.931417738087475e-05
        ],
        "align_select": "select Owners.first_name, Owners.last_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the first names of owners living in Vermont and the names of dogs they own.",
        "gold_select": "select Owners.first_name, Dogs.name",
        "select_candidates": [
            "select Owners.first_name, Owners.last_name",
            "select Owners.first_name, Owners.last_name, Dogs.name",
            "select Owners.first_name, Owners.last_name, Owners.state",
            "select Owners.first_name, Owners.last_name, Dogs.name, Owners.first_name"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Owners Dogs",
        "table_candidates": [
            "Owners Dogs",
            "Sizes Owners Dogs"
        ],
        "align_scores": [
            0.000609539682045579,
            9.128118108492345e-05,
            0.00019954715389758348,
            6.382306310115382e-05,
            0.00017642405873630196,
            6.932455289643258e-05,
            0.00015210160927381366,
            6.986630614846945e-05
        ],
        "align_select": "select Owners.first_name, Owners.last_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the first names of owners living in NewYork and the names of dogs they own.",
        "gold_select": "select Owners.first_name, Dogs.name",
        "select_candidates": [
            "select Owners.first_name, Owners.last_name",
            "select Owners.first_name, Owners.last_name, Dogs.name",
            "select Owners.first_name, Owners.last_name, Owners.state",
            "select Owners.first_name, Owners.last_name, Dogs.name, Owners.first_name"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Owners Dogs",
        "table_candidates": [
            "Owners Dogs",
            "Sizes Owners Dogs",
            "Treatment_Types Owners Dogs"
        ],
        "align_scores": [
            0.0005381015362218022,
            8.171966328518465e-05,
            0.00017234824190381914,
            6.304081034613773e-05,
            0.00016361314919777215,
            6.60457881167531e-05,
            0.00015244224050547928,
            6.785133882658556e-05
        ],
        "align_select": "select Owners.first_name, Owners.last_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the first names of owners living in Wisconsin and the names of dogs they own.",
        "gold_select": "select Owners.first_name, Dogs.name",
        "select_candidates": [
            "select Owners.first_name, Owners.last_name",
            "select Owners.first_name, Owners.last_name, Dogs.name",
            "select Owners.first_name, Owners.last_name, Owners.state",
            "select Owners.first_name, Owners.last_name, Dogs.name, Owners.owner_id"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Owners Dogs",
        "table_candidates": [
            "Owners Dogs",
            "Sizes Owners Dogs",
            "Treatment_Types Owners Dogs"
        ],
        "align_scores": [
            0.0006357862730510533,
            9.085333294933662e-05,
            0.00020182036678306758,
            6.293186015682295e-05,
            0.00016841075557749718,
            6.78187352605164e-05,
            0.00013217097148299217,
            6.65744737489149e-05
        ],
        "align_select": "select Owners.first_name, Owners.last_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the first names of owners living in Maryland and the names of dogs they own.",
        "gold_select": "select Owners.first_name, Dogs.name",
        "select_candidates": [
            "select Owners.first_name, Owners.last_name",
            "select Owners.first_name, Owners.last_name, Dogs.name",
            "select Owners.first_name, Owners.last_name, Owners.state",
            "select Owners.first_name, Owners.last_name, Dogs.name, Owners.first_name"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Owners Dogs",
        "table_candidates": [
            "Owners Dogs",
            "Sizes Owners Dogs"
        ],
        "align_scores": [
            0.0006399725680239499,
            8.9842222223524e-05,
            0.00020554140792228281,
            6.350316834868863e-05,
            0.00017212965758517385,
            6.818785186624154e-05,
            0.00015320158854592592,
            7.078114140313119e-05
        ],
        "align_select": "select Owners.first_name, Owners.last_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List the emails of the professionals who live in the state of Montana or the state of Wisconsin.",
        "gold_select": "select Professionals.email_address",
        "select_candidates": [
            "select Professionals.email_address",
            "select the Professionals.email_address",
            "select Professionals.email_address ",
            "select Professionals.email_address)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals",
        "table_candidates": [
            "Professionals",
            "Dogs Professionals"
        ],
        "align_scores": [
            0.984767496585846,
            0.2134113609790802,
            0.0011836416088044643,
            0.0002678255259525031,
            0.984767496585846,
            0.2134113609790802,
            0.009668486192822456,
            0.0005848081782460213
        ],
        "align_select": "select Professionals.email_address",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List the emails of the professionals who live in the state of SouthCarolina or the state of Wisconsin.",
        "gold_select": "select Professionals.email_address",
        "select_candidates": [
            "select Professionals.email_address",
            "select Professionals.email_address, Professionals.home_phone",
            "select Professionals.email_address (or Professionals.home_phone)",
            "select Professionals.email_address, Professionals.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals",
        "table_candidates": [
            "Professionals",
            "Dogs Professionals",
            "Owners Professionals"
        ],
        "align_scores": [
            0.9719093441963196,
            0.9135692119598389,
            0.00028076936723664403,
            0.00010134502372238785,
            0.0019295995589345694,
            0.0004321195592638105,
            0.0001903320080600679,
            0.00010697781544877216
        ],
        "align_select": "select Professionals.email_address",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List the emails of the professionals who live in the state of Alabama or the state of Wisconsin.",
        "gold_select": "select Professionals.email_address",
        "select_candidates": [
            "select Professionals.email_address",
            "select Professionals.email_address, Professionals.home_phone",
            "select Professionals.email_address (or Professionals.home_phone)",
            "select Professionals.email_address, Professionals.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals",
        "table_candidates": [
            "Professionals",
            "Dogs Professionals"
        ],
        "align_scores": [
            0.9810008406639099,
            0.5084034204483032,
            0.00026069028535857797,
            8.792900189291686e-05,
            0.0023156548850238323,
            0.00027623583446256816,
            0.00016838150622788817,
            8.940669795265421e-05
        ],
        "align_select": "select Professionals.email_address",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List the emails of the professionals who live in the state of Mississippi or the state of Wisconsin.",
        "gold_select": "select Professionals.email_address",
        "select_candidates": [
            "select Professionals.email_address",
            "select Professionals.email_address, Professionals.home_phone",
            "select Professionals.email_address (or Professionals.home_phone)",
            "select Professionals.email_address, Professionals.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals",
        "table_candidates": [
            "Professionals",
            "Dogs Professionals",
            "Owners Professionals"
        ],
        "align_scores": [
            0.9870098829269409,
            0.14134906232357025,
            0.00021981794270686805,
            8.815929322736338e-05,
            0.0020312771666795015,
            0.00013688343460671604,
            0.00015477000852115452,
            8.754264854360372e-05
        ],
        "align_select": "select Professionals.email_address",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List the emails of the professionals who live in the state of Wisconsin or the state of Wisconsin.",
        "gold_select": "select Professionals.email_address",
        "select_candidates": [
            "select Professionals.email_address",
            "select Professionals.email_address, Professionals.home_phone",
            "select Professionals.email_address (or Professionals.home_phone)",
            "select Professionals.email_address, Professionals.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals",
        "table_candidates": [
            "Professionals",
            "Dogs Professionals",
            "Owners Professionals",
            "Treatment_Types Professionals",
            "Sizes Professionals",
            "Professionals Treatments",
            "Breeds Professionals"
        ],
        "align_scores": [
            0.8956800699234009,
            0.009382489137351513,
            0.0002613370306789875,
            8.067430462688208e-05,
            0.0011505312286317348,
            0.00015009866910986602,
            0.00018153333803638816,
            7.63639691285789e-05
        ],
        "align_select": "select Professionals.email_address",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List the emails of the professionals who live in the state of Hawaii or the state of Montana.",
        "gold_select": "select Professionals.email_address",
        "select_candidates": [
            "select Professionals.email_address",
            "select the Professionals.email_address",
            "select Professionals.email_address ",
            "select Professionals.email_address)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals",
        "table_candidates": [
            "Professionals",
            "Dogs Professionals"
        ],
        "align_scores": [
            0.9802759885787964,
            0.04889659211039543,
            0.001157039892859757,
            0.00019705215527210385,
            0.9802759885787964,
            0.04889659211039543,
            0.008981175720691681,
            0.0003355479275342077
        ],
        "align_select": "select Professionals.email_address",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List the emails of the professionals who live in the state of Hawaii or the state of SouthCarolina.",
        "gold_select": "select Professionals.email_address",
        "select_candidates": [
            "select Professionals.email_address",
            "select the Professionals.email_address",
            "select Professionals.email_address ",
            "select Professionals.email_address)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals",
        "table_candidates": [
            "Professionals",
            "Dogs Professionals",
            "Owners Professionals"
        ],
        "align_scores": [
            0.9727690815925598,
            0.49504023790359497,
            0.0011740420013666153,
            0.00030806480208411813,
            0.9727690815925598,
            0.49504023790359497,
            0.008389175869524479,
            0.0007371099200099707
        ],
        "align_select": "select Professionals.email_address",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List the emails of the professionals who live in the state of Hawaii or the state of Alabama.",
        "gold_select": "select Professionals.email_address",
        "select_candidates": [
            "select Professionals.email_address",
            "select the Professionals.email_address",
            "select Professionals.email_address ",
            "select Professionals.email_address)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals",
        "table_candidates": [
            "Professionals",
            "Dogs Professionals"
        ],
        "align_scores": [
            0.969477653503418,
            0.08408068120479584,
            0.001133291400037706,
            0.00023565246374346316,
            0.969477653503418,
            0.08408068120479584,
            0.00862843170762062,
            0.0004380029859021306
        ],
        "align_select": "select Professionals.email_address",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List the emails of the professionals who live in the state of Hawaii or the state of Hawaii.",
        "gold_select": "select Professionals.email_address",
        "select_candidates": [
            "select Professionals.email_address",
            "select Professionals.email_address, Professionals.home_phone",
            "select Professionals.email_address (or Professionals.home_phone)",
            "select Professionals.email_address, Professionals.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals",
        "table_candidates": [
            "Professionals",
            "Dogs Professionals",
            "Owners Professionals",
            "Professionals Treatments"
        ],
        "align_scores": [
            0.9000996351242065,
            0.004307505674660206,
            0.00028651871252804995,
            7.430377445416525e-05,
            0.001830223947763443,
            0.00011045706924051046,
            0.00020063693227712065,
            7.237378304125741e-05
        ],
        "align_select": "select Professionals.email_address",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List the emails of the professionals who live in the state of Hawaii or the state of Mississippi.",
        "gold_select": "select Professionals.email_address",
        "select_candidates": [
            "select Professionals.email_address",
            "select Professionals.email_address, Professionals.home_phone",
            "select Professionals.email_address (or Professionals.home_phone)",
            "select Professionals.email_address, Professionals.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals",
        "table_candidates": [
            "Professionals",
            "Dogs Professionals",
            "Owners Professionals"
        ],
        "align_scores": [
            0.9779999852180481,
            0.07812940329313278,
            0.00022742598957847804,
            7.64893920859322e-05,
            0.001984416041523218,
            0.00012996514851693064,
            0.0001618927635718137,
            7.858793105697259e-05
        ],
        "align_select": "select Professionals.email_address",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the emails of the professionals living in either the state of Montana or the state of Wisconsin?",
        "gold_select": "select Professionals.email_address",
        "select_candidates": [
            "select Professionals.email_address",
            "select Professionals.email_address, Professionals.home_phone",
            "select Professionals.email_address, Professionals.last_name",
            "select Professionals.email_address (or Professionals.home_phone)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals",
        "table_candidates": [
            "Professionals",
            "Dogs Professionals",
            "Owners Professionals"
        ],
        "align_scores": [
            0.9903429746627808,
            0.016171524301171303,
            0.0001925118122017011,
            7.44412827771157e-05,
            0.0001368826488032937,
            7.190160249592736e-05,
            0.002353445626795292,
            0.0001125134585890919
        ],
        "align_select": "select Professionals.email_address",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the emails of the professionals living in either the state of SouthCarolina or the state of Wisconsin?",
        "gold_select": "select Professionals.email_address",
        "select_candidates": [
            "select Professionals.email_address",
            "select Professionals.email_address, Professionals.home_phone",
            "select Professionals.email_address, Professionals.last_name",
            "select Professionals.email_address (or Professionals.home_phone)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals",
        "table_candidates": [
            "Professionals",
            "Dogs Professionals",
            "Owners Professionals"
        ],
        "align_scores": [
            0.9832738637924194,
            0.12754333019256592,
            0.0002299346961081028,
            8.834663458401337e-05,
            0.00015480027650482953,
            8.798587077762932e-05,
            0.0025802955497056246,
            0.00014431709132622927
        ],
        "align_select": "select Professionals.email_address",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the emails of the professionals living in either the state of Alabama or the state of Wisconsin?",
        "gold_select": "select Professionals.email_address",
        "select_candidates": [
            "select Professionals.email_address",
            "select Professionals.email_address, Professionals.home_phone",
            "select Professionals.email_address, Professionals.last_name",
            "select Professionals.email_address (or Professionals.home_phone)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals",
        "table_candidates": [
            "Professionals",
            "Dogs Professionals",
            "Owners Professionals"
        ],
        "align_scores": [
            0.9890572428703308,
            0.023192450404167175,
            0.00021166546503081918,
            7.508398994104937e-05,
            0.00014138559345155954,
            7.373828702839091e-05,
            0.0025273312348872423,
            0.00012292365136090666
        ],
        "align_select": "select Professionals.email_address",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the emails of the professionals living in either the state of Mississippi or the state of Wisconsin?",
        "gold_select": "select Professionals.email_address",
        "select_candidates": [
            "select Professionals.email_address",
            "select Professionals.email_address, Professionals.home_phone",
            "select Professionals.email_address, Professionals.last_name",
            "select Professionals.email_address (or Professionals.home_phone)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals",
        "table_candidates": [
            "Professionals",
            "Dogs Professionals",
            "Owners Professionals"
        ],
        "align_scores": [
            0.9916718602180481,
            0.017934419214725494,
            0.00018469577480573207,
            7.474672747775912e-05,
            0.00013657260569743812,
            7.192237535491586e-05,
            0.0017521589761599898,
            0.00010316859697923064
        ],
        "align_select": "select Professionals.email_address",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the emails of the professionals living in either the state of Wisconsin or the state of Wisconsin?",
        "gold_select": "select Professionals.email_address",
        "select_candidates": [
            "select Professionals.email_address",
            "select Professionals.email_address, Professionals.home_phone",
            "select Professionals.email_address, Professionals.last_name",
            "select Professionals.email_address (or Professionals.home_phone)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals",
        "table_candidates": [
            "Professionals",
            "Dogs Professionals",
            "Owners Professionals",
            "Treatment_Types Professionals",
            "Sizes Professionals",
            "Breeds Professionals",
            "Professionals Treatments"
        ],
        "align_scores": [
            0.8877795934677124,
            0.0016874278662726283,
            0.00021583866328001022,
            7.05097772879526e-05,
            0.0001475898752687499,
            6.747953739250079e-05,
            0.0008136522374115884,
            9.46866421145387e-05
        ],
        "align_select": "select Professionals.email_address",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the emails of the professionals living in either the state of Hawaii or the state of Montana?",
        "gold_select": "select Professionals.email_address",
        "select_candidates": [
            "select Professionals.email_address",
            "select Professionals.email_address, Professionals.home_phone",
            "select Professionals.email_address, Professionals.last_name",
            "select Professionals.email_address (or Professionals.home_phone)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals",
        "table_candidates": [
            "Professionals",
            "Dogs Professionals"
        ],
        "align_scores": [
            0.9892902970314026,
            0.008305302821099758,
            0.00019865244394168258,
            7.011606794549152e-05,
            0.00013552441669162363,
            6.814845983171836e-05,
            0.0020913081243634224,
            0.00010340872540837154
        ],
        "align_select": "select Professionals.email_address",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the emails of the professionals living in either the state of Hawaii or the state of SouthCarolina?",
        "gold_select": "select Professionals.email_address",
        "select_candidates": [
            "select Professionals.email_address",
            "select Professionals.email_address, Professionals.home_phone",
            "select Professionals.email_address, Professionals.last_name",
            "select Professionals.email_address (or Professionals.home_phone)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals",
        "table_candidates": [
            "Professionals",
            "Dogs Professionals"
        ],
        "align_scores": [
            0.9831006526947021,
            0.03275554999709129,
            0.00023018982028588653,
            7.893463043728843e-05,
            0.0001530951412860304,
            7.754231774015352e-05,
            0.003278428455814719,
            0.00013139977818354964
        ],
        "align_select": "select Professionals.email_address",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the emails of the professionals living in either the state of Hawaii or the state of Alabama?",
        "gold_select": "select Professionals.email_address",
        "select_candidates": [
            "select Professionals.email_address",
            "select Professionals.email_address, Professionals.home_phone",
            "select Professionals.email_address, Professionals.last_name",
            "select Professionals.email_address (or Professionals.home_phone)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals",
        "table_candidates": [
            "Professionals",
            "Dogs Professionals"
        ],
        "align_scores": [
            0.9862672090530396,
            0.009407334960997105,
            0.0002034782082773745,
            7.01905955793336e-05,
            0.00013598990335594863,
            6.903132452862337e-05,
            0.002367459237575531,
            0.00011048658052459359
        ],
        "align_select": "select Professionals.email_address",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the emails of the professionals living in either the state of Hawaii or the state of Hawaii?",
        "gold_select": "select Professionals.email_address",
        "select_candidates": [
            "select Professionals.email_address",
            "select Professionals.email_address, Professionals.home_phone",
            "select Professionals.email_address, Professionals.last_name",
            "select Professionals.email_address (or Professionals.home_phone)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals",
        "table_candidates": [
            "Professionals",
            "Dogs Professionals",
            "Owners Professionals",
            "Professionals Treatments",
            "Treatment_Types Professionals"
        ],
        "align_scores": [
            0.9265503883361816,
            0.001414245693013072,
            0.00024724702234379947,
            6.697966455249116e-05,
            0.00015527658979408443,
            6.626993854297325e-05,
            0.0007919178460724652,
            8.685704960953444e-05
        ],
        "align_select": "select Professionals.email_address",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the emails of the professionals living in either the state of Hawaii or the state of Mississippi?",
        "gold_select": "select Professionals.email_address",
        "select_candidates": [
            "select Professionals.email_address",
            "select Professionals.email_address, Professionals.home_phone",
            "select Professionals.email_address, Professionals.last_name",
            "select Professionals.email_address (or Professionals.home_phone)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals",
        "table_candidates": [
            "Professionals",
            "Dogs Professionals",
            "Owners Professionals",
            "Professionals Treatments"
        ],
        "align_scores": [
            0.9884232878684998,
            0.007083853706717491,
            0.00018892747175414115,
            6.901473534526303e-05,
            0.0001353891711914912,
            6.743592530256137e-05,
            0.001898133778013289,
            0.00010023380309576169
        ],
        "align_select": "select Professionals.email_address",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List the name of singers whose citizenship is not \"Germany\".",
        "gold_select": "select singer.Name",
        "select_candidates": [
            "select singer.Name",
            "select singer.Name, singer.Citizenship",
            "select singer.Name, singer.Birth_Year",
            "select singer.Name, singer.Net_Worth_Millions"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.9930790066719055,
            0.00011265732609899715,
            0.0001809702953323722,
            5.608465289697051e-05,
            0.0001688641932560131,
            6.599635526072234e-05,
            0.00015729220467619598,
            5.744936061091721e-05
        ],
        "align_select": "select singer.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List the name of singers whose citizenship is not \"Australia\".",
        "gold_select": "select singer.Name",
        "select_candidates": [
            "select singer.Name",
            "select singer.Name, singer.Citizenship",
            "select singer.Name, singer.Birth_Year",
            "select singer.Name, singer.Net_Worth_Millions"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.9934062957763672,
            0.00012893234088551253,
            0.00016407464863732457,
            6.084733468014747e-05,
            0.00016732900985516608,
            7.099359936546534e-05,
            0.00015776521468069404,
            6.415586540242657e-05
        ],
        "align_select": "select singer.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List the name of singers whose citizenship is not \"United States\".",
        "gold_select": "select singer.Name",
        "select_candidates": [
            "select singer.Name",
            "select singer.Name, singer.Birth_Year",
            "select singer.Name, singer.Citizenship",
            "select singer.Name, singer.Net_Worth_Millions"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.9941171407699585,
            0.0001474501914344728,
            0.00015796752995811403,
            7.037611067062244e-05,
            0.0001948448916664347,
            6.05558707320597e-05,
            0.00015106484352145344,
            6.114146526670083e-05
        ],
        "align_select": "select singer.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List the name of singers whose citizenship is not \"Chile\".",
        "gold_select": "select singer.Name",
        "select_candidates": [
            "select singer.Name",
            "select singer.Name, singer.Citizenship",
            "select singer.Name, singer.Birth_Year",
            "select singer.Name, singer.Net_Worth_Millions"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.9940647482872009,
            0.00011158645793329924,
            0.00014745118096470833,
            5.548718399950303e-05,
            0.00016521330690011382,
            6.43597959424369e-05,
            0.00015780357352923602,
            5.925966615905054e-05
        ],
        "align_select": "select singer.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the feature type name of feature BurglarAlarm?",
        "gold_select": "select Ref_Feature_Types.feature_type_name",
        "select_candidates": [
            "select Ref_Feature_Types.feature_type_name",
            "select Ref_Feature_Types.feature_type_name, Other_Available_Features.feature_type_code",
            "select Ref_Feature_Types.feature_type_code, Ref_Feature_Types.feature_type_name",
            "select Ref_Feature_Types.feature_type_name, Other_Available_Features.feature_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Ref_Feature_Types Other_Available_Features",
        "table_candidates": [
            "Ref_Feature_Types Other_Available_Features",
            "Ref_Feature_Types Ref_Property_Types Other_Available_Features"
        ],
        "align_scores": [
            0.9962571859359741,
            8.602238085586578e-05,
            0.0001613001513760537,
            6.393063085852191e-05,
            0.00015553545381408185,
            7.415398431476206e-05,
            0.00021264553652144969,
            6.48129716864787e-05
        ],
        "align_select": "select Ref_Feature_Types.feature_type_name",
        "align_structure": "SELECT-FROM-WHERE"
    }
]