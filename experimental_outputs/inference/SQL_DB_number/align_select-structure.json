[
    {
        "question": "How many concerts are there in year 2014 or 2025?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), concert.Year",
            "select count(*) in concert.Year",
            "select count(*), concert.Stadium_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "concert",
        "table_candidates": [
            "concert",
            "stadium concert",
            "stadium singer concert",
            "singer concert"
        ],
        "align_scores": [
            0.8854571580886841,
            0.9757102131843567,
            0.00016944046365097165,
            0.00022292739595286548,
            0.00020409961871337146,
            0.0006973848212510347,
            0.00011947662278544158,
            0.00015214165614452213
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
    },
    {
        "question": "How many concerts are there in year 2014 or 2019?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), concert.Year",
            "select count(*), concert.concert_ID",
            "select count(*), concert.Stadium_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "concert",
        "table_candidates": [
            "concert",
            "stadium concert",
            "stadium singer concert",
            "singer concert"
        ],
        "align_scores": [
            0.956214964389801,
            0.00010585367999738082,
            0.0002150886139133945,
            0.0001041596697177738,
            0.00019090797286480665,
            8.444369450444356e-05,
            0.0001475508906878531,
            0.00010863514035008848
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many concerts are there in year 2014 or 2009?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), concert.Year",
            "select count(*) dependant on concert.Year",
            "select count(*) in concert.Year"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "concert",
        "table_candidates": [
            "concert",
            "stadium concert",
            "singer concert",
            "stadium singer concert"
        ],
        "align_scores": [
            0.49038568139076233,
            0.9726479649543762,
            0.0001680536661297083,
            0.00021529359219130129,
            0.00047121167881414294,
            0.003766880836337805,
            0.0002149526699213311,
            0.0006957915611565113
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many concerts are there in year 2014 or 2014?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), concert.Year",
            "select count(*), concert.concert_ID",
            "select count(*), concert.Stadium_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "concert",
        "table_candidates": [
            "concert",
            "stadium concert",
            "stadium singer concert"
        ],
        "align_scores": [
            0.9780381917953491,
            0.00019685890583787113,
            0.00020520048565231264,
            0.00014227276551537216,
            0.0001947167475009337,
            9.903065074468032e-05,
            0.00017015040793921798,
            0.00012879729911219329
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many concerts are there in year 2014 or 2022?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), concert.Year",
            "select count(*) in concert.Year",
            "select count(*), concert.Stadium_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "concert",
        "table_candidates": [
            "concert",
            "stadium concert",
            "stadium singer concert"
        ],
        "align_scores": [
            0.7952547669410706,
            0.9727181196212769,
            0.00016895856242626905,
            0.00022540667850989848,
            0.0002031627664109692,
            0.0007193180499598384,
            0.00011797869956353679,
            0.00015190712292678654
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
    },
    {
        "question": "How many concerts are there in year 2024 or 2015?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), concert.Year",
            "select count(*), concert.Stadium_ID",
            "select count(*) dependant on concert.Year"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "concert",
        "table_candidates": [
            "concert",
            "stadium concert",
            "singer concert"
        ],
        "align_scores": [
            0.3991490602493286,
            0.9353885054588318,
            0.00013578984362538904,
            0.00021928161731921136,
            0.00011816097685368732,
            0.00015648842963855714,
            0.00044273174717091024,
            0.0026588544715195894
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many concerts are there in year 2018 or 2015?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), concert.Year",
            "select count(*), concert.concert_ID",
            "select count(*) dependant on concert.Year"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "concert",
        "table_candidates": [
            "concert",
            "stadium concert",
            "singer concert"
        ],
        "align_scores": [
            0.8927931785583496,
            0.2831211984157562,
            0.00020415213657543063,
            0.00014647177886217833,
            0.0001884246594272554,
            9.798852988751605e-05,
            0.0024650709237903357,
            0.00039409147575497627
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many concerts are there in year 2008 or 2015?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), concert.Year",
            "select count(*), concert.concert_ID",
            "select count(*) dependant on concert.Year"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "concert",
        "table_candidates": [
            "concert",
            "stadium concert",
            "singer concert",
            "stadium singer concert"
        ],
        "align_scores": [
            0.9782453179359436,
            0.7477505207061768,
            0.00020994873193558306,
            0.0001714251993689686,
            0.00019034706929232925,
            0.00010295258834958076,
            0.0032978327944874763,
            0.0004749824292957783
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many concerts are there in year 2013 or 2015?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), concert.Year",
            "select count(*), concert.concert_ID",
            "select count(*), concert.Stadium_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "concert",
        "table_candidates": [
            "concert",
            "stadium concert",
            "singer concert"
        ],
        "align_scores": [
            0.7657358050346375,
            0.0006961666513234377,
            0.00022603421530220658,
            0.00017622481391299516,
            0.0001967806601896882,
            0.0001200716505991295,
            0.00015332625480368733,
            0.00020225880143698305
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many concerts are there in year 2021 or 2015?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), concert.Year",
            "select count(*) dependant on concert.Year",
            "select count(*), concert.Stadium_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "concert",
        "table_candidates": [
            "concert",
            "stadium concert"
        ],
        "align_scores": [
            0.39468565583229065,
            0.9333382248878479,
            0.00014075955550651997,
            0.00021957370336167514,
            0.000505510251969099,
            0.002954479306936264,
            0.0001107725765905343,
            0.00015960603195708245
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many concerts occurred in 2014 or 2025?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), concert.Year",
            "select count(*) dependant on concert.Year",
            "select count(*), concert.Stadium_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "concert",
        "table_candidates": [
            "concert",
            "stadium concert",
            "stadium singer concert",
            "singer concert"
        ],
        "align_scores": [
            0.9863353967666626,
            0.8496459722518921,
            0.00023487322323489934,
            0.00019485696975607425,
            0.0034935958683490753,
            0.0008355503669008613,
            0.00016205120482482016,
            0.00010818440932780504
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many concerts occurred in 2014 or 2019?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), concert.Year",
            "select count(*), concert.concert_ID",
            "select count(*), concert.Stadium_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "concert",
        "table_candidates": [
            "concert"
        ],
        "align_scores": [
            0.960206925868988,
            6.738591036992148e-05,
            0.0002337022451683879,
            6.083787593524903e-05,
            0.0001744257315294817,
            5.7233912230003625e-05,
            0.00014079621178098023,
            5.758615952800028e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many concerts occurred in 2014 or 2009?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), concert.Year",
            "select concert.Year, count(*)",
            "select count(*), concert.concert_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "concert",
        "table_candidates": [
            "concert"
        ],
        "align_scores": [
            0.9517564177513123,
            0.30314958095550537,
            0.00025544274831190705,
            0.00016160542145371437,
            0.0004648998728953302,
            0.0016959493514150381,
            0.00017718825256451964,
            9.366503218188882e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many concerts occurred in 2014 or 2014?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), concert.Year",
            "select count(*), concert.concert_ID",
            "select count(*), concert.Stadium_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "concert",
        "table_candidates": [
            "concert",
            "stadium concert",
            "stadium singer concert",
            "singer concert"
        ],
        "align_scores": [
            0.9663297533988953,
            9.305998537456617e-05,
            0.0002475078508723527,
            7.607643055962399e-05,
            0.00017798750195652246,
            7.418978202622384e-05,
            0.0001748189824866131,
            7.493378507206216e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many concerts occurred in 2014 or 2022?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), concert.Year",
            "select count(*) dependant on concert.Year",
            "select count(*), concert.Stadium_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "concert",
        "table_candidates": [
            "concert",
            "stadium concert",
            "stadium singer concert",
            "singer concert"
        ],
        "align_scores": [
            0.9848920106887817,
            7.35643261577934e-05,
            0.0002448121376801282,
            6.241404480533674e-05,
            0.003551364876329899,
            0.00010803224722621962,
            0.0001586735888849944,
            5.87040776736103e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many concerts occurred in 2024 or 2015?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), concert.Year",
            "select count(*), concert.Stadium_ID",
            "select count(*), concert.concert_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "concert",
        "table_candidates": [
            "concert"
        ],
        "align_scores": [
            0.9225276708602905,
            0.12818576395511627,
            0.0002380992955295369,
            0.0001415194128639996,
            0.0001656987442402169,
            9.891484660329297e-05,
            0.0001961650705197826,
            9.005554602481425e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many concerts occurred in 2018 or 2015?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), concert.Year",
            "select concert.Year, count(*)",
            "select count(*), concert.concert_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "concert",
        "table_candidates": [
            "concert"
        ],
        "align_scores": [
            0.6163767576217651,
            0.207920104265213,
            0.00023710343521088362,
            0.00014596371329389513,
            0.0004174486384727061,
            0.0014242322649806738,
            0.0001726051268633455,
            9.327462612418458e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many concerts occurred in 2008 or 2015?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), concert.Year",
            "select count(*), concert.concert_ID",
            "select count(*), concert.Stadium_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "concert",
        "table_candidates": [
            "concert"
        ],
        "align_scores": [
            0.9804832935333252,
            6.759869575034827e-05,
            0.00023306140792556107,
            6.1019265558570623e-05,
            0.00017880431551020592,
            5.628744838759303e-05,
            0.0001426610251655802,
            5.702166527044028e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many concerts occurred in 2013 or 2015?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), concert.Year",
            "select count(*), concert.concert_ID",
            "select count(*), concert.Stadium_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "concert",
        "table_candidates": [
            "concert"
        ],
        "align_scores": [
            0.8756713271141052,
            6.67641288600862e-05,
            0.0002389136207057163,
            5.975278691039421e-05,
            0.00017921565449796617,
            5.605411934084259e-05,
            0.00013948862033430487,
            5.644741395371966e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many concerts occurred in 2021 or 2015?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), concert.Year",
            "select count(*), concert.concert_ID",
            "select count(*), concert.Stadium_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "concert",
        "table_candidates": [
            "concert"
        ],
        "align_scores": [
            0.7851048111915588,
            0.13107632100582123,
            0.00023826598771847785,
            0.00014146786998026073,
            0.00019299112318549305,
            9.140949259744957e-05,
            0.00017104703874792904,
            9.168274118565023e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show the stadium name and capacity with most number of concerts in year 2015 or after.",
        "gold_select": "select stadium.Name, stadium.Capacity",
        "select_candidates": [
            "select stadium.Name, stadium.Capacity",
            "select stadium.Name, stadium.Capacity, stadium.Average",
            "select stadium.Name.c3, stadium.Name",
            "select stadium.Location, stadium.Capacity"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "stadium concert",
        "table_candidates": [
            "stadium concert"
        ],
        "align_scores": [
            0.9914135932922363,
            0.00012793070345651358,
            0.00030690510175190866,
            6.474502151831985e-05,
            0.013163572177290916,
            9.572614362696186e-05,
            0.000996179529465735,
            8.592564699938521e-05
        ],
        "align_select": "select stadium.Name, stadium.Capacity",
        "align_structure": "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the name and capacity of the stadium with the most concerts after 2014?",
        "gold_select": "select stadium.Name, stadium.Capacity",
        "select_candidates": [
            "select stadium.Name, stadium.Capacity",
            "select stadium.Location, stadium.Capacity",
            "select stadium.Name., stadium.Capacity",
            "select stadium.Capacity, stadium.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-HAVING-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "stadium concert",
        "table_candidates": [
            "stadium concert"
        ],
        "align_scores": [
            0.9906322956085205,
            0.9238872528076172,
            0.0009160012705251575,
            0.0008026757859624922,
            0.008236050605773926,
            0.004814457148313522,
            0.9916810393333435,
            0.9388839602470398
        ],
        "align_select": "select stadium.Name, stadium.Capacity",
        "align_structure": "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Show names for all stadiums except for stadiums having a concert in year 2024.",
        "gold_select": "select stadium.Name",
        "select_candidates": [
            "select stadium.Name",
            "select stadium.Stadium_ID, stadium.Name",
            "select stadium.Location, stadium.Name",
            "select stadium.Name, concert.Stadium_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "stadium concert",
        "table_candidates": [
            "stadium concert"
        ],
        "align_scores": [
            0.9891235828399658,
            0.9908599853515625,
            0.0006023633177392185,
            0.0005132180522195995,
            0.0004395043069962412,
            0.0003485298075247556,
            0.00039612787077203393,
            0.00036155281122773886
        ],
        "align_select": "select stadium.Name",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "Show names for all stadiums except for stadiums having a concert in year 2018.",
        "gold_select": "select stadium.Name",
        "select_candidates": [
            "select stadium.Name",
            "select stadium.Stadium_ID, stadium.Name",
            "select stadium.Location, stadium.Name",
            "select stadium.Name, concert.Stadium_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "stadium concert",
        "table_candidates": [
            "stadium concert"
        ],
        "align_scores": [
            0.9888327121734619,
            0.9905725121498108,
            0.0006372453062795103,
            0.0005558180855587125,
            0.000424034456955269,
            0.0003597494796849787,
            0.00039190539973787963,
            0.0003699706867337227
        ],
        "align_select": "select stadium.Name",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "Show names for all stadiums except for stadiums having a concert in year 2008.",
        "gold_select": "select stadium.Name",
        "select_candidates": [
            "select stadium.Name",
            "select stadium.Stadium_ID, stadium.Name",
            "select stadium.Location, stadium.Name",
            "select stadium.Name, concert.Stadium_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "stadium concert",
        "table_candidates": [
            "stadium concert"
        ],
        "align_scores": [
            0.985841691493988,
            0.9888324737548828,
            0.0006058865110389888,
            0.0005186820635572076,
            0.0004127009306102991,
            0.0003578046744223684,
            0.00040961202466860414,
            0.0003924630000256002
        ],
        "align_select": "select stadium.Name",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "Show names for all stadiums except for stadiums having a concert in year 2013.",
        "gold_select": "select stadium.Name",
        "select_candidates": [
            "select stadium.Name",
            "select stadium.Stadium_ID, stadium.Name",
            "select stadium.Location, stadium.Name",
            "select stadium.Name, concert.Stadium_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "stadium concert",
        "table_candidates": [
            "stadium concert"
        ],
        "align_scores": [
            0.9879401922225952,
            0.9897756576538086,
            0.000657315889839083,
            0.0005816052434965968,
            0.0004432962159626186,
            0.00037743389839306474,
            0.00042711530113592744,
            0.00040814097155816853
        ],
        "align_select": "select stadium.Name",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "Show names for all stadiums except for stadiums having a concert in year 2021.",
        "gold_select": "select stadium.Name",
        "select_candidates": [
            "select stadium.Name",
            "select stadium.Stadium_ID, stadium.Name",
            "select stadium.Location, stadium.Name",
            "select stadium.Name, concert.Stadium_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "stadium concert",
        "table_candidates": [
            "stadium concert"
        ],
        "align_scores": [
            0.9884902238845825,
            0.9903766512870789,
            0.0006107981316745281,
            0.0005379251088015735,
            0.0004350379458628595,
            0.0003653812746051699,
            0.00037370584323070943,
            0.00034425241756252944
        ],
        "align_select": "select stadium.Name",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of all stadiums that did not have a concert in 2024?",
        "gold_select": "select stadium.Name",
        "select_candidates": [
            "select stadium.Name",
            "select stadium.Stadium_ID, stadium.Name",
            "select stadium.Location, stadium.Name",
            "select stadium.Name, concert.Stadium_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "stadium concert",
        "table_candidates": [
            "stadium concert"
        ],
        "align_scores": [
            0.9293750524520874,
            0.016393965110182762,
            0.0007241419516503811,
            0.0003641023940872401,
            0.0004663037252612412,
            0.0003391381469555199,
            0.0004301485023461282,
            0.000387463194783777
        ],
        "align_select": "select stadium.Name",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of all stadiums that did not have a concert in 2018?",
        "gold_select": "select stadium.Name",
        "select_candidates": [
            "select stadium.Name",
            "select stadium.Stadium_ID, stadium.Name",
            "select stadium.Location, stadium.Name",
            "select stadium.Name, concert.Stadium_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "stadium concert",
        "table_candidates": [
            "stadium concert"
        ],
        "align_scores": [
            0.9585070013999939,
            0.02302395924925804,
            0.0009416491375304759,
            0.0004001393390353769,
            0.0005827497807331383,
            0.00038520572707057,
            0.00048728499677963555,
            0.00036317124613560736
        ],
        "align_select": "select stadium.Name",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of all stadiums that did not have a concert in 2008?",
        "gold_select": "select stadium.Name",
        "select_candidates": [
            "select stadium.Name",
            "select stadium.Stadium_ID, stadium.Name",
            "select stadium.Location, stadium.Name",
            "select stadium.Name, concert.Stadium_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "stadium concert",
        "table_candidates": [
            "stadium concert"
        ],
        "align_scores": [
            0.9420241117477417,
            0.9420241117477417,
            0.0009501509484834969,
            0.0009501509484834969,
            0.0005459535168483853,
            0.0005459535168483853,
            0.0005411236779764295,
            0.0005411236779764295
        ],
        "align_select": "select stadium.Name",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of all stadiums that did not have a concert in 2013?",
        "gold_select": "select stadium.Name",
        "select_candidates": [
            "select stadium.Name",
            "select stadium.Stadium_ID, stadium.Name",
            "select stadium.Location, stadium.Name",
            "select stadium.Name, concert.Stadium_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "stadium concert",
        "table_candidates": [
            "stadium concert"
        ],
        "align_scores": [
            0.95826655626297,
            0.95826655626297,
            0.0010291781509295106,
            0.0010291781509295106,
            0.0006035632686689496,
            0.0006035632686689496,
            0.0005261477781459689,
            0.0005261477781459689
        ],
        "align_select": "select stadium.Name",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of all stadiums that did not have a concert in 2021?",
        "gold_select": "select stadium.Name",
        "select_candidates": [
            "select stadium.Name",
            "select stadium.Stadium_ID, stadium.Name",
            "select stadium.Location, stadium.Name",
            "select stadium.Name, concert.Stadium_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "stadium concert",
        "table_candidates": [
            "stadium concert"
        ],
        "align_scores": [
            0.9335537552833557,
            0.010719961486756802,
            0.0006994418799877167,
            0.00035873817978426814,
            0.000498262990731746,
            0.0003559294273145497,
            0.0004456587485037744,
            0.0003768977476283908
        ],
        "align_select": "select stadium.Name",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "List all singer names in concerts in year 2015.",
        "gold_select": "select singer.Name",
        "select_candidates": [
            "select singer.Name",
            "select singer.Name, concert.concert_Name",
            "select singer.Name, concert.concert_ID",
            "select singer.Name, concert.Theme"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer concert singer_in_concert",
        "table_candidates": [
            "singer concert singer_in_concert"
        ],
        "align_scores": [
            0.985782265663147,
            0.01067373901605606,
            0.00022482928761746734,
            0.0001707384071778506,
            0.000163265474839136,
            0.0001044274031301029,
            0.00023773543944116682,
            0.000149313680594787
        ],
        "align_select": "select singer.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of the singers who performed in a concert in 2015?",
        "gold_select": "select singer.Name",
        "select_candidates": [
            "select singer.Name",
            "select singer.Name, concert.Theme",
            "select singer.Name, concert.Year",
            "select singer.Name, concert.concert_Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer concert singer_in_concert",
        "table_candidates": [
            "singer concert singer_in_concert"
        ],
        "align_scores": [
            0.959356427192688,
            0.0001279621646972373,
            0.00028234912315383554,
            6.832259532529861e-05,
            0.000298453465802595,
            6.0848025896120816e-05,
            0.0002898666716646403,
            6.0238864534767345e-05
        ],
        "align_select": "select singer.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the name and location of the stadiums which some concerts happened in the years of both 2014 and 2014.",
        "gold_select": "select stadium.Name, stadium.Location",
        "select_candidates": [
            "select stadium.Name, stadium.Location",
            "select stadium.Location, stadium.Name",
            "select stadium.Stadium_ID, stadium.Name, stadium.Location",
            "select stadium.Name, stadium.Location, concert.Stadium_ID"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "stadium concert",
        "table_candidates": [
            "stadium concert"
        ],
        "align_scores": [
            0.9047577381134033,
            0.008065156638622284,
            0.9287598133087158,
            0.006672801449894905,
            0.0002949576883111149,
            0.00019183309632353485,
            0.00019229829194955528,
            0.00013633421622216702
        ],
        "align_select": "select stadium.Name, stadium.Location",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "Find the name and location of the stadiums which some concerts happened in the years of both 2015 and 2015.",
        "gold_select": "select stadium.Name, stadium.Location",
        "select_candidates": [
            "select stadium.Name, stadium.Location",
            "select stadium.Location, stadium.Name",
            "select stadium.Stadium_ID, stadium.Name, stadium.Location",
            "select stadium.Name, stadium.Location, concert.Stadium_ID"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "stadium concert",
        "table_candidates": [
            "stadium concert"
        ],
        "align_scores": [
            0.9013454914093018,
            0.006057645659893751,
            0.9262188076972961,
            0.005052722059190273,
            0.0002947462780866772,
            0.00018899288261309266,
            0.0001930507569340989,
            0.00013437708548735827
        ],
        "align_select": "select stadium.Name, stadium.Location",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names and locations of the stadiums that had concerts that occurred in both 2014 and 2014?",
        "gold_select": "select stadium.Name, stadium.Location",
        "select_candidates": [
            "select stadium.Name, stadium.Location",
            "select stadium.Location, stadium.Name",
            "select stadium.Stadium_ID, stadium.Name, stadium.Location",
            "select stadium.Name, stadium.Location, stadium.Capacity"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "stadium concert",
        "table_candidates": [
            "stadium concert"
        ],
        "align_scores": [
            0.9281483888626099,
            0.1092153936624527,
            0.9481136202812195,
            0.10035023838281631,
            0.00040620117215439677,
            0.0002275663282489404,
            0.00028079183539375663,
            0.00022225035354495049
        ],
        "align_select": "select stadium.Name, stadium.Location",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names and locations of the stadiums that had concerts that occurred in both 2015 and 2015?",
        "gold_select": "select stadium.Name, stadium.Location",
        "select_candidates": [
            "select stadium.Name, stadium.Location",
            "select stadium.Location, stadium.Name",
            "select stadium.Stadium_ID, stadium.Name, stadium.Location",
            "select stadium.Name, stadium.Location, stadium.Capacity"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "stadium concert",
        "table_candidates": [
            "stadium concert"
        ],
        "align_scores": [
            0.9239361882209778,
            0.10288408398628235,
            0.9448243379592896,
            0.09318917244672775,
            0.00039371743332594633,
            0.00022370752412825823,
            0.00027613368001766503,
            0.0002202610339736566
        ],
        "align_select": "select stadium.Name, stadium.Location",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "Find the number of pets whose weight is heavier than 7.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Pets.PetID",
            "select count(*), Pets.PetID",
            "select count(*), Pets.PetType"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Pets",
        "table_candidates": [
            "Pets"
        ],
        "align_scores": [
            0.9935684204101562,
            0.0001633347710594535,
            0.0002570620854385197,
            0.0012184260413050652,
            0.0002570620854385197,
            0.0012184260413050652,
            0.00024171281256712973,
            0.02421148680150509
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the number of pets whose weight is heavier than 5.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Pets.PetID",
            "select count(*), Pets.PetID",
            "select count(*), Pets.PetType"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Pets",
        "table_candidates": [
            "Pets"
        ],
        "align_scores": [
            0.9929130673408508,
            0.00015778913802932948,
            0.0002463272539898753,
            0.001145574962720275,
            0.0002463272539898753,
            0.001145574962720275,
            0.0002364063693676144,
            0.015954429283738136
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the number of pets whose weight is heavier than 8.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Pets.PetID",
            "select count(*), Pets.PetID",
            "select count(*), Pets.PetType"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Pets",
        "table_candidates": [
            "Pets"
        ],
        "align_scores": [
            0.9933952689170837,
            0.00015996865113265812,
            0.0002582815650384873,
            0.00127771170809865,
            0.0002582815650384873,
            0.00127771170809865,
            0.0002405449195066467,
            0.02132672257721424
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the number of pets whose weight is heavier than 13.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Pets.PetID",
            "select count(*), Pets.PetID",
            "select count(*), Pets.PetType"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Pets",
        "table_candidates": [
            "Pets"
        ],
        "align_scores": [
            0.9939001798629761,
            0.00016780290752649307,
            0.0002575890684965998,
            0.0013592661125585437,
            0.0002575890684965998,
            0.0013592661125585437,
            0.00024898245465010405,
            0.02775207906961441
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the number of pets whose weight is heavier than 9.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Pets.PetID",
            "select count(*), Pets.PetID",
            "select count(*), Pets.PetType"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Pets",
        "table_candidates": [
            "Pets"
        ],
        "align_scores": [
            0.993328332901001,
            0.00016645425057504326,
            0.00025558716151863337,
            0.0013033876894041896,
            0.00025558716151863337,
            0.0013033876894041896,
            0.00024089563521556556,
            0.029219871386885643
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many pets have a greater weight than 7?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Pets.PetID",
            "select count(*), Pets.PetID",
            "select count(*), Pets.PetType"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Pets",
        "table_candidates": [
            "Pets"
        ],
        "align_scores": [
            0.9894809722900391,
            0.0007539865910075605,
            0.00031262150150723755,
            0.0003485776833258569,
            0.00031262150150723755,
            0.0003485776833258569,
            0.00026716856518760324,
            0.004691733978688717
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many pets have a greater weight than 5?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Pets.PetID",
            "select count(*), Pets.PetID",
            "select count(*), Pets.PetType"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Pets",
        "table_candidates": [
            "Pets"
        ],
        "align_scores": [
            0.9880241751670837,
            0.0007209816831164062,
            0.0003117396554443985,
            0.00034550591954030097,
            0.0003117396554443985,
            0.00034550591954030097,
            0.00025807309430092573,
            0.0030874062795192003
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many pets have a greater weight than 8?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Pets.PetID",
            "select count(*), Pets.PetID",
            "select count(*), Pets.PetType"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Pets",
        "table_candidates": [
            "Pets"
        ],
        "align_scores": [
            0.9892081618309021,
            0.0007210868061520159,
            0.000328506575897336,
            0.00036503837327472866,
            0.000328506575897336,
            0.00036503837327472866,
            0.0002733435248956084,
            0.004291668999940157
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many pets have a greater weight than 13?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Pets.PetID",
            "select count(*), Pets.PetID",
            "select count(*), Pets.PetType"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Pets",
        "table_candidates": [
            "Pets"
        ],
        "align_scores": [
            0.989638090133667,
            0.0007654170040041208,
            0.00032606287277303636,
            0.0003580831689760089,
            0.00032606287277303636,
            0.0003580831689760089,
            0.0002766612742561847,
            0.006201053969562054
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many pets have a greater weight than 9?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Pets.PetID",
            "select count(*), Pets.PetID",
            "select count(*), Pets.PetType"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Pets",
        "table_candidates": [
            "Pets"
        ],
        "align_scores": [
            0.987589955329895,
            0.0007916220929473639,
            0.0003134281432721764,
            0.0003483866748865694,
            0.0003134281432721764,
            0.0003483866748865694,
            0.0002707343373913318,
            0.005062383133918047
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the id and weight of all pets whose age is older than 2.",
        "gold_select": "select Pets.PetID, Pets.weight",
        "select_candidates": [
            "select Pets.PetID, Pets.weight",
            "select Pets.PetID, Pets.weight.",
            "select Pets.PetID, Pets.weight)",
            "select Pets.PetID, Pets.weight,"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Pets",
        "table_candidates": [
            "Pets"
        ],
        "align_scores": [
            0.9576169848442078,
            0.00015772627375554293,
            0.004451243672519922,
            9.775371290743351e-05,
            0.0013031214475631714,
            9.365207370137796e-05,
            0.003520344151183963,
            7.183964044088498e-05
        ],
        "align_select": "select Pets.PetID, Pets.weight",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the id and weight of every pet who is older than 2?",
        "gold_select": "select Pets.PetID, Pets.weight",
        "select_candidates": [
            "select Pets.PetID, Pets.weight",
            "select Pets.PetID, Pets.weight.",
            "select Pets.PetID, Pets.weight)",
            "select Pets.PetID, Pets.weight,"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Pets",
        "table_candidates": [
            "Pets"
        ],
        "align_scores": [
            0.6889837384223938,
            0.00027238199254497886,
            0.0036005994770675898,
            0.00013547141861636192,
            0.0015880173305049539,
            0.00014762293722014874,
            0.002961964113637805,
            8.608573989477009e-05
        ],
        "align_select": "select Pets.PetID, Pets.weight",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which distinct car models are the produced after 1974?",
        "gold_select": "select distinct model_list.Model",
        "select_candidates": [
            "select distinct car_names.Model",
            "select distinct car_names.Model, car_names.Make",
            "select distinct car_names.Model",
            "select distinct car_names.Model, model_list.Model"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "model_list car_names cars_data",
        "table_candidates": [
            "model_list car_names",
            "car_names",
            "car_makers model_list car_names",
            "model_list car_names cars_data",
            "car_makers car_names",
            "car_names cars_data",
            "countries car_names",
            "car_makers car_names cars_data"
        ],
        "align_scores": [
            0.9875386953353882,
            0.006777443923056126,
            0.0001705774775473401,
            0.00013263609434943646,
            0.9875386953353882,
            0.006777443923056126,
            0.00017689974629320204,
            9.711502934806049e-05
        ],
        "align_select": "select distinct car_names.Model",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which distinct car models are the produced after 1979?",
        "gold_select": "select distinct model_list.Model",
        "select_candidates": [
            "select distinct car_names.Model",
            "select distinct car_names.Model, car_names.Make",
            "select distinct car_names.Model",
            "select distinct car_names.Model/car_names.Model"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "model_list car_names cars_data",
        "table_candidates": [
            "car_names",
            "model_list car_names",
            "car_makers model_list car_names",
            "car_makers car_names",
            "model_list car_names cars_data",
            "car_names cars_data",
            "countries car_names"
        ],
        "align_scores": [
            0.9867464900016785,
            0.006109616253525019,
            0.00016929014236666262,
            0.00013418013986665756,
            0.9867464900016785,
            0.006109616253525019,
            0.000363698200089857,
            0.00011960006668232381
        ],
        "align_select": "select distinct car_names.Model",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which distinct car models are the produced after 1977?",
        "gold_select": "select distinct model_list.Model",
        "select_candidates": [
            "select distinct car_names.Model",
            "select distinct car_names.Model, car_names.Make",
            "select distinct car_names.Model",
            "select distinct car_names.Model/car_names.Model"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "model_list car_names cars_data",
        "table_candidates": [
            "car_names",
            "model_list car_names",
            "car_makers model_list car_names",
            "model_list car_names cars_data",
            "car_makers car_names",
            "car_names cars_data",
            "countries car_names",
            "car_makers car_names cars_data"
        ],
        "align_scores": [
            0.9880713224411011,
            0.006926954723894596,
            0.00017299216415267438,
            0.00013439296162687242,
            0.9880713224411011,
            0.006926954723894596,
            0.0003719278611242771,
            0.0001212813876918517
        ],
        "align_select": "select distinct car_names.Model",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which distinct car models are the produced after 1976?",
        "gold_select": "select distinct model_list.Model",
        "select_candidates": [
            "select distinct car_names.Model",
            "select distinct car_names.Model, car_names.Make",
            "select distinct car_names.Model",
            "select distinct car_names.Model/car_names.Model"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "model_list car_names cars_data",
        "table_candidates": [
            "model_list car_names",
            "car_names",
            "car_makers model_list car_names",
            "model_list car_names cars_data",
            "car_names cars_data",
            "car_makers car_names",
            "car_makers car_names cars_data",
            "countries car_names"
        ],
        "align_scores": [
            0.9871625304222107,
            0.007335884962230921,
            0.00017329065303783864,
            0.00013740951544605196,
            0.9871625304222107,
            0.007335884962230921,
            0.0003752929624170065,
            0.00012353173224255443
        ],
        "align_select": "select distinct car_names.Model",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which distinct car models are the produced after 1978?",
        "gold_select": "select distinct model_list.Model",
        "select_candidates": [
            "select distinct car_names.Model",
            "select distinct car_names.Model, car_names.Make",
            "select distinct car_names.Model",
            "select distinct car_names.Model, car_names.MakeId"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "model_list car_names cars_data",
        "table_candidates": [
            "car_names",
            "model_list car_names",
            "car_makers model_list car_names",
            "model_list car_names cars_data",
            "car_makers car_names",
            "car_names cars_data",
            "countries car_names"
        ],
        "align_scores": [
            0.9877667427062988,
            0.007186837028712034,
            0.00017226841009687632,
            0.00013296050019562244,
            0.9877667427062988,
            0.007186837028712034,
            0.00015656887262593955,
            0.0001306244812440127
        ],
        "align_select": "select distinct car_names.Model",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the different models for the cards produced after 1974?",
        "gold_select": "select distinct model_list.Model",
        "select_candidates": [
            "select distinct model_list.Model",
            "select distinct model_list.Model, model_list.ModelId",
            "select distinct model_list.Model, t3.c3",
            "select distinct model_list.Model, model_list.Maker"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "model_list car_names cars_data",
        "table_candidates": [
            "model_list cars_data",
            "model_list car_names"
        ],
        "align_scores": [
            0.9945269227027893,
            0.00012074459664290771,
            0.00020979186228942126,
            7.232672214740887e-05,
            0.00038561542169190943,
            7.90275662438944e-05,
            0.0001273968955501914,
            6.937025318620726e-05
        ],
        "align_select": "select distinct model_list.Model",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the different models for the cards produced after 1979?",
        "gold_select": "select distinct model_list.Model",
        "select_candidates": [
            "select distinct model_list.Model",
            "select distinct model_list.Model, model_list.ModelId",
            "select distinct model_list.Model, t3.c3",
            "select distinct model_list.Model.c2"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "model_list car_names cars_data",
        "table_candidates": [
            "model_list cars_data",
            "model_list car_names",
            "model_list"
        ],
        "align_scores": [
            0.9945959448814392,
            0.00012216456525493413,
            0.00020744251378346235,
            7.268314948305488e-05,
            0.0003697164647746831,
            7.70497354096733e-05,
            0.001002706354483962,
            8.897414227249101e-05
        ],
        "align_select": "select distinct model_list.Model",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the different models for the cards produced after 1977?",
        "gold_select": "select distinct model_list.Model",
        "select_candidates": [
            "select distinct model_list.Model",
            "select distinct model_list.Model, model_list.ModelId",
            "select distinct model_list.Model, t3.c3",
            "select distinct model_list.Model.c2"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "model_list car_names cars_data",
        "table_candidates": [
            "model_list cars_data",
            "model_list car_names"
        ],
        "align_scores": [
            0.9944989085197449,
            0.0001268251653527841,
            0.0002110425557475537,
            7.374708366114646e-05,
            0.0003658061323221773,
            7.845884101698175e-05,
            0.0009553522686474025,
            9.109554230235517e-05
        ],
        "align_select": "select distinct model_list.Model",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the different models for the cards produced after 1976?",
        "gold_select": "select distinct model_list.Model",
        "select_candidates": [
            "select distinct model_list.Model",
            "select distinct model_list.Model, model_list.ModelId",
            "select distinct model_list.Model, t3.c3",
            "select distinct model_list.Model.c2"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "model_list car_names cars_data",
        "table_candidates": [
            "model_list cars_data",
            "model_list car_names"
        ],
        "align_scores": [
            0.9945947527885437,
            0.00012422951112966985,
            0.00021358838421292603,
            7.315885159187019e-05,
            0.00035913713509216905,
            7.763036410324275e-05,
            0.0010167829459533095,
            9.05154665815644e-05
        ],
        "align_select": "select distinct model_list.Model",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the different models for the cards produced after 1978?",
        "gold_select": "select distinct model_list.Model",
        "select_candidates": [
            "select distinct model_list.Model",
            "select distinct model_list.Model, model_list.ModelId",
            "select distinct model_list.Model, t3.c3",
            "select distinct model_list.Model.c2"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "model_list car_names cars_data",
        "table_candidates": [
            "model_list cars_data",
            "model_list car_names",
            "model_list"
        ],
        "align_scores": [
            0.9945979118347168,
            0.00012634764425456524,
            0.00021377703524194658,
            7.35364155843854e-05,
            0.00037228030851110816,
            7.868053944548592e-05,
            0.0009293960174545646,
            9.138979658018798e-05
        ],
        "align_select": "select distinct model_list.Model",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the average miles per gallon(mpg) of the cars with 3 cylinders?",
        "gold_select": "select avg(cars_data.MPG)",
        "select_candidates": [
            "select avg(cars_data.MPG)",
            "select an avg(cars_data.MPG)",
            "select  avg(cars_data.MPG)",
            "select avg(cars_data.MPG)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data"
        ],
        "align_scores": [
            0.9958523511886597,
            0.00011096359958173707,
            0.00040281456313095987,
            0.00010880089394049719,
            0.9958523511886597,
            0.00011096359958173707,
            0.9958523511886597,
            0.00011096359958173707
        ],
        "align_select": "select avg(cars_data.MPG)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the average miles per gallon(mpg) of the cars with 5 cylinders?",
        "gold_select": "select avg(cars_data.MPG)",
        "select_candidates": [
            "select avg(cars_data.MPG)",
            "select an avg(cars_data.MPG)",
            "select  avg(cars_data.MPG)",
            "select avg(cars_data.MPG)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data"
        ],
        "align_scores": [
            0.9956737160682678,
            0.00010808304068632424,
            0.0004002927162218839,
            0.00010760392615338787,
            0.9956737160682678,
            0.00010808304068632424,
            0.9956737160682678,
            0.00010808304068632424
        ],
        "align_select": "select avg(cars_data.MPG)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the average miles per gallon(mpg) of the cars with 10 cylinders?",
        "gold_select": "select avg(cars_data.MPG)",
        "select_candidates": [
            "select avg(cars_data.MPG)",
            "select an avg(cars_data.MPG)",
            "select  avg(cars_data.MPG)",
            "select avg(cars_data.MPG)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data"
        ],
        "align_scores": [
            0.9951398372650146,
            0.00010360850865254179,
            0.00038564609712921083,
            0.0001045804747263901,
            0.9951398372650146,
            0.00010360850865254179,
            0.9951398372650146,
            0.00010360850865254179
        ],
        "align_select": "select avg(cars_data.MPG)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the average miles per gallon(mpg) of the cars with 6 cylinders?",
        "gold_select": "select avg(cars_data.MPG)",
        "select_candidates": [
            "select avg(cars_data.MPG)",
            "select an avg(cars_data.MPG)",
            "select  avg(cars_data.MPG)",
            "select avg(cars_data.MPG)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data"
        ],
        "align_scores": [
            0.9955289959907532,
            0.00010134406329598278,
            0.0003898566646967083,
            0.00010268013284076005,
            0.9955289959907532,
            0.00010134406329598278,
            0.9955289959907532,
            0.00010134406329598278
        ],
        "align_select": "select avg(cars_data.MPG)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the average miles per gallon(mpg) of the cars with 13 cylinders?",
        "gold_select": "select avg(cars_data.MPG)",
        "select_candidates": [
            "select avg(cars_data.MPG)",
            "select  avg(cars_data.MPG)",
            "select an avg(cars_data.MPG)",
            "select avg(cars_data.MPG)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data"
        ],
        "align_scores": [
            0.9949782490730286,
            0.00010414020653115585,
            0.9949782490730286,
            0.00010414020653115585,
            0.0003874172398354858,
            0.00010597345681162551,
            0.9949782490730286,
            0.00010414020653115585
        ],
        "align_select": "select avg(cars_data.MPG)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the average miles per gallon of all the cards with 3 cylinders?",
        "gold_select": "select avg(cars_data.MPG)",
        "select_candidates": [
            "select avg(cars_data.MPG)",
            "select an avg(cars_data.MPG)",
            "select avg(avg(cars_data.MPG)",
            "select  avg(cars_data.MPG)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data"
        ],
        "align_scores": [
            0.9953992962837219,
            0.001004131161607802,
            0.00041332870023325086,
            0.00017961222329176962,
            0.0005063030403107405,
            0.00017888701404444873,
            0.9953992962837219,
            0.001004131161607802
        ],
        "align_select": "select avg(cars_data.MPG)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the average miles per gallon of all the cards with 5 cylinders?",
        "gold_select": "select avg(cars_data.MPG)",
        "select_candidates": [
            "select avg(cars_data.MPG)",
            "select an avg(cars_data.MPG)",
            "select avg(avg(cars_data.MPG)",
            "select  avg(cars_data.MPG)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data"
        ],
        "align_scores": [
            0.9952489733695984,
            0.000728544604498893,
            0.0004005709779448807,
            0.00016976440383587033,
            0.0004944290267303586,
            0.00017148142796941102,
            0.9952489733695984,
            0.000728544604498893
        ],
        "align_select": "select avg(cars_data.MPG)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the average miles per gallon of all the cards with 10 cylinders?",
        "gold_select": "select avg(cars_data.MPG)",
        "select_candidates": [
            "select avg(cars_data.MPG)",
            "select an avg(cars_data.MPG)",
            "select avg(avg(cars_data.MPG)",
            "select  avg(cars_data.MPG)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data"
        ],
        "align_scores": [
            0.9947860240936279,
            0.0005566451582126319,
            0.00039284161175601184,
            0.00014747367822565138,
            0.0005091909551993012,
            0.0001502587547292933,
            0.9947860240936279,
            0.0005566451582126319
        ],
        "align_select": "select avg(cars_data.MPG)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the average miles per gallon of all the cards with 6 cylinders?",
        "gold_select": "select avg(cars_data.MPG)",
        "select_candidates": [
            "select avg(cars_data.MPG)",
            "select an avg(cars_data.MPG)",
            "select avg(avg(cars_data.MPG)",
            "select  avg(cars_data.MPG)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data"
        ],
        "align_scores": [
            0.9953280687332153,
            8.731678099138662e-05,
            0.0003902225289493799,
            9.33581031858921e-05,
            0.0004685778694692999,
            7.983820250956342e-05,
            0.9953280687332153,
            8.731678099138662e-05
        ],
        "align_select": "select avg(cars_data.MPG)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the average miles per gallon of all the cards with 13 cylinders?",
        "gold_select": "select avg(cars_data.MPG)",
        "select_candidates": [
            "select avg(cars_data.MPG)",
            "select avg(avg(cars_data.MPG)",
            "select an avg(cars_data.MPG)",
            "select  avg(cars_data.MPG)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data"
        ],
        "align_scores": [
            0.9946883916854858,
            0.0001220019330503419,
            0.0004889856209047139,
            8.472793706459925e-05,
            0.000392553600249812,
            0.00010721218859544024,
            0.9946883916854858,
            0.0001220019330503419
        ],
        "align_select": "select avg(cars_data.MPG)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the smallest weight of the car produced with 8 cylinders on 1984?",
        "gold_select": "select min(cars_data.Weight)",
        "select_candidates": [
            "select min(cars_data.Weight)",
            "select min(cars_data.Weight), cars_data.Year",
            "select min(cars_data.Weight), cars_data.Accelerate",
            "select min(cars_data.Weight), cars_data.Cylinders"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data",
            "car_names cars_data",
            "model_list cars_data",
            "car_makers cars_data"
        ],
        "align_scores": [
            0.9942156672477722,
            9.526027861284092e-05,
            0.00012737419456243515,
            5.986822725390084e-05,
            0.00013579645019490272,
            5.659931048285216e-05,
            0.00016141154628712684,
            6.023082823958248e-05
        ],
        "align_select": "select min(cars_data.Weight)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the smallest weight of the car produced with 8 cylinders on 1978?",
        "gold_select": "select min(cars_data.Weight)",
        "select_candidates": [
            "select min(cars_data.Weight)",
            "select min(cars_data.Weight), cars_data.Accelerate",
            "select min(cars_data.Weight), cars_data.Cylinders",
            "select min(cars_data.Weight), cars_data.Year"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data",
            "car_names cars_data",
            "model_list cars_data",
            "car_makers cars_data"
        ],
        "align_scores": [
            0.9938794374465942,
            0.000100887511507608,
            0.0001381630136165768,
            5.6733002566033974e-05,
            0.00016149126167874783,
            6.141788617242128e-05,
            0.00012529031664598733,
            5.975358726573177e-05
        ],
        "align_select": "select min(cars_data.Weight)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the smallest weight of the car produced with 8 cylinders on 1968?",
        "gold_select": "select min(cars_data.Weight)",
        "select_candidates": [
            "select min(cars_data.Weight)",
            "select min(cars_data.Weight), cars_data.Accelerate",
            "select min(cars_data.Weight), cars_data.Cylinders",
            "select min(cars_data.Weight), cars_data.Year"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data",
            "car_names cars_data",
            "model_list cars_data",
            "car_makers cars_data"
        ],
        "align_scores": [
            0.993767261505127,
            9.789747127797455e-05,
            0.00013809610391035676,
            5.706169758923352e-05,
            0.00016126062837429345,
            6.188326369738206e-05,
            0.0001262556470464915,
            6.048690920579247e-05
        ],
        "align_select": "select min(cars_data.Weight)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the smallest weight of the car produced with 8 cylinders on 1973?",
        "gold_select": "select min(cars_data.Weight)",
        "select_candidates": [
            "select min(cars_data.Weight)",
            "select min(cars_data.Weight), cars_data.Year",
            "select min(cars_data.Weight), cars_data.Accelerate",
            "select min(cars_data.Weight), cars_data.Cylinders"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data",
            "car_names cars_data",
            "model_list cars_data",
            "car_makers cars_data"
        ],
        "align_scores": [
            0.9935064315795898,
            0.00010427853703731671,
            0.00012706035340670496,
            5.98811348027084e-05,
            0.00013794108235742897,
            5.715461156796664e-05,
            0.00015840660489629954,
            6.151406705612317e-05
        ],
        "align_select": "select min(cars_data.Weight)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the smallest weight of the car produced with 8 cylinders on 1981?",
        "gold_select": "select min(cars_data.Weight)",
        "select_candidates": [
            "select min(cars_data.Weight)",
            "select min(cars_data.Weight), cars_data.Year",
            "select min(cars_data.Weight), cars_data.Accelerate",
            "select min(cars_data.Weight), cars_data.Cylinders"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data",
            "car_names cars_data",
            "model_list cars_data",
            "car_makers cars_data"
        ],
        "align_scores": [
            0.9938758015632629,
            0.00010080278298119083,
            0.00012583231728058308,
            5.920261173741892e-05,
            0.0001384077622788027,
            5.6177788792410865e-05,
            0.00016032920393627137,
            6.116561417002231e-05
        ],
        "align_select": "select min(cars_data.Weight)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the smallest weight of the car produced with 17 cylinders on 1974?",
        "gold_select": "select min(cars_data.Weight)",
        "select_candidates": [
            "select min(cars_data.Weight)",
            "select min(cars_data.Weight), cars_data.Accelerate",
            "select min(cars_data.Weight), cars_data.Year",
            "select min(cars_data.Weight), cars_data.Cylinders"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data",
            "car_names cars_data",
            "model_list cars_data",
            "car_makers cars_data"
        ],
        "align_scores": [
            0.9937496185302734,
            0.00010790191299747676,
            0.00013612302427645773,
            5.657405563397333e-05,
            0.00012158233585068956,
            5.817920100525953e-05,
            0.0001813897251849994,
            6.104592466726899e-05
        ],
        "align_select": "select min(cars_data.Weight)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the smallest weight of the car produced with 3 cylinders on 1974?",
        "gold_select": "select min(cars_data.Weight)",
        "select_candidates": [
            "select min(cars_data.Weight)",
            "select min(cars_data.Weight), cars_data.Cylinders",
            "select min(cars_data.Weight), cars_data.Accelerate",
            "select min(cars_data.Weight), cars_data.Year"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data",
            "model_list cars_data",
            "car_names cars_data",
            "car_makers cars_data"
        ],
        "align_scores": [
            0.9942060708999634,
            9.281201346311718e-05,
            0.00015641219215467572,
            6.033418685547076e-05,
            0.0001374716666759923,
            5.701916597899981e-05,
            0.0001229691260959953,
            5.9522233641473576e-05
        ],
        "align_select": "select min(cars_data.Weight)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the smallest weight of the car produced with 7 cylinders on 1974?",
        "gold_select": "select min(cars_data.Weight)",
        "select_candidates": [
            "select min(cars_data.Weight)",
            "select min(cars_data.Weight), cars_data.Year",
            "select min(cars_data.Weight), cars_data.Cylinders",
            "select min(cars_data.Weight), cars_data.Accelerate"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data",
            "car_names cars_data",
            "model_list cars_data",
            "car_makers cars_data"
        ],
        "align_scores": [
            0.9941838383674622,
            0.00010228600149275735,
            0.0001248934568138793,
            5.9471847634995356e-05,
            0.00016881928604561836,
            6.11969517194666e-05,
            0.00013475277228280902,
            5.639910159516148e-05
        ],
        "align_select": "select min(cars_data.Weight)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the smallest weight of the car produced with 5 cylinders on 1974?",
        "gold_select": "select min(cars_data.Weight)",
        "select_candidates": [
            "select min(cars_data.Weight)",
            "select min(cars_data.Weight), cars_data.Accelerate",
            "select min(cars_data.Weight), cars_data.Year",
            "select min(cars_data.Weight), cars_data.Cylinders"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data",
            "car_names cars_data",
            "model_list cars_data",
            "car_makers cars_data"
        ],
        "align_scores": [
            0.9940962791442871,
            9.947765647666529e-05,
            0.0001358092704322189,
            5.618587965727784e-05,
            0.00012400923878885806,
            5.9166042774450034e-05,
            0.00015839604020584375,
            6.0606715123867616e-05
        ],
        "align_select": "select min(cars_data.Weight)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the smallest weight of the car produced with 9 cylinders on 1974?",
        "gold_select": "select min(cars_data.Weight)",
        "select_candidates": [
            "select min(cars_data.Weight)",
            "select min(cars_data.Weight), cars_data.Accelerate",
            "select min(cars_data.Weight), cars_data.Year",
            "select min(cars_data.Weight), cars_data.Cylinders"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data",
            "car_names cars_data",
            "model_list cars_data",
            "car_makers cars_data"
        ],
        "align_scores": [
            0.9941211342811584,
            0.00010280328569933772,
            0.00013382518955040723,
            5.633534965454601e-05,
            0.0001246414758497849,
            5.903753844904713e-05,
            0.00016923717339523137,
            6.078074875404127e-05
        ],
        "align_select": "select min(cars_data.Weight)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the minimum weight of the car with 8 cylinders produced in 1984?",
        "gold_select": "select min(cars_data.Weight)",
        "select_candidates": [
            "select min(cars_data.Weight)",
            "select min(cars_data.Weight), cars_data.Year",
            "select min(cars_data.Weight), cars_data.Accelerate",
            "select min(cars_data.Weight), cars_data.Cylinders"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data",
            "car_names cars_data",
            "model_list cars_data",
            "car_makers cars_data"
        ],
        "align_scores": [
            0.992833137512207,
            9.065461927093565e-05,
            0.00013131923333276063,
            6.15541503066197e-05,
            0.00014645363262388855,
            6.0455480706878006e-05,
            0.00018666041432879865,
            6.242701783776283e-05
        ],
        "align_select": "select min(cars_data.Weight)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the minimum weight of the car with 8 cylinders produced in 1978?",
        "gold_select": "select min(cars_data.Weight)",
        "select_candidates": [
            "select min(cars_data.Weight)",
            "select min(cars_data.Weight), cars_data.Year",
            "select min(cars_data.Weight), cars_data.Accelerate",
            "select min(cars_data.Weight), cars_data.Cylinders"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data",
            "car_names cars_data",
            "model_list cars_data",
            "car_makers cars_data"
        ],
        "align_scores": [
            0.9925796389579773,
            9.1140806034673e-05,
            0.00013181277608964592,
            6.185918755363673e-05,
            0.0001458980405004695,
            5.975141903036274e-05,
            0.00018329946033190936,
            6.25646353000775e-05
        ],
        "align_select": "select min(cars_data.Weight)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the minimum weight of the car with 8 cylinders produced in 1968?",
        "gold_select": "select min(cars_data.Weight)",
        "select_candidates": [
            "select min(cars_data.Weight)",
            "select min(cars_data.Weight), cars_data.Year",
            "select min(cars_data.Weight), cars_data.Accelerate",
            "select min(cars_data.Weight), cars_data.Cylinders"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data",
            "car_names cars_data",
            "model_list cars_data",
            "car_makers cars_data"
        ],
        "align_scores": [
            0.9924435019493103,
            8.877089567249641e-05,
            0.00013081768702249974,
            6.195239984663203e-05,
            0.00014387383998837322,
            6.0023947298759595e-05,
            0.0001813798735383898,
            6.253307219594717e-05
        ],
        "align_select": "select min(cars_data.Weight)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the minimum weight of the car with 8 cylinders produced in 1973?",
        "gold_select": "select min(cars_data.Weight)",
        "select_candidates": [
            "select min(cars_data.Weight)",
            "select min(cars_data.Weight), cars_data.Year",
            "select min(cars_data.Weight), cars_data.Accelerate",
            "select min(cars_data.Weight), cars_data.Cylinders"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data",
            "car_names cars_data",
            "model_list cars_data",
            "car_makers cars_data"
        ],
        "align_scores": [
            0.992159903049469,
            9.212618169840425e-05,
            0.00013235134247224778,
            6.169582047732547e-05,
            0.00014596956316381693,
            6.020223008817993e-05,
            0.0001833494461607188,
            6.25855172984302e-05
        ],
        "align_select": "select min(cars_data.Weight)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the minimum weight of the car with 8 cylinders produced in 1981?",
        "gold_select": "select min(cars_data.Weight)",
        "select_candidates": [
            "select min(cars_data.Weight)",
            "select min(cars_data.Weight), cars_data.Year",
            "select min(cars_data.Weight), cars_data.Accelerate",
            "select min(cars_data.Weight), cars_data.Cylinders"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data",
            "car_names cars_data",
            "model_list cars_data",
            "car_makers cars_data"
        ],
        "align_scores": [
            0.9923765063285828,
            9.024889004649594e-05,
            0.00013016382581554353,
            6.135810690466315e-05,
            0.00014593423111364245,
            5.9484722441993654e-05,
            0.0001821415644371882,
            6.232762825675309e-05
        ],
        "align_select": "select min(cars_data.Weight)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the minimum weight of the car with 17 cylinders produced in 1974?",
        "gold_select": "select min(cars_data.Weight)",
        "select_candidates": [
            "select min(cars_data.Weight)",
            "select min(cars_data.Weight), cars_data.Year",
            "select min(cars_data.Weight), cars_data.Accelerate",
            "select min(cars_data.Weight), cars_data.Cylinders"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data",
            "car_names cars_data",
            "model_list cars_data",
            "car_makers cars_data"
        ],
        "align_scores": [
            0.9927546381950378,
            9.746461000759155e-05,
            0.00012915370461996645,
            6.061543172108941e-05,
            0.00014503141574095935,
            5.9649402828654274e-05,
            0.00020855093316640705,
            6.315935024758801e-05
        ],
        "align_select": "select min(cars_data.Weight)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the minimum weight of the car with 3 cylinders produced in 1974?",
        "gold_select": "select min(cars_data.Weight)",
        "select_candidates": [
            "select min(cars_data.Weight)",
            "select min(cars_data.Weight), cars_data.Year",
            "select min(cars_data.Weight), cars_data.Accelerate",
            "select min(cars_data.Weight), cars_data.Cylinders"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data",
            "model_list cars_data",
            "car_names cars_data",
            "car_makers cars_data"
        ],
        "align_scores": [
            0.9929581880569458,
            8.520321716787294e-05,
            0.00012974991113878787,
            6.127577944425866e-05,
            0.00014207484491635114,
            6.012024823576212e-05,
            0.00017631272203288972,
            6.245858094189316e-05
        ],
        "align_select": "select min(cars_data.Weight)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the minimum weight of the car with 7 cylinders produced in 1974?",
        "gold_select": "select min(cars_data.Weight)",
        "select_candidates": [
            "select min(cars_data.Weight)",
            "select min(cars_data.Weight), cars_data.Year",
            "select min(cars_data.Weight), cars_data.Accelerate",
            "select min(cars_data.Weight), cars_data.Cylinders"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data",
            "car_names cars_data",
            "model_list cars_data",
            "car_makers cars_data"
        ],
        "align_scores": [
            0.993463397026062,
            9.456463885726407e-05,
            0.00013262420543469489,
            6.15358367213048e-05,
            0.0001425991504220292,
            5.999121640343219e-05,
            0.0001944818504853174,
            6.316621147561818e-05
        ],
        "align_select": "select min(cars_data.Weight)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the minimum weight of the car with 5 cylinders produced in 1974?",
        "gold_select": "select min(cars_data.Weight)",
        "select_candidates": [
            "select min(cars_data.Weight)",
            "select min(cars_data.Weight), cars_data.Year",
            "select min(cars_data.Weight), cars_data.Accelerate",
            "select min(cars_data.Weight), cars_data.Cylinders"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data",
            "car_names cars_data",
            "model_list cars_data",
            "car_makers cars_data"
        ],
        "align_scores": [
            0.9926536083221436,
            8.906656876206398e-05,
            0.00013030886475462466,
            6.119712634244934e-05,
            0.00014103336434345692,
            5.96249446971342e-05,
            0.0001821960904635489,
            6.233053863979876e-05
        ],
        "align_select": "select min(cars_data.Weight)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the minimum weight of the car with 9 cylinders produced in 1974?",
        "gold_select": "select min(cars_data.Weight)",
        "select_candidates": [
            "select min(cars_data.Weight)",
            "select min(cars_data.Weight), cars_data.Year",
            "select min(cars_data.Weight), cars_data.Accelerate",
            "select min(cars_data.Weight), cars_data.Cylinders"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data",
            "car_names cars_data",
            "model_list cars_data",
            "car_makers cars_data"
        ],
        "align_scores": [
            0.9937881827354431,
            9.463699097977951e-05,
            0.00012998099555261433,
            6.079437298467383e-05,
            0.00014115270460024476,
            5.9465608501341194e-05,
            0.0001929692371049896,
            6.268807919695973e-05
        ],
        "align_select": "select min(cars_data.Weight)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the number of the cars with horsepower more than 160?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), cars_data.Id",
            "select count(*), t5.dcars_data.Id",
            "select count(*) (cars_data.Id)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data",
            "car_names cars_data",
            "model_list cars_data"
        ],
        "align_scores": [
            0.9944139719009399,
            0.00014558427210431546,
            0.00022918134345673025,
            0.0062443651258945465,
            0.00021635089069604874,
            0.0012835976667702198,
            0.0003296375507488847,
            0.0003773180360440165
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the number of the cars with horsepower more than 154?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), cars_data.Id",
            "select count(*), t5.dcars_data.Id",
            "select count(*) dependant on cars_data.Id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data",
            "car_names cars_data",
            "model_list cars_data"
        ],
        "align_scores": [
            0.9943887591362,
            0.000173944907146506,
            0.00023033448087517172,
            0.006729806773364544,
            0.00021951067901682109,
            0.00146116700489074,
            0.00041748222429305315,
            0.0015071514062583447
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the number of the cars with horsepower more than 144?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), cars_data.Id",
            "select count(*), t5.dcars_data.Id",
            "select count(*), cars_data.MPG, cars_data.Cylinders"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data"
        ],
        "align_scores": [
            0.9942130446434021,
            6.107725494075567e-05,
            0.0002289216499775648,
            5.4227948567131534e-05,
            0.00022045979858376086,
            5.571485962718725e-05,
            0.00011317566531943157,
            5.578876152867451e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the number of the cars with horsepower more than 149?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), cars_data.Id",
            "select count(*), t5.dcars_data.Id",
            "select count(*), cars_data.Id, cars_data.Edispl"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data",
            "car_names cars_data",
            "model_list cars_data"
        ],
        "align_scores": [
            0.9943978786468506,
            0.00017560689593665302,
            0.00022860670287627727,
            0.006220090202987194,
            0.00021778020891360939,
            0.0014202265301719308,
            0.00013649006723426282,
            0.0002384291437920183
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the number of the cars with horsepower more than 157?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), cars_data.Id",
            "select count(*), t5.dcars_data.Id",
            "select count(*) dependant on cars_data.Id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data"
        ],
        "align_scores": [
            0.9942674040794373,
            0.0001472760777687654,
            0.0002299298794241622,
            0.006301333196461201,
            0.00021888680930715054,
            0.001444025314413011,
            0.0004112948663532734,
            0.0014698052546009421
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the number of cars with a horsepower greater than 160?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), cars_data.Id",
            "select count(*) dependant on cars_data.Id",
            "select count(*), t5.dcars_data.Id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data"
        ],
        "align_scores": [
            0.9923591017723083,
            0.00013637922529596835,
            0.000225861047510989,
            0.0010422082850709558,
            0.00035717658465728164,
            0.00042429222958162427,
            0.00020470062736421824,
            0.0003999570617452264
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the number of cars with a horsepower greater than 154?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), cars_data.Id",
            "select count(*), cars_data.MPG, cars_data.Cylinders",
            "select count(*), t5.datum(cars_data.Id)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data"
        ],
        "align_scores": [
            0.9926846027374268,
            6.119747558841482e-05,
            0.00022351928055286407,
            5.4219730373006314e-05,
            0.00011225431808270514,
            5.732709905714728e-05,
            0.00021098020079080015,
            5.8591427659848705e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the number of cars with a horsepower greater than 144?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), cars_data.Id",
            "select count(*), cars_data.MPG, cars_data.Cylinders",
            "select count(*), cars_data.Id, cars_data.MPG"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data"
        ],
        "align_scores": [
            0.9925894737243652,
            6.117681186879054e-05,
            0.0002271271514473483,
            5.402808528742753e-05,
            0.00011176481348229572,
            5.5221877119038254e-05,
            0.00014294071297626942,
            5.621567470370792e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the number of cars with a horsepower greater than 149?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), cars_data.Id",
            "select count(*), cars_data.MPG, cars_data.Cylinders",
            "select count(*), t5.datum(cars_data.Id)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data"
        ],
        "align_scores": [
            0.9928516745567322,
            6.0949249018449336e-05,
            0.0002237053995486349,
            5.3794472478330135e-05,
            0.00011274070857325569,
            5.714191502192989e-05,
            0.00021066780027467757,
            5.854652408743277e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the number of cars with a horsepower greater than 157?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), cars_data.Id",
            "select count(*), cars_data.MPG, cars_data.Cylinders",
            "select count(*), cars_data.Id, cars_data.MPG"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data"
        ],
        "align_scores": [
            0.9924641847610474,
            6.0063452110625803e-05,
            0.00022491633717436343,
            5.3500509238801897e-05,
            0.00011422123498050496,
            5.702579801436514e-05,
            0.00014641886809840798,
            5.6379420129815117e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the maximum horsepower and the make of the car models with 4 cylinders?",
        "gold_select": "select cars_data.Horsepower, car_names.Make",
        "select_candidates": [
            "select max(cars_data.Horsepower), car_names.Make",
            "select max(cars_data.Accelerate), car_names.Make",
            "select max(cars_data.Horsepower), cars_data.Cylinders",
            "select max(cars_data.Horsepower), car_names.Make)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "car_names cars_data",
        "table_candidates": [
            "car_names cars_data",
            "model_list car_names cars_data",
            "countries car_names cars_data",
            "car_makers cars_data",
            "continents car_names cars_data"
        ],
        "align_scores": [
            0.992495059967041,
            0.00013686699094250798,
            0.9823071360588074,
            0.00014360164641402662,
            0.0005165954353287816,
            8.302307105623186e-05,
            0.0010434631258249283,
            9.650215361034498e-05
        ],
        "align_select": "select max(cars_data.Horsepower), car_names.Make",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the maximum horsepower and the make of the car models with 5 cylinders?",
        "gold_select": "select cars_data.Horsepower, car_names.Make",
        "select_candidates": [
            "select max(cars_data.Horsepower), car_names.Make",
            "select max(cars_data.Horsepower), cars_data.Cylinders",
            "select max(cars_data.Accelerate), car_names.Make",
            "select max(cars_data.Horsepower), car_names.Make)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "car_names cars_data",
        "table_candidates": [
            "car_names cars_data",
            "model_list car_names cars_data",
            "countries car_names cars_data",
            "car_makers cars_data",
            "continents car_names cars_data"
        ],
        "align_scores": [
            0.9935017228126526,
            0.00013845897046849132,
            0.00046263664262369275,
            8.505563164362684e-05,
            0.9867196679115295,
            0.00013952041626907885,
            0.0011338983895257115,
            0.0001071342994691804
        ],
        "align_select": "select max(cars_data.Horsepower), car_names.Make",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the maximum horsepower and the make of the car models with 6 cylinders?",
        "gold_select": "select cars_data.Horsepower, car_names.Make",
        "select_candidates": [
            "select max(cars_data.Horsepower), car_names.Make",
            "select max(cars_data.Horsepower), cars_data.Cylinders",
            "select max(cars_data.Accelerate), car_names.Make",
            "select max(cars_data.Horsepower), car_names.Make)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "car_names cars_data",
        "table_candidates": [
            "car_names cars_data",
            "model_list car_names cars_data",
            "countries car_names cars_data",
            "car_makers cars_data",
            "continents car_names cars_data"
        ],
        "align_scores": [
            0.992302656173706,
            0.00013703634613193572,
            0.00044453013106249273,
            8.327211980940774e-05,
            0.981779158115387,
            0.00013333708920981735,
            0.0010326628107577562,
            9.898496500682086e-05
        ],
        "align_select": "select max(cars_data.Horsepower), car_names.Make",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the maximum horsepower and the make of the car models with 8 cylinders?",
        "gold_select": "select cars_data.Horsepower, car_names.Make",
        "select_candidates": [
            "select max(cars_data.Horsepower), car_names.Make",
            "select max(cars_data.Horsepower), cars_data.Cylinders",
            "select max(cars_data.Horsepower), car_names.Make)",
            "select max(cars_data.Accelerate), car_names.Make"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "car_names cars_data",
        "table_candidates": [
            "car_names cars_data",
            "model_list car_names cars_data",
            "countries car_names cars_data",
            "car_makers cars_data",
            "continents car_names cars_data"
        ],
        "align_scores": [
            0.9921497106552124,
            0.00013934040907770395,
            0.000461339921457693,
            8.303907088702545e-05,
            0.0010518071940168738,
            0.00010145785927306861,
            0.9796863198280334,
            0.00013485101226251572
        ],
        "align_select": "select max(cars_data.Horsepower), car_names.Make",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the largest amount of horsepower for the models with 4 cylinders and what make is it?",
        "gold_select": "select cars_data.Horsepower, car_names.Make",
        "select_candidates": [
            "select max(cars_data.Horsepower), car_names.Make",
            "select car_names.Model, car_names.Make",
            "select max(cars_data.Horsepower), car_names.Make",
            "select max(cars_data.Horsepower), car_names.Model"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_names cars_data",
        "table_candidates": [
            "car_names cars_data",
            "model_list car_names cars_data",
            "countries car_names cars_data",
            "car_makers cars_data",
            "continents car_names cars_data",
            "car_makers car_names cars_data"
        ],
        "align_scores": [
            0.0005795114557258785,
            8.338830230059102e-05,
            0.9893613457679749,
            0.00041319613228552043,
            0.0005795114557258785,
            8.338830230059102e-05,
            0.0006915276753716171,
            8.624102338217199e-05
        ],
        "align_select": "select car_names.Model, car_names.Make",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT"
    },
    {
        "question": "What is the largest amount of horsepower for the models with 5 cylinders and what make is it?",
        "gold_select": "select cars_data.Horsepower, car_names.Make",
        "select_candidates": [
            "select max(cars_data.Horsepower), car_names.Make",
            "select car_names.Model, car_names.Make",
            "select max(cars_data.Horsepower), car_names.Make",
            "select max(cars_data.Horsepower), car_names.Model"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_names cars_data",
        "table_candidates": [
            "car_names cars_data",
            "model_list car_names cars_data",
            "countries car_names cars_data",
            "car_makers cars_data",
            "continents car_names cars_data",
            "car_makers car_names cars_data"
        ],
        "align_scores": [
            0.0003857052943203598,
            9.083245095098391e-05,
            0.9883121848106384,
            0.00038954312913119793,
            0.0003857052943203598,
            9.083245095098391e-05,
            0.0004741010197903961,
            9.53698909142986e-05
        ],
        "align_select": "select car_names.Model, car_names.Make",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT"
    },
    {
        "question": "What is the largest amount of horsepower for the models with 6 cylinders and what make is it?",
        "gold_select": "select cars_data.Horsepower, car_names.Make",
        "select_candidates": [
            "select max(cars_data.Horsepower), car_names.Make",
            "select car_names.Model, car_names.Make",
            "select max(cars_data.Horsepower), car_names.Make",
            "select car_names.Make, max(cars_data.Horsepower)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_names cars_data",
        "table_candidates": [
            "car_names cars_data",
            "model_list car_names cars_data",
            "countries car_names cars_data",
            "car_makers cars_data",
            "continents car_names cars_data",
            "car_makers car_names cars_data"
        ],
        "align_scores": [
            0.0004283011076040566,
            8.640631858725101e-05,
            0.9878420829772949,
            0.0003847842162940651,
            0.0004283011076040566,
            8.640631858725101e-05,
            0.0014488566666841507,
            9.212978329742327e-05
        ],
        "align_select": "select car_names.Model, car_names.Make",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT"
    },
    {
        "question": "What is the largest amount of horsepower for the models with 8 cylinders and what make is it?",
        "gold_select": "select cars_data.Horsepower, car_names.Make",
        "select_candidates": [
            "select max(cars_data.Horsepower), car_names.Make",
            "select car_names.Model, car_names.Make",
            "select car_names.Make, max(cars_data.Horsepower)",
            "select max(cars_data.Horsepower), car_names.Make"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_names cars_data",
        "table_candidates": [
            "car_names cars_data",
            "model_list car_names cars_data",
            "countries car_names cars_data",
            "car_makers cars_data",
            "continents car_names cars_data",
            "car_makers car_names cars_data"
        ],
        "align_scores": [
            0.00036933552473783493,
            8.82673921296373e-05,
            0.9872073531150818,
            0.0003601557982619852,
            0.0011512174969539046,
            9.270941518479958e-05,
            0.00036933552473783493,
            8.82673921296373e-05
        ],
        "align_select": "select car_names.Model, car_names.Make",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT"
    },
    {
        "question": "What is the average horsepower of the cars before 1990?",
        "gold_select": "select avg(cars_data.Horsepower)",
        "select_candidates": [
            "select avg(cars_data.Horsepower)",
            "select an avg(cars_data.Horsepower)",
            "select  avg(cars_data.Horsepower)",
            "select avg(cars_data.Horsepower)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data",
            "model_list cars_data",
            "car_names cars_data",
            "car_makers cars_data"
        ],
        "align_scores": [
            0.9962054491043091,
            0.00011960929987253621,
            0.0003626868419814855,
            0.00011599585559451953,
            0.9962054491043091,
            0.00011960929987253621,
            0.9962054491043091,
            0.00011960929987253621
        ],
        "align_select": "select avg(cars_data.Horsepower)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the average horsepower of the cars before 1984?",
        "gold_select": "select avg(cars_data.Horsepower)",
        "select_candidates": [
            "select avg(cars_data.Horsepower)",
            "select an avg(cars_data.Horsepower)",
            "select avg(avg(cars_data.Horsepower)",
            "select  avg(cars_data.Horsepower)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data",
            "model_list cars_data",
            "car_names cars_data",
            "car_makers cars_data"
        ],
        "align_scores": [
            0.9962347149848938,
            0.0001243164879269898,
            0.00036238133907318115,
            0.00011996477405773476,
            0.00043251970782876015,
            0.00010219622345175594,
            0.9962347149848938,
            0.0001243164879269898
        ],
        "align_select": "select avg(cars_data.Horsepower)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the average horsepower of the cars before 1974?",
        "gold_select": "select avg(cars_data.Horsepower)",
        "select_candidates": [
            "select avg(cars_data.Horsepower)",
            "select an avg(cars_data.Horsepower)",
            "select avg(avg(cars_data.Horsepower)",
            "select  avg(cars_data.Horsepower)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data",
            "model_list cars_data",
            "car_names cars_data",
            "car_makers cars_data"
        ],
        "align_scores": [
            0.9961983561515808,
            0.00011569009075174108,
            0.00036098866257816553,
            0.00011375451140338555,
            0.0004283370217308402,
            0.00010101756197400391,
            0.9961983561515808,
            0.00011569009075174108
        ],
        "align_select": "select avg(cars_data.Horsepower)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the average horsepower of the cars before 1979?",
        "gold_select": "select avg(cars_data.Horsepower)",
        "select_candidates": [
            "select avg(cars_data.Horsepower)",
            "select an avg(cars_data.Horsepower)",
            "select avg(avg(cars_data.Horsepower)",
            "select  avg(cars_data.Horsepower)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data",
            "model_list cars_data",
            "car_names cars_data",
            "car_makers cars_data"
        ],
        "align_scores": [
            0.9962175488471985,
            0.00012106139911338687,
            0.0003591924614738673,
            0.00011699807510012761,
            0.00042021353146992624,
            0.00010259644477628171,
            0.9962175488471985,
            0.00012106139911338687
        ],
        "align_select": "select avg(cars_data.Horsepower)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the average horsepower of the cars before 1987?",
        "gold_select": "select avg(cars_data.Horsepower)",
        "select_candidates": [
            "select avg(cars_data.Horsepower)",
            "select an avg(cars_data.Horsepower)",
            "select avg(avg(cars_data.Horsepower)",
            "select  avg(cars_data.Horsepower)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data",
            "model_list cars_data",
            "car_names cars_data",
            "car_makers cars_data"
        ],
        "align_scores": [
            0.9962283372879028,
            0.00011851304589072242,
            0.00035761663457378745,
            0.00011606035695876926,
            0.00042033891077153385,
            0.00010066100367112085,
            0.9962283372879028,
            0.00011851304589072242
        ],
        "align_select": "select avg(cars_data.Horsepower)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the average horsepower for all cars produced before 1990?",
        "gold_select": "select avg(cars_data.Horsepower)",
        "select_candidates": [
            "select avg(cars_data.Horsepower)",
            "select an avg(cars_data.Horsepower)",
            "select avg(avg(cars_data.Horsepower)",
            "select  avg(cars_data.Horsepower)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data",
            "car_names cars_data",
            "model_list cars_data",
            "car_makers cars_data"
        ],
        "align_scores": [
            0.9960774779319763,
            0.00010264479351462796,
            0.0003702660324051976,
            0.00010424015636090189,
            0.00047869322588667274,
            9.491408854955807e-05,
            0.9960774779319763,
            0.00010264479351462796
        ],
        "align_select": "select avg(cars_data.Horsepower)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the average horsepower for all cars produced before 1984?",
        "gold_select": "select avg(cars_data.Horsepower)",
        "select_candidates": [
            "select avg(cars_data.Horsepower)",
            "select an avg(cars_data.Horsepower)",
            "select avg(avg(cars_data.Horsepower)",
            "select  avg(cars_data.Horsepower)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data",
            "car_names cars_data",
            "model_list cars_data",
            "car_makers cars_data"
        ],
        "align_scores": [
            0.9962179064750671,
            0.0001050700739142485,
            0.00036536456900648773,
            0.00010527204722166061,
            0.00048545838217251003,
            9.409941412741318e-05,
            0.9962179064750671,
            0.0001050700739142485
        ],
        "align_select": "select avg(cars_data.Horsepower)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the average horsepower for all cars produced before 1974?",
        "gold_select": "select avg(cars_data.Horsepower)",
        "select_candidates": [
            "select avg(cars_data.Horsepower)",
            "select an avg(cars_data.Horsepower)",
            "select avg(avg(cars_data.Horsepower)",
            "select  avg(cars_data.Horsepower)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data",
            "car_names cars_data",
            "model_list cars_data",
            "car_makers cars_data"
        ],
        "align_scores": [
            0.9961732029914856,
            0.00010199302778346464,
            0.0003707976429723203,
            0.00010374236444476992,
            0.0004858493048232049,
            9.328191663371399e-05,
            0.9961732029914856,
            0.00010199302778346464
        ],
        "align_select": "select avg(cars_data.Horsepower)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the average horsepower for all cars produced before 1979?",
        "gold_select": "select avg(cars_data.Horsepower)",
        "select_candidates": [
            "select avg(cars_data.Horsepower)",
            "select an avg(cars_data.Horsepower)",
            "select avg(avg(cars_data.Horsepower)",
            "select  avg(cars_data.Horsepower)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data",
            "car_names cars_data",
            "model_list cars_data",
            "car_makers cars_data"
        ],
        "align_scores": [
            0.9962253570556641,
            0.00010399275925010443,
            0.0003638452908489853,
            0.00010346870112698525,
            0.0004699660057667643,
            9.419977868674323e-05,
            0.9962253570556641,
            0.00010399275925010443
        ],
        "align_select": "select avg(cars_data.Horsepower)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the average horsepower for all cars produced before 1987?",
        "gold_select": "select avg(cars_data.Horsepower)",
        "select_candidates": [
            "select avg(cars_data.Horsepower)",
            "select an avg(cars_data.Horsepower)",
            "select avg(avg(cars_data.Horsepower)",
            "select  avg(cars_data.Horsepower)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data",
            "car_names cars_data",
            "model_list cars_data",
            "car_makers cars_data"
        ],
        "align_scores": [
            0.9962084293365479,
            0.00010246474266750738,
            0.00036550304503180087,
            0.00010348073556087911,
            0.00047475541941821575,
            9.289791341871023e-05,
            0.9962084293365479,
            0.00010246474266750738
        ],
        "align_select": "select avg(cars_data.Horsepower)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many cars have more than 3 cylinders?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), cars_data.Id",
            "select count(*), cars_data.Cylinders",
            "select count(*), cars_data.MPG, cars_data.Cylinders"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data"
        ],
        "align_scores": [
            0.9834790229797363,
            0.00023728955420665443,
            0.000251564517384395,
            0.005371851846575737,
            0.0002419650845695287,
            0.011912630870938301,
            0.00010646876035025343,
            7.738482963759452e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many cars have more than 5 cylinders?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), cars_data.Id",
            "select count(*), cars_data.Cylinders",
            "select count(*) (cars_data.Id)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data"
        ],
        "align_scores": [
            0.992422878742218,
            0.00022528291447088122,
            0.00025455825380049646,
            0.00527126295492053,
            0.0002542021975386888,
            0.01253992598503828,
            0.00030192011035978794,
            0.0001525553670944646
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many cars have more than 6 cylinders?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), cars_data.Id",
            "select count(*), cars_data.Cylinders",
            "select count(*) (cars_data.Id)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data"
        ],
        "align_scores": [
            0.9931835532188416,
            8.745569357415661e-05,
            0.00025500619085505605,
            7.27039368939586e-05,
            0.00025182749959640205,
            7.197033846750855e-05,
            0.0003027736092917621,
            8.18245462141931e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many cars have more than 7 cylinders?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), cars_data.Id",
            "select count(*), cars_data.Cylinders",
            "select count(*), cars_data.MPG, cars_data.Cylinders"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data"
        ],
        "align_scores": [
            0.9934402108192444,
            8.693080599186942e-05,
            0.00025665847351774573,
            7.495272438973188e-05,
            0.000258112937444821,
            7.144272240111604e-05,
            0.0001055319735314697,
            5.324094308889471e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many cars have more than 1 cylinders?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), cars_data.Id",
            "select count(*), cars_data.Cylinders",
            "select count(*) (cars_data.Id)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data"
        ],
        "align_scores": [
            0.9822313189506531,
            0.0002297308819834143,
            0.0002525228192098439,
            0.00526776909828186,
            0.00027667073300108314,
            0.01289182435721159,
            0.00033336872002109885,
            0.00016629118181299418
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the number of cars with more than 3 cylinders?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), cars_data.Id",
            "select count(*), cars_data.Cylinders",
            "select count(*), cars_data.MPG, cars_data.Cylinders"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data"
        ],
        "align_scores": [
            0.9909154772758484,
            0.00011562259896891192,
            0.00024125372874550521,
            0.0004586341092363,
            0.0002205720666097477,
            0.00500266719609499,
            0.00010082392691401765,
            7.650229963473976e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the number of cars with more than 5 cylinders?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), cars_data.Id",
            "select count(*), cars_data.Cylinders",
            "select count(*), t5.dcars_data.Id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data"
        ],
        "align_scores": [
            0.9930943250656128,
            0.00010964734246954322,
            0.000244635040871799,
            0.00036521832225844264,
            0.00022332349908538163,
            0.004997109062969685,
            0.00022431797697208822,
            0.00014732565614394844
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the number of cars with more than 6 cylinders?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), cars_data.Id",
            "select count(*), cars_data.Cylinders",
            "select count(*), cars_data.MPG, cars_data.Cylinders"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data"
        ],
        "align_scores": [
            0.9936928749084473,
            0.00010976546036545187,
            0.000249080010689795,
            0.0003353821230120957,
            0.00023008031712379307,
            0.0053790113888680935,
            0.00010305728937964886,
            7.605844439240173e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the number of cars with more than 7 cylinders?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), cars_data.Id",
            "select count(*), cars_data.Cylinders",
            "select count(*) (cars_data.Id)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data"
        ],
        "align_scores": [
            0.993826687335968,
            0.00010766449122456834,
            0.000244692899286747,
            0.0003586231032386422,
            0.00022478769824374467,
            0.004359018057584763,
            0.00027436387608759105,
            0.00011918928066734225
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the number of cars with more than 1 cylinders?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), cars_data.Cylinders",
            "select count(*), cars_data.Id",
            "select count(*) (cars_data.Id)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data"
        ],
        "align_scores": [
            0.9897339940071106,
            0.00011687229562085122,
            0.00024009557091630995,
            0.004558497108519077,
            0.0002391262532910332,
            0.0004843361384700984,
            0.0002906758454628289,
            0.0001291928783757612
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "how many cars were produced in 1974?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select cars_data.Year, count(*)",
            "select count(*), cars_data.Year",
            "select count(*), cars_data.Id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data",
            "car_names cars_data",
            "model_list cars_data",
            "countries cars_data",
            "car_makers cars_data"
        ],
        "align_scores": [
            0.9947458505630493,
            6.2910134147387e-05,
            0.0005538677214644849,
            7.43729542591609e-05,
            0.000288323441054672,
            5.9867597883567214e-05,
            0.00028124675736762583,
            5.3941126680001616e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "how many cars were produced in 1977?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select cars_data.Year, count(*)",
            "select count(*), cars_data.Year",
            "select count(*), cars_data.Id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data",
            "car_names cars_data",
            "model_list cars_data",
            "countries cars_data",
            "car_makers cars_data"
        ],
        "align_scores": [
            0.9947728514671326,
            6.149846012704074e-05,
            0.0005488895112648606,
            7.355758862104267e-05,
            0.0002875978243537247,
            6.05622808507178e-05,
            0.00028233107877895236,
            5.468848394230008e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "how many cars were produced in 1976?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select cars_data.Year, count(*)",
            "select count(*), cars_data.Year",
            "select count(*), cars_data.Id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data",
            "car_names cars_data",
            "model_list cars_data",
            "countries cars_data",
            "car_makers cars_data",
            "cars_data car_names"
        ],
        "align_scores": [
            0.9947399497032166,
            6.134938303148374e-05,
            0.0005565920728258789,
            7.217672100523487e-05,
            0.0002874920319300145,
            6.035064143361524e-05,
            0.00028001441387459636,
            5.386628981796093e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "how many cars were produced in 1978?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select cars_data.Year, count(*)",
            "select count(*), cars_data.Year",
            "select count(*), cars_data.Id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data",
            "car_names cars_data",
            "model_list cars_data",
            "countries cars_data",
            "car_makers cars_data"
        ],
        "align_scores": [
            0.9947717785835266,
            6.206516991369426e-05,
            0.000568158517125994,
            7.372718391707167e-05,
            0.00028120065690018237,
            6.028972347849049e-05,
            0.0002794810279738158,
            5.4602816817350686e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "how many cars were produced in 1975?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), cars_data.Year",
            "select cars_data.Year, count(*)",
            "select count(*), cars_data.Id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data",
            "car_names cars_data",
            "model_list cars_data",
            "countries cars_data",
            "car_makers cars_data"
        ],
        "align_scores": [
            0.9945762157440186,
            6.171182758407667e-05,
            0.0002888563903979957,
            6.181271601235494e-05,
            0.0005369692225940526,
            7.38385715521872e-05,
            0.0002855906495824456,
            5.483198765432462e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "In 1974, how many cars were made?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), cars_data.Year",
            "select cars_data.Year, count(*)",
            "select sum(cars_data.Year)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data",
            "car_names cars_data",
            "model_list car_names cars_data",
            "model_list cars_data",
            "countries cars_data",
            "car_makers cars_data",
            "car_makers car_names cars_data"
        ],
        "align_scores": [
            0.9906290173530579,
            5.9150253946427256e-05,
            0.0003188796399626881,
            6.491614476544783e-05,
            0.0007375518907792866,
            7.235514203784987e-05,
            0.0007765357149764895,
            6.420414865715429e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "In 1977, how many cars were made?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), cars_data.Year",
            "select cars_data.Year, count(*)",
            "select count(*), cars_data.Id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data",
            "car_names cars_data",
            "model_list car_names cars_data",
            "model_list cars_data",
            "car_makers car_names cars_data",
            "countries cars_data",
            "car_makers cars_data"
        ],
        "align_scores": [
            0.9903498888015747,
            5.8760524552781135e-05,
            0.0003239552315790206,
            6.523381307488307e-05,
            0.0007072128937579691,
            7.259898848133162e-05,
            0.00031144259264692664,
            6.0900678363395855e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "In 1976, how many cars were made?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), cars_data.Year",
            "select cars_data.Year, count(*)",
            "select count(*), cars_data.Id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data",
            "car_names cars_data",
            "model_list car_names cars_data",
            "model_list cars_data",
            "car_makers car_names cars_data",
            "countries cars_data",
            "car_makers cars_data"
        ],
        "align_scores": [
            0.990441083908081,
            5.896827860851772e-05,
            0.0003206951660104096,
            6.667842535534874e-05,
            0.0007284425664693117,
            7.256070239236578e-05,
            0.00030814411002211273,
            6.081333413021639e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "In 1978, how many cars were made?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), cars_data.Year",
            "select cars_data.Year, count(*)",
            "select sum(cars_data.Year)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data",
            "car_names cars_data",
            "model_list car_names cars_data",
            "model_list cars_data",
            "countries cars_data",
            "car_makers car_names cars_data",
            "car_makers cars_data"
        ],
        "align_scores": [
            0.9906947612762451,
            5.9484096709638834e-05,
            0.00031236320501193404,
            6.511739775305614e-05,
            0.0007703930023126304,
            7.23835764802061e-05,
            0.0008301324560306966,
            6.484178447863087e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "In 1975, how many cars were made?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), cars_data.Year",
            "select cars_data.Year, count(*)",
            "select sum(cars_data.Year)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data",
            "car_names cars_data",
            "model_list car_names cars_data",
            "model_list cars_data",
            "countries cars_data",
            "car_makers cars_data",
            "car_makers car_names cars_data"
        ],
        "align_scores": [
            0.9904212951660156,
            6.006643161526881e-05,
            0.0003170227282680571,
            6.848631892353296e-05,
            0.0007009048713371158,
            7.476562313968316e-05,
            0.0007968586287461221,
            6.629528797930107e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many cars has over 5 cylinders?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), cars_data.Cylinders",
            "select count(*), cars_data.Id",
            "select count(*), t5.dcars_data.Id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data"
        ],
        "align_scores": [
            0.9936816692352295,
            0.0006735666538588703,
            0.00027122930623590946,
            0.0001932423037942499,
            0.0002830350713338703,
            0.0002431755856378004,
            0.00024014869995880872,
            0.00017353867588099092
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many cars has over 4 cylinders?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), cars_data.Id",
            "select count(*), cars_data.Cylinders",
            "select count(*), cars_data.MPG, cars_data.Cylinders"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data"
        ],
        "align_scores": [
            0.9925379157066345,
            0.000785153592005372,
            0.00027401361148804426,
            0.00023596994287800044,
            0.00026475079357624054,
            0.0002073895448120311,
            0.00011191636440344155,
            6.996845331741497e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many cars has over 3 cylinders?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), cars_data.Cylinders",
            "select count(*), cars_data.Id",
            "select count(*), cars_data.Cylinders, cars_data.Edispl"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data"
        ],
        "align_scores": [
            0.9903460144996643,
            0.0007778128492645919,
            0.00025713854120112956,
            0.00019035578588955104,
            0.00028003257466480136,
            0.00023459391377400607,
            0.00010753746755653992,
            8.655988494865596e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many cars has over 1 cylinders?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), cars_data.Id",
            "select count(*), cars_data.Cylinders",
            "select count(*) (cars_data.Id)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data"
        ],
        "align_scores": [
            0.9844689965248108,
            0.00026522603002376854,
            0.00026555295335128903,
            0.0019090379355475307,
            0.0002730236737988889,
            0.026689965277910233,
            0.0003418535052333027,
            0.00014441594248637557
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many cars has over 2 cylinders?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), cars_data.Id",
            "select count(*), cars_data.Cylinders",
            "select count(*), cars_data.MPG, cars_data.Cylinders"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data"
        ],
        "align_scores": [
            0.9873979091644287,
            0.0008460870012640953,
            0.0002749137638602406,
            0.00022096525935921818,
            0.00025697509408928454,
            0.0001991783792618662,
            0.00010982692037941888,
            7.167363946791738e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the number of carsw ith over 5 cylinders?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), cars_data.Cylinders",
            "select count(*), cars_data.Id",
            "select count(*), cars_data.Cylinders, cars_data.Edispl"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data"
        ],
        "align_scores": [
            0.9902509450912476,
            0.00016026070807129145,
            0.00022867317602504045,
            0.004775686655193567,
            0.00024874540395103395,
            0.0004446076927706599,
            0.00011562668078113347,
            0.00013999175280332565
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the number of carsw ith over 4 cylinders?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), cars_data.Cylinders",
            "select count(*), cars_data.Id",
            "select count(*), cars_data.MPG, cars_data.Cylinders"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data"
        ],
        "align_scores": [
            0.9909582138061523,
            0.00017474967171438038,
            0.00024410315381828696,
            0.0068257516250014305,
            0.00025809399085119367,
            0.0005183336324989796,
            0.00010651323100319132,
            8.001746755326167e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the number of carsw ith over 3 cylinders?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), cars_data.Cylinders",
            "select count(*), cars_data.Id",
            "select count(*), cars_data.Cylinders, cars_data.Edispl"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data",
            "model_list cars_data"
        ],
        "align_scores": [
            0.9890002608299255,
            0.00017744829528965056,
            0.00023924712149892002,
            0.005879791919142008,
            0.0002494455548003316,
            0.0004690440546255559,
            0.00011387920676497743,
            0.0001356461871182546
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the number of carsw ith over 1 cylinders?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), cars_data.Cylinders",
            "select count(*), cars_data.Id",
            "select count(*) (cars_data.Id)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data"
        ],
        "align_scores": [
            0.9906082153320312,
            0.0001515575568191707,
            0.00025561495567671955,
            0.006398085970431566,
            0.00024929051869548857,
            0.0004220658738631755,
            0.00033922542934305966,
            0.00012350334145594388
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the number of carsw ith over 2 cylinders?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), cars_data.Id",
            "select count(*), cars_data.Cylinders",
            "select count(*), cars_data.MPG, cars_data.Cylinders"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data"
        ],
        "align_scores": [
            0.9885849356651306,
            0.00018572021508589387,
            0.0002567970077507198,
            0.0004642984422389418,
            0.000236784660955891,
            0.005700251087546349,
            0.00010425586515339091,
            8.160604193108156e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "For the cars with 3 cylinders, which model has the largest horsepower?",
        "gold_select": "select car_names.Model",
        "select_candidates": [
            "select car_names.Model",
            "select car_names.Model, cars_data.Cylinders",
            "select car_names.Model, car_names.Make",
            "select car_names.Model, cars_data.Edispl"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-ORDER BY-LIMIT-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_names cars_data",
        "table_candidates": [
            "car_names cars_data",
            "model_list car_names cars_data",
            "car_makers cars_data",
            "continents car_names cars_data",
            "car_makers car_names cars_data",
            "model_list cars_data",
            "countries cars_data"
        ],
        "align_scores": [
            0.9707671999931335,
            0.0001008097970043309,
            0.0006786058656871319,
            6.846679752925411e-05,
            0.0005789896822534502,
            7.138367072911933e-05,
            0.0012957655126228929,
            9.141385089606047e-05
        ],
        "align_select": "select car_names.Model",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT"
    },
    {
        "question": "For the cars with 5 cylinders, which model has the largest horsepower?",
        "gold_select": "select car_names.Model",
        "select_candidates": [
            "select car_names.Model",
            "select car_names.Model, cars_data.Cylinders",
            "select car_names.Model, car_names.Make",
            "select car_names.Model, cars_data.Id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-ORDER BY-LIMIT-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_names cars_data",
        "table_candidates": [
            "car_names cars_data",
            "model_list car_names cars_data",
            "car_makers car_names cars_data",
            "car_makers cars_data",
            "continents car_names cars_data",
            "countries cars_data"
        ],
        "align_scores": [
            0.9785996675491333,
            0.00010034292790805921,
            0.0005440338281914592,
            6.633746670559049e-05,
            0.0005667911609634757,
            7.162935798987746e-05,
            0.0003644375246949494,
            7.889887638157234e-05
        ],
        "align_select": "select car_names.Model",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT"
    },
    {
        "question": "For the cars with 8 cylinders, which model has the largest horsepower?",
        "gold_select": "select car_names.Model",
        "select_candidates": [
            "select car_names.Model",
            "select car_names.Model, cars_data.Cylinders",
            "select car_names.Model, car_names.Make",
            "select car_names.Model, cars_data.Id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-ORDER BY-LIMIT-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_names cars_data",
        "table_candidates": [
            "car_names cars_data",
            "model_list car_names cars_data",
            "car_makers car_names cars_data",
            "car_makers cars_data",
            "continents car_names cars_data",
            "countries cars_data"
        ],
        "align_scores": [
            0.9701172709465027,
            0.00010816028225235641,
            0.0005023480043746531,
            6.616088649025187e-05,
            0.0005124735180288553,
            7.1712325734552e-05,
            0.0003714863851200789,
            8.089825132628903e-05
        ],
        "align_select": "select car_names.Model",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT"
    },
    {
        "question": "For all of the 3 cylinder cars, which model has the most horsepower?",
        "gold_select": "select car_names.Model",
        "select_candidates": [
            "select car_names.Model",
            "select car_names.Model, cars_data.Cylinders",
            "select car_names.Model, car_names.Make",
            "select car_names.Model (cars_data.Horsepower)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-ORDER BY-LIMIT-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_names cars_data",
        "table_candidates": [
            "car_names cars_data",
            "model_list car_names cars_data",
            "model_list cars_data",
            "car_makers cars_data",
            "continents car_names cars_data",
            "countries cars_data"
        ],
        "align_scores": [
            0.9720640182495117,
            0.00011694365093717352,
            0.0009575060103088617,
            7.356635614996776e-05,
            0.0004961650702171028,
            6.772657798137516e-05,
            0.007737613283097744,
            7.077938789734617e-05
        ],
        "align_select": "select car_names.Model",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT"
    },
    {
        "question": "For all of the 5 cylinder cars, which model has the most horsepower?",
        "gold_select": "select car_names.Model",
        "select_candidates": [
            "select car_names.Model",
            "select car_names.Model, cars_data.Cylinders",
            "select car_names.Model, car_names.Make",
            "select car_names.Model, cars_data.Id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-ORDER BY-LIMIT-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_names cars_data",
        "table_candidates": [
            "car_names cars_data",
            "model_list car_names cars_data",
            "car_makers cars_data",
            "car_makers car_names cars_data",
            "continents car_names cars_data",
            "countries cars_data"
        ],
        "align_scores": [
            0.9772239923477173,
            0.0001172924239654094,
            0.0007466349634341896,
            6.976757140364498e-05,
            0.000509098288603127,
            6.807856698287651e-05,
            0.0004430816334206611,
            8.13875813037157e-05
        ],
        "align_select": "select car_names.Model",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT"
    },
    {
        "question": "For all of the 8 cylinder cars, which model has the most horsepower?",
        "gold_select": "select car_names.Model",
        "select_candidates": [
            "select car_names.Model",
            "select car_names.Model, cars_data.Cylinders",
            "select car_names.Model, car_names.Make",
            "select car_names.Model, cars_data.Id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-ORDER BY-LIMIT-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_names cars_data",
        "table_candidates": [
            "car_names cars_data",
            "model_list car_names cars_data",
            "car_makers car_names cars_data",
            "car_makers cars_data",
            "continents car_names cars_data",
            "countries cars_data"
        ],
        "align_scores": [
            0.935672402381897,
            0.0001126147762988694,
            0.0007443891954608262,
            6.979704630794004e-05,
            0.0005024106940254569,
            6.682622915832326e-05,
            0.0003875677939504385,
            7.799350714776665e-05
        ],
        "align_select": "select car_names.Model",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT"
    },
    {
        "question": "Among the cars with more than lowest horsepower, which ones do not have more than 4 cylinders? List the car makeid and make name.",
        "gold_select": "select car_names.MakeId, car_names.Make",
        "select_candidates": [
            "select car_names.MakeId, car_names.Make",
            "select car_makers.Id, car_names.Make",
            "select car_names.MakeId, car_names.Make",
            "select car_names.Model, car_names.Make"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_names cars_data",
        "table_candidates": [
            "car_names cars_data",
            "model_list car_names cars_data",
            "car_makers car_names cars_data",
            "countries car_names cars_data",
            "car_makers cars_data"
        ],
        "align_scores": [
            0.907002329826355,
            0.489531934261322,
            0.6939220428466797,
            0.4790953993797302,
            0.907002329826355,
            0.489531934261322,
            0.0011396207846701145,
            0.0004657930403482169
        ],
        "align_select": "select car_names.MakeId, car_names.Make",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Among the cars with more than lowest horsepower, which ones do not have more than 5 cylinders? List the car makeid and make name.",
        "gold_select": "select car_names.MakeId, car_names.Make",
        "select_candidates": [
            "select car_names.MakeId, car_names.Make",
            "select car_makers.Id, car_names.Make",
            "select car_names.MakeId, car_names.Make",
            "select car_names.Model, car_names.Make"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_names cars_data",
        "table_candidates": [
            "car_names cars_data",
            "model_list car_names cars_data",
            "car_makers car_names cars_data",
            "countries car_names cars_data",
            "car_makers cars_data"
        ],
        "align_scores": [
            0.8989594578742981,
            0.5983366966247559,
            0.6817523241043091,
            0.5161510109901428,
            0.8989594578742981,
            0.5983366966247559,
            0.0011221858439967036,
            0.0005124268354848027
        ],
        "align_select": "select car_names.MakeId, car_names.Make",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Among the cars with more than lowest horsepower, which ones do not have more than 10 cylinders? List the car makeid and make name.",
        "gold_select": "select car_names.MakeId, car_names.Make",
        "select_candidates": [
            "select car_names.MakeId, car_names.Make",
            "select car_makers.Id, car_names.Make",
            "select car_names.MakeId, car_names.Make",
            "select car_names.Model, car_names.Make"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "car_names cars_data",
        "table_candidates": [
            "car_names cars_data",
            "model_list car_names cars_data",
            "car_makers car_names cars_data",
            "countries car_names cars_data",
            "car_makers cars_data"
        ],
        "align_scores": [
            0.6104406118392944,
            0.8023640513420105,
            0.5586692094802856,
            0.4711677134037018,
            0.6104406118392944,
            0.8023640513420105,
            0.0004773020918946713,
            0.0009983000345528126
        ],
        "align_select": "select car_names.MakeId, car_names.Make",
        "align_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "Among the cars with more than lowest horsepower, which ones do not have more than 6 cylinders? List the car makeid and make name.",
        "gold_select": "select car_names.MakeId, car_names.Make",
        "select_candidates": [
            "select car_names.MakeId, car_names.Make",
            "select car_makers.Id, car_names.Make",
            "select car_names.MakeId, car_names.Make",
            "select car_names.Model, car_names.Make"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "car_names cars_data",
        "table_candidates": [
            "car_names cars_data",
            "model_list car_names cars_data",
            "car_makers car_names cars_data",
            "countries car_names cars_data",
            "car_makers cars_data"
        ],
        "align_scores": [
            0.5183931589126587,
            0.8726021647453308,
            0.5051991939544678,
            0.6266345977783203,
            0.5183931589126587,
            0.8726021647453308,
            0.0004968005232512951,
            0.0011405943660065532
        ],
        "align_select": "select car_names.MakeId, car_names.Make",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Among the cars with more than lowest horsepower, which ones do not have more than 13 cylinders? List the car makeid and make name.",
        "gold_select": "select car_names.MakeId, car_names.Make",
        "select_candidates": [
            "select car_names.MakeId, car_names.Make",
            "select car_makers.Id, car_names.Make",
            "select car_names.MakeId, car_names.Make",
            "select car_names.Model, car_names.Make"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "car_names cars_data",
        "table_candidates": [
            "car_names cars_data",
            "model_list car_names cars_data",
            "car_makers car_names cars_data",
            "countries car_names cars_data",
            "car_makers cars_data"
        ],
        "align_scores": [
            0.5795066356658936,
            0.7882164120674133,
            0.5472843647003174,
            0.4637947380542755,
            0.5795066356658936,
            0.7882164120674133,
            0.0004898293409496546,
            0.0009950147941708565
        ],
        "align_select": "select car_names.MakeId, car_names.Make",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Among the cars that do not have the minimum horsepower, what are the make ids and names of all those with less than 5 cylinders?",
        "gold_select": "select car_names.MakeId, car_names.Make",
        "select_candidates": [
            "select car_names.MakeId, car_names.Make",
            "select car_names.Make, car_names.Model",
            "select car_names.Make, car_names.Make",
            "select car_names.Make, car_names.MakeId"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_names cars_data",
        "table_candidates": [
            "car_names cars_data",
            "model_list car_names cars_data",
            "car_makers car_names cars_data",
            "countries car_names cars_data",
            "continents car_names cars_data",
            "car_makers cars_data"
        ],
        "align_scores": [
            0.9107428193092346,
            0.0014787863474339247,
            0.9209770560264587,
            0.004629030358046293,
            0.0023517131339758635,
            0.00017207811470143497,
            0.8168448805809021,
            0.002259737579151988
        ],
        "align_select": "select car_names.MakeId, car_names.Make",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Among the cars that do not have the minimum horsepower, what are the make ids and names of all those with less than 10 cylinders?",
        "gold_select": "select car_names.MakeId, car_names.Make",
        "select_candidates": [
            "select car_names.MakeId, car_names.Make",
            "select car_names.Make, car_names.Model",
            "select car_names.Make, car_names.MakeId",
            "select car_names.Make, car_names.Make"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_names cars_data",
        "table_candidates": [
            "car_names cars_data",
            "model_list car_names cars_data",
            "car_makers car_names cars_data",
            "countries car_names cars_data",
            "continents car_names cars_data",
            "car_makers cars_data"
        ],
        "align_scores": [
            0.587073028087616,
            0.001536749885417521,
            0.645005464553833,
            0.0041695572435855865,
            0.2862081825733185,
            0.0021168331149965525,
            0.0015973838744685054,
            0.000166386816999875
        ],
        "align_select": "select car_names.MakeId, car_names.Make",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Among the cars that do not have the minimum horsepower, what are the make ids and names of all those with less than 6 cylinders?",
        "gold_select": "select car_names.MakeId, car_names.Make",
        "select_candidates": [
            "select car_names.MakeId, car_names.Make",
            "select car_names.Make, car_names.Model",
            "select car_names.Make, car_names.MakeId",
            "select car_names.Make, car_names.Make"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_names cars_data",
        "table_candidates": [
            "car_names cars_data",
            "model_list car_names cars_data",
            "car_makers car_names cars_data",
            "countries car_names cars_data",
            "continents car_names cars_data",
            "car_makers cars_data"
        ],
        "align_scores": [
            0.8826319575309753,
            0.08966103196144104,
            0.8681536316871643,
            0.14043085277080536,
            0.743389904499054,
            0.048381268978118896,
            0.002387318294495344,
            0.00045691392733715475
        ],
        "align_select": "select car_names.MakeId, car_names.Make",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Among the cars that do not have the minimum horsepower, what are the make ids and names of all those with less than 13 cylinders?",
        "gold_select": "select car_names.MakeId, car_names.Make",
        "select_candidates": [
            "select car_names.MakeId, car_names.Make",
            "select car_names.Make, car_names.Model",
            "select car_names.Make, car_names.MakeId",
            "select car_names.Make, car_names.Make"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_names cars_data",
        "table_candidates": [
            "car_names cars_data",
            "model_list car_names cars_data",
            "car_makers car_names cars_data",
            "countries car_names cars_data",
            "continents car_names cars_data",
            "car_makers cars_data"
        ],
        "align_scores": [
            0.4227059781551361,
            0.0011491052573546767,
            0.4982408285140991,
            0.0026636284310370684,
            0.20244964957237244,
            0.0016671442426741123,
            0.0015781777910888195,
            0.00015568369417451322
        ],
        "align_select": "select car_names.MakeId, car_names.Make",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Among the cars that do not have the minimum horsepower, what are the make ids and names of all those with less than 8 cylinders?",
        "gold_select": "select car_names.MakeId, car_names.Make",
        "select_candidates": [
            "select car_names.MakeId, car_names.Make",
            "select car_names.Make, car_names.MakeId",
            "select car_names.Make, car_names.Model",
            "select car_names.Make, car_names.Make"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_names cars_data",
        "table_candidates": [
            "car_names cars_data",
            "model_list car_names cars_data",
            "car_makers car_names cars_data",
            "countries car_names cars_data",
            "continents car_names cars_data",
            "car_makers cars_data"
        ],
        "align_scores": [
            0.8034327030181885,
            0.0015102222096174955,
            0.5385350584983826,
            0.0019757759291678667,
            0.778458833694458,
            0.0040575312450528145,
            0.0021508100908249617,
            0.00016116394544951618
        ],
        "align_select": "select car_names.MakeId, car_names.Make",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which models are lighter than 3510 but not built by the 'Ford Motor Company'?",
        "gold_select": "select distinct model_list.Model",
        "select_candidates": [
            "select model_list.Model",
            "select car_names.Model",
            "select car_names.Make",
            "select car_makers.Maker, model_list.Model"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "car_makers model_list car_names cars_data",
        "table_candidates": [
            "car_makers model_list cars_data",
            "countries car_makers model_list cars_data",
            "continents car_makers model_list cars_data",
            "car_makers model_list car_names",
            "car_makers model_list"
        ],
        "align_scores": [
            0.870430052280426,
            0.5323060154914856,
            0.913506805896759,
            0.7697814106941223,
            0.8862723708152771,
            0.6826262474060059,
            0.0004067190457135439,
            0.00032889298745431006
        ],
        "align_select": "select model_list.Model",
        "align_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "Which models are lighter than 3507 but not built by the 'Ford Motor Company'?",
        "gold_select": "select distinct model_list.Model",
        "select_candidates": [
            "select car_names.Model",
            "select model_list.Model",
            "select car_names.Make",
            "select car_names.Model, car_makers.FullName"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "car_makers model_list car_names cars_data",
        "table_candidates": [
            "car_makers model_list cars_data",
            "countries car_makers model_list cars_data",
            "continents car_makers model_list cars_data",
            "car_makers model_list car_names",
            "car_makers car_names cars_data"
        ],
        "align_scores": [
            0.8957304358482361,
            0.7408004403114319,
            0.8508357405662537,
            0.5581091642379761,
            0.8624297380447388,
            0.6498775482177734,
            0.0003303580160718411,
            0.00023620808497071266
        ],
        "align_select": "select car_names.Model",
        "align_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "Which models are lighter than 3508 but not built by the 'Ford Motor Company'?",
        "gold_select": "select distinct model_list.Model",
        "select_candidates": [
            "select car_names.Model",
            "select model_list.Model",
            "select car_names.Make",
            "select car_names.Model, car_makers.FullName"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "car_makers model_list car_names cars_data",
        "table_candidates": [
            "car_makers model_list cars_data",
            "countries car_makers model_list cars_data",
            "car_makers model_list car_names",
            "continents car_makers model_list cars_data",
            "car_makers model_list"
        ],
        "align_scores": [
            0.8708093762397766,
            0.7013331651687622,
            0.8188218474388123,
            0.49757808446884155,
            0.8416027426719666,
            0.6190733313560486,
            0.00031541974749416113,
            0.00022905746300239116
        ],
        "align_select": "select car_names.Model",
        "align_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "Which models are lighter than 3509 but not built by the 'Ford Motor Company'?",
        "gold_select": "select distinct model_list.Model",
        "select_candidates": [
            "select model_list.Model",
            "select car_names.Model",
            "select car_names.Make",
            "select car_names.Model, car_makers.FullName"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "car_makers model_list car_names cars_data",
        "table_candidates": [
            "car_makers model_list cars_data",
            "countries car_makers model_list cars_data",
            "car_makers model_list car_names",
            "continents car_makers model_list cars_data",
            "car_makers model_list"
        ],
        "align_scores": [
            0.8549165725708008,
            0.5621438026428223,
            0.8972781896591187,
            0.7431102395057678,
            0.8664847612380981,
            0.6526541113853455,
            0.00034666151623241603,
            0.00024537299759685993
        ],
        "align_select": "select model_list.Model",
        "align_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "Which models are lighter than 3506 but not built by the 'Ford Motor Company'?",
        "gold_select": "select distinct model_list.Model",
        "select_candidates": [
            "select model_list.Model",
            "select car_names.Model",
            "select car_names.Make",
            "select car_names.Model, car_makers.FullName"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "car_makers model_list car_names cars_data",
        "table_candidates": [
            "car_makers model_list cars_data",
            "countries car_makers model_list cars_data",
            "car_makers model_list car_names",
            "continents car_makers model_list cars_data",
            "car_makers model_list"
        ],
        "align_scores": [
            0.7989011406898499,
            0.472773939371109,
            0.8539489507675171,
            0.6619314551353455,
            0.8242590427398682,
            0.5662907958030701,
            0.0003115993458777666,
            0.0002249999815830961
        ],
        "align_select": "select model_list.Model",
        "align_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the different models wthat are lighter than 3510 but were not built by the Ford Motor Company?",
        "gold_select": "select distinct model_list.Model",
        "select_candidates": [
            "select distinct model_list.Model",
            "select distinct car_names.Model",
            "select distinct car_makers.Maker, car_makers.FullName",
            "select distinct model_list.Maker"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "car_makers model_list car_names cars_data",
        "table_candidates": [
            "car_makers model_list cars_data",
            "car_makers model_list car_names",
            "countries car_makers model_list cars_data",
            "continents car_makers model_list cars_data",
            "car_makers model_list",
            "countries car_makers model_list car_names"
        ],
        "align_scores": [
            0.23325765132904053,
            0.23325765132904053,
            0.31774213910102844,
            0.31774213910102844,
            0.0003286814026068896,
            0.0003286814026068896,
            0.2288653552532196,
            0.2288653552532196
        ],
        "align_select": "select distinct model_list.Model",
        "align_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the different models wthat are lighter than 3507 but were not built by the Ford Motor Company?",
        "gold_select": "select distinct model_list.Model",
        "select_candidates": [
            "select distinct model_list.Model",
            "select distinct car_names.Model",
            "select distinct car_names.Make",
            "select distinct car_makers.Maker, car_makers.FullName"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "car_makers model_list car_names cars_data",
        "table_candidates": [
            "car_makers model_list cars_data",
            "car_makers model_list car_names",
            "countries car_makers model_list cars_data",
            "continents car_makers model_list cars_data",
            "car_makers model_list"
        ],
        "align_scores": [
            0.33406713604927063,
            0.33406713604927063,
            0.42003464698791504,
            0.42003464698791504,
            0.5492351055145264,
            0.5492351055145264,
            0.0003303195699118078,
            0.0003303195699118078
        ],
        "align_select": "select distinct car_names.Make",
        "align_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the different models wthat are lighter than 3508 but were not built by the Ford Motor Company?",
        "gold_select": "select distinct model_list.Model",
        "select_candidates": [
            "select distinct model_list.Model",
            "select distinct car_names.Model",
            "select distinct model_list.ModelId",
            "select distinct car_names.Make"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "car_makers model_list car_names cars_data",
        "table_candidates": [
            "car_makers model_list cars_data",
            "car_makers model_list car_names",
            "countries car_makers model_list cars_data",
            "continents car_makers model_list cars_data",
            "countries car_makers model_list car_names",
            "continents car_makers model_list car_names"
        ],
        "align_scores": [
            0.33762824535369873,
            0.33762824535369873,
            0.429377019405365,
            0.429377019405365,
            0.43153342604637146,
            0.43153342604637146,
            0.5513561367988586,
            0.5513561367988586
        ],
        "align_select": "select distinct car_names.Make",
        "align_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the different models wthat are lighter than 3509 but were not built by the Ford Motor Company?",
        "gold_select": "select distinct model_list.Model",
        "select_candidates": [
            "select distinct model_list.Model",
            "select distinct car_names.Model",
            "select distinct car_names.Make",
            "select distinct car_makers.Maker, car_makers.FullName"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "car_makers model_list car_names cars_data",
        "table_candidates": [
            "car_makers model_list cars_data",
            "car_makers model_list car_names",
            "countries car_makers model_list cars_data",
            "continents car_makers model_list cars_data",
            "countries car_makers model_list car_names",
            "continents car_makers model_list car_names"
        ],
        "align_scores": [
            0.3466664254665375,
            0.3466664254665375,
            0.440134733915329,
            0.440134733915329,
            0.5569062829017639,
            0.5569062829017639,
            0.0003432645171415061,
            0.0003432645171415061
        ],
        "align_select": "select distinct car_names.Make",
        "align_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the different models wthat are lighter than 3506 but were not built by the Ford Motor Company?",
        "gold_select": "select distinct model_list.Model",
        "select_candidates": [
            "select distinct model_list.Model",
            "select distinct car_names.Model",
            "select distinct car_names.Make",
            "select distinct car_makers.Maker, car_makers.FullName"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "car_makers model_list car_names cars_data",
        "table_candidates": [
            "car_makers model_list cars_data",
            "car_makers model_list car_names",
            "countries car_makers model_list cars_data",
            "continents car_makers model_list cars_data",
            "countries car_makers model_list car_names",
            "continents car_makers model_list car_names"
        ],
        "align_scores": [
            0.32273685932159424,
            0.32273685932159424,
            0.41530221700668335,
            0.41530221700668335,
            0.5380362272262573,
            0.5380362272262573,
            0.00032234215177595615,
            0.00032234215177595615
        ],
        "align_select": "select distinct car_names.Make",
        "align_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "Which cities do more than one employee under age 40 come from?",
        "gold_select": "select employee.City",
        "select_candidates": [
            "select employee.City",
            "select employee.City, count(*)",
            "select employee.City, employee.Age",
            "select employee.City Dominant-GROUP BY-HAVING"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY-HAVING",
            "SELECT-FROM-WHERE-GROUP BY-HAVING-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "employee",
        "table_candidates": [
            "employee"
        ],
        "align_scores": [
            0.9937875270843506,
            0.00011786860704887658,
            0.0031338809058070183,
            7.313219975912943e-05,
            0.00016152948956005275,
            6.104196654632688e-05,
            0.00031549829873256385,
            0.00010175714851357043
        ],
        "align_select": "select employee.City",
        "align_structure": "SELECT-FROM-WHERE-GROUP BY-HAVING"
    },
    {
        "question": "Which cities do more than one employee under age 34 come from?",
        "gold_select": "select employee.City",
        "select_candidates": [
            "select employee.City",
            "select employee.City, count(*)",
            "select employee.City Dominant-GROUP BY-HAVING",
            "select employee.City, employee.Age"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY-HAVING",
            "SELECT-FROM-WHERE-GROUP BY-HAVING-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "employee",
        "table_candidates": [
            "employee"
        ],
        "align_scores": [
            0.993970513343811,
            0.0001330792292719707,
            0.003432542085647583,
            7.513348100474104e-05,
            0.0003307459701318294,
            0.00010359664884163067,
            0.00016157397476490587,
            6.159148324513808e-05
        ],
        "align_select": "select employee.City",
        "align_structure": "SELECT-FROM-WHERE-GROUP BY-HAVING"
    },
    {
        "question": "Which cities do more than one employee under age 37 come from?",
        "gold_select": "select employee.City",
        "select_candidates": [
            "select employee.City",
            "select employee.City, count(*)",
            "select employee.City Dominant-GROUP BY-HAVING",
            "select employee.City, employee.Age"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY-HAVING",
            "SELECT-FROM-WHERE-GROUP BY-HAVING-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "employee",
        "table_candidates": [
            "employee"
        ],
        "align_scores": [
            0.9939263463020325,
            0.0001267632469534874,
            0.0036649461835622787,
            7.448495307471603e-05,
            0.0003228542336728424,
            0.00010075069440063089,
            0.0001633480133023113,
            6.082852996769361e-05
        ],
        "align_select": "select employee.City",
        "align_structure": "SELECT-FROM-WHERE-GROUP BY-HAVING"
    },
    {
        "question": "Which cities do more than one employee under age 38 come from?",
        "gold_select": "select employee.City",
        "select_candidates": [
            "select employee.City",
            "select employee.City, count(*)",
            "select employee.City Dominant-GROUP BY-HAVING",
            "select employee.City, employee.Age"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY-HAVING",
            "SELECT-FROM-WHERE-GROUP BY-HAVING-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "employee",
        "table_candidates": [
            "employee"
        ],
        "align_scores": [
            0.9938393235206604,
            0.00013125363329891115,
            0.004015831742435694,
            7.514509343309328e-05,
            0.00032723095500841737,
            0.0001014995650621131,
            0.00016190526366699487,
            6.132927956059575e-05
        ],
        "align_select": "select employee.City",
        "align_structure": "SELECT-FROM-WHERE-GROUP BY-HAVING"
    },
    {
        "question": "Which cities do more than one employee under age 39 come from?",
        "gold_select": "select employee.City",
        "select_candidates": [
            "select employee.City",
            "select employee.City, count(*)",
            "select employee.City, employee.Age",
            "select employee.City, do-select-employee.Age"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY-HAVING",
            "SELECT-FROM-WHERE-GROUP BY-HAVING-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "employee",
        "table_candidates": [
            "employee"
        ],
        "align_scores": [
            0.9938036203384399,
            0.0001291854860028252,
            0.0035847907420247793,
            7.386969809886068e-05,
            0.00016687301103956997,
            6.0719521570717916e-05,
            0.00019836873980239034,
            6.322051922325045e-05
        ],
        "align_select": "select employee.City",
        "align_structure": "SELECT-FROM-WHERE-GROUP BY-HAVING"
    },
    {
        "question": "Find the cities that have more than one employee under age 40.",
        "gold_select": "select employee.City",
        "select_candidates": [
            "select employee.City",
            "select employee.City, count(*)",
            "select employee.City for employee.Age",
            "select count(*), employee.City"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY-HAVING",
            "SELECT-FROM-WHERE-GROUP BY-HAVING-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "employee",
        "table_candidates": [
            "employee"
        ],
        "align_scores": [
            0.9875471591949463,
            8.459141827188432e-05,
            0.014463240280747414,
            7.451948476955295e-05,
            0.0002489746257197112,
            6.570248660864308e-05,
            0.0039593614637851715,
            7.099617505446076e-05
        ],
        "align_select": "select employee.City",
        "align_structure": "SELECT-FROM-WHERE-GROUP BY-HAVING"
    },
    {
        "question": "Find the cities that have more than one employee under age 34.",
        "gold_select": "select employee.City",
        "select_candidates": [
            "select employee.City",
            "select employee.City, count(*)",
            "select employee.City for employee.Age",
            "select count(*), employee.City"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY-HAVING",
            "SELECT-FROM-WHERE-GROUP BY-HAVING-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "employee",
        "table_candidates": [
            "employee"
        ],
        "align_scores": [
            0.9899627566337585,
            8.542776049580425e-05,
            0.023223888128995895,
            7.41308685974218e-05,
            0.0002651094691827893,
            6.400809797924012e-05,
            0.007229025941342115,
            7.131026359274983e-05
        ],
        "align_select": "select employee.City",
        "align_structure": "SELECT-FROM-WHERE-GROUP BY-HAVING"
    },
    {
        "question": "Find the cities that have more than one employee under age 37.",
        "gold_select": "select employee.City",
        "select_candidates": [
            "select employee.City",
            "select employee.City, count(*)",
            "select employee.City for employee.Age",
            "select count(*), employee.City"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY-HAVING",
            "SELECT-FROM-WHERE-GROUP BY-HAVING-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "employee",
        "table_candidates": [
            "employee"
        ],
        "align_scores": [
            0.9904622435569763,
            8.419909136136994e-05,
            0.03159091994166374,
            7.443298090947792e-05,
            0.0002537515538278967,
            6.369026959873736e-05,
            0.0097816688939929,
            7.125316187739372e-05
        ],
        "align_select": "select employee.City",
        "align_structure": "SELECT-FROM-WHERE-GROUP BY-HAVING"
    },
    {
        "question": "Find the cities that have more than one employee under age 38.",
        "gold_select": "select employee.City",
        "select_candidates": [
            "select employee.City",
            "select employee.City, count(*)",
            "select employee.City for employee.Age",
            "select count(*), employee.City"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY-HAVING",
            "SELECT-FROM-WHERE-GROUP BY-HAVING-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "employee",
        "table_candidates": [
            "employee"
        ],
        "align_scores": [
            0.990195095539093,
            8.561403228668496e-05,
            0.034944191575050354,
            7.489506242563948e-05,
            0.0002529761113692075,
            6.484784535132349e-05,
            0.010739041492342949,
            7.210786134237424e-05
        ],
        "align_select": "select employee.City",
        "align_structure": "SELECT-FROM-WHERE-GROUP BY-HAVING"
    },
    {
        "question": "Find the cities that have more than one employee under age 39.",
        "gold_select": "select employee.City",
        "select_candidates": [
            "select employee.City",
            "select employee.City, count(*)",
            "select employee.City for employee.Age",
            "select count(*), employee.City"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY-HAVING",
            "SELECT-FROM-WHERE-GROUP BY-HAVING-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "employee",
        "table_candidates": [
            "employee"
        ],
        "align_scores": [
            0.9898518323898315,
            8.310197154060006e-05,
            0.030490081757307053,
            7.341113814618438e-05,
            0.00025129312416538596,
            6.413029768737033e-05,
            0.010211888700723648,
            7.117934728739783e-05
        ],
        "align_select": "select employee.City",
        "align_structure": "SELECT-FROM-WHERE-GROUP BY-HAVING"
    },
    {
        "question": "What is the version number and template type code for the template with version number later than 6?",
        "gold_select": "select Templates.Version_Number, Templates.Template_Type_Code",
        "select_candidates": [
            "select Templates.Version_Number, Templates.Template_Type_Code",
            "select Templates.Version_Number, Templates.Template_Type_Code, Templates.Template_ID",
            "select Templates.Version_Number, Templates.Template_Type_Code, Templates.Date_Effective_From",
            "select Templates.Template_ID, Templates.Template_Type_Code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates",
        "table_candidates": [
            "Templates"
        ],
        "align_scores": [
            0.9928667545318604,
            0.0001795189018594101,
            0.00016401427274104208,
            8.431157766608521e-05,
            0.0003192333970218897,
            7.014776929281652e-05,
            0.00045200923341326416,
            0.00011515497317304835
        ],
        "align_select": "select Templates.Version_Number, Templates.Template_Type_Code",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the version number and template type code for the template with version number later than 7?",
        "gold_select": "select Templates.Version_Number, Templates.Template_Type_Code",
        "select_candidates": [
            "select Templates.Version_Number, Templates.Template_Type_Code",
            "select Templates.Version_Number, Templates.Template_Type_Code, Templates.Template_ID",
            "select Templates.Version_Number, Templates.Template_Type_Code, Templates.Date_Effective_From",
            "select Templates.Template_ID, Templates.Template_Type_Code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates",
        "table_candidates": [
            "Templates"
        ],
        "align_scores": [
            0.9927294850349426,
            0.00018058624118566513,
            0.00016370524826925248,
            8.438267832389101e-05,
            0.00031779950950294733,
            6.971642869757488e-05,
            0.00046792670036666095,
            0.0001141308675869368
        ],
        "align_select": "select Templates.Version_Number, Templates.Template_Type_Code",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the version number and template type code for the template with version number later than 4?",
        "gold_select": "select Templates.Version_Number, Templates.Template_Type_Code",
        "select_candidates": [
            "select Templates.Version_Number, Templates.Template_Type_Code",
            "select Templates.Version_Number, Templates.Template_Type_Code, Templates.Template_ID",
            "select Templates.Version_Number, Templates.Template_Type_Code, Templates.Date_Effective_From",
            "select Templates.Template_ID, Templates.Template_Type_Code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates",
        "table_candidates": [
            "Templates"
        ],
        "align_scores": [
            0.9928359389305115,
            0.00017466071585658938,
            0.00016554429021198303,
            8.397873170906678e-05,
            0.0003266895073466003,
            7.012207788648084e-05,
            0.0004554841434583068,
            0.00011443218681961298
        ],
        "align_select": "select Templates.Version_Number, Templates.Template_Type_Code",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the version number and template type code for the template with version number later than 8?",
        "gold_select": "select Templates.Version_Number, Templates.Template_Type_Code",
        "select_candidates": [
            "select Templates.Version_Number, Templates.Template_Type_Code",
            "select Templates.Version_Number, Templates.Template_Type_Code, Templates.Template_ID",
            "select Templates.Version_Number, Templates.Template_Type_Code, Templates.Date_Effective_From",
            "select Templates.Template_ID, Templates.Template_Type_Code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates",
        "table_candidates": [
            "Templates"
        ],
        "align_scores": [
            0.9926262497901917,
            0.00017855523037724197,
            0.00016206402506213635,
            8.333901496371254e-05,
            0.00031525627127848566,
            6.906135240569711e-05,
            0.0004166880389675498,
            0.00011084209108958021
        ],
        "align_select": "select Templates.Version_Number, Templates.Template_Type_Code",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the version number and template type code for the template with version number later than 3?",
        "gold_select": "select Templates.Version_Number, Templates.Template_Type_Code",
        "select_candidates": [
            "select Templates.Version_Number, Templates.Template_Type_Code",
            "select Templates.Version_Number, Templates.Template_Type_Code, Templates.Template_ID",
            "select Templates.Version_Number, Templates.Template_Type_Code, Templates.Date_Effective_From",
            "select Templates.Template_ID, Templates.Template_Type_Code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates",
        "table_candidates": [
            "Templates"
        ],
        "align_scores": [
            0.99297696352005,
            0.00017556468083057553,
            0.00016656240040902048,
            8.388981223106384e-05,
            0.0003356327360961586,
            7.04915655660443e-05,
            0.00047119951341301203,
            0.00011437413922976702
        ],
        "align_select": "select Templates.Version_Number, Templates.Template_Type_Code",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the version numbers and template type codes of templates with a version number greater than 6.",
        "gold_select": "select Templates.Version_Number, Templates.Template_Type_Code",
        "select_candidates": [
            "select Templates.Version_Number, Templates.Template_Type_Code",
            "select Templates.Version_Number, Templates.Template_Type_Code, Templates.Date_Effective_From",
            "select Templates.Version_Number.c2, Templates.Version_Number",
            "select Templates.Template_ID, Templates.Template_Type_Code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates",
        "table_candidates": [
            "Templates"
        ],
        "align_scores": [
            0.9951571822166443,
            0.00017326998931821436,
            0.00020502606639638543,
            6.933836993994191e-05,
            0.0006759823299944401,
            7.084232493070886e-05,
            0.0003126438532490283,
            9.542574116494507e-05
        ],
        "align_select": "select Templates.Version_Number, Templates.Template_Type_Code",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the version numbers and template type codes of templates with a version number greater than 7.",
        "gold_select": "select Templates.Version_Number, Templates.Template_Type_Code",
        "select_candidates": [
            "select Templates.Version_Number, Templates.Template_Type_Code",
            "select Templates.Version_Number, Templates.Template_Type_Code, Templates.Date_Effective_From",
            "select Templates.Version_Number.c2, Templates.Version_Number",
            "select Templates.Template_ID, Templates.Template_Type_Code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates",
        "table_candidates": [
            "Templates"
        ],
        "align_scores": [
            0.9950167536735535,
            0.00016524876991752535,
            0.00020263560872990638,
            6.757045775884762e-05,
            0.0006154205184429884,
            6.955903518246487e-05,
            0.00031515644514001906,
            9.53377821133472e-05
        ],
        "align_select": "select Templates.Version_Number, Templates.Template_Type_Code",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the version numbers and template type codes of templates with a version number greater than 4.",
        "gold_select": "select Templates.Version_Number, Templates.Template_Type_Code",
        "select_candidates": [
            "select Templates.Version_Number, Templates.Template_Type_Code",
            "select Templates.Version_Number, Templates.Template_Type_Code, Templates.Date_Effective_From",
            "select Templates.Version_Number.c2, Templates.Version_Number",
            "select Templates.Template_ID, Templates.Template_Type_Code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates",
        "table_candidates": [
            "Templates"
        ],
        "align_scores": [
            0.9951556921005249,
            0.0001682640431681648,
            0.00020653940737247467,
            6.961093458812684e-05,
            0.0006116092554293573,
            7.003480277489871e-05,
            0.00029667920898646116,
            9.500807209406048e-05
        ],
        "align_select": "select Templates.Version_Number, Templates.Template_Type_Code",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the version numbers and template type codes of templates with a version number greater than 8.",
        "gold_select": "select Templates.Version_Number, Templates.Template_Type_Code",
        "select_candidates": [
            "select Templates.Version_Number, Templates.Template_Type_Code",
            "select Templates.Version_Number, Templates.Template_Type_Code, Templates.Date_Effective_From",
            "select Templates.Version_Number.c2, Templates.Version_Number",
            "select Templates.Template_ID, Templates.Template_Type_Code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates",
        "table_candidates": [
            "Templates"
        ],
        "align_scores": [
            0.9949703812599182,
            0.00016088479605969042,
            0.00020048585429321975,
            6.801212293794379e-05,
            0.0005968826590105891,
            6.959321035537869e-05,
            0.0003032016975339502,
            9.46258005569689e-05
        ],
        "align_select": "select Templates.Version_Number, Templates.Template_Type_Code",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the version numbers and template type codes of templates with a version number greater than 3.",
        "gold_select": "select Templates.Version_Number, Templates.Template_Type_Code",
        "select_candidates": [
            "select Templates.Version_Number, Templates.Template_Type_Code",
            "select Templates.Version_Number, Templates.Template_Type_Code, Templates.Date_Effective_From",
            "select Templates.Version_Number.c2, Templates.Version_Number",
            "select Templates.Template_ID, Templates.Template_Type_Code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates",
        "table_candidates": [
            "Templates"
        ],
        "align_scores": [
            0.9949945211410522,
            0.00016797453281469643,
            0.0002092592476401478,
            6.937554280739278e-05,
            0.0006286213174462318,
            6.967972876736894e-05,
            0.0002958222758024931,
            9.461424633627757e-05
        ],
        "align_select": "select Templates.Version_Number, Templates.Template_Type_Code",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show the name of teachers aged either 42 or 33?",
        "gold_select": "select teacher.Name",
        "select_candidates": [
            "select teacher.Name",
            "select teacher.Name, teacher.Age",
            "select teacher.Name, teacher.Age, teacher.Hometown",
            "select teacher.Name, teacher.Hometown"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher",
        "table_candidates": [
            "teacher"
        ],
        "align_scores": [
            0.49801912903785706,
            0.0003637821355368942,
            0.00012941013847012073,
            7.474829908460379e-05,
            0.00013642838166560978,
            6.832389772171155e-05,
            0.00013497963664121926,
            8.261532639153302e-05
        ],
        "align_select": "select teacher.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show the name of teachers aged either 36 or 33?",
        "gold_select": "select teacher.Name",
        "select_candidates": [
            "select teacher.Name",
            "select teacher.Name, teacher.Age",
            "select teacher.Name, teacher.Hometown",
            "select teacher.Name (or teacher.Age)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher",
        "table_candidates": [
            "teacher"
        ],
        "align_scores": [
            0.6824559569358826,
            0.00034129765117540956,
            0.00013127016427461058,
            6.89767039148137e-05,
            0.0001329861261183396,
            7.616658695042133e-05,
            0.0005525121232494712,
            7.850059046177194e-05
        ],
        "align_select": "select teacher.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show the name of teachers aged either 26 or 33?",
        "gold_select": "select teacher.Name",
        "select_candidates": [
            "select teacher.Name",
            "select teacher.Name, teacher.Age",
            "select teacher.Name, teacher.Age, teacher.Hometown",
            "select teacher.Name, teacher.Hometown"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher",
        "table_candidates": [
            "teacher"
        ],
        "align_scores": [
            0.991621732711792,
            0.00046728213783353567,
            0.0001424878282705322,
            7.500727951992303e-05,
            0.0001513697934569791,
            6.570542609551921e-05,
            0.00015264892135746777,
            8.578089909860864e-05
        ],
        "align_select": "select teacher.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show the name of teachers aged either 31 or 33?",
        "gold_select": "select teacher.Name",
        "select_candidates": [
            "select teacher.Name",
            "select teacher.Name, teacher.Age",
            "select teacher.Name, teacher.Age, teacher.Hometown",
            "select teacher.Name, teacher.Hometown"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher",
        "table_candidates": [
            "teacher"
        ],
        "align_scores": [
            0.9922548532485962,
            0.00033581757452338934,
            0.00014429344446398318,
            7.062660733936355e-05,
            0.00014666630886495113,
            6.319001113297418e-05,
            0.00015157590678427368,
            8.025727584026754e-05
        ],
        "align_select": "select teacher.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show the name of teachers aged either 39 or 33?",
        "gold_select": "select teacher.Name",
        "select_candidates": [
            "select teacher.Name",
            "select teacher.Name, teacher.Age",
            "select teacher.Name, teacher.Age, teacher.Hometown",
            "select teacher.Name, teacher.Hometown"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher",
        "table_candidates": [
            "teacher"
        ],
        "align_scores": [
            0.6049221754074097,
            0.0003237832570448518,
            0.00013195323117543012,
            7.085002289386466e-05,
            0.00013533252058550715,
            6.345202564261854e-05,
            0.00013446758384816349,
            7.735376857453957e-05
        ],
        "align_select": "select teacher.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show the name of teachers aged either 32 or 43?",
        "gold_select": "select teacher.Name",
        "select_candidates": [
            "select teacher.Name",
            "select teacher.Name, teacher.Age",
            "select teacher.Name, teacher.Age, teacher.Hometown",
            "select teacher.Name, teacher.Hometown"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher",
        "table_candidates": [
            "teacher"
        ],
        "align_scores": [
            0.9913843870162964,
            0.0005140642169862986,
            0.00014702814223710448,
            7.63019488658756e-05,
            0.00014869125152472407,
            6.802003917982802e-05,
            0.00015344559506047517,
            8.634710684418678e-05
        ],
        "align_select": "select teacher.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show the name of teachers aged either 32 or 37?",
        "gold_select": "select teacher.Name",
        "select_candidates": [
            "select teacher.Name",
            "select teacher.Name, teacher.Age",
            "select teacher.Name, teacher.Age, teacher.Hometown",
            "select teacher.Name, teacher.Hometown"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher",
        "table_candidates": [
            "teacher"
        ],
        "align_scores": [
            0.992465615272522,
            0.0003770432958845049,
            0.0001451008574804291,
            7.063058001222089e-05,
            0.00014973414363339543,
            6.340725667541847e-05,
            0.0001543009711895138,
            8.07304895715788e-05
        ],
        "align_select": "select teacher.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show the name of teachers aged either 32 or 27?",
        "gold_select": "select teacher.Name",
        "select_candidates": [
            "select teacher.Name",
            "select teacher.Name, teacher.Age",
            "select teacher.Name, teacher.Age, teacher.Hometown",
            "select teacher.Name, teacher.Age, teacher.Teacher_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher",
        "table_candidates": [
            "teacher"
        ],
        "align_scores": [
            0.5846826434135437,
            0.0003712592297233641,
            0.000129173175082542,
            7.175624341471121e-05,
            0.0001367500954074785,
            6.464200123446062e-05,
            0.00012886438344139606,
            7.146003190428019e-05
        ],
        "align_select": "select teacher.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show the name of teachers aged either 32 or 32?",
        "gold_select": "select teacher.Name",
        "select_candidates": [
            "select teacher.Name",
            "select teacher.Name, teacher.Age",
            "select teacher.Name or teacher.Age",
            "select teacher.Name ou teacher.Age"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher",
        "table_candidates": [
            "teacher"
        ],
        "align_scores": [
            0.32925552129745483,
            0.00019541832443792373,
            0.00014193238166626543,
            7.03322293702513e-05,
            0.0002491279738023877,
            8.283186616608873e-05,
            0.0003117140440735966,
            8.170400542439893e-05
        ],
        "align_select": "select teacher.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show the name of teachers aged either 32 or 40?",
        "gold_select": "select teacher.Name",
        "select_candidates": [
            "select teacher.Name",
            "select teacher.Name, teacher.Age",
            "select teacher.Name, teacher.Age, teacher.Hometown",
            "select teacher.Name, teacher.Age, teacher.Teacher_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher",
        "table_candidates": [
            "teacher"
        ],
        "align_scores": [
            0.989528477191925,
            0.0003979743632953614,
            0.00014165400352794677,
            7.488921255571768e-05,
            0.00014739450125489384,
            6.802626739954576e-05,
            0.0001372627157252282,
            7.388744415948167e-05
        ],
        "align_select": "select teacher.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of the teachers who are aged either 42 or 33?",
        "gold_select": "select teacher.Name",
        "select_candidates": [
            "select teacher.Name",
            "select teacher.Name, teacher.Age",
            "select teacher.Name, teacher.Hometown",
            "select teacher.Name (or teacher.Age)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher",
        "table_candidates": [
            "teacher"
        ],
        "align_scores": [
            0.4406651258468628,
            0.0004653055511880666,
            0.00016082038928288966,
            7.107388228178024e-05,
            0.00015195853484328836,
            8.07251053629443e-05,
            0.0006522465264424682,
            7.680017006350681e-05
        ],
        "align_select": "select teacher.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of the teachers who are aged either 36 or 33?",
        "gold_select": "select teacher.Name",
        "select_candidates": [
            "select teacher.Name",
            "select teacher.Name, teacher.Age",
            "select teacher.Name, teacher.Hometown",
            "select teacher.Name ou teacher.Age"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher",
        "table_candidates": [
            "teacher"
        ],
        "align_scores": [
            0.6985493898391724,
            0.00036393996560946107,
            0.00016165812849067152,
            6.472983659477904e-05,
            0.00015266946866177022,
            7.105252734618261e-05,
            0.0002617901482153684,
            6.999989273026586e-05
        ],
        "align_select": "select teacher.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of the teachers who are aged either 26 or 33?",
        "gold_select": "select teacher.Name",
        "select_candidates": [
            "select teacher.Name",
            "select teacher.Name, teacher.Age",
            "select teacher.Name, teacher.Hometown",
            "select teacher.Name, teacher.Age, teacher.Hometown"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher",
        "table_candidates": [
            "teacher"
        ],
        "align_scores": [
            0.9883149862289429,
            0.0005862580728717148,
            0.00017166596080642194,
            7.012328569544479e-05,
            0.00018624438962433487,
            8.250118116848171e-05,
            0.00017283174383919686,
            6.533834675792605e-05
        ],
        "align_select": "select teacher.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of the teachers who are aged either 31 or 33?",
        "gold_select": "select teacher.Name",
        "select_candidates": [
            "select teacher.Name",
            "select teacher.Name, teacher.Age",
            "select teacher.Name, teacher.Hometown",
            "select teacher.Name, teacher.Age, teacher.Hometown"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher",
        "table_candidates": [
            "teacher"
        ],
        "align_scores": [
            0.9903311729431152,
            0.000419615680584684,
            0.0001721787266433239,
            6.845589086879045e-05,
            0.0001765699707902968,
            7.501571963075548e-05,
            0.00017394822498317808,
            6.284627306740731e-05
        ],
        "align_select": "select teacher.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of the teachers who are aged either 39 or 33?",
        "gold_select": "select teacher.Name",
        "select_candidates": [
            "select teacher.Name",
            "select teacher.Name, teacher.Age",
            "select teacher.Name, teacher.Hometown",
            "select teacher.Name ou teacher.Age"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher",
        "table_candidates": [
            "teacher"
        ],
        "align_scores": [
            0.5467920303344727,
            0.00036105801700614393,
            0.00016379187582060695,
            6.624213710892946e-05,
            0.00015241432993207127,
            7.441324851242825e-05,
            0.00026605266612023115,
            7.286267646122724e-05
        ],
        "align_select": "select teacher.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of the teachers who are aged either 32 or 43?",
        "gold_select": "select teacher.Name",
        "select_candidates": [
            "select teacher.Name",
            "select teacher.Name, teacher.Age",
            "select teacher.Name, teacher.Hometown",
            "select teacher.Name, teacher.Age, teacher.Hometown"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher",
        "table_candidates": [
            "teacher"
        ],
        "align_scores": [
            0.9877354502677917,
            0.0006003787275403738,
            0.00017161817231681198,
            7.175364589784294e-05,
            0.0001827992091421038,
            8.305934170493856e-05,
            0.00017032280447892845,
            6.695903721265495e-05
        ],
        "align_select": "select teacher.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of the teachers who are aged either 32 or 37?",
        "gold_select": "select teacher.Name",
        "select_candidates": [
            "select teacher.Name",
            "select teacher.Name, teacher.Age",
            "select teacher.Name, teacher.Hometown",
            "select teacher.Name, t1.c7"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher",
        "table_candidates": [
            "teacher"
        ],
        "align_scores": [
            0.9903806447982788,
            0.00042644338100217283,
            0.0001721229200484231,
            6.776778900530189e-05,
            0.0001804354542400688,
            7.771732634864748e-05,
            0.00039110597572289407,
            8.274147694464773e-05
        ],
        "align_select": "select teacher.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of the teachers who are aged either 32 or 27?",
        "gold_select": "select teacher.Name",
        "select_candidates": [
            "select teacher.Name",
            "select teacher.Name, teacher.Age",
            "select teacher.Name, teacher.Hometown",
            "select teacher.Name ou teacher.Age"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher",
        "table_candidates": [
            "teacher"
        ],
        "align_scores": [
            0.5084579586982727,
            0.00038603137363679707,
            0.0001609603059478104,
            6.577382009709254e-05,
            0.00015340259415097535,
            7.612925401190296e-05,
            0.00026547390734776855,
            7.156934589147568e-05
        ],
        "align_select": "select teacher.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of the teachers who are aged either 32 or 32?",
        "gold_select": "select teacher.Name",
        "select_candidates": [
            "select teacher.Name",
            "select teacher.Name, teacher.Age",
            "select teacher.Name or teacher.Age",
            "select teacher.Name ou teacher.Age"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher",
        "table_candidates": [
            "teacher"
        ],
        "align_scores": [
            0.43387600779533386,
            0.00026069674640893936,
            0.00017782770737539977,
            6.867617776151747e-05,
            0.0005497164675034583,
            7.321134035009891e-05,
            0.0002825060801114887,
            7.267157343449071e-05
        ],
        "align_select": "select teacher.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of the teachers who are aged either 32 or 40?",
        "gold_select": "select teacher.Name",
        "select_candidates": [
            "select teacher.Name",
            "select teacher.Name, teacher.Age",
            "select teacher.Name, teacher.Hometown",
            "select teacher.Name, teacher.Teacher_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher",
        "table_candidates": [
            "teacher"
        ],
        "align_scores": [
            0.985862672328949,
            0.0004594184283632785,
            0.0001711077056825161,
            7.202629058156163e-05,
            0.00017975698574446142,
            8.194934343919158e-05,
            0.0001926460536196828,
            7.843803177820519e-05
        ],
        "align_select": "select teacher.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many visitors below age 40 are there?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), visitor.ID",
            "select count(*), visitor.Age",
            "select count(*),"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "visitor",
        "table_candidates": [
            "visitor"
        ],
        "align_scores": [
            0.9923074245452881,
            0.0006169601110741496,
            0.00027199951000511646,
            0.0002415220660623163,
            0.00028115883469581604,
            0.14152111113071442,
            0.0008184541366063058,
            0.14001093804836273
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many visitors below age 37 are there?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), visitor.ID",
            "select count(*), visitor.Age",
            "select count(*),"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "visitor",
        "table_candidates": [
            "visitor"
        ],
        "align_scores": [
            0.9938483834266663,
            8.76726335263811e-05,
            0.000282388151390478,
            7.639251998625696e-05,
            0.0002912870259024203,
            0.00010211350308964029,
            0.0008679582388140261,
            8.973143121693283e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many visitors below age 27 are there?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), visitor.ID",
            "select count(*), visitor.Age",
            "select count(*),"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "visitor",
        "table_candidates": [
            "visitor"
        ],
        "align_scores": [
            0.9944978356361389,
            0.0005345277604646981,
            0.00029210795764811337,
            0.0002875654899980873,
            0.00033236335730180144,
            0.11602514982223511,
            0.00085126340854913,
            0.1363094300031662
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many visitors below age 26 are there?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), visitor.ID",
            "select count(*), visitor.Age",
            "select count(*),"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "visitor",
        "table_candidates": [
            "visitor"
        ],
        "align_scores": [
            0.9943404197692871,
            0.0005769883282482624,
            0.0002892212360166013,
            0.00029906866257078946,
            0.00033770050504244864,
            0.17064720392227173,
            0.0008334037847816944,
            0.12446533143520355
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many visitors below age 28 are there?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), visitor.ID",
            "select count(*), visitor.Age",
            "select count(*),"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "visitor",
        "table_candidates": [
            "visitor"
        ],
        "align_scores": [
            0.9943899512290955,
            0.000605661072768271,
            0.00029024164541624486,
            0.0002879635721910745,
            0.00032539491076022387,
            0.14325153827667236,
            0.0008388994028791785,
            0.14587895572185516
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the names of the visitors whose membership level is higher than 5, and order the results by the level from high to low.",
        "gold_select": "select visitor.Name",
        "select_candidates": [
            "select visitor.Name",
            "select visitor.Name, visitor.Level_of_membership",
            "select visitor.Name-ORDER BY",
            "select visitor.Name, t1.c5"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY",
            "SELECT-FROM-WHERE-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "visitor",
        "table_candidates": [
            "visitor"
        ],
        "align_scores": [
            0.6489709615707397,
            0.00029324027127586305,
            0.00022743163572158664,
            8.63603490870446e-05,
            0.0024701664224267006,
            0.00021925527835264802,
            0.00023644221073482186,
            0.00019025997607968748
        ],
        "align_select": "select visitor.Name",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY"
    },
    {
        "question": "Find the names of the visitors whose membership level is higher than 6, and order the results by the level from high to low.",
        "gold_select": "select visitor.Name",
        "select_candidates": [
            "select visitor.Name",
            "select visitor.Name, visitor.Level_of_membership",
            "select visitor.Name, t1.c6",
            "select visitor.Name-ORDER BY"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY",
            "SELECT-FROM-WHERE-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "visitor",
        "table_candidates": [
            "visitor"
        ],
        "align_scores": [
            0.6884207725524902,
            0.0003188155242241919,
            0.00022530612477567047,
            8.792875451035798e-05,
            0.00023335801961366087,
            0.00019981295918114483,
            0.002882228931412101,
            0.00023935848730616271
        ],
        "align_select": "select visitor.Name",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY"
    },
    {
        "question": "Find the names of the visitors whose membership level is higher than 7, and order the results by the level from high to low.",
        "gold_select": "select visitor.Name",
        "select_candidates": [
            "select visitor.Name",
            "select visitor.Name, visitor.Level_of_membership",
            "select visitor.Name-ORDER BY",
            "select visitor.Name, t1.c7"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY",
            "SELECT-FROM-WHERE-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "visitor",
        "table_candidates": [
            "visitor"
        ],
        "align_scores": [
            0.6501883864402771,
            0.0003165041853208095,
            0.0002239610766991973,
            8.793646702542901e-05,
            0.002957711461931467,
            0.00023492139007430524,
            0.00023612163204234093,
            0.00019938452169299126
        ],
        "align_select": "select visitor.Name",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY"
    },
    {
        "question": "Find the names of the visitors whose membership level is higher than 1, and order the results by the level from high to low.",
        "gold_select": "select visitor.Name",
        "select_candidates": [
            "select visitor.Name",
            "select visitor.Name, visitor.Level_of_membership",
            "select visitor.Name, visitor.Level_of_membership, visitor.Age",
            "select visitor.Name, visitor.Level_of_membership - visitor.Age"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY",
            "SELECT-FROM-WHERE-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "visitor",
        "table_candidates": [
            "visitor"
        ],
        "align_scores": [
            0.9868729710578918,
            0.9868729710578918,
            0.00023143294674810022,
            0.00023143294674810022,
            0.00010822361946338788,
            0.00010822361946338788,
            0.00013467506505548954,
            0.00013467506505548954
        ],
        "align_select": "select visitor.Name",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY"
    },
    {
        "question": "What is the average age of the visitors whose membership level is not higher than 5?",
        "gold_select": "select avg(visitor.Age)",
        "select_candidates": [
            "select avg(visitor.Age)",
            "select an avg(visitor.Age)",
            "select  avg(visitor.Age)",
            "select the avg(visitor.Age)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "visitor",
        "table_candidates": [
            "visitor"
        ],
        "align_scores": [
            0.9945341348648071,
            0.00012498495925683528,
            0.0005454336060211062,
            0.00010839301103260368,
            0.9945341348648071,
            0.00012498495925683528,
            0.0005852648755535483,
            0.0001164076165878214
        ],
        "align_select": "select avg(visitor.Age)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the average age of the visitors whose membership level is not higher than 10?",
        "gold_select": "select avg(visitor.Age)",
        "select_candidates": [
            "select avg(visitor.Age)",
            "select an avg(visitor.Age)",
            "select  avg(visitor.Age)",
            "select the avg(visitor.Age)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "visitor",
        "table_candidates": [
            "visitor"
        ],
        "align_scores": [
            0.9946991205215454,
            0.00010652512719389051,
            0.0005336745525710285,
            0.00010275437671225518,
            0.9946991205215454,
            0.00010652512719389051,
            0.000571533280890435,
            0.00011678117152769119
        ],
        "align_select": "select avg(visitor.Age)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the average age of the visitors whose membership level is not higher than 6?",
        "gold_select": "select avg(visitor.Age)",
        "select_candidates": [
            "select avg(visitor.Age)",
            "select an avg(visitor.Age)",
            "select  avg(visitor.Age)",
            "select the avg(visitor.Age)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "visitor",
        "table_candidates": [
            "visitor"
        ],
        "align_scores": [
            0.9945183396339417,
            0.00012341211549937725,
            0.0005525439628399909,
            0.00010975163604598492,
            0.9945183396339417,
            0.00012341211549937725,
            0.0005918363458476961,
            0.00011969589832006022
        ],
        "align_select": "select avg(visitor.Age)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the average age of the visitors whose membership level is not higher than 13?",
        "gold_select": "select avg(visitor.Age)",
        "select_candidates": [
            "select avg(visitor.Age)",
            "select an avg(visitor.Age)",
            "select  avg(visitor.Age)",
            "select the avg(visitor.Age)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "visitor",
        "table_candidates": [
            "visitor"
        ],
        "align_scores": [
            0.9948726296424866,
            0.00012198252079542726,
            0.0005599887226708233,
            0.00011024862033082172,
            0.9948726296424866,
            0.00012198252079542726,
            0.000603310763835907,
            0.00011994600936304778
        ],
        "align_select": "select avg(visitor.Age)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the average age of the visitors whose membership level is not higher than 8?",
        "gold_select": "select avg(visitor.Age)",
        "select_candidates": [
            "select avg(visitor.Age)",
            "select an avg(visitor.Age)",
            "select  avg(visitor.Age)",
            "select the avg(visitor.Age)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "visitor",
        "table_candidates": [
            "visitor"
        ],
        "align_scores": [
            0.9944998025894165,
            0.00010522748925723135,
            0.0005473637138493359,
            0.00010399582242826,
            0.9944998025894165,
            0.00010522748925723135,
            0.0005826686974614859,
            0.00011993754742434248
        ],
        "align_select": "select avg(visitor.Age)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the name and membership level of the visitors whose membership level is higher than 5, and sort by their age from old to young.",
        "gold_select": "select visitor.Name, visitor.Level_of_membership",
        "select_candidates": [
            "select visitor.Name, visitor.Level_of_membership",
            "select visitor.Name, visitor.Level_of_membership, visitor.Age",
            "select visitor.Name, visitor.Level_of_membership sort by visitor.Age",
            "select visitor.Name, visitor.Level_of_membership and visitor.Age"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY",
            "SELECT-FROM-WHERE-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "visitor",
        "table_candidates": [
            "visitor"
        ],
        "align_scores": [
            0.9920409321784973,
            0.0004805587523151189,
            0.0007250578491948545,
            0.00010547532292548567,
            0.002256877487525344,
            0.00013938466145191342,
            0.0021870045457035303,
            0.00013916670286562294
        ],
        "align_select": "select visitor.Name, visitor.Level_of_membership",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY"
    },
    {
        "question": "Find the name and membership level of the visitors whose membership level is higher than 6, and sort by their age from old to young.",
        "gold_select": "select visitor.Name, visitor.Level_of_membership",
        "select_candidates": [
            "select visitor.Name, visitor.Level_of_membership",
            "select visitor.Name, visitor.Level_of_membership, visitor.Age",
            "select visitor.Name, visitor.Level_of_membership sort by visitor.Age",
            "select visitor.Name, visitor.Level_of_membership and visitor.Age"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY",
            "SELECT-FROM-WHERE-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "visitor",
        "table_candidates": [
            "visitor"
        ],
        "align_scores": [
            0.9924254417419434,
            0.00036207091761752963,
            0.0007314838003367186,
            9.956193389371037e-05,
            0.002543891314417124,
            0.00014621808077208698,
            0.0023673600517213345,
            0.0001327564095845446
        ],
        "align_select": "select visitor.Name, visitor.Level_of_membership",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY"
    },
    {
        "question": "Find the name and membership level of the visitors whose membership level is higher than 7, and sort by their age from old to young.",
        "gold_select": "select visitor.Name, visitor.Level_of_membership",
        "select_candidates": [
            "select visitor.Name, visitor.Level_of_membership",
            "select visitor.Name, visitor.Level_of_membership, visitor.Age",
            "select visitor.Name, visitor.Level_of_membership sort by visitor.Age",
            "select visitor.Name, visitor.Level_of_membership and visitor.Age"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY",
            "SELECT-FROM-WHERE-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "visitor",
        "table_candidates": [
            "visitor"
        ],
        "align_scores": [
            0.9924815893173218,
            0.00037611028528772295,
            0.0007512662559747696,
            9.985734504880384e-05,
            0.0025497658643871546,
            0.00014191721857059747,
            0.0026259804144501686,
            0.0001332040410488844
        ],
        "align_select": "select visitor.Name, visitor.Level_of_membership",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY"
    },
    {
        "question": "Find the name and membership level of the visitors whose membership level is higher than 1, and sort by their age from old to young.",
        "gold_select": "select visitor.Name, visitor.Level_of_membership",
        "select_candidates": [
            "select visitor.Name, visitor.Level_of_membership",
            "select visitor.Name, visitor.Level_of_membership, visitor.Age",
            "select visitor.Name, visitor.Level_of_membership sort by visitor.Age",
            "select visitor.Name, visitor.Level_of_membership and visitor.Age"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY",
            "SELECT-FROM-WHERE-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "visitor",
        "table_candidates": [
            "visitor"
        ],
        "align_scores": [
            0.9919449687004089,
            0.00035945174749940634,
            0.0006089310627430677,
            9.624310041544959e-05,
            0.001537167583592236,
            0.00012368506577331573,
            0.0014990895288065076,
            0.0001207906607305631
        ],
        "align_select": "select visitor.Name, visitor.Level_of_membership",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY"
    },
    {
        "question": "Find the average number of staff working for the museums that were open before 2019.",
        "gold_select": "select avg(museum.Num_of_Staff)",
        "select_candidates": [
            "select avg(museum.Num_of_Staff)",
            "select avg(t0.c4)",
            "select  avg(museum.Num_of_Staff)",
            "select an avg(museum.Num_of_Staff)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "museum",
        "table_candidates": [
            "museum"
        ],
        "align_scores": [
            0.989210844039917,
            0.00017295109864789993,
            0.0010642552515491843,
            0.00017827842384576797,
            0.989210844039917,
            0.00017295109864789993,
            0.000441025011241436,
            0.0001184426510008052
        ],
        "align_select": "select avg(museum.Num_of_Staff)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the average number of staff working for the museums that were open before 2013.",
        "gold_select": "select avg(museum.Num_of_Staff)",
        "select_candidates": [
            "select avg(museum.Num_of_Staff)",
            "select avg(t0.c4)",
            "select  avg(museum.Num_of_Staff)",
            "select an avg(museum.Num_of_Staff)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "museum",
        "table_candidates": [
            "museum"
        ],
        "align_scores": [
            0.9904797673225403,
            0.00017283536726608872,
            0.0011942818528041244,
            0.00017710345855448395,
            0.9904797673225403,
            0.00017283536726608872,
            0.00043957342859357595,
            0.0001173536220449023
        ],
        "align_select": "select avg(museum.Num_of_Staff)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the average number of staff working for the museums that were open before 2003.",
        "gold_select": "select avg(museum.Num_of_Staff)",
        "select_candidates": [
            "select avg(museum.Num_of_Staff)",
            "select avg(t0.c4)",
            "select an avg(museum.Num_of_Staff)",
            "select  avg(museum.Num_of_Staff)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "museum",
        "table_candidates": [
            "museum"
        ],
        "align_scores": [
            0.9915531277656555,
            0.00014458004443440586,
            0.0011985228629782796,
            0.0001700712600722909,
            0.0004271193465683609,
            0.00011178774002473801,
            0.9915531277656555,
            0.00014458004443440586
        ],
        "align_select": "select avg(museum.Num_of_Staff)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the average number of staff working for the museums that were open before 2008.",
        "gold_select": "select avg(museum.Num_of_Staff)",
        "select_candidates": [
            "select avg(museum.Num_of_Staff)",
            "select avg(t0.c4)",
            "select  avg(museum.Num_of_Staff)",
            "select an avg(museum.Num_of_Staff)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "museum",
        "table_candidates": [
            "museum"
        ],
        "align_scores": [
            0.9908263087272644,
            0.0001436398597434163,
            0.0011137553956359625,
            0.00017681391909718513,
            0.9908263087272644,
            0.0001436398597434163,
            0.00043010013177990913,
            0.00011428616562625393
        ],
        "align_select": "select avg(museum.Num_of_Staff)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the average number of staff working for the museums that were open before 2016.",
        "gold_select": "select avg(museum.Num_of_Staff)",
        "select_candidates": [
            "select avg(museum.Num_of_Staff)",
            "select avg(t0.c4)",
            "select  avg(museum.Num_of_Staff)",
            "select an avg(museum.Num_of_Staff)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "museum",
        "table_candidates": [
            "museum"
        ],
        "align_scores": [
            0.9901204109191895,
            0.00018123291374649853,
            0.0010746633633971214,
            0.00018067164637614042,
            0.9901204109191895,
            0.00018123291374649853,
            0.00044073688331991434,
            0.00011759041080949828
        ],
        "align_select": "select avg(museum.Num_of_Staff)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "find the names of museums which have more staff than the minimum staff number of all museums opened after 2004.",
        "gold_select": "select museum.Name",
        "select_candidates": [
            "select museum.Name",
            "select museum.Name, museum.Num_of_Staff",
            "select museum.Name, museum.Num_of_Staff, museum.Open_Year",
            "select museum.Name, museum.Num_of_Staff, museum.Open_Year"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "museum",
        "table_candidates": [
            "museum"
        ],
        "align_scores": [
            0.79237300157547,
            0.00015502744645345956,
            0.0002922408457379788,
            7.31107356841676e-05,
            0.00015429627092089504,
            5.9638994571287185e-05,
            0.00015429627092089504,
            5.9638994571287185e-05
        ],
        "align_select": "select museum.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "find the names of museums which have more staff than the minimum staff number of all museums opened after 2009.",
        "gold_select": "select museum.Name",
        "select_candidates": [
            "select museum.Name",
            "select museum.Name, museum.Num_of_Staff",
            "select museum.Name, museum.Num_of_Staff, museum.Open_Year",
            "select museum.Name, museum.Open_Year"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "museum",
        "table_candidates": [
            "museum"
        ],
        "align_scores": [
            0.771124005317688,
            0.00015845133748371154,
            0.00029180984711274505,
            7.321803423110396e-05,
            0.00015607177920173854,
            5.9583278925856575e-05,
            0.00023316343140322715,
            7.043343794066459e-05
        ],
        "align_select": "select museum.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "find the names of museums which have more staff than the minimum staff number of all museums opened after 2007.",
        "gold_select": "select museum.Name",
        "select_candidates": [
            "select museum.Name",
            "select museum.Name, museum.Num_of_Staff",
            "select museum.Name, museum.Num_of_Staff, museum.Open_Year",
            "select museum.Name, museum.Open_Year"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "museum",
        "table_candidates": [
            "museum"
        ],
        "align_scores": [
            0.791716456413269,
            0.00015708868158981204,
            0.0002874764031730592,
            7.313868263736367e-05,
            0.0001544512779219076,
            5.9569018048932776e-05,
            0.0002323403168702498,
            6.973238487262279e-05
        ],
        "align_select": "select museum.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "find the names of museums which have more staff than the minimum staff number of all museums opened after 2006.",
        "gold_select": "select museum.Name",
        "select_candidates": [
            "select museum.Name",
            "select museum.Name, museum.Num_of_Staff",
            "select museum.Name, museum.Num_of_Staff, museum.Open_Year",
            "select museum.Name, museum.Open_Year"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "museum",
        "table_candidates": [
            "museum"
        ],
        "align_scores": [
            0.7888082265853882,
            0.00015526889183092862,
            0.00028705925797112286,
            7.296710828086361e-05,
            0.00015484396135434508,
            5.9703117585740983e-05,
            0.00023138619144447148,
            7.022566569503397e-05
        ],
        "align_select": "select museum.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "find the names of museums which have more staff than the minimum staff number of all museums opened after 2008.",
        "gold_select": "select museum.Name",
        "select_candidates": [
            "select museum.Name",
            "select museum.Name, museum.Num_of_Staff",
            "select museum.Name, museum.Num_of_Staff, museum.Open_Year",
            "select museum.Name, museum.Open_Year"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "museum",
        "table_candidates": [
            "museum"
        ],
        "align_scores": [
            0.7813689112663269,
            0.00015426950994879007,
            0.00028664604178629816,
            7.27374354028143e-05,
            0.00015477783745154738,
            5.955583765171468e-05,
            0.0002323673543287441,
            7.017145253485069e-05
        ],
        "align_select": "select museum.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the total ticket expense of the visitors whose membership level is 4?",
        "gold_select": "select sum(visit.Total_spent)",
        "select_candidates": [
            "select sum(visit.Total_spent)",
            "select sum(visit.Total_spent), visitor.ID",
            "select sum(visit.Num_of_Ticket)",
            "select sum(visit.Total_spent), visitor.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "visitor visit",
        "table_candidates": [
            "visitor visit"
        ],
        "align_scores": [
            0.9902939796447754,
            8.835295011522248e-05,
            0.00015282677486538887,
            6.821751594543457e-05,
            0.19596357643604279,
            7.987977733137086e-05,
            0.00016139214858412743,
            6.987643428146839e-05
        ],
        "align_select": "select sum(visit.Total_spent)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the total ticket expense of the visitors whose membership level is 10?",
        "gold_select": "select sum(visit.Total_spent)",
        "select_candidates": [
            "select sum(visit.Total_spent)",
            "select sum(visit.Num_of_Ticket)",
            "select sum(visit.Total_spent), visitor.ID",
            "select sum(visit.Total_spent), visitor.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "visitor visit",
        "table_candidates": [
            "visitor visit"
        ],
        "align_scores": [
            0.9889244437217712,
            0.002200675429776311,
            0.5428410768508911,
            0.0003970851539634168,
            0.00015041687584016472,
            0.00032120037940330803,
            0.00016024788783397526,
            0.00020061663235537708
        ],
        "align_select": "select sum(visit.Total_spent)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the total ticket expense of the visitors whose membership level is 5?",
        "gold_select": "select sum(visit.Total_spent)",
        "select_candidates": [
            "select sum(visit.Total_spent)",
            "select sum(visit.Total_spent), visitor.ID",
            "select sum(visit.Num_of_Ticket)",
            "select sum(visit.Total_spent), visitor.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "visitor visit",
        "table_candidates": [
            "visitor visit"
        ],
        "align_scores": [
            0.9897525310516357,
            8.183132740668952e-05,
            0.00015240472566802055,
            5.975336171104573e-05,
            0.30612966418266296,
            7.778902363497764e-05,
            0.00016139491344802082,
            6.61817830405198e-05
        ],
        "align_select": "select sum(visit.Total_spent)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the total ticket expense of the visitors whose membership level is 7?",
        "gold_select": "select sum(visit.Total_spent)",
        "select_candidates": [
            "select sum(visit.Total_spent)",
            "select sum(visit.Total_spent), visitor.ID",
            "select sum(visit.Num_of_Ticket)",
            "select sum(visit.Total_spent), visitor.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "visitor visit",
        "table_candidates": [
            "visitor visit"
        ],
        "align_scores": [
            0.9900690913200378,
            8.686962974024937e-05,
            0.00015251696459017694,
            6.860555004095659e-05,
            0.21464507281780243,
            7.899018964963034e-05,
            0.0001623964635655284,
            6.953112460905686e-05
        ],
        "align_select": "select sum(visit.Total_spent)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the total ticket expense of the visitors whose membership level is 8?",
        "gold_select": "select sum(visit.Total_spent)",
        "select_candidates": [
            "select sum(visit.Total_spent)",
            "select sum(visit.Num_of_Ticket)",
            "select sum(visit.Total_spent), visitor.ID",
            "select sum(visit.Total_spent), visitor.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "visitor visit",
        "table_candidates": [
            "visitor visit"
        ],
        "align_scores": [
            0.989932656288147,
            0.002819543704390526,
            0.30123138427734375,
            0.0003704683040268719,
            0.00015146205259952694,
            0.0003844740567728877,
            0.00016134136239998043,
            0.00021595475845970213
        ],
        "align_select": "select sum(visit.Total_spent)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the name of the visitor who visited both a museum opened before 2019 and a museum opened after 2011?",
        "gold_select": "select visitor.Name",
        "select_candidates": [
            "select visitor.Name",
            "select visitor.Name, museum.Name",
            "select visitor.Name, museum.Open_Year",
            "select visitor.Name, visit.visitor_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "museum visitor visit",
        "table_candidates": [
            "museum visitor visit"
        ],
        "align_scores": [
            0.971089243888855,
            0.12501724064350128,
            0.0004039984487462789,
            0.0002888431481551379,
            0.0006426080362871289,
            0.00048037554370239377,
            0.00019563236855901778,
            0.00014241189637687057
        ],
        "align_select": "select visitor.Name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "What is the name of the visitor who visited both a museum opened before 2013 and a museum opened after 2011?",
        "gold_select": "select visitor.Name",
        "select_candidates": [
            "select visitor.Name",
            "select visitor.Name, museum.Name",
            "select visitor.Name, museum.Open_Year",
            "select visitor.Name, visit.visitor_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "museum visitor visit",
        "table_candidates": [
            "museum visitor visit"
        ],
        "align_scores": [
            0.9638018012046814,
            0.9638018012046814,
            0.0004005179216619581,
            0.0004005179216619581,
            0.0005749165429733694,
            0.0005749165429733694,
            0.00020524513092823327,
            0.00020524513092823327
        ],
        "align_select": "select visitor.Name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "What is the name of the visitor who visited both a museum opened before 2016 and a museum opened after 2011?",
        "gold_select": "select visitor.Name",
        "select_candidates": [
            "select visitor.Name",
            "select visitor.Name, museum.Name",
            "select visitor.Name, museum.Open_Year",
            "select visitor.Name, visit.visitor_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "museum visitor visit",
        "table_candidates": [
            "museum visitor visit"
        ],
        "align_scores": [
            0.9663683772087097,
            0.09612953662872314,
            0.00039303835364989936,
            0.00027821975527331233,
            0.0006320145912468433,
            0.0004587416769936681,
            0.0001987577707041055,
            0.00014263435150496662
        ],
        "align_select": "select visitor.Name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "What is the name of the visitor who visited both a museum opened before 2017 and a museum opened after 2011?",
        "gold_select": "select visitor.Name",
        "select_candidates": [
            "select visitor.Name",
            "select visitor.Name, museum.Name",
            "select visitor.Name, museum.Open_Year",
            "select visitor.Name, visit.visitor_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "museum visitor visit",
        "table_candidates": [
            "museum visitor visit"
        ],
        "align_scores": [
            0.9661978483200073,
            0.9661978483200073,
            0.00039643366471864283,
            0.00039643366471864283,
            0.0006178604671731591,
            0.0006178604671731591,
            0.0001977960637304932,
            0.0001977960637304932
        ],
        "align_select": "select visitor.Name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "What is the name of the visitor who visited both a museum opened before 2018 and a museum opened after 2011?",
        "gold_select": "select visitor.Name",
        "select_candidates": [
            "select visitor.Name",
            "select visitor.Name, museum.Name",
            "select visitor.Name, museum.Open_Year",
            "select visitor.Name, visit.visitor_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "museum visitor visit",
        "table_candidates": [
            "museum visitor visit"
        ],
        "align_scores": [
            0.9679692387580872,
            0.10876867175102234,
            0.00040054006967693567,
            0.00028191632009111345,
            0.0006279100198298693,
            0.00046065158676356077,
            0.00019633761257864535,
            0.0001412482961313799
        ],
        "align_select": "select visitor.Name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "Find the number of visitors who did not visit any museum opened after 2020.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), museum.Name",
            "select count(*), museum.Open_Year",
            "select count(*), museum.Museum_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "museum visitor visit",
        "table_candidates": [
            "museum visitor visit",
            "museum visitor",
            "visitor visit"
        ],
        "align_scores": [
            0.9182168841362,
            0.0011838478967547417,
            0.00031065227813087404,
            0.002054200042039156,
            0.0002777051122393459,
            0.0015955740818753839,
            0.00019224107381887734,
            0.00030310198781080544
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the number of visitors who did not visit any museum opened after 2014.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), museum.Name",
            "select count(*), museum.Open_Year",
            "select count(*), museum.Museum_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "museum visitor visit",
        "table_candidates": [
            "museum visitor visit",
            "museum visitor",
            "visitor visit"
        ],
        "align_scores": [
            0.9336302280426025,
            0.0013640110846608877,
            0.0003333960485178977,
            0.002580820582807064,
            0.0003095504071097821,
            0.0022945497184991837,
            0.0002035115467151627,
            0.00034771356149576604
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the number of visitors who did not visit any museum opened after 2017.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), museum.Open_Year",
            "select count(*), museum.Name",
            "select count(*), museum.Museum_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "museum visitor visit",
        "table_candidates": [
            "museum visitor visit",
            "museum visitor",
            "visitor visit"
        ],
        "align_scores": [
            0.9265096187591553,
            0.001322473748587072,
            0.00031302799470722675,
            0.0024164854548871517,
            0.00032621179707348347,
            0.002276929561048746,
            0.0002017451188294217,
            0.0003564234939403832
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the number of visitors who did not visit any museum opened after 2018.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), museum.Name",
            "select count(*), museum.Open_Year",
            "select count(*), museum.Museum_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "museum visitor visit",
        "table_candidates": [
            "museum visitor visit",
            "museum visitor",
            "visitor visit"
        ],
        "align_scores": [
            0.9315952658653259,
            0.0012829535407945514,
            0.0003185590903740376,
            0.0022437721490859985,
            0.00030420522671192884,
            0.002213707659393549,
            0.00019936154421884567,
            0.0003379749250598252
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the number of visitors who did not visit any museum opened after 2019.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), museum.Open_Year",
            "select count(*), museum.Name",
            "select count(*), museum.Museum_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "museum visitor visit",
        "table_candidates": [
            "museum visitor visit",
            "museum visitor",
            "visitor visit"
        ],
        "align_scores": [
            0.9319490194320679,
            0.001159705687314272,
            0.00030476669780910015,
            0.0020358709152787924,
            0.00032079056836664677,
            0.002088087610900402,
            0.0001986026472877711,
            0.0003379707341082394
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many museums were opened after 2007 or before 2008?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), museum.Museum_ID",
            "select count(*), museum.Name",
            "select count(*), museum.Open_Year"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "museum",
        "table_candidates": [
            "museum"
        ],
        "align_scores": [
            0.9874703288078308,
            7.778791041346267e-05,
            0.00020701989706140012,
            5.92175820202101e-05,
            0.00025589540018700063,
            6.069393202778883e-05,
            0.00021988082153256983,
            5.873060581507161e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many museums were opened after 2010 or before 2008?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), museum.Museum_ID",
            "select count(*), museum.Open_Year",
            "select count(*), museum.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "museum",
        "table_candidates": [
            "museum"
        ],
        "align_scores": [
            0.9640390276908875,
            7.760326843708754e-05,
            0.00018612368148751557,
            5.9867885283892974e-05,
            0.0002005588758038357,
            5.9301102737663314e-05,
            0.0002335073659196496,
            6.197669426910579e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many museums were opened after 2009 or before 2008?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), museum.Open_Year",
            "select count(*), museum.Museum_ID",
            "select count(*), museum.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "museum",
        "table_candidates": [
            "museum"
        ],
        "align_scores": [
            0.9742670655250549,
            7.224980072351173e-05,
            0.00020178186241537333,
            5.766715548816137e-05,
            0.0001843767677200958,
            5.851102832821198e-05,
            0.00023427738051395863,
            6.074662087485194e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many museums were opened after 2011 or before 2008?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), museum.Museum_ID",
            "select count(*), museum.Open_Year",
            "select count(*), museum.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "museum",
        "table_candidates": [
            "museum"
        ],
        "align_scores": [
            0.9377847909927368,
            7.365472993114963e-05,
            0.00018562372133601457,
            5.915656947763637e-05,
            0.00020212000526953489,
            5.784318636870012e-05,
            0.00022890398395247757,
            6.123085768194869e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many museums were opened after 2008 or before 2008?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), museum.Museum_ID",
            "select count(*), museum.Open_Year",
            "select count(*), museum.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "museum",
        "table_candidates": [
            "museum"
        ],
        "align_scores": [
            0.797268271446228,
            5.957822213531472e-05,
            0.0001630871556699276,
            5.594272442976944e-05,
            0.00017406351980753243,
            5.208669972489588e-05,
            0.0001909217971842736,
            5.7711942645255476e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many museums were opened after 2013 or before 2018?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), museum.Museum_ID",
            "select count(*), museum.Name",
            "select count(*), museum.Open_Year"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "museum",
        "table_candidates": [
            "museum"
        ],
        "align_scores": [
            0.9888878464698792,
            7.642822311026976e-05,
            0.0002123699669027701,
            6.128355016699061e-05,
            0.00026843318482860923,
            6.280212255660444e-05,
            0.00022616874775849283,
            6.284381379373372e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many museums were opened after 2013 or before 2012?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), museum.Museum_ID",
            "select count(*), museum.Open_Year",
            "select count(*), museum.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "museum",
        "table_candidates": [
            "museum"
        ],
        "align_scores": [
            0.9682478308677673,
            7.280287536559626e-05,
            0.00018644447845872492,
            5.977444743621163e-05,
            0.0002018550003413111,
            5.667049845214933e-05,
            0.00023480514937546104,
            6.155121081974357e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many museums were opened after 2013 or before 2015?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), museum.Museum_ID",
            "select count(*), museum.Name",
            "select count(*), museum.Open_Year"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "museum",
        "table_candidates": [
            "museum"
        ],
        "align_scores": [
            0.987299382686615,
            7.595001079607755e-05,
            0.00021483957243617624,
            5.968279583612457e-05,
            0.0002721911878325045,
            6.0134527302579954e-05,
            0.00022318385890685022,
            5.654353662976064e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many museums were opened after 2013 or before 2016?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), museum.Museum_ID",
            "select count(*), museum.Name",
            "select count(*), museum.Open_Year"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "museum",
        "table_candidates": [
            "museum"
        ],
        "align_scores": [
            0.9879056215286255,
            7.745127368252724e-05,
            0.00021509885846171528,
            6.0477737861219794e-05,
            0.00027201062766835093,
            6.154781294753775e-05,
            0.00022218447702471167,
            5.8230703871231526e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many museums were opened after 2013 or before 2017?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), museum.Museum_ID",
            "select count(*), museum.Name",
            "select count(*), museum.Open_Year"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "museum",
        "table_candidates": [
            "museum"
        ],
        "align_scores": [
            0.9883944988250732,
            7.558990910183638e-05,
            0.00021340108651202172,
            6.0670376115012914e-05,
            0.0002687366504687816,
            6.175875751068816e-05,
            0.00022470756084658206,
            6.015975304762833e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List the names of all winners who played in both 2013 and 2013.",
        "gold_select": "select matches.winner_name",
        "select_candidates": [
            "select matches.winner_name",
            "select matches.winner_name, matches.winner_ioc",
            "select matches.winner_name, matches.winner_entry",
            "select matches.winner_name, matches.winner_seed"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "matches",
        "table_candidates": [
            "matches"
        ],
        "align_scores": [
            0.9797099828720093,
            0.024167971685528755,
            0.00025983716477639973,
            9.096775465877727e-05,
            0.00018073644605465233,
            9.536115248920396e-05,
            0.00012250730651430786,
            7.97437023720704e-05
        ],
        "align_select": "select matches.winner_name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "List the names of all winners who played in both 2013 and 2017.",
        "gold_select": "select matches.winner_name",
        "select_candidates": [
            "select matches.winner_name",
            "select matches.winner_name, matches.winner_ioc",
            "select matches.winner_name, matches.winner_seed",
            "select matches.winner_name, matches.winner_rank"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "matches",
        "table_candidates": [
            "matches"
        ],
        "align_scores": [
            0.9932475090026855,
            0.07813579589128494,
            0.0003617476031649858,
            0.00011172774975420907,
            0.00012349651660770178,
            8.123498264467344e-05,
            0.0001540313969599083,
            0.0001034578526741825
        ],
        "align_select": "select matches.winner_name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "List the names of all winners who played in both 2017 and 2016.",
        "gold_select": "select matches.winner_name",
        "select_candidates": [
            "select matches.winner_name",
            "select matches.winner_name, matches.winner_ioc",
            "select matches.winner_name, matches.winner_seed",
            "select matches.winner_name, matches.winner_entry"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "matches",
        "table_candidates": [
            "matches"
        ],
        "align_scores": [
            0.9936829805374146,
            0.08848605304956436,
            0.0003451390075497329,
            0.00011248845839872956,
            0.0001201135601149872,
            8.254894055426121e-05,
            0.0001843906647991389,
            0.00010380906314821914
        ],
        "align_select": "select matches.winner_name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "List the names of all winners who played in both 2016 and 2016.",
        "gold_select": "select matches.winner_name",
        "select_candidates": [
            "select matches.winner_name",
            "select matches.winner_name, matches.winner_ioc",
            "select matches.winner_name, matches.winner_seed",
            "select matches.winner_name, matches.winner_entry"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "matches",
        "table_candidates": [
            "matches",
            "matches rankings"
        ],
        "align_scores": [
            0.9744455218315125,
            0.02606648951768875,
            0.00027551251696422696,
            9.515487181488425e-05,
            0.0001192841082229279,
            7.696548709645867e-05,
            0.00017629135982133448,
            9.324920392828062e-05
        ],
        "align_select": "select matches.winner_name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of players who won in both 2013 and 2013?",
        "gold_select": "select matches.winner_name",
        "select_candidates": [
            "select players.first_name, players.last_name",
            "select players.player_id, players.first_name, players.last_name",
            "select rankings.player_id, players.first_name, players.last_name",
            "select players.first_name, players.last_name, players.player_id"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "matches",
        "table_candidates": [
            "players matches",
            "players matches rankings"
        ],
        "align_scores": [
            0.9714124798774719,
            0.03869406506419182,
            0.00021808978635817766,
            0.00017521048721391708,
            0.0002751741267275065,
            0.000228736869757995,
            0.00015071507368702441,
            0.00012323699775151908
        ],
        "align_select": "select players.first_name, players.last_name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of players who won in both 2013 and 2017?",
        "gold_select": "select matches.winner_name",
        "select_candidates": [
            "select players.first_name, players.last_name",
            "select players.first_name, players.last_name, players.player_id",
            "select players.first_name, players.first_name, players.last_name",
            "select players.first_name, players.last_name, players.hand"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "matches",
        "table_candidates": [
            "players matches",
            "players matches rankings"
        ],
        "align_scores": [
            0.9842570424079895,
            0.2502824664115906,
            0.00016251171473413706,
            0.00014019309310242534,
            0.00016867190424818546,
            0.0001385051873512566,
            0.0004901541396975517,
            0.00019537510524969548
        ],
        "align_select": "select players.first_name, players.last_name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of players who won in both 2017 and 2016?",
        "gold_select": "select matches.winner_name",
        "select_candidates": [
            "select players.first_name, players.last_name",
            "select players.player_id, players.first_name, players.last_name",
            "select rankings.player_id, players.first_name, players.last_name",
            "select players.first_name, players.last_name, players.player_id"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "matches",
        "table_candidates": [
            "players matches",
            "players matches rankings"
        ],
        "align_scores": [
            0.9826924800872803,
            0.10501589626073837,
            0.00022117562184575945,
            0.00019950511341448873,
            0.000278357183560729,
            0.0002702124183997512,
            0.00015923012688290328,
            0.00013813324039801955
        ],
        "align_select": "select players.first_name, players.last_name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of players who won in both 2016 and 2016?",
        "gold_select": "select matches.winner_name",
        "select_candidates": [
            "select players.first_name, players.last_name",
            "select players.player_id, players.first_name, players.last_name",
            "select rankings.player_id, players.first_name, players.last_name",
            "select players.first_name, players.last_name, players.player_id"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "matches",
        "table_candidates": [
            "players matches",
            "players matches rankings"
        ],
        "align_scores": [
            0.9679425358772278,
            0.016996173188090324,
            0.00021425083104986697,
            0.00016938053886406124,
            0.0002685412182472646,
            0.00021909082715865225,
            0.00015022438310552388,
            0.00012124428030801937
        ],
        "align_select": "select players.first_name, players.last_name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "List the number of all matches who played in years of 2013 or 2026.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), matches.match_num",
            "select count(*) dependant on matches.match_num",
            "select count(*) denoted by matches.match_num"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "matches",
        "table_candidates": [
            "matches"
        ],
        "align_scores": [
            0.9629300832748413,
            0.0009157193708233535,
            0.0002613896213006228,
            0.0004327725328039378,
            0.00045466507435776293,
            0.0002176186826545745,
            0.0007760267471894622,
            0.0002546856994740665
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List the number of all matches who played in years of 2013 or 2020.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), matches.match_num",
            "select count(*) denoted by matches.match_num",
            "select count(*) dependant on matches.match_num"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "matches",
        "table_candidates": [
            "matches"
        ],
        "align_scores": [
            0.9751841425895691,
            9.875020623439923e-05,
            0.0002535815292503685,
            9.24162013689056e-05,
            0.0009645048412494361,
            8.65123511175625e-05,
            0.00045801681699231267,
            0.00013066173414699733
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List the number of all matches who played in years of 2013 or 2010.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), matches.match_num",
            "select count(*), matches.minutes",
            "select count(*),"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "matches",
        "table_candidates": [
            "matches"
        ],
        "align_scores": [
            0.6777071952819824,
            0.00020511835464276373,
            0.0002520148700568825,
            0.0013878272147849202,
            0.00025407184148207307,
            0.0002658574085216969,
            0.000529394019395113,
            0.004599300678819418
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List the number of all matches who played in years of 2013 or 2015.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), matches.match_num",
            "select count(*),",
            "select count(matches.match_num)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "matches",
        "table_candidates": [
            "matches"
        ],
        "align_scores": [
            0.9447271227836609,
            0.00023274960403796285,
            0.0002649439556989819,
            0.002591226017102599,
            0.0005349788698367774,
            0.00933019071817398,
            0.0006579423788934946,
            0.0001491507573518902
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List the number of all matches who played in years of 2013 or 2023.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), matches.match_num",
            "select count(*) denoted by matches.match_num",
            "select count(*) dependant on matches.match_num"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "matches",
        "table_candidates": [
            "matches"
        ],
        "align_scores": [
            0.9718795418739319,
            0.0010355296544730663,
            0.00025889871176332235,
            0.0004435675509739667,
            0.0006756883230991662,
            0.0002602159802336246,
            0.0004619243263732642,
            0.00021543730690609664
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List the number of all matches who played in years of 2023 or 2016.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), matches.match_num",
            "select count(*) dependant on matches.match_num",
            "select count(*) denoted by matches.match_num"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "matches",
        "table_candidates": [
            "matches"
        ],
        "align_scores": [
            0.7738914489746094,
            0.0005362086812965572,
            0.00024904534802772105,
            0.00038657052209600806,
            0.0004389499081298709,
            0.00019441102631390095,
            0.0005918575334362686,
            0.0002234436251455918
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List the number of all matches who played in years of 2017 or 2016.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), matches.match_num",
            "select count(*) denoted by matches.match_num",
            "select count(*) dependant on matches.match_num"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "matches",
        "table_candidates": [
            "matches"
        ],
        "align_scores": [
            0.9831105470657349,
            0.00021683827799279243,
            0.00024156538711395115,
            0.002392261056229472,
            0.0012636405881494284,
            0.00019034162687603384,
            0.0004733947280328721,
            0.00015474714746233076
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List the number of all matches who played in years of 2007 or 2016.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), matches.match_num",
            "select count(*) dependant on matches.match_num",
            "select count(*) denoted by matches.match_num"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "matches",
        "table_candidates": [
            "matches"
        ],
        "align_scores": [
            0.9778213500976562,
            0.0002464827848598361,
            0.00025849000667221844,
            0.0025660721585154533,
            0.0004221576382406056,
            0.000162059222930111,
            0.001072369166649878,
            0.00018846022430807352
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List the number of all matches who played in years of 2012 or 2016.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), matches.match_num",
            "select count(*) dependant on matches.match_num",
            "select count(*) denoted by matches.match_num"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "matches",
        "table_candidates": [
            "matches"
        ],
        "align_scores": [
            0.9666925668716431,
            0.00025351965450681746,
            0.0002602095191832632,
            0.002385318512097001,
            0.0004240900743752718,
            0.00016455659351777285,
            0.0009365843725390732,
            0.00018656326574273407
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List the number of all matches who played in years of 2020 or 2016.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), matches.match_num",
            "select count(*) dependant on matches.match_num",
            "select count(*) denoted by matches.match_num"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "matches",
        "table_candidates": [
            "matches"
        ],
        "align_scores": [
            0.909382700920105,
            9.735796629684046e-05,
            0.0002349616988794878,
            9.228674753103405e-05,
            0.0004432319547049701,
            0.00012371786579024047,
            0.0007592928595840931,
            8.37762127048336e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many matches were played in 2013 or 2026?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), matches.year",
            "select count(*) in matches.minutes, matches.winner_ioc",
            "select count(*) In matches.minutes, matches.winner_ioc"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "matches",
        "table_candidates": [
            "matches"
        ],
        "align_scores": [
            0.9044979810714722,
            0.15844103693962097,
            0.00023539469111710787,
            0.00019658711971715093,
            0.00026363341021351516,
            0.00011602119047893211,
            0.00026363341021351516,
            0.00011602119047893211
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many matches were played in 2013 or 2020?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), matches.year",
            "select count(*) in matches.minutes, matches.round",
            "select count(*) in matches.minutes, matches.tourney_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "matches",
        "table_candidates": [
            "matches"
        ],
        "align_scores": [
            0.9509090781211853,
            0.1192099079489708,
            0.0002647227665875107,
            0.00017732143169268966,
            0.00018986454233527184,
            0.0001072772138286382,
            0.00014935285435058177,
            8.995649841381237e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many matches were played in 2013 or 2010?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), matches.year",
            "select count(*) dependant on matches.year",
            "select matches.minutes, count(*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "matches",
        "table_candidates": [
            "matches"
        ],
        "align_scores": [
            0.02638697810471058,
            0.5887197852134705,
            0.0001453746372135356,
            0.000261538167251274,
            0.0004820446774829179,
            0.0035790647380053997,
            0.00012683567183557898,
            0.0003483959299046546
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many matches were played in 2013 or 2015?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), matches.year",
            "select count(*), matches.match_num",
            "select count(*) dependant on matches.year"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "matches",
        "table_candidates": [
            "matches"
        ],
        "align_scores": [
            0.6277486681938171,
            8.188300853362307e-05,
            0.0002474529028404504,
            8.615241677034646e-05,
            0.00021667932742275298,
            9.011284419102594e-05,
            0.005766902584582567,
            0.0001062732917489484
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many matches were played in 2013 or 2023?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), matches.year",
            "select count(*) in matches.minutes, matches.winner_hand",
            "select count(*) in matches.minutes, matches.winner_entry"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "matches",
        "table_candidates": [
            "matches"
        ],
        "align_scores": [
            0.9660159349441528,
            0.2200423777103424,
            0.00024152091646101326,
            0.00019908268586732447,
            0.00017400494834873825,
            0.00010404700879007578,
            0.00018333511252421886,
            9.94706351775676e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many matches were played in 2023 or 2016?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), matches.year",
            "select count(*), matches.winner_hand, matches.surface",
            "select count(*) in matches.winner_hand, matches.year"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "matches",
        "table_candidates": [
            "matches"
        ],
        "align_scores": [
            0.8213431239128113,
            0.047089312225580215,
            0.00024101325834635645,
            0.0001516058255219832,
            0.0001244566956302151,
            9.822464926401153e-05,
            0.00016839934687595814,
            9.303807019023225e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many matches were played in 2017 or 2016?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), matches.year",
            "select matches.year, count(*)",
            "select count(*) dependant on matches.year"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "matches",
        "table_candidates": [
            "matches"
        ],
        "align_scores": [
            0.02049192786216736,
            0.9889026284217834,
            0.00014746340457350016,
            0.0002908754686359316,
            0.001302360207773745,
            0.0010938174091279507,
            0.0003842805454041809,
            0.030129704624414444
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many matches were played in 2007 or 2016?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*) in matches.loser_ioc, matches.loser_id",
            "select count(*), matches.year",
            "select count(*) in matches.loser_ioc, matches.surface"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "matches",
        "table_candidates": [
            "matches"
        ],
        "align_scores": [
            0.9836048483848572,
            0.08505429327487946,
            9.8694275948219e-05,
            9.312052861787379e-05,
            0.00028871651738882065,
            0.00016158832295332104,
            0.00013909720291849226,
            9.258166392100975e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many matches were played in 2012 or 2016?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), matches.year",
            "select count(*), matches.match_num",
            "select count(*) dependant on matches.year"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "matches",
        "table_candidates": [
            "matches"
        ],
        "align_scores": [
            0.8789446353912354,
            0.054643403738737106,
            0.00025706159067340195,
            0.00016143232642207295,
            0.00020090375619474798,
            0.00011489469034131616,
            0.006183638237416744,
            0.0005332733271643519
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many matches were played in 2020 or 2016?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), matches.year",
            "select count(*) dependant on matches.year",
            "select count(*), matches.winner_seed"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "matches",
        "table_candidates": [
            "matches"
        ],
        "align_scores": [
            0.8000883460044861,
            0.0541929267346859,
            0.0002709210093598813,
            0.00014217052375897765,
            0.0068696048110723495,
            0.00040155320311896503,
            0.0002025177818723023,
            0.00010396320431027561
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the ids and names of the battles that led to more than 2 people killed in total.",
        "gold_select": "select battle.id, battle.name",
        "select_candidates": [
            "select battle.id, battle.name",
            "select battle.name, battle.id",
            "select battle.date, battle.name",
            "select death.id, battle.name"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "battle ship death",
        "table_candidates": [
            "battle death"
        ],
        "align_scores": [
            0.8223334550857544,
            0.00013219354150351137,
            0.851187527179718,
            0.00013406095968093723,
            0.0005686054355464876,
            6.86296189087443e-05,
            0.0022028195671737194,
            0.00011425118282204494
        ],
        "align_select": "select battle.id, battle.name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the ids and names of the battles that led to more than 1 people killed in total.",
        "gold_select": "select battle.id, battle.name",
        "select_candidates": [
            "select battle.id, battle.name",
            "select battle.name, battle.id",
            "select battle.date, battle.name",
            "select death.id, battle.name"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "battle ship death",
        "table_candidates": [
            "battle death"
        ],
        "align_scores": [
            0.5266069173812866,
            0.0001267091283807531,
            0.571184515953064,
            0.00012672627053689212,
            0.0005991754005663097,
            6.779727118555456e-05,
            0.0012353742495179176,
            0.00011161626025568694
        ],
        "align_select": "select battle.id, battle.name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What is the average earnings of poker players with height higher than 210?",
        "gold_select": "select avg(poker_player.Earnings)",
        "select_candidates": [
            "select avg(poker_player.Earnings)",
            "select avg(poker_player.Earnings), people.Height",
            "select an avg(poker_player.Earnings)",
            "select  avg(poker_player.Earnings)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "poker_player people",
        "table_candidates": [
            "poker_player people"
        ],
        "align_scores": [
            0.9965271353721619,
            9.307276195613667e-05,
            0.00016578329086769372,
            0.15499067306518555,
            0.00036136675043962896,
            9.455958934267983e-05,
            0.9965271353721619,
            9.307276195613667e-05
        ],
        "align_select": "select avg(poker_player.Earnings)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the average earnings of poker players with height higher than 194?",
        "gold_select": "select avg(poker_player.Earnings)",
        "select_candidates": [
            "select avg(poker_player.Earnings)",
            "select avg(poker_player.Earnings), people.Height",
            "select an avg(poker_player.Earnings)",
            "select  avg(poker_player.Earnings)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "poker_player people",
        "table_candidates": [
            "poker_player people"
        ],
        "align_scores": [
            0.9966344237327576,
            9.332605986855924e-05,
            0.0001655720843700692,
            0.1765151023864746,
            0.0003614066808950156,
            9.486323688179255e-05,
            0.9966344237327576,
            9.332605986855924e-05
        ],
        "align_select": "select avg(poker_player.Earnings)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the average earnings of poker players with height higher than 207?",
        "gold_select": "select avg(poker_player.Earnings)",
        "select_candidates": [
            "select avg(poker_player.Earnings)",
            "select avg(poker_player.Earnings), people.Height",
            "select an avg(poker_player.Earnings)",
            "select  avg(poker_player.Earnings)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "poker_player people",
        "table_candidates": [
            "poker_player people"
        ],
        "align_scores": [
            0.9966233968734741,
            9.346615115646273e-05,
            0.0001656122040003538,
            0.16431985795497894,
            0.0003615710884332657,
            9.498987492406741e-05,
            0.9966233968734741,
            9.346615115646273e-05
        ],
        "align_select": "select avg(poker_player.Earnings)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the average earnings of poker players with height higher than 208?",
        "gold_select": "select avg(poker_player.Earnings)",
        "select_candidates": [
            "select avg(poker_player.Earnings)",
            "select avg(poker_player.Earnings), people.Height",
            "select an avg(poker_player.Earnings)",
            "select  avg(poker_player.Earnings)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "poker_player people",
        "table_candidates": [
            "poker_player people"
        ],
        "align_scores": [
            0.9965953230857849,
            9.358343231724575e-05,
            0.00016275625966954976,
            0.183649942278862,
            0.00036200773320160806,
            9.500046871835366e-05,
            0.9965953230857849,
            9.358343231724575e-05
        ],
        "align_select": "select avg(poker_player.Earnings)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the average earnings of poker players with height higher than 209?",
        "gold_select": "select avg(poker_player.Earnings)",
        "select_candidates": [
            "select avg(poker_player.Earnings)",
            "select avg(poker_player.Earnings), people.Height",
            "select an avg(poker_player.Earnings)",
            "select  avg(poker_player.Earnings)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "poker_player people",
        "table_candidates": [
            "poker_player people"
        ],
        "align_scores": [
            0.9966185092926025,
            9.461605077376589e-05,
            0.00016468562535010278,
            0.16318275034427643,
            0.0003645073447842151,
            9.564401989337057e-05,
            0.9966185092926025,
            9.461605077376589e-05
        ],
        "align_select": "select avg(poker_player.Earnings)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give average earnings of poker players who are taller than 210.",
        "gold_select": "select avg(poker_player.Earnings)",
        "select_candidates": [
            "select avg(poker_player.Earnings)",
            "select an avg(poker_player.Earnings)",
            "select avg(poker_player.Earnings), people.Height",
            "select  avg(poker_player.Earnings)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "poker_player people",
        "table_candidates": [
            "poker_player people"
        ],
        "align_scores": [
            0.9966511130332947,
            0.00012039186549372971,
            0.0003859425487462431,
            0.00011943287245230749,
            0.00029070302844047546,
            0.008891545236110687,
            0.9966511130332947,
            0.00012039186549372971
        ],
        "align_select": "select avg(poker_player.Earnings)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give average earnings of poker players who are taller than 194.",
        "gold_select": "select avg(poker_player.Earnings)",
        "select_candidates": [
            "select avg(poker_player.Earnings)",
            "select avg(t0, poker_player.Earnings)",
            "select avg(poker_player.Earnings), people.Height",
            "select an avg(poker_player.Earnings)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "poker_player people",
        "table_candidates": [
            "poker_player people"
        ],
        "align_scores": [
            0.9967310428619385,
            0.00012039014836773276,
            0.0004450968699529767,
            0.0001241638819919899,
            0.00029568918398581445,
            0.006793688982725143,
            0.0003929304366465658,
            0.00012206350220367312
        ],
        "align_select": "select avg(poker_player.Earnings)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give average earnings of poker players who are taller than 207.",
        "gold_select": "select avg(poker_player.Earnings)",
        "select_candidates": [
            "select avg(poker_player.Earnings)",
            "select an avg(poker_player.Earnings)",
            "select avg(poker_player.Earnings), people.Height",
            "select  avg(poker_player.Earnings)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "poker_player people",
        "table_candidates": [
            "poker_player people"
        ],
        "align_scores": [
            0.9967272281646729,
            0.00012034217070322484,
            0.00038868142291903496,
            0.00012058349966537207,
            0.0002951568167190999,
            0.007357862778007984,
            0.9967272281646729,
            0.00012034217070322484
        ],
        "align_select": "select avg(poker_player.Earnings)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give average earnings of poker players who are taller than 208.",
        "gold_select": "select avg(poker_player.Earnings)",
        "select_candidates": [
            "select avg(poker_player.Earnings)",
            "select an avg(poker_player.Earnings)",
            "select avg(poker_player.Earnings), people.Height",
            "select  avg(poker_player.Earnings)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "poker_player people",
        "table_candidates": [
            "poker_player people"
        ],
        "align_scores": [
            0.9966683983802795,
            0.00012157828314229846,
            0.00039385820855386555,
            0.00012166213127784431,
            0.0002931197814177722,
            0.008511347696185112,
            0.9966683983802795,
            0.00012157828314229846
        ],
        "align_select": "select avg(poker_player.Earnings)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give average earnings of poker players who are taller than 209.",
        "gold_select": "select avg(poker_player.Earnings)",
        "select_candidates": [
            "select avg(poker_player.Earnings)",
            "select avg(poker_player.Earnings), people.Height",
            "select avg(t0, poker_player.Earnings)",
            "select an avg(poker_player.Earnings)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "poker_player people",
        "table_candidates": [
            "poker_player people"
        ],
        "align_scores": [
            0.9966995120048523,
            0.00012270091974642128,
            0.00029182154685258865,
            0.005955030210316181,
            0.00044673995580524206,
            0.00012527502258308232,
            0.00039508563349954784,
            0.00012277324276510626
        ],
        "align_select": "select avg(poker_player.Earnings)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of all the countries that became independent after 1960?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Code",
            "select country.Name, country.Capital",
            "select distinct country.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9878122210502625,
            0.00013429406681098044,
            0.0003169825067743659,
            7.88021061453037e-05,
            0.00019069603877142072,
            7.23881385056302e-05,
            0.06752711534500122,
            9.9800898169633e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of all the countries that became independent after 1954?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Code",
            "select country.Name, country.Capital",
            "select distinct country.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9889617562294006,
            0.00012739215162582695,
            0.00030342841637320817,
            7.70761034800671e-05,
            0.0001966517884284258,
            7.187075243564323e-05,
            0.0658082515001297,
            0.00010184909478994086
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of all the countries that became independent after 1944?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Code",
            "select country.Name, country.Capital",
            "select distinct country.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9856923818588257,
            0.00012569536920636892,
            0.0003288892039563507,
            7.771584205329418e-05,
            0.0002087558532366529,
            7.14878915459849e-05,
            0.07020772993564606,
            9.124576899921522e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of all the countries that became independent after 1957?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Code",
            "select country.Name, country.Capital",
            "select distinct country.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9881068468093872,
            0.00013427012891042978,
            0.00030027376487851143,
            7.947388803586364e-05,
            0.0001965979754459113,
            7.351586828008294e-05,
            0.06646106392145157,
            0.00010428072710055858
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of all the countries that became independent after 1947?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Capital",
            "select country.Name, country.Code",
            "select distinct country.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9864248037338257,
            0.0001484985405113548,
            0.00020049519662279636,
            7.640702096978202e-05,
            0.0003167764807585627,
            8.215927664423361e-05,
            0.07045344263315201,
            0.00010706710600061342
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give the names of the nations that were founded after 1960.",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Capital",
            "select distinct country.Name",
            "select country.Name, country.HeadOfState"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9889481067657471,
            0.0001376929722027853,
            0.0001956659252755344,
            7.345329504460096e-05,
            0.06711308658123016,
            0.00010103990643983707,
            0.00017828965792432427,
            7.257240213220939e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give the names of the nations that were founded after 1954.",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Capital",
            "select distinct country.Name",
            "select country.Name, country.HeadOfState"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9892393350601196,
            0.00013718420814257115,
            0.00021511095110327005,
            7.415949949063361e-05,
            0.06658492237329483,
            9.549456444801763e-05,
            0.0001888719853013754,
            7.292294321814552e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give the names of the nations that were founded after 1944.",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Capital",
            "select distinct country.Name",
            "select country.Name, country.HeadOfState"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9880567789077759,
            0.00013867620145902038,
            0.00021155508875381202,
            7.215671212179586e-05,
            0.06602470576763153,
            8.42433437355794e-05,
            0.00019074641750194132,
            7.076453766785562e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give the names of the nations that were founded after 1957.",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Capital",
            "select distinct country.Name",
            "select country.Name, country.HeadOfState"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9894010424613953,
            0.00013434249558486044,
            0.00020975465304218233,
            7.219510735012591e-05,
            0.06769826263189316,
            9.757470979820937e-05,
            0.00018350701429881155,
            7.108702993718907e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give the names of the nations that were founded after 1947.",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Capital",
            "select distinct country.Name",
            "select country.Name, country.HeadOfState"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9885097146034241,
            0.0001437845639884472,
            0.00020123236754443496,
            7.457735046045855e-05,
            0.0645909383893013,
            9.539999882690609e-05,
            0.000180102011654526,
            7.087576523190364e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the total number of unique official languages spoken in the countries that are founded before 1921?",
        "gold_select": "select count(distinct countrylanguage.Language)",
        "select_candidates": [
            "select count(distinct countrylanguage.IsOfficial)",
            "select count(distinct countrylanguage.Language)",
            "select count(distinct countrylanguage.Language, countrylanguage.IsOfficial)",
            "select count(distinct countrylanguage.Language, count(distinct countrylanguage.IsOfficial)"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.018426991999149323,
            0.00024290307192131877,
            0.9932084679603577,
            0.00030457929824478924,
            0.0007133570616133511,
            0.00021786036086268723,
            0.00021542109607253224,
            0.0001465118839405477
        ],
        "align_select": "select count(distinct countrylanguage.Language)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the total number of unique official languages spoken in the countries that are founded before 1922?",
        "gold_select": "select count(distinct countrylanguage.Language)",
        "select_candidates": [
            "select count(distinct countrylanguage.IsOfficial)",
            "select count(distinct countrylanguage.Language)",
            "select count(distinct countrylanguage.Language, countrylanguage.IsOfficial)",
            "select count(distinct countrylanguage.Language, count(distinct countrylanguage.IsOfficial)"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.017525961622595787,
            0.00024986828793771565,
            0.9931666254997253,
            0.00031583444797433913,
            0.0007242872379720211,
            0.0002248325035907328,
            0.00021521476446650922,
            0.0001509244757471606
        ],
        "align_select": "select count(distinct countrylanguage.Language)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the total number of unique official languages spoken in the countries that are founded before 1920?",
        "gold_select": "select count(distinct countrylanguage.Language)",
        "select_candidates": [
            "select count(distinct countrylanguage.IsOfficial)",
            "select count(distinct countrylanguage.Language)",
            "select count(distinct countrylanguage.Language, countrylanguage.IsOfficial)",
            "select count(distinct countrylanguage.Language, count(distinct countrylanguage.IsOfficial)"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.017701931297779083,
            0.00024960588780231774,
            0.9935576319694519,
            0.00033816698123700917,
            0.000712476612534374,
            0.00023258544388227165,
            0.0002132322988472879,
            0.00015008062473498285
        ],
        "align_select": "select count(distinct countrylanguage.Language)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the total number of unique official languages spoken in the countries that are founded before 1923?",
        "gold_select": "select count(distinct countrylanguage.Language)",
        "select_candidates": [
            "select count(distinct countrylanguage.IsOfficial)",
            "select count(distinct countrylanguage.Language)",
            "select count(distinct countrylanguage.Language, countrylanguage.IsOfficial)",
            "select count(distinct countrylanguage.Language, count(distinct countrylanguage.IsOfficial)"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.020561523735523224,
            0.00024862922145985067,
            0.9931336641311646,
            0.00033564100158400834,
            0.0007068745908327401,
            0.0002265352086396888,
            0.0002142774173989892,
            0.00015030404028948396
        ],
        "align_select": "select count(distinct countrylanguage.Language)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "For the countries founded before 1921, what is the total number of distinct official languages?",
        "gold_select": "select count(distinct countrylanguage.Language)",
        "select_candidates": [
            "select count(distinct countrylanguage.IsOfficial)",
            "select count(distinct countrylanguage.Language)",
            "select sum(countrylanguage.IsOfficial)",
            "select sum(distinct countrylanguage.IsOfficial)"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.014123230241239071,
            0.0002130973298335448,
            0.994799017906189,
            0.0002514278166927397,
            0.0016701262211427093,
            0.001396442879922688,
            0.006009704899042845,
            0.00024686448159627616
        ],
        "align_select": "select count(distinct countrylanguage.Language)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "For the countries founded before 1922, what is the total number of distinct official languages?",
        "gold_select": "select count(distinct countrylanguage.Language)",
        "select_candidates": [
            "select count(distinct countrylanguage.IsOfficial)",
            "select count(distinct countrylanguage.Language)",
            "select sum(countrylanguage.IsOfficial)",
            "select sum(distinct countrylanguage.IsOfficial)"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.011686497367918491,
            0.00021683993691112846,
            0.9947793483734131,
            0.0002685609506443143,
            0.001577310380525887,
            0.0013448995305225253,
            0.005391602870076895,
            0.0002572008525021374
        ],
        "align_select": "select count(distinct countrylanguage.Language)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "For the countries founded before 1920, what is the total number of distinct official languages?",
        "gold_select": "select count(distinct countrylanguage.Language)",
        "select_candidates": [
            "select count(distinct countrylanguage.IsOfficial)",
            "select count(distinct countrylanguage.Language)",
            "select sum(countrylanguage.IsOfficial)",
            "select sum(distinct countrylanguage.IsOfficial)"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.01440448872745037,
            0.00023324703215621412,
            0.9948055148124695,
            0.0002752142900135368,
            0.0015924551989883184,
            0.0014903636183589697,
            0.006022884976118803,
            0.00027160043828189373
        ],
        "align_select": "select count(distinct countrylanguage.Language)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "For the countries founded before 1923, what is the total number of distinct official languages?",
        "gold_select": "select count(distinct countrylanguage.Language)",
        "select_candidates": [
            "select count(distinct countrylanguage.IsOfficial)",
            "select count(distinct countrylanguage.Language)",
            "select sum(countrylanguage.IsOfficial)",
            "select sum(distinct countrylanguage.IsOfficial)"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.013801983557641506,
            0.00021842462592758238,
            0.9946869611740112,
            0.0002655296411830932,
            0.0016833937261253595,
            0.001504775951616466,
            0.005990009289234877,
            0.000269625656073913
        ],
        "align_select": "select count(distinct countrylanguage.Language)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the government form name and total population for each government form whose average life expectancy is longer than 82.",
        "gold_select": "select sum(country.Population), country.GovernmentForm",
        "select_candidates": [
            "select country.GovernmentForm, sum(country.Population)",
            "select country.Name, sum(country.Population)",
            "select country.Capital, sum(country.Population)",
            "select country.IndepYear, sum(country.Population)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.10939416289329529,
            0.0001750069495756179,
            0.006237308960407972,
            0.00021488465426955372,
            0.0003035713452845812,
            8.328427065862343e-05,
            0.00018823970458470285,
            6.835745443822816e-05
        ],
        "align_select": "select country.GovernmentForm, sum(country.Population)",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Find the government form name and total population for each government form whose average life expectancy is longer than 76.",
        "gold_select": "select sum(country.Population), country.GovernmentForm",
        "select_candidates": [
            "select country.GovernmentForm, sum(country.Population)",
            "select country.Name, sum(country.Population)",
            "select country.Capital, sum(country.Population)",
            "select country.GovernmentForm, count(*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.14293423295021057,
            0.00017766599194146693,
            0.008730189874768257,
            0.00022134187747724354,
            0.0003087760997004807,
            8.293777500512078e-05,
            0.34079277515411377,
            0.0002762969525065273
        ],
        "align_select": "select country.GovernmentForm, sum(country.Population)",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Find the government form name and total population for each government form whose average life expectancy is longer than 66.",
        "gold_select": "select sum(country.Population), country.GovernmentForm",
        "select_candidates": [
            "select country.GovernmentForm, sum(country.Population)",
            "select country.Name, sum(country.Population)",
            "select country.Capital, sum(country.Population)",
            "select country.GovernmentForm, count(*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.2749651372432709,
            0.00017249424126930535,
            0.010775093920528889,
            0.00021062685118522495,
            0.00031813295208849013,
            8.232427353505045e-05,
            0.44839486479759216,
            0.000254584476351738
        ],
        "align_select": "select country.GovernmentForm, sum(country.Population)",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Find the government form name and total population for each government form whose average life expectancy is longer than 71.",
        "gold_select": "select sum(country.Population), country.GovernmentForm",
        "select_candidates": [
            "select country.GovernmentForm, sum(country.Population)",
            "select country.Name, sum(country.Population)",
            "select country.Capital, sum(country.Population)",
            "select country.GovernmentForm, count(*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.1563592553138733,
            0.00017380015924572945,
            0.007790279109030962,
            0.00021664811356458813,
            0.0003072868857998401,
            8.274825813714415e-05,
            0.3551669418811798,
            0.00026563648134469986
        ],
        "align_select": "select country.GovernmentForm, sum(country.Population)",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Find the government form name and total population for each government form whose average life expectancy is longer than 79.",
        "gold_select": "select sum(country.Population), country.GovernmentForm",
        "select_candidates": [
            "select country.GovernmentForm, sum(country.Population)",
            "select country.Name, sum(country.Population)",
            "select country.Capital, sum(country.Population)",
            "select country.GovernmentForm, count(*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.11655490845441818,
            0.00017489519086666405,
            0.0062439036555588245,
            0.0002176589478040114,
            0.00030228932155296206,
            8.321108180098236e-05,
            0.3053886890411377,
            0.00028004858177155256
        ],
        "align_select": "select country.GovernmentForm, sum(country.Population)",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the different government forms and what is the total population of each for government forms that have an average life expectancy greater than 82?",
        "gold_select": "select sum(country.Population), country.GovernmentForm",
        "select_candidates": [
            "select country.GovernmentForm, sum(country.Population)",
            "select country.Name, sum(country.Population)",
            "select country.Capital, sum(country.Population)",
            "select country.LocalName, sum(country.Population)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.735216498374939,
            0.0001634195214137435,
            0.8872601985931396,
            0.00018528933287598193,
            0.0020573786459863186,
            8.657704893266782e-05,
            0.09649641811847687,
            0.00016130137373693287
        ],
        "align_select": "select country.GovernmentForm, sum(country.Population)",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the different government forms and what is the total population of each for government forms that have an average life expectancy greater than 76?",
        "gold_select": "select sum(country.Population), country.GovernmentForm",
        "select_candidates": [
            "select country.GovernmentForm, sum(country.Population)",
            "select country.Name, sum(country.Population)",
            "select country.Capital, sum(country.Population)",
            "select country.LocalName, sum(country.Population)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.7516832947731018,
            0.00016134597535710782,
            0.8951454162597656,
            0.00018390113837085664,
            0.0018034136155620217,
            8.526856981916353e-05,
            0.09839292615652084,
            0.0001610395120223984
        ],
        "align_select": "select country.GovernmentForm, sum(country.Population)",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the different government forms and what is the total population of each for government forms that have an average life expectancy greater than 66?",
        "gold_select": "select sum(country.Population), country.GovernmentForm",
        "select_candidates": [
            "select country.GovernmentForm, sum(country.Population)",
            "select country.Name, sum(country.Population)",
            "select country.Capital, sum(country.Population)",
            "select country.LocalName, sum(country.Population)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.837124764919281,
            0.00016361908637918532,
            0.9475470781326294,
            0.0001820367033360526,
            0.0015318955993279815,
            8.521150448359549e-05,
            0.11842598021030426,
            0.00016555502952542156
        ],
        "align_select": "select country.GovernmentForm, sum(country.Population)",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the different government forms and what is the total population of each for government forms that have an average life expectancy greater than 71?",
        "gold_select": "select sum(country.Population), country.GovernmentForm",
        "select_candidates": [
            "select country.GovernmentForm, sum(country.Population)",
            "select country.Name, sum(country.Population)",
            "select country.Capital, sum(country.Population)",
            "select country.LocalName, sum(country.Population)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.7870601415634155,
            0.00016255666560027748,
            0.9221401214599609,
            0.00018407536845188588,
            0.002038974314928055,
            8.595146937295794e-05,
            0.10842438787221909,
            0.00016334786778315902
        ],
        "align_select": "select country.GovernmentForm, sum(country.Population)",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the different government forms and what is the total population of each for government forms that have an average life expectancy greater than 79?",
        "gold_select": "select sum(country.Population), country.GovernmentForm",
        "select_candidates": [
            "select country.GovernmentForm, sum(country.Population)",
            "select country.Name, sum(country.Population)",
            "select country.Capital, sum(country.Population)",
            "select country.LocalName, sum(country.Population)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.7261301279067993,
            0.00016152208263520151,
            0.8716860413551331,
            0.00018426885071676224,
            0.0018612939165905118,
            8.673338743392378e-05,
            0.09309837967157364,
            0.0001613381173228845
        ],
        "align_select": "select country.GovernmentForm, sum(country.Population)",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Find the average life expectancy and total population for each continent where the average life expectancy is shorter than 82?",
        "gold_select": "select sum(country.Population), avg(country.LifeExpectancy), country.Continent",
        "select_candidates": [
            "select country.Name, avg(country.LifeExpectancy), sum(country.Population)",
            "select country.Continent, avg(country.LifeExpectancy), sum(country.Population)",
            "select avg(country.LifeExpectancy), sum(country.Population), country.Continent",
            "select country.LifeExpectancy, sum(country.Population), country.Continent"
        ],
        "select_labels": [
            0.0,
            1.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.0015150150284171104,
            0.00025241257390007377,
            0.008987399749457836,
            0.00028344281599856913,
            0.03973584622144699,
            0.001085170777514577,
            0.013316448777914047,
            0.0008611168013885617
        ],
        "align_select": "select country.Name, avg(country.LifeExpectancy), sum(country.Population)",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Find the average life expectancy and total population for each continent where the average life expectancy is shorter than 76?",
        "gold_select": "select sum(country.Population), avg(country.LifeExpectancy), country.Continent",
        "select_candidates": [
            "select country.Name, avg(country.LifeExpectancy), sum(country.Population)",
            "select country.Continent, avg(country.LifeExpectancy), sum(country.Population)",
            "select avg(country.LifeExpectancy), sum(country.Population), country.Continent",
            "select country.LifeExpectancy, sum(country.Population), country.Continent"
        ],
        "select_labels": [
            0.0,
            1.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.0016210289904847741,
            0.00025102015933953226,
            0.009987303987145424,
            0.00029659830033779144,
            0.044565651565790176,
            0.0011776317842304707,
            0.01429855078458786,
            0.0009356278460472822
        ],
        "align_select": "select country.Name, avg(country.LifeExpectancy), sum(country.Population)",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Find the average life expectancy and total population for each continent where the average life expectancy is shorter than 66?",
        "gold_select": "select sum(country.Population), avg(country.LifeExpectancy), country.Continent",
        "select_candidates": [
            "select country.Name, avg(country.LifeExpectancy), sum(country.Population)",
            "select avg(country.LifeExpectancy), sum(country.Population), country.Continent",
            "select country.Continent, avg(country.LifeExpectancy), sum(country.Population)",
            "select country.LifeExpectancy, sum(country.Population), country.Continent"
        ],
        "select_labels": [
            0.0,
            1.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.0018935824045911431,
            0.00024729676079005003,
            0.06757327169179916,
            0.0014512230409309268,
            0.01626170054078102,
            0.0003312403860036284,
            0.020840441808104515,
            0.0011487188749015331
        ],
        "align_select": "select country.Name, avg(country.LifeExpectancy), sum(country.Population)",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Find the average life expectancy and total population for each continent where the average life expectancy is shorter than 79?",
        "gold_select": "select sum(country.Population), avg(country.LifeExpectancy), country.Continent",
        "select_candidates": [
            "select country.Name, avg(country.LifeExpectancy), sum(country.Population)",
            "select country.Continent, avg(country.LifeExpectancy), sum(country.Population)",
            "select avg(country.LifeExpectancy), sum(country.Population), country.Continent",
            "select country.LifeExpectancy, sum(country.Population), country.Continent"
        ],
        "select_labels": [
            0.0,
            1.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.0015779457753524184,
            0.0002483823336660862,
            0.008996637538075447,
            0.0002779480128083378,
            0.04016851633787155,
            0.0010719667188823223,
            0.013809396885335445,
            0.0008617377607151866
        ],
        "align_select": "select country.Name, avg(country.LifeExpectancy), sum(country.Population)",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Find the average life expectancy and total population for each continent where the average life expectancy is shorter than 69?",
        "gold_select": "select sum(country.Population), avg(country.LifeExpectancy), country.Continent",
        "select_candidates": [
            "select country.Name, avg(country.LifeExpectancy), sum(country.Population)",
            "select country.Continent, avg(country.LifeExpectancy), sum(country.Population)",
            "select avg(country.LifeExpectancy), sum(country.Population), country.Continent",
            "select country.LifeExpectancy, sum(country.Population), country.Continent"
        ],
        "select_labels": [
            0.0,
            1.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.0018391257617622614,
            0.0002469421597197652,
            0.01373697817325592,
            0.0003048634680453688,
            0.05911807343363762,
            0.0012699570506811142,
            0.017865631729364395,
            0.0010063061490654945
        ],
        "align_select": "select country.Name, avg(country.LifeExpectancy), sum(country.Population)",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the different continents and the total popuation and average life expectancy corresponding to each, for continents that have an average life expectancy less than 82?",
        "gold_select": "select sum(country.Population), avg(country.LifeExpectancy), country.Continent",
        "select_candidates": [
            "select country.Continent, sum(country.Population), avg(country.Population)",
            "select country.Continent, sum(country.Population), avg(country.LifeExpectancy)",
            "select country.Continent, sum(country.Population), sum(country.LifeExpectancy)",
            "select country.Continent, count(*), avg(country.Population)"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.19214986264705658,
            0.049129072576761246,
            0.810957670211792,
            0.10046058148145676,
            0.4318792521953583,
            0.039371512830257416,
            0.0034596913028508425,
            0.002110251924023032
        ],
        "align_select": "select country.Continent, sum(country.Population), avg(country.LifeExpectancy)",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the different continents and the total popuation and average life expectancy corresponding to each, for continents that have an average life expectancy less than 76?",
        "gold_select": "select sum(country.Population), avg(country.LifeExpectancy), country.Continent",
        "select_candidates": [
            "select country.Continent, sum(country.Population), avg(country.Population)",
            "select country.Continent, sum(country.Population), avg(country.LifeExpectancy)",
            "select country.Continent, sum(country.Population), sum(country.LifeExpectancy)",
            "select country.Continent, count(*), avg(country.Population)"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.41260582208633423,
            0.07434607297182083,
            0.8599681854248047,
            0.12841036915779114,
            0.5907027125358582,
            0.048421770334243774,
            0.003993465099483728,
            0.002251427387818694
        ],
        "align_select": "select country.Continent, sum(country.Population), avg(country.LifeExpectancy)",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the different continents and the total popuation and average life expectancy corresponding to each, for continents that have an average life expectancy less than 66?",
        "gold_select": "select sum(country.Population), avg(country.LifeExpectancy), country.Continent",
        "select_candidates": [
            "select country.Continent, sum(country.Population), avg(country.Population)",
            "select country.Continent, sum(country.Population), avg(country.LifeExpectancy)",
            "select country.Continent, sum(country.Population), sum(country.LifeExpectancy)",
            "select country.Continent, count(*), avg(country.Population)"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.5765761137008667,
            0.08888571709394455,
            0.9021257758140564,
            0.14479699730873108,
            0.7162675261497498,
            0.056804802268743515,
            0.004298461135476828,
            0.002358617028221488
        ],
        "align_select": "select country.Continent, sum(country.Population), avg(country.LifeExpectancy)",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the different continents and the total popuation and average life expectancy corresponding to each, for continents that have an average life expectancy less than 79?",
        "gold_select": "select sum(country.Population), avg(country.LifeExpectancy), country.Continent",
        "select_candidates": [
            "select country.Continent, sum(country.Population), avg(country.Population)",
            "select country.Continent, sum(country.Population), avg(country.LifeExpectancy)",
            "select country.Continent, sum(country.Population), sum(country.LifeExpectancy)",
            "select country.Continent, count(*), avg(country.Population)"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.2861463129520416,
            0.05169394984841347,
            0.8248285055160522,
            0.09146234393119812,
            0.48416826128959656,
            0.034898918122053146,
            0.004098798148334026,
            0.002079390687867999
        ],
        "align_select": "select country.Continent, sum(country.Population), avg(country.LifeExpectancy)",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the different continents and the total popuation and average life expectancy corresponding to each, for continents that have an average life expectancy less than 69?",
        "gold_select": "select sum(country.Population), avg(country.LifeExpectancy), country.Continent",
        "select_candidates": [
            "select country.Continent, sum(country.Population), avg(country.Population)",
            "select country.Continent, sum(country.Population), avg(country.LifeExpectancy)",
            "select country.Continent, sum(country.Population), sum(country.LifeExpectancy)",
            "select country.Continent, count(*), avg(country.Population)"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.5078405141830444,
            0.08337587863206863,
            0.8868598937988281,
            0.15316852927207947,
            0.6863712072372437,
            0.06205424293875694,
            0.004206725861877203,
            0.002232417929917574
        ],
        "align_select": "select country.Continent, sum(country.Population), avg(country.LifeExpectancy)",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Please show the name of the conductor that has conducted orchestras founded after 2002.",
        "gold_select": "select conductor.Name",
        "select_candidates": [
            "select conductor.Name",
            "select conductor.Name, orchestra.Conductor_ID",
            "select conductor.Name (or conductor.Age)",
            "select conductor.Name (ORDER BY-LIMIT)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor orchestra",
        "table_candidates": [
            "conductor orchestra"
        ],
        "align_scores": [
            0.97782963514328,
            9.739511733641848e-05,
            0.0001846688537625596,
            7.193924830062315e-05,
            0.0007735858671367168,
            7.982510578585789e-05,
            0.06272175163030624,
            7.69551406847313e-05
        ],
        "align_select": "select conductor.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Please show the name of the conductor that has conducted orchestras founded after 2007.",
        "gold_select": "select conductor.Name",
        "select_candidates": [
            "select conductor.Name",
            "select conductor.Name, orchestra.Conductor_ID",
            "select conductor.Name (or conductor.Age)",
            "select conductor.Name (ORDER BY-LIMIT)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor orchestra",
        "table_candidates": [
            "conductor orchestra"
        ],
        "align_scores": [
            0.9790807366371155,
            9.563781350152567e-05,
            0.00018442250438965857,
            7.208420720417053e-05,
            0.0008049760363064706,
            8.29037744551897e-05,
            0.05321606993675232,
            7.82206843723543e-05
        ],
        "align_select": "select conductor.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Please show the name of the conductor that has conducted orchestras founded after 2005.",
        "gold_select": "select conductor.Name",
        "select_candidates": [
            "select conductor.Name",
            "select conductor.Name, orchestra.Conductor_ID",
            "select conductor.Name (or conductor.Age)",
            "select conductor.Name (ORDER BY-LIMIT)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor orchestra",
        "table_candidates": [
            "conductor orchestra"
        ],
        "align_scores": [
            0.9783958196640015,
            9.619263437343761e-05,
            0.00018628881662152708,
            7.239158730953932e-05,
            0.0007612830377183855,
            8.187520143110305e-05,
            0.06851895898580551,
            7.74357613408938e-05
        ],
        "align_select": "select conductor.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Please show the name of the conductor that has conducted orchestras founded after 2004.",
        "gold_select": "select conductor.Name",
        "select_candidates": [
            "select conductor.Name",
            "select conductor.Name, orchestra.Conductor_ID",
            "select conductor.Name (or conductor.Age)",
            "select conductor.Name (ORDER BY-LIMIT)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor orchestra",
        "table_candidates": [
            "conductor orchestra"
        ],
        "align_scores": [
            0.978865385055542,
            9.587788372300565e-05,
            0.00018478702986612916,
            7.173811900429428e-05,
            0.0007824648055247962,
            8.16576648503542e-05,
            0.06239812821149826,
            7.760838343529031e-05
        ],
        "align_select": "select conductor.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Please show the name of the conductor that has conducted orchestras founded after 2006.",
        "gold_select": "select conductor.Name",
        "select_candidates": [
            "select conductor.Name",
            "select conductor.Name, orchestra.Conductor_ID",
            "select conductor.Name (Orchestrator-id: conductor.Conductor_ID)",
            "select conductor.Name (Orchestrator-id orchestra.Conductor_ID)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor orchestra",
        "table_candidates": [
            "conductor orchestra"
        ],
        "align_scores": [
            0.9788033366203308,
            9.553007839713246e-05,
            0.00018438661936670542,
            7.228163303807378e-05,
            0.003130709519609809,
            6.862988811917603e-05,
            0.0005254450952634215,
            6.24183303443715e-05
        ],
        "align_select": "select conductor.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of conductors who have conducted orchestras founded after the year 2002?",
        "gold_select": "select conductor.Name",
        "select_candidates": [
            "select conductor.Name",
            "select conductor.Name, orchestra.Conductor_ID",
            "select distinct conductor.Name",
            "select orchestra.Conductor_ID, conductor.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor orchestra",
        "table_candidates": [
            "conductor orchestra"
        ],
        "align_scores": [
            0.9872602224349976,
            0.00012019033601973206,
            0.00024085839686449617,
            6.879973807372153e-05,
            0.062055543065071106,
            0.00013017375022172928,
            0.0002814935869537294,
            7.956565968925133e-05
        ],
        "align_select": "select conductor.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of conductors who have conducted orchestras founded after the year 2007?",
        "gold_select": "select conductor.Name",
        "select_candidates": [
            "select conductor.Name",
            "select conductor.Name, orchestra.Conductor_ID",
            "select distinct conductor.Name",
            "select conductor.Name, conductor.Age"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor orchestra",
        "table_candidates": [
            "conductor orchestra"
        ],
        "align_scores": [
            0.9872512817382812,
            0.0001139448067988269,
            0.0002384900872129947,
            6.861967267468572e-05,
            0.06479114294052124,
            0.00012593556311912835,
            0.0002054234646493569,
            6.762861448805779e-05
        ],
        "align_select": "select conductor.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of conductors who have conducted orchestras founded after the year 2005?",
        "gold_select": "select conductor.Name",
        "select_candidates": [
            "select conductor.Name",
            "select conductor.Name, orchestra.Conductor_ID",
            "select orchestra.Conductor_ID, conductor.Name",
            "select distinct conductor.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor orchestra",
        "table_candidates": [
            "conductor orchestra"
        ],
        "align_scores": [
            0.9872720837593079,
            0.00011656667629722506,
            0.00024085931363515556,
            6.926310015842319e-05,
            0.00028199778171256185,
            7.972506864462048e-05,
            0.0635576844215393,
            0.00012967571092303842
        ],
        "align_select": "select conductor.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of conductors who have conducted orchestras founded after the year 2004?",
        "gold_select": "select conductor.Name",
        "select_candidates": [
            "select conductor.Name",
            "select conductor.Name, orchestra.Conductor_ID",
            "select distinct conductor.Name",
            "select orchestra.Conductor_ID, conductor.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor orchestra",
        "table_candidates": [
            "conductor orchestra"
        ],
        "align_scores": [
            0.9873215556144714,
            0.00011915087088709697,
            0.00023913514451123774,
            6.891411612741649e-05,
            0.06344470381736755,
            0.00012847910693380982,
            0.0002821892558131367,
            7.967240526340902e-05
        ],
        "align_select": "select conductor.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of conductors who have conducted orchestras founded after the year 2006?",
        "gold_select": "select conductor.Name",
        "select_candidates": [
            "select conductor.Name",
            "select conductor.Name, orchestra.Conductor_ID",
            "select distinct conductor.Name",
            "select conductor.Name (or conductor.Age)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor orchestra",
        "table_candidates": [
            "conductor orchestra"
        ],
        "align_scores": [
            0.9871529936790466,
            0.00011625431216089055,
            0.00023968183086253703,
            6.881830631755292e-05,
            0.06441847234964371,
            0.00012691723532043397,
            0.0011858089128509164,
            8.128125773509964e-05
        ],
        "align_select": "select conductor.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show the names of all high schoolers in grade 9.",
        "gold_select": "select Highschooler.name",
        "select_candidates": [
            "select Highschooler.name",
            "select Highschooler.name, Highschooler.grade",
            "select distinct Highschooler.name",
            "select Highschooler.ID, Highschooler.name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler",
        "table_candidates": [
            "Highschooler"
        ],
        "align_scores": [
            0.978377103805542,
            0.00010182161349803209,
            0.0001625811419216916,
            6.451932131312788e-05,
            0.027967941015958786,
            9.673903696238995e-05,
            0.0002548938791733235,
            7.110708247637376e-05
        ],
        "align_select": "select Highschooler.name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show the names of all high schoolers in grade 12.",
        "gold_select": "select Highschooler.name",
        "select_candidates": [
            "select Highschooler.name",
            "select Highschooler.name, Highschooler.grade",
            "select distinct Highschooler.name",
            "select Highschooler.name (or Highschooler.grade)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler",
        "table_candidates": [
            "Highschooler"
        ],
        "align_scores": [
            0.9832084774971008,
            0.00010871866106754169,
            0.000164995581144467,
            6.327992014121264e-05,
            0.025270037353038788,
            0.00010562811803538352,
            0.0012843706645071507,
            7.403472409350798e-05
        ],
        "align_select": "select Highschooler.name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show the names of all high schoolers in grade 11.",
        "gold_select": "select Highschooler.name",
        "select_candidates": [
            "select Highschooler.name",
            "select Highschooler.name, Highschooler.grade",
            "select distinct Highschooler.name",
            "select distinct Highschooler.name, Highschooler.grade"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler",
        "table_candidates": [
            "Highschooler"
        ],
        "align_scores": [
            0.9849040508270264,
            0.00010156734788324684,
            0.00016358507855329663,
            6.27582412562333e-05,
            0.027417568489909172,
            9.297377982875332e-05,
            0.00015965641068760306,
            6.409819616237655e-05
        ],
        "align_select": "select Highschooler.name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of all high schoolers in grade 9?",
        "gold_select": "select Highschooler.name",
        "select_candidates": [
            "select Highschooler.name",
            "select Highschooler.name, Highschooler.grade",
            "select distinct Highschooler.name",
            "select distinct Highschooler.name, Highschooler.grade"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler",
        "table_candidates": [
            "Highschooler"
        ],
        "align_scores": [
            0.9792876243591309,
            0.00015309192531276494,
            0.00018328336591366678,
            6.554552965098992e-05,
            0.07991720736026764,
            0.0002516230451874435,
            0.0001304695033468306,
            6.72698297421448e-05
        ],
        "align_select": "select Highschooler.name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of all high schoolers in grade 12?",
        "gold_select": "select Highschooler.name",
        "select_candidates": [
            "select Highschooler.name",
            "select Highschooler.name, Highschooler.grade",
            "select distinct Highschooler.name",
            "select Highschooler.name (or Highschooler.grade)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler",
        "table_candidates": [
            "Highschooler"
        ],
        "align_scores": [
            0.9830747246742249,
            0.0001886329846456647,
            0.0001888008846435696,
            6.599522748729214e-05,
            0.07470609992742538,
            0.00027118794969283044,
            0.0012595317093655467,
            7.915457536000758e-05
        ],
        "align_select": "select Highschooler.name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of all high schoolers in grade 11?",
        "gold_select": "select Highschooler.name",
        "select_candidates": [
            "select Highschooler.name",
            "select Highschooler.name, Highschooler.grade",
            "select distinct Highschooler.name",
            "select Highschooler.name (distinct Highschooler.grade)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler",
        "table_candidates": [
            "Highschooler"
        ],
        "align_scores": [
            0.9847444891929626,
            0.000154190682223998,
            0.00018677792104426771,
            6.368529284372926e-05,
            0.0799541175365448,
            0.00023770912957843393,
            0.00043737731175497174,
            8.772272849455476e-05
        ],
        "align_select": "select Highschooler.name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many high schoolers are there in grade 9 or 19?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), t0.c9, Highschooler.name9",
            "select count(*), Highschooler.grade",
            "select count(*) in t0.c9, count(*) in Highschooler.name9"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler",
        "table_candidates": [
            "Highschooler"
        ],
        "align_scores": [
            0.6649449467658997,
            7.432437996612862e-05,
            0.00016742652223911136,
            7.096734043443576e-05,
            0.00030373866320587695,
            7.264039595611393e-05,
            0.00014711005496792495,
            7.310564978979528e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many high schoolers are there in grade 9 or 17?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), t0.c9, Highschooler.name7",
            "select count(*), Highschooler.grade",
            "select count(*), t0.c9, Highschooler.name7"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler",
        "table_candidates": [
            "Highschooler"
        ],
        "align_scores": [
            0.8474515676498413,
            7.696578541072085e-05,
            0.000214659798075445,
            7.390753307845443e-05,
            0.00031269300961866975,
            7.316345727303997e-05,
            0.000214659798075445,
            7.390753307845443e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many high schoolers are there in grade 9 or 7?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Highschooler.grade",
            "select count(*), Highschooler.ID",
            "select count(*), Highschooler.grade"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler",
        "table_candidates": [
            "Highschooler"
        ],
        "align_scores": [
            0.2053307592868805,
            9.452316589886323e-05,
            0.00029029036522842944,
            6.751243927283213e-05,
            0.00043345149606466293,
            7.317971903830767e-05,
            0.00029029036522842944,
            6.751243927283213e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many high schoolers are there in grade 9 or 5?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Highschooler.grade",
            "select count(*), Highschooler.ID",
            "select count(*), Highschooler.grade"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler",
        "table_candidates": [
            "Highschooler"
        ],
        "align_scores": [
            0.34050968289375305,
            0.00013261863205116242,
            0.00028014686540700495,
            6.96606730343774e-05,
            0.0004352354153525084,
            7.086151163093746e-05,
            0.00028014686540700495,
            6.96606730343774e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many high schoolers are there in grade 9 or 8?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Highschooler.grade",
            "select count(*), Highschooler.ID",
            "select count(*), Highschooler.grade"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler",
        "table_candidates": [
            "Highschooler"
        ],
        "align_scores": [
            0.7038148641586304,
            9.81782068265602e-05,
            0.00029020957299508154,
            6.923080945853144e-05,
            0.000453333486802876,
            7.478573388652876e-05,
            0.00029020957299508154,
            6.923080945853144e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many high schoolers are there in grade 18 or 10?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Highschooler.grade",
            "select count(*), Highschooler.ID",
            "select count(*), Highschooler.name0"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler",
        "table_candidates": [
            "Highschooler"
        ],
        "align_scores": [
            0.1821717917919159,
            7.280697172973305e-05,
            0.0002783699019346386,
            6.866556941531599e-05,
            0.0003470613155514002,
            6.694920739391819e-05,
            0.00035364332143217325,
            7.499841012759134e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many high schoolers are there in grade 3 or 10?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), t0.c3, Highschooler.name0",
            "select count(*), Highschooler.grade",
            "select count(*) in t0.c3, Highschooler.name0"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler",
        "table_candidates": [
            "Highschooler"
        ],
        "align_scores": [
            0.04569597914814949,
            9.567484084982425e-05,
            0.00015390482440125197,
            5.966668686596677e-05,
            0.0002924476284533739,
            7.354714762186632e-05,
            0.000226839110837318,
            8.604174945503473e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many high schoolers are there in grade 7 or 10?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), t0.c7, Highschooler.name0",
            "select count(*), t0.c7, Highschooler.name0",
            "select count(*), Highschooler.grade"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler",
        "table_candidates": [
            "Highschooler"
        ],
        "align_scores": [
            0.07975614815950394,
            8.681076724315062e-05,
            0.00016037705063354224,
            5.928612154093571e-05,
            0.00016037705063354224,
            5.928612154093571e-05,
            0.0002898749662563205,
            7.062566874083132e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many high schoolers are there in grade 5 or 10?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), t0.c5, Highschooler.name0",
            "select count(*) in t0.c5, count(*) in Highschooler.name0",
            "select count(*), t0.c5, Highschooler.name0"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler",
        "table_candidates": [
            "Highschooler"
        ],
        "align_scores": [
            0.05233565345406532,
            0.00016374893311876804,
            0.00015870443894527853,
            5.9865433286176994e-05,
            0.0001627328310860321,
            7.510217983508483e-05,
            0.00015870443894527853,
            5.9865433286176994e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many high schoolers are there in grade 8 or 10?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), t0.c8, Highschooler.name0",
            "select count(*), Highschooler.grade",
            "select count(*), Highschooler.ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler",
        "table_candidates": [
            "Highschooler"
        ],
        "align_scores": [
            0.18783004581928253,
            8.477514347760007e-05,
            0.00015067140338942409,
            5.84122390137054e-05,
            0.0002835606865119189,
            7.029307016637176e-05,
            0.0004293005040381104,
            7.268071931321174e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Count the number of high schoolers in grades 9 or 19.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Highschooler.ID",
            "select count(*), t0.c9, Highschooler.name9",
            "select count(*), Highschooler.grade"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler",
        "table_candidates": [
            "Highschooler"
        ],
        "align_scores": [
            0.4807389974594116,
            0.0012764406856149435,
            0.0003209643764421344,
            0.00016979077190626413,
            0.00018795453070197254,
            9.714588668430224e-05,
            0.0003044141340069473,
            0.0008222225587815046
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Count the number of high schoolers in grades 9 or 17.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Highschooler.ID",
            "select count(*), t0.c9, Highschooler.name7",
            "select count(*), Highschooler.name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler",
        "table_candidates": [
            "Highschooler"
        ],
        "align_scores": [
            0.42160463333129883,
            0.0015337653458118439,
            0.0003153346769977361,
            0.00017350476991850883,
            0.00024391329498030245,
            0.00011031182657461613,
            0.0002575979451648891,
            0.0004487977421376854
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Count the number of high schoolers in grades 9 or 7.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Highschooler.ID",
            "select count(*), Highschooler.grade",
            "select count(*), Highschooler.name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler",
        "table_candidates": [
            "Highschooler"
        ],
        "align_scores": [
            0.0791703388094902,
            0.00016803748439997435,
            0.00028783074230886996,
            0.0008187699713744223,
            0.00027409748872742057,
            0.5794286727905273,
            0.00024169347307179123,
            0.0043563032522797585
        ],
        "align_select": "select count(*), Highschooler.grade",
        "align_structure": "SELECT-FROM-WHERE-GROUP BY"
    },
    {
        "question": "Count the number of high schoolers in grades 9 or 5.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Highschooler.ID",
            "select count(*), Highschooler.grade",
            "select count(*), Highschooler.name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler",
        "table_candidates": [
            "Highschooler"
        ],
        "align_scores": [
            0.12637290358543396,
            0.0005270800902508199,
            0.00028587665292434394,
            0.0001811926777008921,
            0.0002674652205314487,
            0.0007944628014229238,
            0.00023715090355835855,
            0.0004326203197706491
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Count the number of high schoolers in grades 9 or 8.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Highschooler.ID",
            "select count(*), Highschooler.grade",
            "select count(*), Highschooler.name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler",
        "table_candidates": [
            "Highschooler"
        ],
        "align_scores": [
            0.1429518461227417,
            0.00018636055756360292,
            0.00029058277141302824,
            0.0009344175923615694,
            0.00028252386255189776,
            0.7949737310409546,
            0.00024025794118642807,
            0.00501120463013649
        ],
        "align_select": "select count(*), Highschooler.grade",
        "align_structure": "SELECT-FROM-WHERE-GROUP BY"
    },
    {
        "question": "Count the number of high schoolers in grades 18 or 10.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Highschooler.ID",
            "select count(*), Highschooler.grade",
            "select count(*), Highschooler.name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler",
        "table_candidates": [
            "Highschooler"
        ],
        "align_scores": [
            0.1210908368229866,
            0.0006845968891866505,
            0.0002976770920213312,
            0.0001592948246980086,
            0.00026946066645905375,
            0.0005956519744358957,
            0.00024632818531244993,
            0.000294371391646564
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Count the number of high schoolers in grades 3 or 10.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), t0.c3, Highschooler.name0",
            "select count(*), Highschooler.grade",
            "select count(*), t0.c3 ou Highschooler.name0"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler",
        "table_candidates": [
            "Highschooler"
        ],
        "align_scores": [
            0.022845368832349777,
            0.00025824145996011794,
            0.00016323680756613612,
            9.920598677126691e-05,
            0.0002903733984567225,
            0.0011783060617744923,
            0.0002058220561593771,
            0.00010798322909977287
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Count the number of high schoolers in grades 7 or 10.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), t0.c7, Highschooler.name0",
            "select count(*), Highschooler.ID",
            "select count(*), Highschooler.grade"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler",
        "table_candidates": [
            "Highschooler"
        ],
        "align_scores": [
            0.030649367719888687,
            0.00044515772606246173,
            0.00016830704407766461,
            0.00010042075155070052,
            0.0002940799167845398,
            0.00020693977421615273,
            0.0002810323494486511,
            0.0013613952323794365
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Count the number of high schoolers in grades 5 or 10.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), t0.c5, Highschooler.name0",
            "select count(*), Highschooler.ID",
            "select count(*), Highschooler.grade"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler",
        "table_candidates": [
            "Highschooler"
        ],
        "align_scores": [
            0.021288182586431503,
            0.000405189668526873,
            0.00017184740863740444,
            0.00010100754298036918,
            0.0002943879517260939,
            0.00020304444478824735,
            0.0002752369036898017,
            0.0014998911647126079
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Count the number of high schoolers in grades 8 or 10.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Highschooler.ID",
            "select count(*), Highschooler.grade",
            "select count(*), Highschooler.name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler",
        "table_candidates": [
            "Highschooler"
        ],
        "align_scores": [
            0.05922236293554306,
            0.0006911861128173769,
            0.000286825088551268,
            0.000223822527914308,
            0.00026948866434395313,
            0.0014953783247619867,
            0.00024049491912592202,
            0.0006504367338493466
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show the names of students who have a grade higher than 10 and have at least 2 friends.",
        "gold_select": "select Highschooler.name",
        "select_candidates": [
            "select Highschooler.name",
            "select Highschooler.name, Highschooler.grade",
            "select Highschooler.name, Highschooler.ID",
            "select Highschooler.name, Friend.friend_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "Highschooler Friend",
        "table_candidates": [
            "Highschooler Friend",
            "Highschooler Friend Likes"
        ],
        "align_scores": [
            0.17326214909553528,
            0.9775856733322144,
            0.0006516111898235977,
            0.0004720904107671231,
            0.00029085270944051445,
            0.0014364916132763028,
            0.0004811821272596717,
            0.00082573969848454
        ],
        "align_select": "select Highschooler.name",
        "align_structure": "SELECT-FROM-WHERE-GROUP BY-HAVING"
    },
    {
        "question": "Show the names of students who have a grade higher than 9 and have at least 2 friends.",
        "gold_select": "select Highschooler.name",
        "select_candidates": [
            "select Highschooler.name",
            "select Highschooler.name, Highschooler.grade",
            "select Highschooler.name, Highschooler.ID",
            "select Highschooler.name, Friend.friend_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "Highschooler Friend",
        "table_candidates": [
            "Highschooler Friend",
            "Highschooler Friend Likes"
        ],
        "align_scores": [
            0.27302441000938416,
            0.9841692447662354,
            0.0007633076165802777,
            0.00048136309487745166,
            0.0003003310412168503,
            0.0014721405459567904,
            0.0005043388227932155,
            0.0008701158221811056
        ],
        "align_select": "select Highschooler.name",
        "align_structure": "SELECT-FROM-WHERE-GROUP BY-HAVING"
    },
    {
        "question": "What are the names of high schoolers who have a grade of over 10 and have 2 or more friends?",
        "gold_select": "select Highschooler.name",
        "select_candidates": [
            "select Highschooler.name",
            "select Highschooler.name, Highschooler.grade",
            "select Highschooler.name, Highschooler.ID",
            "select Highschooler.name, Friend.friend_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-WHERE-GROUP BY-HAVING-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "Highschooler Friend",
        "table_candidates": [
            "Highschooler Friend",
            "Highschooler Friend Likes"
        ],
        "align_scores": [
            0.047535017132759094,
            0.05940425023436546,
            0.0003898381255567074,
            0.0002496334782335907,
            0.0002560618449933827,
            0.00020850244618486613,
            0.0003536677686497569,
            0.00023363008222077042
        ],
        "align_select": "select Highschooler.name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the names of high schoolers who have a grade of over 9 and have 2 or more friends?",
        "gold_select": "select Highschooler.name",
        "select_candidates": [
            "select Highschooler.name",
            "select Highschooler.name, Highschooler.grade",
            "select Highschooler.name, Highschooler.ID",
            "select Highschooler.name, Friend.friend_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-WHERE-GROUP BY-HAVING-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "Highschooler Friend",
        "table_candidates": [
            "Highschooler Friend",
            "Highschooler Friend Likes"
        ],
        "align_scores": [
            0.09263325482606888,
            0.12093422561883926,
            0.0004185529542155564,
            0.0002493675274308771,
            0.00026554963551461697,
            0.0002111593057634309,
            0.00038831515121273696,
            0.00024182531342376024
        ],
        "align_select": "select Highschooler.name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Show the name of singers whose birth year is either 1948 or 1959?",
        "gold_select": "select singer.Name",
        "select_candidates": [
            "select singer.Name",
            "select singer.Name, singer.Birth_Year",
            "select singer.Singer_ID, singer.Name",
            "select singer.Name, t0.c5"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.9929043650627136,
            0.0006589376134797931,
            0.00016858908929862082,
            7.386793731711805e-05,
            0.00021316681522876024,
            0.00011744576477212831,
            0.000408963329391554,
            9.233515447704121e-05
        ],
        "align_select": "select singer.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show the name of singers whose birth year is either 1948 or 1953?",
        "gold_select": "select singer.Name",
        "select_candidates": [
            "select singer.Name",
            "select singer.Name, singer.Birth_Year",
            "select singer.Singer_ID, singer.Name",
            "select singer.Name, singer.Net_Worth_Millions"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.9931111335754395,
            0.0007470733253285289,
            0.000170619910932146,
            7.367847865680233e-05,
            0.00021499593276530504,
            0.00012198403419461101,
            0.00016947714902926236,
            8.538467955077067e-05
        ],
        "align_select": "select singer.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show the name of singers whose birth year is either 1948 or 1943?",
        "gold_select": "select singer.Name",
        "select_candidates": [
            "select singer.Name",
            "select singer.Name, singer.Birth_Year",
            "select singer.Singer_ID, singer.Name",
            "select singer.Name, singer.Net_Worth_Millions"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.8163823485374451,
            0.0005521515267901123,
            0.0001581102260388434,
            6.990750262048095e-05,
            0.00019058570615015924,
            0.00011767365504056215,
            0.00015799584798514843,
            8.187488128896803e-05
        ],
        "align_select": "select singer.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show the name of singers whose birth year is either 1948 or 1948?",
        "gold_select": "select singer.Name",
        "select_candidates": [
            "select singer.Name",
            "select singer.Name, singer.Birth_Year",
            "select singer.Singer_ID, singer.Name",
            "select singer.Name or singer.Birth_Year"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.7069302201271057,
            0.0002381328959017992,
            0.0001524999679531902,
            6.446470797527581e-05,
            0.00018109801749233156,
            9.15454002097249e-05,
            0.0002741962671279907,
            7.806225767126307e-05
        ],
        "align_select": "select singer.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show the name of singers whose birth year is either 1948 or 1956?",
        "gold_select": "select singer.Name",
        "select_candidates": [
            "select singer.Name",
            "select singer.Name, singer.Birth_Year",
            "select singer.Singer_ID, singer.Name",
            "select singer.Name, t0.c6"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.9929004907608032,
            0.0007229204056784511,
            0.00016864953795447946,
            7.350443775067106e-05,
            0.00021285445836838335,
            0.00011844445543829352,
            0.000404269463615492,
            8.965223969426006e-05
        ],
        "align_select": "select singer.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show the name of singers whose birth year is either 1958 or 1949?",
        "gold_select": "select singer.Name",
        "select_candidates": [
            "select singer.Name",
            "select singer.Name, singer.Birth_Year",
            "select singer.Singer_ID, singer.Name",
            "select t0, singer.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.6293560862541199,
            0.0005660609458573163,
            0.00015283988614100963,
            6.927361391717568e-05,
            0.00018208095571026206,
            0.0001143909539678134,
            0.0005653150146827102,
            0.00011782511865021661
        ],
        "align_select": "select singer.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show the name of singers whose birth year is either 1952 or 1949?",
        "gold_select": "select singer.Name",
        "select_candidates": [
            "select singer.Name",
            "select singer.Name, singer.Birth_Year",
            "select singer.Singer_ID, singer.Name",
            "select t0, singer.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.731857419013977,
            0.0004772559623233974,
            0.00015330548922065645,
            6.625975947827101e-05,
            0.00018350720347370952,
            0.00010525036486797035,
            0.0005801348597742617,
            0.00011039979290217161
        ],
        "align_select": "select singer.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show the name of singers whose birth year is either 1942 or 1949?",
        "gold_select": "select singer.Name",
        "select_candidates": [
            "select singer.Name",
            "select singer.Name, singer.Birth_Year",
            "select singer.Singer_ID, singer.Name",
            "select t0, singer.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.9933930039405823,
            0.0007913294830359519,
            0.00016927624528761953,
            7.311101217055693e-05,
            0.0002121619036188349,
            0.00011722879571607336,
            0.000624061853159219,
            0.00012960081221535802
        ],
        "align_select": "select singer.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show the name of singers whose birth year is either 1947 or 1949?",
        "gold_select": "select singer.Name",
        "select_candidates": [
            "select singer.Name",
            "select singer.Name, singer.Birth_Year",
            "select t0, singer.Name",
            "select singer.Name, singer.Net_Worth_Millions"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.993506669998169,
            0.0006661034421995282,
            0.00017246232891920954,
            7.20381794963032e-05,
            0.0006067464128136635,
            0.00012306908320169896,
            0.00017257666331715882,
            8.254823478637263e-05
        ],
        "align_select": "select singer.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show the name of singers whose birth year is either 1955 or 1949?",
        "gold_select": "select singer.Name",
        "select_candidates": [
            "select singer.Name",
            "select singer.Name, singer.Birth_Year",
            "select singer.Singer_ID, singer.Name",
            "select t0, singer.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.6306483149528503,
            0.0005671805120073259,
            0.0001538989454274997,
            6.868318450869992e-05,
            0.00018480005383025855,
            0.00011475169594632462,
            0.0005629202350974083,
            0.00011530749179655686
        ],
        "align_select": "select singer.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of the singers whose birth years are either 1948 or 1959?",
        "gold_select": "select singer.Name",
        "select_candidates": [
            "select singer.Name",
            "select singer.Name, singer.Birth_Year",
            "select singer.Singer_ID, singer.Name",
            "select singer.Name, t0.c6"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.9884912967681885,
            0.0005632456159219146,
            0.00019914761651307344,
            6.891825614729896e-05,
            0.00024842447601258755,
            0.0001092531529138796,
            0.0004297650302760303,
            7.76488013798371e-05
        ],
        "align_select": "select singer.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of the singers whose birth years are either 1948 or 1953?",
        "gold_select": "select singer.Name",
        "select_candidates": [
            "select singer.Name",
            "select singer.Name, singer.Birth_Year",
            "select singer.Singer_ID, singer.Name",
            "select singer.Name, singer.Net_Worth_Millions"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.9898562431335449,
            0.0006622049259021878,
            0.00020333427528385073,
            6.88595901010558e-05,
            0.0002537494001444429,
            0.00011384544632164761,
            0.00020180382125545293,
            7.959213689900935e-05
        ],
        "align_select": "select singer.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of the singers whose birth years are either 1948 or 1943?",
        "gold_select": "select singer.Name",
        "select_candidates": [
            "select singer.Name",
            "select singer.Name, singer.Birth_Year",
            "select singer.Singer_ID, singer.Name",
            "select singer.Name, singer.Net_Worth_Millions"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.7943925261497498,
            0.0005393297178670764,
            0.00018105380877386779,
            6.649618444498628e-05,
            0.00022184493718668818,
            0.00011016507050953805,
            0.0001881835050880909,
            7.738557178527117e-05
        ],
        "align_select": "select singer.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of the singers whose birth years are either 1948 or 1948?",
        "gold_select": "select singer.Name",
        "select_candidates": [
            "select singer.Name",
            "select singer.Name, singer.Birth_Year",
            "select singer.Singer_ID, singer.Name",
            "select singer.Name or singer.Birth_Year"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.7084500193595886,
            0.00022576909395866096,
            0.0001733008975861594,
            6.059197767172009e-05,
            0.0002159629948437214,
            8.44475653138943e-05,
            0.00036619172897189856,
            7.238247781060636e-05
        ],
        "align_select": "select singer.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of the singers whose birth years are either 1948 or 1956?",
        "gold_select": "select singer.Name",
        "select_candidates": [
            "select singer.Name",
            "select singer.Name, singer.Birth_Year",
            "select singer.Singer_ID, singer.Name",
            "select singer.Name, t0.c6"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.9892311692237854,
            0.0005975073436275125,
            0.00020248455984983593,
            6.87645806465298e-05,
            0.00024960399605333805,
            0.00011128838377771899,
            0.0004411900299601257,
            7.754364924039692e-05
        ],
        "align_select": "select singer.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of the singers whose birth years are either 1958 or 1949?",
        "gold_select": "select singer.Name",
        "select_candidates": [
            "select singer.Name",
            "select singer.Name, singer.Birth_Year",
            "select singer.Singer_ID, singer.Name",
            "select singer.Name, singer.Net_Worth_Millions"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.6645777225494385,
            0.0005066206795163453,
            0.00017170884530059993,
            6.537573790410534e-05,
            0.0002114211965817958,
            0.00010877651948248968,
            0.00017724097415339202,
            7.466473471140489e-05
        ],
        "align_select": "select singer.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of the singers whose birth years are either 1952 or 1949?",
        "gold_select": "select singer.Name",
        "select_candidates": [
            "select singer.Name",
            "select singer.Name, singer.Birth_Year",
            "select singer.Singer_ID, singer.Name",
            "select singer.Name, singer.Net_Worth_Millions"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.7579768896102905,
            0.00038239816785790026,
            0.00017301029583904892,
            6.251960439840332e-05,
            0.00021390181791502982,
            9.92705172393471e-05,
            0.00018028203339781612,
            7.250205817399547e-05
        ],
        "align_select": "select singer.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of the singers whose birth years are either 1942 or 1949?",
        "gold_select": "select singer.Name",
        "select_candidates": [
            "select singer.Name",
            "select singer.Name, singer.Birth_Year",
            "select singer.Singer_ID, singer.Name",
            "select singer.Name, singer.Net_Worth_Millions"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.9904127717018127,
            0.0006001993315294385,
            0.00020080877584405243,
            6.840264541096985e-05,
            0.00025093878502957523,
            0.0001097820932045579,
            0.00020690602832473814,
            8.006745338207111e-05
        ],
        "align_select": "select singer.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of the singers whose birth years are either 1947 or 1949?",
        "gold_select": "select singer.Name",
        "select_candidates": [
            "select singer.Name",
            "select singer.Name, singer.Birth_Year",
            "select singer.Singer_ID, singer.Name",
            "select singer.Name, singer.Net_Worth_Millions"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.9913299083709717,
            0.000561774242669344,
            0.00020468815637286752,
            6.640196079388261e-05,
            0.0002524809679016471,
            0.00010296535037923604,
            0.0002054248470813036,
            7.648997416254133e-05
        ],
        "align_select": "select singer.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of the singers whose birth years are either 1955 or 1949?",
        "gold_select": "select singer.Name",
        "select_candidates": [
            "select singer.Name",
            "select singer.Name, singer.Birth_Year",
            "select singer.Singer_ID, singer.Name",
            "select singer.Name, singer.Net_Worth_Millions"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.6300629377365112,
            0.0005059012328274548,
            0.00017157905676867813,
            6.455895345425233e-05,
            0.00021442376601044089,
            0.00011081957927672192,
            0.0001763276959536597,
            7.483366061933339e-05
        ],
        "align_select": "select singer.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of properties that are either houses or apartments with more than 4 room?",
        "gold_select": "select Properties.property_name",
        "select_candidates": [
            "select Properties.property_name",
            "select Properties.property_name, Properties.property_address",
            "select Properties.property_name, Properties.room_count",
            "select Properties.property_name, Properties.property_address, Properties.room_count"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "Properties",
        "table_candidates": [
            "Properties",
            "Other_Available_Features Properties",
            "Ref_Property_Types Properties",
            "Properties Other_Property_Features"
        ],
        "align_scores": [
            0.9863489866256714,
            0.9435137510299683,
            0.00029691492090933025,
            0.00016354297986254096,
            0.00020546950690913945,
            0.00013049835979472846,
            0.0002300140622537583,
            0.00016430261894129217
        ],
        "align_select": "select Properties.property_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of properties that are either houses or apartments with more than 10 room?",
        "gold_select": "select Properties.property_name",
        "select_candidates": [
            "select Properties.property_name",
            "select Properties.property_name, Properties.property_address",
            "select Properties.property_name, Properties.room_count",
            "select Properties.property_name, Properties.property_address, Properties.room_count"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "Properties",
        "table_candidates": [
            "Properties",
            "Other_Available_Features Properties",
            "Ref_Property_Types Properties",
            "Properties Other_Property_Features"
        ],
        "align_scores": [
            0.9435476064682007,
            0.9186509847640991,
            0.0002948087058030069,
            0.00016949042037595063,
            0.00020008232968393713,
            0.00012790241453330964,
            0.00023012397286947817,
            0.00016084675735328346
        ],
        "align_select": "select Properties.property_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of properties that are either houses or apartments with more than 5 room?",
        "gold_select": "select Properties.property_name",
        "select_candidates": [
            "select Properties.property_name",
            "select Properties.property_name, Properties.property_address",
            "select Properties.property_name, Properties.room_count",
            "select Properties.property_name, Properties.property_address, Properties.room_count"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "Properties",
        "table_candidates": [
            "Properties",
            "Other_Available_Features Properties",
            "Ref_Property_Types Properties"
        ],
        "align_scores": [
            0.982499361038208,
            0.9378695487976074,
            0.0002954888332169503,
            0.00016892475832719356,
            0.0002017203369177878,
            0.00013193815539125353,
            0.00023080845130607486,
            0.00016629674064461142
        ],
        "align_select": "select Properties.property_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of properties that are either houses or apartments with more than 7 room?",
        "gold_select": "select Properties.property_name",
        "select_candidates": [
            "select Properties.property_name",
            "select Properties.property_name, Properties.property_address",
            "select Properties.property_name, Properties.property_address, Properties.room_count",
            "select Properties.property_name, Properties.room_count"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "Properties",
        "table_candidates": [
            "Properties",
            "Other_Available_Features Properties",
            "Ref_Property_Types Properties",
            "Properties Other_Property_Features"
        ],
        "align_scores": [
            0.9829334020614624,
            0.9363393187522888,
            0.00029616313986480236,
            0.00017017213394865394,
            0.0002245370706077665,
            0.00016369929653592408,
            0.00019388787040952593,
            0.00012825096200685948
        ],
        "align_select": "select Properties.property_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of properties that are either houses or apartments with more than 8 room?",
        "gold_select": "select Properties.property_name",
        "select_candidates": [
            "select Properties.property_name",
            "select Properties.property_name, Properties.property_address",
            "select Properties.property_name, Properties.property_address, Properties.room_count",
            "select Properties.property_name, Properties.room_count"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "Properties",
        "table_candidates": [
            "Properties",
            "Other_Available_Features Properties",
            "Ref_Property_Types Properties",
            "Properties Other_Property_Features"
        ],
        "align_scores": [
            0.9803627133369446,
            0.9318324327468872,
            0.00029501813696697354,
            0.00016374379629269242,
            0.00022503238869830966,
            0.00016093482554424554,
            0.00019434670684859157,
            0.00012507032079156488
        ],
        "align_select": "select Properties.property_name",
        "align_structure": "SELECT-FROM-WHERE"
    }
]