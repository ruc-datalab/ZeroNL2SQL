[
    {
        "question": "If all country-singers are above 20, then identify these distinct countries.",
        "gold_select": "select distinct singer.Country",
        "select_candidates": [
            "select distinct singer.Country",
            "select distinct singer.Country, singer.Age",
            "select distinct singer.Country, singer.Song_Name",
            "select distinct singer.Country, singer.Is_male"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.9740728139877319,
            0.0008439059020020068,
            0.0001835568982642144,
            8.008723671082407e-05,
            0.00015574603457935154,
            9.99556650640443e-05,
            0.00018339297093916684,
            9.932667308021337e-05
        ],
        "align_select": "select distinct singer.Country",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Out of all the countries where the singers are above 20 years old, find their list.",
        "gold_select": "select distinct singer.Country",
        "select_candidates": [
            "select singer.Country",
            "select distinct singer.Country",
            "select singer.Country, singer.Age",
            "select singer.Country, singer.Is_male"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.23858769237995148,
            0.13358105719089508,
            0.0007026004604995251,
            9.896532719722018e-05,
            0.0001750752271618694,
            0.00018863928562495857,
            0.00042524037417024374,
            0.0005145751056261361
        ],
        "align_select": "select singer.Country",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT"
    },
    {
        "question": "What are all distinct countries where singers are over 20 years old?",
        "gold_select": "select distinct singer.Country",
        "select_candidates": [
            "select distinct singer.Country",
            "select distinct singer.Country, singer.Age",
            "select count(distinct singer.Country)",
            "select distinct singer.Country, singer.Is_male"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.9913342595100403,
            0.0005813747411593795,
            0.00015734368935227394,
            9.423831215826795e-05,
            0.002574317157268524,
            0.00012638885527849197,
            0.00023927493020892143,
            9.717765351524577e-05
        ],
        "align_select": "select distinct singer.Country",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are all distinct countries where singer is over 20 years old?",
        "gold_select": "select distinct singer.Country",
        "select_candidates": [
            "select distinct singer.Country",
            "select distinct singer.Country, singer.Age",
            "select count(distinct singer.Country)",
            "select distinct singer.Country, singer.Is_male"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.9944137334823608,
            0.00034947972744703293,
            0.00016185909043997526,
            9.87807143246755e-05,
            0.0013169045560061932,
            0.00014194213144946843,
            0.00023597893596161157,
            0.00010522246884647757
        ],
        "align_select": "select distinct singer.Country",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find all distinct countries where singers are above 20 years old.",
        "gold_select": "select distinct singer.Country",
        "select_candidates": [
            "select distinct singer.Country",
            "select distinct singer.Country, singer.Age",
            "select count(distinct singer.Country)",
            "select distinct singer.Country, singer.Is_male"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.9931772947311401,
            0.00048358875210396945,
            0.0001843405480030924,
            9.443254384677857e-05,
            0.0013343386817723513,
            0.00013437106099445373,
            0.0002712101850192994,
            8.85757472133264e-05
        ],
        "align_select": "select distinct singer.Country",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List the counties with singers older than twenty.",
        "gold_select": "select distinct singer.Country",
        "select_candidates": [
            "select singer.Country",
            "select distinct singer.Country",
            "select count(distinct singer.Country)",
            "select distinct singer.Country, singer.Age"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.9529294967651367,
            0.9798378348350525,
            0.05581354349851608,
            0.0001726380578475073,
            0.004429048392921686,
            0.00011682707554427907,
            0.00013732477964367718,
            0.00010131295130122453
        ],
        "align_select": "select singer.Country",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are locations and names for stadiums that hold 5000 to 10,000 people?",
        "gold_select": "select stadium.Location, stadium.Name",
        "select_candidates": [
            "select stadium.Location, stadium.Name",
            "select stadium.Stadium_ID, stadium.Location, stadium.Name",
            "select stadium.Location., stadium.Name",
            "select stadium.Location, stadium.Name, stadium.Capacity"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "stadium",
        "table_candidates": [
            "stadium"
        ],
        "align_scores": [
            0.9938406944274902,
            0.00031827797647565603,
            0.00018370959151070565,
            7.532617746619508e-05,
            0.02722734957933426,
            0.000129708118038252,
            0.0001623525022296235,
            7.692741201026365e-05
        ],
        "align_select": "select stadium.Location, stadium.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the number of concerts in 2014 or 2015.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), concert.concert_ID",
            "select count(*), concert.Year",
            "select count(*), concert.Stadium_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "concert",
        "table_candidates": [
            "concert",
            "stadium concert",
            "stadium singer concert",
            "singer concert"
        ],
        "align_scores": [
            0.9946073889732361,
            0.00021973034017719328,
            0.0001710640062810853,
            0.0001172214251710102,
            0.00024260496138595045,
            0.0010400846367701888,
            0.0001631930936127901,
            0.00021909020142629743
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Of the concerts, how many will be held in 2014 or 2015?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), concert.concert_ID",
            "select count(*), concert.concert_Name",
            "select count(*), concert.Year"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "concert",
        "table_candidates": [
            "concert"
        ],
        "align_scores": [
            0.9848092198371887,
            0.0002570865908637643,
            0.00019215860811527818,
            7.615925278514624e-05,
            0.0002931967028416693,
            9.997015149565414e-05,
            0.00031861584284342825,
            6.303624104475603e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many concerts will be in 2014 or 2015?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), concert.Year",
            "select count(*), concert.concert_ID",
            "select count(*), concert.Stadium_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "concert",
        "table_candidates": [
            "concert"
        ],
        "align_scores": [
            0.9910148978233337,
            0.0012055282713845372,
            0.000272512377705425,
            0.0001936940534505993,
            0.00020605591998901218,
            0.00010464491788297892,
            0.0001683962909737602,
            0.00015979958698153496
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many concerts have been held in 2014 and 2015?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select concert.Year, count(*)",
            "select concert.concert_ID, count(*)",
            "select concert.concert_Name, count(*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "concert",
        "table_candidates": [
            "concert"
        ],
        "align_scores": [
            0.8918667435646057,
            0.06875178962945938,
            0.06561653316020966,
            0.000604421307798475,
            0.000394295493606478,
            0.00029758570599369705,
            0.002651001326739788,
            0.0015187973622232676
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE-GROUP BY"
    },
    {
        "question": "For stadiums that held most concerts in 2014 or after, show their names and capacities.",
        "gold_select": "select stadium.Name, stadium.Capacity",
        "select_candidates": [
            "select stadium.Name, stadium.Capacity",
            "select stadium.Stadium_ID, stadium.Name, stadium.Capacity",
            "select stadium.Name, stadium.Capacity, avg(concert.Year)",
            "select stadium.Location, stadium.Capacity"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "stadium concert",
        "table_candidates": [
            "stadium concert"
        ],
        "align_scores": [
            0.9827899932861328,
            0.00010814573761308566,
            0.0012719944352284074,
            0.00013052861322648823,
            0.00019402398902457207,
            6.283554102992639e-05,
            0.0007008290267549455,
            7.987536082509905e-05
        ],
        "align_select": "select stadium.Name, stadium.Capacity",
        "align_structure": "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the name and capacity of the stadium which held the most concerts in 2014 or later?",
        "gold_select": "select stadium.Name, stadium.Capacity",
        "select_candidates": [
            "select stadium.Name, stadium.Capacity",
            "select stadium.Location, stadium.Capacity",
            "select stadium.Name., stadium.Capacity",
            "select stadium.Capacity, stadium.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "stadium concert",
        "table_candidates": [
            "stadium concert"
        ],
        "align_scores": [
            0.9861705303192139,
            0.0003385799063835293,
            0.0011268649250268936,
            0.00011122081195935607,
            0.007470833603292704,
            0.00035059195943176746,
            0.98826664686203,
            0.0004089951398782432
        ],
        "align_select": "select stadium.Name, stadium.Capacity",
        "align_structure": "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the name and capacity of the stadium that has hosted the most concerts in 2014 or after?",
        "gold_select": "select stadium.Name, stadium.Capacity",
        "select_candidates": [
            "select stadium.Name, stadium.Capacity",
            "select stadium.Location, stadium.Capacity",
            "select stadium.Name., stadium.Capacity",
            "select stadium.Capacity, stadium.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "stadium concert",
        "table_candidates": [
            "stadium concert"
        ],
        "align_scores": [
            0.9816017746925354,
            0.0005636729765683413,
            0.0011343741789460182,
            0.000122990008094348,
            0.007503957953304052,
            0.0003898020659107715,
            0.9848729372024536,
            0.0007061599171720445
        ],
        "align_select": "select stadium.Name, stadium.Capacity",
        "align_structure": "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the name and capacity of the stadium with most 'concerts' events in 2014 or later?",
        "gold_select": "select stadium.Name, stadium.Capacity",
        "select_candidates": [
            "select stadium.Name, stadium.Capacity",
            "select stadium.Stadium_ID, stadium.Name, stadium.Capacity",
            "select stadium.Location, stadium.Capacity",
            "select stadium.Name, stadium.Capacity, avg(concert.Year)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "stadium concert",
        "table_candidates": [
            "stadium concert"
        ],
        "align_scores": [
            0.9906264543533325,
            0.2706945538520813,
            0.0013009816175326705,
            0.0008048936142586172,
            0.0013468381948769093,
            0.00045926851453259587,
            0.00023149960907176137,
            0.00014780816854909062
        ],
        "align_select": "select stadium.Name, stadium.Capacity",
        "align_structure": "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What are the countries where a singer above 40 and a singer below 30 are from?",
        "gold_select": "select singer.Country",
        "select_candidates": [
            "select singer.Country",
            "select singer.Country, singer.Age",
            "select singer.Country for singer.Age, singer.Is_male",
            "select singer.Country, singer.Song_Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.9945874214172363,
            0.5176218748092651,
            0.00026469447766430676,
            0.000135029578814283,
            0.00019233825150877237,
            0.00014607941557187587,
            0.00013795922859571874,
            9.16760036488995e-05
        ],
        "align_select": "select singer.Country",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "In which countries does someone above 40 and someone below 30 years old are both singers?",
        "gold_select": "select singer.Country",
        "select_candidates": [
            "select singer.Country",
            "select singer.Country, singer.Age",
            "select singer.Country, singer.Song_Name",
            "select singer.Country, singer.Song_release_year"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.9896335601806641,
            0.9896335601806641,
            0.00028419398586265743,
            0.00028419398586265743,
            0.00015753236948512495,
            0.00015753236948512495,
            0.00013838530867360532,
            0.00013838530867360532
        ],
        "align_select": "select singer.Country",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "Name all the stadiums except those that had a concert in 2014.",
        "gold_select": "select stadium.Name",
        "select_candidates": [
            "select stadium.Name",
            "select stadium.Stadium_ID, stadium.Name",
            "select stadium.Location, stadium.Name",
            "select stadium.Name, concert.Stadium_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "stadium concert",
        "table_candidates": [
            "stadium concert"
        ],
        "align_scores": [
            0.9622442722320557,
            0.981819748878479,
            0.0005225549102760851,
            0.00042066723108291626,
            0.0004441233177203685,
            0.0003294349298812449,
            0.0006567426607944071,
            0.0005717421881854534
        ],
        "align_select": "select stadium.Name",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names for stadiums excluding those hosting concerts in 2014?",
        "gold_select": "select stadium.Name",
        "select_candidates": [
            "select stadium.Name",
            "select stadium.Stadium_ID, stadium.Name",
            "select stadium.Location, stadium.Name",
            "select stadium.Name, concert.Stadium_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "stadium concert",
        "table_candidates": [
            "stadium concert"
        ],
        "align_scores": [
            0.9754858613014221,
            0.9808151721954346,
            0.0005183375906199217,
            0.00048643737682141364,
            0.0002767865953501314,
            0.00026739813620224595,
            0.000268384552327916,
            0.0002998177951667458
        ],
        "align_select": "select stadium.Name",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of all the stadiums in the world that had no concert in 2014?",
        "gold_select": "select stadium.Name",
        "select_candidates": [
            "select stadium.Name",
            "select stadium.Stadium_ID, stadium.Name",
            "select stadium.Location, stadium.Name",
            "select stadium.Name, concert.Stadium_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "stadium concert",
        "table_candidates": [
            "stadium concert"
        ],
        "align_scores": [
            0.9517942070960999,
            0.022105269134044647,
            0.0011899677338078618,
            0.000581137603148818,
            0.0009240790968760848,
            0.0007158605149015784,
            0.0007067039259709418,
            0.0005479708197526634
        ],
        "align_select": "select stadium.Name",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "Of the singers who have performed in concerts in 2014, list them.",
        "gold_select": "select singer.Name",
        "select_candidates": [
            "select singer_in_concert.Singer_ID",
            "select singer_in_concert.Singer_ID, concert.Theme",
            "select singer.Name",
            "select singer_in_concert.Singer_ID, concert.Stadium_ID"
        ],
        "select_labels": [
            0.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer concert singer_in_concert",
        "table_candidates": [
            "concert singer_in_concert",
            "singer concert singer_in_concert",
            "stadium concert singer_in_concert"
        ],
        "align_scores": [
            0.01904667168855667,
            0.12220121175050735,
            0.0003402681031730026,
            0.00027142028557136655,
            0.7556402087211609,
            0.7153636813163757,
            0.00021674606250599027,
            0.0002448880404699594
        ],
        "align_select": "select singer.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Please list all singers performing in the concert in 2014.",
        "gold_select": "select singer.Name",
        "select_candidates": [
            "select singer_in_concert.Singer_ID",
            "select singer_in_concert.Singer_ID, concert.Theme",
            "select singer_in_concert.Singer_ID, singer.Name",
            "select singer_in_concert.Singer_ID, concert.Stadium_ID"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer concert singer_in_concert",
        "table_candidates": [
            "concert singer_in_concert",
            "singer concert singer_in_concert",
            "stadium concert singer_in_concert"
        ],
        "align_scores": [
            0.014189138077199459,
            0.0003140907210763544,
            0.0002678056189324707,
            9.012418740894645e-05,
            0.00024690848658792675,
            8.65253823576495e-05,
            0.0001808634988265112,
            8.260106551460922e-05
        ],
        "align_select": "select singer_in_concert.Singer_ID",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List all singers at concerts in 2014.",
        "gold_select": "select singer.Name",
        "select_candidates": [
            "select singer_in_concert.Singer_ID",
            "select singer_in_concert.Singer_ID, concert.concert_Name",
            "select singer_in_concert.Singer_ID, concert.Theme",
            "select singer_in_concert.Singer_ID, concert.Stadium_ID"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer concert singer_in_concert",
        "table_candidates": [
            "concert singer_in_concert",
            "singer concert singer_in_concert",
            "stadium concert singer_in_concert"
        ],
        "align_scores": [
            0.007669865619391203,
            0.0005113736260682344,
            0.00014127699250821024,
            8.557190449209884e-05,
            0.0002662952756509185,
            8.951453492045403e-05,
            0.00015502152382396162,
            8.60849249875173e-05
        ],
        "align_select": "select singer_in_concert.Singer_ID",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Who was singing in concerts in 2014?",
        "gold_select": "select singer.Name",
        "select_candidates": [
            "select singer.Name",
            "select singer.Name, concert.concert_ID",
            "select singer.Name, concert.concert_Name",
            "select singer.Name, concert.Theme"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer concert singer_in_concert",
        "table_candidates": [
            "singer concert singer_in_concert",
            "concert singer_in_concert",
            "stadium singer concert singer_in_concert",
            "stadium concert singer_in_concert"
        ],
        "align_scores": [
            0.9594220519065857,
            0.00014415218902286142,
            0.0001497181656304747,
            7.03455152688548e-05,
            0.00018011625797953457,
            6.437992851715535e-05,
            0.00020781926286872476,
            6.874890823382884e-05
        ],
        "align_select": "select singer.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Please list all singer names of concerts in 2014.",
        "gold_select": "select singer.Name",
        "select_candidates": [
            "select singer.Name",
            "select singer.Name, concert.concert_Name",
            "select singer.Name, concert.concert_ID",
            "select singer.Name, concert.Year"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer concert singer_in_concert",
        "table_candidates": [
            "singer concert singer_in_concert"
        ],
        "align_scores": [
            0.9883010983467102,
            0.00012098027218598872,
            0.00026259760488756,
            6.725508865201846e-05,
            0.00014770010602660477,
            6.381472485372797e-05,
            0.0001950612640939653,
            6.140623008832335e-05
        ],
        "align_select": "select singer.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What singer was performing in 2014 concerts?",
        "gold_select": "select singer.Name",
        "select_candidates": [
            "select singer.Name",
            "select singer_in_concert.Singer_ID",
            "select singer.Name, concert.concert_Name",
            "select singer.Name, concert.concert_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer concert singer_in_concert",
        "table_candidates": [
            "singer concert singer_in_concert",
            "concert singer_in_concert",
            "stadium singer concert singer_in_concert",
            "stadium concert singer_in_concert"
        ],
        "align_scores": [
            0.887474536895752,
            0.00010705598106142133,
            0.04512317106127739,
            0.00016590284940320998,
            0.0001693198282737285,
            5.878171214135364e-05,
            0.00013543656677938998,
            6.460439908551052e-05
        ],
        "align_select": "select singer.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List all singers who have performed in concert during 2014.",
        "gold_select": "select singer.Name",
        "select_candidates": [
            "select singer_in_concert.Singer_ID",
            "select singer_in_concert.Singer_ID, concert.Theme",
            "select distinct singer_in_concert.Singer_ID",
            "select singer_in_concert.Singer_ID, concert.Stadium_ID"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer concert singer_in_concert",
        "table_candidates": [
            "concert singer_in_concert",
            "singer concert singer_in_concert",
            "stadium concert singer_in_concert"
        ],
        "align_scores": [
            0.006548123899847269,
            0.00018264941172674298,
            0.00032923807157203555,
            8.804151002550498e-05,
            0.1336347460746765,
            0.0001342608011327684,
            0.00024337644572369754,
            7.884841761551797e-05
        ],
        "align_select": "select singer_in_concert.Singer_ID",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "All the singers who performed in concert in 2014, write their names here.",
        "gold_select": "select singer.Name",
        "select_candidates": [
            "select singer.Name",
            "select singer.Name, concert.Stadium_ID",
            "select singer.Name, concert.Theme",
            "select singer.Name, concert.concert_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer concert singer_in_concert",
        "table_candidates": [
            "singer concert singer_in_concert"
        ],
        "align_scores": [
            0.8498616814613342,
            0.00017454651242587715,
            0.00024990260135382414,
            7.665492739761248e-05,
            0.0003152923018205911,
            7.700866262894124e-05,
            0.00024678281624801457,
            7.326231570914388e-05
        ],
        "align_select": "select singer.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the name and location of the stadiums which held concerts in 2014 and 2015?",
        "gold_select": "select stadium.Name, stadium.Location",
        "select_candidates": [
            "select stadium.Name, stadium.Location",
            "select stadium.Location, stadium.Name",
            "select stadium.Stadium_ID, stadium.Name, stadium.Location",
            "select stadium.Name, stadium.Location, concert.Stadium_ID"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "stadium concert",
        "table_candidates": [
            "stadium concert"
        ],
        "align_scores": [
            0.7543122172355652,
            0.0014052933547645807,
            0.6569985151290894,
            0.0013649375177919865,
            0.00032974695204757154,
            0.0001551117456983775,
            0.00018841422570403665,
            0.000121563789434731
        ],
        "align_select": "select stadium.Name, stadium.Location",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "What is the name and location of the stadiums where any concerts happened in both 2014 and 2015?",
        "gold_select": "select stadium.Name, stadium.Location",
        "select_candidates": [
            "select stadium.Name, stadium.Location",
            "select stadium.Location, stadium.Name",
            "select stadium.Stadium_ID, stadium.Name, stadium.Location",
            "select stadium.Name, stadium.Location, concert.Stadium_ID"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "stadium concert",
        "table_candidates": [
            "stadium concert"
        ],
        "align_scores": [
            0.9712674617767334,
            0.06101679801940918,
            0.9817459583282471,
            0.05614937096834183,
            0.0004427109088283032,
            0.00020550537738017738,
            0.00022540194913744926,
            0.00013085997488815337
        ],
        "align_select": "select stadium.Name, stadium.Location",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "Find the stadium name and location where some concerts took place in both 2014 and 2015.",
        "gold_select": "select stadium.Name, stadium.Location",
        "select_candidates": [
            "select stadium.Name, stadium.Location",
            "select stadium.Location, stadium.Name",
            "select stadium.Name, stadium.Location, concert.Stadium_ID",
            "select stadium.Name.c2, stadium.Location"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "stadium concert",
        "table_candidates": [
            "stadium concert"
        ],
        "align_scores": [
            0.9759680032730103,
            0.9759680032730103,
            0.9806911945343018,
            0.9806911945343018,
            0.0001866750098997727,
            0.0001866750098997727,
            0.005002446006983519,
            0.005002446006983519
        ],
        "align_select": "select stadium.Name, stadium.Location",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "Find the name and location of the stadiums where some concerts happened in 2014 and 2015.",
        "gold_select": "select stadium.Name, stadium.Location",
        "select_candidates": [
            "select stadium.Name, stadium.Location",
            "select stadium.Location, stadium.Name",
            "select stadium.Stadium_ID, stadium.Name, stadium.Location",
            "select stadium.Name, stadium.Location, concert.Stadium_ID"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "stadium concert",
        "table_candidates": [
            "stadium concert"
        ],
        "align_scores": [
            0.8884055614471436,
            0.016243869438767433,
            0.9030234813690186,
            0.007590225897729397,
            0.0003843765298370272,
            0.00023602013243362308,
            0.00035583580029197037,
            0.00018193849246017635
        ],
        "align_select": "select stadium.Name, stadium.Location",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the names and locations of the stadiums in which some concerts have happened in 2014 and 2015.",
        "gold_select": "select stadium.Name, stadium.Location",
        "select_candidates": [
            "select stadium.Name, stadium.Location",
            "select stadium.Location, stadium.Name",
            "select stadium.Stadium_ID, stadium.Name, stadium.Location",
            "select stadium.Name, stadium.Location, concert.Stadium_ID"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "stadium concert",
        "table_candidates": [
            "stadium concert"
        ],
        "align_scores": [
            0.8262521028518677,
            0.027636904269456863,
            0.8549307584762573,
            0.010105300694704056,
            0.0004885311936959624,
            0.0002903838758356869,
            0.00045131900697015226,
            0.00022269325563684106
        ],
        "align_select": "select stadium.Name, stadium.Location",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the names and locations of the stadiums that hosted concerts in both 2014 and 2015.",
        "gold_select": "select stadium.Name, stadium.Location",
        "select_candidates": [
            "select stadium.Name, stadium.Location",
            "select stadium.Location, stadium.Name",
            "select stadium.Stadium_ID, stadium.Name, stadium.Location",
            "select stadium.Name, stadium.Location, stadium.Capacity"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "stadium concert",
        "table_candidates": [
            "stadium concert"
        ],
        "align_scores": [
            0.9812713265419006,
            0.09549413621425629,
            0.9870336055755615,
            0.031126661226153374,
            0.00040150611312128603,
            0.00019298835832159966,
            0.00025466506485827267,
            0.00021358656522352248
        ],
        "align_select": "select stadium.Name, stadium.Location",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "What is the name and location of the stadiums that have had concerts both in 2014 and 2015?",
        "gold_select": "select stadium.Name, stadium.Location",
        "select_candidates": [
            "select stadium.Name, stadium.Location",
            "select stadium.Location, stadium.Name",
            "select stadium.Stadium_ID, stadium.Name, stadium.Location",
            "select stadium.Name, stadium.Location, concert.Stadium_ID"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "stadium concert",
        "table_candidates": [
            "stadium concert"
        ],
        "align_scores": [
            0.968299150466919,
            0.968299150466919,
            0.9812391996383667,
            0.9812391996383667,
            0.000445801968453452,
            0.000445801968453452,
            0.00025029986863955855,
            0.00025029986863955855
        ],
        "align_select": "select stadium.Name, stadium.Location",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "Find how many pets heavier than 10kgs.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Pets.PetID",
            "select count(*) the SELECT-FROM-WHERE",
            "select count(*), Pets.PetID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Pets",
        "table_candidates": [
            "Pets"
        ],
        "align_scores": [
            0.990766167640686,
            0.0003180626081302762,
            0.0003456055710557848,
            0.007158903870731592,
            0.0005951891653239727,
            0.00010322183516109362,
            0.0003456055710557848,
            0.007158903870731592
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the numbers of pets that weigh more than 10.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Pets.PetID",
            "select count(*), Pets.PetID",
            "select count(*), Pets.PetType"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Pets",
        "table_candidates": [
            "Pets"
        ],
        "align_scores": [
            0.9839954972267151,
            0.00047395910951308906,
            0.00021273252787068486,
            0.0007734612445347011,
            0.00021273252787068486,
            0.0007734612445347011,
            0.00019422055629547685,
            0.0062255566008389
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "If a pet weighs more than 10, find its number.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select Pets.PetID",
            "select count(*)",
            "select Pets.PetID, Pets.weight",
            "select Pets.PetID, Pets.PetType"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Pets",
        "table_candidates": [
            "Pets"
        ],
        "align_scores": [
            0.6464913487434387,
            0.0002123924350598827,
            0.8659642934799194,
            7.8940051025711e-05,
            0.00024354891502298415,
            6.199117342475802e-05,
            0.00016965047689154744,
            6.353981734719127e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "find the number of pets that weighs more than 10.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Pets.PetID",
            "select count(*), Pets.PetID",
            "select count(*), Pets.PetType"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Pets",
        "table_candidates": [
            "Pets"
        ],
        "align_scores": [
            0.9907613396644592,
            0.00025305693270638585,
            0.0002560159773565829,
            0.001093603321351111,
            0.0002560159773565829,
            0.001093603321351111,
            0.00022140327200759202,
            0.010331062600016594
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many pets weigh more than ten kilograms (kg)?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Pets.PetID",
            "select count(*), Pets.PetID",
            "select count(*), Pets.weight"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Pets",
        "table_candidates": [
            "Pets"
        ],
        "align_scores": [
            0.9923925399780273,
            0.00028033845592290163,
            0.0003113914863206446,
            0.0065468489192426205,
            0.0003113914863206446,
            0.0065468489192426205,
            0.0002718030009418726,
            0.014075706712901592
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many pets weigh more than 10?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Pets.PetID",
            "select count(*), Pets.PetID",
            "select count(*), Pets.PetType"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Pets",
        "table_candidates": [
            "Pets"
        ],
        "align_scores": [
            0.9937345385551453,
            0.0007522592204622924,
            0.00032509624725207686,
            0.012522849254310131,
            0.00032509624725207686,
            0.012522849254310131,
            0.00022847486252430826,
            0.16462647914886475
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Of pets, how much more heavier than 10 is?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select sum(Pets.weight)",
            "select Pets.weight",
            "select Pets.weight, count(*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Pets",
        "table_candidates": [
            "Pets",
            "Has_Pet Pets",
            "Student Pets"
        ],
        "align_scores": [
            0.15905185043811798,
            6.703290273435414e-05,
            0.10881397873163223,
            6.471020606113598e-05,
            0.9912986159324646,
            8.673703268868849e-05,
            0.0005518326070159674,
            7.142786489566788e-05
        ],
        "align_select": "select Pets.weight",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many animals weigh more than ten pounds?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Pets.PetID",
            "select count(*) the SELECT-FROM-WHERE",
            "select count(*), Pets.PetID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Pets",
        "table_candidates": [
            "Pets"
        ],
        "align_scores": [
            0.9914018511772156,
            0.00045708342804573476,
            0.000340101687470451,
            0.02175866812467575,
            0.0005518821417354047,
            0.00010505755199119449,
            0.000340101687470451,
            0.02175866812467575
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Of the pets, how many weigh more than 10?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Pets.PetID",
            "select count(*), Pets.PetID",
            "select count(*) of the Pets.PetID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Pets",
        "table_candidates": [
            "Pets"
        ],
        "align_scores": [
            0.9916332960128784,
            0.0012264128308743238,
            0.00030977476853877306,
            0.007598022930324078,
            0.00030977476853877306,
            0.007598022930324078,
            0.0005825012922286987,
            0.00021112026297487319
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "The number of pets that are owned by students older than 20.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Student.StuID",
            "select count(*), Student.LName, Student.Age",
            "select count(*), Student.LName"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Student Has_Pet",
        "table_candidates": [
            "Student Has_Pet Pets",
            "Student Has_Pet"
        ],
        "align_scores": [
            0.9847138524055481,
            0.00025934315635822713,
            0.00022070627892389894,
            0.0005950448103249073,
            0.00011147776967845857,
            0.00014239124720916152,
            0.00024531898088753223,
            0.011992686428129673
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the number of female dogs raised by students.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Student.Sex",
            "select count(*), Student.StuID",
            "select count(*), Student.LName"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Student Has_Pet Pets",
        "table_candidates": [
            "Student Has_Pet Pets",
            "Student Has_Pet"
        ],
        "align_scores": [
            0.9847597479820251,
            0.02105485275387764,
            0.00032376719173043966,
            0.1434086263179779,
            0.00039537445991300046,
            0.00022378089488483965,
            0.00035771142574958503,
            0.001299052033573389
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the number of dogs owned by female students (sex F).",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Student.Sex",
            "select count(*), Student.StuID",
            "select count(distinct Pets.PetType)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Student Has_Pet Pets",
        "table_candidates": [
            "Student Has_Pet Pets",
            "Student Has_Pet"
        ],
        "align_scores": [
            0.9941107630729675,
            0.0030586731154471636,
            0.00025060883490368724,
            0.00012060109293088317,
            0.0003163714427500963,
            0.0001323440228588879,
            0.028029421344399452,
            0.00015341807738877833
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the number of dogs raised by female students who have the sex-attribute F.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Student.Sex",
            "select count(*), Student.StuID",
            "select count(distinct Pets.PetType)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Student Has_Pet Pets",
        "table_candidates": [
            "Student Has_Pet Pets",
            "Student Has_Pet"
        ],
        "align_scores": [
            0.9747837781906128,
            0.012496128678321838,
            0.0003196348261553794,
            0.446235716342926,
            0.0005077277892269194,
            0.0005955665837973356,
            0.03724198043346405,
            0.0010262487921863794
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the number of female dogs raised by students(with sex F).",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Student.Sex",
            "select count(*), Student.StuID",
            "select count(*), Student.LName"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Student Has_Pet Pets",
        "table_candidates": [
            "Student Has_Pet Pets",
            "Student Has_Pet"
        ],
        "align_scores": [
            0.9921078085899353,
            0.0013551694573834538,
            0.000279415980912745,
            0.019891511648893356,
            0.00041449430864304304,
            0.0003126795927528292,
            0.00047011722926981747,
            0.0008682837942615151
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "For female students, how many dogs are raised?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Student.Sex",
            "select count(distinct Pets.PetType)",
            "select count(*), Student.Fname"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Student Has_Pet Pets",
        "table_candidates": [
            "Student Has_Pet Pets",
            "Student Has_Pet"
        ],
        "align_scores": [
            0.9902145862579346,
            0.3151013255119324,
            0.00041129192686639726,
            0.5350944995880127,
            0.005983300972729921,
            0.0026471258606761694,
            0.00030131477979011834,
            0.1866227239370346
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many dogs are owned by female students of sex F?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Student.StuID",
            "select count(distinct Pets.PetType)",
            "select count(*), Student.Sex"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Student Has_Pet Pets",
        "table_candidates": [
            "Student Has_Pet Pets",
            "Student Has_Pet"
        ],
        "align_scores": [
            0.9899011850357056,
            0.03504287078976631,
            0.00037119994522072375,
            0.00015534782141912729,
            0.0235972348600626,
            0.0002476053487043828,
            0.0003210708382539451,
            0.00013551226584240794
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "For cars produced in 1970, find the maker's name?",
        "gold_select": "select distinct car_makers.Maker",
        "select_candidates": [
            "select car_makers.FullName",
            "select car_makers.Maker",
            "select car_makers.Maker, car_makers.FullName",
            "select car_makers.FullName, car_makers.Maker"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_makers model_list car_names cars_data",
        "table_candidates": [
            "car_makers car_names cars_data",
            "car_makers car_names",
            "continents car_makers car_names cars_data",
            "countries car_makers car_names cars_data"
        ],
        "align_scores": [
            0.981524646282196,
            0.00013649083848576993,
            0.9914134740829468,
            0.00011672429536702111,
            0.00020654847321566194,
            6.81974197505042e-05,
            0.00030663397046737373,
            6.503281474579126e-05
        ],
        "align_select": "select car_makers.FullName",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the brands that produced cars in 1970?",
        "gold_select": "select distinct car_makers.Maker",
        "select_candidates": [
            "select car_names.Make",
            "select distinct car_names.Make",
            "select car_names.Model, car_names.Make",
            "select car_names.Make, t4.c3"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_makers model_list car_names cars_data",
        "table_candidates": [
            "car_names cars_data",
            "car_makers car_names cars_data",
            "model_list car_names cars_data",
            "countries car_names cars_data",
            "continents car_names cars_data",
            "car_makers car_names"
        ],
        "align_scores": [
            0.9866220355033875,
            0.005175704602152109,
            0.6912497282028198,
            0.0003030785883311182,
            0.00020603528537321836,
            7.6847049058415e-05,
            0.00048639357555657625,
            9.879050776362419e-05
        ],
        "align_select": "select car_names.Make",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the maker of cars in 1970?",
        "gold_select": "select distinct car_makers.Maker",
        "select_candidates": [
            "select car_makers.Maker",
            "select car_makers.Maker, car_makers.FullName",
            "select car_makers.Maker, car_makers.FullName, car_makers.Country",
            "select car_makers.Maker, car_makers.FullName, car_makers.Maker"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_makers model_list car_names cars_data",
        "table_candidates": [
            "car_makers car_names cars_data",
            "continents car_makers car_names cars_data",
            "car_makers car_names",
            "countries car_makers car_names cars_data",
            "model_list car_names cars_data",
            "countries car_names cars_data",
            "car_names cars_data"
        ],
        "align_scores": [
            0.9845118522644043,
            7.570806337753311e-05,
            0.0002560669672675431,
            6.603477231692523e-05,
            0.00023130897898226976,
            6.194318120833486e-05,
            0.00014988753537181765,
            6.337558443192393e-05
        ],
        "align_select": "select car_makers.Maker",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find out the maker's made cars during the 1970?",
        "gold_select": "select distinct car_makers.Maker",
        "select_candidates": [
            "select car_makers.Maker",
            "select car_makers.Maker, car_makers.FullName",
            "select distinct car_makers.Maker, car_makers.FullName",
            "select car_makers.Maker, car_makers.FullName, car_makers.Country"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_makers model_list car_names cars_data",
        "table_candidates": [
            "car_makers car_names cars_data",
            "car_names cars_data",
            "car_makers car_names",
            "model_list car_names cars_data",
            "continents car_makers car_names cars_data",
            "countries car_makers car_names cars_data",
            "model_list car_makers car_names cars_data",
            "countries car_names cars_data"
        ],
        "align_scores": [
            0.7555112838745117,
            8.882205293048173e-05,
            0.00023856284678913653,
            6.966738146729767e-05,
            0.0001958739012479782,
            6.052665412425995e-05,
            0.00017881114035844803,
            6.725853745592758e-05
        ],
        "align_select": "select car_makers.Maker",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the names of the car manufacturers, which produced cars in 1970.",
        "gold_select": "select distinct car_makers.Maker",
        "select_candidates": [
            "select car_makers.Maker, car_makers.FullName",
            "select car_makers.FullName, car_makers.Maker",
            "select distinct car_makers.FullName, car_makers.Maker",
            "select distinct car_makers.Maker, car_makers.FullName"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_makers model_list car_names cars_data",
        "table_candidates": [
            "car_makers car_names",
            "car_makers car_names cars_data",
            "car_makers cars_data",
            "car_makers model_list car_names"
        ],
        "align_scores": [
            0.00042651433614082634,
            7.122360693756491e-05,
            0.0005401629023253918,
            6.859077257104218e-05,
            0.0003876623813994229,
            6.25654065515846e-05,
            0.0003341523988638073,
            6.5993721364066e-05
        ],
        "align_select": "select car_makers.Maker, car_makers.FullName",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the names of car manufacturers who made specific cars in 1970.",
        "gold_select": "select distinct car_makers.Maker",
        "select_candidates": [
            "select car_makers.FullName, car_makers.Maker",
            "select car_makers.Maker, car_makers.FullName",
            "select distinct car_makers.FullName, car_makers.Maker",
            "select specific car_makers.FullName, car_makers.Maker"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_makers model_list car_names cars_data",
        "table_candidates": [
            "car_makers car_names cars_data",
            "car_makers car_names",
            "car_makers model_list car_names cars_data",
            "continents car_makers car_names cars_data",
            "countries car_makers car_names cars_data"
        ],
        "align_scores": [
            0.00037506333319470286,
            6.185800884850323e-05,
            0.00035451067378744483,
            6.259477231651545e-05,
            0.00023929365852382034,
            5.7635927078081295e-05,
            0.0002842910180334002,
            7.038214971544221e-05
        ],
        "align_select": "select car_makers.FullName, car_makers.Maker",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Who made some cars in 1970?",
        "gold_select": "select distinct car_makers.Maker",
        "select_candidates": [
            "select car_makers.Maker",
            "select car_makers.Maker, car_makers.FullName",
            "select car_makers.FullName, car_makers.Maker",
            "select car_makers.Maker, car_makers.FullName, car_makers.Country"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_makers model_list car_names cars_data",
        "table_candidates": [
            "car_makers car_names cars_data",
            "countries car_makers car_names cars_data",
            "continents car_makers car_names cars_data",
            "model_list car_makers car_names cars_data",
            "car_names cars_data",
            "car_makers car_names",
            "countries car_names cars_data"
        ],
        "align_scores": [
            0.9851061105728149,
            0.00011055570212192833,
            0.00029490847373381257,
            7.053479930618778e-05,
            0.000284912355709821,
            6.573388236574829e-05,
            0.00022388360230252147,
            6.62286183796823e-05
        ],
        "align_select": "select car_makers.Maker",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which car producers did make vehicles in 1970?",
        "gold_select": "select distinct car_makers.Maker",
        "select_candidates": [
            "select car_makers.Maker",
            "select car_makers.Maker, car_makers.FullName",
            "select distinct car_makers.Maker, car_makers.FullName",
            "select distinct car_makers.Maker"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_makers model_list car_names cars_data",
        "table_candidates": [
            "car_makers car_names cars_data",
            "countries car_makers car_names cars_data",
            "car_makers model_list car_names cars_data",
            "continents car_makers car_names cars_data",
            "car_makers cars_data"
        ],
        "align_scores": [
            0.9821529984474182,
            0.002490055514499545,
            0.00035075831692665815,
            8.971808711066842e-05,
            0.0006106399814598262,
            0.0001249525521416217,
            0.6499806046485901,
            0.005812117829918861
        ],
        "align_select": "select car_makers.Maker",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What's the rate acceleration of 'amc hornet sports about sw'?",
        "gold_select": "select cars_data.Accelerate",
        "select_candidates": [
            "select avg(cars_data.Accelerate)",
            "select cars_data.Accelerate",
            "select max(cars_data.Accelerate)",
            "select acceleration(cars_data.Accelerate)"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_names cars_data",
        "table_candidates": [
            "car_names cars_data",
            "car_makers car_names cars_data",
            "model_list car_names cars_data",
            "countries car_names cars_data",
            "continents car_names cars_data",
            "car_makers cars_data"
        ],
        "align_scores": [
            0.40710145235061646,
            5.775746831204742e-05,
            0.9914205074310303,
            7.48176098568365e-05,
            0.001109027536585927,
            6.34502139291726e-05,
            0.000796013162471354,
            6.942969048395753e-05
        ],
        "align_select": "select cars_data.Accelerate",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Calculate the acceleration of car model amc hornet sportabout (sw).",
        "gold_select": "select cars_data.Accelerate",
        "select_candidates": [
            "select avg(cars_data.Accelerate)",
            "select cars_data.Accelerate",
            "select accel(cars_data.Accelerate)",
            "select max(cars_data.Accelerate)"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_names cars_data",
        "table_candidates": [
            "car_names cars_data",
            "car_makers car_names cars_data",
            "model_list car_names cars_data",
            "continents car_names cars_data",
            "countries car_names cars_data"
        ],
        "align_scores": [
            0.010787498205900192,
            6.5122869273182e-05,
            0.9956094622612,
            0.00010720124555518851,
            0.0009885827312245965,
            7.907913095550612e-05,
            0.000761351955588907,
            6.861123983981088e-05
        ],
        "align_select": "select cars_data.Accelerate",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "The acceleration of the car 'amc hornet sportabout (sw)' is what?",
        "gold_select": "select cars_data.Accelerate",
        "select_candidates": [
            "select avg(cars_data.Accelerate)",
            "select cars_data.Accelerate",
            "select max(cars_data.Accelerate)",
            "select accel(cars_data.Accelerate)"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_names cars_data",
        "table_candidates": [
            "car_names cars_data",
            "car_makers car_names cars_data",
            "model_list car_names cars_data",
            "continents car_names cars_data",
            "countries car_names cars_data",
            "car_makers cars_data"
        ],
        "align_scores": [
            0.30819034576416016,
            5.9984980907756835e-05,
            0.9954121708869934,
            8.395824988838285e-05,
            0.004308133386075497,
            6.742833647876978e-05,
            0.0007531192386522889,
            7.435295265167952e-05
        ],
        "align_select": "select cars_data.Accelerate",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the acceleration of the AMC Hornet Sportabout (SW)?",
        "gold_select": "select cars_data.Accelerate",
        "select_candidates": [
            "select avg(cars_data.Accelerate)",
            "select max(cars_data.Accelerate)",
            "select cars_data.Accelerate",
            "select accel(cars_data.Accelerate)"
        ],
        "select_labels": [
            0.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_names cars_data",
        "table_candidates": [
            "car_names cars_data",
            "car_makers car_names cars_data",
            "model_list car_names cars_data",
            "continents car_names cars_data",
            "countries car_names cars_data"
        ],
        "align_scores": [
            0.0033477290999144316,
            5.5075670388760045e-05,
            0.0007649430190213025,
            5.814591713715345e-05,
            0.9937718510627747,
            8.823036478133872e-05,
            0.0009318366646766663,
            6.430029316106811e-05
        ],
        "align_select": "select cars_data.Accelerate",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "The faster you accelerate, what is the sound output of hornet sw?",
        "gold_select": "select cars_data.Accelerate",
        "select_candidates": [
            "select cars_data.Accelerate, max(t5.c8)",
            "select cars_data.Accelerate, t5.c8",
            "select cars_data.Accelerate, cars_data.Year",
            "select cars_data.Accelerate, decibel(t5.c8)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "car_names cars_data",
        "table_candidates": [
            "cars_data"
        ],
        "align_scores": [
            0.0003014520916622132,
            0.00016488942492287606,
            0.00032404728699475527,
            0.00019077623437624425,
            0.00011248019291087985,
            8.502514538122341e-05,
            0.00031278247479349375,
            0.0001730058284010738
        ],
        "align_select": "select cars_data.Accelerate, max(t5.c8)",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "How fast can a 'Hornet sportabout' go with an 'AMC Hornet'?",
        "gold_select": "select cars_data.Accelerate",
        "select_candidates": [
            "select cars_data.Accelerate",
            "select max(cars_data.Accelerate)",
            "select avg(cars_data.Accelerate)",
            "select cars_data.Id, max(cars_data.Accelerate)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_names cars_data",
        "table_candidates": [
            "car_names cars_data",
            "car_makers car_names cars_data",
            "model_list car_names cars_data",
            "countries car_names cars_data",
            "continents car_names cars_data"
        ],
        "align_scores": [
            0.6594918370246887,
            0.00028941326308995485,
            0.8248914480209351,
            7.276935502886772e-05,
            0.12190753221511841,
            7.625509897479787e-05,
            0.0004961328231729567,
            6.22142615611665e-05
        ],
        "align_select": "select cars_data.Accelerate",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "find out the acceleration for making the 'amc hornet sportabout sw'.",
        "gold_select": "select cars_data.Accelerate",
        "select_candidates": [
            "select avg(cars_data.Accelerate)",
            "select cars_data.Accelerate",
            "select accel(cars_data.Accelerate)",
            "select max(cars_data.Accelerate)"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_names cars_data",
        "table_candidates": [
            "car_names cars_data",
            "car_makers car_names cars_data",
            "model_list car_names cars_data",
            "continents car_names cars_data",
            "countries car_names cars_data"
        ],
        "align_scores": [
            0.008203119039535522,
            5.994534876663238e-05,
            0.993631899356842,
            9.647502156440169e-05,
            0.001263924641534686,
            7.461327186319977e-05,
            0.00572930695489049,
            6.540541653521359e-05
        ],
        "align_select": "select cars_data.Accelerate",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How fast can you accelerate the car with 'AMC Hornet Sportsabout' (SW) engine?",
        "gold_select": "select cars_data.Accelerate",
        "select_candidates": [
            "select max(cars_data.Accelerate)",
            "select avg(cars_data.Accelerate)",
            "select cars_data.Accelerate",
            "select accel(cars_data.Accelerate)"
        ],
        "select_labels": [
            0.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_names cars_data",
        "table_candidates": [
            "car_names cars_data",
            "car_makers car_names cars_data",
            "model_list car_names cars_data",
            "continents car_names cars_data",
            "countries car_names cars_data"
        ],
        "align_scores": [
            0.9863505959510803,
            0.00010432031558593735,
            0.04342920333147049,
            7.30808314983733e-05,
            0.9822373986244202,
            0.00011125879245810211,
            0.0012733089970424771,
            8.841911039780825e-05
        ],
        "align_select": "select max(cars_data.Accelerate)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "The acceleration of the car hornet sportabout is how much?",
        "gold_select": "select cars_data.Accelerate",
        "select_candidates": [
            "select avg(cars_data.Accelerate)",
            "select cars_data.Accelerate",
            "select accel(cars_data.Accelerate)",
            "select sum(cars_data.Accelerate)"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_names cars_data",
        "table_candidates": [
            "car_names cars_data",
            "model_list car_names cars_data",
            "cars_data",
            "continents car_names cars_data",
            "car_makers car_names cars_data",
            "car_makers cars_data",
            "countries cars_data",
            "model_list cars_data"
        ],
        "align_scores": [
            0.020417658612132072,
            5.755453457823023e-05,
            0.9937201738357544,
            7.27915539755486e-05,
            0.0009347781888209283,
            6.880918954266235e-05,
            0.09667470306158066,
            6.0104706790298223e-05
        ],
        "align_select": "select cars_data.Accelerate",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the average EDISPL of Volvo cars in a set.",
        "gold_select": "select avg(cars_data.Edispl)",
        "select_candidates": [
            "select avg(cars_data.Edispl)",
            "select avg(cars_data.Edispl), car_names.Model",
            "select set avg(cars_data.Edispl)",
            "select an avg(cars_data.Edispl)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_names cars_data",
        "table_candidates": [
            "car_names cars_data",
            "car_makers car_names cars_data",
            "model_list car_names cars_data",
            "countries car_names cars_data",
            "continents car_names cars_data"
        ],
        "align_scores": [
            0.9965749382972717,
            0.9474994540214539,
            0.0001401886693201959,
            0.0038984944112598896,
            0.0005828150315210223,
            0.00060943333664909,
            0.00041909521678462625,
            0.00028611987363547087
        ],
        "align_select": "select avg(cars_data.Edispl)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the average EDISPL for Volvo cars.",
        "gold_select": "select avg(cars_data.Edispl)",
        "select_candidates": [
            "select avg(cars_data.Edispl)",
            "select an avg(cars_data.Edispl)",
            "select avg(cars_data.Edispl)",
            "select  avg(cars_data.Edispl)"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_names cars_data",
        "table_candidates": [
            "car_names cars_data",
            "car_makers car_names cars_data",
            "model_list car_names cars_data",
            "continents car_makers car_names cars_data",
            "countries car_names cars_data",
            "continents car_names cars_data"
        ],
        "align_scores": [
            0.9967472553253174,
            0.00010280740389134735,
            0.00037987480754964054,
            0.00010154787742067128,
            0.9967472553253174,
            0.00010280740389134735,
            0.9967472553253174,
            0.00010280740389134735
        ],
        "align_select": "select avg(cars_data.Edispl)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many cars were produced by the maker called \"American Motor Company?\"",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), car_makers.Maker",
            "select count(*), car_makers.Id",
            "select count(*), car_makers.Maker, car_makers.FullName"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_makers model_list",
        "table_candidates": [
            "car_makers car_names",
            "car_makers model_list car_names",
            "car_makers car_makers car_names",
            "car_makers cars_data",
            "car_makers model_list"
        ],
        "align_scores": [
            0.9919518232345581,
            0.0014891790924593806,
            0.00032750499667599797,
            0.004454398062080145,
            0.00039862896664999425,
            0.00016877242887858301,
            0.0001402023044647649,
            9.428190969629213e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "For how many car models was made by the maker called American Motor Company?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), car_makers.Maker",
            "select count(*), car_makers.Maker, car_makers.FullName",
            "select count(*), car_makers.Id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_makers model_list",
        "table_candidates": [
            "car_makers model_list car_names",
            "continents car_makers model_list car_names",
            "car_makers model_list",
            "countries car_makers model_list car_names"
        ],
        "align_scores": [
            0.9866930842399597,
            0.0006386235472746193,
            0.0003821055288426578,
            0.06395607441663742,
            0.00013560117804445326,
            0.00011419281509006396,
            0.0006156780873425305,
            0.0002825697010848671
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "For the make American Motors, how many models were produced?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), car_names.Make",
            "select car_names.Make, count(*)",
            "select count(*) pour car_names.Make"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_makers model_list",
        "table_candidates": [
            "model_list car_names",
            "car_makers model_list car_names",
            "continents car_makers model_list car_names",
            "continents model_list car_names",
            "car_makers car_names",
            "continents car_makers car_names",
            "countries car_names",
            "car_names"
        ],
        "align_scores": [
            0.9921443462371826,
            0.0002229898818768561,
            0.0003459789149928838,
            0.019688548520207405,
            0.00653123389929533,
            0.015994615852832794,
            0.04887077957391739,
            0.0002093085495289415
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many cars did they manufacture under the brand name American Motors?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*) car_makers.Maker, car_makers.FullName",
            "select count(*), car_makers.Maker, car_makers.FullName",
            "select count(*), car_makers.Maker, car_makers.Country"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_makers model_list",
        "table_candidates": [
            "continents car_makers car_names",
            "continents countries car_makers car_names",
            "continents car_makers model_list car_names",
            "countries car_makers car_names"
        ],
        "align_scores": [
            0.9912949204444885,
            0.0009436143445782363,
            0.0001646446471568197,
            0.000126880215248093,
            0.00013988155114930123,
            0.00011770552373491228,
            0.000141235621413216,
            0.00010074493184220046
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many car models did the manufacturer named American Motor Company produce?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(distinct model_list.Model)",
            "select count(distinct model_list.Maker)",
            "select count(*), car_makers.Maker"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_makers model_list",
        "table_candidates": [
            "car_makers model_list car_names",
            "continents car_makers model_list car_names",
            "countries car_makers model_list car_names",
            "car_makers model_list"
        ],
        "align_scores": [
            0.9941354990005493,
            0.0008387291454710066,
            0.71494060754776,
            0.00015595932200085372,
            0.004046034999191761,
            0.00013814035628456622,
            0.0003513843403197825,
            0.009814409539103508
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many cars have been produced by the company named American Motor Company?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), car_makers.Maker, car_makers.FullName",
            "select count(*), car_makers.Id",
            "select count(*), car_makers.Maker"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_makers model_list",
        "table_candidates": [
            "car_makers car_names",
            "car_makers car_makers car_names",
            "continents car_makers car_names",
            "car_makers model_list car_names",
            "car_makers",
            "car_makers cars_data"
        ],
        "align_scores": [
            0.9931260347366333,
            0.00029567733872681856,
            0.00015172384155448526,
            0.00015426789468619972,
            0.00037668959703296423,
            0.0004503136733546853,
            0.0003069288213737309,
            0.17562510073184967
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "For cars made by the company named 'American Motor Company', how many were produced?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), car_makers.Id",
            "select count(*), car_makers.Maker",
            "select car_names.Model, count(*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_makers model_list",
        "table_candidates": [
            "car_makers car_names",
            "countries car_makers car_names",
            "continents car_makers car_names",
            "car_makers model_list car_names",
            "car_makers car_makers car_names",
            "car_makers car_names cars_data"
        ],
        "align_scores": [
            0.9926734566688538,
            0.0005879278178326786,
            0.0003811202186625451,
            0.0004449161351658404,
            0.00036754910252057016,
            0.2429203987121582,
            0.0005965800955891609,
            0.24151986837387085
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many cars have been produced by American Motor Company?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), car_makers.Maker, car_makers.FullName",
            "select count(*), car_makers.Id",
            "select count(*), car_makers.Maker"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_makers model_list",
        "table_candidates": [
            "car_makers car_names",
            "car_makers car_makers car_names",
            "car_makers",
            "car_makers model_list car_names",
            "car_makers model_list",
            "car_makers cars_data"
        ],
        "align_scores": [
            0.9919247031211853,
            0.0003985246585216373,
            0.0001586611761013046,
            0.00017321185441687703,
            0.00038634013617411256,
            0.001253515831194818,
            0.00031057646265253425,
            0.33520054817199707
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "For car models made by American Motors Company, how many were produced?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), model_list.ModelId",
            "select count(*), model_list.Model",
            "select count(*), car_names.Model"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_makers model_list",
        "table_candidates": [
            "car_makers model_list car_names",
            "model_list car_names",
            "countries car_makers model_list car_names",
            "continents car_makers model_list car_names",
            "countries model_list car_names",
            "car_makers model_list car_makers car_names",
            "countries car_names"
        ],
        "align_scores": [
            0.9922777414321899,
            0.0001046013057930395,
            0.0003146811795886606,
            0.0001227973698405549,
            0.00027728124405257404,
            0.00012436842371243984,
            0.0003974238643422723,
            0.00012301017704885453
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many car brands was made by the company called American Car Company?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(distinct car_names.Make)",
            "select count(distinct car_names.Model)",
            "select count(distinct car_names.MakeId)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_makers model_list",
        "table_candidates": [
            "continents car_makers car_names",
            "continents countries car_makers car_names",
            "continents car_makers model_list car_names",
            "countries car_makers car_names",
            "car_makers car_names"
        ],
        "align_scores": [
            0.9939785003662109,
            9.143643546849489e-05,
            0.5685847401618958,
            7.692293729633093e-05,
            0.39250320196151733,
            8.672512194607407e-05,
            0.11000417917966843,
            8.225082274293527e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which are the distinctive models of the maker with the name General Motors or weights more than 3500?",
        "gold_select": "select distinct model_list.Model",
        "select_candidates": [
            "select distinct model_list.Model",
            "select distinct model_list.Model, model_list.Maker",
            "select distinct model_list.Model, car_makers.Maker",
            "select distinctive model_list.Model"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_makers model_list car_names cars_data",
        "table_candidates": [
            "car_makers model_list cars_data",
            "car_makers model_list car_names",
            "car_makers model_list car_names cars_data",
            "countries car_makers model_list cars_data",
            "car_makers model_list car_makers cars_data"
        ],
        "align_scores": [
            0.9166179895401001,
            0.001187692629173398,
            0.0003395155072212219,
            7.939663919387385e-05,
            0.00044771452667191625,
            9.403588774148375e-05,
            0.011821940541267395,
            0.00016477893223054707
        ],
        "align_select": "select distinct model_list.Model",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which distinctive models were made by General Motors, and weigh more than 3500?",
        "gold_select": "select distinct model_list.Model",
        "select_candidates": [
            "select distinct model_list.Model",
            "select distinct car_names.Model",
            "select distinct car_names.Model, car_makers.FullName",
            "select distinct car_names.Model, car_names.Make"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_makers model_list car_names cars_data",
        "table_candidates": [
            "car_makers model_list car_names cars_data",
            "car_makers model_list cars_data",
            "car_makers model_list car_names",
            "car_makers model_list car_makers car_names cars_data",
            "continents car_makers model_list car_names cars_data",
            "countries car_makers model_list cars_data"
        ],
        "align_scores": [
            0.4796932339668274,
            0.0029912146274000406,
            0.5766845345497131,
            0.0034665516577661037,
            0.0002596320991870016,
            0.00011294148862361908,
            0.00017936713993549347,
            9.256771591026336e-05
        ],
        "align_select": "select distinct model_list.Model",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the model number and brand made by General Motors that weighs more than 3500?",
        "gold_select": "select distinct model_list.Model",
        "select_candidates": [
            "select car_names.Model, car_names.Make",
            "select model_list.Model, car_names.Make",
            "select model_list.Maker, car_names.Make",
            "select model_list.Model, model_list.Model"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_makers model_list car_names cars_data",
        "table_candidates": [
            "car_makers model_list car_names",
            "car_makers model_list car_names cars_data",
            "continents car_makers model_list car_names cars_data",
            "continents car_makers model_list car_names"
        ],
        "align_scores": [
            0.9940529465675354,
            0.00020490567840170115,
            0.9945699572563171,
            0.00022383384930435568,
            0.002680549630895257,
            0.00011484201968414709,
            0.0013003707863390446,
            9.390273771714419e-05
        ],
        "align_select": "select car_names.Model, car_names.Make",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Among the cars made by company called General Motors, what are the ones whose weight is over 3500 Kg/lbs?",
        "gold_select": "select distinct model_list.Model",
        "select_candidates": [
            "select car_names.Model",
            "select car_names.MakeId",
            "select car_names.Model, car_names.Make",
            "select car_names.Model, car_names.MakeId"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_makers model_list car_names cars_data",
        "table_candidates": [
            "car_makers car_names cars_data",
            "car_makers model_list car_names cars_data",
            "continents car_makers car_names cars_data",
            "countries car_makers car_names cars_data"
        ],
        "align_scores": [
            0.08489734679460526,
            0.007839099504053593,
            0.001075676060281694,
            0.003719902131706476,
            0.00024107276112772524,
            0.00011692469706758857,
            0.00028729363111779094,
            0.00012314187188167125
        ],
        "align_select": "select car_names.Model",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which distinctive models are produced by GM, which weighs more than 3500?",
        "gold_select": "select distinct model_list.Model",
        "select_candidates": [
            "select distinct model_list.Model",
            "select distinct model_list.Model, car_makers.Maker",
            "select distinctive model_list.Model",
            "select distinct model_list.Model"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_makers model_list car_names cars_data",
        "table_candidates": [
            "car_makers model_list cars_data",
            "car_makers model_list car_names cars_data",
            "countries car_makers model_list cars_data",
            "continents car_makers model_list cars_data",
            "car_makers model_list car_names",
            "model_list car_makers cars_data"
        ],
        "align_scores": [
            0.7709442973136902,
            0.0001621133415028453,
            0.001701189554296434,
            0.00011064282443840057,
            0.007495411206036806,
            0.0001235006347997114,
            0.7709442973136902,
            0.0001621133415028453
        ],
        "align_select": "select distinct model_list.Model",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which GM models weigh over 3500 pounds?",
        "gold_select": "select distinct model_list.Model",
        "select_candidates": [
            "select car_names.Model",
            "select model_list.Model",
            "select car_makers.Maker, model_list.Model",
            "select car_makers.Maker, car_makers.FullName"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_makers model_list car_names cars_data",
        "table_candidates": [
            "car_makers model_list cars_data",
            "countries car_makers model_list cars_data",
            "continents car_makers model_list cars_data",
            "car_makers car_names cars_data",
            "car_makers model_list car_names cars_data",
            "model_list cars_data"
        ],
        "align_scores": [
            0.9786239862442017,
            0.02926880680024624,
            0.9870988726615906,
            0.013928145170211792,
            0.0021952602546662092,
            0.00013565523840952665,
            0.00028007797664031386,
            0.00012479990255087614
        ],
        "align_select": "select car_names.Model",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which of the models made by GM weighs more than 3500 kg?",
        "gold_select": "select distinct model_list.Model",
        "select_candidates": [
            "select model_list.Model",
            "select car_names.Model",
            "select car_makers.Maker, model_list.Model",
            "select car_names.Make"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_makers model_list car_names cars_data",
        "table_candidates": [
            "car_makers model_list cars_data",
            "car_makers model_list car_names",
            "countries car_makers model_list cars_data",
            "continents car_makers model_list cars_data",
            "car_makers model_list"
        ],
        "align_scores": [
            0.813412606716156,
            0.0003450396761763841,
            0.9681053757667542,
            0.0003493964613880962,
            0.0023714606650173664,
            7.646322046639398e-05,
            0.7976284623146057,
            0.0002960367128252983
        ],
        "align_select": "select model_list.Model",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which of the models made by General Motors weighs more than 3500?",
        "gold_select": "select distinct model_list.Model",
        "select_candidates": [
            "select car_names.Model",
            "select model_list.Model",
            "select car_names.Make",
            "select car_names.Model, model_list.Model"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_makers model_list car_names cars_data",
        "table_candidates": [
            "car_makers model_list cars_data",
            "car_makers model_list car_names cars_data",
            "countries car_makers model_list cars_data",
            "continents car_makers model_list cars_data",
            "car_makers model_list car_names",
            "car_makers car_names cars_data"
        ],
        "align_scores": [
            0.9454547762870789,
            0.00475110812112689,
            0.7320455312728882,
            0.005965478718280792,
            0.6918951869010925,
            0.00497416639700532,
            0.0003559548931661993,
            9.707504068501294e-05
        ],
        "align_select": "select car_names.Model",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which types of car are made by General Motors and weigh over 3,500 pounds?",
        "gold_select": "select distinct model_list.Model",
        "select_candidates": [
            "select car_names.Model",
            "select car_names.Model, car_names.Make",
            "select distinct car_names.Model, car_names.Make",
            "select car_names.Model, car_names.Model"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_makers model_list car_names cars_data",
        "table_candidates": [
            "car_makers car_names cars_data",
            "car_makers model_list car_names cars_data",
            "continents car_makers car_names cars_data",
            "countries car_makers car_names cars_data"
        ],
        "align_scores": [
            0.7803770303726196,
            0.14916658401489258,
            0.0002487311721779406,
            0.00015202997019514441,
            0.0002667091612238437,
            9.068566578207538e-05,
            0.0002907135640271008,
            0.00013234958169050515
        ],
        "align_select": "select car_names.Model",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which General Motors cars weigh more than 3500?",
        "gold_select": "select distinct model_list.Model",
        "select_candidates": [
            "select cars_data.Id",
            "select car_names.MakeId",
            "select cars_data.Weight",
            "select car_names.Model"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_makers model_list car_names cars_data",
        "table_candidates": [
            "car_makers cars_data",
            "car_makers car_names cars_data",
            "car_makers model_list car_names cars_data",
            "car_makers model_list cars_data"
        ],
        "align_scores": [
            0.002513688988983631,
            0.007151491940021515,
            0.008960563689470291,
            0.04672982171177864,
            0.2160337269306183,
            0.0007133291801437736,
            0.9824062585830688,
            0.024789998307824135
        ],
        "align_select": "select car_names.Model",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the different years in which cars with weights less than 4000 and weight more than 3000 have been produced?",
        "gold_select": "select distinct cars_data.Year",
        "select_candidates": [
            "select distinct cars_data.Year",
            "select distinct cars_data.Year, t5.c8",
            "select count(distinct cars_data.Year)",
            "select distinct cars_data.Year, cars_data.Accelerate"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data",
            "model_list cars_data",
            "car_names cars_data"
        ],
        "align_scores": [
            0.9795728325843811,
            0.007090880535542965,
            0.00022988798446021974,
            0.0001113513353629969,
            0.007233085576444864,
            0.0002587464405223727,
            0.00014883025141898543,
            0.00011943161371164024
        ],
        "align_select": "select distinct cars_data.Year",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the number of cylinders in a volvo that accelerates slowly?",
        "gold_select": "select cars_data.Cylinders",
        "select_candidates": [
            "select cars_data.Cylinders",
            "select count(*)",
            "select sum(cars_data.Cylinders)",
            "select count(distinct cars_data.Cylinders)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "car_names cars_data",
        "table_candidates": [
            "cars_data",
            "car_names cars_data",
            "model_list car_names cars_data",
            "model_list cars_data",
            "continents car_names cars_data",
            "car_makers cars_data",
            "countries cars_data"
        ],
        "align_scores": [
            0.986716628074646,
            0.00019561128283385187,
            0.7386105060577393,
            9.292280446970835e-05,
            0.0065286289900541306,
            8.082962449407205e-05,
            0.001334005268290639,
            6.890215445309877e-05
        ],
        "align_select": "select cars_data.Cylinders",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many cylinders does the volvo have that accelerates the least?",
        "gold_select": "select cars_data.Cylinders",
        "select_candidates": [
            "select cars_data.Cylinders",
            "select count(distinct cars_data.Cylinders)",
            "select cars_data.MPG, cars_data.Cylinders",
            "select count(*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "car_names cars_data",
        "table_candidates": [
            "car_names cars_data",
            "cars_data",
            "model_list car_names cars_data",
            "car_makers cars_data",
            "continents car_names cars_data",
            "continents car_makers cars_data",
            "model_list cars_data"
        ],
        "align_scores": [
            0.9853794574737549,
            8.960744889918715e-05,
            0.0018240336794406176,
            6.064995613996871e-05,
            0.0002531756763346493,
            6.394220690708607e-05,
            0.964468777179718,
            6.369088077917695e-05
        ],
        "align_select": "select cars_data.Cylinders",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Find the cylinder count for a Volvo with the lowest acceleration.",
        "gold_select": "select cars_data.Cylinders",
        "select_candidates": [
            "select cars_data.Cylinders",
            "select cars_data.Id, cars_data.Cylinders",
            "select cars_data.Cylinders, cars_data.Edispl",
            "select cars_data.Cylinders, cars_data.Accelerate"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_names cars_data",
        "table_candidates": [
            "car_names cars_data",
            "model_list car_names cars_data",
            "car_makers cars_data",
            "countries car_names cars_data",
            "continents car_names cars_data",
            "continents car_makers cars_data",
            "countries cars_data"
        ],
        "align_scores": [
            0.9877976775169373,
            0.5132119059562683,
            0.0001963787799468264,
            0.0001937513006851077,
            0.0002851710596587509,
            0.00018822532729245722,
            0.0005308224353939295,
            0.00022139842621982098
        ],
        "align_select": "select cars_data.Cylinders",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT"
    },
    {
        "question": "What is the number of cylinders in the version of Volvo with least acceleration?",
        "gold_select": "select cars_data.Cylinders",
        "select_candidates": [
            "select cars_data.Cylinders",
            "select cars_data.Id, cars_data.Cylinders",
            "select cars_data.Cylinders, cars_data.Edispl",
            "select cars_data.Cylinders, cars_data.Accelerate"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_names cars_data",
        "table_candidates": [
            "car_names cars_data",
            "model_list car_names cars_data",
            "car_makers cars_data",
            "countries car_names cars_data",
            "continents car_names cars_data",
            "countries cars_data"
        ],
        "align_scores": [
            0.991998016834259,
            0.9778788089752197,
            0.00018598850874695927,
            0.00021465324971359223,
            0.0003626170218922198,
            0.00023873808095231652,
            0.0004215825174469501,
            0.0001739384315442294
        ],
        "align_select": "select cars_data.Cylinders",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT"
    },
    {
        "question": "What is the cylinder count on the version of a Volvo with the least acceleration?",
        "gold_select": "select cars_data.Cylinders",
        "select_candidates": [
            "select cars_data.Cylinders",
            "select cars_data.Id, cars_data.Cylinders",
            "select cars_data.Cylinders, cars_data.Edispl",
            "select cars_data.Cylinders, cars_data.Accelerate"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_names cars_data",
        "table_candidates": [
            "car_names cars_data",
            "model_list car_names cars_data",
            "car_makers cars_data",
            "continents car_names cars_data",
            "cars_data",
            "model_list cars_data",
            "countries cars_data"
        ],
        "align_scores": [
            0.987188994884491,
            0.9811727404594421,
            0.00020188154303468764,
            0.000292205746518448,
            0.0003330713661853224,
            0.0004602486442308873,
            0.0005058679380454123,
            0.0008884572889655828
        ],
        "align_select": "select cars_data.Cylinders",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT"
    },
    {
        "question": "What are the names of the country with over three car manufacturers or where 'Fiat'-based cars are produced?",
        "gold_select": "select countries.CountryId, countries.CountryName",
        "select_candidates": [
            "select countries.CountryName",
            "select countries.CountryName, car_makers.Country",
            "select countries.CountryName, countries.Continent",
            "select countries.CountryName, countries.CountryId"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY-HAVING-UNION-SELECT-FROM-WHERE",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "countries car_makers model_list",
        "table_candidates": [
            "countries car_makers car_names",
            "countries car_makers",
            "countries car_makers model_list car_names"
        ],
        "align_scores": [
            0.2435903698205948,
            0.9759116768836975,
            0.0007285702740773559,
            0.0021623210050165653,
            0.0010327701456844807,
            0.004199576564133167,
            0.0005289405235089362,
            0.0015298867365345359
        ],
        "align_select": "select countries.CountryName",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-WHERE"
    },
    {
        "question": "Find the IDS and names of countries that have more than 3 car makers and produce fiat.",
        "gold_select": "select countries.CountryId, countries.CountryName",
        "select_candidates": [
            "select countries.CountryId, countries.CountryName",
            "select car_makers.Id, countries.CountryName",
            "select countries.CountryName, countries.CountryId",
            "select countries.Continent, countries.CountryName"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "countries car_makers model_list",
        "table_candidates": [
            "countries car_makers",
            "countries car_makers model_list"
        ],
        "align_scores": [
            0.9836083054542542,
            0.6705793142318726,
            0.13945899903774261,
            0.015538373962044716,
            0.987231433391571,
            0.722892701625824,
            0.0005742700886912644,
            0.0002741160278674215
        ],
        "align_select": "select countries.CountryId, countries.CountryName",
        "align_structure": "SELECT-FROM-WHERE-GROUP BY-HAVING"
    },
    {
        "question": "The codes and names of the airports in Anthony are..",
        "gold_select": "select airports.AirportCode, airports.AirportName",
        "select_candidates": [
            "select airports.AirportCode, airports.AirportName",
            "select airports.AirportCode.c1, airports.AirportName",
            "select airports.City, airports.AirportName",
            "select airports.AirportCode.c2, airports.AirportCode"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports",
        "table_candidates": [
            "airports"
        ],
        "align_scores": [
            0.98678058385849,
            8.82844760781154e-05,
            0.00032573199132457376,
            6.617382314288989e-05,
            0.0007706382311880589,
            8.923855057219043e-05,
            0.0002859603555407375,
            5.479549872688949e-05
        ],
        "align_select": "select airports.AirportCode, airports.AirportName",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the airport code and name in Anthony?",
        "gold_select": "select airports.AirportCode, airports.AirportName",
        "select_candidates": [
            "select airports.AirportCode, airports.AirportName",
            "select airports.AirportCode.c1, airports.AirportName",
            "select airports.AirportCode, airports.AirportName, airports.City",
            "select airports.City, airports.AirportName"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports",
        "table_candidates": [
            "airports"
        ],
        "align_scores": [
            0.9958860278129578,
            8.853427425492555e-05,
            0.0003036338312085718,
            6.426969048334286e-05,
            0.0001624435535632074,
            5.385986514738761e-05,
            0.0011094656074419618,
            8.347956463694572e-05
        ],
        "align_select": "select airports.AirportCode, airports.AirportName",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the code and name of the airport for Anthony?",
        "gold_select": "select airports.AirportCode, airports.AirportName",
        "select_candidates": [
            "select airports.AirportCode, airports.AirportName",
            "select airports.AirportCode.c1, airports.AirportName",
            "select airports.City, airports.AirportName",
            "select airports.AirportCode, airports.AirportName,"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports",
        "table_candidates": [
            "airports"
        ],
        "align_scores": [
            0.9953887462615967,
            0.00021010413183830678,
            0.0005488155293278396,
            9.579909965395927e-05,
            0.0010819961316883564,
            8.744427032070234e-05,
            0.0018433715449646115,
            7.648378232261166e-05
        ],
        "align_select": "select airports.AirportCode, airports.AirportName",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the airline with 'UAL'.",
        "gold_select": "select airlines.Airline",
        "select_candidates": [
            "select airlines.Airline",
            "select airlines.Airline, airlines.Abbreviation",
            "select airlines.uid, airlines.Airline",
            "select airlines.Airline, airlines.Abbreviation, airlines.Country"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines",
        "table_candidates": [
            "airlines"
        ],
        "align_scores": [
            0.9857441782951355,
            8.310078555950895e-05,
            0.00023565067385789007,
            6.264438707148656e-05,
            0.0001573859917698428,
            6.552640843437985e-05,
            0.0001274535316042602,
            5.974338637315668e-05
        ],
        "align_select": "select airlines.Airline",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the airline abbreviated to UAL?",
        "gold_select": "select airlines.Airline",
        "select_candidates": [
            "select airlines.Airline",
            "select airlines.Airline, airlines.Abbreviation",
            "select airlines.uid, airlines.Airline",
            "select airlines.Airline, airlines.Country"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines",
        "table_candidates": [
            "airlines"
        ],
        "align_scores": [
            0.6506112813949585,
            9.969807433662936e-05,
            0.00020981025591026992,
            7.289282802958041e-05,
            0.000239465749473311,
            6.781518459320068e-05,
            0.00017163192387670279,
            6.944994674995542e-05
        ],
        "align_select": "select airlines.Airline",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Of airports at 'Aberdeen',which are their names?",
        "gold_select": "select airports.AirportName",
        "select_candidates": [
            "select airports.AirportName",
            "select airports.AirportName, airports.AirportCode",
            "select airports.AirportName, airports.AirportCode, airports.Country",
            "select avg(airports.AirportName)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports",
        "table_candidates": [
            "airports"
        ],
        "align_scores": [
            0.9874626994132996,
            0.00032782956259325147,
            0.00018743891268968582,
            7.713639206485823e-05,
            0.00013580125232692808,
            6.504546763608232e-05,
            0.0008573008817620575,
            7.237805402837694e-05
        ],
        "align_select": "select airports.AirportName",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Of airports in 'Aberdeen' what is thair names?",
        "gold_select": "select airports.AirportName",
        "select_candidates": [
            "select airports.AirportName",
            "select airports.AirportName, airports.AirportCode",
            "select airports.AirportName, airports.AirportCode, airports.Country",
            "select avg(airports.AirportName)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports",
        "table_candidates": [
            "airports"
        ],
        "align_scores": [
            0.9913641214370728,
            0.0002468557795509696,
            0.00020437651255633682,
            7.649041071999818e-05,
            0.00015948357759043574,
            6.543767085531726e-05,
            0.0005017940420657396,
            8.357752813026309e-05
        ],
        "align_select": "select airports.AirportName",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the names of the airports in 'Aberdeen'.",
        "gold_select": "select airports.AirportName",
        "select_candidates": [
            "select airports.AirportName",
            "select airports.AirportName, airports.AirportCode",
            "select airports.AirportName, airports.AirportCode, airports.Country",
            "select avg(airports.AirportName)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports",
        "table_candidates": [
            "airports",
            "airlines airports"
        ],
        "align_scores": [
            0.9815803170204163,
            0.00017367923283018172,
            0.00020032341126352549,
            7.030164852039889e-05,
            0.00012943282490596175,
            5.862719990545884e-05,
            0.0013556275516748428,
            6.405890599125996e-05
        ],
        "align_select": "select airports.AirportName",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the airport names at Aberdeen.",
        "gold_select": "select airports.AirportName",
        "select_candidates": [
            "select airports.AirportName",
            "select airports.AirportName, airports.AirportCode",
            "select airports.AirportName, airports.AirportCode, airports.Country",
            "select avg(airports.AirportName)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports",
        "table_candidates": [
            "airports"
        ],
        "align_scores": [
            0.9923312664031982,
            0.0001202540734084323,
            0.0002390409936197102,
            6.586546078324318e-05,
            0.00013025346561335027,
            5.671125472872518e-05,
            0.0012091289972886443,
            6.023024980095215e-05
        ],
        "align_select": "select airports.AirportName",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the airport names at Aberdeen?",
        "gold_select": "select airports.AirportName",
        "select_candidates": [
            "select airports.AirportName",
            "select airports.AirportName, airports.AirportCode",
            "select airports.AirportName, airports.AirportCode, airports.Country",
            "select avg(airports.AirportName)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports",
        "table_candidates": [
            "airports"
        ],
        "align_scores": [
            0.9918667674064636,
            0.00018423933943267912,
            0.00023116431839298457,
            7.13412810000591e-05,
            0.00014238798758015037,
            5.795195102109574e-05,
            0.000895269273314625,
            6.30399736110121e-05
        ],
        "align_select": "select airports.AirportName",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which airports are there at 'Aberdeen'?",
        "gold_select": "select airports.AirportName",
        "select_candidates": [
            "select airports.AirportName",
            "select airports.City, airports.AirportCode, airports.AirportName",
            "select airports.AirportName, airports.AirportCode",
            "select airports.City, airports.AirportName"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports",
        "table_candidates": [
            "airports"
        ],
        "align_scores": [
            0.9206445217132568,
            0.0002228228113381192,
            0.00016223720740526915,
            7.074066525092348e-05,
            0.0017084635328501463,
            9.926521306624636e-05,
            0.00019541385699994862,
            7.229224866023287e-05
        ],
        "align_select": "select airports.AirportName",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "The airports in Aberdeen, what are their names?",
        "gold_select": "select airports.AirportName",
        "select_candidates": [
            "select airports.AirportName",
            "select airports.AirportName, airports.AirportCode",
            "select airports.AirportName, airports.AirportCode, airports.Country",
            "select avg(airports.AirportName)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports",
        "table_candidates": [
            "airports"
        ],
        "align_scores": [
            0.9879652261734009,
            0.00014653550169896334,
            0.0002475385554134846,
            6.441002187784761e-05,
            0.00014125759480521083,
            5.650995080941357e-05,
            0.0009481473243795335,
            5.600752410828136e-05
        ],
        "align_select": "select airports.AirportName",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "From 'Aberdeen' what is the total number of departing flights.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), airports.City",
            "select sum(flights.FlightNo)",
            "select count(*), airports.City, flights.DestAirport"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights"
        ],
        "align_scores": [
            0.9955167174339294,
            0.00012440126738511026,
            0.00034495018189772964,
            0.0003609611594583839,
            0.5130100846290588,
            0.0001256591931451112,
            0.00010970382572850212,
            0.0001683414011495188
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "For arrivals to 'Aberdeen' what is the number of flights?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), airports.City",
            "select count(*), airports.City, flights.FlightNo",
            "select count(*), airports.City, flights.SourceAirport"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights",
            "airlines airports flights"
        ],
        "align_scores": [
            0.9957281947135925,
            0.00011952310160268098,
            0.0003224033280275762,
            0.0003601933713071048,
            0.0001346790522802621,
            0.0001602466800250113,
            0.00013080035569146276,
            0.000184225122211501
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many flights departed from 'Aberdeen' and had destination 'Ashley'?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), airports.City, airports.AirportName",
            "select count(*), airports.City, airports.AirportName",
            "select count(*), airports.City & airports.AirportName"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights",
            "airlines airports flights"
        ],
        "align_scores": [
            0.9945459365844727,
            0.00010343821486458182,
            0.00012954235717188567,
            6.091217801440507e-05,
            0.00012954235717188567,
            6.091217801440507e-05,
            0.00015516734856646508,
            6.062410830054432e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many flights depart from Aberdeen to have the destination of Ashley?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), airports.City, airports.AirportName",
            "select count(*), airports.City (Aberdeen, airports.AirportName)",
            "select count(*), airports.City"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights",
            "airlines airports flights"
        ],
        "align_scores": [
            0.9531738758087158,
            0.0005392891471274197,
            0.00012089724623365328,
            8.369189163204283e-05,
            0.0002350674767512828,
            0.00010988599387928843,
            0.00029284413903951645,
            0.00020294652495067567
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Of all the flights arriving into Aberdeen, how many go on to fly to Ashly?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), airports.City",
            "select count(distinct flights.FlightNo)",
            "select flights.FlightNo"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights",
            "airlines airports flights"
        ],
        "align_scores": [
            0.9914885759353638,
            0.0006979376194067299,
            0.000358805526047945,
            0.009807974100112915,
            0.0037200136575847864,
            0.00040979849291034043,
            0.09710690379142761,
            0.10770469158887863
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the number of flights from 'Aberdeen' to 'Ashley'.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), airports.City, airports.AirportName",
            "select count(*) dependant on airports.City, airports.AirportName",
            "select count(*), airports.City, airports.AirportName"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights",
            "airlines airports flights"
        ],
        "align_scores": [
            0.995333731174469,
            0.00015992365661077201,
            0.00013593935000244528,
            7.267198816407472e-05,
            0.00017456778732594103,
            9.762813715497032e-05,
            0.00013593935000244528,
            7.267198816407472e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many flights leave 'Aberdeen' to 'Ashley'?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), airports.City, airports.AirportName",
            "select count(*), airports.City, airports.AirportName, flights.FlightNo",
            "select count(*), airports.City, airports.AirportName, flights.FlightNo"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights",
            "airlines airports flights"
        ],
        "align_scores": [
            0.9958490133285522,
            6.500387098640203e-05,
            0.0001235073577845469,
            5.031890032114461e-05,
            0.00013699338887818158,
            5.152362064109184e-05,
            0.00013699338887818158,
            5.152362064109184e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many flights out of 'Aberdeen' go to 'Ashley'?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), airports.City, airports.AirportName",
            "select count(*), airports.City, airports.AirportName",
            "select count(*) dependant on airports.City, airports.AirportName"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights",
            "airlines airports flights"
        ],
        "align_scores": [
            0.9951077699661255,
            6.733658665325493e-05,
            0.0001302323507843539,
            5.219081504037604e-05,
            0.0001302323507843539,
            5.219081504037604e-05,
            0.00018026195175480098,
            8.655509009258822e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many times do planes depart from 'Aberdeen' and arrive at 'Ashley'?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), airports.City, airports.AirportName",
            "select count(*), airports.City",
            "select count(*), airports.City, airports.AirportName"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights",
            "airlines airports flights"
        ],
        "align_scores": [
            0.9933047890663147,
            0.00025526765966787934,
            0.0001447298564016819,
            0.0001091049998649396,
            0.000257987470831722,
            0.00393782090395689,
            0.0001447298564016819,
            0.0001091049998649396
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Of the departures from 'Aberdeen', how many had destination 'Ashley'?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), airports.City, airports.AirportName",
            "select count(*), airports.City",
            "select count(*), airports.City (Aberdeen, airports.AirportName)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights",
            "airlines airports flights",
            "airports airports flights"
        ],
        "align_scores": [
            0.9915909767150879,
            0.001671323785558343,
            0.00012233454617671669,
            9.249994764104486e-05,
            0.00031049654353410006,
            0.0002449300664011389,
            0.00023575856175739318,
            0.00013380858581513166
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Of the flights departing from 'Aberdeen' to 'Ashley', how many had 'Aberdeen' as their origin?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), flights.SourceAirport",
            "select count(distinct flights.FlightNo)",
            "select count(*), airports.City"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights",
            "airlines airports flights"
        ],
        "align_scores": [
            0.9680801630020142,
            0.00046339069376699626,
            0.0004277396365068853,
            0.02256038971245289,
            0.00040243001421913505,
            0.00019202490511815995,
            0.00037885436904616654,
            0.006890388205647469
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Of all flights departing from Aberdeen, how many had destination 'Ashley'?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), airports.City, airports.AirportName",
            "select count(*), airports.City",
            "select count(*), airports.City (Aberdeen, airports.AirportName)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights",
            "airlines airports flights"
        ],
        "align_scores": [
            0.9930699467658997,
            0.00044958555372431874,
            0.00013488210970535874,
            9.093575499719009e-05,
            0.0004560052475426346,
            0.00019251072080805898,
            0.00023119300021789968,
            0.00011811861622845754
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Of all the flights to 'Aberdeen', how many are from United Airlines?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), airlines.Airline",
            "select flights.Airline, count(*)",
            "select count(*), flights.Airline"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines airports flights",
        "table_candidates": [
            "airlines airports flights"
        ],
        "align_scores": [
            0.9902905821800232,
            7.495508179999888e-05,
            0.0004299123538658023,
            6.970047252252698e-05,
            0.002328768139705062,
            6.870008655823767e-05,
            0.00038674272946082056,
            7.316052506212145e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Of the flights to Aberdeen, how many were United Airlines?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), airlines.Airline",
            "select airlines.Airline, count(*)",
            "select count(*), airports.City"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines airports flights",
        "table_candidates": [
            "airlines airports flights"
        ],
        "align_scores": [
            0.987815797328949,
            8.11423160484992e-05,
            0.0003877673589158803,
            6.840030255261809e-05,
            0.002163379918783903,
            6.839501293143257e-05,
            0.00042406172724440694,
            7.103403186192736e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the total number of United flights that go to \"Aberdeen\"?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), airlines.Airline",
            "select count(*), flights.Airline",
            "select count(distinct flights.FlightNo)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines airports flights",
        "table_candidates": [
            "airlines airports flights",
            "airports flights",
            "airlines airports airports flights"
        ],
        "align_scores": [
            0.9943087697029114,
            0.00022195791825652122,
            0.00029768672538921237,
            0.002010512398555875,
            0.00037103542126715183,
            0.007683726958930492,
            0.004103897139430046,
            0.00013145591947250068
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Of the flights to 'Aberdeen', how many were United Airlines?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), airlines.Airline",
            "select airlines.Airline, count(*)",
            "select count(distinct flights.Airline)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines airports flights",
        "table_candidates": [
            "airlines airports flights"
        ],
        "align_scores": [
            0.986361026763916,
            7.560677477158606e-05,
            0.000431958120316267,
            6.995363219175488e-05,
            0.002813471481204033,
            6.889020733069628e-05,
            0.006674869451671839,
            6.535778811667114e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "For flights to City 'Aberdeen', how many were for UnitedAirlines?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), airlines.Airline",
            "select count(*), flights.Airline",
            "select count(*), airports.City"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines airports flights",
        "table_candidates": [
            "airports flights",
            "airlines airports flights"
        ],
        "align_scores": [
            0.9930986762046814,
            7.215244113467634e-05,
            0.000419200659962371,
            7.113483297871426e-05,
            0.00037208019057288766,
            7.067753904266283e-05,
            0.00038762835902161896,
            8.548398909624666e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Of all the flights going to 'Aberdeen', how many were 'United Airlines'?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), airlines.Airline",
            "select count(*), flights.Airline",
            "select flights.Airline, count(*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines airports flights",
        "table_candidates": [
            "airlines airports flights"
        ],
        "align_scores": [
            0.9910586476325989,
            0.004908696282655001,
            0.0005866499850526452,
            0.8851592540740967,
            0.0005140157882124186,
            0.853775143623352,
            0.0023200898431241512,
            0.8801852464675903
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Of the flights into 'Aberdeen', how many were by 'United Airlines'?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), airlines.Airline",
            "select count(*), flights.Airline",
            "select count(*), airports.City"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines airports flights",
        "table_candidates": [
            "airlines airports flights"
        ],
        "align_scores": [
            0.9908598065376282,
            7.017345342319459e-05,
            0.0004577173967845738,
            6.255980406422168e-05,
            0.0003873332170769572,
            6.43672829028219e-05,
            0.00044865315430797637,
            7.708228076808155e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Of the United Airlines flights, how many go to Aberdeen?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), airlines.Airline",
            "select flights.Airline, count(*)",
            "select count(*), flights.Airline"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines airports flights",
        "table_candidates": [
            "airlines airports flights",
            "airlines airports airports flights"
        ],
        "align_scores": [
            0.9880027770996094,
            0.00035418689367361367,
            0.00036347779678180814,
            0.0003481708117760718,
            0.00039070757338777184,
            0.001856564194895327,
            0.0004470958956517279,
            0.0003090270038228482
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Of all the flights to 'Aberdeen', how many were United Airlines?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), airlines.Airline",
            "select airlines.Airline, count(*)",
            "select count(*), flights.Airline"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines airports flights",
        "table_candidates": [
            "airlines airports flights"
        ],
        "align_scores": [
            0.9907483458518982,
            8.461127436021343e-05,
            0.00045324015081860125,
            7.441516208928078e-05,
            0.0032502831891179085,
            7.168717274907976e-05,
            0.0003928474325221032,
            7.500584615627304e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Of all the flights out of 'Aberdeen', how many were United Airlines?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), airlines.Airline",
            "select count(*), airports.City",
            "select count(*), flights.Airline"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines airports flights",
        "table_candidates": [
            "airlines airports flights"
        ],
        "align_scores": [
            0.9904070496559143,
            9.616924216970801e-05,
            0.00042367345304228365,
            7.507747795898467e-05,
            0.0005004665581509471,
            7.386250945273787e-05,
            0.0003777140809688717,
            7.592568726977333e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the flight numbers of flights leaving from 'Aberdeen'?",
        "gold_select": "select flights.FlightNo",
        "select_candidates": [
            "select flights.FlightNo",
            "select flights.FlightNo, airports.City",
            "select flights.FlightNo, airports.AirportName",
            "select distinct flights.FlightNo"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights"
        ],
        "align_scores": [
            0.9940117001533508,
            0.00010611402103677392,
            0.00019212561892345548,
            5.684239658876322e-05,
            0.00014072949124965817,
            5.6819739256752655e-05,
            0.008270788006484509,
            9.286815475206822e-05
        ],
        "align_select": "select flights.FlightNo",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "From Aberdeen what are the flight numbers of flights departing?",
        "gold_select": "select flights.FlightNo",
        "select_candidates": [
            "select flights.FlightNo",
            "select flights.FlightNo, airports.City",
            "select avg(flights.FlightNo)",
            "select flights.FlightNo (flights.Airline)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights"
        ],
        "align_scores": [
            0.9927557110786438,
            0.0031253835186362267,
            0.0002967901236843318,
            0.00011431821621954441,
            0.0004524420073721558,
            0.00017984047008212656,
            0.0004795906424988061,
            0.00011630020890152082
        ],
        "align_select": "select flights.FlightNo",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the flight numbers of flights departing from Aberdeen?",
        "gold_select": "select flights.FlightNo",
        "select_candidates": [
            "select flights.FlightNo",
            "select flights.FlightNo, airports.City",
            "select distinct flights.FlightNo",
            "select flights.FlightNo, airports.AirportName"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights",
            "airlines airports flights"
        ],
        "align_scores": [
            0.9908087253570557,
            0.0002102800935972482,
            0.00022570429428014904,
            5.611487358692102e-05,
            0.012258999980986118,
            0.0001309645886067301,
            0.00015154571156017482,
            5.641244206344709e-05
        ],
        "align_select": "select flights.FlightNo",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "For flights out of 'Aberdeen', what are the flight numbers?",
        "gold_select": "select flights.FlightNo",
        "select_candidates": [
            "select flights.FlightNo",
            "select flights.FlightNo, airports.AirportName",
            "select flights.FlightNo, airports.City",
            "select flights.FlightNo, airports.Country"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights"
        ],
        "align_scores": [
            0.994176983833313,
            0.0001787504443200305,
            0.0001808043452911079,
            6.674993346678093e-05,
            0.00026925111887976527,
            6.468639912782237e-05,
            0.0002542196598369628,
            6.0080812545493245e-05
        ],
        "align_select": "select flights.FlightNo",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the departure numbers of flights out of 'Aberdeen '?",
        "gold_select": "select flights.FlightNo",
        "select_candidates": [
            "select flights.FlightNo",
            "select flights.FlightNo, airports.City",
            "select flights.FlightNo, airports.AirportName",
            "select flights.FlightNo, airports.AirportCode"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights",
            "airlines airports flights"
        ],
        "align_scores": [
            0.5182893872261047,
            0.00012719188816845417,
            0.0002463488490320742,
            5.6103635870385915e-05,
            0.00016818512813188136,
            5.445201895781793e-05,
            0.00018372430349700153,
            5.850444358657114e-05
        ],
        "align_select": "select flights.FlightNo",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List the flight numbers of the departing flights from 'Aberdeen'.",
        "gold_select": "select flights.FlightNo",
        "select_candidates": [
            "select flights.FlightNo",
            "select distinct flights.FlightNo",
            "select flights.FlightNo, airports.City",
            "select flights.FlightNo, airports.AirportName"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights",
            "airlines airports flights"
        ],
        "align_scores": [
            0.9859334826469421,
            0.00012781804252881557,
            0.026222867891192436,
            9.39708188525401e-05,
            0.0001843310601543635,
            5.907245213165879e-05,
            0.00014640085282735527,
            5.7979701523436233e-05
        ],
        "align_select": "select flights.FlightNo",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the flight number of each flight that departs from 'Aberdeen'?",
        "gold_select": "select flights.FlightNo",
        "select_candidates": [
            "select flights.FlightNo",
            "select flights.FlightNo, airports.City",
            "select flights.FlightNo, airports.AirportName",
            "select flights.Airline, flights.FlightNo"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights",
            "airlines airports flights"
        ],
        "align_scores": [
            0.9874229431152344,
            0.00017139577539637685,
            0.0002219018351752311,
            6.346122245304286e-05,
            0.0001740890584187582,
            6.527332152472809e-05,
            0.0001897217589430511,
            8.58590574353002e-05
        ],
        "align_select": "select flights.FlightNo",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the flight numbers for flights departing from 'Aberdeen'?",
        "gold_select": "select flights.FlightNo",
        "select_candidates": [
            "select flights.FlightNo",
            "select flights.FlightNo, airports.City",
            "select flights.FlightNo, airports.AirportName",
            "select distinct flights.FlightNo"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights",
            "airlines airports flights"
        ],
        "align_scores": [
            0.9924691319465637,
            0.00019440158212091774,
            0.00019419722957536578,
            5.8113484556088224e-05,
            0.00013902413775213063,
            5.738327672588639e-05,
            0.010360859334468842,
            0.00010343347821617499
        ],
        "align_select": "select flights.FlightNo",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Of the flights going to 'Aberdeen', find the numbers of the flights.",
        "gold_select": "select flights.FlightNo",
        "select_candidates": [
            "select count(*)",
            "select flights.FlightNo",
            "select count(*), airports.City",
            "select count(*), flights.FlightNo"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights",
            "airlines airports flights"
        ],
        "align_scores": [
            0.9933651089668274,
            0.0008201559539884329,
            0.9928707480430603,
            0.0004376764118205756,
            0.000390014291042462,
            0.0004152363690081984,
            0.00035629639751277864,
            0.0022874465212225914
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "For the departures from 'Aberdeen'/ what are the flight numbers?",
        "gold_select": "select flights.FlightNo",
        "select_candidates": [
            "select flights.FlightNo",
            "select flights.FlightNo, airports.City",
            "select flights.FlightNo, airports.AirportName",
            "select distinct flights.FlightNo"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights",
            "airlines airports flights"
        ],
        "align_scores": [
            0.9350844621658325,
            0.00010697312245611101,
            0.0002195272099925205,
            6.0639376897597685e-05,
            0.00015808551688678563,
            5.9924426750512794e-05,
            0.0070262025110423565,
            0.00010330130317015573
        ],
        "align_select": "select flights.FlightNo",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the flight numbers of incoming flights to \"Aberdeen\".",
        "gold_select": "select flights.FlightNo",
        "select_candidates": [
            "select flights.FlightNo",
            "select flights.FlightNo, airports.City",
            "select flights.FlightNo, airports.AirportName",
            "select flights.FlightNo, airports.AirportCode"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights"
        ],
        "align_scores": [
            0.9903916120529175,
            0.0001164076165878214,
            0.00015916484699118882,
            5.471936674439348e-05,
            0.0001250619679922238,
            5.438305015559308e-05,
            0.00014155474491417408,
            5.6914755987236276e-05
        ],
        "align_select": "select flights.FlightNo",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the list of all flight paths arriving in Aberdeen?",
        "gold_select": "select flights.FlightNo",
        "select_candidates": [
            "select flights.FlightNo",
            "select flights.FlightNo, airports.AirportName",
            "select flights.FlightNo, airports.City",
            "select flights.FlightNo, flights.SourceAirport"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights",
            "airlines airports flights"
        ],
        "align_scores": [
            0.0038527967408299446,
            0.0002972017973661423,
            0.00014522986020892859,
            7.351972453761846e-05,
            0.0002424146659905091,
            7.349659426836297e-05,
            0.000199607849936001,
            7.487207767553627e-05
        ],
        "align_select": "select flights.FlightNo",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Of the flights into 'Aberdeen' what are their flight numbers?",
        "gold_select": "select flights.FlightNo",
        "select_candidates": [
            "select flights.FlightNo",
            "select distinct flights.FlightNo",
            "select flights.FlightNo, airports.AirportName",
            "select flights.Airline, flights.FlightNo"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights",
            "airlines airports flights"
        ],
        "align_scores": [
            0.9934762120246887,
            0.0057920850813388824,
            0.021981362253427505,
            0.00016587640857324004,
            0.00014717949670739472,
            0.0001143806948675774,
            0.00016718611004762352,
            0.0001185480723506771
        ],
        "align_select": "select flights.FlightNo",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the flight numbers of flights landing at 'Aberdeen'?",
        "gold_select": "select flights.FlightNo",
        "select_candidates": [
            "select flights.FlightNo",
            "select flights.FlightNo, airports.City",
            "select flights.FlightNo, airports.AirportName",
            "select distinct flights.FlightNo"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights",
            "airlines airports flights"
        ],
        "align_scores": [
            0.9873690009117126,
            0.0001794807321857661,
            0.0001700422290014103,
            5.666779907187447e-05,
            0.00016848203085828573,
            5.645688725053333e-05,
            0.014891834929585457,
            0.00012576827430166304
        ],
        "align_select": "select flights.FlightNo",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What's the flight number for incoming flights to Aberdeen?",
        "gold_select": "select flights.FlightNo",
        "select_candidates": [
            "select flights.FlightNo",
            "select flights.FlightNo, airports.City",
            "select flights.FlightNo, airports.AirportName",
            "select flights.FlightNo, airports.AirportCode"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights",
            "airlines airports flights"
        ],
        "align_scores": [
            0.9865005612373352,
            0.00012979397433809936,
            0.00021621045016217977,
            5.955935921519995e-05,
            0.00015223625814542174,
            6.214217137312517e-05,
            0.0003185511741321534,
            6.134364957688376e-05
        ],
        "align_select": "select flights.FlightNo",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the flight numbers for flights to Aberdeen.",
        "gold_select": "select flights.FlightNo",
        "select_candidates": [
            "select flights.FlightNo",
            "select distinct flights.FlightNo",
            "select flights.FlightNo, airports.City",
            "select unique flights.FlightNo"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights",
            "airlines airports flights"
        ],
        "align_scores": [
            0.9924019575119019,
            0.00020509019668679684,
            0.013309784233570099,
            0.0001064044117811136,
            0.00022898257884662598,
            5.826469714520499e-05,
            0.0006691007292829454,
            6.599786865990609e-05
        ],
        "align_select": "select flights.FlightNo",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the flight numbers coming into 'Aberdeen'?",
        "gold_select": "select flights.FlightNo",
        "select_candidates": [
            "select flights.FlightNo",
            "select flights.FlightNo, airports.AirportName",
            "select flights.FlightNo, airports.City",
            "select flights.FlightNo, airports.AirportCode"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights",
            "airlines airports flights"
        ],
        "align_scores": [
            0.9946942925453186,
            0.0001258719275938347,
            0.0001466565445298329,
            5.721546767745167e-05,
            0.0001920913637150079,
            5.8095320127904415e-05,
            0.0002030227769864723,
            5.8207388065056875e-05
        ],
        "align_select": "select flights.FlightNo",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the flight numbers of the flights arriving at 'Aberdeen'?",
        "gold_select": "select flights.FlightNo",
        "select_candidates": [
            "select flights.FlightNo",
            "select flights.FlightNo, airports.AirportName",
            "select flights.FlightNo, airports.City",
            "select distinct flights.FlightNo"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights",
            "airlines airports flights"
        ],
        "align_scores": [
            0.9748131036758423,
            0.0001389348180964589,
            0.00016482576029375196,
            5.5247630371013656e-05,
            0.000178750284248963,
            5.508533649845049e-05,
            0.018807049840688705,
            9.56534204306081e-05
        ],
        "align_select": "select flights.FlightNo",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the number of flights that landed in either Aberdeen or Abilene.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), airports.City",
            "select count(*), airports.City-Aberdeen, airports.City",
            "select count(*), airports.City-aberdeen, airports.City"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights"
        ],
        "align_scores": [
            0.993301510810852,
            0.00022987461125012487,
            0.00035981711698696017,
            0.004044633824378252,
            0.00014400477812159806,
            9.579352627042681e-05,
            0.00014400477812159806,
            9.579352627042681e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the total number of flights into either Abilene or Aberdeen?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), airports.City",
            "select count(*), airports.City, flights.FlightNo",
            "select count(*), airports.City, flights.SourceAirport"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights"
        ],
        "align_scores": [
            0.9948346614837646,
            0.0018455073004588485,
            0.0003680532390717417,
            0.0009127138182520866,
            0.0001345612108707428,
            8.839643123792484e-05,
            0.00014025619020685554,
            0.00014432976604439318
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which cities have more than 1 employee who is below 30 years old?",
        "gold_select": "select employee.City",
        "select_candidates": [
            "select employee.City",
            "select employee.City, count(*)",
            "select employee.City for employee.Age",
            "select count(*), employee.City"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY-HAVING",
            "SELECT-FROM-WHERE-GROUP BY-HAVING-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "employee",
        "table_candidates": [
            "employee"
        ],
        "align_scores": [
            0.9844467043876648,
            0.00012395238445606083,
            0.013071875087916851,
            8.416650234721601e-05,
            0.00026433615130372345,
            7.693989027757198e-05,
            0.0035671736113727093,
            7.84342919359915e-05
        ],
        "align_select": "select employee.City",
        "align_structure": "SELECT-FROM-WHERE-GROUP BY-HAVING"
    },
    {
        "question": "What's the list of cities, where at least two people are below thirty years old?",
        "gold_select": "select employee.City",
        "select_candidates": [
            "select employee.City",
            "select employee.City, employee.Age",
            "select employee.City, min(employee.Age)",
            "select employee.City, count(*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "employee",
        "table_candidates": [
            "employee"
        ],
        "align_scores": [
            0.7675461769104004,
            0.8398452401161194,
            0.00021865862072445452,
            0.0001773684489307925,
            0.00026759173488244414,
            0.000199790476472117,
            0.007820457220077515,
            0.002958482364192605
        ],
        "align_select": "select employee.City",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Which cities have more than one person under 30 years old?",
        "gold_select": "select employee.City",
        "select_candidates": [
            "select employee.City",
            "select employee.City, count(*)",
            "select employee.City Isogeographically-GROUP BY-HAVING",
            "select employee.City Isogeometrically-GROUP BY-HAVING"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "employee",
        "table_candidates": [
            "employee"
        ],
        "align_scores": [
            0.9731408953666687,
            0.9628547430038452,
            0.008056013844907284,
            0.03657100349664688,
            0.00025573905440978706,
            0.0003080360183957964,
            0.00036620255559682846,
            0.0005664932541549206
        ],
        "align_select": "select employee.City",
        "align_structure": "SELECT-FROM-WHERE-GROUP BY-HAVING"
    },
    {
        "question": "What is the document ID, Template ID and Description for 'Robbin CV'?",
        "gold_select": "select Documents.Document_ID, Documents.Template_ID, Documents.Document_Description",
        "select_candidates": [
            "select Documents.Document_ID, Documents.Template_ID, Documents.Document_Description",
            "select Documents.Document_ID, Documents.Template_ID, Documents.Document_Description.",
            "select Documents.Document_ID, Documents.Template_ID.c1, Documents.Document_Description",
            "select Documents.Document_ID, Documents.Template_ID & Documents.Document_Description"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents",
        "table_candidates": [
            "Documents",
            "Ref_Template_Types Documents",
            "Ref_Template_Types Templates Documents"
        ],
        "align_scores": [
            0.9957169890403748,
            0.00012035341205773875,
            0.001377201871946454,
            8.351037104148418e-05,
            0.0013963318197056651,
            8.306995732709765e-05,
            0.9108626842498779,
            8.270227408502251e-05
        ],
        "align_select": "select Documents.Document_ID, Documents.Template_ID, Documents.Document_Description",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the document id, template id and description for Robbin's CV.",
        "gold_select": "select Documents.Document_ID, Documents.Template_ID, Documents.Document_Description",
        "select_candidates": [
            "select Documents.Document_ID, Documents.Template_ID, Documents.Document_Description",
            "select Documents.Document_ID, Documents.Template_ID, Documents.Document_Description.",
            "select Documents.Document_ID, Documents.Template_ID.c1, Documents.Document_Description",
            "select Documents.Document_ID, Documents.Template_ID & Documents.Document_Description"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents",
        "table_candidates": [
            "Documents",
            "Ref_Template_Types Templates Documents",
            "Ref_Template_Types Documents",
            "Templates Documents"
        ],
        "align_scores": [
            0.9951463341712952,
            9.19229569262825e-05,
            0.0019350639777258039,
            6.751681939931586e-05,
            0.00529852882027626,
            7.711470243521035e-05,
            0.9596424698829651,
            7.72593411966227e-05
        ],
        "align_select": "select Documents.Document_ID, Documents.Template_ID, Documents.Document_Description",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return a template type code for the template assigned to data base?",
        "gold_select": "select Templates.Template_Type_Code",
        "select_candidates": [
            "select Templates.Template_Type_Code",
            "select Templates.Template_Type_Code, Templates.Date_Effective_From",
            "select Templates.Template_Type_Code (ref. Templates.Date_Effective_From)",
            "select Templates.Template_Type_Code, Templates.Template_Details"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates Documents",
        "table_candidates": [
            "Templates Documents",
            "Templates",
            "Ref_Template_Types Templates Documents"
        ],
        "align_scores": [
            0.9925481677055359,
            7.907754479674622e-05,
            0.0002245353680336848,
            6.346443115035072e-05,
            0.0004091933951713145,
            6.109518290031701e-05,
            0.00019902782514691353,
            6.879619468236342e-05
        ],
        "align_select": "select Templates.Template_Type_Code",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which template type description is associated with 'AD'?",
        "gold_select": "select Ref_Template_Types.Template_Type_Description",
        "select_candidates": [
            "select Ref_Template_Types.Template_Type_Description",
            "select Ref_Template_Types.Template_Type_Description, t0.c2",
            "select Ref_Template_Types.Template_Type_Description, Ref_Template_Types.Template_Type_Code",
            "select Ref_Template_Types.Template_Type_Description, t0.c3"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Ref_Template_Types",
        "table_candidates": [
            "Ref_Template_Types",
            "Ref_Template_Types Templates"
        ],
        "align_scores": [
            0.9959624409675598,
            8.098856778815389e-05,
            0.00030531806987710297,
            7.559856021543965e-05,
            0.00012044847244396806,
            6.811065395595506e-05,
            0.00034787587355822325,
            7.678881956962869e-05
        ],
        "align_select": "select Ref_Template_Types.Template_Type_Description",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the template type descriptors under \"AD\"?",
        "gold_select": "select Ref_Template_Types.Template_Type_Description",
        "select_candidates": [
            "select Ref_Template_Types.Template_Type_Description",
            "select Ref_Template_Types.Template_Type_Description, t0.c2",
            "select Ref_Template_Types.Template_Type_Code, Ref_Template_Types.Template_Type_Description",
            "select Ref_Template_Types.Template_Type_Description, Ref_Template_Types.Template_Type_Code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Ref_Template_Types",
        "table_candidates": [
            "Ref_Template_Types",
            "Ref_Template_Types Templates",
            "Ref_Template_Types Templates Documents"
        ],
        "align_scores": [
            0.9961870312690735,
            8.20877612568438e-05,
            0.0003138617321383208,
            7.24649362382479e-05,
            0.00015550862008240074,
            6.789250619476661e-05,
            0.00012863283336628228,
            6.72703463351354e-05
        ],
        "align_select": "select Ref_Template_Types.Template_Type_Description",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Count the number of paragraphs in the 'Summer Show.'",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Documents.Document_Name",
            "select count(*), Documents.Document_Name, Documents.Document_ID",
            "select count(*), Documents.Document_Name, Paragraphs.Paragraph_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents Paragraphs",
        "table_candidates": [
            "Documents Paragraphs",
            "Ref_Template_Types Documents Paragraphs",
            "Templates Documents Paragraphs"
        ],
        "align_scores": [
            0.9952835440635681,
            0.00019352218077983707,
            0.00021476832625921816,
            0.0002542065631132573,
            0.0001395274739479646,
            8.520158735336736e-05,
            0.0001068091150955297,
            8.861823880579323e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the number of paragraphs in Summer Show?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Documents.Document_Name",
            "select count(*), Documents.Document_ID",
            "select count(distinct Paragraphs.Paragraph_Text)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents Paragraphs",
        "table_candidates": [
            "Documents Paragraphs",
            "Ref_Template_Types Documents Paragraphs"
        ],
        "align_scores": [
            0.9951909780502319,
            8.807619451545179e-05,
            0.0002134874084731564,
            6.66777923470363e-05,
            0.0001727174239931628,
            6.970698450459167e-05,
            0.0005910032195970416,
            6.368996400851756e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many paragraphs have been given in the 'Summer Show'?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Documents.Document_ID",
            "select count(*), Documents.Document_Name",
            "select count(*), Documents.Template_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents Paragraphs",
        "table_candidates": [
            "Documents Paragraphs",
            "Ref_Template_Types Documents Paragraphs",
            "Templates Documents Paragraphs"
        ],
        "align_scores": [
            0.9910534024238586,
            0.0001335478009423241,
            0.00021197648311499506,
            9.34632116695866e-05,
            0.0002539139532018453,
            0.00010041826317319646,
            0.00022803721367381513,
            0.0001109250879380852
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the ids of the documents that contain both 'Ireland' and 'Brazil'.",
        "gold_select": "select Paragraphs.Document_ID",
        "select_candidates": [
            "select Paragraphs.Document_ID",
            "select Documents.Document_ID",
            "select Paragraphs.Paragraph_ID",
            "select Paragraphs.Document_ID, Paragraphs.Paragraph_Text"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-GROUP BY-HAVING-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Paragraphs",
        "table_candidates": [
            "Paragraphs",
            "Documents Paragraphs",
            "Templates Paragraphs",
            "Templates Documents Paragraphs"
        ],
        "align_scores": [
            0.9940230250358582,
            0.026571379974484444,
            0.9951531887054443,
            0.004210430663079023,
            0.9943363070487976,
            0.03696046024560928,
            0.0001585072313901037,
            0.00010343702888349071
        ],
        "align_select": "select Paragraphs.Document_ID",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "Find documents that have 'Brazil', and also are 'Ireland'.",
        "gold_select": "select Paragraphs.Document_ID",
        "select_candidates": [
            "select Documents.Document_Name",
            "select Paragraphs.Document_ID",
            "select Paragraphs.Paragraph_Text",
            "select Documents.Document_Name, Documents.Document_Description"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "Paragraphs",
        "table_candidates": [
            "Paragraphs",
            "Documents Paragraphs",
            "Templates Documents Paragraphs",
            "Templates Paragraphs"
        ],
        "align_scores": [
            0.994834303855896,
            0.994834303855896,
            0.9846839308738708,
            0.9846839308738708,
            0.993965208530426,
            0.993965208530426,
            0.0003776786325033754,
            0.0003776786325033754
        ],
        "align_select": "select Documents.Document_Name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "Show the names of teachers in their 32's or 33's?",
        "gold_select": "select teacher.Name",
        "select_candidates": [
            "select teacher.Name",
            "select teacher.Name, teacher.Age",
            "select teacher.Name, teacher.Hometown",
            "select teacher.Name (or teacher.Hometown)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher",
        "table_candidates": [
            "teacher"
        ],
        "align_scores": [
            0.9935954213142395,
            0.0003262261161580682,
            0.00014972728968132287,
            6.74742623232305e-05,
            0.00015198418986983597,
            7.80985938035883e-05,
            0.008693481795489788,
            0.00010071054566651583
        ],
        "align_select": "select teacher.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show names of teachers who are 32 and 33 years old.",
        "gold_select": "select teacher.Name",
        "select_candidates": [
            "select teacher.Name",
            "select teacher.Name, teacher.Age",
            "select teacher.Name, teacher.Hometown",
            "select teacher.Name and teacher.Age"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "teacher",
        "table_candidates": [
            "teacher"
        ],
        "align_scores": [
            0.9955136179924011,
            0.0007611248292960227,
            0.000148846855154261,
            6.550634861923754e-05,
            0.0001725506444927305,
            8.087095920927823e-05,
            0.0002052678173640743,
            6.638695049332455e-05
        ],
        "align_select": "select teacher.Name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "List of all teachers who are either 32 or 33 years old.",
        "gold_select": "select teacher.Name",
        "select_candidates": [
            "select teacher.Name",
            "select teacher.Name, teacher.Age",
            "select teacher.Name, teacher.Hometown",
            "select teacher.Name ou teacher.Hometown"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher",
        "table_candidates": [
            "teacher"
        ],
        "align_scores": [
            0.9641119837760925,
            0.001795448362827301,
            0.00021614631987176836,
            8.361524669453502e-05,
            0.00019507987599354237,
            0.00011801493383245543,
            0.0004931259900331497,
            0.00015370699111372232
        ],
        "align_select": "select teacher.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show the names of teachers who are either 32 or 33 years old?",
        "gold_select": "select teacher.Name",
        "select_candidates": [
            "select teacher.Name",
            "select teacher.Name, teacher.Age",
            "select teacher.Name, teacher.Hometown",
            "select teacher.Name (or teacher.Hometown)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher",
        "table_candidates": [
            "teacher"
        ],
        "align_scores": [
            0.9894515872001648,
            0.0012223974335938692,
            0.00017779682821128517,
            7.797336002113298e-05,
            0.0001880717754829675,
            9.839217091212049e-05,
            0.006438541691750288,
            0.0001361175673082471
        ],
        "align_select": "select teacher.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of the teachers who are either 32 years old or 33 years old?",
        "gold_select": "select teacher.Name",
        "select_candidates": [
            "select teacher.Name",
            "select teacher.Name, teacher.Age",
            "select teacher.Name, teacher.Hometown",
            "select teacher.Name ou teacher.Hometown"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher",
        "table_candidates": [
            "teacher"
        ],
        "align_scores": [
            0.991158664226532,
            0.005586740095168352,
            0.00015312228060793132,
            7.670275226701051e-05,
            0.00017828437557909638,
            0.00010425854270579293,
            0.00033022070419974625,
            9.511976531939581e-05
        ],
        "align_select": "select teacher.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of the teachers who are 33 years old?",
        "gold_select": "select teacher.Name",
        "select_candidates": [
            "select teacher.Name",
            "select teacher.Name, teacher.Age",
            "select teacher.Name, teacher.Hometown",
            "select teacher.Name, teacher.Age, teacher.Hometown"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher",
        "table_candidates": [
            "teacher"
        ],
        "align_scores": [
            0.9910003542900085,
            0.0001656984240980819,
            0.00014960912812966853,
            5.564031744142994e-05,
            0.00015416274254675955,
            6.481217133114114e-05,
            0.0001495988544775173,
            5.4386113333748654e-05
        ],
        "align_select": "select teacher.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the names of teachers who are either 32 or 33 years old.",
        "gold_select": "select teacher.Name",
        "select_candidates": [
            "select teacher.Name",
            "select teacher.Name, teacher.Age",
            "select teacher.Name, teacher.Hometown",
            "select teacher.Name or teacher.Hometown"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher",
        "table_candidates": [
            "teacher"
        ],
        "align_scores": [
            0.9851084351539612,
            0.0019326470792293549,
            0.00017554695659782737,
            7.543882384197786e-05,
            0.00018100306624546647,
            9.610893175704405e-05,
            0.0005445442511700094,
            0.00010061129432870075
        ],
        "align_select": "select teacher.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of the teachers who are either 32 or 33 years old?",
        "gold_select": "select teacher.Name",
        "select_candidates": [
            "select teacher.Name",
            "select teacher.Name, teacher.Age",
            "select teacher.Name, teacher.Hometown",
            "select teacher.Name or teacher.Hometown"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher",
        "table_candidates": [
            "teacher"
        ],
        "align_scores": [
            0.9889418482780457,
            0.0006801733397878706,
            0.00016616136417724192,
            6.81124729453586e-05,
            0.0001904062373796478,
            8.003212133189663e-05,
            0.00039103676681406796,
            8.775369497016072e-05
        ],
        "align_select": "select teacher.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the name of the teacher for the Math?",
        "gold_select": "select teacher.Name",
        "select_candidates": [
            "select teacher.Name",
            "select teacher.Name, course.Course",
            "select teacher.Name, teacher.Age",
            "select teacher.Name, course.Course, teacher.Hometown"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "course teacher course_arrange",
        "table_candidates": [
            "course teacher course_arrange",
            "course teacher"
        ],
        "align_scores": [
            0.9919440746307373,
            7.130856101866812e-05,
            0.00014171114889904857,
            5.728310497943312e-05,
            0.00016246740415226668,
            5.337749098544009e-05,
            0.00018130570242647082,
            5.9439636970637366e-05
        ],
        "align_select": "select teacher.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Who teaches math?",
        "gold_select": "select teacher.Name",
        "select_candidates": [
            "select teacher.Name",
            "select distinct teacher.Name",
            "select teacher.Name, course.Course",
            "select distinct teacher.Name, course.Course"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "course teacher course_arrange",
        "table_candidates": [
            "course teacher",
            "course teacher course_arrange",
            "course teacher course_arrange"
        ],
        "align_scores": [
            0.995680570602417,
            0.00010895008745137602,
            0.22913257777690887,
            0.0001479089551139623,
            0.00014160039427224547,
            6.070001109037548e-05,
            0.00029297955916263163,
            6.647804548265412e-05
        ],
        "align_select": "select teacher.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Who is the teacher of math?",
        "gold_select": "select teacher.Name",
        "select_candidates": [
            "select teacher.Name",
            "select teacher.Name, course.Course",
            "select teacher.Name, teacher.Age",
            "select teacher.Name, teacher.Hometown"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "course teacher course_arrange",
        "table_candidates": [
            "course teacher",
            "course teacher course_arrange"
        ],
        "align_scores": [
            0.9949585795402527,
            8.340650674654171e-05,
            0.00014827131235506386,
            5.6635381042724475e-05,
            0.00014805713726673275,
            5.574291935772635e-05,
            0.00021165538055356592,
            6.573545397259295e-05
        ],
        "align_select": "select teacher.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What's the name of the teacher for math?",
        "gold_select": "select teacher.Name",
        "select_candidates": [
            "select teacher.Name",
            "select teacher.Name, course.Course",
            "select teacher.Name, course.Course, teacher.Hometown",
            "select teacher.Name, teacher.Age"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "course teacher course_arrange",
        "table_candidates": [
            "course teacher",
            "course teacher course_arrange"
        ],
        "align_scores": [
            0.9947913885116577,
            8.252910629380494e-05,
            0.00014144925808068365,
            5.783761298516765e-05,
            0.00016631813195999712,
            5.877694638911635e-05,
            0.0001455104211345315,
            5.562222213484347e-05
        ],
        "align_select": "select teacher.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which teacher teaches math?",
        "gold_select": "select teacher.Name",
        "select_candidates": [
            "select teacher.Name",
            "select distinct teacher.Name",
            "select teacher.Name, teacher.Teacher_ID",
            "select teacher.Name, teacher.Age"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "course teacher course_arrange",
        "table_candidates": [
            "course teacher course_arrange",
            "course teacher"
        ],
        "align_scores": [
            0.9938556551933289,
            8.336580503964797e-05,
            0.18072764575481415,
            0.00012727087596431375,
            0.00016504150698892772,
            6.520595343317837e-05,
            0.00014021515380591154,
            5.823814353789203e-05
        ],
        "align_select": "select teacher.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Of those teaching mathematics, what are their names?",
        "gold_select": "select teacher.Name",
        "select_candidates": [
            "select teacher.Name",
            "select distinct teacher.Name",
            "select teacher.Name, teacher.Age",
            "select teacher.Name, teacher.Hometown"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "course teacher course_arrange",
        "table_candidates": [
            "teacher course_arrange",
            "teacher"
        ],
        "align_scores": [
            0.9930036664009094,
            0.0001107154312194325,
            0.05457857996225357,
            0.00013419460447039455,
            0.00013586546992883086,
            5.688436795026064e-05,
            0.0001938904752023518,
            6.761790427844971e-05
        ],
        "align_select": "select teacher.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List the names of the people that teach math.",
        "gold_select": "select teacher.Name",
        "select_candidates": [
            "select teacher.Name",
            "select distinct teacher.Name",
            "select distinct teacher.Name, course.Course",
            "select unique teacher.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "course teacher course_arrange",
        "table_candidates": [
            "course teacher",
            "course teacher course_arrange"
        ],
        "align_scores": [
            0.9928845763206482,
            0.00010881490743486211,
            0.09246039390563965,
            9.540663450025022e-05,
            0.00025313778314739466,
            5.6856490118661895e-05,
            0.003371619153767824,
            7.585086132166907e-05
        ],
        "align_select": "select teacher.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of the teachers who teach math?",
        "gold_select": "select teacher.Name",
        "select_candidates": [
            "select teacher.Name",
            "select distinct teacher.Name",
            "select teacher.Name, course.Course",
            "select teacher.Name, teacher.Age"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "course teacher course_arrange",
        "table_candidates": [
            "course teacher",
            "course teacher course_arrange"
        ],
        "align_scores": [
            0.9892102479934692,
            0.00010361642489442602,
            0.08394306153059006,
            9.300339297624305e-05,
            0.0001384888164466247,
            5.4980479035293683e-05,
            0.00014424060645978898,
            5.595221955445595e-05
        ],
        "align_select": "select teacher.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Name of people teaching mathematics?",
        "gold_select": "select teacher.Name",
        "select_candidates": [
            "select teacher.Name",
            "select distinct teacher.Name",
            "select teacher.Name, teacher.Age",
            "select teacher.Name, teacher.Hometown"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "course teacher course_arrange",
        "table_candidates": [
            "teacher",
            "teacher course_arrange"
        ],
        "align_scores": [
            0.9942933917045593,
            0.092109814286232,
            0.06554429233074188,
            0.0003904227924067527,
            0.00011734355939552188,
            0.00014153883967082947,
            0.00015112000983208418,
            0.0002270782133564353
        ],
        "align_select": "select teacher.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the visitors below 30.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select visitor.ID",
            "select visitor.ID, visitor.Age",
            "select min(visitor.Age)",
            "select visitor.ID, visitor.Name"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "visitor",
        "table_candidates": [
            "visitor"
        ],
        "align_scores": [
            0.032366491854190826,
            0.0009268125868402421,
            0.0001915932516567409,
            9.62100675678812e-05,
            0.0018093030666932464,
            0.00011507638555485755,
            0.0005823119427077472,
            0.00011346005339873955
        ],
        "align_select": "select visitor.ID",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many visitors under 30 years old are there?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), visitor.ID",
            "select count(*), visitor.Age",
            "select count(*), visitor.ID3"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "visitor",
        "table_candidates": [
            "visitor",
            "visitor visit"
        ],
        "align_scores": [
            0.9928455948829651,
            0.0008333923178724945,
            0.00034954489092342556,
            0.00027192194829694927,
            0.000370610534446314,
            0.17053991556167603,
            0.0003042472817469388,
            0.00020744925132021308
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many under-30-year-olds visited the site?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), visitor.ID",
            "select count(*), visitor.Age",
            "select count(*), visitor.ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "visitor",
        "table_candidates": [
            "visitor visit"
        ],
        "align_scores": [
            0.9915340542793274,
            0.0010185567662119865,
            0.0003093633276876062,
            0.00034150315332226455,
            0.00047297976561821997,
            0.024304000660777092,
            0.0003093633276876062,
            0.00034150315332226455
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many visitors under 30?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), visitor.ID",
            "select count(*), visitor.Age",
            "select count(*),"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "visitor",
        "table_candidates": [
            "visitor",
            "visitor visit"
        ],
        "align_scores": [
            0.9953943490982056,
            0.00046127731911838055,
            0.0002655843272805214,
            0.0004622740380000323,
            0.0003228511777706444,
            0.3264433741569519,
            0.0006509998347610235,
            0.5494300723075867
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find visitors under 30",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select visitor.ID",
            "select visitor.ID, visitor.Age",
            "select visitor.Name",
            "select visitor.Age"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "visitor",
        "table_candidates": [
            "visitor",
            "visitor visit"
        ],
        "align_scores": [
            0.007744506932795048,
            0.0010867801029235125,
            0.0002513894869480282,
            0.0001161242471425794,
            0.023985829204320908,
            0.000621525221504271,
            0.17527753114700317,
            0.00037790442002005875
        ],
        "align_select": "select visitor.ID",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What was the opening year and staff number at the Plaza Museum?",
        "gold_select": "select museum.Num_of_Staff, museum.Open_Year",
        "select_candidates": [
            "select museum.Open_Year, museum.Num_of_Staff",
            "select museum.Name, museum.Num_of_Staff",
            "select museum.Num_of_Staff, museum.Open_Year",
            "select museum.Museum_ID, museum.Open_Year"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "museum",
        "table_candidates": [
            "museum"
        ],
        "align_scores": [
            0.9952389001846313,
            8.729090041015297e-05,
            0.0013631980400532484,
            0.00011697209265548736,
            0.9954016208648682,
            8.113063086057082e-05,
            0.0003993113059550524,
            8.55471080285497e-05
        ],
        "align_select": "select museum.Open_Year, museum.Num_of_Staff",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "In Plaza Museum, what is the opening year and the number of staff?",
        "gold_select": "select museum.Num_of_Staff, museum.Open_Year",
        "select_candidates": [
            "select museum.Open_Year, museum.Num_of_Staff",
            "select museum.Name, museum.Open_Year, museum.Num_of_Staff",
            "select museum.Museum_ID, museum.Name, museum.Num_of_Staff",
            "select museum.Name, museum.Num_of_Staff"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "museum",
        "table_candidates": [
            "museum"
        ],
        "align_scores": [
            0.9952930808067322,
            7.081442890921608e-05,
            0.00017428374849259853,
            6.317645602393895e-05,
            0.00033513823291286826,
            7.795841520419344e-05,
            0.0008493803907185793,
            9.260445222025737e-05
        ],
        "align_select": "select museum.Open_Year, museum.Num_of_Staff",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What has been the opening date and the number of the employees working at the 'Plaza Museum'.",
        "gold_select": "select museum.Num_of_Staff, museum.Open_Year",
        "select_candidates": [
            "select museum.Open_Year, museum.Num_of_Staff",
            "select museum.Museum_ID, museum.Open_Year, museum.Num_of_Staff",
            "select museum.Name, museum.Open_Year, museum.Num_of_Staff",
            "select museum.Name, museum.Num_of_Staff"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "museum",
        "table_candidates": [
            "museum"
        ],
        "align_scores": [
            0.9905616641044617,
            0.0001264595048269257,
            0.0002274628495797515,
            8.070146577665582e-05,
            0.0002478098904248327,
            7.468965486623347e-05,
            0.0008813483291305602,
            0.00011897717922693118
        ],
        "align_select": "select museum.Open_Year, museum.Num_of_Staff",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find opening in year and staff number related to Plaza Museum.",
        "gold_select": "select museum.Num_of_Staff, museum.Open_Year",
        "select_candidates": [
            "select museum.Open_Year, museum.Num_of_Staff",
            "select museum.Name, museum.Open_Year, museum.Num_of_Staff",
            "select museum.Museum_ID, museum.Open_Year, museum.Num_of_Staff",
            "select museum.Name, museum.Num_of_Staff"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "museum",
        "table_candidates": [
            "museum"
        ],
        "align_scores": [
            0.9911141991615295,
            8.43340894789435e-05,
            0.0001815662399167195,
            7.224504224723205e-05,
            0.00016237417003139853,
            7.506859401473776e-05,
            0.0012306824792176485,
            0.00012908229837194085
        ],
        "align_select": "select museum.Open_Year, museum.Num_of_Staff",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many players were part of all matches that were played in 2013 or 2016?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(distinct matches.loser_id)",
            "select count(distinct matches.loser_age)",
            "select count(distinct matches.loser_name)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "matches",
        "table_candidates": [
            "matches"
        ],
        "align_scores": [
            0.7314522862434387,
            8.435564086539671e-05,
            0.026032783091068268,
            9.874078386928886e-05,
            0.0005554506205953658,
            6.481037416961044e-05,
            0.019648311659693718,
            7.432615529978648e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Of all players who played in 2013 or 2016, list the number of them.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), matches.loser_id",
            "select count(*), matches.best_of",
            "select count(*), matches.winner_hand"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "matches",
        "table_candidates": [
            "matches",
            "players matches",
            "matches rankings",
            "matches players matches",
            "players matches rankings"
        ],
        "align_scores": [
            0.8366003036499023,
            0.00043733068741858006,
            0.00022733451623935252,
            0.001247551990672946,
            0.00028135403408668935,
            0.00021848981850780547,
            0.00026470812736079097,
            0.000279189640423283
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List name and date the battle of the lost of Lettice and the HMS Atalanta.",
        "gold_select": "select battle.name, battle.date",
        "select_candidates": [
            "select battle.name, battle.date",
            "select battle.name, battle.date, ship.lost_in_battle",
            "select battle.name, battle.date, ship.name",
            "select battle.name, battle.date - ship.lost_in_battle"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "battle ship",
        "table_candidates": [
            "battle ship",
            "battle ship death"
        ],
        "align_scores": [
            0.9936500191688538,
            0.00022859120508655906,
            0.00028103665681555867,
            7.125004049157724e-05,
            0.00035352769191376865,
            7.906600512797013e-05,
            0.0006851836806163192,
            8.530914783477783e-05
        ],
        "align_select": "select battle.name, battle.date",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What's the zip code of the address in Port Chelsea?",
        "gold_select": "select Addresses.zip_postcode",
        "select_candidates": [
            "select Addresses.zip_postcode",
            "select Addresses.zip_postcode, Addresses.state_province_county",
            "select Addresses.zip_postcode, Addresses.other_address_details",
            "select Addresses.zip_postcode, Addresses.city"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Addresses",
        "table_candidates": [
            "Addresses",
            "Addresses Transcripts"
        ],
        "align_scores": [
            0.9923205971717834,
            0.0001185907021863386,
            0.00029489584267139435,
            6.361960549838841e-05,
            0.0001969800068764016,
            5.777922706329264e-05,
            0.00019613663607742637,
            5.705581861548126e-05
        ],
        "align_select": "select Addresses.zip_postcode",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Where is the zip code of the address in Port Chelsea?",
        "gold_select": "select Addresses.zip_postcode",
        "select_candidates": [
            "select Addresses.zip_postcode",
            "select Addresses.zip_postcode, Addresses.state_province_county",
            "select Addresses.zip_postcode, Addresses.city",
            "select Addresses.zip_postcode, Addresses.other_address_details"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Addresses",
        "table_candidates": [
            "Addresses",
            "Addresses Transcripts"
        ],
        "align_scores": [
            0.994528591632843,
            0.00011011864989995956,
            0.0002830976736731827,
            6.621883221669123e-05,
            0.0001728813658701256,
            5.710187542717904e-05,
            0.0001866636157501489,
            5.767661423305981e-05
        ],
        "align_select": "select Addresses.zip_postcode",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What's the zip code for the address in Port Chelsea?",
        "gold_select": "select Addresses.zip_postcode",
        "select_candidates": [
            "select Addresses.zip_postcode",
            "select Addresses.zip_postcode, Addresses.city",
            "select Addresses.zip_postcode, Addresses.state_province_county",
            "select Addresses.zip_postcode, Addresses.country"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Addresses",
        "table_candidates": [
            "Addresses",
            "Addresses Transcripts"
        ],
        "align_scores": [
            0.9922119379043579,
            0.00012049350334564224,
            0.00019217070075683296,
            5.79517254664097e-05,
            0.00028147935518063605,
            6.453057721955702e-05,
            0.00018869794439524412,
            5.9145339037058875e-05
        ],
        "align_select": "select Addresses.zip_postcode",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the phone number for Timmothy Ward?",
        "gold_select": "select Students.cell_mobile_number",
        "select_candidates": [
            "select Students.cell_mobile_number",
            "select Students.cell_mobile_number, Students.email_address",
            "select Students.cell_mobile_number, Students.last_name",
            "select Students.cell_mobile_number, Students.date_first_registered"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Students",
        "table_candidates": [
            "Students",
            "Addresses Students",
            "Students Student_Enrolment_Courses",
            "Students Student_Enrolment",
            "Semesters Students",
            "Degree_Programs Students",
            "Sections Students",
            "Courses Students"
        ],
        "align_scores": [
            0.9929123520851135,
            0.00011419379734434187,
            0.000179788374225609,
            7.751998782623559e-05,
            0.000129318970721215,
            6.266428681556135e-05,
            0.0001448926341254264,
            6.008666241541505e-05
        ],
        "align_select": "select Students.cell_mobile_number",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the phone number of Timmothy Ward.",
        "gold_select": "select Students.cell_mobile_number",
        "select_candidates": [
            "select Students.cell_mobile_number",
            "select Students.cell_mobile_number, Students.email_address",
            "select Students.cell_mobile_number, Students.last_name",
            "select Students.cell_mobile_number, Students.date_first_registered"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Students",
        "table_candidates": [
            "Students",
            "Addresses Students",
            "Students Student_Enrolment",
            "Students Student_Enrolment_Courses",
            "Semesters Students",
            "Degree_Programs Students",
            "Sections Students",
            "Courses Students"
        ],
        "align_scores": [
            0.9928007125854492,
            9.659119677962735e-05,
            0.00014668310177512467,
            6.045525151421316e-05,
            0.0001301166630582884,
            5.851855894434266e-05,
            0.00014652012032456696,
            5.5757111113052815e-05
        ],
        "align_select": "select Students.cell_mobile_number",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What does the section h describe?",
        "gold_select": "select Sections.section_description",
        "select_candidates": [
            "select Sections.section_description",
            "select Sections.section_description, Sections.section_name",
            "select Sections.section_description, Sections.other_details",
            "select Sections.section_name, Sections.section_description"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Sections",
        "table_candidates": [
            "Sections",
            "Departments Sections",
            "Degree_Programs Sections",
            "Addresses Courses Departments Sections",
            "Addresses Sections",
            "Addresses Courses Sections",
            "Addresses Departments Sections",
            "Addresses Courses Degree_Programs Sections"
        ],
        "align_scores": [
            0.9958547949790955,
            7.412422564812005e-05,
            0.00017670974193606526,
            5.8966310461983085e-05,
            0.0002153210953110829,
            5.884446727577597e-05,
            0.00017092149937525392,
            6.027506969985552e-05
        ],
        "align_select": "select Sections.section_description",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "In section \"h\" what is the description?",
        "gold_select": "select Sections.section_description",
        "select_candidates": [
            "select Sections.section_description",
            "select Sections.section_description, Sections.other_details",
            "select Sections.section_description, Sections.section_name",
            "select Sections.section_description, t4.c6"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Sections",
        "table_candidates": [
            "Sections",
            "Departments Sections",
            "Degree_Programs Sections",
            "Courses Sections",
            "Addresses Courses Sections",
            "Addresses Courses Departments Sections",
            "Addresses Courses Degree_Programs Sections",
            "Addresses Sections"
        ],
        "align_scores": [
            0.9961273074150085,
            6.216835754457861e-05,
            0.00016573145694565028,
            5.4440177336800843e-05,
            0.00014255536370910704,
            5.4489835747517645e-05,
            0.00030308033456094563,
            6.931331881787628e-05
        ],
        "align_select": "select Sections.section_description",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the description of the 'h' section?",
        "gold_select": "select Sections.section_description",
        "select_candidates": [
            "select Sections.section_description",
            "select Sections.section_description, Sections.other_details",
            "select Sections.section_description, Sections.section_name",
            "select Sections.section_description, t4.c6"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Sections",
        "table_candidates": [
            "Sections",
            "Departments Sections",
            "Degree_Programs Sections",
            "Addresses Courses Sections",
            "Addresses Sections",
            "Courses Sections",
            "Departments Degree_Programs Sections",
            "Addresses Departments Sections"
        ],
        "align_scores": [
            0.9964314699172974,
            7.473667938029394e-05,
            0.00017518308595754206,
            5.857763608219102e-05,
            0.0001573360204929486,
            6.0389036661945283e-05,
            0.0003856307012028992,
            7.728741184109822e-05
        ],
        "align_select": "select Sections.section_description",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the first name of students who live in Haiti or have cell phone number 09700166582.",
        "gold_select": "select Students.first_name",
        "select_candidates": [
            "select Students.first_name",
            "select Students.first_name, Students.last_name",
            "select Students.first_name, Students.middle_name, Students.cell_mobile_number",
            "select Students.first_name, Students.middle_name, Students.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Addresses Students",
        "table_candidates": [
            "Addresses Students",
            "Addresses Students Student_Enrolment",
            "Addresses Students Student_Enrolment_Courses",
            "Addresses Semesters Students",
            "Addresses Courses Students"
        ],
        "align_scores": [
            0.9633126258850098,
            0.9910615086555481,
            0.00015105951752047986,
            0.00013108228449709713,
            0.0001525882544228807,
            0.00011842999811051413,
            0.0002111758221872151,
            0.00017491036851424724
        ],
        "align_select": "select Students.first_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the first name of students living in Haiti or having the cell phone number 09700166582.",
        "gold_select": "select Students.first_name",
        "select_candidates": [
            "select Students.first_name",
            "select Students.first_name, Students.last_name",
            "select Students.first_name, Students.middle_name, Students.cell_mobile_number",
            "select Students.first_name, Students.middle_name, Students.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Addresses Students",
        "table_candidates": [
            "Addresses Students",
            "Addresses Students Student_Enrolment",
            "Addresses Students Student_Enrolment_Courses",
            "Addresses Semesters Students",
            "Addresses Courses Students"
        ],
        "align_scores": [
            0.9821688532829285,
            0.9065746665000916,
            0.00013846610090695322,
            9.710854646982625e-05,
            0.00013439360191114247,
            8.677591540617868e-05,
            0.00019821198657155037,
            0.00012237418559379876
        ],
        "align_select": "select Students.first_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the first name of the student who lives in Haiti or has the cell phone number 09700166582.",
        "gold_select": "select Students.first_name",
        "select_candidates": [
            "select Students.first_name",
            "select Students.first_name, Students.last_name",
            "select Students.first_name, Students.middle_name, Students.cell_mobile_number",
            "select Students.first_name, Students.middle_name, Students.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Addresses Students",
        "table_candidates": [
            "Addresses Students",
            "Addresses Students Student_Enrolment",
            "Addresses Students Student_Enrolment_Courses"
        ],
        "align_scores": [
            0.7777206301689148,
            0.9912216663360596,
            0.00014378414198290557,
            0.00012656445323955268,
            0.00014626383199356496,
            0.00011546636233106256,
            0.00023297208826988935,
            0.00018734403420239687
        ],
        "align_select": "select Students.first_name",
        "align_structure": "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the package options of TV channels 'Sky radio'?",
        "gold_select": "select TV_Channel.Package_Option",
        "select_candidates": [
            "select TV_Channel.Package_Option",
            "select TV_Channel.Package_Option, TV_Channel.series_name",
            "select TV_Channel.Hight_definition_TV, TV_Channel.Package_Option",
            "select TV_Channel.Pay_per_view_PPV, TV_Channel.Package_Option"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel"
        ],
        "align_scores": [
            0.9954698085784912,
            8.413632895098999e-05,
            0.00011669635568978265,
            6.177648901939392e-05,
            0.0002020872343564406,
            6.101519102230668e-05,
            0.00025200765230692923,
            7.214694051072001e-05
        ],
        "align_select": "select TV_Channel.Package_Option",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "In which TV channels is English used?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select TV_Channel.id",
            "select TV_Channel.series_name",
            "select distinct TV_Channel.id",
            "select TV_Channel.id, TV_Channel.Language"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel"
        ],
        "align_scores": [
            0.0021547996439039707,
            0.0001480794308008626,
            0.03246324509382248,
            8.791282016318291e-05,
            0.1138199046254158,
            0.00019029842223972082,
            0.00017632736125960946,
            6.266141281230375e-05
        ],
        "align_select": "select TV_Channel.id",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which TV channel is English?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select TV_Channel.id",
            "select TV_Channel.series_name",
            "select TV_Channel.Content",
            "select TV_Channel.Country"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel"
        ],
        "align_scores": [
            0.001743398723192513,
            8.483238343615085e-05,
            0.0005991179496049881,
            6.288128497544676e-05,
            0.003175341058522463,
            6.782424316043034e-05,
            0.004653859417885542,
            9.855414828052744e-05
        ],
        "align_select": "select TV_Channel.id",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "For channels that use English, how many are there?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), TV_Channel.Language",
            "select count(*), TV_Channel.Language, TV_Channel.Content",
            "select count(*), TV_Channel.Language, TV_Channel.Country"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel"
        ],
        "align_scores": [
            0.9942613840103149,
            0.00030726814293302596,
            0.0003094400162808597,
            0.0001525083789601922,
            0.00010308206401532516,
            6.585874507436529e-05,
            0.00010327884956495836,
            6.3535881054122e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many TV Channels use english?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), TV_Channel.Language",
            "select count(*), TV_Channel.Language, TV_Channel.Content",
            "select count(*) the SELECT-FROM-WHERE"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel"
        ],
        "align_scores": [
            0.994468092918396,
            0.000399633077904582,
            0.0002720689808484167,
            0.00019718184194061905,
            9.788505121832713e-05,
            6.978946476010606e-05,
            0.0004958069184795022,
            0.000125736856716685
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the number of TV channels using English?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), TV_Channel.Language",
            "select count(*), TV_Channel.Language, TV_Channel.Content",
            "select count(*), TV_Channel.Language, TV_Channel.Country"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel"
        ],
        "align_scores": [
            0.9947593808174133,
            6.169499829411507e-05,
            0.00023483112454414368,
            6.26604596618563e-05,
            0.0001042215881170705,
            5.380612128647044e-05,
            0.00010340951121179387,
            5.178439459996298e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many channels in TV use English?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), TV_Channel.Language",
            "select count(*), TV_Channel.Language, TV_Channel.Content",
            "select count(distinct TV_Channel.id)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel"
        ],
        "align_scores": [
            0.9938499331474304,
            0.00011677805741783231,
            0.0002721509663388133,
            8.834958134684712e-05,
            9.824283188208938e-05,
            5.4860651289345697e-05,
            0.003230894450098276,
            6.0914211644558236e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of all the cartoons that air on the TV channel 'Sky Radio'?",
        "gold_select": "select Cartoon.Title",
        "select_candidates": [
            "select Cartoon.Title",
            "select Cartoon.Title, TV_Channel.series_name",
            "select Cartoon.Title, Cartoon.Channel",
            "select Cartoon.Title, Cartoon.Directed_by"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel TV_series Cartoon",
            "TV_Channel Cartoon"
        ],
        "align_scores": [
            0.36566996574401855,
            0.0001323745382251218,
            0.0003495713754091412,
            6.619775376748294e-05,
            0.000182639982085675,
            5.8166773669654503e-05,
            0.00019123700622003525,
            5.947286990704015e-05
        ],
        "align_select": "select Cartoon.Title",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Of the channels running 'Sky Radio' what is the title of every cartoon playing?",
        "gold_select": "select Cartoon.Title",
        "select_candidates": [
            "select Cartoon.Title",
            "select Cartoon.Title, TV_Channel.series_name",
            "select Cartoon.Title, TV_Channel.Country",
            "select Cartoon.Title, TV_Channel.Pixel_aspect_ratio_PAR"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel Cartoon",
            "TV_Channel TV_series Cartoon"
        ],
        "align_scores": [
            0.9750121831893921,
            0.00011313929280731827,
            0.00021884843590669334,
            7.116936467355117e-05,
            0.00022258244280237705,
            6.678698991890997e-05,
            0.00014744892541784793,
            6.499816663563251e-05
        ],
        "align_select": "select Cartoon.Title",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the name of all the cartools on the TV channel 'Sky radio'?",
        "gold_select": "select Cartoon.Title",
        "select_candidates": [
            "select Cartoon.Title",
            "select TV_series.Episode",
            "select Cartoon.Title, TV_Channel.series_name",
            "select Cartoon.Title, TV_Channel.Country"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel TV_series",
            "TV_Channel TV_series Cartoon",
            "TV_Channel Cartoon"
        ],
        "align_scores": [
            0.26707425713539124,
            9.668426355347037e-05,
            0.007628876715898514,
            7.283745799213648e-05,
            0.0003439509600866586,
            6.110730464570224e-05,
            0.00018613219435792416,
            5.475768193718977e-05
        ],
        "align_select": "select Cartoon.Title",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What was the week one rank for 'A love of a lifetime'?",
        "gold_select": "select TV_series.Weekly_Rank",
        "select_candidates": [
            "select TV_series.Weekly_Rank",
            "select TV_series.id, TV_series.Weekly_Rank",
            "select TV_series.Weekly_Rank, TV_series.Viewers_m",
            "select TV_series.Weekly_Rank, TV_series.Channel"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_series",
        "table_candidates": [
            "TV_series",
            "TV_Channel TV_series"
        ],
        "align_scores": [
            0.920549750328064,
            8.140016143443063e-05,
            0.00018847713363356888,
            6.767454033251852e-05,
            0.00013575979392044246,
            6.310010940069333e-05,
            0.0001579856179887429,
            6.293546175584197e-05
        ],
        "align_select": "select TV_series.Weekly_Rank",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which channel airs 'A love of a lifetime?' What is the title of its series?",
        "gold_select": "select TV_Channel.series_name",
        "select_candidates": [
            "select TV_Channel.series_name, TV_series.Channel",
            "select TV_Channel.series_name",
            "select TV_Channel.series_name, TV_Channel.Country",
            "select TV_series.Channel, TV_Channel.series_name"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel TV_series",
        "table_candidates": [
            "TV_Channel TV_series"
        ],
        "align_scores": [
            0.35725563764572144,
            8.149927452905104e-05,
            0.991897463798523,
            0.0002470671897754073,
            0.0004066895926371217,
            8.450556197203696e-05,
            0.9946374297142029,
            9.355826477985829e-05
        ],
        "align_select": "select TV_series.Channel, TV_Channel.series_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List all episodes of TV shows aired on 'Sky Radio'.",
        "gold_select": "select TV_series.Episode",
        "select_candidates": [
            "select TV_series.Episode",
            "select TV_series.Episode, TV_Channel.series_name",
            "select TV_series.Episode, TV_Channel.Country",
            "select TV_series.id, TV_series.Episode"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel TV_series",
        "table_candidates": [
            "TV_Channel TV_series"
        ],
        "align_scores": [
            0.971947431564331,
            8.659686864120886e-05,
            0.00012602061906363815,
            7.027886022115126e-05,
            0.00018056039698421955,
            6.04568631388247e-05,
            0.00019324156164657325,
            6.61995800328441e-05
        ],
        "align_select": "select TV_series.Episode",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which episodes of the TV channel 'Sky Radio'?",
        "gold_select": "select TV_series.Episode",
        "select_candidates": [
            "select TV_series.Episode",
            "select TV_series.Episode, TV_Channel.Country",
            "select TV_series.Episode, TV_series.Air_Date",
            "select TV_series.Episode, TV_Channel.series_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel TV_series",
        "table_candidates": [
            "TV_Channel TV_series",
            "TV_Channel TV_series"
        ],
        "align_scores": [
            0.9881806373596191,
            6.998466415097937e-05,
            0.00014134193770587444,
            5.676932050846517e-05,
            0.000155310335685499,
            5.865314960828982e-05,
            0.00014375070168171078,
            5.865275670657866e-05
        ],
        "align_select": "select TV_series.Episode",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the list of TV shows shown on TV channel 'Sky Radio'.",
        "gold_select": "select TV_series.Episode",
        "select_candidates": [
            "select TV_series.Episode",
            "select TV_series.Episode, TV_series.Air_Date",
            "select TV_series.Episode, TV_series.Rating",
            "select TV_series.Episode, TV_series.Air_Date, TV_series.Rating"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel TV_series",
        "table_candidates": [
            "TV_Channel TV_series"
        ],
        "align_scores": [
            0.008666271343827248,
            6.428949563996866e-05,
            0.0001276903785765171,
            6.009817298036069e-05,
            0.0001802081533242017,
            5.9080906794406474e-05,
            0.000126805214677006,
            6.242964445846155e-05
        ],
        "align_select": "select TV_series.Episode",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "The list of all TV episodes that aired on 'Sky Radio'.",
        "gold_select": "select TV_series.Episode",
        "select_candidates": [
            "select TV_series.Episode",
            "select TV_series.Episode, TV_Channel.series_name",
            "select TV_series.Episode, TV_Channel.Country",
            "select TV_series.Episode, TV_series.Air_Date"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel TV_series",
        "table_candidates": [
            "TV_Channel TV_series"
        ],
        "align_scores": [
            0.9788154363632202,
            7.766671478748322e-05,
            0.00012746801075991243,
            6.502804171759635e-05,
            0.0001742441818350926,
            5.9764071920653805e-05,
            0.0001401921472279355,
            6.124744686530903e-05
        ],
        "align_select": "select TV_series.Episode",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What was the episode name of the TV show named'sky radio'?",
        "gold_select": "select TV_series.Episode",
        "select_candidates": [
            "select TV_series.Episode",
            "select TV_series.Episode, TV_Channel.Country",
            "select TV_series.Episode, TV_Channel.series_name",
            "select TV_series.Episode, TV_series.Air_Date"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel TV_series",
        "table_candidates": [
            "TV_Channel TV_series"
        ],
        "align_scores": [
            0.9888501763343811,
            7.29352468624711e-05,
            0.00012634065933525562,
            5.839753066538833e-05,
            0.00012099712330382317,
            5.8842058933805674e-05,
            0.00017183726595249027,
            5.973489533062093e-05
        ],
        "align_select": "select TV_series.Episode",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which episode was that 'Sky Radio' TV show?",
        "gold_select": "select TV_series.Episode",
        "select_candidates": [
            "select TV_series.Episode",
            "select TV_series.Episode, TV_Channel.Country",
            "select TV_series.Episode, TV_Channel.series_name",
            "select TV_series.Episode, TV_series.Air_Date"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel TV_series",
        "table_candidates": [
            "TV_Channel TV_series"
        ],
        "align_scores": [
            0.9950821399688721,
            7.851720874896273e-05,
            0.00011593835370149463,
            5.839547156938352e-05,
            0.00011403079406591132,
            5.8437315601622686e-05,
            0.00018909957725554705,
            5.9420599427539855e-05
        ],
        "align_select": "select TV_series.Episode",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Among the TV channels broadcast in, which country's are showing a cartoon of Todd Casey?",
        "gold_select": "select TV_Channel.Country",
        "select_candidates": [
            "select TV_Channel.Country",
            "select distinct TV_Channel.Country",
            "select TV_Channel.Country, Cartoon.Channel",
            "select distinct TV_Channel.Country, Cartoon.Channel"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel Cartoon",
            "TV_Channel TV_series Cartoon"
        ],
        "align_scores": [
            0.9469692707061768,
            0.0002774375316221267,
            0.23521468043327332,
            0.000504814728628844,
            0.0005352210719138384,
            9.381985728396103e-05,
            0.0006474856054410338,
            7.839145109755918e-05
        ],
        "align_select": "select TV_Channel.Country",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the ID of TV Channels that don't play any cartoons from Ben Jones",
        "gold_select": "select TV_Channel.id",
        "select_candidates": [
            "select TV_Channel.id",
            "select TV_Channel.id, Cartoon.Channel",
            "select TV_Channel.id, t2.c8",
            "select t0.c, Cartoon.Channel"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel Cartoon",
            "TV_Channel TV_series Cartoon"
        ],
        "align_scores": [
            0.9853781461715698,
            0.05583465099334717,
            0.00031150702852755785,
            0.0002188446669606492,
            0.00040648668073117733,
            0.00027262361254543066,
            0.00026233011158183217,
            0.00018819159595295787
        ],
        "align_select": "select TV_Channel.id",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "Find the ids of the TV channels that don't have any cartoons by Ben Jones.",
        "gold_select": "select TV_Channel.id",
        "select_candidates": [
            "select TV_Channel.id",
            "select TV_Channel.id, Cartoon.Channel",
            "select TV_Channel.id, TV_Channel.series_name",
            "select TV_Channel.id, t2.c8"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel Cartoon",
            "TV_Channel TV_series Cartoon"
        ],
        "align_scores": [
            0.9761950373649597,
            0.9761950373649597,
            0.0004292520461603999,
            0.0004292520461603999,
            0.00022365633049048483,
            0.00022365633049048483,
            0.0003817321849055588,
            0.0003817321849055588
        ],
        "align_select": "select TV_Channel.id",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "For cartoon channels without Ben Jones, what are their IDs?",
        "gold_select": "select TV_Channel.id",
        "select_candidates": [
            "select Cartoon.id",
            "select Cartoon.Channel",
            "select Cartoon.Title, Cartoon.Channel",
            "select Cartoon.id, Cartoon.Directed_by"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "Cartoon",
            "TV_Channel Cartoon",
            "TV_series Cartoon",
            "TV_Channel TV_series Cartoon"
        ],
        "align_scores": [
            0.8277430534362793,
            0.4092519283294678,
            0.9764482975006104,
            0.9906961917877197,
            0.0001272093504667282,
            0.00017715310968924314,
            0.000145487385452725,
            0.00020677053544204682
        ],
        "align_select": "select Cartoon.id",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "Find the average earnings for poker players over 200cm.",
        "gold_select": "select avg(poker_player.Earnings)",
        "select_candidates": [
            "select avg(poker_player.Earnings)",
            "select an avg(poker_player.Earnings)",
            "select  avg(poker_player.Earnings)",
            "select the avg(poker_player.Earnings)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "poker_player people",
        "table_candidates": [
            "poker_player people"
        ],
        "align_scores": [
            0.9961000680923462,
            0.00010377600119682029,
            0.000407734012696892,
            9.412201325176284e-05,
            0.9961000680923462,
            0.00010377600119682029,
            0.0003545032232068479,
            0.00012731176684610546
        ],
        "align_select": "select avg(poker_player.Earnings)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List the names of those who aren't Russian.",
        "gold_select": "select people.Name",
        "select_candidates": [
            "select people.Name",
            "select people.Name, people.Birth_Date",
            "select people.Name, people.Nationality",
            "select people.Name (or people.Birth_Date)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "people",
        "table_candidates": [
            "people"
        ],
        "align_scores": [
            0.9031373858451843,
            0.00013387470971792936,
            0.00018377529340796173,
            6.514490814879537e-05,
            0.00015780389367137104,
            6.986111111473292e-05,
            0.0005346546531654894,
            6.549130193889141e-05
        ],
        "align_select": "select people.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are names of people that aren't Russian?",
        "gold_select": "select people.Name",
        "select_candidates": [
            "select people.Name",
            "select people.Name, people.Nationality",
            "select people.Name, people.Birth_Date",
            "select people.Name, people.Height"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "people",
        "table_candidates": [
            "people"
        ],
        "align_scores": [
            0.9896751046180725,
            0.0001296286063734442,
            0.00013532205775845796,
            6.272054451983422e-05,
            0.00014372851001098752,
            5.824147956445813e-05,
            0.00012764459825120866,
            5.596321716438979e-05
        ],
        "align_select": "select people.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "When did the last vote from California get created?",
        "gold_select": "select max(VOTES.created)",
        "select_candidates": [
            "select max(VOTES.created)",
            "select VOTES.created",
            "select min(VOTES.created)",
            "select max(t2.c5)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "VOTES",
        "table_candidates": [
            "VOTES",
            "AREA_CODE_STATE VOTES",
            "AREA_CODE_STATE CONTESTANTS VOTES",
            "CONTESTANTS VOTES"
        ],
        "align_scores": [
            0.9956231713294983,
            0.0002828235737979412,
            0.9674199819564819,
            0.9937892556190491,
            0.8715513944625854,
            0.00021071020455565304,
            0.0007675045635551214,
            0.00018565151549410075
        ],
        "align_select": "select max(VOTES.created)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Of votes from 'CA', what is the last date created?",
        "gold_select": "select max(VOTES.created)",
        "select_candidates": [
            "select VOTES.created",
            "select max(VOTES.created)",
            "select VOTES.vote_id, max(VOTES.created)",
            "select VOTES.vote_id, VOTES.created"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "VOTES",
        "table_candidates": [
            "VOTES"
        ],
        "align_scores": [
            0.9945599436759949,
            0.9813501834869385,
            0.00011907261796295643,
            0.12976303696632385,
            0.00011007540160790086,
            0.00016635573410894722,
            0.00016886935918591917,
            0.00012881547445431352
        ],
        "align_select": "select VOTES.created",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT"
    },
    {
        "question": "When was the last dated created for the votes of CA?",
        "gold_select": "select max(VOTES.created)",
        "select_candidates": [
            "select max(VOTES.created)",
            "select VOTES.created",
            "select max(VOTES.created), VOTES.state",
            "select max(VOTES.created), VOTES.phone_number"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "VOTES",
        "table_candidates": [
            "VOTES",
            "AREA_CODE_STATE VOTES",
            "CONTESTANTS VOTES",
            "AREA_CODE_STATE CONTESTANTS VOTES"
        ],
        "align_scores": [
            0.8349756598472595,
            0.0001916246983455494,
            0.12325837463140488,
            0.9947620034217834,
            0.00010188532178290188,
            8.603099558968097e-05,
            0.00010721135913627222,
            8.041570254135877e-05
        ],
        "align_select": "select max(VOTES.created)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "On the last date, what was the number of votes from California?",
        "gold_select": "select max(VOTES.created)",
        "select_candidates": [
            "select count(*)",
            "select count(*), VOTES.state",
            "select count(*), AREA_CODE_STATE.state",
            "select VOTES.created, count(*)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "VOTES",
        "table_candidates": [
            "AREA_CODE_STATE VOTES",
            "VOTES",
            "CONTESTANTS VOTES",
            "AREA_CODE_STATE CONTESTANTS VOTES"
        ],
        "align_scores": [
            0.01176657248288393,
            0.0002511719358153641,
            0.0002708861429709941,
            0.0001883014483610168,
            0.00022869760869070888,
            0.00019763546879403293,
            0.0005248376401141286,
            0.0002491761988494545
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT"
    },
    {
        "question": "How many votes came from either NY or CA?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), AREA_CODE_STATE.state",
            "select count(*), VOTES.state",
            "select count(*), AREA_CODE_STATE.state"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "VOTES",
        "table_candidates": [
            "AREA_CODE_STATE VOTES",
            "VOTES",
            "CONTESTANTS VOTES",
            "AREA_CODE_STATE CONTESTANTS VOTES"
        ],
        "align_scores": [
            0.9943548440933228,
            0.0002922082494478673,
            0.00024747155839577317,
            0.005818003322929144,
            0.0003579807234928012,
            0.10879778116941452,
            0.00024747155839577317,
            0.005818003322929144
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Where did more votes come from, California or New York?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select VOTES.state",
            "select AREA_CODE_STATE.state, count(*)",
            "select AREA_CODE_STATE.state, VOTES.state",
            "select AREA_CODE_STATE.state ou VOTES.state"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "VOTES",
        "table_candidates": [
            "AREA_CODE_STATE VOTES",
            "VOTES",
            "CONTESTANTS VOTES",
            "AREA_CODE_STATE CONTESTANTS VOTES"
        ],
        "align_scores": [
            0.9566233158111572,
            0.006508353166282177,
            0.005477648228406906,
            0.0007868419052101672,
            0.0006164922378957272,
            0.000353130919393152,
            0.0012931320816278458,
            0.00045436836080625653
        ],
        "align_select": "select VOTES.state",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Of the votes in California, how many came from New York?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select VOTES.state, count(*)",
            "select AREA_CODE_STATE.state, count(*)",
            "select VOTES.vote_id, count(*)",
            "select VOTES.phone_number, count(*)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "VOTES",
        "table_candidates": [
            "AREA_CODE_STATE VOTES",
            "VOTES",
            "CONTESTANTS VOTES",
            "AREA_CODE_STATE CONTESTANTS VOTES"
        ],
        "align_scores": [
            0.23264706134796143,
            0.0014926688745617867,
            0.2416531890630722,
            0.0007196427322924137,
            0.00033711123978719115,
            0.00027473008958622813,
            0.0008977160905487835,
            0.00027164496714249253
        ],
        "align_select": "select VOTES.state, count(*)",
        "align_structure": "SELECT-FROM-WHERE-GROUP BY"
    },
    {
        "question": "What is the total number of votes in NY or CA?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select sum(VOTES.vote_id)",
            "select sum(t2.c8)",
            "select sum(t2.c6)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "VOTES",
        "table_candidates": [
            "VOTES",
            "AREA_CODE_STATE VOTES",
            "AREA_CODE_STATE CONTESTANTS VOTES",
            "CONTESTANTS VOTES"
        ],
        "align_scores": [
            0.9963296055793762,
            0.00036485635791905224,
            0.0019891567062586546,
            0.000273922982160002,
            0.0005331599968485534,
            0.00016785413026809692,
            0.0005343591328710318,
            0.0001679639535723254
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the number of votes from CA or NY?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), VOTES.state",
            "select count(*), AREA_CODE_STATE.state",
            "select count(*), VOTES.state"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "VOTES",
        "table_candidates": [
            "VOTES",
            "AREA_CODE_STATE VOTES",
            "AREA_CODE_STATE CONTESTANTS VOTES",
            "CONTESTANTS VOTES"
        ],
        "align_scores": [
            0.9956478476524353,
            0.0001477249024901539,
            0.0002431278262520209,
            0.15813596546649933,
            0.00021577325242105871,
            0.00215524691157043,
            0.0002431278262520209,
            0.15813596546649933
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "For the vote of 'Tabatha Gehling', what are the create date, state, and phone number?",
        "gold_select": "select VOTES.created, VOTES.state, VOTES.phone_number",
        "select_candidates": [
            "select VOTES.created, VOTES.state, VOTES.phone_number",
            "select VOTES.created, VOTES.state, VOTES.phone_number",
            "select VOTES.vote_id, VOTES.state, VOTES.phone_number",
            "select VOTES.contestant_number, VOTES.state, VOTES.phone_number"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "CONTESTANTS VOTES",
        "table_candidates": [
            "CONTESTANTS VOTES"
        ],
        "align_scores": [
            0.9945827126502991,
            0.00013743875024374574,
            0.9945827126502991,
            0.00013743875024374574,
            0.0003797838871832937,
            7.372297841357067e-05,
            0.0007611589971929789,
            7.420505426125601e-05
        ],
        "align_select": "select VOTES.created, VOTES.state, VOTES.phone_number",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the create date, state, and phone number of all the votes that are casted to Tabatha Gehling.",
        "gold_select": "select VOTES.created, VOTES.state, VOTES.phone_number",
        "select_candidates": [
            "select VOTES.created, VOTES.state, VOTES.phone_number",
            "select VOTES.created, VOTES.state, VOTES.phone_number",
            "select VOTES.created), VOTES.state, VOTES.phone_number",
            "select VOTES.created, VOTES.state.c3, VOTES.phone_number"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "CONTESTANTS VOTES",
        "table_candidates": [
            "CONTESTANTS VOTES"
        ],
        "align_scores": [
            0.9840355515480042,
            0.00011333612928865477,
            0.9840355515480042,
            0.00011333612928865477,
            0.0025481937918812037,
            7.193945202743635e-05,
            0.002576319733634591,
            7.787801587255672e-05
        ],
        "align_select": "select VOTES.created, VOTES.state, VOTES.phone_number",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "For the countries of the Caribbean, what's their total surface area?",
        "gold_select": "select sum(country.SurfaceArea)",
        "select_candidates": [
            "select sum(country.SurfaceArea)",
            "select sum(country.SurfaceArea), country.Name",
            "select sum(country.SurfaceArea) descripted in country.Name",
            "select sum(country.SurfaceArea), country.Name, country.Region"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "sqlite_sequence country"
        ],
        "align_scores": [
            0.9959750771522522,
            0.00030671816784888506,
            0.0001424461224814877,
            0.022875679656863213,
            0.0008168637868948281,
            0.000245441566221416,
            0.00011684958008117974,
            0.00012974892160855234
        ],
        "align_select": "select sum(country.SurfaceArea)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Of the land areas of all the nations in the Caribbean, what is the total area?",
        "gold_select": "select sum(country.SurfaceArea)",
        "select_candidates": [
            "select sum(country.SurfaceArea)",
            "select sum(country.SurfaceArea), country.Name",
            "select sum(country.SurfaceArea) descripted in country.Name",
            "select sum(country.SurfaceArea) descripted by country.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "sqlite_sequence country"
        ],
        "align_scores": [
            0.989159882068634,
            0.0008733077556826174,
            0.000246003590291366,
            0.0049493927508592606,
            0.001409761025570333,
            0.0003124501381535083,
            0.002106626285240054,
            0.0011236350983381271
        ],
        "align_select": "select sum(country.SurfaceArea)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "For the countries in the Caribbean, how much does their total surface area come to?",
        "gold_select": "select sum(country.SurfaceArea)",
        "select_candidates": [
            "select sum(country.SurfaceArea)",
            "select sum(country.SurfaceArea), country.Name",
            "select sum(country.SurfaceArea) descripted in country.Name",
            "select sum(country.SurfaceArea) descripted in country.SurfaceArea"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "sqlite_sequence country"
        ],
        "align_scores": [
            0.9955378770828247,
            0.0004950491711497307,
            0.0001728381757857278,
            0.13499872386455536,
            0.0007257512770593166,
            0.000481612078147009,
            0.00042080640560016036,
            0.00016007546219043434
        ],
        "align_select": "select sum(country.SurfaceArea)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "For countries in the Caribbean what is the total surface area?",
        "gold_select": "select sum(country.SurfaceArea)",
        "select_candidates": [
            "select sum(country.SurfaceArea)",
            "select sum(country.SurfaceArea), country.Name",
            "select sum(country.SurfaceArea), country.Code",
            "select sum(country.SurfaceArea), country.Region"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "sqlite_sequence country"
        ],
        "align_scores": [
            0.996531069278717,
            0.00017231504898518324,
            0.00015250968863256276,
            9.478329593548551e-05,
            0.00013901830243412405,
            8.845048432704061e-05,
            0.0002449326275382191,
            8.196535054594278e-05
        ],
        "align_select": "select sum(country.SurfaceArea)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "For all the countries of the Caribbean, what is the total surface area?",
        "gold_select": "select sum(country.SurfaceArea)",
        "select_candidates": [
            "select sum(country.SurfaceArea)",
            "select sum(country.SurfaceArea), country.Name",
            "select sum(country.SurfaceArea) descripted in country.Name",
            "select sum(country.SurfaceArea) descripted by country.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "sqlite_sequence country"
        ],
        "align_scores": [
            0.9956945180892944,
            8.702932973392308e-05,
            0.00013830010720994323,
            6.444552855100483e-05,
            0.0008219159208238125,
            7.807149086147547e-05,
            0.0035120537504553795,
            9.210387361235917e-05
        ],
        "align_select": "select sum(country.SurfaceArea)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the total surface area of the Caribbean countries?",
        "gold_select": "select sum(country.SurfaceArea)",
        "select_candidates": [
            "select sum(country.SurfaceArea)",
            "select sum(country.SurfaceArea), country.Name",
            "select sum(country.SurfaceArea), country.Code",
            "select sum(country.SurfaceArea), country.Region"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9966275095939636,
            0.0003363481373526156,
            0.00015918184362817556,
            0.021205101162195206,
            0.00013244437286630273,
            0.003326722187921405,
            0.00022686741431243718,
            0.02598961442708969
        ],
        "align_select": "select sum(country.SurfaceArea)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "For countries in the Caribbean, what is the total surface area?",
        "gold_select": "select sum(country.SurfaceArea)",
        "select_candidates": [
            "select sum(country.SurfaceArea)",
            "select sum(country.SurfaceArea), country.Name",
            "select sum(country.SurfaceArea) descripted in country.Name",
            "select sum(country.SurfaceArea), country.Code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "sqlite_sequence country"
        ],
        "align_scores": [
            0.9964228272438049,
            0.0001581557880854234,
            0.00014224686310626566,
            9.167128155240789e-05,
            0.0007155494531616569,
            0.00011747699318220839,
            0.00013616612704936415,
            8.495949441567063e-05
        ],
        "align_select": "select sum(country.SurfaceArea)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which is the continent (as listed below) whose island-country \"Anguilla\" belongs to?",
        "gold_select": "select country.Continent",
        "select_candidates": [
            "select country.Continent",
            "select distinct country.Continent",
            "select country.Continent, country.Region",
            "select country.Continent, country.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "sqlite_sequence country",
            "city country",
            "city sqlite_sequence country"
        ],
        "align_scores": [
            0.8098809719085693,
            0.00011844298569485545,
            0.02523089572787285,
            0.00018878844275604934,
            0.0002912658965215087,
            7.959410868352279e-05,
            0.00020660735026467592,
            7.687923789490014e-05
        ],
        "align_select": "select country.Continent",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which continent does country 'Anguilla' belong to?",
        "gold_select": "select country.Continent",
        "select_candidates": [
            "select country.Continent",
            "select country.Continent, country.Region",
            "select distinct country.Continent",
            "select country.Continent, country.Capital"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9963526725769043,
            0.00011707934027072042,
            0.0001948469434864819,
            7.459057815140113e-05,
            0.031221186742186546,
            0.00016574724577367306,
            0.00012932279787492007,
            6.195376045070589e-05
        ],
        "align_select": "select country.Continent",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Of the countries in central Africa, what is the average expected life expectancy?",
        "gold_select": "select avg(country.LifeExpectancy)",
        "select_candidates": [
            "select avg(country.LifeExpectancy)",
            "select  avg(country.LifeExpectancy)",
            "select an avg(country.LifeExpectancy)",
            "select avg(country.LifeExpectancy), country.Population"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9919683337211609,
            0.00018022071162704378,
            0.9919683337211609,
            0.00018022071162704378,
            0.000366225402103737,
            0.00011092244676547125,
            0.00014333266881294549,
            0.00010281797585776076
        ],
        "align_select": "select avg(country.LifeExpectancy)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "For countries in central Africa what is the average life expectancy?",
        "gold_select": "select avg(country.LifeExpectancy)",
        "select_candidates": [
            "select avg(country.LifeExpectancy)",
            "select an avg(country.LifeExpectancy)",
            "select avg(country.LifeExpectancy), country.Population",
            "select  avg(country.LifeExpectancy)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.994361400604248,
            0.0001532205642433837,
            0.00040624631219543517,
            0.00011468201410025358,
            0.0001468390109948814,
            0.00010873535939026624,
            0.994361400604248,
            0.0001532205642433837
        ],
        "align_select": "select avg(country.LifeExpectancy)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the average life expectancy for countries in Central Africa?",
        "gold_select": "select avg(country.LifeExpectancy)",
        "select_candidates": [
            "select avg(country.LifeExpectancy)",
            "select an avg(country.LifeExpectancy)",
            "select  avg(country.LifeExpectancy)",
            "select Avg(country.LifeExpectancy)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9950647950172424,
            0.00011606888438109308,
            0.00042259448673576117,
            0.00010593111801426858,
            0.9950647950172424,
            0.00011606888438109308,
            0.9950647950172424,
            0.00011606888438109308
        ],
        "align_select": "select avg(country.LifeExpectancy)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Of the countries in central Africa, what is the average life expectancy?",
        "gold_select": "select avg(country.LifeExpectancy)",
        "select_candidates": [
            "select avg(country.LifeExpectancy)",
            "select an avg(country.LifeExpectancy)",
            "select  avg(country.LifeExpectancy)",
            "select avg(country.LifeExpectancy), country.Population"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "sqlite_sequence country",
            "city country"
        ],
        "align_scores": [
            0.9939404726028442,
            0.00011877821816597134,
            0.00036718344199471176,
            0.0001001904092845507,
            0.9939404726028442,
            0.00011877821816597134,
            0.00013136093912180513,
            8.755357703194022e-05
        ],
        "align_select": "select avg(country.LifeExpectancy)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "The life expectancy for countries in central Africa is how long?",
        "gold_select": "select avg(country.LifeExpectancy)",
        "select_candidates": [
            "select country.LifeExpectancy",
            "select sum(country.LifeExpectancy)",
            "select country.LifeExpectancy, country.Population",
            "select max(country.LifeExpectancy)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "sqlite_sequence country",
            "city country"
        ],
        "align_scores": [
            0.9913740754127502,
            6.733259942848235e-05,
            0.003620367730036378,
            6.081977699068375e-05,
            0.00017064041458070278,
            5.936248999205418e-05,
            0.0009531148243695498,
            6.160264456411824e-05
        ],
        "align_select": "select country.LifeExpectancy",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the total surface area of Asia and Europe?",
        "gold_select": "select sum(country.SurfaceArea)",
        "select_candidates": [
            "select sum(country.SurfaceArea)",
            "select sum(country.SurfaceArea), country.Continent",
            "select sum(country.SurfaceArea), country.Continent",
            "select sum(country.SurfaceArea) def. country.Continent"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9965370893478394,
            0.0003592100983951241,
            0.000151427710079588,
            9.395038796355948e-05,
            0.000151427710079588,
            9.395038796355948e-05,
            0.00023865319963078946,
            0.00014168547932058573
        ],
        "align_select": "select sum(country.SurfaceArea)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "The surface area of Asia and Europe is what?",
        "gold_select": "select sum(country.SurfaceArea)",
        "select_candidates": [
            "select country.SurfaceArea",
            "select sum(country.SurfaceArea)",
            "select avg(country.SurfaceArea)",
            "select sum(country.SurfaceArea), country.Continent"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.001656592939980328,
            0.9951027631759644,
            7.992419705260545e-05,
            0.00023839506320655346,
            6.999127799645066e-05,
            0.00018992827972397208,
            7.021910278126597e-05,
            9.630185377318412e-05
        ],
        "align_select": "select country.SurfaceArea",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "What is the surface area that goes to Asia, to Europe?",
        "gold_select": "select sum(country.SurfaceArea)",
        "select_candidates": [
            "select country.SurfaceArea",
            "select country.SurfaceArea, country.Continent",
            "select sum(country.SurfaceArea), country.Continent",
            "select country.SurfaceArea-proportional-to-country.Continent"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.0008180646109394729,
            0.9927845001220703,
            7.702761649852619e-05,
            0.0001655070373089984,
            6.396372918970883e-05,
            0.00010947433474939317,
            0.0001605465804459527,
            0.002439959440380335
        ],
        "align_select": "select country.SurfaceArea",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "Find the surface area of Asia and Europe.",
        "gold_select": "select sum(country.SurfaceArea)",
        "select_candidates": [
            "select country.SurfaceArea",
            "select sum(country.SurfaceArea)",
            "select country.SurfaceArea, country.Continent",
            "select avg(country.SurfaceArea)"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.0044965012930333614,
            0.9950273633003235,
            0.00012082877947250381,
            0.000326810113620013,
            7.945131801534444e-05,
            0.0001905762474052608,
            8.654147677589208e-05,
            0.00019112435984425247
        ],
        "align_select": "select country.SurfaceArea",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "In Gelderland how many people live?",
        "gold_select": "select sum(city.Population)",
        "select_candidates": [
            "select sum(city.Population)",
            "select city.Population",
            "select count(*)",
            "select sum(city.Population), city.District"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "city",
        "table_candidates": [
            "city",
            "city country"
        ],
        "align_scores": [
            0.9868980646133423,
            6.815391679992899e-05,
            0.9942124485969543,
            9.378318645758554e-05,
            0.9956005811691284,
            8.075258665485308e-05,
            0.00014296961307991296,
            6.482780736405402e-05
        ],
        "align_select": "select sum(city.Population)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "In 'Gelderland' how many people live?",
        "gold_select": "select sum(city.Population)",
        "select_candidates": [
            "select sum(city.Population)",
            "select city.Population",
            "select count(*)",
            "select sum(city.Population), city.District"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "city",
        "table_candidates": [
            "city"
        ],
        "align_scores": [
            0.9903402924537659,
            7.39818497095257e-05,
            0.9700337052345276,
            9.900855366140604e-05,
            0.9953250885009766,
            8.407890709349886e-05,
            0.00016318002599291503,
            6.197740003699437e-05
        ],
        "align_select": "select sum(city.Population)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Of those living in Gelderland, how many are there?",
        "gold_select": "select sum(city.Population)",
        "select_candidates": [
            "select count(*)",
            "select sum(city.Population)",
            "select count(*), city.District",
            "select city.Population"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "city",
        "table_candidates": [
            "city",
            "city country"
        ],
        "align_scores": [
            0.9933072924613953,
            0.00032831370481289923,
            0.36467665433883667,
            0.00033033848740160465,
            0.00021439389092847705,
            0.01616055890917778,
            0.9152153134346008,
            0.0036707387771457434
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many people live in Gelderland?",
        "gold_select": "select sum(city.Population)",
        "select_candidates": [
            "select sum(city.Population)",
            "select city.Population",
            "select count(*)",
            "select city.ID, city.District, city.Population"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "city",
        "table_candidates": [
            "city",
            "city country"
        ],
        "align_scores": [
            0.954597532749176,
            6.855153333162889e-05,
            0.9945279955863953,
            0.00010476322495378554,
            0.9952955842018127,
            8.869128214428201e-05,
            0.00015266159607563168,
            6.560506881214678e-05
        ],
        "align_select": "select sum(city.Population)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many residents does Gelderland have?",
        "gold_select": "select sum(city.Population)",
        "select_candidates": [
            "select sum(city.Population)",
            "select city.Population",
            "select count(*)",
            "select sum(city.Population), city.District"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "city",
        "table_candidates": [
            "city"
        ],
        "align_scores": [
            0.2020479142665863,
            7.15776695869863e-05,
            0.9953101277351379,
            0.00011686651851050556,
            0.9955295920372009,
            8.308358519570902e-05,
            0.00014201062731444836,
            6.591937562916428e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which is the most popular language in Asia?",
        "gold_select": "select countrylanguage.Language",
        "select_candidates": [
            "select countrylanguage.Language",
            "select countrylanguage.Language, country.Code",
            "select countrylanguage.Language, country.Continent",
            "select countrylanguage.Language, country.Capital"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.9934646487236023,
            0.9948685169219971,
            0.00031046898220665753,
            0.00022200342209544033,
            0.00021489837672561407,
            0.00020684114133473486,
            0.00018333090702071786,
            0.00021145831851754338
        ],
        "align_select": "select countrylanguage.Language",
        "align_structure": "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Which language is the most spoken in Asia?",
        "gold_select": "select countrylanguage.Language",
        "select_candidates": [
            "select countrylanguage.Language",
            "select countrylanguage.Language, country.Code",
            "select countrylanguage.Language, country.Capital",
            "select countrylanguage.Language, country.Continent"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.9953458905220032,
            0.9951269626617432,
            0.00035643245792016387,
            0.0002525657182559371,
            0.00019530154531821609,
            0.00024013886286411434,
            0.00024917550035752356,
            0.0002481943229213357
        ],
        "align_select": "select countrylanguage.Language",
        "align_structure": "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Among Asians, what is the most spoken language?",
        "gold_select": "select countrylanguage.Language",
        "select_candidates": [
            "select countrylanguage.Language",
            "select countrylanguage.Language, countrylanguage.IsOfficial",
            "select countrylanguage.Language, country.Continent",
            "select countrylanguage.Language, country.Region"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "countrylanguage",
            "country countrylanguage",
            "sqlite_sequence countrylanguage",
            "countrylanguage country"
        ],
        "align_scores": [
            0.9951086640357971,
            6.723533442709595e-05,
            0.0026819012127816677,
            5.886989310965873e-05,
            0.0002438530937070027,
            6.38693236396648e-05,
            0.0002881648833863437,
            6.245489203138277e-05
        ],
        "align_select": "select countrylanguage.Language",
        "align_structure": "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the most popular language in Asia?",
        "gold_select": "select countrylanguage.Language",
        "select_candidates": [
            "select countrylanguage.Language",
            "select countrylanguage.Language, country.Code",
            "select countrylanguage.Language, country.Capital",
            "select countrylanguage.Language, country.Continent"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.9949224591255188,
            0.9937886595726013,
            0.00021550142264459282,
            0.000286606140434742,
            0.00021398566605057567,
            0.00017838316853158176,
            0.0002061209816019982,
            0.00021072487288620323
        ],
        "align_select": "select countrylanguage.Language",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT"
    },
    {
        "question": "Which language is most widely spoken in Asia?",
        "gold_select": "select countrylanguage.Language",
        "select_candidates": [
            "select countrylanguage.Language",
            "select countrylanguage.Language, country.Code",
            "select countrylanguage.Language, country.Capital",
            "select countrylanguage.Language, country.Continent"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.9947618842124939,
            0.9947896003723145,
            0.00038861329085193574,
            0.00027434766525402665,
            0.0002013623306993395,
            0.00026016513584181666,
            0.00025709689361974597,
            0.00025599569198675454
        ],
        "align_select": "select countrylanguage.Language",
        "align_structure": "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What country codes are used by countries where people speak other than English?",
        "gold_select": "select distinct countrylanguage.CountryCode",
        "select_candidates": [
            "select countrylanguage.CountryCode",
            "select distinct countrylanguage.CountryCode",
            "select unique countrylanguage.CountryCode",
            "select specific countrylanguage.CountryCode"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "countrylanguage",
        "table_candidates": [
            "countrylanguage",
            "country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.7813635468482971,
            0.0003082117182202637,
            0.08560273051261902,
            0.0001926796539919451,
            0.0010756959673017263,
            0.00010045551607618108,
            0.004999268800020218,
            0.00015425596211571246
        ],
        "align_select": "select countrylanguage.CountryCode",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "For countries where people don't speak English, what are their country codes?",
        "gold_select": "select distinct countrylanguage.CountryCode",
        "select_candidates": [
            "select countrylanguage.CountryCode",
            "select country.Name, countrylanguage.CountryCode",
            "select countrylanguage.Language, country.Code",
            "select country.Name, country.Continent"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "countrylanguage",
        "table_candidates": [
            "countrylanguage",
            "country countrylanguage",
            "sqlite_sequence countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9830090403556824,
            0.0008494998328387737,
            0.0006033153622411191,
            0.0001007545433822088,
            0.0005747588002122939,
            9.126865188591182e-05,
            0.0004717903211712837,
            0.00024834630312398076
        ],
        "align_select": "select countrylanguage.CountryCode",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "In which European countries are there exactly 80000 people? Explain with an example?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Continent",
            "select country.Name, country.Population",
            "select country.Name, country.Region"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.6953717470169067,
            0.012625858187675476,
            0.00025872717378661036,
            9.130442776950076e-05,
            0.0002942195860669017,
            8.253792475443333e-05,
            0.00029063786496408284,
            0.00010082824883284047
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the names of conductors who aren't American.",
        "gold_select": "select conductor.Name",
        "select_candidates": [
            "select conductor.Name",
            "select conductor.Name, conductor.Nationality",
            "select conductor.Conductor_ID, conductor.Name",
            "select conductor.Name (or conductor.Age)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor",
        "table_candidates": [
            "conductor"
        ],
        "align_scores": [
            0.9940535426139832,
            7.556381024187431e-05,
            0.00018871233623940498,
            5.7316821767017245e-05,
            0.00014083902351558208,
            6.008579657645896e-05,
            0.0003581248165573925,
            6.438704440370202e-05
        ],
        "align_select": "select conductor.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find all the conductors whose names are different than \"USA.\"",
        "gold_select": "select conductor.Name",
        "select_candidates": [
            "select conductor.Name",
            "select conductor.Conductor_ID, conductor.Name",
            "select conductor.Name, conductor.Nationality",
            "select conductor.Conductor_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor",
        "table_candidates": [
            "conductor"
        ],
        "align_scores": [
            0.9848662614822388,
            7.693599764024839e-05,
            0.00020838517230004072,
            6.32303417660296e-05,
            0.000181863724719733,
            5.7996174291474745e-05,
            0.0014905431307852268,
            7.865615043556318e-05
        ],
        "align_select": "select conductor.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the conductors' names who are not American.",
        "gold_select": "select conductor.Name",
        "select_candidates": [
            "select conductor.Name",
            "select conductor.Name, conductor.Nationality",
            "select conductor.Conductor_ID, conductor.Name",
            "select conductor.Name, conductor.Age"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor",
        "table_candidates": [
            "conductor",
            "conductor orchestra",
            "conductor orchestra performance"
        ],
        "align_scores": [
            0.9941985607147217,
            7.437707245117053e-05,
            0.00018107384676113725,
            5.748202602262609e-05,
            0.00016718386905267835,
            5.967659308225848e-05,
            0.00012705019616987556,
            5.3226831369102e-05
        ],
        "align_select": "select conductor.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the names of conductors who are not American.",
        "gold_select": "select conductor.Name",
        "select_candidates": [
            "select conductor.Name",
            "select conductor.Name, conductor.Nationality",
            "select conductor.Conductor_ID, conductor.Name",
            "select conductor.Name, conductor.Nationality, conductor.Year_of_Work"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor",
        "table_candidates": [
            "conductor"
        ],
        "align_scores": [
            0.9945498108863831,
            6.951713294256479e-05,
            0.0001788684312487021,
            5.4966640163911507e-05,
            0.00014501232362817973,
            5.7088807807303965e-05,
            0.00012954173143953085,
            5.436703213490546e-05
        ],
        "align_select": "select conductor.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the maximum and minimum share of performances that aren't live finals?",
        "gold_select": "select max(performance.Share), min(performance.Share)",
        "select_candidates": [
            "select max(performance.Share), min(performance.Share)",
            "select max(t2.c8), min(performance.Share)",
            "select max(t2.c7), min(performance.Share)",
            "select max(performance.Share ), min(performance.Share)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "performance",
        "table_candidates": [
            "performance"
        ],
        "align_scores": [
            0.9952853322029114,
            0.00010925595415756106,
            0.0003299711679574102,
            7.459072367055342e-05,
            0.00035441032378003,
            7.540745718870312e-05,
            0.003961784765124321,
            0.00010275761451339349
        ],
        "align_select": "select max(performance.Share), min(performance.Share)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the maximum and minimum percentage of performances that are not live finals?",
        "gold_select": "select max(performance.Share), min(performance.Share)",
        "select_candidates": [
            "select max(performance.Share), min(performance.Share)",
            "select max(performance.Official_ratings_in_millions), min(performance.Official_ratings_in_millions)",
            "select max(t2.c8), min(t2.c8)",
            "select max(performance.Type), min(performance.Official_ratings_in_millions)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "performance",
        "table_candidates": [
            "performance"
        ],
        "align_scores": [
            0.9946476817131042,
            0.0012683105887845159,
            0.0010469420813024044,
            0.00044487137347459793,
            0.006008207332342863,
            0.000543872534763068,
            0.00020475742348935455,
            0.00013504980597645044
        ],
        "align_select": "select max(performance.Share), min(performance.Share)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the maximum and minimum share of performances that are non-live finals?",
        "gold_select": "select max(performance.Share), min(performance.Share)",
        "select_candidates": [
            "select max(performance.Share), min(performance.Share)",
            "select max(t2.c8), min(performance.Share)",
            "select maximum(performance.Share), min(performance.Share)",
            "select max(t2.c7), min(performance.Share)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "performance",
        "table_candidates": [
            "performance show",
            "performance"
        ],
        "align_scores": [
            0.9953820109367371,
            9.228973794961348e-05,
            0.00040121018537320197,
            8.02377617219463e-05,
            0.000851185992360115,
            6.4910389482975e-05,
            0.000428815430495888,
            8.051253826124594e-05
        ],
        "align_select": "select max(performance.Share), min(performance.Share)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the maximum and minimum shares of performances that aren't live finals.",
        "gold_select": "select max(performance.Share), min(performance.Share)",
        "select_candidates": [
            "select max(performance.Share), min(performance.Share)",
            "select max(t2.c8), min(performance.Share)",
            "select max(t2.c7), min(performance.Share)",
            "select max(performance.Share ), min(performance.Share)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "performance",
        "table_candidates": [
            "performance"
        ],
        "align_scores": [
            0.9952391386032104,
            0.0001016962414723821,
            0.000410988403018564,
            7.658945833100006e-05,
            0.00043901268509216607,
            7.595348870381713e-05,
            0.0037182129453867674,
            0.00010030704288510606
        ],
        "align_select": "select max(performance.Share), min(performance.Share)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the grade given to Kyle?",
        "gold_select": "select Highschooler.grade",
        "select_candidates": [
            "select Highschooler.grade",
            "select Highschooler.ID, Highschooler.name, Highschooler.grade",
            "select Highschooler.ID, Highschooler.grade",
            "select Highschooler.name, Highschooler.grade"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler",
        "table_candidates": [
            "Highschooler"
        ],
        "align_scores": [
            0.9897550940513611,
            8.314286242239177e-05,
            0.00015669342246837914,
            6.086363282520324e-05,
            0.0002259536413475871,
            6.057158316252753e-05,
            0.0002036579098785296,
            6.054108598618768e-05
        ],
        "align_select": "select Highschooler.grade",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the ID of Kyle.",
        "gold_select": "select Highschooler.ID",
        "select_candidates": [
            "select Highschooler.ID",
            "select Highschooler.ID, Highschooler.name",
            "select t0.c, Highschooler.name",
            "select Highschooler.ID (or Highschooler.name)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler",
        "table_candidates": [
            "Highschooler",
            "Highschooler Friend Likes",
            "Highschooler Friend"
        ],
        "align_scores": [
            0.9510413408279419,
            8.746737876208499e-05,
            0.00019118924683425575,
            5.592075103777461e-05,
            0.0002816681226249784,
            6.363161810440943e-05,
            0.0011018631048500538,
            6.750477041350678e-05
        ],
        "align_select": "select Highschooler.ID",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Who is the friend of the high school student named Kyle?",
        "gold_select": "select Highschooler.name",
        "select_candidates": [
            "select Friend.friend_id",
            "select Friend.friend_id, Highschooler.name",
            "select Friend.friend_id, Highschooler.ID",
            "select t1.c2"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Friend",
        "table_candidates": [
            "Highschooler Friend",
            "Highschooler Friend Likes"
        ],
        "align_scores": [
            0.19156938791275024,
            9.776472143130377e-05,
            0.00032273700344376266,
            7.355969864875078e-05,
            0.0004634516662918031,
            6.547731027239934e-05,
            0.006034389138221741,
            9.22395774978213e-05
        ],
        "align_select": "select Friend.friend_id",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Who are the friends of the high school student named 'Kyle.'",
        "gold_select": "select Highschooler.name",
        "select_candidates": [
            "select Friend.friend_id",
            "select Friend.friend_id, Highschooler.name",
            "select distinct Friend.friend_id",
            "select Friend.friend_id, Highschooler.grade"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Friend",
        "table_candidates": [
            "Highschooler Friend",
            "Highschooler Friend Likes",
            "Highschooler Friend Likes"
        ],
        "align_scores": [
            0.11521758884191513,
            9.786806913325563e-05,
            0.00036573727265931666,
            7.9892881331034e-05,
            0.029471877962350845,
            0.00011380201613064855,
            0.00020342133939266205,
            6.510697858175263e-05
        ],
        "align_select": "select Friend.friend_id",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the number of likes that Kyle, a high school student has.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Highschooler.name",
            "select count(*), Highschooler.name, Likes.student_id",
            "select count(*), Highschooler.ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Likes",
        "table_candidates": [
            "Highschooler Likes"
        ],
        "align_scores": [
            0.9908926486968994,
            6.584248330909759e-05,
            0.0002860934182535857,
            5.657244037138298e-05,
            0.000140377800562419,
            5.860774763277732e-05,
            0.0002759757626336068,
            6.345474685076624e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "In Indiana which (professional) has treated on more than 2 patients and his or her ID,last name,cell phone?",
        "gold_select": "select Professionals.professional_id, Professionals.last_name, Professionals.cell_number",
        "select_candidates": [
            "select Professionals.professional_id, Professionals.last_name, Professionals.cell_number",
            "select Treatments.professional_id, Professionals.last_name, Professionals.cell_number",
            "select Professionals.first_name, Professionals.last_name, Professionals.cell_number",
            "select Professionals.role_code, Professionals.last_name, Professionals.cell_number"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-UNION-SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY-HAVING",
            "SELECT-FROM-WHERE-GROUP BY-HAVING-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "Professionals Treatments",
        "table_candidates": [
            "Professionals Treatments",
            "Dogs Professionals Treatments",
            "Owners Professionals Treatments"
        ],
        "align_scores": [
            0.5828589200973511,
            0.000141577169415541,
            0.013415438123047352,
            0.00010419802129035816,
            0.0008143716841004789,
            8.40976572362706e-05,
            0.002014023019000888,
            0.000112739740870893
        ],
        "align_select": "select Professionals.professional_id, Professionals.last_name, Professionals.cell_number",
        "align_structure": "SELECT-FROM-WHERE-GROUP BY-HAVING"
    },
    {
        "question": "Which professionals live in Indiana and did more than two treatments? List his or her ID, last name and cell phone.",
        "gold_select": "select Professionals.professional_id, Professionals.last_name, Professionals.cell_number",
        "select_candidates": [
            "select Professionals.professional_id, Professionals.last_name, Professionals.cell_number",
            "select Professionals.first_name, Professionals.last_name, Professionals.cell_number",
            "select Treatments.professional_id, Professionals.last_name, Professionals.cell_number",
            "select t8.c2, Professionals.last_name, Professionals.cell_number"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-UNION-SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY-HAVING",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "Professionals Treatments",
        "table_candidates": [
            "Professionals Treatments",
            "Dogs Professionals Treatments",
            "Owners Professionals Treatments",
            "Treatment_Types Professionals Treatments",
            "Sizes Professionals Treatments",
            "Breeds Professionals Treatments",
            "Charges Professionals Treatments"
        ],
        "align_scores": [
            0.16431984305381775,
            0.0004059478233102709,
            0.00042761655640788376,
            0.0002131651999661699,
            0.056773241609334946,
            0.0003912873798981309,
            0.0007620175601914525,
            0.00021966647182125598
        ],
        "align_select": "select Professionals.professional_id, Professionals.last_name, Professionals.cell_number",
        "align_structure": "SELECT-FROM-WHERE-GROUP BY-HAVING"
    },
    {
        "question": "Find ID, Last Name & Cell Phone of those people living in Indiana having treated > 2 patients.",
        "gold_select": "select Professionals.professional_id, Professionals.last_name, Professionals.cell_number",
        "select_candidates": [
            "select Professionals.professional_id, Owners.last_name & Owners.cell_number",
            "select Professionals.professional_id, Owners.last_name, Owners.cell_number",
            "select Professionals.first_name, Owners.last_name, Owners.cell_number",
            "select Professionals.first_name, Owners.last_name & Owners.cell_number"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-UNION-SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY-HAVING",
            "SELECT-FROM-WHERE-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "Professionals Treatments",
        "table_candidates": [
            "Owners Professionals Treatments",
            "Owners Professionals",
            "Owners Dogs Professionals Treatments",
            "Sizes Owners Professionals Treatments",
            "Treatment_Types Owners Professionals Treatments"
        ],
        "align_scores": [
            0.004048948176205158,
            8.24932285468094e-05,
            0.0056338137947022915,
            8.500698459101841e-05,
            0.00030123000033199787,
            6.403288716683164e-05,
            0.00032384993392042816,
            6.571195262949914e-05
        ],
        "align_select": "select Professionals.professional_id, Owners.last_name & Owners.cell_number",
        "align_structure": "SELECT-FROM-WHERE-GROUP BY-HAVING"
    },
    {
        "question": "Find the ids, names and cell numbers of the doctors living in Indiana or having treated over 2 patients.",
        "gold_select": "select Professionals.professional_id, Professionals.last_name, Professionals.cell_number",
        "select_candidates": [
            "select Professionals.professional_id, Professionals.first_name, Professionals.cell_number",
            "select Professionals.first_name, Professionals.last_name, Professionals.cell_number",
            "select Treatments.professional_id, Professionals.first_name, Professionals.cell_number",
            "select Professionals.professional_id, Professionals.role_code, Professionals.first_name, Professionals.cell_number"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-UNION-SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-WHERE-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals Treatments",
        "table_candidates": [
            "Professionals Treatments",
            "Dogs Professionals Treatments",
            "Owners Professionals Treatments",
            "Treatment_Types Professionals Treatments",
            "Sizes Professionals Treatments",
            "Charges Professionals Treatments",
            "Breeds Professionals Treatments"
        ],
        "align_scores": [
            0.0025539910420775414,
            0.0006082883337512612,
            0.004789107013493776,
            0.0008077706443145871,
            0.002800503745675087,
            0.0007592479814775288,
            0.0002564002061262727,
            0.00017851096345111728
        ],
        "align_select": "select Professionals.professional_id, Professionals.first_name, Professionals.cell_number",
        "align_structure": "SELECT-FROM-WHERE-UNION-SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Find all the ids, last names and cell phones of the professionals who live in Indiana or have performed more than two treatments.",
        "gold_select": "select Professionals.professional_id, Professionals.last_name, Professionals.cell_number",
        "select_candidates": [
            "select Professionals.professional_id, Professionals.last_name, Professionals.cell_number",
            "select Treatments.professional_id, Professionals.last_name, Professionals.cell_number",
            "select Professionals.first_name, Professionals.last_name, Professionals.cell_number",
            "select Professionals.role_code, Professionals.last_name, Professionals.cell_number"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-UNION-SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-WHERE-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals Treatments",
        "table_candidates": [
            "Professionals Treatments",
            "Dogs Professionals Treatments",
            "Owners Professionals Treatments",
            "Treatment_Types Professionals Treatments",
            "Sizes Professionals Treatments",
            "Breeds Professionals Treatments",
            "Charges Professionals Treatments"
        ],
        "align_scores": [
            0.8702226877212524,
            0.04217164218425751,
            0.7027465105056763,
            0.029872650280594826,
            0.0003959702153224498,
            0.00021703020320273936,
            0.008602190762758255,
            0.0009983063209801912
        ],
        "align_select": "select Professionals.professional_id, Professionals.last_name, Professionals.cell_number",
        "align_structure": "SELECT-FROM-WHERE-UNION-SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Find the ID, LN and CELL PHONE of professional who lives in Indiana or has done more than 2 treatments.",
        "gold_select": "select Professionals.professional_id, Professionals.last_name, Professionals.cell_number",
        "select_candidates": [
            "select Professionals.professional_id, Professionals.last_name, Professionals.cell_number",
            "select Treatments.professional_id, Professionals.last_name, Professionals.cell_number",
            "select Professionals.first_name, Professionals.last_name, Professionals.cell_number",
            "select t8.c2, Professionals.last_name, Professionals.cell_number"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-UNION-SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-WHERE-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals Treatments",
        "table_candidates": [
            "Professionals Treatments",
            "Dogs Professionals Treatments",
            "Owners Professionals Treatments",
            "Treatment_Types Professionals Treatments",
            "Breeds Professionals Treatments"
        ],
        "align_scores": [
            0.126224547624588,
            0.004096501972526312,
            0.0628933385014534,
            0.0032464605756103992,
            0.0003704781993292272,
            0.00021272704179864377,
            0.00017639224824961275,
            0.00010848379315575585
        ],
        "align_select": "select Professionals.professional_id, Professionals.last_name, Professionals.cell_number",
        "align_structure": "SELECT-FROM-WHERE-UNION-SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Who lives in Indiana and has done over 2 treatments? (find ID, lastname, cellphone).",
        "gold_select": "select Professionals.professional_id, Professionals.last_name, Professionals.cell_number",
        "select_candidates": [
            "select Treatments.professional_id, Owners.last_name, Owners.cell_number",
            "select Professionals.first_name, Owners.last_name, Owners.cell_number",
            "select t8.c1, Owners.last_name, Owners.cell_number",
            "select t8.c2, Owners.last_name, Owners.cell_number"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-UNION-SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY-HAVING",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "Professionals Treatments",
        "table_candidates": [
            "Owners Treatments",
            "Sizes Owners Treatments"
        ],
        "align_scores": [
            0.13419978320598602,
            0.0004469525010790676,
            0.00030789183801971376,
            0.00014717373414896429,
            0.0005216131685301661,
            0.00018086092313751578,
            0.0004421318299137056,
            0.00014165184984449297
        ],
        "align_select": "select Treatments.professional_id, Owners.last_name, Owners.cell_number",
        "align_structure": "SELECT-FROM-WHERE-GROUP BY-HAVING"
    },
    {
        "question": "List the email addresses of professionals living in Wisconsin OR Hawaii.",
        "gold_select": "select Professionals.email_address",
        "select_candidates": [
            "select Professionals.email_address",
            "select Professionals.email_address, Professionals.home_phone",
            "select Professionals.email_address, Professionals.last_name",
            "select Professionals.email_address (or Professionals.home_phone)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals",
        "table_candidates": [
            "Professionals",
            "Dogs Professionals",
            "Owners Professionals"
        ],
        "align_scores": [
            0.9838269948959351,
            0.0027892976067960262,
            0.00016203545965254307,
            6.195133755682036e-05,
            0.00012820975098293275,
            6.251531158341095e-05,
            0.0017491773469373584,
            9.472998499404639e-05
        ],
        "align_select": "select Professionals.email_address",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List the e-mails of professionals who live in Wisconsin or Hawaii.",
        "gold_select": "select Professionals.email_address",
        "select_candidates": [
            "select Professionals.email_address",
            "select Professionals.email_address, Professionals.home_phone",
            "select Professionals.email_address, Professionals.last_name",
            "select Professionals.email_address (or Professionals.home_phone)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals",
        "table_candidates": [
            "Professionals",
            "Dogs Professionals",
            "Owners Professionals",
            "Treatment_Types Professionals",
            "Sizes Professionals",
            "Breeds Professionals",
            "Professionals Treatments"
        ],
        "align_scores": [
            0.9891911745071411,
            0.003690765704959631,
            0.00022858314332552254,
            6.514212145702913e-05,
            0.00016189400048460811,
            6.645378743996844e-05,
            0.0033760122023522854,
            0.00011207924399059266
        ],
        "align_select": "select Professionals.email_address",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the emails of professionals living in either Wisconsin or Hawaii.",
        "gold_select": "select Professionals.email_address",
        "select_candidates": [
            "select Professionals.email_address",
            "select Professionals.email_address, Professionals.home_phone",
            "select Professionals.email_address, Professionals.last_name",
            "select Professionals.email_address (or Professionals.home_phone)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals",
        "table_candidates": [
            "Professionals",
            "Dogs Professionals",
            "Owners Professionals"
        ],
        "align_scores": [
            0.9881927371025085,
            0.003446216695010662,
            0.00022101332433521748,
            6.648128328379244e-05,
            0.00015484573668800294,
            6.585333903785795e-05,
            0.0033727330155670643,
            0.000133859648485668
        ],
        "align_select": "select Professionals.email_address",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the email addresses of professionals living in either 'Wisconsin' or 'Hawaii'?",
        "gold_select": "select Professionals.email_address",
        "select_candidates": [
            "select Professionals.email_address",
            "select Professionals.email_address, Professionals.home_phone",
            "select Professionals.email_address, Professionals.last_name",
            "select Professionals.email_address (or Professionals.home_phone)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals",
        "table_candidates": [
            "Professionals",
            "Dogs Professionals",
            "Owners Professionals",
            "Professionals Treatments"
        ],
        "align_scores": [
            0.9934525489807129,
            0.0002759983763098717,
            0.0001338609290542081,
            6.271767779253423e-05,
            0.00012017302651656792,
            6.044458132237196e-05,
            0.005183667875826359,
            8.074573270278051e-05
        ],
        "align_select": "select Professionals.email_address",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the emails of professionals living in Hawaii or Wisconsin?",
        "gold_select": "select Professionals.email_address",
        "select_candidates": [
            "select Professionals.email_address",
            "select Professionals.email_address, Professionals.home_phone",
            "select Professionals.email_address, Professionals.last_name",
            "select Professionals.email_address (or Professionals.home_phone)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals",
        "table_candidates": [
            "Professionals",
            "Dogs Professionals",
            "Owners Professionals"
        ],
        "align_scores": [
            0.9919804334640503,
            0.0026567461900413036,
            0.00021068789646960795,
            6.353006756398827e-05,
            0.0001388500677421689,
            6.269429286476225e-05,
            0.001797746866941452,
            0.00010741939331637695
        ],
        "align_select": "select Professionals.email_address",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Who are the email addresses belonging to the professionals residing in Hawaii or Wisconsin?",
        "gold_select": "select Professionals.email_address",
        "select_candidates": [
            "select Professionals.email_address",
            "select Professionals.email_address, Professionals.home_phone",
            "select Professionals.email_address, Professionals.last_name",
            "select Professionals.email_address, Professionals.state"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals",
        "table_candidates": [
            "Professionals",
            "Dogs Professionals",
            "Owners Professionals"
        ],
        "align_scores": [
            0.895129919052124,
            0.0006978062447160482,
            0.00014304106298368424,
            6.600769120268524e-05,
            0.0001900973147712648,
            6.949128146516159e-05,
            0.00015986787911970168,
            8.071517368080094e-05
        ],
        "align_select": "select Professionals.email_address",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "of the professionals living in Hawaii or Wisconsin, what are their email addresses?",
        "gold_select": "select Professionals.email_address",
        "select_candidates": [
            "select Professionals.email_address",
            "select Professionals.email_address, Professionals.home_phone",
            "select Professionals.email_address, Professionals.last_name",
            "select Professionals.email_address (or Professionals.home_phone)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals",
        "table_candidates": [
            "Professionals",
            "Dogs Professionals",
            "Owners Professionals"
        ],
        "align_scores": [
            0.9707997441291809,
            0.002788473851978779,
            0.0001597820664756,
            6.864769238745794e-05,
            0.00014943347196094692,
            6.369853508658707e-05,
            0.014966952614486217,
            9.324520215159282e-05
        ],
        "align_select": "select Professionals.email_address",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which are the emails of professionals in either Hawaii or Wisconsin?",
        "gold_select": "select Professionals.email_address",
        "select_candidates": [
            "select Professionals.email_address",
            "select Professionals.email_address, Professionals.home_phone",
            "select Professionals.email_address, Professionals.last_name",
            "select Professionals.email_address (or Professionals.home_phone)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals",
        "table_candidates": [
            "Professionals",
            "Dogs Professionals"
        ],
        "align_scores": [
            0.9942786693572998,
            0.0009307478321716189,
            0.0001757030258886516,
            6.603483052458614e-05,
            0.00013177456276025623,
            6.479005241999403e-05,
            0.0019633136689662933,
            0.0001002976787276566
        ],
        "align_select": "select Professionals.email_address",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which is the email of a professional living in one of Wisconsin or Hawaii?",
        "gold_select": "select Professionals.email_address",
        "select_candidates": [
            "select Professionals.email_address",
            "select Professionals.email_address, Professionals.home_phone",
            "select Professionals.email_address, Professionals.last_name",
            "select Professionals.email_address (or Professionals.home_phone)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals",
        "table_candidates": [
            "Professionals",
            "Dogs Professionals",
            "Owners Professionals"
        ],
        "align_scores": [
            0.9800368547439575,
            0.03193778544664383,
            0.00017600011778995395,
            7.655836088815704e-05,
            0.00015714936307631433,
            8.087835158221424e-05,
            0.003355649998411536,
            0.00017717033915687352
        ],
        "align_select": "select Professionals.email_address",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Of the professionals living in either Wisconsin or Hawaii, find their email addresses.",
        "gold_select": "select Professionals.email_address",
        "select_candidates": [
            "select Professionals.email_address",
            "select the Professionals.email_address",
            "select their Professionals.email_address",
            "select Professionals.email_address "
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals",
        "table_candidates": [
            "Professionals",
            "Dogs Professionals",
            "Owners Professionals",
            "Treatment_Types Professionals"
        ],
        "align_scores": [
            0.9233216643333435,
            0.002022935776039958,
            0.0019450690597295761,
            0.00016344412870239466,
            0.003020663745701313,
            0.00023822554794605821,
            0.9233216643333435,
            0.002022935776039958
        ],
        "align_select": "select Professionals.email_address",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List the names of singers who aren't French.",
        "gold_select": "select singer.Name",
        "select_candidates": [
            "select singer.Name",
            "select distinct singer.Name",
            "select singer.Name, singer.Citizenship",
            "select singer.Name, singer.Birth_Year"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.9822266101837158,
            0.00010390017268946394,
            0.04418114572763443,
            0.00010643140558386222,
            0.00017461823881603777,
            6.068490256438963e-05,
            0.00016906623204704374,
            6.538147863466293e-05
        ],
        "align_select": "select singer.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Who is not French and has been a singer?",
        "gold_select": "select singer.Name",
        "select_candidates": [
            "select singer.Name",
            "select distinct singer.Name",
            "select singer.Name, singer.Citizenship",
            "select distinct singer.Name, singer.Citizenship"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.8177675604820251,
            0.9869492650032043,
            0.188374862074852,
            0.001531977322883904,
            0.0003196811012458056,
            0.00025174158508889377,
            0.0010143452091142535,
            9.720712841954082e-05
        ],
        "align_select": "select singer.Name",
        "align_structure": "SELECT-FROM-WHERE"
    }
]