[
    {
        "question": "List all song names by singers below the average age.",
        "gold_select": "select singer.Song_Name",
        "select_candidates": [
            "select singer.Song_Name",
            "select singer.Song_Name, singer.Age",
            "select singer.Song_Name, singer.Song_release_year",
            "select singer.Song_Name, singer.Is_male"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer",
            "singer singer_in_concert"
        ],
        "align_scores": [
            0.9918994903564453,
            0.00012480895384214818,
            0.0001722963061183691,
            6.225450488273054e-05,
            0.00013266467431094497,
            5.6617507652845234e-05,
            0.00015131381223909557,
            5.689429599442519e-05
        ],
        "align_select": "select singer.Song_Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are all the song names by singers who are younger than average?",
        "gold_select": "select singer.Song_Name",
        "select_candidates": [
            "select singer.Song_Name",
            "select singer.Song_Name, singer.Is_male",
            "select singer.Song_Name, singer.Age",
            "select singer.Song_Name, singer.Song_release_year"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.9886913299560547,
            9.964447235688567e-05,
            0.00014148338232189417,
            5.599257565336302e-05,
            0.00019421704928390682,
            6.18018166278489e-05,
            0.00012849063205067068,
            5.5150612752186134e-05
        ],
        "align_select": "select singer.Song_Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the number of pets whose weight is lighter than 10.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Pets.PetID",
            "select count(*), Pets.PetID",
            "select count(*), Pets.PetType"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Pets",
        "table_candidates": [
            "Pets"
        ],
        "align_scores": [
            0.9920486807823181,
            0.00016213128401432186,
            0.00024421975831501186,
            0.001563505851663649,
            0.00024421975831501186,
            0.001563505851663649,
            0.0002367745037190616,
            0.025889640673995018
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the first name and gender of student who have at least one pet.",
        "gold_select": "select Student.Fname, Student.Sex",
        "select_candidates": [
            "select distinct Student.Fname, Student.Sex",
            "select Student.Fname, Student.Sex",
            "select distinct Student.LName, Student.Sex",
            "select unique Student.Fname, Student.Sex"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "Student Has_Pet",
        "table_candidates": [
            "Student Has_Pet",
            "Student Has_Pet Pets",
            "Student Pets"
        ],
        "align_scores": [
            0.013493669219315052,
            0.002701760735362768,
            0.98969966173172,
            0.9906705617904663,
            0.0010677350219339132,
            0.0005769520066678524,
            0.0007901840726844966,
            0.0005206335918046534
        ],
        "align_select": "select Student.Fname, Student.Sex",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Find the first name and gender of student who have at most one pet.",
        "gold_select": "select Student.Fname, Student.Sex",
        "select_candidates": [
            "select Student.Fname, Student.Sex",
            "select Student.StuID, Student.Fname, Student.Sex",
            "select distinct Student.Fname, Student.Sex",
            "select Student.LName, Student.Sex"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Student Has_Pet",
        "table_candidates": [
            "Student Has_Pet",
            "Student Has_Pet Pets",
            "Student Pets"
        ],
        "align_scores": [
            0.9912760257720947,
            8.336508471984416e-05,
            0.00020183133892714977,
            6.413830851670355e-05,
            0.0030282207299023867,
            5.74436089664232e-05,
            0.0008197700954042375,
            7.167404692154378e-05
        ],
        "align_select": "select Student.Fname, Student.Sex",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What is the first name and gender of the all the students who have at least one pet?",
        "gold_select": "select Student.Fname, Student.Sex",
        "select_candidates": [
            "select distinct Student.Fname, Student.Sex",
            "select Student.Fname, Student.Sex",
            "select distinct Student.Fname, Student.Age, Student.Sex",
            "select distinct Student.LName, Student.Sex"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "Student Has_Pet",
        "table_candidates": [
            "Student Has_Pet",
            "Student Has_Pet Pets",
            "Student Pets"
        ],
        "align_scores": [
            0.03274328634142876,
            0.0032383438665419817,
            0.9847038984298706,
            0.9726636409759521,
            0.00014839647337794304,
            0.00013918090553488582,
            0.002082294784486294,
            0.0004135813214816153
        ],
        "align_select": "select Student.Fname, Student.Sex",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the first name and gender of the all the students who have at most one pet?",
        "gold_select": "select Student.Fname, Student.Sex",
        "select_candidates": [
            "select Student.Fname, Student.Sex",
            "select distinct Student.Fname, Student.Sex",
            "select Student.StuID, Student.Fname, Student.Sex",
            "select Student.LName, Student.Sex"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Student Has_Pet",
        "table_candidates": [
            "Student Has_Pet",
            "Student Pets"
        ],
        "align_scores": [
            0.9838933944702148,
            0.00011572517541935667,
            0.004856892395764589,
            7.565559644717723e-05,
            0.00030132484971545637,
            7.731151708867401e-05,
            0.001516353921033442,
            9.588932152837515e-05
        ],
        "align_select": "select Student.Fname, Student.Sex",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Find the model of the car whose weight is over the average weight.",
        "gold_select": "select car_names.Model",
        "select_candidates": [
            "select model_list.Model",
            "select car_names.Model",
            "select model_list.ModelId, model_list.Model",
            "select model_list.Model, car_names.Model"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_names cars_data",
        "table_candidates": [
            "model_list car_names cars_data",
            "car_makers model_list car_names cars_data",
            "continents model_list car_names cars_data",
            "car_names cars_data",
            "countries car_names cars_data",
            "model_list cars_data"
        ],
        "align_scores": [
            0.9809160828590393,
            6.600806955248117e-05,
            0.9892001152038574,
            6.402727012755349e-05,
            0.00019463711942080408,
            6.945974746486172e-05,
            0.00022020180767867714,
            6.416956603061408e-05
        ],
        "align_select": "select model_list.Model",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the model for the car with a weight larger than the average?",
        "gold_select": "select car_names.Model",
        "select_candidates": [
            "select model_list.Model",
            "select model_list.ModelId, model_list.Model",
            "select model_list.Model, car_names.Model",
            "select car_names.Model"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_names cars_data",
        "table_candidates": [
            "model_list cars_data",
            "model_list car_names cars_data",
            "car_makers model_list cars_data",
            "countries car_names cars_data",
            "car_names cars_data",
            "car_makers model_list car_names cars_data",
            "continents model_list car_names cars_data",
            "car_makers car_names cars_data"
        ],
        "align_scores": [
            0.9880867004394531,
            9.283397230319679e-05,
            0.00017675930575933307,
            6.41813749098219e-05,
            0.00020493225019890815,
            5.905708167119883e-05,
            0.9906913638114929,
            9.82210913207382e-05
        ],
        "align_select": "select model_list.Model",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the model for the car with a weight at least the average?",
        "gold_select": "select car_names.Model",
        "select_candidates": [
            "select model_list.Model",
            "select car_names.Model",
            "select model_list.ModelId, model_list.Model",
            "select model_list.Model, car_names.Model"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_names cars_data",
        "table_candidates": [
            "model_list car_names cars_data",
            "model_list cars_data",
            "car_names cars_data",
            "car_makers model_list cars_data",
            "countries car_names cars_data",
            "car_makers model_list car_names cars_data",
            "car_makers car_names cars_data",
            "continents car_names cars_data"
        ],
        "align_scores": [
            0.9778774380683899,
            0.5913439989089966,
            0.9816099405288696,
            0.2224712371826172,
            0.0002077289391309023,
            0.0002696904120966792,
            0.00022746629838366061,
            0.00019634622731246054
        ],
        "align_select": "select model_list.Model",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which distinct car models are the produced before 1980?",
        "gold_select": "select distinct model_list.Model",
        "select_candidates": [
            "select distinct car_names.Model",
            "select distinct car_names.Model, car_names.Make",
            "select distinct model_list.Model",
            "select distinct car_names.Model"
        ],
        "select_labels": [
            0.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "model_list car_names cars_data",
        "table_candidates": [
            "model_list car_names",
            "car_names",
            "car_makers model_list car_names",
            "car_makers car_names",
            "countries car_names",
            "model_list car_names cars_data"
        ],
        "align_scores": [
            0.987381637096405,
            0.007746994961053133,
            0.00017931002366822213,
            0.00016827142098918557,
            0.9901206493377686,
            0.016854068264365196,
            0.987381637096405,
            0.007746994961053133
        ],
        "align_select": "select distinct car_names.Model",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the different models for the cards produced before 1980?",
        "gold_select": "select distinct model_list.Model",
        "select_candidates": [
            "select distinct model_list.Model",
            "select distinct model_list.Model, model_list.ModelId",
            "select distinct model_list.Model, t3.c3",
            "select distinct model_list.Model, model_list.Maker"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "model_list car_names cars_data",
        "table_candidates": [
            "model_list cars_data",
            "model_list car_names",
            "model_list"
        ],
        "align_scores": [
            0.9951386451721191,
            0.00011928354069823399,
            0.00021258510241750628,
            7.185553113231435e-05,
            0.00033049724879674613,
            7.641605043318123e-05,
            0.00013022277562413365,
            6.884147296659648e-05
        ],
        "align_select": "select distinct model_list.Model",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the countries having more than one car maker? List name and id.",
        "gold_select": "select countries.CountryName, countries.CountryId",
        "select_candidates": [
            "select countries.CountryName, countries.CountryId",
            "select countries.CountryName, car_makers.Id",
            "select countries.CountryName, car_makers.Country",
            "select countries.CountryName, continents.ContId"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "countries car_makers",
        "table_candidates": [
            "countries car_makers"
        ],
        "align_scores": [
            0.9910908937454224,
            0.00012117053847759962,
            0.010172654874622822,
            0.00012741790851578116,
            0.0032933566253632307,
            8.947313472162932e-05,
            0.01917698048055172,
            0.00010871752601815388
        ],
        "align_select": "select countries.CountryName, countries.CountryId",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the countries having at most one car maker? List name and id.",
        "gold_select": "select countries.CountryName, countries.CountryId",
        "select_candidates": [
            "select countries.CountryName, countries.CountryId",
            "select countries.CountryName, car_makers.Id",
            "select countries.CountryName, continents.ContId",
            "select countries.CountryName, car_makers.Country"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "countries car_makers",
        "table_candidates": [
            "countries car_makers"
        ],
        "align_scores": [
            0.9893704652786255,
            0.0001684024027781561,
            0.009667824022471905,
            0.0001896973408292979,
            0.01706472598016262,
            0.0001444363297196105,
            0.0037354875821620226,
            8.209433872252703e-05
        ],
        "align_select": "select countries.CountryName, countries.CountryId",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the names and ids of all countries with more than one car maker?",
        "gold_select": "select countries.CountryName, countries.CountryId",
        "select_candidates": [
            "select countries.CountryName, countries.CountryId",
            "select countries.CountryName, car_makers.Id",
            "select countries.CountryName, countries.CountryId",
            "select countries.CountryName, countries.CountryId"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "countries car_makers",
        "table_candidates": [
            "countries car_makers"
        ],
        "align_scores": [
            0.9900409579277039,
            0.0004726277547888458,
            0.013161446899175644,
            0.00037977698957547545,
            0.9900409579277039,
            0.0004726277547888458,
            0.9900409579277039,
            0.0004726277547888458
        ],
        "align_select": "select countries.CountryName, countries.CountryId",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the names and ids of all countries with at most one car maker?",
        "gold_select": "select countries.CountryName, countries.CountryId",
        "select_candidates": [
            "select countries.CountryName, countries.CountryId",
            "select countries.CountryName, car_makers.Id",
            "select countries.CountryName, t01.c0",
            "select countries.CountryName, countries.CountryId"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "countries car_makers",
        "table_candidates": [
            "countries car_makers"
        ],
        "align_scores": [
            0.9883225560188293,
            0.00021400052355602384,
            0.01424233429133892,
            0.0002187341160606593,
            0.000988141167908907,
            0.00012757499644067138,
            0.9883225560188293,
            0.00021400052355602384
        ],
        "align_select": "select countries.CountryName, countries.CountryId",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What is the number of the cars with horsepower less than 150?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), cars_data.Id",
            "select count(*), cars_data.MPG, cars_data.Cylinders",
            "select count(*), cars_data.Id, cars_data.MPG"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data",
            "car_names cars_data",
            "model_list cars_data",
            "car_makers cars_data"
        ],
        "align_scores": [
            0.9935126900672913,
            0.00013547090929932892,
            0.00022122709196992218,
            0.003441323759034276,
            0.00012069428339600563,
            8.460796379949898e-05,
            0.00014632240345235914,
            8.209214138332754e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the number of the cars with horsepower at least 150?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), cars_data.Id",
            "select count(*), t5.dcars_data.Id",
            "select count(*), cars_data.MPG, cars_data.Cylinders"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data",
            "car_names cars_data"
        ],
        "align_scores": [
            0.993283748626709,
            0.00018959572480525821,
            0.00023970675829332322,
            0.003534389426931739,
            0.0002225593343609944,
            0.0009394712396897376,
            0.00012041242007398978,
            9.577316086506471e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the number of the cars with horsepower at most 150?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), cars_data.Id",
            "select count(*), cars_data.MPG, cars_data.Cylinders",
            "select count(*), cars_data.Id, cars_data.MPG"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data",
            "car_names cars_data",
            "model_list cars_data",
            "car_makers cars_data"
        ],
        "align_scores": [
            0.9933690428733826,
            5.612985842162743e-05,
            0.0002480921393726021,
            5.718110332963988e-05,
            0.00012591022823471576,
            5.574908573180437e-05,
            0.00016166429850272834,
            5.825147673022002e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the number of cars with a horsepower less than 150?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), cars_data.Id",
            "select count(*), cars_data.MPG",
            "select count(*) dependant on cars_data.Id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data"
        ],
        "align_scores": [
            0.9932428002357483,
            0.0001293600507779047,
            0.00023453263565897942,
            0.000762865471187979,
            0.0002377202472416684,
            0.00017111880879383534,
            0.00037413410609588027,
            0.0003143489302601665
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the number of cars with a horsepower at least 150?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), cars_data.Id",
            "select count(*), t5.dcars_data.Id",
            "select count(*) (cars_data.Id)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data"
        ],
        "align_scores": [
            0.9928048253059387,
            0.00022630121384281665,
            0.0002463669516146183,
            0.0001297369453823194,
            0.00022259286197368056,
            0.0001432403369108215,
            0.0003114164574071765,
            0.00013523356756195426
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the number of cars with a horsepower at most 150?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), cars_data.Id",
            "select count(*), cars_data.MPG, cars_data.Cylinders",
            "select count(*), t5.datum(cars_data.Id)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data",
            "car_names cars_data",
            "model_list cars_data",
            "car_makers cars_data"
        ],
        "align_scores": [
            0.9936802387237549,
            0.00030058054835535586,
            0.0002545859315432608,
            0.00013182911789044738,
            0.00012419208360370249,
            7.844170613680035e-05,
            0.0002228680968983099,
            9.665089601185173e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which countries in europe have more than 3 car manufacturers?",
        "gold_select": "select countries.CountryName",
        "select_candidates": [
            "select countries.CountryName",
            "select countries.CountryName, continents.Continent",
            "select countries.CountryName, continents.ContId",
            "select countries.CountryName, t0.c2"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY-HAVING",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "continents countries car_makers",
        "table_candidates": [
            "continents countries car_makers",
            "countries car_makers"
        ],
        "align_scores": [
            0.9725426435470581,
            0.00014255984569899738,
            0.0003942531766369939,
            9.870369831332937e-05,
            0.0023765889927744865,
            0.0001089771103579551,
            0.00022171363525558263,
            0.00011645824270090088
        ],
        "align_select": "select countries.CountryName",
        "align_structure": "SELECT-FROM-WHERE-GROUP BY-HAVING"
    },
    {
        "question": "Which countries in europe have less than 3 car manufacturers?",
        "gold_select": "select countries.CountryName",
        "select_candidates": [
            "select countries.CountryName",
            "select countries.CountryName, continents.Continent",
            "select countries.CountryName, continents.ContId",
            "select countries.CountryName, t0.c2"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY-HAVING",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "continents countries car_makers",
        "table_candidates": [
            "continents countries car_makers"
        ],
        "align_scores": [
            0.9713485836982727,
            0.0001228406763402745,
            0.0003561778867151588,
            8.882340625859797e-05,
            0.002006128430366516,
            9.68969106907025e-05,
            0.00019164624973200262,
            8.686383807798848e-05
        ],
        "align_select": "select countries.CountryName",
        "align_structure": "SELECT-FROM-WHERE-GROUP BY-HAVING"
    },
    {
        "question": "Which countries in europe have at most 3 car manufacturers?",
        "gold_select": "select countries.CountryName",
        "select_candidates": [
            "select countries.CountryName",
            "select countries.CountryName, continents.Continent",
            "select countries.CountryName, continents.ContId",
            "select countries.CountryName, t0.c2"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY-HAVING",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "continents countries car_makers",
        "table_candidates": [
            "continents countries car_makers",
            "countries car_makers"
        ],
        "align_scores": [
            0.9707863926887512,
            0.00018446892499923706,
            0.00039979731081984937,
            0.0001040494826156646,
            0.002821686677634716,
            0.00013818462321069092,
            0.00023528115707449615,
            0.00010532284795772284
        ],
        "align_select": "select countries.CountryName",
        "align_structure": "SELECT-FROM-WHERE-GROUP BY-HAVING"
    },
    {
        "question": "What are the names of all European countries with more than 3 manufacturers?",
        "gold_select": "select countries.CountryName",
        "select_candidates": [
            "select countries.CountryName",
            "select countries.CountryName, continents.Continent",
            "select countries.CountryName, continents.ContId",
            "select countries.CountryName, t0.c2"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY-HAVING",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "continents countries car_makers",
        "table_candidates": [
            "continents countries car_makers",
            "continents car_makers",
            "countries car_makers",
            "continents countries"
        ],
        "align_scores": [
            0.9641445279121399,
            0.00014733787975274026,
            0.0005404191324487329,
            0.00010417716111987829,
            0.0013846831861883402,
            0.00012729088484775275,
            0.0002530868514440954,
            9.9561846582219e-05
        ],
        "align_select": "select countries.CountryName",
        "align_structure": "SELECT-FROM-WHERE-GROUP BY-HAVING"
    },
    {
        "question": "What are the names of all European countries with less than 3 manufacturers?",
        "gold_select": "select countries.CountryName",
        "select_candidates": [
            "select countries.CountryName",
            "select countries.CountryName, continents.Continent",
            "select countries.CountryName, t0.c2",
            "select countries.CountryName, continents.ContId"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY-HAVING",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "continents countries car_makers",
        "table_candidates": [
            "continents countries car_makers",
            "continents countries",
            "countries car_makers"
        ],
        "align_scores": [
            0.9636069536209106,
            0.00014205073239281774,
            0.0004071003932040185,
            9.314460476161912e-05,
            0.00022650067694485188,
            8.353155863005668e-05,
            0.0009575776639394462,
            0.00011428104335209355
        ],
        "align_select": "select countries.CountryName",
        "align_structure": "SELECT-FROM-WHERE-GROUP BY-HAVING"
    },
    {
        "question": "What are the names of all European countries with at most 3 manufacturers?",
        "gold_select": "select countries.CountryName",
        "select_candidates": [
            "select countries.CountryName",
            "select countries.CountryName, continents.ContId",
            "select countries.CountryName, continents.Continent",
            "select countries.CountryName, car_makers.Maker"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY-HAVING",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "continents countries car_makers",
        "table_candidates": [
            "continents countries car_makers",
            "continents car_makers",
            "continents countries",
            "countries car_makers",
            "continents countries car_makers model_list"
        ],
        "align_scores": [
            0.9682539105415344,
            0.00022224674466997385,
            0.0014785638777539134,
            0.0001728614151943475,
            0.0004418685275595635,
            0.00011702239862643182,
            0.0004134810296818614,
            0.00010285907774232328
        ],
        "align_select": "select countries.CountryName",
        "align_structure": "SELECT-FROM-WHERE-GROUP BY-HAVING"
    },
    {
        "question": "What is the average horsepower of the cars after 1980?",
        "gold_select": "select avg(cars_data.Horsepower)",
        "select_candidates": [
            "select avg(cars_data.Horsepower)",
            "select avg(avg(cars_data.Horsepower)",
            "select an avg(cars_data.Horsepower)",
            "select avg(cars_data.Horsepower), cars_data.Year"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data",
            "model_list cars_data",
            "car_names cars_data",
            "car_makers cars_data"
        ],
        "align_scores": [
            0.9963386058807373,
            0.00011960063420701772,
            0.00042147585190832615,
            0.00010887033567996696,
            0.00036940944846719503,
            0.00011154624371556565,
            0.0001347358338534832,
            0.00011960178380832076
        ],
        "align_select": "select avg(cars_data.Horsepower)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the average horsepower for all cars produced after 1980?",
        "gold_select": "select avg(cars_data.Horsepower)",
        "select_candidates": [
            "select avg(cars_data.Horsepower)",
            "select avg(avg(cars_data.Horsepower)",
            "select an avg(cars_data.Horsepower)",
            "select  avg(cars_data.Horsepower)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data",
            "model_list cars_data",
            "car_names cars_data",
            "car_makers cars_data"
        ],
        "align_scores": [
            0.996292769908905,
            0.00010536936315475032,
            0.00046111311530694366,
            0.00010133595060324296,
            0.0003729872405529022,
            0.00010159127850783989,
            0.996292769908905,
            0.00010536936315475032
        ],
        "align_select": "select avg(cars_data.Horsepower)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many cars have less than 4 cylinders?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), cars_data.Cylinders",
            "select count(*), cars_data.Id",
            "select count(*) (cars_data.Id)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data"
        ],
        "align_scores": [
            0.9945240020751953,
            0.0001996706851059571,
            0.00022077742323745042,
            0.0051819393411278725,
            0.00024634157307446003,
            0.0024712816812098026,
            0.0002840690722223371,
            0.00014268305676523596
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many cars have at least 4 cylinders?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), cars_data.Id",
            "select count(*), cars_data.Cylinders",
            "select count(*) (cars_data.Id)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data"
        ],
        "align_scores": [
            0.9906734824180603,
            0.00043243521940894425,
            0.0002679598983377218,
            0.00030597898876294494,
            0.00022331711079459637,
            0.00019283533038105816,
            0.00032414152519777417,
            0.0001737342099659145
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many cars have at most 4 cylinders?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), cars_data.Id",
            "select count(*) (cars_data.Id)",
            "select count(*), t5.dcars_data.Id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data"
        ],
        "align_scores": [
            0.9935649037361145,
            0.0006927536451257765,
            0.00028307337197475135,
            0.0002659240853972733,
            0.00034894971759058535,
            0.00019062715000472963,
            0.0002393580216448754,
            0.0002283925423398614
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the number of cars with less than 4 cylinders?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), cars_data.Cylinders",
            "select count(*), cars_data.Id",
            "select count(*) (cars_data.Id)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data"
        ],
        "align_scores": [
            0.9949393272399902,
            0.00011420185910537839,
            0.00020449540170375258,
            0.002334738150238991,
            0.0002451038744766265,
            0.0003410156350582838,
            0.0002637493016663939,
            0.00012373981007840484
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the number of cars with at least 4 cylinders?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), cars_data.Id",
            "select count(*), cars_data.Cylinders",
            "select count(*), cars_data.MPG, cars_data.Cylinders"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data"
        ],
        "align_scores": [
            0.9915634393692017,
            0.00017954818031284958,
            0.00025341816945001483,
            9.636652248445898e-05,
            0.00021970688248984516,
            0.00015907653141766787,
            0.00010775292321341112,
            7.494793680962175e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the number of cars with at most 4 cylinders?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), cars_data.Id",
            "select count(*), cars_data.MPG, cars_data.Cylinders",
            "select count(*), t5.dcars_data.Id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data"
        ],
        "align_scores": [
            0.993872880935669,
            0.00024426073650829494,
            0.0002733336004894227,
            9.770823089638725e-05,
            0.00010663589637260884,
            7.91978309280239e-05,
            0.00024384191783610731,
            0.00010009950347011909
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which makers designed less than 3 car models? List full name and the id.",
        "gold_select": "select car_makers.FullName, car_makers.Id",
        "select_candidates": [
            "select car_makers.FullName, car_makers.Id",
            "select car_makers.Maker, car_makers.FullName, car_makers.Id",
            "select car_makers.FullName, model_list.Maker, model_list.ModelId",
            "select car_makers.FullName, car_names.Model, car_makers.Id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_makers model_list",
        "table_candidates": [
            "car_makers model_list car_names",
            "car_makers model_list",
            "countries model_list car_names",
            "car_makers car_names"
        ],
        "align_scores": [
            0.9741820096969604,
            0.0001576913782628253,
            0.0004774747940246016,
            8.614124817540869e-05,
            0.00021460761490743607,
            6.948551890673116e-05,
            0.00018278579227626324,
            7.699147681705654e-05
        ],
        "align_select": "select car_makers.FullName, car_makers.Id",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Which makers designed at least 3 car models? List full name and the id.",
        "gold_select": "select car_makers.FullName, car_makers.Id",
        "select_candidates": [
            "select car_makers.FullName, car_makers.Id",
            "select car_makers.Maker, car_makers.FullName, car_makers.Id",
            "select car_makers.FullName, model_list.Maker, model_list.ModelId",
            "select car_makers.FullName, car_names.Model, car_makers.Id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_makers model_list",
        "table_candidates": [
            "car_makers model_list car_names",
            "countries car_makers model_list car_names",
            "car_makers model_list"
        ],
        "align_scores": [
            0.9588878750801086,
            0.0001230374036822468,
            0.0005002919933758676,
            7.601115794386715e-05,
            0.0002586650662124157,
            6.39292920823209e-05,
            0.00038213757215999067,
            7.145485142245889e-05
        ],
        "align_select": "select car_makers.FullName, car_makers.Id",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Which makers designed at most 3 car models? List full name and the id.",
        "gold_select": "select car_makers.FullName, car_makers.Id",
        "select_candidates": [
            "select car_makers.FullName, car_makers.Id",
            "select car_makers.Maker, car_makers.FullName, car_makers.Id",
            "select car_makers.FullName, model_list.Maker, model_list.ModelId",
            "select car_makers.FullName, car_names.Model, car_makers.Id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_makers model_list",
        "table_candidates": [
            "car_makers model_list car_names",
            "countries model_list car_names",
            "car_makers model_list"
        ],
        "align_scores": [
            0.9737059473991394,
            0.00011300354526611045,
            0.0004924444365315139,
            7.308264321181923e-05,
            0.00030622060876339674,
            6.827243487350643e-05,
            0.00036316379555501044,
            6.966000364627689e-05
        ],
        "align_select": "select car_makers.FullName, car_makers.Id",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the names and ids of all makers with less than 3 models?",
        "gold_select": "select car_makers.FullName, car_makers.Id",
        "select_candidates": [
            "select car_makers.FullName, car_makers.Id",
            "select car_makers.FullName, model_list.Maker",
            "select car_makers.FullName, model_list.ModelId",
            "select car_makers.Maker, model_list.ModelId"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_makers model_list",
        "table_candidates": [
            "car_makers model_list",
            "car_makers model_list car_names",
            "countries model_list car_names"
        ],
        "align_scores": [
            0.9455620646476746,
            0.00013950886204838753,
            0.3290383815765381,
            0.0001284909958485514,
            0.0005827289423905313,
            9.095318091567606e-05,
            0.0008394990582019091,
            9.87515231827274e-05
        ],
        "align_select": "select car_makers.FullName, car_makers.Id",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the names and ids of all makers with at least 3 models?",
        "gold_select": "select car_makers.FullName, car_makers.Id",
        "select_candidates": [
            "select car_makers.FullName, car_makers.Id",
            "select car_makers.FullName, model_list.Maker",
            "select car_makers.Maker, model_list.Maker",
            "select car_makers.Maker, car_makers.Id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_makers model_list",
        "table_candidates": [
            "car_makers model_list",
            "car_makers model_list car_names",
            "continents car_makers model_list car_names"
        ],
        "align_scores": [
            0.961168110370636,
            0.00011646157508948818,
            0.4608150124549866,
            0.0001176684963866137,
            0.0010600656969472766,
            6.51018854114227e-05,
            0.9842813611030579,
            0.00010873773862840608
        ],
        "align_select": "select car_makers.FullName, car_makers.Id",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the names and ids of all makers with at most 3 models?",
        "gold_select": "select car_makers.FullName, car_makers.Id",
        "select_candidates": [
            "select car_makers.FullName, car_makers.Id",
            "select car_makers.FullName, model_list.Maker",
            "select car_makers.Maker, model_list.ModelId",
            "select car_makers.FullName, model_list.ModelId"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_makers model_list",
        "table_candidates": [
            "car_makers model_list car_names",
            "car_makers model_list",
            "countries model_list car_names",
            "model_list car_names"
        ],
        "align_scores": [
            0.9527527689933777,
            0.00011322660429868847,
            0.42076966166496277,
            0.00010228795872535557,
            0.0026642391458153725,
            8.083871944108978e-05,
            0.0006529767415486276,
            7.507095870096236e-05
        ],
        "align_select": "select car_makers.FullName, car_makers.Id",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Which distinctive models are produced by maker with the full name General Motors or weighing less than 3500?",
        "gold_select": "select distinct model_list.Model",
        "select_candidates": [
            "select distinct model_list.Model",
            "select distinct model_list.Model, car_makers.Maker",
            "select distinct model_list.Model-list(distinct model_list.Model)",
            "select distinctive model_list.Model"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_makers model_list car_names cars_data",
        "table_candidates": [
            "car_makers model_list cars_data",
            "car_makers model_list car_names",
            "car_makers model_list car_makers cars_data",
            "countries car_makers model_list cars_data",
            "countries car_makers model_list car_names",
            "car_makers model_list car_makers car_names"
        ],
        "align_scores": [
            0.9391793608665466,
            0.03444213420152664,
            0.0008540635462850332,
            0.0002634190896060318,
            0.00029175341478548944,
            9.772257908480242e-05,
            0.012752660550177097,
            0.0035640259739011526
        ],
        "align_select": "select distinct model_list.Model",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which distinctive models are produced by maker with the full name General Motors or weighing at most 3500?",
        "gold_select": "select distinct model_list.Model",
        "select_candidates": [
            "select distinct model_list.Model",
            "select distinct model_list.Model, car_makers.Maker",
            "select distinctive model_list.Model",
            "select distinct model_list.Model, model_list.Maker"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_makers model_list car_names cars_data",
        "table_candidates": [
            "car_makers model_list car_names",
            "car_makers model_list cars_data",
            "car_makers model_list car_makers cars_data",
            "countries car_makers model_list cars_data",
            "countries car_makers model_list car_names",
            "car_makers model_list car_makers model_list cars_data",
            "car_makers model_list car_makers car_names"
        ],
        "align_scores": [
            0.9714197516441345,
            0.0061037661507725716,
            0.0009167486568912864,
            0.00015420331328641623,
            0.016860824078321457,
            0.0006091075483709574,
            0.00028420862508937716,
            9.537325240671635e-05
        ],
        "align_select": "select distinct model_list.Model",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the different models created by either the car maker General Motors or weighed less than 3500?",
        "gold_select": "select distinct model_list.Model",
        "select_candidates": [
            "select distinct model_list.Model",
            "select distinct model_list.Model, car_makers.Maker",
            "select count(distinct model_list.Model)",
            "select distinct model_list.Model, car_makers.Maker, cars_data.Weight"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_makers model_list car_names cars_data",
        "table_candidates": [
            "car_makers model_list cars_data",
            "car_makers model_list car_names",
            "car_makers model_list car_names cars_data",
            "countries car_makers model_list cars_data",
            "continents car_makers model_list cars_data"
        ],
        "align_scores": [
            0.9843064546585083,
            0.00037069106474518776,
            0.0005316781462170184,
            9.531414980301633e-05,
            0.002024272456765175,
            9.120279719354585e-05,
            0.00018493736570235342,
            8.500616968376562e-05
        ],
        "align_select": "select distinct model_list.Model",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the different models created by either the car maker General Motors or weighed at most 3500?",
        "gold_select": "select distinct model_list.Model",
        "select_candidates": [
            "select distinct model_list.Model",
            "select count(distinct model_list.Model)",
            "select distinct model_list.Model, car_makers.Maker",
            "select distinct model_list.Model.c2"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_makers model_list car_names cars_data",
        "table_candidates": [
            "car_makers model_list cars_data",
            "car_makers model_list car_names",
            "countries car_makers model_list cars_data",
            "car_makers model_list car_makers cars_data",
            "countries car_makers model_list car_names",
            "car_makers model_list car_names cars_data",
            "car_makers model_list car_makers car_names"
        ],
        "align_scores": [
            0.9869531393051147,
            0.00036878627724945545,
            0.003489918541163206,
            8.32067962619476e-05,
            0.0004150834574829787,
            8.39457570691593e-05,
            0.0014647375792264938,
            0.00013166629651095718
        ],
        "align_select": "select distinct model_list.Model",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many countries has less than 2 car makers?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), car_makers.Country",
            "select count(*), countries.CountryName",
            "select count(*), countries.CountryId"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "countries car_makers",
        "table_candidates": [
            "countries car_makers",
            "countries car_makers model_list"
        ],
        "align_scores": [
            0.9900693297386169,
            0.012704155407845974,
            0.0005818464560434222,
            0.04018988832831383,
            0.0009327888838015497,
            0.10708113014698029,
            0.0008163164602592587,
            0.023177841678261757
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many countries has at least 2 car makers?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(distinct car_makers.Country)",
            "select count(distinct countries.CountryName)",
            "select count(*), countries.CountryName"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "countries car_makers",
        "table_candidates": [
            "countries car_makers",
            "countries car_makers model_list"
        ],
        "align_scores": [
            0.8413366675376892,
            0.01810869388282299,
            0.9719570875167847,
            0.0011013256153091788,
            0.6310686469078064,
            0.0065208557061851025,
            0.0022006649523973465,
            0.043306224048137665
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "How many countries has at most 2 car makers?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), car_makers.Country",
            "select count(*), countries.CountryName",
            "select count(distinct countries.CountryName)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "countries car_makers",
        "table_candidates": [
            "countries car_makers",
            "countries car_makers model_list"
        ],
        "align_scores": [
            0.08501844853162766,
            9.650150605011731e-05,
            0.07095244526863098,
            9.135285654338077e-05,
            0.08701879531145096,
            9.791577031137422e-05,
            0.025262000039219856,
            6.356254743877798e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What is the number of countries with less than 2 car makers?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), car_makers.Country",
            "select count(*), countries.CountryName",
            "select count(*), countries.CountryId"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "countries car_makers",
        "table_candidates": [
            "countries car_makers",
            "countries car_makers model_list"
        ],
        "align_scores": [
            0.003658108413219452,
            0.9908624887466431,
            0.1443755179643631,
            0.0003884993784595281,
            0.1227586641907692,
            0.0005028219893574715,
            0.019191928207874298,
            0.0005310926353558898
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the number of countries with at least 2 car makers?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), car_makers.Country",
            "select count(*), countries.CountryName",
            "select count(distinct car_makers.Country)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "countries car_makers",
        "table_candidates": [
            "countries car_makers",
            "car_makers"
        ],
        "align_scores": [
            0.8789992332458496,
            0.006785864941775799,
            0.0008344678208231926,
            0.3053661286830902,
            0.0012767091393470764,
            0.13817302882671356,
            0.9738631844520569,
            0.0005410923040471971
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What is the number of countries with at most 2 car makers?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), countries.CountryName",
            "select count(*), car_makers.Country",
            "select count(*), countries.CountryId"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "countries car_makers",
        "table_candidates": [
            "countries car_makers",
            "countries car_makers model_list"
        ],
        "align_scores": [
            0.014674675650894642,
            0.9476967453956604,
            0.252063125371933,
            0.0008625435875728726,
            0.418849378824234,
            0.0006055015255697072,
            0.01795109733939171,
            0.0007827493245713413
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "How many cars has below 6 cylinders?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), cars_data.Cylinders",
            "select count(*), cars_data.Id",
            "select count(*), cars_data.Cylinders, cars_data.Edispl"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data"
        ],
        "align_scores": [
            0.9942690134048462,
            0.00036925944732502103,
            0.00023275581770576537,
            0.021034080535173416,
            0.0002627573849167675,
            0.001906734541989863,
            0.00011171325604664162,
            0.0001993470941670239
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the number of carsw ith below 6 cylinders?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), cars_data.Cylinders",
            "select count(*), cars_data.Id",
            "select count(*), cars_data.Cylinders, cars_data.Edispl"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data"
        ],
        "align_scores": [
            0.9908624887466431,
            0.0002270074182888493,
            0.00020503565610852093,
            0.003910671919584274,
            0.00026457541389390826,
            0.000473382999189198,
            0.0001130307064158842,
            0.0001402044581482187
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which models are heavier than 3500 but not built by the 'Ford Motor Company'?",
        "gold_select": "select distinct model_list.Model",
        "select_candidates": [
            "select model_list.Model",
            "select car_names.Make",
            "select car_names.Model",
            "select car_makers.Maker, car_makers.FullName"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "car_makers model_list car_names cars_data",
        "table_candidates": [
            "car_makers model_list cars_data",
            "countries car_makers model_list cars_data",
            "continents car_makers model_list cars_data",
            "car_makers model_list",
            "car_makers car_names cars_data"
        ],
        "align_scores": [
            0.878343939781189,
            0.878343939781189,
            0.8436618447303772,
            0.8436618447303772,
            0.9021539092063904,
            0.9021539092063904,
            0.00026916430215351284,
            0.00026916430215351284
        ],
        "align_select": "select model_list.Model",
        "align_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the different models wthat are heavier than 3500 but were not built by the Ford Motor Company?",
        "gold_select": "select distinct model_list.Model",
        "select_candidates": [
            "select distinct model_list.Model",
            "select distinct car_names.Model",
            "select distinct car_names.Make",
            "select distinct car_makers.Maker, car_makers.FullName"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "car_makers model_list car_names cars_data",
        "table_candidates": [
            "car_makers model_list cars_data",
            "countries car_makers model_list cars_data",
            "continents car_makers model_list cars_data",
            "car_makers model_list car_names",
            "car_makers model_list"
        ],
        "align_scores": [
            0.13382971286773682,
            0.13382971286773682,
            0.18772968649864197,
            0.18772968649864197,
            0.2634522318840027,
            0.2634522318840027,
            0.0002473042986821383,
            0.0002473042986821383
        ],
        "align_select": "select distinct model_list.Model",
        "align_structure": "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the id and names of the countries which have less than 3 car makers or produce the 'fiat' model?",
        "gold_select": "select countries.CountryId, countries.CountryName",
        "select_candidates": [
            "select countries.CountryId, countries.CountryName",
            "select car_makers.Id, countries.CountryName",
            "select countries.CountryId, countries.CountryName, car_makers.Country",
            "select t1, car_makers.Id, countries.CountryName"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-WHERE",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "countries car_makers model_list",
        "table_candidates": [
            "countries car_makers model_list car_names",
            "countries car_makers model_list",
            "countries car_makers"
        ],
        "align_scores": [
            0.9751368761062622,
            0.6813424825668335,
            0.30928483605384827,
            0.04095061868429184,
            0.0002862079709302634,
            0.00019784399773925543,
            0.0002769040293060243,
            0.0001593568013049662
        ],
        "align_select": "select countries.CountryId, countries.CountryName",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the id and names of the countries which have at least 3 car makers or produce the 'fiat' model?",
        "gold_select": "select countries.CountryId, countries.CountryName",
        "select_candidates": [
            "select countries.CountryId, countries.CountryName",
            "select car_makers.Id, countries.CountryName",
            "select countries.CountryId, countries.CountryName, car_makers.Country",
            "select car_names.Model, countries.CountryId, countries.CountryName"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "countries car_makers model_list",
        "table_candidates": [
            "countries car_makers model_list car_names",
            "countries car_makers model_list",
            "countries car_makers car_names",
            "countries car_makers"
        ],
        "align_scores": [
            0.9877200722694397,
            0.13462360203266144,
            0.4151294231414795,
            0.009230501018464565,
            0.0003943904011975974,
            0.00022052222630009055,
            0.00029699673177674413,
            0.00016153532487805933
        ],
        "align_select": "select countries.CountryId, countries.CountryName",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the id and names of the countries which have at most 3 car makers or produce the 'fiat' model?",
        "gold_select": "select countries.CountryId, countries.CountryName",
        "select_candidates": [
            "select countries.CountryId, countries.CountryName",
            "select car_makers.Id, countries.CountryName",
            "select car_names.Model, countries.CountryId, countries.CountryName",
            "select countries.CountryId, countries.CountryName, car_makers.Country"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "countries car_makers model_list",
        "table_candidates": [
            "countries car_makers model_list car_names",
            "countries car_makers model_list",
            "countries car_makers"
        ],
        "align_scores": [
            0.9855772852897644,
            0.08880055695772171,
            0.38880330324172974,
            0.007483877241611481,
            0.0002791885635815561,
            0.00014841501251794398,
            0.0003562590281944722,
            0.00019163823162671179
        ],
        "align_select": "select countries.CountryId, countries.CountryName",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the ids and names of all countries that either have less than 3 car makers or produce fiat model?",
        "gold_select": "select countries.CountryId, countries.CountryName",
        "select_candidates": [
            "select countries.CountryId, countries.CountryName",
            "select car_makers.Id, countries.CountryName",
            "select car_names.Model, countries.CountryId, countries.CountryName",
            "select countries.CountryId, countries.CountryName, car_makers.Country"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "countries car_makers model_list",
        "table_candidates": [
            "countries car_makers model_list car_names",
            "countries car_makers model_list",
            "countries model_list car_names"
        ],
        "align_scores": [
            0.9472173452377319,
            0.9869669079780579,
            0.011325954459607601,
            0.16265526413917542,
            0.00037795104435645044,
            0.0002576592960394919,
            0.0007655038498342037,
            0.00039487742469646037
        ],
        "align_select": "select countries.CountryId, countries.CountryName",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the ids and names of all countries that either have at least 3 car makers or produce fiat model?",
        "gold_select": "select countries.CountryId, countries.CountryName",
        "select_candidates": [
            "select countries.CountryId, countries.CountryName",
            "select car_names.Model, countries.CountryId, countries.CountryName",
            "select car_makers.Id, countries.CountryName",
            "select countries.CountryId, countries.CountryName, car_makers.Country"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "countries car_makers model_list",
        "table_candidates": [
            "countries car_makers model_list car_names",
            "countries car_makers model_list",
            "countries model_list car_names"
        ],
        "align_scores": [
            0.9829451441764832,
            0.9863584637641907,
            0.00028963544173166156,
            0.00034483542549423873,
            0.16060689091682434,
            0.3047788739204407,
            0.0005272628040984273,
            0.000675548508297652
        ],
        "align_select": "select countries.CountryId, countries.CountryName",
        "align_structure": "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the ids and names of all countries that either have at most 3 car makers or produce fiat model?",
        "gold_select": "select countries.CountryId, countries.CountryName",
        "select_candidates": [
            "select countries.CountryId, countries.CountryName",
            "select car_makers.Id, countries.CountryName",
            "select car_names.Model, countries.CountryId, countries.CountryName",
            "select countries.CountryId, countries.CountryName, car_makers.Country"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "countries car_makers model_list",
        "table_candidates": [
            "countries car_makers model_list car_names",
            "countries car_makers model_list",
            "countries model_list car_names"
        ],
        "align_scores": [
            0.9858158826828003,
            0.9858669638633728,
            0.1276751011610031,
            0.31450363993644714,
            0.00026447957498021424,
            0.00033825551508925855,
            0.00042922605643980205,
            0.0005801066290587187
        ],
        "align_select": "select countries.CountryId, countries.CountryName",
        "align_structure": "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
    },
    {
        "question": "Find the names of stores whose number products is less than the average number of products.",
        "gold_select": "select shop.Name",
        "select_candidates": [
            "select shop.Name",
            "select shop.Name, shop.Manager_name",
            "select shop.Name, shop.District",
            "select shop.Name, shop.Location"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "shop",
        "table_candidates": [
            "shop"
        ],
        "align_scores": [
            0.9902825355529785,
            7.061340875225142e-05,
            0.00023157642863225192,
            6.796148954890668e-05,
            0.0001848499377956614,
            6.437471165554598e-05,
            0.00017082343401852995,
            5.7584013120504096e-05
        ],
        "align_select": "select shop.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the names of stores whose number products is at most the average number of products.",
        "gold_select": "select shop.Name",
        "select_candidates": [
            "select shop.Name",
            "select shop.Name, shop.Manager_name",
            "select shop.Name, shop.Location",
            "select shop.Name, shop.District"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "shop",
        "table_candidates": [
            "shop"
        ],
        "align_scores": [
            0.9808833003044128,
            7.788485527271405e-05,
            0.00025358976563438773,
            7.600152457598597e-05,
            0.0001776251883711666,
            9.127978410106152e-05,
            0.0001868976396508515,
            8.271897968370467e-05
        ],
        "align_select": "select shop.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which shops' number products is below the average? Give me the shop names.",
        "gold_select": "select shop.Name",
        "select_candidates": [
            "select shop.Name",
            "select shop.Name, shop.Location",
            "select shop.Name, shop.District",
            "select shop.Name, shop.Number_products"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "shop",
        "table_candidates": [
            "shop"
        ],
        "align_scores": [
            0.9807875156402588,
            8.48158888402395e-05,
            0.00022946076933294535,
            8.071763295447454e-05,
            0.00022461671323981136,
            7.871536945458502e-05,
            0.00026551392511464655,
            6.647906411672011e-05
        ],
        "align_select": "select shop.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show ids for all templates that are used by at least one document.",
        "gold_select": "select Documents.Template_ID",
        "select_candidates": [
            "select Documents.Template_ID",
            "select Documents.Template_ID, Templates.Template_ID",
            "select distinct Documents.Template_ID",
            "select Documents.Template_ID, Templates.Template_Type_Code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents",
        "table_candidates": [
            "Documents",
            "Templates Documents",
            "Ref_Template_Types Documents",
            "Ref_Template_Types Templates Documents",
            "Paragraphs Documents"
        ],
        "align_scores": [
            0.9924439787864685,
            0.9814385175704956,
            0.0004042891087010503,
            0.0005255702999420464,
            0.003239502664655447,
            0.8188384771347046,
            0.0005296393064782023,
            0.0004091916489414871
        ],
        "align_select": "select Documents.Template_ID",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Show ids for all templates that are used by at most one document.",
        "gold_select": "select Documents.Template_ID",
        "select_candidates": [
            "select Documents.Template_ID",
            "select Documents.Template_ID, Templates.Template_ID",
            "select Documents.Template_ID, Documents.Document_Name",
            "select Documents.Template_ID, Templates.Template_Type_Code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents",
        "table_candidates": [
            "Documents",
            "Templates Documents",
            "Ref_Template_Types Documents",
            "Paragraphs Documents"
        ],
        "align_scores": [
            0.9903484582901001,
            0.00013719128037337214,
            0.0004007054085377604,
            6.262444367166609e-05,
            0.0013514116872102022,
            7.856523006921634e-05,
            0.0005037423688918352,
            6.737242074450478e-05
        ],
        "align_select": "select Documents.Template_ID",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the template ids of any templates used in at least a single document?",
        "gold_select": "select Documents.Template_ID",
        "select_candidates": [
            "select Documents.Template_ID",
            "select Documents.Template_ID, Documents.Document_Name",
            "select Documents.Template_ID, Documents.Document_Description",
            "select Documents.Template_ID, Templates.Template_Type_Code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents",
        "table_candidates": [
            "Documents",
            "Templates Documents",
            "Ref_Template_Types Documents",
            "Ref_Template_Types Templates Documents"
        ],
        "align_scores": [
            0.9473907351493835,
            0.00016181527462322265,
            0.001779376296326518,
            7.591721077915281e-05,
            0.0005641060997731984,
            7.232603820739314e-05,
            0.0004732375091407448,
            7.040637865429744e-05
        ],
        "align_select": "select Documents.Template_ID",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the template ids of any templates used in at most a single document?",
        "gold_select": "select Documents.Template_ID",
        "select_candidates": [
            "select Documents.Template_ID",
            "select Documents.Template_ID, Documents.Document_Name",
            "select Documents.Template_ID, Documents.Document_Description",
            "select Documents.Template_ID, Templates.Template_Details"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents",
        "table_candidates": [
            "Documents",
            "Templates Documents"
        ],
        "align_scores": [
            0.9008009433746338,
            0.00014317627937998623,
            0.005530987866222858,
            7.501772051909938e-05,
            0.0009085944038815796,
            6.551691330969334e-05,
            0.0011335965245962143,
            7.209397153928876e-05
        ],
        "align_select": "select Documents.Template_ID",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Return the version numbers and template type codes of templates with a version number less than 5.",
        "gold_select": "select Templates.Version_Number, Templates.Template_Type_Code",
        "select_candidates": [
            "select Templates.Version_Number, Templates.Template_Type_Code",
            "select Templates.Version_Number, Templates.Template_Type_Code, Templates.Date_Effective_From",
            "select Templates.Version_Number.c2, Templates.Version_Number",
            "select Documents.Template_ID, Templates.Template_Type_Code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates",
        "table_candidates": [
            "Templates"
        ],
        "align_scores": [
            0.994804322719574,
            0.00015248106501530856,
            0.00018811839981935918,
            6.425223546102643e-05,
            0.0005827678833156824,
            6.95228372933343e-05,
            0.0002602234308142215,
            8.412060560658574e-05
        ],
        "align_select": "select Templates.Version_Number, Templates.Template_Type_Code",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the version numbers and template type codes of templates with a version number at least 5.",
        "gold_select": "select Templates.Version_Number, Templates.Template_Type_Code",
        "select_candidates": [
            "select Templates.Version_Number, Templates.Template_Type_Code",
            "select Templates.Version_Number, Templates.Template_Type_Code, Templates.Date_Effective_From",
            "select Templates.Version_Number.c2, Templates.Version_Number",
            "select Documents.Template_ID, Templates.Template_Type_Code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates",
        "table_candidates": [
            "Templates"
        ],
        "align_scores": [
            0.9940540194511414,
            0.0001409561955370009,
            0.00026794482255354524,
            6.31027651252225e-05,
            0.0006861590081825852,
            7.04075864632614e-05,
            0.0003077266737818718,
            8.51187578518875e-05
        ],
        "align_select": "select Templates.Version_Number, Templates.Template_Type_Code",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the version numbers and template type codes of templates with a version number at most 5.",
        "gold_select": "select Templates.Version_Number, Templates.Template_Type_Code",
        "select_candidates": [
            "select Templates.Version_Number, Templates.Template_Type_Code",
            "select Templates.Version_Number, Templates.Template_Type_Code, Templates.Date_Effective_From",
            "select Templates.Version_Number, Templates.Template_Type_Code, Templates.Template_ID",
            "select Templates.Version_Number.c2, Templates.Version_Number"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates",
        "table_candidates": [
            "Templates"
        ],
        "align_scores": [
            0.9948943853378296,
            0.14650869369506836,
            0.0002496213710401207,
            0.00031811173539608717,
            0.00016217703523579985,
            0.00014827724953647703,
            0.0006118748569861054,
            0.0003693140170071274
        ],
        "align_select": "select Templates.Version_Number, Templates.Template_Type_Code",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show all template type codes with more than three templates.",
        "gold_select": "select Templates.Template_Type_Code",
        "select_candidates": [
            "select Templates.Template_Type_Code",
            "select Templates.Template_Type_Code, Templates.Date_Effective_From",
            "select Templates.Template_Type_Code, Templates.Date_Effective_From, Templates.Date_Effective_To",
            "select Templates.Template_Type_Code (ref. Templates.Date_Effective_From)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates",
        "table_candidates": [
            "Templates"
        ],
        "align_scores": [
            0.9965174198150635,
            7.769093645038083e-05,
            0.0002426271530566737,
            5.2176881581544876e-05,
            0.0005321242497302592,
            5.585588951362297e-05,
            0.00021385084255598485,
            5.788577982457355e-05
        ],
        "align_select": "select Templates.Template_Type_Code",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Show all template type codes with at least three templates.",
        "gold_select": "select Templates.Template_Type_Code",
        "select_candidates": [
            "select Templates.Template_Type_Code",
            "select Templates.Template_Type_Code, Templates.Date_Effective_From",
            "select Templates.Template_Type_Code, Templates.Date_Effective_From, Templates.Date_Effective_To",
            "select Templates.Template_Type_Code, Templates.Date_Effective_From, Templates.Template_Details"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates",
        "table_candidates": [
            "Templates"
        ],
        "align_scores": [
            0.9965347051620483,
            8.174514368874952e-05,
            0.0002451936306897551,
            4.97902074130252e-05,
            0.0005810401635244489,
            5.2666986448457465e-05,
            0.00015737893409095705,
            5.196603888180107e-05
        ],
        "align_select": "select Templates.Template_Type_Code",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Show all template type codes with at most three templates.",
        "gold_select": "select Templates.Template_Type_Code",
        "select_candidates": [
            "select Templates.Template_Type_Code",
            "select Templates.Template_Type_Code, max(Templates.Template_Details)",
            "select Templates.Template_Type_Code, max(Templates.Date_Effective_From)",
            "select Templates.Template_Type_Code, Templates.Date_Effective_From"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates",
        "table_candidates": [
            "Templates"
        ],
        "align_scores": [
            0.9964007139205933,
            9.009170753415674e-05,
            0.0002069837792078033,
            5.5471416999353096e-05,
            0.00020077259978279471,
            5.895146750845015e-05,
            0.00023099934333004057,
            5.246827640803531e-05
        ],
        "align_select": "select Templates.Template_Type_Code",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "List all document ids with more than two paragraphs.",
        "gold_select": "select Paragraphs.Document_ID",
        "select_candidates": [
            "select Paragraphs.Document_ID",
            "select Paragraphs.Document_ID, Paragraphs.Paragraph_Text",
            "select Paragraphs.Document_ID (Paragraphs.Paragraph_ID)",
            "select Paragraphs.Document_ID,"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Paragraphs",
        "table_candidates": [
            "Paragraphs",
            "Documents Paragraphs",
            "Templates Paragraphs"
        ],
        "align_scores": [
            0.9953136444091797,
            0.000104713391920086,
            0.00024694332387298346,
            5.252073606243357e-05,
            0.00047588744200766087,
            6.535230204463005e-05,
            0.0012295229826122522,
            5.996307299938053e-05
        ],
        "align_select": "select Paragraphs.Document_ID",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "List all document ids with less than two paragraphs.",
        "gold_select": "select Paragraphs.Document_ID",
        "select_candidates": [
            "select Paragraphs.Document_ID",
            "select Paragraphs.Document_ID, Paragraphs.Paragraph_Text",
            "select Paragraphs.Document_ID",
            "select Paragraphs.Document_ID (Paragraphs.Paragraph_ID)"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Paragraphs",
        "table_candidates": [
            "Paragraphs",
            "Documents Paragraphs",
            "Templates Paragraphs"
        ],
        "align_scores": [
            0.9864652156829834,
            0.00021228534751571715,
            0.0002239230670966208,
            5.862217221874744e-05,
            0.9864652156829834,
            0.00021228534751571715,
            0.00036488196928985417,
            7.126668788259849e-05
        ],
        "align_select": "select Paragraphs.Document_ID",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "List all document ids with at most two paragraphs.",
        "gold_select": "select Paragraphs.Document_ID",
        "select_candidates": [
            "select Paragraphs.Document_ID",
            "select Paragraphs.Document_ID, Paragraphs.Paragraph_Text",
            "select Paragraphs.Document_ID (Paragraphs.Paragraph_ID)",
            "select Paragraphs.Document_ID (Paragraphs.Paragraph_Text)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Paragraphs",
        "table_candidates": [
            "Paragraphs",
            "Documents Paragraphs",
            "Templates Paragraphs"
        ],
        "align_scores": [
            0.9955452680587769,
            0.00010682286665542051,
            0.0004552922328002751,
            5.8256588090443984e-05,
            0.0008240858442150056,
            6.084425695007667e-05,
            0.000889236165676266,
            5.7739351177588105e-05
        ],
        "align_select": "select Paragraphs.Document_ID",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the ids of documents that have 2 or less paragraphs?",
        "gold_select": "select Paragraphs.Document_ID",
        "select_candidates": [
            "select Documents.Document_ID",
            "select Paragraphs.Document_ID",
            "select Documents.Document_ID, Paragraphs.Document_ID",
            "select Documents.Document_ID, Documents.Template_ID"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Paragraphs",
        "table_candidates": [
            "Documents Paragraphs",
            "Paragraphs",
            "Ref_Template_Types Documents Paragraphs",
            "Templates Documents Paragraphs",
            "Templates Paragraphs"
        ],
        "align_scores": [
            0.9911084175109863,
            0.00017601053696125746,
            0.9921541810035706,
            0.0001834372233133763,
            0.0002598614664748311,
            7.220928819151595e-05,
            0.00014978725812397897,
            6.695763295283541e-05
        ],
        "align_select": "select Documents.Document_ID",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Show names of teachers that teach less than two courses.",
        "gold_select": "select teacher.Name",
        "select_candidates": [
            "select teacher.Name",
            "select teacher.Name, course.Course",
            "select teacher.Name, course.Staring_Date",
            "select teacher.Name, t0.c3"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher course_arrange",
        "table_candidates": [
            "course teacher course_arrange",
            "course teacher"
        ],
        "align_scores": [
            0.9932460188865662,
            8.813223394099623e-05,
            0.00030714747845195234,
            7.091829320415854e-05,
            0.0010350627126172185,
            7.265729800565168e-05,
            0.000319229147862643,
            6.769106403226033e-05
        ],
        "align_select": "select teacher.Name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Show names of teachers that teach at most two courses.",
        "gold_select": "select teacher.Name",
        "select_candidates": [
            "select teacher.Name",
            "select teacher.Name, course.Course",
            "select teacher.Name, course.Staring_Date",
            "select teacher.Name, t0.c3"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher course_arrange",
        "table_candidates": [
            "course teacher course_arrange",
            "course teacher"
        ],
        "align_scores": [
            0.9923620223999023,
            0.00012169613182777539,
            0.0011238079750910401,
            8.396305202040821e-05,
            0.0016759822610765696,
            7.58025489631109e-05,
            0.0009174813749268651,
            6.948220107005909e-05
        ],
        "align_select": "select teacher.Name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the names of the teachers who teach less than two courses?",
        "gold_select": "select teacher.Name",
        "select_candidates": [
            "select teacher.Name",
            "select teacher.Name, course.Course",
            "select teacher.Name, course.Staring_Date",
            "select teacher.Name, t0.c3"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher course_arrange",
        "table_candidates": [
            "course teacher course_arrange",
            "course teacher"
        ],
        "align_scores": [
            0.980803906917572,
            0.00011518507380969822,
            0.00036902507417835295,
            7.764591282466426e-05,
            0.0014642564347013831,
            8.81444284459576e-05,
            0.0004137297801207751,
            7.056642789393663e-05
        ],
        "align_select": "select teacher.Name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the names of the teachers who teach at most two courses?",
        "gold_select": "select teacher.Name",
        "select_candidates": [
            "select teacher.Name",
            "select teacher.Name, course.Course",
            "select teacher.Name, course.Staring_Date",
            "select teacher.Name, t0.c3"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher course_arrange",
        "table_candidates": [
            "course teacher course_arrange",
            "course teacher"
        ],
        "align_scores": [
            0.9901658892631531,
            0.0002179563307436183,
            0.0013309151399880648,
            9.389575279783458e-05,
            0.002589205279946327,
            8.932898344937712e-05,
            0.0016865908401086926,
            7.453817670466378e-05
        ],
        "align_select": "select teacher.Name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Find the names of the visitors whose membership level is lower than 4, and order the results by the level from high to low.",
        "gold_select": "select visitor.Name",
        "select_candidates": [
            "select visitor.Name",
            "select visitor.Name, visitor.Level_of_membership",
            "select visitor.Name, t1.c4",
            "select visitor.Name-ORDER BY"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY",
            "SELECT-FROM-WHERE-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "visitor",
        "table_candidates": [
            "visitor"
        ],
        "align_scores": [
            0.5076347589492798,
            0.5076347589492798,
            0.00020607202895916998,
            0.00020607202895916998,
            0.00023686664644628763,
            0.00023686664644628763,
            0.0015161156188696623,
            0.0015161156188696623
        ],
        "align_select": "select visitor.Name",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY"
    },
    {
        "question": "Find the names of the visitors whose membership level is at most 4, and order the results by the level from high to low.",
        "gold_select": "select visitor.Name",
        "select_candidates": [
            "select visitor.Name",
            "select visitor.Name, visitor.Level_of_membership",
            "select visitor.Name-ORDER BY",
            "select visitor.Name, t1.c4"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY",
            "SELECT-FROM-GROUP BY-HAVING-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "visitor",
        "table_candidates": [
            "visitor"
        ],
        "align_scores": [
            0.985977292060852,
            0.09748271852731705,
            0.000244917202508077,
            0.00048718188190832734,
            0.003009666921570897,
            0.00022623389668297023,
            0.00027018715627491474,
            0.0003132608544547111
        ],
        "align_select": "select visitor.Name",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY"
    },
    {
        "question": "Find the name and membership level of the visitors whose membership level is lower than 4, and sort by their age from old to young.",
        "gold_select": "select visitor.Name, visitor.Level_of_membership",
        "select_candidates": [
            "select visitor.Name, visitor.Level_of_membership",
            "select visitor.Name, visitor.Level_of_membership, visitor.Age",
            "select visitor.Name, visitor.Level_of_membership sort by visitor.Age",
            "select visitor.Name, visitor.Level_of_membership sorting by visitor.Age"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY",
            "SELECT-FROM-WHERE-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "visitor",
        "table_candidates": [
            "visitor"
        ],
        "align_scores": [
            0.9913492202758789,
            0.0003541814803611487,
            0.0007441292982548475,
            0.00010187667794525623,
            0.0018692591693252325,
            0.00015890538634266704,
            0.0034461203031241894,
            0.00013947239494882524
        ],
        "align_select": "select visitor.Name, visitor.Level_of_membership",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY"
    },
    {
        "question": "Find the name and membership level of the visitors whose membership level is at most 4, and sort by their age from old to young.",
        "gold_select": "select visitor.Name, visitor.Level_of_membership",
        "select_candidates": [
            "select visitor.Name, visitor.Level_of_membership",
            "select visitor.Name, visitor.Level_of_membership, visitor.Age",
            "select visitor.Name, visitor.Level_of_membership sort by visitor.Age",
            "select visitor.Name, visitor.Level_of_membership and visitor.Age"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY",
            "SELECT-FROM-WHERE-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "visitor",
        "table_candidates": [
            "visitor"
        ],
        "align_scores": [
            0.9918906688690186,
            0.04954557493329048,
            0.0006814145599491894,
            0.00026908787549473345,
            0.002642944920808077,
            0.00015676411567255855,
            0.001625212375074625,
            0.0004967906861566007
        ],
        "align_select": "select visitor.Name, visitor.Level_of_membership",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY"
    },
    {
        "question": "Find the average number of staff working for the museums that were open after 2009.",
        "gold_select": "select avg(museum.Num_of_Staff)",
        "select_candidates": [
            "select avg(museum.Num_of_Staff)",
            "select avg(t0.c4)",
            "select an avg(museum.Num_of_Staff)",
            "select  avg(museum.Num_of_Staff)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "museum",
        "table_candidates": [
            "museum"
        ],
        "align_scores": [
            0.9909940361976624,
            0.00013861668412573636,
            0.0012566109653562307,
            0.00018495308177080005,
            0.00045816614874638617,
            0.00010681939602363855,
            0.9909940361976624,
            0.00013861668412573636
        ],
        "align_select": "select avg(museum.Num_of_Staff)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "find the names of museums which have more staff than the minimum staff number of all museums opened before 2010.",
        "gold_select": "select museum.Name",
        "select_candidates": [
            "select museum.Name",
            "select museum.Name, museum.Num_of_Staff",
            "select museum.Name, museum.Num_of_Staff, museum.Open_Year",
            "select museum.Name, museum.Num_of_Staff, museum.Open_Year"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "museum",
        "table_candidates": [
            "museum"
        ],
        "align_scores": [
            0.7374781966209412,
            0.00020115351071581244,
            0.00029879625071771443,
            7.500899664591998e-05,
            0.00016180137754417956,
            5.973449515295215e-05,
            0.00016180137754417956,
            5.973449515295215e-05
        ],
        "align_select": "select museum.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the number of visitors who did not visit any museum opened before 2010.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), museum.Name",
            "select count(*), museum.Open_Year",
            "select count(*), museum.Museum_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "museum visitor visit",
        "table_candidates": [
            "museum visitor visit",
            "museum visitor"
        ],
        "align_scores": [
            0.9639084339141846,
            0.0015626887325197458,
            0.0003358313406351954,
            0.011036858893930912,
            0.00043088101665489376,
            0.003080691210925579,
            0.00020578005933202803,
            0.0005032578483223915
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the name of tourney that has less than 10 matches.",
        "gold_select": "select matches.tourney_name",
        "select_candidates": [
            "select matches.tourney_name",
            "select matches.tourney_name, matches.winner_hand",
            "select matches.tourney_name, matches.tourney_date",
            "select matches.tourney_name, matches.winner_age"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "matches",
        "table_candidates": [
            "matches"
        ],
        "align_scores": [
            0.984439492225647,
            0.0001356089487671852,
            0.00014413433382287621,
            6.685313564958051e-05,
            0.0001458837214158848,
            6.249468424357474e-05,
            0.00012269506987649947,
            6.721096724504605e-05
        ],
        "align_select": "select matches.tourney_name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Find the name of tourney that has at most 10 matches.",
        "gold_select": "select matches.tourney_name",
        "select_candidates": [
            "select matches.tourney_name",
            "select matches.tourney_name, matches.winner_hand",
            "select matches.tourney_name, matches.tourney_date",
            "select matches.tourney_name, matches.minutes"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "matches",
        "table_candidates": [
            "matches",
            "matches rankings"
        ],
        "align_scores": [
            0.9893278479576111,
            8.920401887735352e-05,
            0.00015709977014921606,
            5.9330170188331977e-05,
            0.00017233937978744507,
            5.577035335591063e-05,
            0.00019963622617069632,
            5.5798653193050995e-05
        ],
        "align_select": "select matches.tourney_name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the names of tournaments that have less than 10 matches?",
        "gold_select": "select matches.tourney_name",
        "select_candidates": [
            "select matches.tourney_name",
            "select matches.tourney_name, matches.winner_hand",
            "select matches.tourney_name, matches.tourney_date",
            "select matches.tourney_name, matches.winner_age"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "matches",
        "table_candidates": [
            "matches"
        ],
        "align_scores": [
            0.9899834394454956,
            0.0002117298572557047,
            0.0002123573940480128,
            6.896236300235614e-05,
            0.00018801691476255655,
            6.519705493701622e-05,
            0.00013856608711648732,
            6.838647095719352e-05
        ],
        "align_select": "select matches.tourney_name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the names of tournaments that have at most 10 matches?",
        "gold_select": "select matches.tourney_name",
        "select_candidates": [
            "select matches.tourney_name",
            "select matches.tourney_name, matches.winner_hand",
            "select matches.tourney_name, matches.winner_age",
            "select matches.tourney_name, matches.tourney_date"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "matches",
        "table_candidates": [
            "matches"
        ],
        "align_scores": [
            0.9903102517127991,
            0.00015019401325844228,
            0.00023277181026060134,
            5.9712572692660615e-05,
            0.0001477792684454471,
            5.897125447518192e-05,
            0.00020690701785497367,
            5.781362051493488e-05
        ],
        "align_select": "select matches.tourney_name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Find the codes of countries that have less than 50 players.",
        "gold_select": "select players.country_code",
        "select_candidates": [
            "select players.country_code",
            "select players.country_code, t0.c6",
            "select players.country_code, count(*)",
            "select players.country_code, max(players.country_code)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "players",
        "table_candidates": [
            "players",
            "players matches"
        ],
        "align_scores": [
            0.99359130859375,
            0.00033111535594798625,
            0.0003591042768675834,
            6.996971933403984e-05,
            0.005341720301657915,
            0.00012643804075196385,
            0.00011174406245118007,
            6.202227814355865e-05
        ],
        "align_select": "select players.country_code",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Find the codes of countries that have at most 50 players.",
        "gold_select": "select players.country_code",
        "select_candidates": [
            "select players.country_code",
            "select players.country_code, t0.c6",
            "select players.country_code, max(players.player_id)",
            "select players.country_code, max(players.birth_date)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "players",
        "table_candidates": [
            "players",
            "players matches",
            "players rankings"
        ],
        "align_scores": [
            0.9923774003982544,
            0.0002590606745798141,
            0.0004014800942968577,
            6.575155566679314e-05,
            0.00019175045599695295,
            5.863911428605206e-05,
            0.00023596543178427964,
            6.225414836080745e-05
        ],
        "align_select": "select players.country_code",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the codes of countries with less than 50 players?",
        "gold_select": "select players.country_code",
        "select_candidates": [
            "select players.country_code",
            "select players.country_code, t0.c6",
            "select players.country_code, t0.c7",
            "select players.country_code, players.first_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "players",
        "table_candidates": [
            "players",
            "players matches",
            "players rankings"
        ],
        "align_scores": [
            0.9814375638961792,
            0.00033886180608533323,
            0.0003403451410122216,
            7.525875844294205e-05,
            0.0003483985783532262,
            7.62261770432815e-05,
            0.00017860697698779404,
            7.404856296489015e-05
        ],
        "align_select": "select players.country_code",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the codes of countries with at most 50 players?",
        "gold_select": "select players.country_code",
        "select_candidates": [
            "select players.country_code",
            "select players.country_code, t0.c6",
            "select players.country_code, max(players.player_id)",
            "select players.country_code, max(players.birth_date)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "players",
        "table_candidates": [
            "players",
            "players matches",
            "players rankings"
        ],
        "align_scores": [
            0.9792237281799316,
            0.00019474163127597421,
            0.00038014937308616936,
            6.094053605920635e-05,
            0.00016179151134565473,
            5.487859743880108e-05,
            0.0002187954232795164,
            6.092031253501773e-05
        ],
        "align_select": "select players.country_code",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the ids and names of the battles that led to less than 10 people killed in total.",
        "gold_select": "select battle.id, battle.name",
        "select_candidates": [
            "select battle.id, battle.name",
            "select battle.name, battle.id",
            "select battle.date, battle.name",
            "select death.id, battle.name"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "battle ship death",
        "table_candidates": [
            "battle death"
        ],
        "align_scores": [
            0.9409571886062622,
            0.00017497844237368554,
            0.9518230557441711,
            0.0001747276692185551,
            0.00056792376562953,
            6.85083941789344e-05,
            0.0028092742431908846,
            0.00014808494597673416
        ],
        "align_select": "select battle.id, battle.name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the ids and names of the battles that led to at most 10 people killed in total.",
        "gold_select": "select battle.id, battle.name",
        "select_candidates": [
            "select battle.id, battle.name",
            "select battle.name, battle.id",
            "select battle.date, battle.name",
            "select death.id, battle.name"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "battle ship death",
        "table_candidates": [
            "battle death"
        ],
        "align_scores": [
            0.9536871314048767,
            0.0001335281995125115,
            0.9727731347084045,
            0.00013420818140730262,
            0.0005618475843220949,
            6.883595779072493e-05,
            0.0022088950499892235,
            0.00011440458183642477
        ],
        "align_select": "select battle.id, battle.name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the names and id of courses having less than 2 sections?",
        "gold_select": "select Courses.course_name, Courses.course_id",
        "select_candidates": [
            "select Courses.course_name, Courses.course_id",
            "select Courses.course_name, Sections.course_id",
            "select Courses.course_name, Sections.section_id",
            "select Courses.course_name, Departments.department_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Courses Sections",
        "table_candidates": [
            "Courses Sections",
            "Courses Departments Sections",
            "Courses Degree_Programs Sections"
        ],
        "align_scores": [
            0.9931868314743042,
            8.207586506614462e-05,
            0.8174135088920593,
            8.074488869169727e-05,
            0.0010375650599598885,
            7.973868196131662e-05,
            0.00036216393345966935,
            8.278526365756989e-05
        ],
        "align_select": "select Courses.course_name, Courses.course_id",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the names and id of courses having at least 2 sections?",
        "gold_select": "select Courses.course_name, Courses.course_id",
        "select_candidates": [
            "select Courses.course_name, Courses.course_id",
            "select Courses.course_name, Sections.course_id",
            "select Courses.course_name, Sections.section_id",
            "select Courses.course_name, Departments.department_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Courses Sections",
        "table_candidates": [
            "Courses Sections",
            "Courses Degree_Programs Sections"
        ],
        "align_scores": [
            0.9954473376274109,
            8.240611350629479e-05,
            0.9911262392997742,
            8.552100916858763e-05,
            0.0014326062519103289,
            7.942571392050013e-05,
            0.0004408826935105026,
            8.062039705691859e-05
        ],
        "align_select": "select Courses.course_name, Courses.course_id",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Show the date and id of the transcript with more than 2 course results.",
        "gold_select": "select Transcripts.transcript_date, Transcript_Contents.transcript_id",
        "select_candidates": [
            "select t8.c5, Student_Enrolment_Courses.student_course_id",
            "select t10.c5, Transcript_Contents.student_course_id",
            "select t9.c5, Transcripts.transcript_id",
            "select t12.c5, t12.c0"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Transcripts Transcript_Contents",
        "table_candidates": [
            "Student_Enrolment_Courses",
            "Transcripts",
            "Transcript_Contents",
            "Semesters Student_Enrolment_Courses",
            "Transcripts Transcript_Contents"
        ],
        "align_scores": [
            0.0003737389633897692,
            8.840165537549183e-05,
            0.0002763931406661868,
            9.523556946078315e-05,
            0.00048693586722947657,
            8.759483171161264e-05,
            0.00019025600340683013,
            6.08665359322913e-05
        ],
        "align_select": "select t8.c5, Student_Enrolment_Courses.student_course_id",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Show the date and id of the transcript with less than 2 course results.",
        "gold_select": "select Transcripts.transcript_date, Transcript_Contents.transcript_id",
        "select_candidates": [
            "select t8.c5, Student_Enrolment_Courses.student_course_id",
            "select t10.c5, Transcript_Contents.student_course_id",
            "select t12.c5, t12.c0",
            "select t9.c5, Transcripts.transcript_id"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Transcripts Transcript_Contents",
        "table_candidates": [
            "Student_Enrolment_Courses",
            "Transcripts",
            "Transcript_Contents",
            "Semesters Student_Enrolment_Courses",
            "Semesters Student_Enrolment"
        ],
        "align_scores": [
            0.0003646877594292164,
            7.170467142714188e-05,
            0.00024203152861446142,
            7.266768807312474e-05,
            0.00015203461225610226,
            5.6913180742412806e-05,
            0.00042954282253049314,
            7.030244887573645e-05
        ],
        "align_select": "select t8.c5, Student_Enrolment_Courses.student_course_id",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Show the date and id of the transcript with at most 2 course results.",
        "gold_select": "select Transcripts.transcript_date, Transcript_Contents.transcript_id",
        "select_candidates": [
            "select t8.c5, Student_Enrolment_Courses.student_course_id",
            "select t10.c5, Transcript_Contents.student_course_id",
            "select t9.c5, Transcripts.transcript_id",
            "select t12.c5, t12.c0"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Transcripts Transcript_Contents",
        "table_candidates": [
            "Transcripts",
            "Student_Enrolment_Courses",
            "Transcript_Contents",
            "Student_Enrolment",
            "Semesters Student_Enrolment_Courses",
            "Semesters Student_Enrolment"
        ],
        "align_scores": [
            0.00041061852243728936,
            7.424192881444469e-05,
            0.00025476899463683367,
            7.666962483199313e-05,
            0.0005425093695521355,
            8.123267616610974e-05,
            0.00044612333294935524,
            6.305427814368159e-05
        ],
        "align_select": "select t8.c5, Student_Enrolment_Courses.student_course_id",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What is the date and id of the transcript with more than 2 courses listed?",
        "gold_select": "select Transcripts.transcript_date, Transcript_Contents.transcript_id",
        "select_candidates": [
            "select t10.c5, Transcript_Contents.student_course_id",
            "select t14.c3, t14.c0",
            "select t14.c5, t14.c0",
            "select t12.c5, t12.c0"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Transcripts Transcript_Contents",
        "table_candidates": [
            "Courses Student_Enrolment_Courses",
            "Courses Student_Enrolment",
            "Courses Transcripts",
            "Courses",
            "Courses Transcript_Contents",
            "Semesters Student_Enrolment_Courses",
            "Courses Sections"
        ],
        "align_scores": [
            0.0004268545308150351,
            0.00010697658581193537,
            0.00020404627139214426,
            6.660717917839065e-05,
            0.00022947016987018287,
            6.556603329954669e-05,
            0.00021826787269674242,
            6.609587580896914e-05
        ],
        "align_select": "select t10.c5, Transcript_Contents.student_course_id",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What is the date and id of the transcript with less than 2 courses listed?",
        "gold_select": "select Transcripts.transcript_date, Transcript_Contents.transcript_id",
        "select_candidates": [
            "select t10.c5, Transcript_Contents.student_course_id",
            "select t8.c5, Student_Enrolment_Courses.student_course_id",
            "select t12.c5, t12.c0",
            "select t14.c3, t14.c0"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Transcripts Transcript_Contents",
        "table_candidates": [
            "Courses Student_Enrolment_Courses",
            "Courses Student_Enrolment",
            "Courses Transcripts",
            "Courses",
            "Courses Transcript_Contents",
            "Semesters Student_Enrolment_Courses"
        ],
        "align_scores": [
            0.00042589634540490806,
            9.329242311650887e-05,
            0.0005482385749928653,
            8.808669372228906e-05,
            0.00022722721041645855,
            6.805519660701975e-05,
            0.0002548870979808271,
            6.960449536563829e-05
        ],
        "align_select": "select t10.c5, Transcript_Contents.student_course_id",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What is the date and id of the transcript with at most 2 courses listed?",
        "gold_select": "select Transcripts.transcript_date, Transcript_Contents.transcript_id",
        "select_candidates": [
            "select t14.c3, t14.c0",
            "select t10.c5, Transcript_Contents.student_course_id",
            "select t14.c5, t14.c0",
            "select t12.c5, t12.c0"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Transcripts Transcript_Contents",
        "table_candidates": [
            "Courses Student_Enrolment_Courses",
            "Courses Student_Enrolment",
            "Courses Transcripts",
            "Semesters Student_Enrolment_Courses",
            "Semesters Student_Enrolment",
            "Students Student_Enrolment_Courses"
        ],
        "align_scores": [
            0.0003145039372611791,
            6.231496809050441e-05,
            0.00038518558721989393,
            8.714044815860689e-05,
            0.00039646500954404473,
            6.137326272437349e-05,
            0.00034073228016495705,
            6.15830795140937e-05
        ],
        "align_select": "select t14.c3, t14.c0",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "find id of the tv channels that from the countries where have less than two tv channels.",
        "gold_select": "select TV_Channel.id",
        "select_candidates": [
            "select TV_Channel.id",
            "select TV_Channel.id, TV_Channel.Country",
            "select t0.c, TV_Channel.Country",
            "select TV_Channel.id, TV_Channel.Country, TV_Channel.Language"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel",
            "TV_Channel TV_series Cartoon",
            "TV_Channel TV_series",
            "TV_Channel Cartoon"
        ],
        "align_scores": [
            0.9848682284355164,
            0.0001996316568693146,
            0.0051191081292927265,
            0.00022964549134485424,
            0.000708065286744386,
            0.00014729615941178054,
            0.00015503366012126207,
            0.00012006353063043207
        ],
        "align_select": "select TV_Channel.id",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "find id of the tv channels that from the countries where have at least two tv channels.",
        "gold_select": "select TV_Channel.id",
        "select_candidates": [
            "select TV_Channel.id",
            "select TV_Channel.id, TV_Channel.Country",
            "select t0.c, TV_Channel.Country",
            "select TV_Channel.id, TV_Channel.Country, max(TV_Channel.id)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel",
            "TV_Channel TV_series Cartoon",
            "TV_Channel TV_series Cartoon",
            "TV_Channel TV_series",
            "TV_Channel Cartoon"
        ],
        "align_scores": [
            0.9828740358352661,
            0.00014021941751707345,
            0.11748707294464111,
            0.00012361834524199367,
            0.0008783942903392017,
            8.245972276199609e-05,
            0.00017839968495536596,
            5.668314406648278e-05
        ],
        "align_select": "select TV_Channel.id",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "find id of the tv channels that from the countries where have at most two tv channels.",
        "gold_select": "select TV_Channel.id",
        "select_candidates": [
            "select TV_Channel.id",
            "select TV_Channel.id, TV_Channel.Country",
            "select t0.c, TV_Channel.Country",
            "select TV_Channel.id, TV_Channel.Country, TV_Channel.Language"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel",
            "TV_Channel TV_series Cartoon",
            "TV_Channel TV_series",
            "TV_Channel Cartoon"
        ],
        "align_scores": [
            0.9836044907569885,
            0.0002335236204089597,
            0.019174737855792046,
            0.00018553542031440884,
            0.000827801413834095,
            0.00012006203905912116,
            0.00017328254762105644,
            0.00011214348342036828
        ],
        "align_select": "select TV_Channel.id",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the ids of all tv channels that have less than 2 TV channels?",
        "gold_select": "select TV_Channel.id",
        "select_candidates": [
            "select TV_Channel.id",
            "select tv0.c0",
            "select TV_Channel.id, TV_Channel.Hight_definition_TV",
            "select TV_Channel.id, TV_Channel.Pixel_aspect_ratio_PAR"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel",
            "TV_Channel TV_series"
        ],
        "align_scores": [
            0.9825952053070068,
            0.00012597159366123378,
            0.056538328528404236,
            0.00014987557369749993,
            0.00038990555913187563,
            0.00010588134318822995,
            0.0002952441282104701,
            8.23690279503353e-05
        ],
        "align_select": "select TV_Channel.id",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the ids of all tv channels that have at least 2 TV channels?",
        "gold_select": "select TV_Channel.id",
        "select_candidates": [
            "select TV_Channel.id",
            "select TV_Channel.id, TV_Channel.Hight_definition_TV",
            "select TV_Channel.id, TV_Channel.Pixel_aspect_ratio_PAR",
            "select TV_Channel.id, TV_Channel.Pay_per_view_PPV"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel",
            "TV_Channel TV_series",
            "TV_Channel Cartoon",
            "TV_Channel TV_series Cartoon"
        ],
        "align_scores": [
            0.9753154516220093,
            0.00012117838923586532,
            0.0005418086657300591,
            0.00011384217941667885,
            0.00039520315476693213,
            7.718665438005701e-05,
            0.0005702353082597256,
            9.441228030482307e-05
        ],
        "align_select": "select TV_Channel.id",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the ids of all tv channels that have at most 2 TV channels?",
        "gold_select": "select TV_Channel.id",
        "select_candidates": [
            "select TV_Channel.id",
            "select TV_Channel.id, TV_Channel.Hight_definition_TV",
            "select tv0.c0",
            "select TV_Channel.id, TV_Channel.Pixel_aspect_ratio_PAR"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel",
            "TV_Channel TV_series",
            "TV_Channel Cartoon"
        ],
        "align_scores": [
            0.9796104431152344,
            0.00021154884598217905,
            0.0004930251743644476,
            0.00013256755482871085,
            0.059442851692438126,
            0.00018611126870382577,
            0.0003907176142092794,
            8.771043212618679e-05
        ],
        "align_select": "select TV_Channel.id",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What is the maximum number of final tables made among poker players with earnings more than 200000?",
        "gold_select": "select max(poker_player.Final_Table_Made)",
        "select_candidates": [
            "select max(poker_player.Final_Table_Made)",
            "select max(poker_player.Final_Table_Made), poker_player.Earnings",
            "select max(poker_player.Final_Table_Made), poker_player.Earnings",
            "select max(poker_player.Final_Table_Made) de poker_player.Poker_Player_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "poker_player",
        "table_candidates": [
            "poker_player"
        ],
        "align_scores": [
            0.9928829669952393,
            0.00017203301831614226,
            0.0001812336122384295,
            9.44176790653728e-05,
            0.0001812336122384295,
            9.44176790653728e-05,
            0.0001688912307145074,
            0.00017343628860544413
        ],
        "align_select": "select max(poker_player.Final_Table_Made)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the maximum number of final tables made among poker players with earnings at least 200000?",
        "gold_select": "select max(poker_player.Final_Table_Made)",
        "select_candidates": [
            "select max(poker_player.Final_Table_Made)",
            "select max(poker_player.Final_Table_Made), poker_player.Earnings",
            "select max(poker_player.Final_Table_Made), poker_player.Earnings",
            "select max(poker_player.Final_Table_Made), poker_player.Best_Finish"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "poker_player",
        "table_candidates": [
            "poker_player",
            "poker_player people"
        ],
        "align_scores": [
            0.9907197952270508,
            0.00047401516349054873,
            0.00017055943317245692,
            0.00010440629557706416,
            0.00017055943317245692,
            0.00010440629557706416,
            0.00017163192387670279,
            0.00015485563199035823
        ],
        "align_select": "select max(poker_player.Final_Table_Made)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the maximum final tables made across all poker players who have earnings over 200000.",
        "gold_select": "select max(poker_player.Final_Table_Made)",
        "select_candidates": [
            "select max(poker_player.Final_Table_Made)",
            "select max(poker_player.Final_Table_Made), poker_player.Earnings",
            "select max(poker_player.Final_Table_Made) de poker_player.Poker_Player_ID",
            "select max(poker_player.Final_Table_Made), poker_player.Best_Finish"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "poker_player",
        "table_candidates": [
            "poker_player",
            "poker_player people"
        ],
        "align_scores": [
            0.9945223331451416,
            7.217281381599605e-05,
            0.00012909460929222405,
            6.109461537562311e-05,
            0.000161553209181875,
            7.815207936801016e-05,
            0.00014984926383476704,
            6.212195876287296e-05
        ],
        "align_select": "select max(poker_player.Final_Table_Made)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of poker players whose earnings is lower than 300000?",
        "gold_select": "select people.Name",
        "select_candidates": [
            "select people.Name",
            "select people.Name, people.Birth_Date",
            "select people.Name, poker_player.People_ID",
            "select people.Name, poker_player.Poker_Player_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "poker_player people",
        "table_candidates": [
            "poker_player people"
        ],
        "align_scores": [
            0.9752548933029175,
            0.0006080101593397558,
            0.0001454948796890676,
            9.950868843588978e-05,
            0.00014898175140842795,
            8.001967944437638e-05,
            0.00013820348249282688,
            7.92925275163725e-05
        ],
        "align_select": "select people.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of poker players whose earnings is at most 300000?",
        "gold_select": "select people.Name",
        "select_candidates": [
            "select people.Name",
            "select people.Name, people.Birth_Date",
            "select people.Name, poker_player.People_ID",
            "select people.Name, t1.c5"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "poker_player people",
        "table_candidates": [
            "poker_player people"
        ],
        "align_scores": [
            0.9863477945327759,
            0.00030480066197924316,
            0.00016208243323490024,
            7.202938286354765e-05,
            0.00015579388127662241,
            6.75540286465548e-05,
            0.00030317596974782646,
            7.330927473958582e-05
        ],
        "align_select": "select people.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give the names of poker players who have earnings below 300000.",
        "gold_select": "select people.Name",
        "select_candidates": [
            "select people.Name",
            "select people.Name, people.Birth_Date",
            "select people.Name, poker_player.People_ID",
            "select people.Name, poker_player.Poker_Player_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "poker_player people",
        "table_candidates": [
            "poker_player people"
        ],
        "align_scores": [
            0.8955243825912476,
            0.0003231411974411458,
            0.00015688181156292558,
            8.646682545077056e-05,
            0.0001544869301142171,
            7.851197733543813e-05,
            0.0001428218965884298,
            8.518777758581564e-05
        ],
        "align_select": "select people.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the average earnings of poker players with height lower than 200?",
        "gold_select": "select avg(poker_player.Earnings)",
        "select_candidates": [
            "select avg(poker_player.Earnings)",
            "select avg(poker_player.Earnings), people.Height",
            "select an avg(poker_player.Earnings)",
            "select  avg(poker_player.Earnings)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "poker_player people",
        "table_candidates": [
            "poker_player people"
        ],
        "align_scores": [
            0.9961047172546387,
            8.936203084886074e-05,
            0.00015238641935866326,
            0.07212602347135544,
            0.0003500662569422275,
            9.224960376741365e-05,
            0.9961047172546387,
            8.936203084886074e-05
        ],
        "align_select": "select avg(poker_player.Earnings)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the average earnings of poker players with height at most 200?",
        "gold_select": "select avg(poker_player.Earnings)",
        "select_candidates": [
            "select avg(poker_player.Earnings)",
            "select avg(poker_player.Earnings), people.Height",
            "select an avg(poker_player.Earnings)",
            "select  avg(poker_player.Earnings)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "poker_player people",
        "table_candidates": [
            "poker_player people"
        ],
        "align_scores": [
            0.996488094329834,
            9.874172246782109e-05,
            0.00016857880109455436,
            0.00013949754065833986,
            0.00036396810901351273,
            9.985391807276756e-05,
            0.996488094329834,
            9.874172246782109e-05
        ],
        "align_select": "select avg(poker_player.Earnings)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the nationalities that are shared by less than two people?",
        "gold_select": "select people.Nationality",
        "select_candidates": [
            "select people.Nationality",
            "select people.Nationality, people.Name",
            "select people.Nationality, people.Birth_Date",
            "select people.Nationality, people.People_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "people",
        "table_candidates": [
            "people"
        ],
        "align_scores": [
            0.9930778741836548,
            0.0001402488414896652,
            0.000353360635926947,
            7.340805314015597e-05,
            0.00015936378622427583,
            5.684770439984277e-05,
            0.00038629016489721835,
            9.035084076458588e-05
        ],
        "align_select": "select people.Nationality",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the nationalities that are shared by at most two people?",
        "gold_select": "select people.Nationality",
        "select_candidates": [
            "select people.Nationality",
            "select people.Nationality, people.Name",
            "select people.Nationality, max(people.Name)",
            "select people.Nationality, people.Birth_Date"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "people",
        "table_candidates": [
            "people"
        ],
        "align_scores": [
            0.992846667766571,
            0.0001331159146502614,
            0.00032716235728003085,
            6.93924812367186e-05,
            0.00020506788860075176,
            5.9722027799580246e-05,
            0.00017497576482128352,
            5.787815825897269e-05
        ],
        "align_select": "select people.Nationality",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Return the nationalities for which there are two or less people.",
        "gold_select": "select people.Nationality",
        "select_candidates": [
            "select people.Nationality",
            "select people.Nationality, count(*)",
            "select people.Nationality, people.Name",
            "select people.Nationality, min(people.Nationality)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "people",
        "table_candidates": [
            "people"
        ],
        "align_scores": [
            0.9938939213752747,
            0.00015546739450655878,
            0.0041856770403683186,
            9.566910011926666e-05,
            0.0002401223755441606,
            6.862825102871284e-05,
            0.00012790216715075076,
            6.879908323753625e-05
        ],
        "align_select": "select people.Nationality",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the contestant numbers and names of the contestants who had less than two votes?",
        "gold_select": "select CONTESTANTS.contestant_number, CONTESTANTS.contestant_name",
        "select_candidates": [
            "select CONTESTANTS.contestant_number, CONTESTANTS.contestant_name",
            "select VOTES.contestant_number, CONTESTANTS.contestant_name",
            "select CONTESTANTS.contestant_number, CONTESTANTS.contestant_name, VOTES.contestant_number",
            "select CONTESTANTS.contestant_number, CONTESTANTS.contestant_name, t1.c2"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "CONTESTANTS VOTES",
        "table_candidates": [
            "CONTESTANTS VOTES"
        ],
        "align_scores": [
            0.8703959584236145,
            0.00011658913717838004,
            0.004448445048183203,
            0.00011231665848754346,
            0.00023576305829919875,
            9.430925274500623e-05,
            0.0007310521323233843,
            7.15511996531859e-05
        ],
        "align_select": "select CONTESTANTS.contestant_number, CONTESTANTS.contestant_name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the contestant numbers and names of the contestants who had at most two votes?",
        "gold_select": "select CONTESTANTS.contestant_number, CONTESTANTS.contestant_name",
        "select_candidates": [
            "select CONTESTANTS.contestant_number, CONTESTANTS.contestant_name",
            "select VOTES.contestant_number, CONTESTANTS.contestant_name",
            "select CONTESTANTS.contestant_number, CONTESTANTS.contestant_name, t1.c2",
            "select CONTESTANTS.contestant_name, CONTESTANTS.contestant_number"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "CONTESTANTS VOTES",
        "table_candidates": [
            "CONTESTANTS VOTES"
        ],
        "align_scores": [
            0.9869712591171265,
            9.53246999415569e-05,
            0.013126582838594913,
            9.125150245381519e-05,
            0.0012338967062532902,
            6.463133468059823e-05,
            0.9885379076004028,
            9.665660763857886e-05
        ],
        "align_select": "select CONTESTANTS.contestant_number, CONTESTANTS.contestant_name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the names of all the countries that became independent before 1950?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Code",
            "select country.Name, country.Capital",
            "select country.Name, country.LocalName"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9881042838096619,
            0.00015817479288671166,
            0.0002978442935273051,
            7.924785313662142e-05,
            0.00019734282977879047,
            7.191640906967223e-05,
            0.0008287714445032179,
            0.00010052403376903385
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give the names of the nations that were founded before 1950.",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Capital",
            "select distinct country.Name",
            "select country.Name, country.HeadOfState"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9848376512527466,
            0.00012351230543572456,
            0.0002062049024971202,
            6.802860298193991e-05,
            0.06170092895627022,
            8.53414530865848e-05,
            0.00018293400353286415,
            7.101683149812743e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the total number of unique official languages spoken in the countries that are founded after 1930?",
        "gold_select": "select count(distinct countrylanguage.Language)",
        "select_candidates": [
            "select count(distinct countrylanguage.IsOfficial)",
            "select count(distinct countrylanguage.Language)",
            "select count(distinct countrylanguage.Language, countrylanguage.IsOfficial)",
            "select count(distinct countrylanguage.Language, count(distinct countrylanguage.IsOfficial)"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.010971596464514732,
            0.0002621208259370178,
            0.9928662776947021,
            0.00032959264353848994,
            0.0006499518058262765,
            0.00023392205184791237,
            0.0002114570961566642,
            0.0001589594903634861
        ],
        "align_select": "select count(distinct countrylanguage.Language)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "For the countries founded after 1930, what is the total number of distinct official languages?",
        "gold_select": "select count(distinct countrylanguage.Language)",
        "select_candidates": [
            "select count(distinct countrylanguage.IsOfficial)",
            "select count(distinct countrylanguage.Language)",
            "select sum(countrylanguage.IsOfficial)",
            "select sum(distinct countrylanguage.IsOfficial)"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.007307926658540964,
            0.00020446245616767555,
            0.9945560693740845,
            0.0003225994878448546,
            0.0016651626210659742,
            0.0014344328083097935,
            0.005184934474527836,
            0.0002512198407202959
        ],
        "align_select": "select count(distinct countrylanguage.Language)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which Asian countries have a population that is smaller than any country in Africa?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Continent",
            "select country.Name, country.Population",
            "select country.Code, country.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.6855912804603577,
            0.0008493581553921103,
            0.0004537442000582814,
            0.00012746581342071295,
            0.0004260550776962191,
            8.61649023136124e-05,
            0.006164546590298414,
            0.000207290897378698
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which Asian countries have a population that is at most any country in Africa?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Continent",
            "select country.Name, country.Population",
            "select country.Code, country.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.48313045501708984,
            0.004837740678340197,
            0.00032053622999228537,
            0.00011779827764257789,
            0.0004138291988056153,
            9.661190415499732e-05,
            0.008220719173550606,
            0.00031388626666739583
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of countries that speak less than 2 languages, as well as how many languages they speak?",
        "gold_select": "select count(countrylanguage.Language), country.Name",
        "select_candidates": [
            "select country.Name, count(distinct countrylanguage.Language)",
            "select country.Name, countrylanguage.Language",
            "select country.Name, country.Name",
            "select country.Name, count(countrylanguage.Language)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.06064249575138092,
            0.09491274505853653,
            0.015378483571112156,
            0.03914980590343475,
            0.0004503823583945632,
            0.0004407545493450016,
            0.007898849435150623,
            0.006468013860285282
        ],
        "align_select": "select country.Name, count(distinct countrylanguage.Language)",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the names of countries that speak at least 2 languages, as well as how many languages they speak?",
        "gold_select": "select count(countrylanguage.Language), country.Name",
        "select_candidates": [
            "select country.Name, count(distinct countrylanguage.Language)",
            "select country.Name, count(distinct country.Name)",
            "select country.Name, count(countrylanguage.Language)",
            "select country.Name, count(count(distinct countrylanguage.Language)"
        ],
        "select_labels": [
            0.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.7087975740432739,
            0.00010082642984343693,
            0.00032397746690548956,
            6.508611841127276e-05,
            0.0580868199467659,
            8.096454985206947e-05,
            0.0005816801567561924,
            8.649436495034024e-05
        ],
        "align_select": "select country.Name, count(distinct countrylanguage.Language)",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the names of countries that speak at most 2 languages, as well as how many languages they speak?",
        "gold_select": "select count(countrylanguage.Language), country.Name",
        "select_candidates": [
            "select country.Name, count(distinct countrylanguage.Language)",
            "select country.Name, count(distinct country.Name)",
            "select country.Name, count(countrylanguage.Language)",
            "select country.Name, countrylanguage.Language"
        ],
        "select_labels": [
            0.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage"
        ],
        "align_scores": [
            0.5520239472389221,
            9.445505565963686e-05,
            0.0002773484156932682,
            6.698771903757006e-05,
            0.07926338165998459,
            8.172683010343462e-05,
            0.3232197165489197,
            0.00011941965931328014
        ],
        "align_select": "select country.Name, count(distinct countrylanguage.Language)",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Find the number of cities in each district whose population is less than the average population of cities?",
        "gold_select": "select count(*), city.District",
        "select_candidates": [
            "select count(*), city.District",
            "select city.District, count(*)",
            "select count(*), city.District, city.Population",
            "select count(*), city.District,"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "city",
        "table_candidates": [
            "city"
        ],
        "align_scores": [
            0.9918410778045654,
            0.010718291625380516,
            0.9929290413856506,
            0.041590966284275055,
            0.0034260740503668785,
            0.00020232824317645282,
            0.0024592680856585503,
            0.00021652565919794142
        ],
        "align_select": "select count(*), city.District",
        "align_structure": "SELECT-FROM-WHERE-GROUP BY"
    },
    {
        "question": "Find the number of cities in each district whose population is at most the average population of cities?",
        "gold_select": "select count(*), city.District",
        "select_candidates": [
            "select count(*), city.District",
            "select city.District, count(*)",
            "select count(*), city.District, max(city.Population)",
            "select count(*), city.District, city.Population"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "city",
        "table_candidates": [
            "city"
        ],
        "align_scores": [
            0.2266363501548767,
            0.9169833064079285,
            0.4913914203643799,
            0.9534624218940735,
            0.0001867122045950964,
            0.0008190941880457103,
            0.00030862982384860516,
            0.0008257727604359388
        ],
        "align_select": "select city.District, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "How many cities in each district have a population that is below the average population across all cities?",
        "gold_select": "select count(*), city.District",
        "select_candidates": [
            "select count(*), city.District",
            "select city.District, count(*)",
            "select count(*), city.District, city.Population",
            "select count(*), city.District, max(city.Population)"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "city",
        "table_candidates": [
            "city"
        ],
        "align_scores": [
            0.9914701581001282,
            0.0002852167235687375,
            0.9926566481590271,
            0.00024308051797561347,
            0.0020103806164115667,
            0.0001271813380299136,
            0.001515177427791059,
            0.00010159602243220434
        ],
        "align_select": "select count(*), city.District",
        "align_structure": "SELECT-FROM-WHERE-GROUP BY"
    },
    {
        "question": "Find the gbelownment form name and total population for each gbelownment form whose average life expectancy is longer than 72.",
        "gold_select": "select sum(country.Population), country.GovernmentForm",
        "select_candidates": [
            "select country.GovernmentForm, sum(country.Population)",
            "select country.Name, sum(country.Population)",
            "select country.GovernmentForm, count(*)",
            "select country.GNPOld, sum(country.Population)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.7179019451141357,
            0.00021576830476988107,
            0.0190848708152771,
            0.00022500513296108693,
            0.6767383813858032,
            0.0003397286927793175,
            0.014746076427400112,
            0.00017987888713832945
        ],
        "align_select": "select country.GovernmentForm, sum(country.Population)",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the different gbelownment forms and what is the total population of each for gbelownment forms that have an average life expectancy greater than 72?",
        "gold_select": "select sum(country.Population), country.GovernmentForm",
        "select_candidates": [
            "select country.GovernmentForm, sum(country.Population)",
            "select country.Name, sum(country.Population)",
            "select country.GNPOld, sum(country.Population)",
            "select country.GovernmentForm, count(*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9339142441749573,
            0.0001700056018307805,
            0.6777992844581604,
            0.00016432642587460577,
            0.2868807315826416,
            0.000134984016767703,
            0.9534487724304199,
            0.00019593177421484143
        ],
        "align_select": "select country.GovernmentForm, sum(country.Population)",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the different continents and the total popuation and average life expectancy corresponding to each, for continents that have an average life expectancy more than 72?",
        "gold_select": "select sum(country.Population), avg(country.LifeExpectancy), country.Continent",
        "select_candidates": [
            "select country.Continent, sum(country.Population), avg(country.Population)",
            "select country.Continent, sum(country.Population), avg(country.LifeExpectancy)",
            "select country.Continent, sum(country.Population), sum(country.LifeExpectancy)",
            "select country.Continent, count(*), avg(country.Population)"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.6669726371765137,
            0.18081031739711761,
            0.9095199704170227,
            0.2903100252151489,
            0.8260788917541504,
            0.18284663558006287,
            0.004427220206707716,
            0.0027000911068171263
        ],
        "align_select": "select country.Continent, sum(country.Population), avg(country.LifeExpectancy)",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the different continents and the total popuation and average life expectancy corresponding to each, for continents that have an average life expectancy at least 72?",
        "gold_select": "select sum(country.Population), avg(country.LifeExpectancy), country.Continent",
        "select_candidates": [
            "select country.Continent, sum(country.Population), avg(country.Population)",
            "select country.Continent, sum(country.Population), avg(country.LifeExpectancy)",
            "select country.Continent, sum(country.Population), sum(country.LifeExpectancy)",
            "select country.Continent, count(*), avg(country.Population)"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.6526793837547302,
            0.00010253454092890024,
            0.9187077879905701,
            0.0001098072316381149,
            0.8764298558235168,
            0.00010662846761988476,
            0.005980681627988815,
            0.00010067597031593323
        ],
        "align_select": "select country.Continent, sum(country.Population), avg(country.LifeExpectancy)",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Please show the name of the conductor that has conducted orchestras founded before 2008.",
        "gold_select": "select conductor.Name",
        "select_candidates": [
            "select conductor.Name",
            "select conductor.Name, orchestra.Conductor_ID",
            "select conductor.Name (or conductor.Age)",
            "select conductor.Name (ORDER BY-LIMIT)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor orchestra",
        "table_candidates": [
            "conductor orchestra"
        ],
        "align_scores": [
            0.9487689733505249,
            8.743510261410847e-05,
            0.0001824370410759002,
            6.74077746225521e-05,
            0.0007377827423624694,
            8.647160575492308e-05,
            0.05898318812251091,
            8.141941361827776e-05
        ],
        "align_select": "select conductor.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of conductors who have conducted orchestras founded before the year 2008?",
        "gold_select": "select conductor.Name",
        "select_candidates": [
            "select conductor.Name",
            "select conductor.Name, orchestra.Conductor_ID",
            "select orchestra.Conductor_ID, conductor.Name",
            "select distinct conductor.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor orchestra",
        "table_candidates": [
            "conductor orchestra"
        ],
        "align_scores": [
            0.9693387150764465,
            0.00010291981743648648,
            0.00022418370645027608,
            6.428066990338266e-05,
            0.0002688068198040128,
            7.672088395338506e-05,
            0.04114527255296707,
            0.0001057422996382229
        ],
        "align_select": "select conductor.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show the names of high schoolers who have less than 3 friends.",
        "gold_select": "select Highschooler.name",
        "select_candidates": [
            "select Highschooler.name",
            "select Highschooler.name, Friend.student_id",
            "select Highschooler.name, Friend.friend_id",
            "select Highschooler.name, t1.c2"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Friend",
        "table_candidates": [
            "Highschooler Friend",
            "Highschooler Friend Likes"
        ],
        "align_scores": [
            0.9807612895965576,
            9.2909082013648e-05,
            0.0010147570865228772,
            7.998848013812676e-05,
            0.00020614886307157576,
            7.144708069972694e-05,
            0.00036552309757098556,
            7.422585622407496e-05
        ],
        "align_select": "select Highschooler.name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Show the names of high schoolers who have at most 3 friends.",
        "gold_select": "select Highschooler.name",
        "select_candidates": [
            "select Highschooler.name",
            "select Highschooler.name, Friend.student_id",
            "select Highschooler.name, Friend.friend_id",
            "select Highschooler.name, t1.c2"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Friend",
        "table_candidates": [
            "Highschooler Friend",
            "Highschooler Friend Likes"
        ],
        "align_scores": [
            0.9736338257789612,
            8.525133307557553e-05,
            0.0015049092471599579,
            7.213936623884365e-05,
            0.0003380007401574403,
            6.094936543377116e-05,
            0.0004154695780016482,
            6.787722668377683e-05
        ],
        "align_select": "select Highschooler.name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the names of high schoolers who have 3 or less friends?",
        "gold_select": "select Highschooler.name",
        "select_candidates": [
            "select Highschooler.name",
            "select Highschooler.name, Friend.student_id",
            "select Highschooler.name, Friend.friend_id",
            "select Highschooler.name, t1.c2"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Friend",
        "table_candidates": [
            "Highschooler Friend"
        ],
        "align_scores": [
            0.9804907441139221,
            0.0001391275873174891,
            0.000960426579695195,
            8.958744729170576e-05,
            0.00025090842973440886,
            7.771606760798022e-05,
            0.0003943732881452888,
            8.6854153778404e-05
        ],
        "align_select": "select Highschooler.name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Which professionals live in the state of Indiana or have done treatment on less than 2 treatments? List his or her id, last name and cell phone.",
        "gold_select": "select Professionals.professional_id, Professionals.last_name, Professionals.cell_number",
        "select_candidates": [
            "select Professionals.professional_id, Professionals.last_name, Professionals.cell_number",
            "select Professionals.first_name, Professionals.last_name, Professionals.cell_number",
            "select Treatments.professional_id, Professionals.last_name, Professionals.cell_number",
            "select Professionals.role_code, Professionals.last_name, Professionals.cell_number"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-UNION-SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-WHERE-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals Treatments",
        "table_candidates": [
            "Professionals Treatments",
            "Dogs Professionals Treatments",
            "Owners Professionals Treatments",
            "Treatment_Types Professionals Treatments",
            "Breeds Professionals Treatments",
            "Sizes Professionals Treatments",
            "Charges Professionals Treatments"
        ],
        "align_scores": [
            0.027739984914660454,
            0.003145294263958931,
            0.00017727984231896698,
            0.00015687222185079008,
            0.015440390445291996,
            0.003548871958628297,
            0.0020677801221609116,
            0.0005923245334997773
        ],
        "align_select": "select Professionals.professional_id, Professionals.last_name, Professionals.cell_number",
        "align_structure": "SELECT-FROM-WHERE-UNION-SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Which professionals live in the state of Indiana or have done treatment on at least 2 treatments? List his or her id, last name and cell phone.",
        "gold_select": "select Professionals.professional_id, Professionals.last_name, Professionals.cell_number",
        "select_candidates": [
            "select Professionals.professional_id, Professionals.last_name, Professionals.cell_number",
            "select Professionals.first_name, Professionals.last_name, Professionals.cell_number",
            "select Treatments.professional_id, Professionals.last_name, Professionals.cell_number",
            "select Professionals.role_code, Professionals.last_name, Professionals.cell_number"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-UNION-SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "Professionals Treatments",
        "table_candidates": [
            "Professionals Treatments",
            "Dogs Professionals Treatments",
            "Owners Professionals Treatments",
            "Breeds Professionals Treatments",
            "Sizes Professionals Treatments",
            "Treatment_Types Professionals Treatments",
            "Charges Professionals Treatments"
        ],
        "align_scores": [
            0.003238723613321781,
            0.18980209529399872,
            0.0001631210616324097,
            0.0002577732957433909,
            0.0033999921288341284,
            0.10603571683168411,
            0.0006299585220403969,
            0.004937856458127499
        ],
        "align_select": "select Professionals.professional_id, Professionals.last_name, Professionals.cell_number",
        "align_structure": "SELECT-FROM-WHERE-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Which professionals live in the state of Indiana or have done treatment on at most 2 treatments? List his or her id, last name and cell phone.",
        "gold_select": "select Professionals.professional_id, Professionals.last_name, Professionals.cell_number",
        "select_candidates": [
            "select Professionals.professional_id, Professionals.last_name, Professionals.cell_number",
            "select Professionals.first_name, Professionals.last_name, Professionals.cell_number",
            "select Professionals.role_code, Professionals.last_name, Professionals.cell_number",
            "select Treatments.professional_id, Professionals.last_name, Professionals.cell_number"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-UNION-SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "Professionals Treatments",
        "table_candidates": [
            "Professionals Treatments",
            "Dogs Professionals Treatments",
            "Owners Professionals Treatments",
            "Sizes Professionals Treatments",
            "Treatment_Types Professionals Treatments",
            "Breeds Professionals Treatments",
            "Charges Professionals Treatments"
        ],
        "align_scores": [
            0.0032798966858536005,
            0.14688949286937714,
            0.00016289459017571062,
            0.00023280577443074435,
            0.0005154292448423803,
            0.002691469620913267,
            0.0031768446788191795,
            0.07549382001161575
        ],
        "align_select": "select Professionals.professional_id, Professionals.last_name, Professionals.cell_number",
        "align_structure": "SELECT-FROM-WHERE-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Find the id, last name and cell phone of the professionals who live in the state of Indiana or have performed less than two treatments.",
        "gold_select": "select Professionals.professional_id, Professionals.last_name, Professionals.cell_number",
        "select_candidates": [
            "select Professionals.professional_id, Professionals.last_name, Professionals.cell_number",
            "select Professionals.first_name, Professionals.last_name, Professionals.cell_number",
            "select Treatments.professional_id, Professionals.last_name, Professionals.cell_number",
            "select Professionals.role_code, Professionals.last_name, Professionals.cell_number"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-UNION-SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-WHERE-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals Treatments",
        "table_candidates": [
            "Professionals Treatments",
            "Dogs Professionals Treatments",
            "Owners Professionals Treatments",
            "Treatment_Types Professionals Treatments",
            "Sizes Professionals Treatments",
            "Breeds Professionals Treatments",
            "Charges Professionals Treatments"
        ],
        "align_scores": [
            0.10816194117069244,
            0.03029543161392212,
            0.00026710081147029996,
            0.00027724268147721887,
            0.052677519619464874,
            0.0219922736287117,
            0.011872208677232265,
            0.002954276744276285
        ],
        "align_select": "select Professionals.professional_id, Professionals.last_name, Professionals.cell_number",
        "align_structure": "SELECT-FROM-WHERE-UNION-SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Find the id, last name and cell phone of the professionals who live in the state of Indiana or have performed at least two treatments.",
        "gold_select": "select Professionals.professional_id, Professionals.last_name, Professionals.cell_number",
        "select_candidates": [
            "select Professionals.professional_id, Professionals.last_name, Professionals.cell_number",
            "select Professionals.first_name, Professionals.last_name, Professionals.cell_number",
            "select Treatments.professional_id, Professionals.last_name, Professionals.cell_number",
            "select Professionals.role_code, Professionals.last_name, Professionals.cell_number"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-UNION-SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-WHERE-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals Treatments",
        "table_candidates": [
            "Professionals Treatments",
            "Dogs Professionals Treatments",
            "Owners Professionals Treatments",
            "Treatment_Types Professionals Treatments",
            "Breeds Professionals Treatments",
            "Sizes Professionals Treatments",
            "Charges Professionals Treatments"
        ],
        "align_scores": [
            0.5508227944374084,
            0.019184457138180733,
            0.0005479653482325375,
            0.00028327907784841955,
            0.37203162908554077,
            0.02172457054257393,
            0.04236423224210739,
            0.0021052113734185696
        ],
        "align_select": "select Professionals.professional_id, Professionals.last_name, Professionals.cell_number",
        "align_structure": "SELECT-FROM-WHERE-UNION-SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Find the id, last name and cell phone of the professionals who live in the state of Indiana or have performed at most two treatments.",
        "gold_select": "select Professionals.professional_id, Professionals.last_name, Professionals.cell_number",
        "select_candidates": [
            "select Professionals.professional_id, Professionals.last_name, Professionals.cell_number",
            "select Professionals.first_name, Professionals.last_name, Professionals.cell_number",
            "select Treatments.professional_id, Professionals.last_name, Professionals.cell_number",
            "select Professionals.role_code, Professionals.last_name, Professionals.cell_number"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-UNION-SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-WHERE-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals Treatments",
        "table_candidates": [
            "Professionals Treatments",
            "Dogs Professionals Treatments",
            "Owners Professionals Treatments",
            "Treatment_Types Professionals Treatments",
            "Breeds Professionals Treatments",
            "Sizes Professionals Treatments",
            "Charges Professionals Treatments"
        ],
        "align_scores": [
            0.4861539602279663,
            0.01891850307583809,
            0.0005680247559212148,
            0.00030764625989831984,
            0.4270677864551544,
            0.01981024071574211,
            0.04106353968381882,
            0.002044978551566601
        ],
        "align_select": "select Professionals.professional_id, Professionals.last_name, Professionals.cell_number",
        "align_structure": "SELECT-FROM-WHERE-UNION-SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Which dogs have not cost their owner less than 1000 for treatment? List the dog names.",
        "gold_select": "select Dogs.name",
        "select_candidates": [
            "select Dogs.name",
            "select Dogs.name, Treatments.dog_id",
            "select Dogs.name, Treatments.professional_id",
            "select Dogs.name, Treatments.treatment_type_code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "Dogs Treatments",
        "table_candidates": [
            "Dogs Treatments",
            "Charges Dogs Treatments",
            "Treatment_Types Dogs Treatments",
            "Owners Dogs Treatments",
            "Sizes Dogs Treatments"
        ],
        "align_scores": [
            0.0034818353597074747,
            0.0006945384666323662,
            0.00030458683613687754,
            0.00039251241832971573,
            0.000143724653753452,
            0.0001701364672044292,
            0.0001853377470979467,
            0.0002490757324267179
        ],
        "align_select": "select Dogs.name",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "Which dogs have not cost their owner at most 1000 for treatment? List the dog names.",
        "gold_select": "select Dogs.name",
        "select_candidates": [
            "select Dogs.name",
            "select Dogs.name, Treatments.dog_id",
            "select Dogs.name, Treatments.professional_id",
            "select Dogs.name, Treatments.treatment_type_code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "Dogs Treatments",
        "table_candidates": [
            "Dogs Treatments",
            "Charges Dogs Treatments",
            "Treatment_Types Dogs Treatments",
            "Breeds Dogs Treatments",
            "Owners Dogs Treatments"
        ],
        "align_scores": [
            0.18951556086540222,
            0.00412275455892086,
            0.0005864325212314725,
            0.0006118298624642193,
            0.00025112598086707294,
            0.0002099823614116758,
            0.00047096872003749013,
            0.0004207807360216975
        ],
        "align_select": "select Dogs.name",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of the dogs for which the owner has not spend less than 1000 for treatment?",
        "gold_select": "select Dogs.name",
        "select_candidates": [
            "select Dogs.name",
            "select Dogs.name, Treatments.dog_id",
            "select Dogs.name, Dogs.age",
            "select Dogs.name, Dogs.breed_code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Dogs Treatments",
        "table_candidates": [
            "Dogs Treatments",
            "Charges Dogs Treatments",
            "Treatment_Types Dogs Treatments",
            "Owners Dogs Treatments"
        ],
        "align_scores": [
            0.9087868332862854,
            0.3893781304359436,
            0.00027509283972904086,
            0.0015159553149715066,
            0.00016698935360182077,
            0.00018374320643488318,
            0.0004132083267904818,
            0.0016890366096049547
        ],
        "align_select": "select Dogs.name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of the dogs for which the owner has not spend at most 1000 for treatment?",
        "gold_select": "select Dogs.name",
        "select_candidates": [
            "select Dogs.name",
            "select Dogs.name, Dogs.owner_id",
            "select Dogs.name, Dogs.age",
            "select Dogs.name, Treatments.dog_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "Dogs Treatments",
        "table_candidates": [
            "Dogs Treatments",
            "Charges Dogs Treatments",
            "Owners Dogs Treatments",
            "Treatment_Types Dogs Treatments"
        ],
        "align_scores": [
            0.3986692428588867,
            0.6422539949417114,
            0.0007105559343472123,
            0.00018011352221947163,
            0.00020502449478954077,
            0.0001923119998537004,
            0.0014310312690213323,
            0.000273452460533008
        ],
        "align_select": "select Dogs.name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which professionals have done more than two treatments? List the professional's id, role, and first name.",
        "gold_select": "select Professionals.professional_id, Professionals.role_code, Professionals.first_name",
        "select_candidates": [
            "select Professionals.professional_id, Professionals.role_code, Professionals.first_name",
            "select Treatments.professional_id, Professionals.role_code, Professionals.first_name",
            "select Professionals.professional_id, Professionals.first_name, Professionals.role_code",
            "select t8.c2, Professionals.role_code, Professionals.first_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals Treatments",
        "table_candidates": [
            "Professionals Treatments",
            "Dogs Professionals Treatments",
            "Owners Professionals Treatments",
            "Treatment_Types Professionals Treatments",
            "Breeds Professionals Treatments",
            "Charges Professionals Treatments",
            "Sizes Professionals Treatments"
        ],
        "align_scores": [
            0.935949981212616,
            9.213127486873418e-05,
            0.06660282611846924,
            9.077105642063543e-05,
            0.9219626188278198,
            9.353489440400153e-05,
            0.0005224710330367088,
            7.175843347795308e-05
        ],
        "align_select": "select Professionals.professional_id, Professionals.role_code, Professionals.first_name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Which professionals have done less than two treatments? List the professional's id, role, and first name.",
        "gold_select": "select Professionals.professional_id, Professionals.role_code, Professionals.first_name",
        "select_candidates": [
            "select Professionals.professional_id, Professionals.role_code, Professionals.first_name",
            "select Professionals.professional_id, Professionals.first_name, Professionals.role_code",
            "select Treatments.professional_id, Professionals.role_code, Professionals.first_name",
            "select t8.c2, Professionals.role_code, Professionals.first_name"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals Treatments",
        "table_candidates": [
            "Professionals Treatments",
            "Dogs Professionals Treatments",
            "Owners Professionals Treatments",
            "Treatment_Types Professionals Treatments",
            "Breeds Professionals Treatments",
            "Sizes Professionals Treatments"
        ],
        "align_scores": [
            0.9832181930541992,
            0.00011232649558223784,
            0.9777510166168213,
            0.00011008956062141806,
            0.15983423590660095,
            9.709614096209407e-05,
            0.00044572309707291424,
            6.86861967551522e-05
        ],
        "align_select": "select Professionals.professional_id, Professionals.role_code, Professionals.first_name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Which professionals have done at most two treatments? List the professional's id, role, and first name.",
        "gold_select": "select Professionals.professional_id, Professionals.role_code, Professionals.first_name",
        "select_candidates": [
            "select Professionals.professional_id, Professionals.role_code, Professionals.first_name",
            "select Professionals.professional_id, Professionals.first_name, Professionals.role_code",
            "select Treatments.professional_id, Professionals.role_code, Professionals.first_name",
            "select Professionals.professional_id, Professionals.role_code, Professionals.first_name"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals Treatments",
        "table_candidates": [
            "Professionals Treatments",
            "Dogs Professionals Treatments"
        ],
        "align_scores": [
            0.9880053400993347,
            9.842727013165131e-05,
            0.9850587844848633,
            9.751741890795529e-05,
            0.06919906288385391,
            8.180668373825029e-05,
            0.9880053400993347,
            9.842727013165131e-05
        ],
        "align_select": "select Professionals.professional_id, Professionals.role_code, Professionals.first_name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the id, role, and first name of the professionals who have performed two or less treatments?",
        "gold_select": "select Professionals.professional_id, Professionals.role_code, Professionals.first_name",
        "select_candidates": [
            "select Professionals.professional_id, Professionals.role_code, Professionals.first_name",
            "select Treatments.professional_id, Professionals.role_code, Professionals.first_name",
            "select t8.c2, Professionals.role_code, Professionals.first_name",
            "select Professionals.professional_id, Professionals.first_name, Professionals.role_code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals Treatments",
        "table_candidates": [
            "Professionals Treatments",
            "Dogs Professionals Treatments",
            "Owners Professionals Treatments",
            "Treatment_Types Professionals Treatments",
            "Breeds Professionals Treatments",
            "Sizes Professionals Treatments"
        ],
        "align_scores": [
            0.9526697993278503,
            0.0001355392741970718,
            0.03336881101131439,
            0.00011409910803195089,
            0.0005467916489578784,
            6.686932465527207e-05,
            0.9162483215332031,
            0.00013407450751401484
        ],
        "align_select": "select Professionals.professional_id, Professionals.role_code, Professionals.first_name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Which professionals have done more than two types of treatments? List the professional id and cell phone.",
        "gold_select": "select Professionals.professional_id, Professionals.cell_number",
        "select_candidates": [
            "select Professionals.professional_id, Professionals.cell_number",
            "select Treatments.professional_id, Professionals.cell_number",
            "select Professionals.first_name, Professionals.cell_number",
            "select Professionals.role_code, Professionals.cell_number"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals Treatments",
        "table_candidates": [
            "Professionals Treatments",
            "Dogs Professionals Treatments",
            "Owners Professionals Treatments",
            "Treatment_Types Professionals Treatments",
            "Charges Professionals Treatments",
            "Breeds Professionals Treatments"
        ],
        "align_scores": [
            0.9862183928489685,
            0.00029992987401783466,
            0.2134844809770584,
            0.00023649836657568812,
            0.0003095987776760012,
            8.429084118688479e-05,
            0.18296582996845245,
            0.00020392451551742852
        ],
        "align_select": "select Professionals.professional_id, Professionals.cell_number",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Which professionals have done less than two types of treatments? List the professional id and cell phone.",
        "gold_select": "select Professionals.professional_id, Professionals.cell_number",
        "select_candidates": [
            "select Professionals.professional_id, Professionals.cell_number",
            "select Professionals.first_name, Professionals.cell_number",
            "select Treatments.professional_id, Professionals.cell_number",
            "select Professionals.role_code, Professionals.cell_number"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals Treatments",
        "table_candidates": [
            "Professionals Treatments",
            "Dogs Professionals Treatments",
            "Owners Professionals Treatments",
            "Treatment_Types Professionals Treatments",
            "Charges Professionals Treatments",
            "Breeds Professionals Treatments"
        ],
        "align_scores": [
            0.9744789600372314,
            0.00024811862385831773,
            0.000280723295873031,
            7.42689153412357e-05,
            0.14187633991241455,
            0.00020799253252334893,
            0.16081269085407257,
            0.0001727878989186138
        ],
        "align_select": "select Professionals.professional_id, Professionals.cell_number",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Which professionals have done at most two types of treatments? List the professional id and cell phone.",
        "gold_select": "select Professionals.professional_id, Professionals.cell_number",
        "select_candidates": [
            "select Professionals.professional_id, Professionals.cell_number",
            "select Treatments.professional_id, Professionals.cell_number",
            "select Professionals.first_name, Professionals.cell_number",
            "select Professionals.role_code, Professionals.cell_number"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals Treatments",
        "table_candidates": [
            "Professionals Treatments",
            "Dogs Professionals Treatments",
            "Owners Professionals Treatments",
            "Treatment_Types Professionals Treatments",
            "Charges Professionals Treatments",
            "Breeds Professionals Treatments"
        ],
        "align_scores": [
            0.9840831160545349,
            0.0007499866187572479,
            0.3704049289226532,
            0.00051657430594787,
            0.0003437821287661791,
            8.387261914322153e-05,
            0.19557051360607147,
            0.0003766409063246101
        ],
        "align_select": "select Professionals.professional_id, Professionals.cell_number",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Find the id and cell phone of the professionals who operate two or less types of treatments.",
        "gold_select": "select Professionals.professional_id, Professionals.cell_number",
        "select_candidates": [
            "select Professionals.professional_id, Professionals.cell_number",
            "select Professionals.first_name, Professionals.cell_number",
            "select Treatments.professional_id, Professionals.cell_number",
            "select Professionals.role_code, Professionals.cell_number"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals Treatments",
        "table_candidates": [
            "Professionals Treatments",
            "Dogs Professionals Treatments",
            "Treatment_Types Professionals Treatments",
            "Owners Professionals Treatments",
            "Charges Professionals Treatments",
            "Breeds Professionals Treatments",
            "Sizes Professionals Treatments",
            "Sizes Treatments"
        ],
        "align_scores": [
            0.9627501964569092,
            0.00020759309700224549,
            0.0004505495890043676,
            6.998900789767504e-05,
            0.6797735095024109,
            0.00019288883777335286,
            0.7076658010482788,
            0.0001728383358567953
        ],
        "align_select": "select Professionals.professional_id, Professionals.cell_number",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "How many dogs have an age over the average?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Dogs.dog_id",
            "select count(*), Dogs.age",
            "select count(*), Dogs.breed_code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Dogs",
        "table_candidates": [
            "Dogs"
        ],
        "align_scores": [
            0.9908148646354675,
            0.0007844652282074094,
            0.00025955119053833187,
            0.00015825804439373314,
            0.00020589056657627225,
            0.00012457091361284256,
            0.0002047976740868762,
            0.014087324030697346
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Count the number of dogs of an age over the average.",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Dogs.age",
            "select count(*), Dogs.dog_id",
            "select count(*), Dogs.owner_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Dogs",
        "table_candidates": [
            "Dogs",
            "Dogs Professionals"
        ],
        "align_scores": [
            0.9928914308547974,
            0.0007411749102175236,
            0.0002019943785853684,
            0.0001315514527959749,
            0.000188771344255656,
            0.00011568325862754136,
            0.00013894832227379084,
            0.0001852925051935017
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show distinct names of singers that have songs with sales less than 300000.",
        "gold_select": "select distinct singer.Name",
        "select_candidates": [
            "select distinct singer.Name",
            "select distinct singer.Name, song.Singer_ID",
            "select distinct singer.Name, singer.Birth_Year",
            "select singer.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer song",
        "table_candidates": [
            "singer song"
        ],
        "align_scores": [
            0.9933071732521057,
            0.005861255340278149,
            0.00019539897039067,
            0.00018523650942370296,
            0.00017310783732682467,
            0.00017837993800640106,
            0.9029619693756104,
            0.9558736085891724
        ],
        "align_select": "select distinct singer.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show distinct names of singers that have songs with sales at most 300000.",
        "gold_select": "select distinct singer.Name",
        "select_candidates": [
            "select distinct singer.Name",
            "select distinct singer.Name, song.Singer_ID",
            "select distinct singer.Name, singer.Birth_Year",
            "select singer.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer song",
        "table_candidates": [
            "singer song"
        ],
        "align_scores": [
            0.9911736845970154,
            0.01203180756419897,
            0.0002288437681272626,
            0.00020726124057546258,
            0.00019113090820610523,
            0.000192670471733436,
            0.8720473647117615,
            0.9846096038818359
        ],
        "align_select": "select distinct singer.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "what are the different names of the singers that have sales less than 300000?",
        "gold_select": "select distinct singer.Name",
        "select_candidates": [
            "select distinct singer.Name",
            "select distinct singer.Name, song.Singer_ID",
            "select distinct singer.Name, singer.Birth_Year",
            "select distinct singer.Name, singer.Net_Worth_Millions"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer song",
        "table_candidates": [
            "singer song"
        ],
        "align_scores": [
            0.994433581829071,
            0.0002107618493027985,
            0.0001867408718680963,
            8.10870187706314e-05,
            0.00014522959827445447,
            7.6284195529297e-05,
            0.00019785303447861224,
            7.068414561217651e-05
        ],
        "align_select": "select distinct singer.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "what are the different names of the singers that have sales at most 300000?",
        "gold_select": "select distinct singer.Name",
        "select_candidates": [
            "select distinct singer.Name",
            "select distinct singer.Name, singer.Birth_Year",
            "select distinct singer.Name, song.Singer_ID",
            "select distinct singer.Name, singer.Net_Worth_Millions"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "singer song",
        "table_candidates": [
            "singer song"
        ],
        "align_scores": [
            0.05494894087314606,
            0.9924578666687012,
            0.0002014385536313057,
            0.00015956175047904253,
            0.00027512561064213514,
            0.00023256416898220778,
            0.0002213211846537888,
            0.0002946423483081162
        ],
        "align_select": "select distinct singer.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show the names of singers that have at least one song.",
        "gold_select": "select singer.Name",
        "select_candidates": [
            "select singer.Name",
            "select distinct singer.Name",
            "select count(*), singer.Name",
            "select singer.Name, count(*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer song",
        "table_candidates": [
            "singer song"
        ],
        "align_scores": [
            0.7515258193016052,
            0.00010472656867932528,
            0.003941270988434553,
            4.925697430735454e-05,
            0.000846730312332511,
            6.734723865520209e-05,
            0.0030844591092318296,
            8.27933254186064e-05
        ],
        "align_select": "select singer.Name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Show the names of singers that have at most one song.",
        "gold_select": "select singer.Name",
        "select_candidates": [
            "select singer.Name",
            "select singer.Name, song.Singer_ID",
            "select singer.Name, singer.Singer_ID",
            "select singer.Name, singer.Birth_Year"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer song",
        "table_candidates": [
            "singer song"
        ],
        "align_scores": [
            0.9923393726348877,
            0.00011533564247656614,
            0.00034623974352143705,
            6.024099275236949e-05,
            0.0003194794408045709,
            6.192622822709382e-05,
            0.00032466609263792634,
            6.261124508455396e-05
        ],
        "align_select": "select singer.Name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the names of the singers that have at least one songs?",
        "gold_select": "select singer.Name",
        "select_candidates": [
            "select singer.Name",
            "select singer.Name, song.Singer_ID",
            "select count(*), singer.Name",
            "select distinct singer.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer song",
        "table_candidates": [
            "singer song"
        ],
        "align_scores": [
            0.5554450154304504,
            0.00010560212831478566,
            0.0005492881173267961,
            8.909401367418468e-05,
            0.0007028808468021452,
            7.207802991615608e-05,
            0.01478281058371067,
            5.521429193322547e-05
        ],
        "align_select": "select singer.Name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the names of the singers that have at most one songs?",
        "gold_select": "select singer.Name",
        "select_candidates": [
            "select singer.Name",
            "select singer.Name, song.Singer_ID",
            "select singer.Name, singer.Birth_Year",
            "select singer.Name, song.Title"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer song",
        "table_candidates": [
            "singer song"
        ],
        "align_scores": [
            0.9885629415512085,
            0.00024113530525937676,
            0.0004838875902350992,
            7.665624434594065e-05,
            0.00029386329697445035,
            7.484165689675137e-05,
            0.02863604761660099,
            0.00010658273822627962
        ],
        "align_select": "select singer.Name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the names of properties that are either houses or apartments with less than 1 room?",
        "gold_select": "select Properties.property_name",
        "select_candidates": [
            "select Properties.property_name",
            "select Properties.property_name, Properties.room_count",
            "select Properties.property_name, Properties.property_address",
            "select Properties.property_name, Properties.property_address, Properties.room_count"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "Properties",
        "table_candidates": [
            "Properties",
            "Other_Available_Features Properties"
        ],
        "align_scores": [
            0.44924306869506836,
            0.79726642370224,
            0.00020041434618178755,
            0.00010840850882232189,
            0.00025183422258123755,
            0.00012858660193160176,
            0.0002100626443279907,
            0.00013875344302505255
        ],
        "align_select": "select Properties.property_name",
        "align_structure": "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of properties that are either houses or apartments with at most 1 room?",
        "gold_select": "select Properties.property_name",
        "select_candidates": [
            "select Properties.property_name",
            "select Properties.property_name, Properties.property_address",
            "select Properties.property_name, Properties.room_count",
            "select Properties.property_name, Properties.property_address, Properties.room_count"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "Properties",
        "table_candidates": [
            "Properties"
        ],
        "align_scores": [
            0.9278109669685364,
            0.8063502311706543,
            0.00028384276083670557,
            0.00013204096467234194,
            0.0002118053671438247,
            0.00010381450556451455,
            0.00021424716396722943,
            0.00013687455793842673
        ],
        "align_select": "select Properties.property_name",
        "align_structure": "SELECT-FROM-WHERE"
    }
]