[
    {
        "question": "How old are singers from France on average, minimum and maximum?",
        "gold_select": "select avg(singer.Age), min(singer.Age), max(singer.Age)",
        "select_candidates": [
            "select avg(singer.Age), min(singer.Age), max(singer.Age)",
            "select avg(singer.Age), min(singer.Age),max(singer.Age)",
            "select avg(singer.Age), min(singer.Is_male), max(singer.Age)",
            "select avg(singer.Age), min(singer.Age), max(singer.Is_male)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.9942910671234131,
            0.0010142003884539008,
            0.4408866763114929,
            0.00048540698480792344,
            0.0002513710642233491,
            0.00015004513261374086,
            0.0002843338006641716,
            0.00011943400022573769
        ],
        "align_select": "select avg(singer.Age), min(singer.Age), max(singer.Age)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Who are the singers and what numbers of concerts each one had?",
        "gold_select": "select singer.Name, count(*)",
        "select_candidates": [
            "select singer.Name, count(*)",
            "select singer.Name, count(*), concert.Stadium_ID",
            "select singer.Name, count(*), concert.concert_ID",
            "select singer.Name, count(*), concert.concert_Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer singer_in_concert",
        "table_candidates": [
            "singer concert singer_in_concert",
            "singer singer_in_concert"
        ],
        "align_scores": [
            0.9914275407791138,
            0.00021267615375109017,
            0.00028307121829129755,
            0.00015421566786244512,
            0.0001826620864449069,
            0.00012025544128846377,
            0.00019463397620711476,
            8.967378380475566e-05
        ],
        "align_select": "select singer.Name, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "Name all stadiums which had no concert in 2014.",
        "gold_select": "select stadium.Name",
        "select_candidates": [
            "select stadium.Name",
            "select stadium.Stadium_ID, stadium.Name",
            "select stadium.Location, stadium.Name",
            "select stadium.Name, stadium.Location"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "stadium concert",
        "table_candidates": [
            "stadium concert"
        ],
        "align_scores": [
            0.865516722202301,
            0.005242981016635895,
            0.00042181406752206385,
            0.00023934774799272418,
            0.000279328873148188,
            0.00023102863633539528,
            0.00028042771737091243,
            0.00024192724958993495
        ],
        "align_select": "select stadium.Name",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "Name stadium's that didn't hold a concert in 2014.",
        "gold_select": "select stadium.Name",
        "select_candidates": [
            "select stadium.Name",
            "select stadium.Stadium_ID, stadium.Name",
            "select stadium.Location, stadium.Name",
            "select stadium.Name, concert.Stadium_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "stadium concert",
        "table_candidates": [
            "stadium concert"
        ],
        "align_scores": [
            0.8320983648300171,
            0.8320983648300171,
            0.00038627730100415647,
            0.00038627730100415647,
            0.000310262490529567,
            0.000310262490529567,
            0.00039172128890641034,
            0.00039172128890641034
        ],
        "align_select": "select stadium.Name",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "What were all stadiums that had no concerts in 2014?.",
        "gold_select": "select stadium.Name",
        "select_candidates": [
            "select stadium.Name",
            "select stadium.Stadium_ID, stadium.Name",
            "select stadium.Stadium_ID",
            "select stadium.Location, stadium.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "stadium concert",
        "table_candidates": [
            "stadium concert"
        ],
        "align_scores": [
            0.9715365767478943,
            0.06150452792644501,
            0.0006000869907438755,
            0.0005762919900007546,
            0.9339842200279236,
            0.1232285425066948,
            0.0005560300196520984,
            0.00043707521399483085
        ],
        "align_select": "select stadium.Name",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "Which stadium have highest average attendance? And what is its capacity?",
        "gold_select": "select stadium.Name, stadium.Capacity",
        "select_candidates": [
            "select stadium.Name, stadium.Capacity",
            "select stadium.Stadium_ID, stadium.Name, stadium.Capacity",
            "select stadium.Location, stadium.Capacity",
            "select stadium.Capacity, stadium.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "stadium",
        "table_candidates": [
            "stadium",
            "stadium concert"
        ],
        "align_scores": [
            0.9927164912223816,
            0.7891306281089783,
            0.001446760375984013,
            0.000408930383855477,
            0.0014972491189837456,
            0.0005687185330316424,
            0.9868676662445068,
            0.4266539216041565
        ],
        "align_select": "select stadium.Name, stadium.Capacity",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What stadium had concerts that took place in 2014 and 2015? And where are they?",
        "gold_select": "select stadium.Name, stadium.Location",
        "select_candidates": [
            "select stadium.Name, stadium.Location",
            "select stadium.Location, stadium.Name",
            "select stadium.Name.c1, stadium.Name",
            "select stadium.Stadium_ID, stadium.Location"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "stadium concert",
        "table_candidates": [
            "stadium concert"
        ],
        "align_scores": [
            0.0005824484978802502,
            0.0018523435574024916,
            0.0003510287497192621,
            0.0007582891848869622,
            0.00016554018657188863,
            9.737357322592288e-05,
            0.0006127309752628207,
            0.0068851434625685215
        ],
        "align_select": "select stadium.Name, stadium.Location",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the stadium whose concerts happened in both 2014 and 2015 and their location?",
        "gold_select": "select stadium.Name, stadium.Location",
        "select_candidates": [
            "select stadium.Name, stadium.Location",
            "select stadium.Location, stadium.Name",
            "select stadium.Stadium_ID, stadium.Location",
            "select stadium.Stadium_ID, stadium.Name, stadium.Location"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "stadium concert",
        "table_candidates": [
            "stadium concert"
        ],
        "align_scores": [
            0.9747551083564758,
            0.001119714812375605,
            0.9602463245391846,
            0.00196271575987339,
            0.9848399758338928,
            0.0020049242302775383,
            0.0003666077391244471,
            0.00021864318114239722
        ],
        "align_select": "select stadium.Name, stadium.Location",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "What stadiums had concerts that occurred in both 2014 and 2015? And Where are they located?",
        "gold_select": "select stadium.Name, stadium.Location",
        "select_candidates": [
            "select stadium.Name, stadium.Location",
            "select stadium.Location, stadium.Name",
            "select stadium.Stadium_ID, stadium.Location",
            "select stadium.Name.c1, stadium.Name"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "stadium concert",
        "table_candidates": [
            "stadium concert"
        ],
        "align_scores": [
            0.7361460328102112,
            0.7361460328102112,
            0.596528172492981,
            0.596528172492981,
            0.8411819338798523,
            0.8411819338798523,
            0.0005319792544469237,
            0.0005319792544469237
        ],
        "align_select": "select stadium.Name, stadium.Location",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "What stadiums hosted concerts which took place in both 2014 and 2015? And where are those places?",
        "gold_select": "select stadium.Name, stadium.Location",
        "select_candidates": [
            "select stadium.Location, stadium.Name",
            "select stadium.Name, stadium.Location",
            "select stadium.Stadium_ID, stadium.Location",
            "select stadium.Name.c1, stadium.Name"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "stadium concert",
        "table_candidates": [
            "stadium concert"
        ],
        "align_scores": [
            0.3095819354057312,
            0.3095819354057312,
            0.6832011342048645,
            0.6832011342048645,
            0.40056347846984863,
            0.40056347846984863,
            0.0006576013984158635,
            0.0006576013984158635
        ],
        "align_select": "select stadium.Name, stadium.Location",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "What stadiums were used for concerts in 2014 and 2015? And where are they?",
        "gold_select": "select stadium.Name, stadium.Location",
        "select_candidates": [
            "select stadium.Name, stadium.Location",
            "select stadium.Location, stadium.Name",
            "select stadium.Stadium_ID, stadium.Location",
            "select stadium.Name.c1, stadium.Name"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "stadium concert",
        "table_candidates": [
            "stadium concert"
        ],
        "align_scores": [
            0.002362682018429041,
            0.0056531233713030815,
            0.0010311704827472568,
            0.0013114112662151456,
            0.002100239507853985,
            0.0018338968511670828,
            0.00010113062307937071,
            0.0001947643031599
        ],
        "align_select": "select stadium.Name, stadium.Location",
        "align_structure": "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
    },
    {
        "question": "What's the name/nation of a singer that has a song that haves with \"hey\"?",
        "gold_select": "select singer.Name, singer.Country",
        "select_candidates": [
            "select singer.Name, singer.Country",
            "select singer.Name, singer.Country, singer.Song_Name",
            "select singer.Name, singer.Country, singer.Singer_ID",
            "select singer.Name, singer.Country - singer.Song_Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.9042126536369324,
            0.0001702742447378114,
            0.00026156636886298656,
            8.140823774738237e-05,
            0.00018039278802461922,
            8.565076859667897e-05,
            0.0007590418681502342,
            7.150460442062467e-05
        ],
        "align_select": "select singer.Name, singer.Country",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give me list of songs by the singers who are older than average.",
        "gold_select": "select singer.Song_Name",
        "select_candidates": [
            "select singer.Song_Name",
            "select singer.Song_Name, singer.Is_male",
            "select singer.Song_Name, singer.Age",
            "select singer.Song_Name, singer.Song_release_year"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer",
            "singer singer_in_concert"
        ],
        "align_scores": [
            0.9791359305381775,
            0.00010051866411231458,
            0.00016829933156259358,
            5.924174911342561e-05,
            0.00019001886539626867,
            6.707222200930119e-05,
            0.00015720674127805978,
            6.258116627577692e-05
        ],
        "align_select": "select singer.Song_Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "list all the songs by those singers who are above average age.",
        "gold_select": "select singer.Song_Name",
        "select_candidates": [
            "select singer.Song_Name",
            "select singer.Song_Name, singer.Song_release_year",
            "select singer.Song_Name, singer.Is_male",
            "select singer.Song_Name, singer.Age"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer",
            "singer singer_in_concert"
        ],
        "align_scores": [
            0.9668731689453125,
            0.0001249110937351361,
            0.00017449058941565454,
            6.611731078010052e-05,
            0.00017538400425110012,
            5.9888960095122457e-05,
            0.00021099911828059703,
            6.542220216942951e-05
        ],
        "align_select": "select singer.Song_Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Without concerts list stadiums.",
        "gold_select": "select stadium.Name",
        "select_candidates": [
            "select stadium.Name",
            "select stadium.Stadium_ID, stadium.Name",
            "select stadium.Location, stadium.Name",
            "select stadium.Name, stadium.Location"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "stadium",
        "table_candidates": [
            "stadium concert",
            "stadium singer concert",
            "stadium"
        ],
        "align_scores": [
            0.9931703805923462,
            0.01814407855272293,
            0.00019547890406101942,
            0.00019145796250086278,
            0.0001667533942963928,
            0.00019250923651270568,
            0.00018173406715504825,
            0.0003396655956748873
        ],
        "align_select": "select stadium.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give stadiums without concerts.",
        "gold_select": "select stadium.Name",
        "select_candidates": [
            "select stadium.Stadium_ID, stadium.Name",
            "select stadium.Name",
            "select stadium.Location, stadium.Name",
            "select stadium.Stadium_ID, stadium.Name, stadium.Capacity"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "stadium",
        "table_candidates": [
            "stadium concert",
            "stadium"
        ],
        "align_scores": [
            0.00020538020180538297,
            0.00016123894602060318,
            0.015178089961409569,
            0.003036010544747114,
            0.00023449638683814555,
            0.00016100434004329145,
            0.00018124796042684466,
            0.00011474108032416552
        ],
        "align_select": "select stadium.Stadium_ID, stadium.Name",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM"
    },
    {
        "question": "Mention stadiums without concerts.",
        "gold_select": "select stadium.Name",
        "select_candidates": [
            "select stadium.Name",
            "select stadium.Stadium_ID, stadium.Name",
            "select stadium.Location, stadium.Name",
            "select stadium.Capacity, stadium.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "stadium",
        "table_candidates": [
            "stadium concert",
            "stadium",
            "stadium singer concert"
        ],
        "align_scores": [
            0.9620725512504578,
            0.6190969944000244,
            0.00026090533356182277,
            0.0001991783792618662,
            0.00020001595839858055,
            0.0002803258830681443,
            0.00017444333934690803,
            0.00019174239423591644
        ],
        "align_select": "select stadium.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What singers performed in a concert in 2014?",
        "gold_select": "select singer.Name",
        "select_candidates": [
            "select singer_in_concert.Singer_ID",
            "select singer_in_concert.Singer_ID, singer.Name",
            "select singer_in_concert.Singer_ID, singer.Country",
            "select singer_in_concert.Singer_ID, concert.Theme"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer concert singer_in_concert",
        "table_candidates": [
            "concert singer_in_concert",
            "singer concert singer_in_concert",
            "stadium concert singer_in_concert"
        ],
        "align_scores": [
            0.06366486847400665,
            0.00028659627423621714,
            0.0007294637034647167,
            8.226008503697813e-05,
            0.00035510247107595205,
            7.33692868379876e-05,
            0.00024714681785553694,
            7.152056787163019e-05
        ],
        "align_select": "select singer_in_concert.Singer_ID",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Who sang in a concert in 2014?",
        "gold_select": "select singer.Name",
        "select_candidates": [
            "select singer.Name",
            "select singer_in_concert.Singer_ID",
            "select singer.Name, singer.Singer_ID",
            "select singer.Name, singer_in_concert.Singer_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer concert singer_in_concert",
        "table_candidates": [
            "concert singer_in_concert",
            "singer concert singer_in_concert",
            "stadium singer concert singer_in_concert",
            "stadium concert singer_in_concert"
        ],
        "align_scores": [
            0.9843088984489441,
            0.00011684968922054395,
            0.03655121847987175,
            0.0001803697377908975,
            0.00031537891482003033,
            8.824677934171632e-05,
            0.0002168279461329803,
            7.243909203680232e-05
        ],
        "align_select": "select singer.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which singers sang in concert in 2014?",
        "gold_select": "select singer.Name",
        "select_candidates": [
            "select singer_in_concert.Singer_ID",
            "select singer_in_concert.Singer_ID, singer.Country",
            "select singer.Name, singer_in_concert.Singer_ID",
            "select singer_in_concert.Singer_ID, singer.Name"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer concert singer_in_concert",
        "table_candidates": [
            "concert singer_in_concert",
            "singer concert singer_in_concert",
            "stadium concert singer_in_concert"
        ],
        "align_scores": [
            0.07247083634138107,
            0.00023527306620962918,
            0.0003428574709687382,
            6.769694300601259e-05,
            0.00025802955497056246,
            7.860727055231109e-05,
            0.0005196488345973194,
            8.123715815600008e-05
        ],
        "align_select": "select singer_in_concert.Singer_ID",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Who were the singers in a concert in 2014?.",
        "gold_select": "select singer.Name",
        "select_candidates": [
            "select singer.Name",
            "select singer_in_concert.Singer_ID",
            "select singer.Name, singer.Singer_ID",
            "select singer.Name, concert.concert_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer concert singer_in_concert",
        "table_candidates": [
            "concert singer_in_concert",
            "singer concert singer_in_concert",
            "stadium concert singer_in_concert",
            "stadium singer concert singer_in_concert"
        ],
        "align_scores": [
            0.9851449728012085,
            9.701007365947589e-05,
            0.011449831537902355,
            0.00012262324162293226,
            0.00023701209283899516,
            7.300149445654824e-05,
            0.00017103007121477276,
            6.0984013543929905e-05
        ],
        "align_select": "select singer.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What singers were present at the concert held in 2014.",
        "gold_select": "select singer.Name",
        "select_candidates": [
            "select singer_in_concert.Singer_ID",
            "select singer_in_concert.Singer_ID, concert.Theme",
            "select singer_in_concert.Singer_ID, concert.Stadium_ID",
            "select singer_in_concert.Singer_ID, concert.concert_Name"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer concert singer_in_concert",
        "table_candidates": [
            "concert singer_in_concert",
            "singer concert singer_in_concert",
            "stadium concert singer_in_concert"
        ],
        "align_scores": [
            0.038073740899562836,
            0.005140659864991903,
            0.00026029933360405266,
            0.00011969236220465973,
            0.0001764798944350332,
            0.00011628690117504448,
            0.00015951157547533512,
            0.00010534243483562022
        ],
        "align_select": "select singer_in_concert.Singer_ID",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List singer names, countries ordered by age from the oldest to the youngest. And how old are they?",
        "gold_select": "select singer.Name, singer.Country, singer.Age",
        "select_candidates": [
            "select singer.Name, singer.Country, singer.Age",
            "select singer.Name, singer.Country & singer.Age",
            "select singer.Name, singer.Country, singer.Age.",
            "select singer.Name, singer.Country and singer.Age"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.9920017719268799,
            0.9920017719268799,
            0.9930359721183777,
            0.9930359721183777,
            0.008838502690196037,
            0.008838502690196037,
            0.9922975897789001,
            0.9922975897789001
        ],
        "align_select": "select singer.Name, singer.Country, singer.Age",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "Show list of songs by singers above the average age.",
        "gold_select": "select singer.Song_Name",
        "select_candidates": [
            "select singer.Song_Name",
            "select singer.Song_Name, singer.Song_release_year",
            "select singer.Song_Name, singer.Is_male",
            "select singer.Song_Name, singer.Age"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.9912652373313904,
            9.44585699471645e-05,
            0.00013378130097407848,
            5.743183282902464e-05,
            0.00018727350106928498,
            6.20166611042805e-05,
            0.0002160153235308826,
            6.389235204551369e-05
        ],
        "align_select": "select singer.Song_Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List all songs by singer ages above average",
        "gold_select": "select singer.Song_Name",
        "select_candidates": [
            "select singer.Song_Name",
            "select singer.Song_Name, singer.Song_release_year",
            "select singer.Song_Name, singer.Age",
            "select singer.Song_Name, singer.Is_male"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer",
            "singer singer_in_concert"
        ],
        "align_scores": [
            0.9913873076438904,
            0.00010421015758765861,
            0.00016065561794675887,
            6.951242539798841e-05,
            0.00020481778483372182,
            6.311022298177704e-05,
            0.00017257945728488266,
            6.34794996585697e-05
        ],
        "align_select": "select singer.Song_Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List all songs from singers above average age.",
        "gold_select": "select singer.Song_Name",
        "select_candidates": [
            "select singer.Song_Name",
            "select singer.Song_Name, singer.Song_release_year",
            "select singer.Song_Name, singer.Is_male",
            "select singer.Song_Name, singer.Age"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.9876914620399475,
            0.00012125678040320054,
            0.00015347661974374205,
            6.172024586703628e-05,
            0.0001503233943367377,
            5.7616423873696476e-05,
            0.00018235408060718328,
            6.162491627037525e-05
        ],
        "align_select": "select singer.Song_Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show stadiums and capacities with most concerts in Year 2014 or later.",
        "gold_select": "select stadium.Name, stadium.Capacity",
        "select_candidates": [
            "select stadium.Name, stadium.Capacity",
            "select stadium.Location, stadium.Capacity",
            "select stadium.Stadium_ID, stadium.Name, stadium.Capacity",
            "select stadium.Name.c2, stadium.Capacity"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "stadium concert",
        "table_candidates": [
            "stadium concert"
        ],
        "align_scores": [
            0.991901695728302,
            0.00011184511095052585,
            0.0007174614001996815,
            8.13861915958114e-05,
            0.0441182442009449,
            0.00013658199168276042,
            0.0002687886590138078,
            5.911331390962005e-05
        ],
        "align_select": "select stadium.Name, stadium.Capacity",
        "align_structure": "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Give the list of singers that played in concerts in 2014.",
        "gold_select": "select singer.Name",
        "select_candidates": [
            "select singer_in_concert.Singer_ID",
            "select singer_in_concert.Singer_ID, concert.Theme",
            "select concert.concert_ID, singer.Name",
            "select singer.Name"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer concert singer_in_concert",
        "table_candidates": [
            "concert singer_in_concert",
            "singer concert singer_in_concert",
            "stadium concert singer_in_concert"
        ],
        "align_scores": [
            0.008712215349078178,
            0.00017445032426621765,
            0.00022629558225162327,
            7.451906276401132e-05,
            0.0002062464045593515,
            6.72423848300241e-05,
            0.9086109399795532,
            0.00012261739175301045
        ],
        "align_select": "select singer.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which singers appeared in concert in 2014?",
        "gold_select": "select singer.Name",
        "select_candidates": [
            "select singer_in_concert.Singer_ID",
            "select singer.Name",
            "select singer.Name, singer_in_concert.Singer_ID",
            "select singer_in_concert.Singer_ID, singer.Country"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer concert singer_in_concert",
        "table_candidates": [
            "concert singer_in_concert",
            "singer concert singer_in_concert",
            "stadium concert singer_in_concert"
        ],
        "align_scores": [
            0.045390110462903976,
            0.00023735131253488362,
            0.6973857879638672,
            0.0002090295311063528,
            0.0002807755081448704,
            7.672483479836956e-05,
            0.0003795361262746155,
            6.951295654289424e-05
        ],
        "align_select": "select singer.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "list all singers in concerts in 2014.",
        "gold_select": "select singer.Name",
        "select_candidates": [
            "select singer_in_concert.Singer_ID",
            "select singer_in_concert.Singer_ID, concert.concert_Name",
            "select singer_in_concert.Singer_ID, concert.Theme",
            "select singer_in_concert.Singer_ID, concert.concert_ID"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer concert singer_in_concert",
        "table_candidates": [
            "concert singer_in_concert",
            "singer concert singer_in_concert",
            "stadium concert singer_in_concert"
        ],
        "align_scores": [
            0.009901871904730797,
            0.0002101466088788584,
            0.00014303233183454722,
            6.670309812761843e-05,
            0.00021704718528781086,
            6.782818672945723e-05,
            0.00013762747403234243,
            6.381831190083176e-05
        ],
        "align_select": "select singer_in_concert.Singer_ID",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which singers were appearing in concerts in 2014?",
        "gold_select": "select singer.Name",
        "select_candidates": [
            "select singer_in_concert.Singer_ID",
            "select singer.Name",
            "select singer_in_concert.Singer_ID, concert.Theme",
            "select singer.Name, concert.concert_ID"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer concert singer_in_concert",
        "table_candidates": [
            "concert singer_in_concert",
            "singer concert singer_in_concert",
            "stadium concert singer_in_concert",
            "stadium singer concert singer_in_concert"
        ],
        "align_scores": [
            0.043803729116916656,
            0.00023142059217207134,
            0.5359532833099365,
            0.00017862945969682187,
            0.0002470024337526411,
            7.471722346963361e-05,
            0.00014854216715320945,
            6.778912211302668e-05
        ],
        "align_select": "select singer.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show list singers in concerts in 2014.",
        "gold_select": "select singer.Name",
        "select_candidates": [
            "select singer_in_concert.Singer_ID",
            "select singer_in_concert.Singer_ID, concert.concert_Name",
            "select singer_in_concert.Singer_ID, concert.Theme",
            "select concert.concert_Name, singer_in_concert.Singer_ID"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer concert singer_in_concert",
        "table_candidates": [
            "concert singer_in_concert",
            "singer concert singer_in_concert",
            "stadium concert singer_in_concert"
        ],
        "align_scores": [
            0.0017303142230957747,
            0.0001272637164220214,
            0.0001466665999032557,
            6.609952833969146e-05,
            0.0002132365625584498,
            6.99813972460106e-05,
            0.00017022441898006946,
            6.615085294470191e-05
        ],
        "align_select": "select singer_in_concert.Singer_ID",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What singers have songs with Hey in their titles? And where are they from?",
        "gold_select": "select singer.Name, singer.Country",
        "select_candidates": [
            "select singer.Name, singer.Country",
            "select distinct singer.Name, singer.Country",
            "select concert_singer singer.Name, singer.Country",
            "select concert_singer_singer.Name, singer.Country"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.595658540725708,
            0.00013436503650154918,
            0.06272625923156738,
            9.302095713792369e-05,
            0.0005058993119746447,
            8.421001984970644e-05,
            0.0004789585655089468,
            7.473454024875537e-05
        ],
        "align_select": "select singer.Name, singer.Country",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Who has songs with Hey in their titles? And where are they from?",
        "gold_select": "select singer.Name, singer.Country",
        "select_candidates": [
            "select singer.Name, singer.Country",
            "select distinct singer.Name, singer.Country",
            "select singer.Name, singer.Country,",
            "select the singer.Name, singer.Country"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer",
            "singer concert"
        ],
        "align_scores": [
            0.549290120601654,
            0.00010913371806964278,
            0.04496420547366142,
            8.284624345833436e-05,
            0.00045901621342636645,
            7.340651791309938e-05,
            0.000978493713773787,
            8.356318721780553e-05
        ],
        "align_select": "select singer.Name, singer.Country",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Who have songs with Hey in their titles, and from which countries are they?",
        "gold_select": "select singer.Name, singer.Country",
        "select_candidates": [
            "select singer.Name, singer.Country",
            "select distinct singer.Name, singer.Country",
            "select singer.Name.c2, singer.Song_Name",
            "select the singer.Name, singer.Country"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.98454350233078,
            0.00011325651576044038,
            0.0588311031460762,
            8.31007055239752e-05,
            0.00045223982306197286,
            8.206515485653654e-05,
            0.0010366050992161036,
            9.067199425771832e-05
        ],
        "align_select": "select singer.Name, singer.Country",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which stadiums had concerts in 2014 and 2015? And Where were they?",
        "gold_select": "select stadium.Name, stadium.Location",
        "select_candidates": [
            "select stadium.Name, stadium.Location",
            "select stadium.Location, stadium.Name",
            "select stadium.Stadium_ID, stadium.Location",
            "select stadium.Stadium_ID, stadium.Name, stadium.Location"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "stadium concert",
        "table_candidates": [
            "stadium concert"
        ],
        "align_scores": [
            0.002692209556698799,
            0.0021001447457820177,
            0.0010405454086139798,
            0.0006116503500379622,
            0.0021407492458820343,
            0.002610595664009452,
            0.001148372539319098,
            0.00022216139768715948
        ],
        "align_select": "select stadium.Name, stadium.Location",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "Which singers performed how many concerts?",
        "gold_select": "select singer.Name, count(*)",
        "select_candidates": [
            "select singer.Name, count(*)",
            "select singer.Name, count(*), concert.Stadium_ID",
            "select count(*), singer.Name",
            "select singer.Name, count(*), concert.concert_Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer singer_in_concert",
        "table_candidates": [
            "singer singer_in_concert",
            "singer concert singer_in_concert"
        ],
        "align_scores": [
            0.9904583692550659,
            9.411348582943901e-05,
            0.001713356701657176,
            7.333109533647075e-05,
            0.9873934984207153,
            0.00010049795673694462,
            0.000415690999943763,
            5.83568362344522e-05
        ],
        "align_select": "select singer.Name, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "What singers have had how many concerts?",
        "gold_select": "select singer.Name, count(*)",
        "select_candidates": [
            "select singer.Name, count(*)",
            "select count(*), singer.Name",
            "select concert_singer_singer.Name, count(*)",
            "select singer.Name, count(*), concert.Stadium_ID"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "singer singer_in_concert",
        "table_candidates": [
            "singer singer_in_concert",
            "singer concert singer_in_concert"
        ],
        "align_scores": [
            0.00038417577161453664,
            0.0002472114283591509,
            0.00016291480278596282,
            0.0002162044693250209,
            0.00012365772272460163,
            0.00012810257612727582,
            8.403112587984651e-05,
            9.710558515507728e-05
        ],
        "align_select": "select singer.Name, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Which song were the youngest singer released, and when was it released?",
        "gold_select": "select singer.Song_Name, singer.Song_release_year",
        "select_candidates": [
            "select singer.Song_Name, singer.Song_release_year",
            "select singer.Country, singer.Song_release_year",
            "select singer.Name, singer.Song_release_year",
            "select singer.Song_Name, singer.Song_release_year."
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.9905813932418823,
            8.588648051954806e-05,
            0.0009536879952065647,
            7.462651410605758e-05,
            0.0022012365516275167,
            8.97037098184228e-05,
            0.005777169484645128,
            7.36535366741009e-05
        ],
        "align_select": "select singer.Song_Name, singer.Song_release_year",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Show the songs of the youngest singer and release year.",
        "gold_select": "select singer.Song_Name, singer.Song_release_year",
        "select_candidates": [
            "select singer.Song_Name, singer.Song_release_year",
            "select singer.Country, singer.Song_release_year",
            "select singer.Song_Name), singer.Song_release_year",
            "select singer.Song_Name, singer.Song_release_year."
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.948788583278656,
            6.4707244746387e-05,
            0.0003422957379370928,
            8.518891991116107e-05,
            0.0016643321141600609,
            5.985315510770306e-05,
            0.001273758360184729,
            5.9610560128930956e-05
        ],
        "align_select": "select singer.Song_Name, singer.Song_release_year",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Stadiums without concerts?",
        "gold_select": "select stadium.Name",
        "select_candidates": [
            "select stadium.Name",
            "select stadium.Stadium_ID",
            "select stadium.Stadium_ID, stadium.Name",
            "select stadium.Location, stadium.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "stadium",
        "table_candidates": [
            "stadium concert",
            "stadium"
        ],
        "align_scores": [
            0.0031201851088553667,
            0.03169664368033409,
            0.0017660560552030802,
            0.5746750235557556,
            0.0001907984260469675,
            0.00035590925836004317,
            0.00014976512466091663,
            0.00029669274226762354
        ],
        "align_select": "select stadium.Stadium_ID",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM"
    },
    {
        "question": "Which stadiums have not had a concert?",
        "gold_select": "select stadium.Name",
        "select_candidates": [
            "select stadium.Stadium_ID, stadium.Name",
            "select stadium.Name",
            "select stadium.Location, stadium.Name",
            "select stadium.Stadium_ID, stadium.Location, stadium.Name"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "stadium",
        "table_candidates": [
            "stadium",
            "stadium concert"
        ],
        "align_scores": [
            0.0010034397710114717,
            0.0002042890409938991,
            0.3600333333015442,
            0.0032419965136796236,
            0.000371708651073277,
            0.00015534323756583035,
            0.0003182992513757199,
            0.00014166061009746045
        ],
        "align_select": "select stadium.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show singers; show where they come from; and show their ages in descending order.",
        "gold_select": "select singer.Name, singer.Country, singer.Age",
        "select_candidates": [
            "select singer.Name, singer.Country, singer.Age",
            "select singer.Singer_ID, singer.Country, singer.Age",
            "select singer.Name, singer.Country, singer.Age",
            "select singer.Name, singer.Country & singer.Age"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.9897211194038391,
            0.9897211194038391,
            0.001134467893280089,
            0.001134467893280089,
            0.9897211194038391,
            0.9897211194038391,
            0.989788293838501,
            0.989788293838501
        ],
        "align_select": "select singer.Name, singer.Country, singer.Age",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "What is the largest attended stadium on average? And how much is the capacity?",
        "gold_select": "select stadium.Name, stadium.Capacity",
        "select_candidates": [
            "select stadium.Name, stadium.Capacity",
            "select stadium.Capacity, avg(concert.Year)",
            "select stadium.Capacity, stadium.Highest",
            "select stadium.Location, stadium.Capacity"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-UNION-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "stadium",
        "table_candidates": [
            "stadium concert"
        ],
        "align_scores": [
            0.9938327074050903,
            6.729728920618072e-05,
            0.00030190369579941034,
            6.0562571889022365e-05,
            0.0009248314308933914,
            6.31197908660397e-05,
            0.0005092069623060524,
            6.177978502819315e-05
        ],
        "align_select": "select stadium.Name, stadium.Capacity",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What stations have capacity between 5000 and 10000? And Where are they?",
        "gold_select": "select stadium.Location, stadium.Name",
        "select_candidates": [
            "select stadium.Location, stadium.Name",
            "select stadium.Stadium_ID, stadium.Location",
            "select stadium.Name, stadium.Location",
            "select stadium.Location.c2, stadium.Location"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "stadium",
        "table_candidates": [
            "stadium"
        ],
        "align_scores": [
            0.990698516368866,
            0.0003629943821579218,
            0.03949074447154999,
            0.0007914976449683309,
            0.9537932872772217,
            0.0005762666696682572,
            0.00035953419865109026,
            8.225380588555709e-05
        ],
        "align_select": "select stadium.Location, stadium.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which songs did the youngest singer sing, and what were their release years?",
        "gold_select": "select singer.Song_Name, singer.Song_release_year",
        "select_candidates": [
            "select singer.Song_Name, singer.Song_release_year",
            "select singer.Country, singer.Song_release_year",
            "select singer.Name, singer.Song_release_year",
            "select singer.Song_Name.c4, singer.Song_Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.985478401184082,
            7.067322439979762e-05,
            0.0008856986532919109,
            8.734959556022659e-05,
            0.0010545358527451754,
            7.734529208391905e-05,
            0.000337075034622103,
            6.72398236929439e-05
        ],
        "align_select": "select singer.Song_Name, singer.Song_release_year",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Which songs did the youngest singer sing, and when were they released?",
        "gold_select": "select singer.Song_Name, singer.Song_release_year",
        "select_candidates": [
            "select singer.Song_Name, singer.Song_release_year",
            "select singer.Country, singer.Song_release_year",
            "select singer.Song_Name, singer.Song_release_year.",
            "select singer.Name, singer.Song_release_year"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.9892523884773254,
            8.300147601403296e-05,
            0.0010604362469166517,
            7.645745790796354e-05,
            0.004468727856874466,
            7.294373790500686e-05,
            0.001756605808623135,
            8.233157132053748e-05
        ],
        "align_select": "select singer.Song_Name, singer.Song_release_year",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Find how old are pets on average and show maximum of them for each type.",
        "gold_select": "select avg(Pets.pet_age), max(Pets.pet_age), Pets.PetType",
        "select_candidates": [
            "select avg(Pets.pet_age), max(Pets.pet_age), Pets.PetType",
            "select Pets.PetType, avg(Pets.pet_age), max(Pets.pet_age)",
            "select avg(Pets.pet_age), Pets.PetType",
            "select avg(Pets.pet_age), min(Pets.pet_age), Pets.PetType"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Pets",
        "table_candidates": [
            "Pets"
        ],
        "align_scores": [
            0.9789639711380005,
            0.0002013647899730131,
            0.9390624165534973,
            0.00023752337438054383,
            0.0023430432192981243,
            0.0038614333607256413,
            0.0005174495745450258,
            0.0001152933036792092
        ],
        "align_select": "select avg(Pets.pet_age), max(Pets.pet_age), Pets.PetType",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "How old are pets on average for each type, and what is the largest age for each type of pet?",
        "gold_select": "select avg(Pets.pet_age), max(Pets.pet_age), Pets.PetType",
        "select_candidates": [
            "select Pets.PetType, avg(Pets.pet_age), max(Pets.pet_age)",
            "select avg(Pets.pet_age), max(Pets.pet_age), Pets.PetType",
            "select Pets.PetType, avg(Pets.pet_age)",
            "select Pets.PetType, avg(Pets.pet_age), max(Pets.pet_age)"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Pets",
        "table_candidates": [
            "Pets"
        ],
        "align_scores": [
            0.987509548664093,
            0.00041757203871384263,
            0.9858888983726501,
            0.00031040681642480195,
            0.04629320651292801,
            0.2845172584056854,
            0.987509548664093,
            0.00041757203871384263
        ],
        "align_select": "select Pets.PetType, avg(Pets.pet_age), max(Pets.pet_age)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "How old are students without pet on average?",
        "gold_select": "select avg(Student.Age)",
        "select_candidates": [
            "select avg(Student.Age)",
            "select an avg(Student.Age)",
            "select avg(Student.Age), Student.StuID",
            "select avg(t0-Student.Age)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Student",
        "table_candidates": [
            "Student",
            "Student Has_Pet",
            "Student Has_Pet Pets"
        ],
        "align_scores": [
            0.9965965151786804,
            0.00021690443099942058,
            0.0004579068045131862,
            0.0001574799680383876,
            0.0001674552622716874,
            9.196065366268158e-05,
            0.029090704396367073,
            0.0002633779076859355
        ],
        "align_select": "select avg(Student.Age)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How old is the average student who does not own any pet animals?",
        "gold_select": "select avg(Student.Age)",
        "select_candidates": [
            "select avg(Student.Age)",
            "select avg(Student.Age), Student.Sex",
            "select an avg(Student.Age)",
            "select avg(Student.Age), Student.StuID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Student",
        "table_candidates": [
            "Student",
            "Student Has_Pet Pets",
            "Student Has_Pet"
        ],
        "align_scores": [
            0.994238018989563,
            0.000496484397444874,
            0.00014766516687814146,
            0.00011111798812635243,
            0.0005833812756463885,
            0.0001807123189792037,
            0.00017766430391930044,
            9.783194400370121e-05
        ],
        "align_select": "select avg(Student.Age)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How much does each type of pet weigh",
        "gold_select": "select avg(Pets.weight), Pets.PetType",
        "select_candidates": [
            "select Pets.PetType, sum(Pets.weight)",
            "select Pets.PetType, Pets.weight",
            "select Pets.PetType, max(Pets.weight)",
            "select Pets.PetType, average(Pets.weight)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Pets",
        "table_candidates": [
            "Pets"
        ],
        "align_scores": [
            0.9939203262329102,
            0.0001271627697860822,
            0.9943034648895264,
            0.00018908624770119786,
            0.9140321016311646,
            0.00012226501712575555,
            0.8831632733345032,
            0.00012444696039892733
        ],
        "align_select": "select Pets.PetType, sum(Pets.weight)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "How much heavy is each type of pet?",
        "gold_select": "select avg(Pets.weight), Pets.PetType",
        "select_candidates": [
            "select Pets.PetType, sum(Pets.weight)",
            "select Pets.PetType, Pets.weight",
            "select Pets.PetType, max(Pets.weight)",
            "select Pets.PetType, avg(Pets.weight)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Pets",
        "table_candidates": [
            "Pets"
        ],
        "align_scores": [
            0.9838512539863586,
            0.00015206621901597828,
            0.9830713868141174,
            0.00017441774252802134,
            0.7358188033103943,
            0.00012202463403809816,
            0.9821768999099731,
            0.00013880424376111478
        ],
        "align_select": "select Pets.PetType, sum(Pets.weight)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "Which pets are older than one year? Show id and how much do they weigh?",
        "gold_select": "select Pets.PetID, Pets.weight",
        "select_candidates": [
            "select Pets.PetID, Pets.weight",
            "select Pets.PetID, Pets.weight.",
            "select Pets.PetID, Pets.weight)",
            "select Pets.PetID, Pets.weight,"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Pets",
        "table_candidates": [
            "Pets"
        ],
        "align_scores": [
            0.8000573515892029,
            0.0004937226185575128,
            0.002824137918651104,
            0.00017021677922457457,
            0.00159804942086339,
            0.00019780852016992867,
            0.002353604417294264,
            9.217153274221346e-05
        ],
        "align_select": "select Pets.PetID, Pets.weight",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List the first names of students that have a dog but no cats as pets. And how old are they?",
        "gold_select": "select Student.Fname, Student.Age",
        "select_candidates": [
            "select Student.Fname, Student.Age",
            "select Student.LName, Student.Age",
            "select Student.LName, Student.Fname, Student.Age",
            "select Student.StuID, Student.Fname, Student.Age"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "Student Has_Pet Pets",
        "table_candidates": [
            "Student Has_Pet Pets"
        ],
        "align_scores": [
            0.29909151792526245,
            0.9798681139945984,
            0.0729849636554718,
            0.028743889182806015,
            0.00023360644991043955,
            0.0003434771206229925,
            0.00011456834909040481,
            0.0002039620594587177
        ],
        "align_select": "select Student.Fname, Student.Age",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Who has a pet? Show the first name and how old?",
        "gold_select": "select distinct Student.Fname, Student.Age",
        "select_candidates": [
            "select Student.Fname, Student.Age",
            "select Student.Fname, Pets.pet_age",
            "select distinct Student.Fname, Student.Age",
            "select Student.LName, Student.Age"
        ],
        "select_labels": [
            0.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Student Has_Pet",
        "table_candidates": [
            "Student Has_Pet Pets",
            "Student Has_Pet"
        ],
        "align_scores": [
            0.700850784778595,
            0.0001246462343260646,
            0.9941408038139343,
            0.0001582109834998846,
            0.018254021182656288,
            8.52077646413818e-05,
            0.0009230540017597377,
            0.0001003791912808083
        ],
        "align_select": "select Student.Fname, Pets.pet_age",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "How heavy is the youngest dog?",
        "gold_select": "select Pets.weight",
        "select_candidates": [
            "select Pets.weight",
            "select max(Pets.weight)",
            "select min(Pets.weight)",
            "select Pets.weight, Pets.pet_age"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Pets",
        "table_candidates": [
            "Pets",
            "Student Pets",
            "Has_Pet Pets"
        ],
        "align_scores": [
            0.993124783039093,
            0.9920216202735901,
            0.0003170901327393949,
            0.002817785134539008,
            0.00043778863619081676,
            0.7131873369216919,
            0.0008220404852181673,
            0.0003173774457536638
        ],
        "align_select": "select Pets.weight",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "How much did the youngest dog weigh",
        "gold_select": "select Pets.weight",
        "select_candidates": [
            "select Pets.weight",
            "select min(Pets.weight)",
            "select max(Pets.weight)",
            "select Pets.PetID, Pets.weight"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Pets",
        "table_candidates": [
            "Pets"
        ],
        "align_scores": [
            0.9923811554908752,
            5.6548338761786e-05,
            0.0005598005373030901,
            6.043945177225396e-05,
            0.0003853029338642955,
            5.748563853558153e-05,
            0.0006239063222892582,
            5.674355634255335e-05
        ],
        "align_select": "select Pets.weight",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "How heavy is the youngest dog?",
        "gold_select": "select Pets.weight",
        "select_candidates": [
            "select Pets.weight",
            "select max(Pets.weight)",
            "select min(Pets.weight)",
            "select Pets.weight, Pets.pet_age"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Pets",
        "table_candidates": [
            "Pets",
            "Student Pets",
            "Has_Pet Pets"
        ],
        "align_scores": [
            0.993124783039093,
            0.9920216202735901,
            0.0003170901327393949,
            0.002817785134539008,
            0.00043778863619081676,
            0.7131873369216919,
            0.0008220404852181673,
            0.0003173774457536638
        ],
        "align_select": "select Pets.weight",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "How much does the youngest dog weigh?",
        "gold_select": "select Pets.weight",
        "select_candidates": [
            "select Pets.weight",
            "select min(Pets.weight)",
            "select max(Pets.weight)",
            "select Pets.weight, Pets.pet_age"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "Pets",
        "table_candidates": [
            "Pets"
        ],
        "align_scores": [
            0.21010547876358032,
            6.523406045744196e-05,
            0.9905607104301453,
            8.438670192845166e-05,
            0.002039596438407898,
            6.063665568944998e-05,
            0.0002114216040354222,
            6.177118484629318e-05
        ],
        "align_select": "select min(Pets.weight)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How old are the students who own pets and what are their first names?",
        "gold_select": "select distinct Student.Fname, Student.Age",
        "select_candidates": [
            "select Student.Age, Student.Fname",
            "select Student.Fname, Student.Age",
            "select distinct Student.Fname, Student.Age",
            "select distinct Student.Age, Student.Fname"
        ],
        "select_labels": [
            0.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Student Has_Pet",
        "table_candidates": [
            "Student Has_Pet",
            "Student Has_Pet Pets"
        ],
        "align_scores": [
            0.9763943552970886,
            0.9922729730606079,
            0.9804721474647522,
            0.9940525889396667,
            0.062303174287080765,
            0.026201579719781876,
            0.03599564731121063,
            0.02796820178627968
        ],
        "align_select": "select Student.Age, Student.Fname",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What type is the youngest pet, and how much does it weigh?",
        "gold_select": "select Pets.PetType, Pets.weight",
        "select_candidates": [
            "select Pets.PetType, Pets.weight",
            "select Pets.PetID, Pets.PetType, Pets.weight",
            "select Pets.PetType, Pets.weight, Pets.pet_age",
            "select Pets.PetType.c1, Pets.weight"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Pets",
        "table_candidates": [
            "Pets"
        ],
        "align_scores": [
            0.9567720293998718,
            5.853111724718474e-05,
            0.00027206121012568474,
            6.809129263274372e-05,
            0.00027522927848622203,
            5.359866190701723e-05,
            0.0011674471898004413,
            5.868772859685123e-05
        ],
        "align_select": "select Pets.PetType, Pets.weight",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "How old are students on average who don't own pets?",
        "gold_select": "select avg(Student.Age)",
        "select_candidates": [
            "select avg(Student.Age)",
            "select an avg(Student.Age)",
            "select avg(Student.Age), Student.StuID",
            "select avg(Student.Age), Student.Sex"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Student",
        "table_candidates": [
            "Student",
            "Student Has_Pet",
            "Student Has_Pet Pets"
        ],
        "align_scores": [
            0.9936991930007935,
            0.00016090137069113553,
            0.0005243453779257834,
            0.00014207228377927095,
            0.0001431346609024331,
            9.5381896244362e-05,
            0.00012709126167465,
            0.00012804394646082073
        ],
        "align_select": "select avg(Student.Age)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How old are kids with no pets on average",
        "gold_select": "select avg(Student.Age)",
        "select_candidates": [
            "select avg(Student.Age)",
            "select an avg(Student.Age)",
            "select avg(t0-Student.Age)",
            "select Avg(Student.Age)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Student",
        "table_candidates": [
            "Student",
            "Student Has_Pet Pets",
            "Student Has_Pet"
        ],
        "align_scores": [
            0.9957895874977112,
            6.715792551403865e-05,
            0.000565317168366164,
            8.223309851018712e-05,
            0.03248219192028046,
            6.87252395437099e-05,
            0.9957895874977112,
            6.715792551403865e-05
        ],
        "align_select": "select avg(Student.Age)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How much are animals of each type weighting",
        "gold_select": "select avg(Pets.weight), Pets.PetType",
        "select_candidates": [
            "select Pets.PetType, sum(Pets.weight)",
            "select Pets.PetType, max(Pets.weight)",
            "select Pets.PetType, Pets.weight",
            "select distinct Pets.PetType, sum(Pets.weight)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Pets",
        "table_candidates": [
            "Pets"
        ],
        "align_scores": [
            0.992801308631897,
            0.00014400656800717115,
            0.7510721683502197,
            0.0001304627803619951,
            0.990602970123291,
            0.0011510924668982625,
            0.00024097600544337183,
            9.519761078990996e-05
        ],
        "align_select": "select Pets.PetType, sum(Pets.weight)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "How heavy are pets on average for each type",
        "gold_select": "select avg(Pets.weight), Pets.PetType",
        "select_candidates": [
            "select Pets.PetType, avg(Pets.weight)",
            "select avg(Pets.weight), Pets.PetType",
            "select pettype, avg(Pets.weight)",
            "select Pets.PetType, Avg(Pets.weight)"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Pets",
        "table_candidates": [
            "Pets"
        ],
        "align_scores": [
            0.9935663342475891,
            0.00015505966439377517,
            0.993661642074585,
            0.00013058973127044737,
            0.02711920440196991,
            0.00020777015015482903,
            0.9935663342475891,
            0.00015505966439377517
        ],
        "align_select": "select Pets.PetType, avg(Pets.weight)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "List which countries has at least one car-maker, and mention their id.",
        "gold_select": "select countries.CountryName, countries.CountryId",
        "select_candidates": [
            "select countries.CountryId, countries.CountryName",
            "select countries.CountryId, car_makers.Country",
            "select countries.CountryId, car_makers.Maker",
            "select distinct countries.CountryId, countries.CountryName"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "countries car_makers",
        "table_candidates": [
            "countries car_makers",
            "countries car_makers model_list"
        ],
        "align_scores": [
            0.0902344137430191,
            0.1224895566701889,
            0.03693702816963196,
            0.0023009791038930416,
            0.0419553741812706,
            0.0028682523407042027,
            0.02395550347864628,
            0.0014011319726705551
        ],
        "align_select": "select countries.CountryId, countries.CountryName",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "Show names for car makers along with id and how many models.",
        "gold_select": "select car_makers.FullName, car_makers.Id, count(*)",
        "select_candidates": [
            "select car_makers.FullName, model_list.Maker, count(*)",
            "select car_makers.Maker, count(*)",
            "select car_makers.FullName, model_list.ModelId, count(*)",
            "select car_makers.Maker, model_list.ModelId, count(*)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_makers model_list",
        "table_candidates": [
            "car_makers model_list car_names",
            "continents car_makers model_list car_names",
            "countries model_list car_names",
            "model_list car_names",
            "car_makers model_list"
        ],
        "align_scores": [
            0.09577874839305878,
            0.0002316431055078283,
            0.7909376621246338,
            0.00024282088270410895,
            0.055888548493385315,
            0.00017857737839221954,
            0.5666959881782532,
            0.00023127345775719732
        ],
        "align_select": "select car_makers.Maker, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "Full name of each car maker, along with its id and how many models.",
        "gold_select": "select car_makers.FullName, car_makers.Id, count(*)",
        "select_candidates": [
            "select car_makers.FullName, model_list.Maker, count(*)",
            "select car_makers.FullName, car_names.Model, count(*)",
            "select car_makers.FullName, car_names.MakeId, count(*)",
            "select car_makers.Maker, model_list.Maker, count(*)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_makers model_list",
        "table_candidates": [
            "car_makers model_list car_names",
            "countries car_makers model_list car_names",
            "car_makers car_names"
        ],
        "align_scores": [
            0.8457833528518677,
            0.0001860062184277922,
            0.0004088968853466213,
            0.0001588143641129136,
            0.0061629703268408775,
            0.00023556574888061732,
            0.00026171281933784485,
            0.00014688186638522893
        ],
        "align_select": "select car_makers.FullName, model_list.Maker, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "list makers cars along with their identifications and how many models they produce.",
        "gold_select": "select car_makers.FullName, car_makers.Id, count(*)",
        "select_candidates": [
            "select car_makers.Id, count(*)",
            "select car_makers.Maker, count(*)",
            "select car_makers.FullName, model_list.Maker, count(*)",
            "select car_makers.Maker, model_list.Maker, count(*)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "car_makers model_list",
        "table_candidates": [
            "car_makers model_list",
            "car_makers model_list car_names",
            "model_list car_makers",
            "model_list car_names",
            "continents car_makers model_list",
            "countries model_list"
        ],
        "align_scores": [
            0.9387631416320801,
            0.00025962741347029805,
            0.8439739346504211,
            0.00028068319079466164,
            0.012887924909591675,
            0.0002590169897302985,
            0.00037324175355024636,
            0.00011236420687055215
        ],
        "align_select": "select car_makers.Id, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "What country does not include cars?",
        "gold_select": "select countries.CountryName",
        "select_candidates": [
            "select countries.CountryName",
            "select countries.CountryName, countries.CountryId",
            "select countries.CountryName, car_makers.Country",
            "select countries.CountryName, continents.Continent"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "countries car_makers",
        "table_candidates": [
            "countries car_makers",
            "countries"
        ],
        "align_scores": [
            0.27328503131866455,
            0.7005653977394104,
            0.00029187885229475796,
            0.00027430581394582987,
            0.0005357401678338647,
            0.00043401113362051547,
            0.00022907470702193677,
            0.0002643318730406463
        ],
        "align_select": "select countries.CountryName",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "Name the countries with no car manufacturers",
        "gold_select": "select countries.CountryName",
        "select_candidates": [
            "select countries.CountryName",
            "select countries.CountryName, countries.CountryId",
            "select countries.CountryName, countries.Continent",
            "select countries.CountryName, t0.c2"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "countries car_makers",
        "table_candidates": [
            "countries car_makers",
            "countries"
        ],
        "align_scores": [
            0.18368612229824066,
            0.08216965198516846,
            0.0003131880075670779,
            0.0002890037721954286,
            0.00022397388238459826,
            0.00024032624787651002,
            0.0004071855510119349,
            0.00023434085596818477
        ],
        "align_select": "select countries.CountryName",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Name countries without car makers.",
        "gold_select": "select countries.CountryName",
        "select_candidates": [
            "select countries.CountryName",
            "select countries.CountryName, countries.CountryId",
            "select countries.CountryName, countries.Continent",
            "select countries.CountryName, car_makers.Country"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "countries car_makers",
        "table_candidates": [
            "countries",
            "countries car_makers"
        ],
        "align_scores": [
            0.9614472389221191,
            0.011412044055759907,
            0.0001441824424546212,
            0.00010126870620297268,
            0.00018239009659737349,
            0.00013531006698030978,
            0.0002874731144402176,
            0.00031578956986777484
        ],
        "align_select": "select countries.CountryName",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show the country that do not have car makers.",
        "gold_select": "select countries.CountryName",
        "select_candidates": [
            "select countries.CountryName",
            "select countries.CountryName, countries.CountryId",
            "select countries.CountryName, countries.Continent",
            "select countries.CountryName, car_makers.Country"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "countries car_makers",
        "table_candidates": [
            "countries car_makers",
            "countries"
        ],
        "align_scores": [
            0.5181675553321838,
            0.06440171599388123,
            0.00031135763856582344,
            0.0004653186188079417,
            0.0001787794171832502,
            0.00019038519531022757,
            0.0004028502735309303,
            0.0003493591211736202
        ],
        "align_select": "select countries.CountryName",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM"
    },
    {
        "question": "Name the countries where there is no car manufacturer",
        "gold_select": "select countries.CountryName",
        "select_candidates": [
            "select countries.CountryName",
            "select countries.CountryName, countries.CountryId",
            "select countries.CountryName, countries.Continent",
            "select countries.CountryName, t0.c2"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "countries car_makers",
        "table_candidates": [
            "countries car_makers",
            "countries",
            "countries car_makers model_list",
            "countries car_makers car_names"
        ],
        "align_scores": [
            0.2706126272678375,
            0.220473513007164,
            0.00036456400994211435,
            0.0003612669825088233,
            0.0002740365744102746,
            0.0003615338646341115,
            0.0004247782635502517,
            0.0002573725359980017
        ],
        "align_select": "select countries.CountryName",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show me which countries do not have car makers.",
        "gold_select": "select countries.CountryName",
        "select_candidates": [
            "select countries.CountryName",
            "select countries.CountryName, countries.CountryId",
            "select countries.CountryId, countries.CountryName",
            "select countries.CountryName, countries.Continent"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "countries car_makers",
        "table_candidates": [
            "countries car_makers",
            "countries"
        ],
        "align_scores": [
            0.7519699931144714,
            0.13265790045261383,
            0.0007521642255596817,
            0.000782672839704901,
            0.00103030726313591,
            0.0017586462199687958,
            0.00031173249590210617,
            0.00029657455161213875
        ],
        "align_select": "select countries.CountryName",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM"
    },
    {
        "question": "What countries don't have car makers.",
        "gold_select": "select countries.CountryName",
        "select_candidates": [
            "select countries.CountryName",
            "select countries.CountryName, countries.CountryId",
            "select countries.CountryName, car_makers.Country",
            "select countries.CountryName, countries.Continent"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "countries car_makers",
        "table_candidates": [
            "countries car_makers",
            "countries"
        ],
        "align_scores": [
            0.7615441679954529,
            0.08082809299230576,
            0.0003823742736130953,
            0.0005064647411927581,
            0.0005014120251871645,
            0.0003338050446473062,
            0.00025741648278199136,
            0.0002435384812997654
        ],
        "align_select": "select countries.CountryName",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM"
    },
    {
        "question": "State which countries do not have a car maker.",
        "gold_select": "select countries.CountryName",
        "select_candidates": [
            "select countries.CountryName",
            "select countries.CountryName, countries.CountryId",
            "select countries.CountryId, countries.CountryName",
            "select countries.CountryName, countries.Continent"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "countries car_makers",
        "table_candidates": [
            "countries",
            "countries car_makers"
        ],
        "align_scores": [
            0.1941894143819809,
            0.5418123602867126,
            0.0009067635401152074,
            0.0005889712483622134,
            0.0019127459963783622,
            0.0006914162659086287,
            0.0003832587390206754,
            0.0003559640608727932
        ],
        "align_select": "select countries.CountryName",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM"
    },
    {
        "question": "How much do cars weigh on average per year?",
        "gold_select": "select avg(cars_data.Weight), cars_data.Year",
        "select_candidates": [
            "select avg(cars_data.Weight), cars_data.Year",
            "select avg(cars_data.Weight)",
            "select avg(cars_data.Weight)/cars_data.Year",
            "select an avg(cars_data.Weight), cars_data.Year"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data"
        ],
        "align_scores": [
            0.0002603261382319033,
            0.8849799633026123,
            0.9753657579421997,
            0.0007927899132482708,
            0.962763249874115,
            0.0003127747040707618,
            0.00013915833551436663,
            0.00019819366571027786
        ],
        "align_select": "select avg(cars_data.Weight)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "How heavy were different cars each year on average?",
        "gold_select": "select avg(cars_data.Weight), cars_data.Year",
        "select_candidates": [
            "select avg(cars_data.Weight), cars_data.Year",
            "select cars_data.Year, avg(cars_data.Weight)",
            "select min(cars_data.Weight), avg(cars_data.Weight)",
            "select cars_data.Weight, avg(cars_data.Weight)"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data"
        ],
        "align_scores": [
            0.9909693598747253,
            0.00012189112021587789,
            0.9963334798812866,
            0.00011224576155655086,
            0.0002822702517732978,
            0.00011717851157300174,
            0.00041679092100821435,
            0.00011143578740302473
        ],
        "align_select": "select avg(cars_data.Weight), cars_data.Year",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "How much do cars weigh each year on average?",
        "gold_select": "select avg(cars_data.Weight), cars_data.Year",
        "select_candidates": [
            "select avg(cars_data.Weight), cars_data.Year",
            "select cars_data.Year, avg(cars_data.Weight)",
            "select min(cars_data.Weight), avg(cars_data.Weight)",
            "select accu(cars_data.Weight), cars_data.Year"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "cars_data",
        "table_candidates": [
            "cars_data"
        ],
        "align_scores": [
            0.7877815365791321,
            7.645140431122854e-05,
            0.9947859644889832,
            7.96734748291783e-05,
            0.00029455975163728,
            5.9804202464874834e-05,
            0.0008690262329764664,
            8.706354128662497e-05
        ],
        "align_select": "select cars_data.Year, avg(cars_data.Weight)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "List every european country, which has at least three manufacturars.",
        "gold_select": "select countries.CountryName",
        "select_candidates": [
            "select countries.CountryName",
            "select countries.CountryName, continents.ContId",
            "select countries.CountryName, continents.Continent",
            "select countries.CountryName, t0.c2"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "continents countries car_makers",
        "table_candidates": [
            "continents countries car_makers",
            "continents car_makers",
            "continents countries"
        ],
        "align_scores": [
            0.8963407874107361,
            0.7261181473731995,
            0.0010958375642076135,
            0.0010957646882161498,
            0.0003212055889889598,
            0.0003234124160371721,
            0.00023223932657856494,
            0.00030548288486897945
        ],
        "align_select": "select countries.CountryName",
        "align_structure": "SELECT-FROM-WHERE-GROUP BY-HAVING"
    },
    {
        "question": "Which country is known as the country with many automakers (car companies)?",
        "gold_select": "select countries.CountryName",
        "select_candidates": [
            "select countries.CountryName",
            "select countries.CountryName, car_makers.Country",
            "select countries.CountryName, countries.CountryId",
            "select countries.CountryName, countries.Continent"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "countries car_makers",
        "table_candidates": [
            "countries car_makers"
        ],
        "align_scores": [
            0.42932167649269104,
            6.931582902325317e-05,
            0.0016020240727812052,
            6.066742571420036e-05,
            0.0028883519116789103,
            5.641040115733631e-05,
            0.0014661288587376475,
            5.640270683215931e-05
        ],
        "align_select": "select countries.CountryName",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Name of country with most car makers.",
        "gold_select": "select countries.CountryName",
        "select_candidates": [
            "select countries.CountryName",
            "select countries.CountryName, car_makers.Country",
            "select countries.CountryName, countries.CountryId",
            "select countries.CountryName (countries.Continent)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "countries car_makers",
        "table_candidates": [
            "countries car_makers"
        ],
        "align_scores": [
            0.9787886142730713,
            7.450605335179716e-05,
            0.000576313934288919,
            5.613050234387629e-05,
            0.0004525364493019879,
            5.468655581353232e-05,
            0.004670410882681608,
            5.488723763846792e-05
        ],
        "align_select": "select countries.CountryName",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "List the country with the largest number of car manufacturers.",
        "gold_select": "select countries.CountryName",
        "select_candidates": [
            "select countries.CountryName",
            "select countries.CountryName, car_makers.Country",
            "select countries.CountryName, countries.CountryId",
            "select countries.CountryName commensurate with count(*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "countries car_makers",
        "table_candidates": [
            "countries car_makers"
        ],
        "align_scores": [
            0.7220682501792908,
            7.155631465138867e-05,
            0.0010123960673809052,
            6.195990863488987e-05,
            0.001797376316972077,
            6.031617886037566e-05,
            0.01293694693595171,
            5.4058800742495805e-05
        ],
        "align_select": "select countries.CountryName",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Which airport with code AKO?",
        "gold_select": "select airports.AirportName",
        "select_candidates": [
            "select airports.AirportName",
            "select airports.City, airports.AirportName",
            "select airports.AirportName, airports.Country",
            "select avg(airports.AirportName)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports",
        "table_candidates": [
            "airports"
        ],
        "align_scores": [
            0.924384593963623,
            0.00019254322978667915,
            0.00022561996593140066,
            7.990728772711009e-05,
            0.00016663307906128466,
            7.128537981770933e-05,
            0.0029382859356701374,
            6.900486187078059e-05
        ],
        "align_select": "select airports.AirportName",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Tell what airport has code AKO.",
        "gold_select": "select airports.AirportName",
        "select_candidates": [
            "select airports.AirportName",
            "select airports.City, airports.AirportName",
            "select airports.AirportName, airports.Country",
            "select airports.AirportName, airports.Country, airports.CountryAbbrev"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports",
        "table_candidates": [
            "airports"
        ],
        "align_scores": [
            0.9463398456573486,
            0.00012194646842544898,
            0.00021307294082362205,
            6.893423415021971e-05,
            0.00019234741921536624,
            6.253450555959716e-05,
            0.0001734981342451647,
            6.116503209341317e-05
        ],
        "align_select": "select airports.AirportName",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which airport has code 'AKO'?",
        "gold_select": "select airports.AirportName",
        "select_candidates": [
            "select airports.AirportName",
            "select airports.City, airports.AirportName",
            "select airports.AirportName, airports.Country",
            "select airports.AirportName, airports.AirportCode"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports",
        "table_candidates": [
            "airports"
        ],
        "align_scores": [
            0.9120749831199646,
            0.00015460672148037702,
            0.00019078460172750056,
            7.0726360718254e-05,
            0.000157126720296219,
            6.500251038232818e-05,
            0.0001878805342130363,
            6.628959818044677e-05
        ],
        "align_select": "select airports.AirportName",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "what airport has code AKO",
        "gold_select": "select airports.AirportName",
        "select_candidates": [
            "select airports.AirportName",
            "select airports.City, airports.AirportName",
            "select airports.AirportName, airports.Country",
            "select airports.AirportName, airports.AirportCode"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports",
        "table_candidates": [
            "airports"
        ],
        "align_scores": [
            0.953553318977356,
            0.00021113836555741727,
            0.00022274084039963782,
            7.398502202704549e-05,
            0.0001889698178274557,
            6.967933586565778e-05,
            0.00026697502471506596,
            7.284781167982146e-05
        ],
        "align_select": "select airports.AirportName",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which airport has code AKO?",
        "gold_select": "select airports.AirportName",
        "select_candidates": [
            "select airports.AirportName",
            "select airports.City, airports.AirportName",
            "select airports.AirportName, airports.Country",
            "select airports.AirportName, airports.AirportCode"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports",
        "table_candidates": [
            "airports"
        ],
        "align_scores": [
            0.9311895370483398,
            0.00021416261733975261,
            0.00022638215159531683,
            8.076529047684744e-05,
            0.0001818751625251025,
            7.413601997541264e-05,
            0.0002714238944463432,
            7.301444566110149e-05
        ],
        "align_select": "select airports.AirportName",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which airports don't have flights in or Out?",
        "gold_select": "select airports.AirportName",
        "select_candidates": [
            "select airports.AirportName",
            "select airports.AirportCode, airports.AirportName",
            "select airports.City, airports.AirportName",
            "select airports.AirportName, airports.AirportCode"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights",
            "airports"
        ],
        "align_scores": [
            0.07240869104862213,
            0.9426681995391846,
            0.005504122003912926,
            0.21218523383140564,
            0.0009496812126599252,
            0.0018407474271953106,
            0.007038549054414034,
            0.2689693570137024
        ],
        "align_select": "select airports.AirportName",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM"
    },
    {
        "question": "Which airport has no flights in or out.",
        "gold_select": "select airports.AirportName",
        "select_candidates": [
            "select airports.AirportName",
            "select airports.AirportCode, airports.AirportName",
            "select airports.AirportName, flights.SourceAirport",
            "select airports.AirportName, flights.SourceAirport, flights.DestAirport"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights",
            "airports"
        ],
        "align_scores": [
            0.14170372486114502,
            0.8824042677879333,
            0.0056330072693526745,
            0.02274523861706257,
            0.004566423129290342,
            0.0020276776049286127,
            0.0009668197599239647,
            0.0010213765781372786
        ],
        "align_select": "select airports.AirportName",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM"
    },
    {
        "question": "Give the airport which have no flight in and out.",
        "gold_select": "select airports.AirportName",
        "select_candidates": [
            "select airports.AirportName",
            "select airports.AirportCode, airports.AirportName",
            "select airports.City, airports.AirportName",
            "select airports.AirportName, flights.SourceAirport"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "airports flights",
        "table_candidates": [
            "airports flights",
            "airports"
        ],
        "align_scores": [
            0.6173697710037231,
            0.07026102393865585,
            0.015555019490420818,
            0.0032201188150793314,
            0.0006257792701944709,
            0.00031996346660889685,
            0.001187515794299543,
            0.0018571242690086365
        ],
        "align_select": "select airports.AirportName",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM"
    },
    {
        "question": "What airports do we have at Aberdeen?",
        "gold_select": "select airports.AirportName",
        "select_candidates": [
            "select airports.AirportName",
            "select airports.City, airports.AirportCode, airports.AirportName",
            "select airports.AirportName, airports.AirportCode",
            "select airports.AirportCode, airports.AirportName"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports",
        "table_candidates": [
            "airports"
        ],
        "align_scores": [
            0.955784261226654,
            0.00018143608758691698,
            0.00020008023420814425,
            6.848501652712002e-05,
            0.0024548033252358437,
            7.513757009292021e-05,
            0.004123419988900423,
            8.043387060752138e-05
        ],
        "align_select": "select airports.AirportName",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which airports are in city 'Aberdeen'.",
        "gold_select": "select airports.AirportName",
        "select_candidates": [
            "select airports.AirportName",
            "select airports.AirportName, airports.AirportCode",
            "select airports.City, airports.AirportName",
            "select airports.AirportCode, airports.AirportName"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports",
        "table_candidates": [
            "airports"
        ],
        "align_scores": [
            0.9249289631843567,
            0.00014281985932029784,
            0.0013779116561636329,
            7.758041465422139e-05,
            0.00021592881239484996,
            7.014536095084623e-05,
            0.002207493642345071,
            7.764250767650083e-05
        ],
        "align_select": "select airports.AirportName",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What airports are there at city Aberdeen?",
        "gold_select": "select airports.AirportName",
        "select_candidates": [
            "select airports.AirportName",
            "select airports.AirportName, airports.AirportCode",
            "select airports.City, airports.AirportCode, airports.AirportName",
            "select airports.City, airports.AirportName"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports",
        "table_candidates": [
            "airports"
        ],
        "align_scores": [
            0.949110209941864,
            0.00020325191144365817,
            0.0035438048653304577,
            8.338949555763975e-05,
            0.0002074275107588619,
            7.269471097970381e-05,
            0.0002749764244072139,
            6.871895311633125e-05
        ],
        "align_select": "select airports.AirportName",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What airports are there in Aberdeen?",
        "gold_select": "select airports.AirportName",
        "select_candidates": [
            "select airports.AirportName",
            "select airports.City, airports.AirportCode, airports.AirportName",
            "select airports.City, airports.AirportName",
            "select airports.AirportName, airports.AirportCode"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports",
        "table_candidates": [
            "airports"
        ],
        "align_scores": [
            0.8403288722038269,
            0.00020477559883147478,
            0.00018789003661368042,
            7.151292084017769e-05,
            0.0002386954874964431,
            6.95851122145541e-05,
            0.0011509796604514122,
            8.407265704590827e-05
        ],
        "align_select": "select airports.AirportName",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Where do JetBlue Airlines belong to?",
        "gold_select": "select airlines.Country",
        "select_candidates": [
            "select airlines.Country",
            "select airlines.Country, airlines.Abbreviation",
            "select airlines.Abbreviation, airlines.Country",
            "select airlines.Airline, airlines.Country"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines",
        "table_candidates": [
            "airlines"
        ],
        "align_scores": [
            0.9835295081138611,
            0.00014773278962820768,
            0.00034186767879873514,
            7.17502916813828e-05,
            0.00031525897793471813,
            7.19909294275567e-05,
            0.00023011189477983862,
            6.614354060729966e-05
        ],
        "align_select": "select airlines.Country",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Where are Jetblue Airways affiliated to.",
        "gold_select": "select airlines.Country",
        "select_candidates": [
            "select airlines.Country",
            "select airlines.Country, airlines.Abbreviation",
            "select airlines.Country, t0.c4",
            "select distinct airlines.Country"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines",
        "table_candidates": [
            "airlines",
            "airlines airports",
            "airlines flights",
            "airlines airports flights"
        ],
        "align_scores": [
            0.3558098077774048,
            0.003501859027892351,
            0.0002906730805989355,
            0.0001254702510777861,
            0.00025695719523355365,
            0.00014326805830933154,
            0.07109911739826202,
            0.00045471586054190993
        ],
        "align_select": "select airlines.Country",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which airports in Aberdeen?",
        "gold_select": "select airports.AirportName",
        "select_candidates": [
            "select airports.AirportName",
            "select airports.City, airports.AirportName",
            "select airports.City, airports.AirportCode, airports.AirportName",
            "select airports.AirportName, airports.AirportCode"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports",
        "table_candidates": [
            "airports"
        ],
        "align_scores": [
            0.8581653237342834,
            0.00014417748025152832,
            0.00023098148813005537,
            6.6746688389685e-05,
            0.000183476775418967,
            6.878124258946627e-05,
            0.0020095922518521547,
            7.609964814037085e-05
        ],
        "align_select": "select airports.AirportName",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which airports are in Aberdeen?",
        "gold_select": "select airports.AirportName",
        "select_candidates": [
            "select airports.AirportName",
            "select airports.City, airports.AirportCode, airports.AirportName",
            "select airports.AirportName, airports.AirportCode",
            "select airports.AirportCode, airports.AirportName"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports",
        "table_candidates": [
            "airports"
        ],
        "align_scores": [
            0.8067697286605835,
            0.00018479656137060374,
            0.00020127285097260028,
            6.814767402829602e-05,
            0.0017188787460327148,
            7.961559458635747e-05,
            0.002992719179019332,
            8.273326238850132e-05
        ],
        "align_select": "select airports.AirportName",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What airports are there in Aberdeen?",
        "gold_select": "select airports.AirportName",
        "select_candidates": [
            "select airports.AirportName",
            "select airports.City, airports.AirportCode, airports.AirportName",
            "select airports.City, airports.AirportName",
            "select airports.AirportName, airports.AirportCode"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports",
        "table_candidates": [
            "airports"
        ],
        "align_scores": [
            0.8403288722038269,
            0.00020477559883147478,
            0.00018789003661368042,
            7.151292084017769e-05,
            0.0002386954874964431,
            6.95851122145541e-05,
            0.0011509796604514122,
            8.407265704590827e-05
        ],
        "align_select": "select airports.AirportName",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What airports do we have in Aberdeen?",
        "gold_select": "select airports.AirportName",
        "select_candidates": [
            "select airports.AirportName",
            "select airports.City, airports.AirportCode, airports.AirportName",
            "select airports.AirportName, airports.AirportCode",
            "select airports.AirportCode, airports.AirportName"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports",
        "table_candidates": [
            "airports"
        ],
        "align_scores": [
            0.9257054924964905,
            0.0001838089374359697,
            0.0002200223971158266,
            7.054038724163547e-05,
            0.0017738684546202421,
            7.695946987951174e-05,
            0.0024020476266741753,
            8.3493250713218e-05
        ],
        "align_select": "select airports.AirportName",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which airlines are there in the USA? And Their abbreviations?",
        "gold_select": "select airlines.Airline, airlines.Abbreviation",
        "select_candidates": [
            "select airlines.Airline, airlines.Abbreviation",
            "select airlines.uid, airlines.Airline, airlines.Abbreviation",
            "select airlines.Airline, airlines.Abbreviation, airlines.Country",
            "select t0.c 1, airlines.Abbreviation"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines",
        "table_candidates": [
            "airlines"
        ],
        "align_scores": [
            0.9933174848556519,
            0.00041573186172172427,
            0.00022784095199313015,
            6.75525443512015e-05,
            0.00018219226330984384,
            5.8649457059800625e-05,
            0.0005294458824209869,
            6.993829447310418e-05
        ],
        "align_select": "select airlines.Airline, airlines.Abbreviation",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What airlines exist in USA? and what are their abbreviations?",
        "gold_select": "select airlines.Airline, airlines.Abbreviation",
        "select_candidates": [
            "select airlines.Airline, airlines.Abbreviation",
            "select airlines.uid, airlines.Airline, airlines.Abbreviation",
            "select airlines.Airline, airlines.Abbreviation, airlines.Country",
            "select airlines.Airline.c2, airlines.Airline"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines",
        "table_candidates": [
            "airlines"
        ],
        "align_scores": [
            0.992764413356781,
            0.00023113879433367401,
            0.00023376333410851657,
            7.218057726277038e-05,
            0.00017690363165456802,
            6.0932226915610954e-05,
            0.00025981635553762317,
            6.399070844054222e-05
        ],
        "align_select": "select airlines.Airline, airlines.Abbreviation",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Name all airlines in USA with their abbrevs",
        "gold_select": "select airlines.Airline, airlines.Abbreviation",
        "select_candidates": [
            "select airlines.Airline, airlines.Abbreviation",
            "select airlines.uid, airlines.Airline, airlines.Abbreviation",
            "select airlines.Airline, airlines.Abbreviation, airlines.Country",
            "select airlines.Airline, airlines.Abbreviation, airlines.Abbreviation"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines",
        "table_candidates": [
            "airlines"
        ],
        "align_scores": [
            0.0006551166297867894,
            7.980949885677546e-05,
            0.00013418884191196412,
            6.784436118323356e-05,
            0.00012188600521767512,
            6.476744601968676e-05,
            0.00013537560880649835,
            7.587110303575173e-05
        ],
        "align_select": "select airlines.Airline, airlines.Abbreviation",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Write down every airline and its abbreviation in USA.",
        "gold_select": "select airlines.Airline, airlines.Abbreviation",
        "select_candidates": [
            "select airlines.Airline, airlines.Abbreviation",
            "select airlines.Airline, airlines.Abbreviation, airlines.Country",
            "select airlines.Airline.c1, airlines.Abbreviation",
            "select airlines.Airline, airlines.Abbreviation2"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines",
        "table_candidates": [
            "airlines"
        ],
        "align_scores": [
            0.995322048664093,
            0.00014077848754823208,
            0.00016877485904842615,
            6.382269930327311e-05,
            0.00021114983246661723,
            8.181463635992259e-05,
            0.016912003979086876,
            0.00012877423432655632
        ],
        "align_select": "select airlines.Airline, airlines.Abbreviation",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show airport codes and airports in the city of Anthony.",
        "gold_select": "select airports.AirportCode, airports.AirportName",
        "select_candidates": [
            "select airports.AirportCode, airports.AirportName",
            "select avg(airports.AirportCode), avg(airports.AirportName)",
            "select avg(airports.AirportCode), airports.AirportName",
            "select airports.AirportCode.c1, airports.AirportName"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports",
        "table_candidates": [
            "airports"
        ],
        "align_scores": [
            0.9866127967834473,
            8.389677532250062e-05,
            0.001070008729584515,
            6.587796087842435e-05,
            0.0003575155569706112,
            6.454983667936176e-05,
            0.0004175648791715503,
            6.527351069962606e-05
        ],
        "align_select": "select airports.AirportCode, airports.AirportName",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Where is airline \u201cJetblue Airway\u201d from?",
        "gold_select": "select airlines.Country",
        "select_candidates": [
            "select airlines.Country",
            "select airlines.Country, airlines.Abbreviation",
            "select airlines.Airline, airlines.Country",
            "select airlines.Country, t0.c4"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines",
        "table_candidates": [
            "airlines"
        ],
        "align_scores": [
            0.9874609112739563,
            9.625851089367643e-05,
            0.00024170221877284348,
            6.375570956151932e-05,
            0.0002683622878976166,
            6.572723941644654e-05,
            0.0003293187764938921,
            8.282348426291719e-05
        ],
        "align_select": "select airlines.Country",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Where is Airline JetBlue Airways from?",
        "gold_select": "select airlines.Country",
        "select_candidates": [
            "select airlines.Country",
            "select airlines.Country, airlines.Abbreviation",
            "select airlines.Airline, airlines.Country",
            "select airlines.Abbreviation, airlines.Country"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airlines",
        "table_candidates": [
            "airlines"
        ],
        "align_scores": [
            0.9899823069572449,
            0.00010625678987707943,
            0.0002581301669124514,
            6.451649096561596e-05,
            0.0002642713952809572,
            6.40760044916533e-05,
            0.00032153158099390566,
            6.747047154931352e-05
        ],
        "align_select": "select airlines.Country",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "which airport is AKO?",
        "gold_select": "select airports.AirportName",
        "select_candidates": [
            "select airports.AirportName",
            "select airports.City, airports.AirportName",
            "select avg(airports.AirportName)",
            "select airports.AirportName, airports.AirportCode"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "airports",
        "table_candidates": [
            "airports"
        ],
        "align_scores": [
            0.9140138626098633,
            0.0001515325711807236,
            0.00026293229893781245,
            6.15292665315792e-05,
            0.00192732154391706,
            5.908248567720875e-05,
            0.00034079921897500753,
            7.08735387888737e-05
        ],
        "align_select": "select airports.AirportName",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which employee has been awarded the most times during the evalutation?",
        "gold_select": "select employee.Name",
        "select_candidates": [
            "select employee.Name",
            "select employee.Name, evaluation.Employee_ID",
            "select employee.Name, employee.Employee_ID",
            "select employee.Employee_ID, employee.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "employee evaluation",
        "table_candidates": [
            "employee evaluation",
            "employee hiring evaluation",
            "employee shop evaluation",
            "employee hiring"
        ],
        "align_scores": [
            0.9852761626243591,
            6.212770676938817e-05,
            0.0019095177995041013,
            8.783087105257437e-05,
            0.0008724399376660585,
            7.236494275275618e-05,
            0.002098541473969817,
            7.711095531703904e-05
        ],
        "align_select": "select employee.Name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Which employee was awarded the most times in the evaluation?",
        "gold_select": "select employee.Name",
        "select_candidates": [
            "select employee.Name",
            "select employee.Name, evaluation.Employee_ID",
            "select employee.Name, employee.Employee_ID",
            "select employee.Employee_ID, employee.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "employee evaluation",
        "table_candidates": [
            "employee evaluation",
            "employee hiring evaluation",
            "employee shop evaluation"
        ],
        "align_scores": [
            0.9897832274436951,
            6.0232145187910646e-05,
            0.0021697154734283686,
            8.406271081184968e-05,
            0.000980134354904294,
            7.14571651769802e-05,
            0.003160136751830578,
            7.846004154998809e-05
        ],
        "align_select": "select employee.Name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "which employee has received the most awards during an evaluation?",
        "gold_select": "select employee.Name",
        "select_candidates": [
            "select employee.Name",
            "select employee.Name, evaluation.Employee_ID",
            "select employee.Name, employee.Employee_ID",
            "select employee.Name, employee.City"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "employee evaluation",
        "table_candidates": [
            "employee evaluation",
            "employee hiring evaluation",
            "employee shop evaluation"
        ],
        "align_scores": [
            0.988749623298645,
            5.875100032426417e-05,
            0.003484188811853528,
            8.796246402198449e-05,
            0.0014957579551264644,
            6.865522300358862e-05,
            0.0004823131603188813,
            5.973079532850534e-05
        ],
        "align_select": "select employee.Name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Which employee has been awarded most in evaluatio?",
        "gold_select": "select employee.Name",
        "select_candidates": [
            "select employee.Name",
            "select employee.Name, evaluation.Employee_ID",
            "select employee.Name, employee.Employee_ID",
            "select employee.Employee_ID, employee.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "employee evaluation",
        "table_candidates": [
            "employee evaluation",
            "employee hiring evaluation",
            "employee shop evaluation"
        ],
        "align_scores": [
            0.9870389103889465,
            5.5017502745613456e-05,
            0.0023972189519554377,
            7.350808300543576e-05,
            0.000767240475397557,
            6.038207357050851e-05,
            0.0016989139840006828,
            6.501856114482507e-05
        ],
        "align_select": "select employee.Name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Who had the highest number of awards during an evaluation?",
        "gold_select": "select employee.Name",
        "select_candidates": [
            "select employee.Name",
            "select employee.Name, employee.City",
            "select employee.Name, evaluation.Employee_ID",
            "select employee.Name, evaluation.Bonus"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "employee evaluation",
        "table_candidates": [
            "employee evaluation",
            "employee hiring evaluation",
            "employee shop evaluation"
        ],
        "align_scores": [
            0.9912996888160706,
            5.660498209181242e-05,
            0.0005348746199160814,
            5.966828393866308e-05,
            0.005268508568406105,
            7.957930938573554e-05,
            0.00153246964327991,
            6.234730244614184e-05
        ],
        "align_select": "select employee.Name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Show managers and districts of shops that sell most products",
        "gold_select": "select shop.Manager_name, shop.District",
        "select_candidates": [
            "select shop.Manager_name, shop.District",
            "select shop.Manager_name, shop.Location",
            "select shop.Manager_name, shop.District,",
            "select shop.Name, shop.District"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "shop",
        "table_candidates": [
            "shop"
        ],
        "align_scores": [
            0.9940764904022217,
            0.995161235332489,
            0.9915279150009155,
            0.994283139705658,
            0.004859037697315216,
            0.0018660963978618383,
            0.0008752704015932977,
            0.001783866435289383
        ],
        "align_select": "select shop.Manager_name, shop.District",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Who is the manager of the shop that has the most products and which district does this shop belong to?.",
        "gold_select": "select shop.Manager_name, shop.District",
        "select_candidates": [
            "select shop.Manager_name, shop.District",
            "select shop.Name, shop.District",
            "select shop.Manager_name, shop.Location",
            "select shop.Location, shop.District"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "shop",
        "table_candidates": [
            "shop"
        ],
        "align_scores": [
            0.9873558878898621,
            0.00010042620124295354,
            0.07079741358757019,
            9.297891665482894e-05,
            0.9860283732414246,
            0.00010679638216970488,
            0.0015132927801460028,
            0.00016158554353751242
        ],
        "align_select": "select shop.Manager_name, shop.District",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Manager who work at this shop that has sold the greatest number of products, and which District do they belong to?.",
        "gold_select": "select shop.Manager_name, shop.District",
        "select_candidates": [
            "select shop.Manager_name, shop.District",
            "select shop.Manager_name, shop.Location",
            "select shop.Name, shop.District",
            "select shop.Location, shop.District"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-UNION-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "shop",
        "table_candidates": [
            "shop"
        ],
        "align_scores": [
            0.8795254826545715,
            0.0001560112286824733,
            0.9067608714103699,
            0.00023249653168022633,
            0.0016285263700410724,
            9.88733590929769e-05,
            0.0010626752628013492,
            9.346044680569321e-05
        ],
        "align_select": "select shop.Manager_name, shop.District",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Who are managers of the shop selling most products? Districts?",
        "gold_select": "select shop.Manager_name, shop.District",
        "select_candidates": [
            "select shop.Manager_name",
            "select shop.Manager_name, shop.District",
            "select shop.Manager_name (shop.District), shop.Location",
            "select shop.Manager_name dependant on shop.District, shop.Location"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-UNION-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "shop",
        "table_candidates": [
            "shop"
        ],
        "align_scores": [
            0.965543806552887,
            0.002697308547794819,
            0.9928487539291382,
            0.00020674373081419617,
            0.00024449516786262393,
            6.554834544658661e-05,
            0.0010457677999511361,
            7.218987593660131e-05
        ],
        "align_select": "select shop.Manager_name",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Which manager is responsible for the shop that sells the most products? And which district does it belong to?",
        "gold_select": "select shop.Manager_name, shop.District",
        "select_candidates": [
            "select shop.Manager_name, shop.District",
            "select shop.Manager_name, shop.Location",
            "select shop.Name, shop.District",
            "select shop.Location, shop.District"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "shop",
        "table_candidates": [
            "shop"
        ],
        "align_scores": [
            0.9906196594238281,
            0.9924650192260742,
            0.9887363314628601,
            0.9910416007041931,
            0.0014384174719452858,
            0.0045261383056640625,
            0.001215641968883574,
            0.0008418899378739297
        ],
        "align_select": "select shop.Manager_name, shop.District",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "For each shop, how many people work there and what is the shop called?",
        "gold_select": "select count(*), shop.Name",
        "select_candidates": [
            "select shop.Name, count(*)",
            "select count(*), shop.Name",
            "select shop.Name, count(*), shop.Location",
            "select shop shop.Name, count(*)"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "shop hiring",
        "table_candidates": [
            "shop hiring",
            "employee shop hiring"
        ],
        "align_scores": [
            0.9908548593521118,
            0.00016069422417785972,
            0.9916150569915771,
            0.00017507353913970292,
            0.00019834072736557573,
            9.840182610787451e-05,
            0.0006561814225278795,
            0.00014211874804459512
        ],
        "align_select": "select shop.Name, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "which employees have not won awards during an evaluation period?",
        "gold_select": "select employee.Name",
        "select_candidates": [
            "select employee.Employee_ID",
            "select employee.Name",
            "select employee.Name, employee.City",
            "select employee.Employee_ID, employee.Name"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "employee",
        "table_candidates": [
            "employee evaluation",
            "employee",
            "employee hiring evaluation",
            "employee shop evaluation",
            "employee hiring"
        ],
        "align_scores": [
            0.0066785654053092,
            0.1278936266899109,
            0.4285241365432739,
            0.3469139039516449,
            0.00037308517494238913,
            0.00018795666983351111,
            0.0007646224112249911,
            0.0003835546085610986
        ],
        "align_select": "select employee.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Who have never been awarded during an evaluation",
        "gold_select": "select employee.Name",
        "select_candidates": [
            "select employee.Name",
            "select *",
            "select employee.Employee_ID",
            "select employee.Name, employee.City"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "employee",
        "table_candidates": [
            "employee",
            "employee evaluation",
            "employee hiring evaluation",
            "employee hiring"
        ],
        "align_scores": [
            0.4416041076183319,
            0.008256138302385807,
            0.971794843673706,
            0.0006460585864260793,
            0.0068471068516373634,
            0.004885639995336533,
            0.000256265775533393,
            0.000139228708576411
        ],
        "align_select": "select *",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Name some shops whose number products are higher than average",
        "gold_select": "select shop.Name",
        "select_candidates": [
            "select shop.Name",
            "select shop.Name, shop.Location",
            "select shop.Name, shop.Number_products",
            "select shop.Name, shop.District"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "shop",
        "table_candidates": [
            "shop"
        ],
        "align_scores": [
            0.9738459587097168,
            6.32876472081989e-05,
            0.0001880520285340026,
            6.919042789377272e-05,
            0.0002418640797259286,
            6.66838968754746e-05,
            0.00020480000239331275,
            7.365438796114177e-05
        ],
        "align_select": "select shop.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Where do you have shops that sell fewer than 3000 products or those selling more than 10000 products.",
        "gold_select": "select shop.District",
        "select_candidates": [
            "select shop.Location",
            "select shop.Location, shop.District",
            "select shop.Location dependant on whether you have shop.Name, shop.Location",
            "select shop.Location dependant on whether you have shop.Name or shop.Location"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "shop",
        "table_candidates": [
            "shop"
        ],
        "align_scores": [
            0.9813635349273682,
            0.9453784823417664,
            0.0002283267822349444,
            0.0024026939645409584,
            0.00021165033103898168,
            0.0036600688472390175,
            0.0002626444329507649,
            0.001180143328383565
        ],
        "align_select": "select shop.Location",
        "align_structure": "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
    },
    {
        "question": "Name all employees and sort in ascending order by their age.",
        "gold_select": "select employee.Name",
        "select_candidates": [
            "select employee.Name, employee.Age",
            "select employee.Name",
            "select employee.Name, employee.Age, employee.City",
            "select employee.Name, employee.Age, employee.City"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "employee",
        "table_candidates": [
            "employee"
        ],
        "align_scores": [
            0.0013217661762610078,
            0.0013217661762610078,
            0.9963871240615845,
            0.9963871240615845,
            0.00012917513959109783,
            0.00012917513959109783,
            0.00012917513959109783,
            0.00012917513959109783
        ],
        "align_select": "select employee.Name",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "Show list of employee and rank by how old in ascending order.",
        "gold_select": "select employee.Name",
        "select_candidates": [
            "select employee.Name, employee.Age",
            "select employee.Employee_ID, employee.Name, employee.Age",
            "select employee.Employee_ID, employee.Name",
            "select employee.Name, employee.City"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "employee",
        "table_candidates": [
            "employee"
        ],
        "align_scores": [
            0.001772659714333713,
            0.001772659714333713,
            0.00024429522454738617,
            0.00024429522454738617,
            0.0002244972565677017,
            0.0002244972565677017,
            0.00019698227697517723,
            0.00019698227697517723
        ],
        "align_select": "select employee.Name, employee.Age",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "Which shop has the most workers?",
        "gold_select": "select shop.Name",
        "select_candidates": [
            "select shop.Name",
            "select shop.Name, hiring.Shop_ID",
            "select shop.Name, hiring.Employee_ID",
            "select shop.Name, hiring.Start_from"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "shop hiring",
        "table_candidates": [
            "shop hiring"
        ],
        "align_scores": [
            0.991327702999115,
            6.441855657612905e-05,
            0.006039076019078493,
            7.471843127859756e-05,
            0.0012485767947509885,
            7.062969962134957e-05,
            0.004183117765933275,
            5.7440811360720545e-05
        ],
        "align_select": "select shop.Name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Choose the shop which has most employees.",
        "gold_select": "select shop.Name",
        "select_candidates": [
            "select shop.Name",
            "select shop.Name, hiring.Start_from",
            "select shop.Name, shop.Location",
            "select shop.Name, hiring.Shop_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "shop hiring",
        "table_candidates": [
            "shop hiring"
        ],
        "align_scores": [
            0.9879332184791565,
            6.176164606586099e-05,
            0.0029524683486670256,
            5.29461722180713e-05,
            0.0003848051419481635,
            5.593888272414915e-05,
            0.0032021196093410254,
            6.934445991646498e-05
        ],
        "align_select": "select shop.Name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Name that shop with most employees!",
        "gold_select": "select shop.Name",
        "select_candidates": [
            "select shop.Name",
            "select shop.Name, hiring.Shop_ID",
            "select shop.Name, hiring.Employee_ID",
            "select shop.Name, hiring.Start_from"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "shop hiring",
        "table_candidates": [
            "shop hiring"
        ],
        "align_scores": [
            0.9790571928024292,
            7.855916192056611e-05,
            0.0007160945096984506,
            6.656128243776038e-05,
            0.0005298240575939417,
            6.353364005917683e-05,
            0.001293069333769381,
            5.5689048167550936e-05
        ],
        "align_select": "select shop.Name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Who has received the highest once off bonus?",
        "gold_select": "select employee.Name",
        "select_candidates": [
            "select employee.Name",
            "select evaluation.Year_awarded",
            "select evaluation.Employee_ID, employee.Name",
            "select employee.Name, evaluation.Employee_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "employee evaluation",
        "table_candidates": [
            "employee evaluation",
            "evaluation",
            "employee hiring evaluation",
            "hiring evaluation",
            "shop evaluation",
            "employee shop evaluation"
        ],
        "align_scores": [
            0.9359590411186218,
            5.0656988605624065e-05,
            0.0009295638301409781,
            4.5621851313626394e-05,
            0.002818484790623188,
            5.825036714668386e-05,
            0.0022318169940263033,
            5.809138383483514e-05
        ],
        "align_select": "select employee.Name",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Find the person who received the most one-time bonus.",
        "gold_select": "select employee.Name",
        "select_candidates": [
            "select employee.Name",
            "select employee.Name, evaluation.Employee_ID",
            "select employee.Name, employee.Age",
            "select employee.Name, employee.City"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "employee evaluation",
        "table_candidates": [
            "employee evaluation",
            "employee hiring evaluation",
            "employee shop evaluation",
            "hiring evaluation",
            "shop evaluation",
            "evaluation"
        ],
        "align_scores": [
            0.9897342920303345,
            7.1790607762523e-05,
            0.0023159675765782595,
            7.564571569673717e-05,
            0.0003057145222555846,
            5.9821202739840373e-05,
            0.0003139569307677448,
            6.900315202074125e-05
        ],
        "align_select": "select employee.Name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Which Employee has been given highest one-time Bonus.",
        "gold_select": "select employee.Name",
        "select_candidates": [
            "select employee.Name",
            "select evaluation.Employee_ID",
            "select employee.Employee_ID, employee.Name",
            "select employee.Name, evaluation.Employee_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "employee evaluation",
        "table_candidates": [
            "employee evaluation",
            "evaluation",
            "hiring evaluation",
            "shop evaluation"
        ],
        "align_scores": [
            0.9716756343841553,
            5.695971049135551e-05,
            0.8882375955581665,
            6.863747694296762e-05,
            0.0020393235608935356,
            6.743682752130553e-05,
            0.0017049034358933568,
            7.010791159700602e-05
        ],
        "align_select": "select employee.Name",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What shops don't hire anybody.",
        "gold_select": "select shop.Name",
        "select_candidates": [
            "select shop.Name",
            "select shop.Name, shop.Location",
            "select shop.Name, hiring.Shop_ID",
            "select shop.Name, hiring.Start_from"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "shop",
        "table_candidates": [
            "shop",
            "shop hiring"
        ],
        "align_scores": [
            0.4457882046699524,
            0.08650023490190506,
            0.00016203623090405017,
            0.00014236749848350883,
            0.00017212620878126472,
            0.000391250301618129,
            0.00018402286514174193,
            0.0007004193612374365
        ],
        "align_select": "select shop.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which stores do not hire any employee?",
        "gold_select": "select shop.Name",
        "select_candidates": [
            "select shop.Name",
            "select shop.Name, shop.Location",
            "select shop.Name, shop.Location, shop.District",
            "select shop.Name, shop.Location, shop.District"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "shop",
        "table_candidates": [
            "shop",
            "shop hiring"
        ],
        "align_scores": [
            0.28019407391548157,
            0.0004157967050559819,
            0.00024167272204067558,
            0.00010453809954924509,
            0.00020554041839204729,
            8.089037874015048e-05,
            0.00020554041839204729,
            8.089037874015048e-05
        ],
        "align_select": "select shop.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What stores are there that don't employ anyone?",
        "gold_select": "select shop.Name",
        "select_candidates": [
            "select shop.Name",
            "select shop.Name, shop.Location",
            "select shop.Name, shop.Location, shop.District",
            "select shop.Name, shop.District"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "shop",
        "table_candidates": [
            "shop",
            "shop hiring"
        ],
        "align_scores": [
            0.7461366057395935,
            0.0011590685462579131,
            0.00021573044068645686,
            8.377557969652116e-05,
            0.0001663352595642209,
            7.700175774516538e-05,
            0.00020737946033477783,
            8.358278864761814e-05
        ],
        "align_select": "select shop.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which shops don't hire any workers?",
        "gold_select": "select shop.Name",
        "select_candidates": [
            "select shop.Name",
            "select shop.Name, shop.Location",
            "select shop.Name, shop.District",
            "select shop.Name, shop.Shop_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "shop",
        "table_candidates": [
            "shop",
            "shop hiring"
        ],
        "align_scores": [
            0.5278050899505615,
            0.019416632130742073,
            0.00020658235007431358,
            0.00019259644614066929,
            0.000220941670704633,
            0.00017988987383432686,
            0.0002600922016426921,
            0.0002115680108545348
        ],
        "align_select": "select shop.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What shops don't hire anybody?",
        "gold_select": "select shop.Name",
        "select_candidates": [
            "select shop.Name",
            "select shop.Name, shop.Location",
            "select shop.Name, hiring.Start_from",
            "select shop.Name, shop.District"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "shop",
        "table_candidates": [
            "shop",
            "shop hiring"
        ],
        "align_scores": [
            0.49721387028694153,
            0.10476846992969513,
            0.000176908855792135,
            0.00013956765178591013,
            0.00019379307923372835,
            0.0007277944241650403,
            0.00017650330846663564,
            0.0001575927744852379
        ],
        "align_select": "select shop.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "In which shop do they hire most people",
        "gold_select": "select shop.Name",
        "select_candidates": [
            "select shop.Name",
            "select shop.Name, hiring.Shop_ID",
            "select shop.Name, hiring.Employee_ID",
            "select shop.Name, shop.Location"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "shop hiring",
        "table_candidates": [
            "shop hiring"
        ],
        "align_scores": [
            0.9934526681900024,
            6.058163853595033e-05,
            0.0018057979177683592,
            6.82302052155137e-05,
            0.00015062096645124257,
            5.2141618652967736e-05,
            0.0005517342360690236,
            5.597036215476692e-05
        ],
        "align_select": "select shop.Name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Which store is hiring the most people?",
        "gold_select": "select shop.Name",
        "select_candidates": [
            "select shop.Name",
            "select shop.Name, hiring.Shop_ID",
            "select shop.Name, hiring.Employee_ID",
            "select shop.Name, hiring.Start_from"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "shop hiring",
        "table_candidates": [
            "shop hiring"
        ],
        "align_scores": [
            0.9909233450889587,
            6.3319705077447e-05,
            0.0032035382464528084,
            7.575305789941922e-05,
            0.00018838043615687639,
            5.991922807879746e-05,
            0.0036711625289171934,
            5.7749984989641234e-05
        ],
        "align_select": "select shop.Name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Which stores have a number products greater than the average product of what stores?",
        "gold_select": "select shop.Name",
        "select_candidates": [
            "select shop.Name",
            "select shop.Name, shop.Shop_ID",
            "select shop.Name, shop.Location",
            "select shop.Name, shop.District"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "shop",
        "table_candidates": [
            "shop"
        ],
        "align_scores": [
            0.5093961954116821,
            0.000144029370858334,
            0.0007083244272507727,
            9.088573278859258e-05,
            0.00029673182871192694,
            7.337355054914951e-05,
            0.00030220288317650557,
            8.351554424734786e-05
        ],
        "align_select": "select shop.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What stores have more products than average?",
        "gold_select": "select shop.Name",
        "select_candidates": [
            "select shop.Name",
            "select shop.Name, shop.Shop_ID",
            "select shop.Name, shop.Location",
            "select shop.Name, shop.District"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "shop",
        "table_candidates": [
            "shop"
        ],
        "align_scores": [
            0.6343079209327698,
            7.96769600128755e-05,
            0.00037408454227261245,
            8.224141492974013e-05,
            0.00024117896100506186,
            6.819305417593569e-05,
            0.00022000558965373784,
            7.463213842129335e-05
        ],
        "align_select": "select shop.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "list documents using template with template type code BK.",
        "gold_select": "select Documents.Document_Name",
        "select_candidates": [
            "select Documents.Document_Name",
            "select Documents.Document_Name, Documents.Document_Description",
            "select Documents.Document_ID, Documents.Document_Name",
            "select Documents.Document_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates Documents",
        "table_candidates": [
            "Templates Documents",
            "Ref_Template_Types Templates Documents"
        ],
        "align_scores": [
            0.9910233020782471,
            6.970093818381429e-05,
            0.0010193110210821033,
            6.412056973204017e-05,
            0.00015664100646972656,
            6.561182817677036e-05,
            0.0007298920536413789,
            6.621473585255444e-05
        ],
        "align_select": "select Documents.Document_Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which documents use templates with the code BK?",
        "gold_select": "select Documents.Document_Name",
        "select_candidates": [
            "select Documents.Document_Name",
            "select Documents.Document_Name, Documents.Document_Description",
            "select Documents.Document_ID, Documents.Document_Name",
            "select Documents.Document_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates Documents",
        "table_candidates": [
            "Templates Documents",
            "Ref_Template_Types Templates Documents"
        ],
        "align_scores": [
            0.9863753914833069,
            0.00012289269943721592,
            0.0005399943329393864,
            7.185717549873516e-05,
            0.00030319098732434213,
            8.160284778568894e-05,
            0.9657517075538635,
            0.00017010887677315623
        ],
        "align_select": "select Documents.Document_Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What documents that use template with code BK?.",
        "gold_select": "select Documents.Document_Name",
        "select_candidates": [
            "select Documents.Document_Name",
            "select Documents.Document_Name, Documents.Document_Description",
            "select Documents.Document_ID, Documents.Document_Name",
            "select Documents.Template_ID, Documents.Document_Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates Documents",
        "table_candidates": [
            "Templates Documents",
            "Ref_Template_Types Templates Documents"
        ],
        "align_scores": [
            0.9955193996429443,
            0.00010189387830905616,
            0.004410115536302328,
            7.616368384333327e-05,
            0.00017536108498461545,
            7.725182513240725e-05,
            0.00019276347302366048,
            7.39839015295729e-05
        ],
        "align_select": "select Documents.Document_Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are documents that use template with code BK?",
        "gold_select": "select Documents.Document_Name",
        "select_candidates": [
            "select Documents.Document_Name",
            "select Documents.Document_Name, Documents.Document_Description",
            "select Documents.Document_ID, Documents.Document_Name",
            "select Documents.Document_Name, Documents.Document_Description, Documents.Other_Details"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Templates Documents",
        "table_candidates": [
            "Templates Documents",
            "Ref_Template_Types Templates Documents",
            "Documents"
        ],
        "align_scores": [
            0.9953495860099792,
            0.00010523471428314224,
            0.0007288894266821444,
            7.605989230796695e-05,
            0.00018144301429856569,
            7.121974340407178e-05,
            0.0041758110746741295,
            7.293176895473152e-05
        ],
        "align_select": "select Documents.Document_Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show letter w documents names and ids",
        "gold_select": "select Documents.Document_Name, Documents.Template_ID",
        "select_candidates": [
            "select Documents.Document_Name, Documents.Document_ID",
            "select Documents.Document_Name, Documents.Document_ID, Documents.Template_ID",
            "select Documents.Document_Name, Documents.Document_ID, Documents.Template_ID",
            "select Documents.Template_ID, Documents.Document_ID"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "Documents",
        "table_candidates": [
            "Documents"
        ],
        "align_scores": [
            0.946700930595398,
            8.665370114613324e-05,
            0.00011321105557726696,
            6.47376145934686e-05,
            0.00011321105557726696,
            6.47376145934686e-05,
            0.00037287292070686817,
            0.00010881728667300195
        ],
        "align_select": "select Documents.Document_Name, Documents.Document_ID",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "Give names and template ID\u2019s for documents which has the letter \u201cw\u201d in them.",
        "gold_select": "select Documents.Document_Name, Documents.Template_ID",
        "select_candidates": [
            "select Documents.Document_Name, Documents.Template_ID",
            "select Documents.Document_ID, Documents.Document_Name, Documents.Template_ID",
            "select Documents.Template_ID, Documents.Document_Name",
            "select Documents.Document_Name, Documents.Template_ID, Documents.Document_Description"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents",
        "table_candidates": [
            "Documents"
        ],
        "align_scores": [
            0.9940314888954163,
            0.00014073029160499573,
            0.00040983580402098596,
            7.642946002306417e-05,
            0.9939518570899963,
            0.00011908942542504519,
            0.0003705229319166392,
            7.395343709504232e-05
        ],
        "align_select": "select Documents.Document_Name, Documents.Template_ID",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find documents containing the letter w in its name and what are their template",
        "gold_select": "select Documents.Document_Name, Documents.Template_ID",
        "select_candidates": [
            "select Documents.Document_Name, Documents.Template_ID",
            "select Documents.Document_ID, Documents.Template_ID",
            "select Documents.Template_ID, Documents.Document_Name",
            "select Documents.Document_Name, Templates.Template_Details"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Documents",
        "table_candidates": [
            "Documents"
        ],
        "align_scores": [
            0.9309886693954468,
            9.844115993473679e-05,
            0.4580130875110626,
            0.000107068735815119,
            0.0029918120708316565,
            7.98583059804514e-05,
            0.9923253059387207,
            8.758430340094492e-05
        ],
        "align_select": "select Documents.Document_Name, Documents.Template_ID",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "show, list of teachers and number of courses taught.",
        "gold_select": "select teacher.Name, count(*)",
        "select_candidates": [
            "select teacher.Name, count(*)",
            "select teacher.Name, sum(course.Course)",
            "select teacher.Name, count(distinct course.Course)",
            "select teacher.Name, count(*), course.Course"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher course_arrange",
        "table_candidates": [
            "course teacher course_arrange",
            "course teacher"
        ],
        "align_scores": [
            0.9662551879882812,
            0.0001870324049377814,
            0.013087958097457886,
            0.00017291218682657927,
            0.0022142701782286167,
            0.0001652708015171811,
            0.001645783893764019,
            0.00010662785643944517
        ],
        "align_select": "select teacher.Name, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "Name the teachers whose classes have not been set up?",
        "gold_select": "select teacher.Name",
        "select_candidates": [
            "select teacher.Name",
            "select teacher.Name, teacher.Teacher_ID",
            "select teacher.Name, course_arrange.Teacher_ID",
            "select teacher.Name, teacher.Age"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher",
        "table_candidates": [
            "teacher",
            "course teacher course_arrange",
            "teacher course_arrange",
            "course teacher"
        ],
        "align_scores": [
            0.9811046719551086,
            0.00044772052206099033,
            0.00019848546071443707,
            8.28580159577541e-05,
            0.0002508297038730234,
            0.00013245447189547122,
            0.00018520065350458026,
            7.762103632558137e-05
        ],
        "align_select": "select teacher.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Who are the teachers and how many courses they teach?",
        "gold_select": "select teacher.Name, count(*)",
        "select_candidates": [
            "select teacher.Name, count(*)",
            "select teacher.Name, count(distinct course.Course)",
            "select teacher.Name, count(*), course.Course",
            "select teacher.Name, count(*), course.Course_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher course_arrange",
        "table_candidates": [
            "course teacher course_arrange",
            "course teacher"
        ],
        "align_scores": [
            0.9916917085647583,
            0.00016192485054489225,
            0.005559192970395088,
            0.00010104308603331447,
            0.0009213511948473752,
            0.00010697291872929782,
            0.0003824039886239916,
            0.00010841326002264395
        ],
        "align_select": "select teacher.Name, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "Who are the teachers whose hometown is not little lever urban district?",
        "gold_select": "select teacher.Name",
        "select_candidates": [
            "select teacher.Name",
            "select teacher.Name, teacher.Hometown",
            "select teacher.Name, teacher.Age",
            "select teacher.Name, teacher.Teacher_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher",
        "table_candidates": [
            "teacher"
        ],
        "align_scores": [
            0.9637827277183533,
            0.048507388681173325,
            0.00032981359981931746,
            0.0001304756005993113,
            0.00022468356473837048,
            9.372043132316321e-05,
            0.0002417478826828301,
            0.000126948332763277
        ],
        "align_select": "select teacher.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which teachers teach two or more courses?",
        "gold_select": "select teacher.Name",
        "select_candidates": [
            "select teacher.Name",
            "select teacher.Name, course.Course",
            "select teacher.Name, course.Course_ID",
            "select teacher.Name, course.Staring_Date"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher course_arrange",
        "table_candidates": [
            "course teacher course_arrange",
            "course teacher"
        ],
        "align_scores": [
            0.9931908249855042,
            8.768241241341457e-05,
            0.0002231098187621683,
            6.348409806378186e-05,
            0.0002285929658683017,
            6.703238614136353e-05,
            0.0008914949139580131,
            6.999220931902528e-05
        ],
        "align_select": "select teacher.Name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Which faculty members are assigned teaching responsibilities in more than one course?",
        "gold_select": "select teacher.Name",
        "select_candidates": [
            "select teacher.Name",
            "select teacher.Name, teacher.Age",
            "select teacher.Name, teacher.Hometown",
            "select teacher.Name, teacher.Teacher_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher course_arrange",
        "table_candidates": [
            "course teacher course_arrange",
            "teacher course_arrange",
            "course teacher"
        ],
        "align_scores": [
            0.9798803925514221,
            0.00016384357877541333,
            0.00023792684078216553,
            6.652434967691079e-05,
            0.0006301365792751312,
            8.397425699513406e-05,
            0.0016436699079349637,
            0.00010058288899017498
        ],
        "align_select": "select teacher.Name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Which Teachers teach at least 2 courses?.",
        "gold_select": "select teacher.Name",
        "select_candidates": [
            "select teacher.Name",
            "select teacher.Name, course.Course",
            "select teacher.Name, course.Course_ID",
            "select teacher.Name, course.Staring_Date"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher course_arrange",
        "table_candidates": [
            "course teacher course_arrange",
            "course teacher"
        ],
        "align_scores": [
            0.9911965131759644,
            8.155867544701323e-05,
            0.00020187310292385519,
            6.441480945795774e-05,
            0.00022028980311006308,
            6.246138946153224e-05,
            0.0008654093253426254,
            7.006192754488438e-05
        ],
        "align_select": "select teacher.Name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Which teachers teaches the two courses",
        "gold_select": "select teacher.Name",
        "select_candidates": [
            "select teacher.Name",
            "select teacher.Name, course_arrange.Teacher_ID",
            "select teacher.Name, teacher.Teacher_ID",
            "select teacher.Name, course.Course"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-UNION-SELECT-FROM",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "teacher course_arrange",
        "table_candidates": [
            "course teacher course_arrange",
            "course teacher"
        ],
        "align_scores": [
            0.0008209030493162572,
            0.9958223104476929,
            0.00010513220331631601,
            0.000203756193513982,
            8.393151074415073e-05,
            0.00020229276560712606,
            7.730487413937226e-05,
            0.00016488393885083497
        ],
        "align_select": "select teacher.Name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "Which teachers teach two classes?",
        "gold_select": "select teacher.Name",
        "select_candidates": [
            "select teacher.Name",
            "select teacher.Name, teacher.Age",
            "select teacher.Name, teacher.Teacher_ID",
            "select teacher.Name, course.Course"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher course_arrange",
        "table_candidates": [
            "course teacher course_arrange",
            "course teacher",
            "teacher course_arrange"
        ],
        "align_scores": [
            0.9943642616271973,
            0.0002634263946674764,
            0.00017280866450164467,
            6.918864528415725e-05,
            0.0005604401812888682,
            0.00010339759319322184,
            0.00021262992231640965,
            9.173362923320383e-05
        ],
        "align_select": "select teacher.Name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "I would like to know which teachers teach more than one course.",
        "gold_select": "select teacher.Name",
        "select_candidates": [
            "select teacher.Name",
            "select course_arrange.Teacher_ID",
            "select teacher.Name, course.Course",
            "select course_arrange.Teacher_ID, teacher.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher course_arrange",
        "table_candidates": [
            "course teacher course_arrange",
            "course course_arrange",
            "course teacher"
        ],
        "align_scores": [
            0.993060827255249,
            9.425871394341812e-05,
            0.9844770431518555,
            0.00013310500071384013,
            0.0005612751701846719,
            8.906496077543125e-05,
            0.0012085916241630912,
            9.442785813007504e-05
        ],
        "align_select": "select teacher.Name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "About how old and what city did teachers originate from?",
        "gold_select": "select teacher.Age, teacher.Hometown",
        "select_candidates": [
            "select teacher.Age, teacher.Hometown",
            "select teacher.Hometown, teacher.Age",
            "select teacher.Teacher_ID, teacher.Age, teacher.Hometown",
            "select teacher.Name, teacher.Age, teacher.Hometown"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher",
        "table_candidates": [
            "teacher"
        ],
        "align_scores": [
            0.9822073578834534,
            0.9903745651245117,
            0.9743958711624146,
            0.9931634664535522,
            0.00018339804955758154,
            0.00014275926514528692,
            0.00023524010612163693,
            0.00016107883129734546
        ],
        "align_select": "select teacher.Age, teacher.Hometown",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "How old are teachers and where are they from?",
        "gold_select": "select teacher.Age, teacher.Hometown",
        "select_candidates": [
            "select teacher.Age, teacher.Hometown",
            "select teacher.Hometown, teacher.Age",
            "select teacher.Teacher_ID, teacher.Age, teacher.Hometown",
            "select teacher.Name, teacher.Age, teacher.Hometown"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher",
        "table_candidates": [
            "teacher"
        ],
        "align_scores": [
            0.9949147701263428,
            0.0046019600704312325,
            0.9948646426200867,
            0.018990425392985344,
            0.00017527415184304118,
            0.000169508668477647,
            0.00018315513443667442,
            0.0001426899980287999
        ],
        "align_select": "select teacher.Age, teacher.Hometown",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What teacher's hometown is not Little Lever Urban District?",
        "gold_select": "select teacher.Name",
        "select_candidates": [
            "select teacher.Name",
            "select teacher.Name, teacher.Hometown",
            "select teacher.Teacher_ID",
            "select teacher.Name, teacher.Age"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher",
        "table_candidates": [
            "teacher"
        ],
        "align_scores": [
            0.00686396611854434,
            0.0031719589605927467,
            0.0002037395170191303,
            0.00012580642942339182,
            0.0006639746716246009,
            0.0006596271996386349,
            0.00021928141359239817,
            0.00010924387606792152
        ],
        "align_select": "select teacher.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List teacher's hometowns that are not Little Lever Urban District'.",
        "gold_select": "select teacher.Name",
        "select_candidates": [
            "select distinct teacher.Hometown",
            "select teacher.Hometown",
            "select distinct teacher.Hometown, teacher.Teacher_ID",
            "select distinct teacher.Hometown, t1.c4"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher",
        "table_candidates": [
            "teacher"
        ],
        "align_scores": [
            0.011180102825164795,
            0.0007340417942032218,
            0.7618357539176941,
            0.00027409876929596066,
            0.00016775091353338212,
            6.652263255091384e-05,
            0.0003247335262130946,
            8.462055120617151e-05
        ],
        "align_select": "select teacher.Hometown",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Describe teachers whose hometown is not Little Lever Urban district.",
        "gold_select": "select teacher.Name",
        "select_candidates": [
            "select teacher.Name",
            "select teacher.Name, teacher.Hometown",
            "select teacher.Name, teacher.Age",
            "select teacher.Age, teacher.Hometown"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher",
        "table_candidates": [
            "teacher"
        ],
        "align_scores": [
            0.025911271572113037,
            0.0030193396378308535,
            0.00015802416601218283,
            9.898543066810817e-05,
            0.0002974512754008174,
            0.0001620136754354462,
            0.00018084126350004226,
            0.00011637077113846317
        ],
        "align_select": "select teacher.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Name teachers in ascending order of age",
        "gold_select": "select teacher.Name",
        "select_candidates": [
            "select teacher.Name",
            "select teacher.Name, teacher.Age",
            "select teacher.Name, teacher.Age, teacher.Hometown",
            "select teacher.Name in teacher.Age"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher",
        "table_candidates": [
            "teacher"
        ],
        "align_scores": [
            0.9963914752006531,
            0.0004996700445190072,
            0.0002805445692501962,
            0.00014385272515937686,
            0.00018758964142762125,
            0.00011604651808738708,
            0.0006207062397152185,
            0.00028081302298232913
        ],
        "align_select": "select teacher.Name",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "Show who are teachers aged between 32 and 33.",
        "gold_select": "select teacher.Name",
        "select_candidates": [
            "select teacher.Name",
            "select teacher.Name, teacher.Age",
            "select teacher.Name, teacher.Hometown",
            "select teacher.Name, teacher.Age, teacher.Hometown"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher",
        "table_candidates": [
            "teacher"
        ],
        "align_scores": [
            0.9875777363777161,
            0.04154689237475395,
            0.00018278771312907338,
            8.42390873003751e-05,
            0.00019024655921384692,
            9.250277798855677e-05,
            0.0001392660051351413,
            7.041947537800297e-05
        ],
        "align_select": "select teacher.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which teachers were 32 or 33 years old?",
        "gold_select": "select teacher.Name",
        "select_candidates": [
            "select teacher.Name",
            "select teacher.Name, teacher.Age",
            "select teacher.Name, teacher.Hometown",
            "select teacher.Name ou teacher.Age"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher",
        "table_candidates": [
            "teacher"
        ],
        "align_scores": [
            0.9835644960403442,
            0.0004154771158937365,
            0.00017355853924527764,
            6.227195990504697e-05,
            0.00020512030459940434,
            9.641303040552884e-05,
            0.000359705911250785,
            7.858538447180763e-05
        ],
        "align_select": "select teacher.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Who are teachers aged either 32 or 33?",
        "gold_select": "select teacher.Name",
        "select_candidates": [
            "select teacher.Name",
            "select teacher.Name, teacher.Age",
            "select teacher.Name, teacher.Hometown",
            "select teacher.Name ou teacher.Hometown"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher",
        "table_candidates": [
            "teacher"
        ],
        "align_scores": [
            0.9914148449897766,
            0.00040317379171028733,
            0.0001827007654355839,
            6.460046279244125e-05,
            0.00022737351537216455,
            9.456861153012142e-05,
            0.0006207990809343755,
            8.442364924121648e-05
        ],
        "align_select": "select teacher.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Who teaches with ages 32 or 33",
        "gold_select": "select teacher.Name",
        "select_candidates": [
            "select teacher.Name",
            "select teacher.Name, teacher.Hometown",
            "select teacher.Name, teacher.Age",
            "select teacher.Name ou teacher.Hometown"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher",
        "table_candidates": [
            "teacher"
        ],
        "align_scores": [
            0.9887058138847351,
            0.00034330179914832115,
            0.000217390144825913,
            9.60247270995751e-05,
            0.00018150736286770552,
            6.870119977975264e-05,
            0.0011057957308366895,
            9.631838474888355e-05
        ],
        "align_select": "select teacher.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are teachers aged between 32 and 33?",
        "gold_select": "select teacher.Name",
        "select_candidates": [
            "select teacher.Name",
            "select teacher.Name, teacher.Age",
            "select teacher.Name, teacher.Hometown",
            "select teacher.Teacher_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher",
        "table_candidates": [
            "teacher"
        ],
        "align_scores": [
            0.3877188265323639,
            0.00012143576896050945,
            0.00018263007223140448,
            5.87893373449333e-05,
            0.00017327661043964326,
            6.538365414598957e-05,
            0.00528152659535408,
            7.385927165159956e-05
        ],
        "align_select": "select teacher.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Who teaches math course?",
        "gold_select": "select teacher.Name",
        "select_candidates": [
            "select teacher.Name",
            "select teacher.Name, course.Course",
            "select teacher.Name, teacher.Age",
            "select teacher.Name, teacher.Teacher_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "course teacher course_arrange",
        "table_candidates": [
            "course teacher course_arrange",
            "course teacher"
        ],
        "align_scores": [
            0.994956910610199,
            0.00010236600792268291,
            0.00018780439859256148,
            6.508450314868242e-05,
            0.00016460054030176252,
            6.331517943181098e-05,
            0.0002160214789910242,
            7.345161429839209e-05
        ],
        "align_select": "select teacher.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which teachers teach math courses?",
        "gold_select": "select teacher.Name",
        "select_candidates": [
            "select teacher.Name",
            "select teacher.Name, course_arrange.Teacher_ID",
            "select teacher.Name, teacher.Age",
            "select distinct teacher.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "course teacher course_arrange",
        "table_candidates": [
            "course course_arrange",
            "course teacher course_arrange"
        ],
        "align_scores": [
            0.988142192363739,
            0.00010574168845778331,
            0.00026923982659354806,
            7.888901745900512e-05,
            0.00016750206123106182,
            6.147319072624668e-05,
            0.30532383918762207,
            0.00018291882588528097
        ],
        "align_select": "select teacher.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Name instructors on courses they're teaching.",
        "gold_select": "select teacher.Name, course.Course",
        "select_candidates": [
            "select teacher.Name",
            "select teacher.Name, course.Course",
            "select distinct teacher.Name",
            "select distinct teacher.Name, course.Course"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "course teacher course_arrange",
        "table_candidates": [
            "course teacher course_arrange",
            "course teacher"
        ],
        "align_scores": [
            0.9637136459350586,
            0.9902980923652649,
            0.00029864642419852316,
            0.0001609202299732715,
            0.12205568701028824,
            0.06903184950351715,
            0.0011433814652264118,
            0.0004959905054420233
        ],
        "align_select": "select teacher.Name",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "Who will teach what courses.",
        "gold_select": "select teacher.Name, course.Course",
        "select_candidates": [
            "select teacher.Name, course.Course",
            "select distinct teacher.Name, course.Course",
            "select course_arrange.Teacher_ID, course.Course",
            "select teacher.Name, course.Course_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "course teacher course_arrange",
        "table_candidates": [
            "course teacher course_arrange",
            "course teacher"
        ],
        "align_scores": [
            0.026994194835424423,
            0.00012964541383553296,
            0.005903418641537428,
            0.00010617635416565463,
            0.007710879202932119,
            0.00010057061444967985,
            0.18151813745498657,
            0.00013703673903364688
        ],
        "align_select": "select teacher.Name, course.Course",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "who are teachers and which course do they teach?",
        "gold_select": "select teacher.Name, course.Course",
        "select_candidates": [
            "select teacher.Name, course.Course",
            "select distinct teacher.Name, course.Course",
            "select teacher.Name, course.Course, course_arrange.Teacher_ID",
            "select teacher.Name, course.Course, course_arrange.Course_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "course teacher course_arrange",
        "table_candidates": [
            "course teacher course_arrange",
            "course teacher"
        ],
        "align_scores": [
            0.9902656674385071,
            0.9737297892570496,
            0.009007195010781288,
            0.0006967958761379123,
            0.00016664626309648156,
            0.00032971991458907723,
            0.0002171403175452724,
            0.00032706037745811045
        ],
        "align_select": "select teacher.Name, course.Course",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "Which teachers are arranged to teach which courses?",
        "gold_select": "select teacher.Name, course.Course",
        "select_candidates": [
            "select course_arrange.Teacher_ID, course.Course",
            "select distinct course_arrange.Teacher_ID, course.Course",
            "select distinct course_arrange.Teacher_ID",
            "select course_arrange.Teacher_ID"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "course teacher course_arrange",
        "table_candidates": [
            "course course_arrange",
            "course teacher course_arrange"
        ],
        "align_scores": [
            0.06937114149332047,
            0.005594284739345312,
            0.017408937215805054,
            0.0015145356301218271,
            0.8158860802650452,
            0.03391055017709732,
            0.1657668650150299,
            0.4941577613353729
        ],
        "align_select": "select distinct course_arrange.Teacher_ID",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "Show list of teachers who have not been assigned courses.",
        "gold_select": "select teacher.Name",
        "select_candidates": [
            "select teacher.Name",
            "select teacher.Name, teacher.Age",
            "select teacher.Name, teacher.Teacher_ID",
            "select teacher.Name, teacher.Hometown"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher",
        "table_candidates": [
            "teacher",
            "teacher course_arrange",
            "course teacher"
        ],
        "align_scores": [
            0.8607891201972961,
            0.0020018655341118574,
            0.00018831940542440861,
            0.00010074858437292278,
            0.0002880549873225391,
            0.00018634798470884562,
            0.00031840757583267987,
            0.00024071837833616883
        ],
        "align_select": "select teacher.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which teachers did not teach course?",
        "gold_select": "select teacher.Name",
        "select_candidates": [
            "select teacher.Name",
            "select teacher.Name, teacher.Age",
            "select teacher.Name, teacher.Hometown",
            "select teacher.Name, teacher.Teacher_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher",
        "table_candidates": [
            "teacher",
            "course teacher",
            "course teacher course_arrange",
            "teacher course_arrange"
        ],
        "align_scores": [
            0.8332799077033997,
            0.43292924761772156,
            0.0001803095656214282,
            0.00010702351573854685,
            0.00020116291125304997,
            0.00040982288192026317,
            0.00022376427659764886,
            0.00021099488367326558
        ],
        "align_select": "select teacher.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show teachers that haven't been arranged to teach courses.",
        "gold_select": "select teacher.Name",
        "select_candidates": [
            "select teacher.Name",
            "select teacher.Name, teacher.Age",
            "select teacher.Name, teacher.Hometown",
            "select teacher.Name, teacher.Teacher_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher",
        "table_candidates": [
            "teacher",
            "teacher course_arrange"
        ],
        "align_scores": [
            0.6470891833305359,
            0.44827285408973694,
            0.00022488352260552347,
            0.00014313573774416,
            0.0002516801469027996,
            0.0007715891115367413,
            0.00025801872834563255,
            0.0003691943420562893
        ],
        "align_select": "select teacher.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Who has not been asked to teach classes?",
        "gold_select": "select teacher.Name",
        "select_candidates": [
            "select teacher.Name",
            "select teacher.Name, teacher.Age",
            "select teacher.Name, teacher.Hometown",
            "select distinct teacher.Name, teacher.Age"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher",
        "table_candidates": [
            "teacher",
            "teacher course_arrange"
        ],
        "align_scores": [
            0.42254742980003357,
            0.3414945602416992,
            0.0002453540510032326,
            0.00014327680401038378,
            0.0003196893376298249,
            0.0003652003360912204,
            0.0007096657063812017,
            0.0002215739368693903
        ],
        "align_select": "select teacher.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List all teaching staff who haven't had lessons arranged for them.",
        "gold_select": "select teacher.Name",
        "select_candidates": [
            "select teacher.Name",
            "select teacher.Name, teacher.Age",
            "select teacher.Name, teacher.Teacher_ID",
            "select teacher.Name, teacher.Hometown"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher",
        "table_candidates": [
            "teacher",
            "teacher course_arrange"
        ],
        "align_scores": [
            0.8160997033119202,
            0.04090210050344467,
            0.0002218138542957604,
            0.0001252618822036311,
            0.0005454101483337581,
            0.0006944821798242629,
            0.00022534649178851396,
            0.00019873864948749542
        ],
        "align_select": "select teacher.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which teachers are 32 or 33 years old?",
        "gold_select": "select teacher.Name",
        "select_candidates": [
            "select teacher.Name",
            "select teacher.Name, teacher.Age",
            "select teacher.Name, teacher.Hometown",
            "select teacher.Name ou teacher.Hometown"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher",
        "table_candidates": [
            "teacher"
        ],
        "align_scores": [
            0.9881921410560608,
            0.0004149020533077419,
            0.0001809865061659366,
            6.493416731245816e-05,
            0.00020663929171860218,
            9.891295485431328e-05,
            0.0006710958550684154,
            9.870425856206566e-05
        ],
        "align_select": "select teacher.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show which teachers teaches at least 2 courses.",
        "gold_select": "select teacher.Name",
        "select_candidates": [
            "select teacher.Name",
            "select teacher.Name, course.Course",
            "select teacher.Name, course.Course_ID",
            "select teacher.Name, course.Staring_Date"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher course_arrange",
        "table_candidates": [
            "course teacher course_arrange",
            "course teacher"
        ],
        "align_scores": [
            0.9892026782035828,
            8.061563858063892e-05,
            0.0002218762383563444,
            7.07828949089162e-05,
            0.00026162900030612946,
            6.79403092362918e-05,
            0.0008978145197033882,
            7.116326014511287e-05
        ],
        "align_select": "select teacher.Name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Which teachers teach at least two courses.",
        "gold_select": "select teacher.Name",
        "select_candidates": [
            "select teacher.Name",
            "select teacher.Name, course.Course",
            "select teacher.Name, course.Course_ID",
            "select teacher.Name, course.Staring_Date"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher course_arrange",
        "table_candidates": [
            "course teacher course_arrange",
            "course teacher"
        ],
        "align_scores": [
            0.9900000691413879,
            8.10545461717993e-05,
            0.00023300139582715929,
            6.076011777622625e-05,
            0.0002671708643902093,
            6.311816832749173e-05,
            0.0005984354647807777,
            6.454356480389833e-05
        ],
        "align_select": "select teacher.Name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Name all teachers teaching at least two subjects.",
        "gold_select": "select teacher.Name",
        "select_candidates": [
            "select teacher.Name",
            "select teacher.Name, teacher.Age",
            "select teacher.Name, course_arrange.Teacher_ID",
            "select teacher.Name, teacher.Teacher_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher course_arrange",
        "table_candidates": [
            "teacher course_arrange"
        ],
        "align_scores": [
            0.9936036467552185,
            8.587682532379404e-05,
            0.00016930628044065088,
            5.669482197845355e-05,
            0.0005641604657284915,
            6.188975385157391e-05,
            0.0003119028697255999,
            6.1012633523205295e-05
        ],
        "align_select": "select teacher.Name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Which teachers teaches at least 2 courses?.",
        "gold_select": "select teacher.Name",
        "select_candidates": [
            "select teacher.Name",
            "select teacher.Name, course.Course",
            "select teacher.Name, course.Course_ID",
            "select teacher.Name, course.Staring_Date"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher course_arrange",
        "table_candidates": [
            "course teacher",
            "course teacher course_arrange"
        ],
        "align_scores": [
            0.9904736876487732,
            8.295477891806513e-05,
            0.000225826574023813,
            6.764383579138666e-05,
            0.00024466399918310344,
            6.574684812221676e-05,
            0.0008492290508002043,
            7.238523539854214e-05
        ],
        "align_select": "select teacher.Name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Name the person who visited both a museum that has been open before 2009 and a new one that has been opened after 2011.",
        "gold_select": "select visitor.Name",
        "select_candidates": [
            "select visitor.Name",
            "select visitor.Name, museum.Name",
            "select visitor.Name, museum.Open_Year",
            "select visitor.Name, visit.visitor_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "museum visitor visit",
        "table_candidates": [
            "museum visitor visit"
        ],
        "align_scores": [
            0.9837735891342163,
            0.9837735891342163,
            0.0006008140626363456,
            0.0006008140626363456,
            0.0006691878079436719,
            0.0006691878079436719,
            0.00029345706570893526,
            0.00029345706570893526
        ],
        "align_select": "select visitor.Name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "On average how old are visitors whose membership level is not higher than 4?",
        "gold_select": "select avg(visitor.Age)",
        "select_candidates": [
            "select avg(visitor.Age)",
            "select an avg(visitor.Age)",
            "select  avg(visitor.Age)",
            "select Avg(visitor.Age)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "visitor",
        "table_candidates": [
            "visitor"
        ],
        "align_scores": [
            0.9951510429382324,
            0.0001645564188947901,
            0.0005785219836980104,
            0.00015244253154378384,
            0.9951510429382324,
            0.0001645564188947901,
            0.9951510429382324,
            0.0001645564188947901
        ],
        "align_select": "select avg(visitor.Age)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How old are visitors on average whose membership level is not higher than four?",
        "gold_select": "select avg(visitor.Age)",
        "select_candidates": [
            "select avg(visitor.Age)",
            "select an avg(visitor.Age)",
            "select  avg(visitor.Age)",
            "select Avg(visitor.Age)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "visitor",
        "table_candidates": [
            "visitor"
        ],
        "align_scores": [
            0.9950097799301147,
            0.00014449238369707018,
            0.0005730307893827558,
            0.0001347863144474104,
            0.9950097799301147,
            0.00014449238369707018,
            0.9950097799301147,
            0.00014449238369707018
        ],
        "align_select": "select avg(visitor.Age)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which museums have more staff than the minimum number since the opening of new ones after 2010?.",
        "gold_select": "select museum.Name",
        "select_candidates": [
            "select museum.Name",
            "select museum.Name, museum.Num_of_Staff",
            "select museum.Museum_ID, museum.Name",
            "select museum.Museum_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "museum",
        "table_candidates": [
            "museum"
        ],
        "align_scores": [
            0.3928089141845703,
            0.00025735193048603833,
            0.0003200019127689302,
            7.555443880846724e-05,
            0.0010234646033495665,
            0.0001614466164028272,
            0.037359438836574554,
            0.001640514936298132
        ],
        "align_select": "select museum.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which museum has more people working at it than the minimum number of staff required of all new museums opened after 2010.",
        "gold_select": "select museum.Name",
        "select_candidates": [
            "select museum.Name",
            "select museum.Museum_ID, museum.Name",
            "select museum.Name, museum.Num_of_Staff",
            "select museum.Museum_ID, museum.Name, museum.Num_of_Staff"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "museum",
        "table_candidates": [
            "museum"
        ],
        "align_scores": [
            0.25638899207115173,
            0.0010611113393679261,
            0.00047602399718016386,
            0.00016530438733752817,
            0.00039853056659922004,
            8.762424113228917e-05,
            0.00025412056129425764,
            7.875973096815869e-05
        ],
        "align_select": "select museum.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which members have level greater than 4, and list them from highest to lowest.",
        "gold_select": "select visitor.Name",
        "select_candidates": [
            "select visitor.ID",
            "select visitor.ID, visitor.Level_of_membership",
            "select visitor.Name, visitor.Level_of_membership",
            "select visitor.ID, visitor.Name"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "visitor",
        "table_candidates": [
            "visitor"
        ],
        "align_scores": [
            0.028368405997753143,
            0.3477177917957306,
            0.00026645680190995336,
            0.00037760805571451783,
            0.0003138503525406122,
            0.0005756025202572346,
            0.0018392499769106507,
            0.0018729566363617778
        ],
        "align_select": "select visitor.ID",
        "align_structure": "SELECT-FROM-WHERE-GROUP BY-ORDER BY"
    },
    {
        "question": "Which members have higher level than four? Show it in order from high to low.",
        "gold_select": "select visitor.Name",
        "select_candidates": [
            "select visitor.ID",
            "select visitor.ID, visitor.Level_of_membership",
            "select visitor.Name, visitor.Level_of_membership",
            "select visitor.Name"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY",
            "SELECT-FROM-WHERE-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "visitor",
        "table_candidates": [
            "visitor"
        ],
        "align_scores": [
            0.026396766304969788,
            0.0005039901589043438,
            0.0002638700243551284,
            0.00011292814451735467,
            0.00024691270664334297,
            0.00010181577818002552,
            0.9858733415603638,
            0.0002618370926938951
        ],
        "align_select": "select visitor.Name",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY"
    },
    {
        "question": "Which visitor bought most tickets at once? And What his/her age?",
        "gold_select": "select visitor.Name, visitor.Age",
        "select_candidates": [
            "select visitor.Name, visitor.Age",
            "select visit.visitor_ID, visitor.Age",
            "select visitor.ID, visitor.Name, visitor.Age",
            "select t1, visitor.Name, visitor.Age"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "visitor visit",
        "table_candidates": [
            "visitor visit"
        ],
        "align_scores": [
            0.955530047416687,
            0.6795291304588318,
            0.5796992182731628,
            0.037094488739967346,
            0.0012541249161586165,
            0.0004459218180272728,
            0.0008877588552422822,
            0.0006012116209603846
        ],
        "align_select": "select visitor.Name, visitor.Age",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Which visitor bought the most tickets at once? And What is his or her age?",
        "gold_select": "select visitor.Name, visitor.Age",
        "select_candidates": [
            "select visitor.Name, visitor.Age",
            "select visit.visitor_ID, visitor.Age",
            "select visitor.ID, visitor.Name, visitor.Age",
            "select t1, visitor.Name, visitor.Age"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "visitor visit",
        "table_candidates": [
            "visitor visit"
        ],
        "align_scores": [
            0.9754924774169922,
            0.02733316272497177,
            0.7379897832870483,
            0.0007035311427898705,
            0.00089165975805372,
            0.0002444863202981651,
            0.0006743295816704631,
            0.0005310855340212584
        ],
        "align_select": "select visitor.Name, visitor.Age",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Name of the museum that did not get visitors",
        "gold_select": "select museum.Name",
        "select_candidates": [
            "select museum.Name",
            "select museum.Name, museum.Museum_ID",
            "select museum.Name, museum.Num_of_Staff",
            "select museum.Name, museum.Open_Year"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "museum",
        "table_candidates": [
            "museum",
            "museum visit"
        ],
        "align_scores": [
            0.9707028269767761,
            0.008520974777638912,
            0.00016816907736938447,
            0.00014269353414420038,
            0.00014225188351701945,
            0.00012904660252388567,
            0.00014828346320427954,
            0.00017617744742892683
        ],
        "align_select": "select museum.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Name of the museum that has no visitor yet?",
        "gold_select": "select museum.Name",
        "select_candidates": [
            "select museum.Name",
            "select museum.Name, museum.Museum_ID",
            "select museum.Name, museum.Num_of_Staff",
            "select museum.Name, museum.Open_Year"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "museum",
        "table_candidates": [
            "museum",
            "museum visit"
        ],
        "align_scores": [
            0.9253218770027161,
            0.001019310555420816,
            0.0001974008046090603,
            0.00010798023868119344,
            0.0001624537690076977,
            8.763828373048455e-05,
            0.00020207221677992493,
            0.0001042021976900287
        ],
        "align_select": "select museum.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What museum has not seen visitors yet?.",
        "gold_select": "select museum.Name",
        "select_candidates": [
            "select museum.Name",
            "select museum.Museum_ID, museum.Name",
            "select museum.Name, museum.Museum_ID",
            "select museum.Name, museum.Num_of_Staff"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "museum",
        "table_candidates": [
            "museum",
            "museum visit"
        ],
        "align_scores": [
            0.5311217308044434,
            0.00036341469967737794,
            0.0003790369664784521,
            0.00013717873662244529,
            0.00027394460630603135,
            0.00010474555165274069,
            0.00016826370847411454,
            7.796964200679213e-05
        ],
        "align_select": "select museum.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Name the museum that had no visitors yet.",
        "gold_select": "select museum.Name",
        "select_candidates": [
            "select museum.Name",
            "select museum.Name, museum.Museum_ID",
            "select museum.Name, museum.Num_of_Staff",
            "select museum.Name, museum.Open_Year"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "museum",
        "table_candidates": [
            "museum",
            "museum visit"
        ],
        "align_scores": [
            0.8966476917266846,
            0.00039870955515652895,
            0.00018201117927674204,
            9.539681195747107e-05,
            0.00013540388317778707,
            6.461265729740262e-05,
            0.0001892651926027611,
            7.48064776416868e-05
        ],
        "align_select": "select museum.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What tournament has more than 10 matches?",
        "gold_select": "select matches.tourney_name",
        "select_candidates": [
            "select matches.tourney_name",
            "select matches.tourney_name, matches.tourney_date",
            "select matches.tourney_name, matches.minutes",
            "select matches.tourney_name, matches.winner_hand"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "matches",
        "table_candidates": [
            "matches"
        ],
        "align_scores": [
            0.990996241569519,
            0.00010838866728590801,
            0.00017159018898382783,
            6.317910447251052e-05,
            0.00019608429283834994,
            5.948965917923488e-05,
            0.00018974780687130988,
            6.679399666609243e-05
        ],
        "align_select": "select matches.tourney_name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Which tournament had more than 10 matches?",
        "gold_select": "select matches.tourney_name",
        "select_candidates": [
            "select matches.tourney_name",
            "select matches.tourney_name, matches.tourney_date",
            "select matches.tourney_name, matches.minutes",
            "select matches.tourney_name (matches.match_num)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "matches",
        "table_candidates": [
            "matches"
        ],
        "align_scores": [
            0.991117000579834,
            0.0001274541427846998,
            0.00018906623881775886,
            6.283962284214795e-05,
            0.00018557612202130258,
            5.893753404961899e-05,
            0.00032395648304373026,
            6.63128012092784e-05
        ],
        "align_select": "select matches.tourney_name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Which tournament (tourney?) had more than 10 matches?",
        "gold_select": "select matches.tourney_name",
        "select_candidates": [
            "select matches.tourney_name",
            "select matches.tourney_name, matches.tourney_date",
            "select matches.tourney_name (matches.tourney_date)",
            "select matches.tourney_name,"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "matches",
        "table_candidates": [
            "matches",
            "matches rankings"
        ],
        "align_scores": [
            0.9556396007537842,
            0.00014324879157356918,
            0.00018395429651718587,
            5.9971771406708285e-05,
            0.00036286981776356697,
            6.283782568061724e-05,
            0.009878363460302353,
            6.948253576410934e-05
        ],
        "align_select": "select matches.tourney_name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Which tournament has more than 10 matches?",
        "gold_select": "select matches.tourney_name",
        "select_candidates": [
            "select matches.tourney_name",
            "select matches.tourney_name, matches.tourney_date",
            "select matches.tourney_name, matches.minutes",
            "select matches.tourney_name, matches.winner_hand"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "matches",
        "table_candidates": [
            "matches"
        ],
        "align_scores": [
            0.9913071990013123,
            0.00012149102985858917,
            0.00016706627502571791,
            6.376209785230458e-05,
            0.0001943682145792991,
            5.981532376608811e-05,
            0.00018315024499315768,
            6.730941822752357e-05
        ],
        "align_select": "select matches.tourney_name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Which tournament have more than 10 matches?",
        "gold_select": "select matches.tourney_name",
        "select_candidates": [
            "select matches.tourney_name",
            "select matches.tourney_name, matches.tourney_date",
            "select matches.tourney_name, matches.minutes",
            "select matches.tourney_name, matches.winner_hand"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "matches",
        "table_candidates": [
            "matches"
        ],
        "align_scores": [
            0.9914894104003906,
            0.0001262729783775285,
            0.00017696942086331546,
            6.3165498431772e-05,
            0.00020531793416012079,
            6.012981975800358e-05,
            0.00018759215890895575,
            6.724020204273984e-05
        ],
        "align_select": "select matches.tourney_name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What is the tournament that has more than 10 matchs",
        "gold_select": "select matches.tourney_name",
        "select_candidates": [
            "select matches.tourney_name",
            "select matches.tourney_name, matches.tourney_date",
            "select matches.tourney_name, matches.winner_hand",
            "select matches.tourney_name, matches.minutes"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "matches",
        "table_candidates": [
            "matches",
            "matches rankings"
        ],
        "align_scores": [
            0.9893090724945068,
            9.78634852799587e-05,
            0.00020078847592230886,
            6.336470687529072e-05,
            0.00020469128503464162,
            6.851741636637598e-05,
            0.00021059993014205247,
            6.04634296905715e-05
        ],
        "align_select": "select matches.tourney_name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Who is the winner with most rank points participating in Australian open tournaments?",
        "gold_select": "select matches.winner_name",
        "select_candidates": [
            "select matches.winner_name",
            "select rankings.player_id7",
            "select rankings.ranking_date, rankings.player_id7",
            "select matches.winner_name, rankings.ranking_points"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "matches",
        "table_candidates": [
            "matches rankings",
            "matches"
        ],
        "align_scores": [
            0.9935084581375122,
            0.9847768545150757,
            0.005455581471323967,
            0.004009234718978405,
            0.00028514169389382005,
            0.00023743326892144978,
            0.004279039800167084,
            0.001844481797888875
        ],
        "align_select": "select matches.winner_name",
        "align_structure": "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Who are the three youngest winners across all matches? And their ranks?",
        "gold_select": "select distinct matches.winner_name, matches.winner_rank",
        "select_candidates": [
            "select matches.winner_name, matches.winner_rank",
            "select matches.winner_rank, matches.winner_name",
            "select matches.loser_age, matches.winner_rank",
            "select matches.loser_ioc, matches.winner_rank"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "matches",
        "table_candidates": [
            "matches"
        ],
        "align_scores": [
            0.9929115176200867,
            5.5606898968108e-05,
            0.9907553791999817,
            5.718371903640218e-05,
            0.00038053025491535664,
            5.7510209444444627e-05,
            0.0005499171675182879,
            5.6251392379635945e-05
        ],
        "align_select": "select matches.winner_name, matches.winner_rank",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Who was the winner that had the highest rank points and participated in the Australian Open tournament?",
        "gold_select": "select matches.winner_name",
        "select_candidates": [
            "select matches.winner_name",
            "select matches.winner_name, rankings.ranking_points",
            "select matches.tourney_name, matches.winner_name",
            "select rankings.player_id7"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "matches",
        "table_candidates": [
            "matches rankings",
            "players matches rankings"
        ],
        "align_scores": [
            0.8733728528022766,
            0.21198369562625885,
            0.0006945761269889772,
            0.0013140311930328608,
            0.0003481002931948751,
            0.0002467014128342271,
            0.006025063805282116,
            0.00813210941851139
        ],
        "align_select": "select matches.winner_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Who is the winner that has the most points and participates in the Australian open test.",
        "gold_select": "select matches.winner_name",
        "select_candidates": [
            "select matches.winner_name",
            "select matches.winner_name, matches.winner_rank_points",
            "select matches.winner_name, matches.winner_entry",
            "select matches.winner_name, matches.winner_ioc"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "matches",
        "table_candidates": [
            "matches",
            "matches rankings"
        ],
        "align_scores": [
            0.6816640496253967,
            0.9757362008094788,
            0.00024615071015432477,
            0.0002336338657187298,
            0.00030953565146774054,
            0.00030431777122430503,
            0.0004928691778331995,
            0.0005520956474356353
        ],
        "align_select": "select matches.winner_name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "Name each left-handed player in order of birth.",
        "gold_select": "select players.first_name, players.last_name",
        "select_candidates": [
            "select players.first_name, players.last_name",
            "select players.first_name, players.last_name, players.hand",
            "select players.first_name, players.last_name, players.birth_date",
            "select players.first_name, players.hand, players.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY",
            "SELECT-FROM-GROUP BY-HAVING-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "players",
        "table_candidates": [
            "players"
        ],
        "align_scores": [
            0.9929510354995728,
            0.00017990171909332275,
            0.0001362986076856032,
            0.00011476208601379767,
            0.00015152028936427087,
            9.872741793515161e-05,
            0.00018467589688953012,
            9.757350198924541e-05
        ],
        "align_select": "select players.first_name, players.last_name",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY"
    },
    {
        "question": "What players played and won in 2013 and 2016?",
        "gold_select": "select matches.winner_name",
        "select_candidates": [
            "select matches.winner_hand, matches.winner_ioc",
            "select matches.winner_hand",
            "select matches.winner_hand, matches.winner_name",
            "select matches.winner_hand, matches.winner_id"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "matches",
        "table_candidates": [
            "matches",
            "matches rankings",
            "players matches"
        ],
        "align_scores": [
            0.00021077027486171573,
            0.00012999102182220668,
            0.002293381607159972,
            0.014202871359884739,
            0.0003398001426830888,
            0.00011553531658137217,
            0.0002395694173173979,
            0.00010143494000658393
        ],
        "align_select": "select matches.winner_hand, matches.winner_ioc",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "Name all players who won in both 2013 and 2016?",
        "gold_select": "select matches.winner_name",
        "select_candidates": [
            "select players.first_name, players.last_name",
            "select players.player_id, players.first_name, players.last_name",
            "select players.player_id, players.first_name",
            "select players.player_id, players.first_name, players.last_name"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "matches",
        "table_candidates": [
            "matches",
            "matches rankings",
            "players matches",
            "players matches rankings"
        ],
        "align_scores": [
            0.9822559356689453,
            0.040557924658060074,
            0.00028999437927268445,
            0.0002294266305398196,
            0.000153286790009588,
            0.00013201126421336085,
            0.00028999437927268445,
            0.0002294266305398196
        ],
        "align_select": "select players.first_name, players.last_name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "Which player has the most wins and how much rank points he/she has?",
        "gold_select": "select matches.winner_name, matches.winner_rank_points",
        "select_candidates": [
            "select players.first_name, players.last_name, rankings.ranking_points",
            "select players.first_name, players.last_name, sum(rankings.ranking_points)",
            "select rankings.player_id, rankings.ranking_points",
            "select matches.draw_size, players.last_name, rankings.ranking_points"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-UNION-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "matches",
        "table_candidates": [
            "players matches rankings",
            "matches rankings",
            "players matches"
        ],
        "align_scores": [
            0.9192050099372864,
            8.396081102546304e-05,
            0.934273898601532,
            7.457962055923417e-05,
            0.23060066998004913,
            0.00010108164133271202,
            0.00023121858248487115,
            5.920041076024063e-05
        ],
        "align_select": "select players.first_name, players.last_name, rankings.ranking_points",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Who won and lost the most in game with the most minutes played.",
        "gold_select": "select matches.winner_name, matches.loser_name",
        "select_candidates": [
            "select matches.winner_name, matches.winner_rank",
            "select matches.winner_hand, matches.winner_ht",
            "select matches.minutes, matches.winner_name",
            "select matches.winner_entry, matches.winner_hand"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "matches",
        "table_candidates": [
            "matches"
        ],
        "align_scores": [
            0.000520989065989852,
            0.0005840523517690599,
            0.0012721617240458727,
            0.0011705445358529687,
            0.0005096862441860139,
            0.0007427152013406157,
            0.000752687978092581,
            0.0009689918952062726
        ],
        "align_select": "select matches.winner_name, matches.winner_rank",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Show the winners and losers who played the most minutes in the game.",
        "gold_select": "select matches.winner_name, matches.loser_name",
        "select_candidates": [
            "select matches.winner_name, matches.loser_name",
            "select matches.winner_hand, matches.loser_name",
            "select matches.winner_hand, matches.winner_rank",
            "select matches.winner_entry, matches.loser_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "matches",
        "table_candidates": [
            "matches"
        ],
        "align_scores": [
            0.9887949228286743,
            0.9462283849716187,
            0.02041981741786003,
            0.012772150337696075,
            0.0003986354568041861,
            0.0003447679046075791,
            0.04798068478703499,
            0.03495945408940315
        ],
        "align_select": "select matches.winner_name, matches.loser_name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "list all winners who played in 2013 and 2016.",
        "gold_select": "select matches.winner_name",
        "select_candidates": [
            "select matches.winner_name",
            "select matches.winner_id",
            "select matches.winner_ioc",
            "select matches.winner_hand"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "matches",
        "table_candidates": [
            "matches"
        ],
        "align_scores": [
            0.9943133592605591,
            0.24174682796001434,
            0.9785640239715576,
            0.5224273800849915,
            0.9943758249282837,
            0.2882216274738312,
            0.7127919793128967,
            0.11175952851772308
        ],
        "align_select": "select matches.winner_name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "list all winners who played in both 2013 and 2016",
        "gold_select": "select matches.winner_name",
        "select_candidates": [
            "select matches.winner_name",
            "select matches.winner_id",
            "select matches.winner_ioc",
            "select matches.loser_age"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "matches",
        "table_candidates": [
            "matches"
        ],
        "align_scores": [
            0.9933049082756042,
            0.9933049082756042,
            0.9417943954467773,
            0.9417943954467773,
            0.993636965751648,
            0.993636965751648,
            0.0005632932297885418,
            0.0005632932297885418
        ],
        "align_select": "select matches.winner_name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "Name all the winners who played in both 2013 and 2016.",
        "gold_select": "select matches.winner_name",
        "select_candidates": [
            "select matches.winner_name",
            "select matches.winner_name, matches.winner_ioc",
            "select matches.winner_name, matches.winner_entry",
            "select matches.winner_name, matches.winner_seed"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "matches",
        "table_candidates": [
            "matches"
        ],
        "align_scores": [
            0.9931765198707581,
            0.04710474982857704,
            0.0005558869452215731,
            0.00012050695659127086,
            0.00021180395560804754,
            9.084994962904602e-05,
            0.000142834716825746,
            7.670932973269373e-05
        ],
        "align_select": "select matches.winner_name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "Who were winners and losers who play in the longest match?",
        "gold_select": "select matches.winner_name, matches.loser_name",
        "select_candidates": [
            "select matches.winner_name, matches.loser_name",
            "select matches.winner_rank, matches.loser_name",
            "select matches.winner_rank, matches.loser_rank",
            "select matches.winner_hand, matches.loser_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "matches",
        "table_candidates": [
            "matches"
        ],
        "align_scores": [
            0.8789308071136475,
            0.9828583002090454,
            0.0006574114668183029,
            0.00044886465184390545,
            0.9508812427520752,
            0.9022527933120728,
            0.00047766577336005867,
            0.00045410505845211446
        ],
        "align_select": "select matches.winner_name, matches.loser_name",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Which players were the winners or losers in the longest match?",
        "gold_select": "select matches.winner_name, matches.loser_name",
        "select_candidates": [
            "select players.first_name, players.last_name",
            "select matches.winner_name, matches.loser_name",
            "select matches.winner_name, matches.winner_rank",
            "select t0.c8, players.last_name"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "matches",
        "table_candidates": [
            "matches",
            "matches rankings",
            "players matches"
        ],
        "align_scores": [
            0.9630609154701233,
            0.11383894830942154,
            0.8474652171134949,
            0.0009200431522913277,
            0.0005451830802485347,
            9.17494689929299e-05,
            0.0005433093756437302,
            0.00013133275206200778
        ],
        "align_select": "select players.first_name, players.last_name",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Who had the longest match? And What were the winning and losing sides?",
        "gold_select": "select matches.winner_name, matches.loser_name",
        "select_candidates": [
            "select matches.loser_name, matches.loser_rank",
            "select matches.match_num, matches.loser_name, matches.round",
            "select matches.minutes, matches.loser_name, matches.round",
            "select matches.minutes, matches.round"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "matches",
        "table_candidates": [
            "matches"
        ],
        "align_scores": [
            0.00042254332220181823,
            8.570853242417797e-05,
            0.00025843505864031613,
            6.85720588080585e-05,
            0.0003351545601617545,
            6.714441406074911e-05,
            0.000743483251426369,
            7.48117599869147e-05
        ],
        "align_select": "select matches.loser_name, matches.loser_rank",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "How old are winners and losers across matches on average?",
        "gold_select": "select avg(matches.loser_age), avg(matches.winner_age)",
        "select_candidates": [
            "select avg(matches.winner_age, avg(matches.loser_age)",
            "select avg(matches.loser_age), matches.winner_age",
            "select avg(matches.winner_age - avg(matches.loser_age)",
            "select avg(matches.loser_age), avg(matches.winner_age)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "matches",
        "table_candidates": [
            "matches"
        ],
        "align_scores": [
            0.03778468817472458,
            9.697400673758239e-05,
            0.060873012989759445,
            9.326147846877575e-05,
            0.017474966123700142,
            7.27858641766943e-05,
            0.9953085780143738,
            8.218903531087562e-05
        ],
        "align_select": "select avg(matches.loser_age), avg(matches.winner_age)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "How old are losers and winners across matches on average?",
        "gold_select": "select avg(matches.loser_age), avg(matches.winner_age)",
        "select_candidates": [
            "select avg(matches.loser_age), avg(matches.winner_age)",
            "select avg(matches.loser_age), avg(matches.winner_age",
            "select avg(matches.loser_age), avg(matches.loser_age)",
            "select avg(matches.loser_age), avg(matches.loser_entry)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "matches",
        "table_candidates": [
            "matches"
        ],
        "align_scores": [
            0.9952670335769653,
            7.346933853114024e-05,
            0.9913966059684753,
            8.176222036127001e-05,
            0.0006660812068730593,
            8.80175139172934e-05,
            0.0003276446077506989,
            0.00010955391189781949
        ],
        "align_select": "select avg(matches.loser_age), avg(matches.winner_age)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "How old are those who win and lose across matches on average?",
        "gold_select": "select avg(matches.loser_age), avg(matches.winner_age)",
        "select_candidates": [
            "select avg(matches.loser_age)",
            "select avg(matches.loser_age), matches.winner_age",
            "select avg(matches.winner_age, matches.loser_age)",
            "select avg(matches.winner_age, avg(matches.loser_age)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "matches",
        "table_candidates": [
            "matches"
        ],
        "align_scores": [
            0.0018989054951816797,
            0.0001695067185210064,
            0.001783781684935093,
            0.00012516647984739393,
            0.0007321589509956539,
            0.00011410759179852903,
            0.007084893994033337,
            0.00012793265341315418
        ],
        "align_select": "select avg(matches.loser_age)",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "How old are the winners of all matches and losers on average?",
        "gold_select": "select avg(matches.loser_age), avg(matches.winner_age)",
        "select_candidates": [
            "select avg(matches.loser_age), matches.winner_age",
            "select avg(matches.winner_age, matches.loser_age)",
            "select matches.winner_age, avg(matches.loser_age)",
            "select avg(matches.winner_age - avg(matches.loser_age)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "matches",
        "table_candidates": [
            "matches"
        ],
        "align_scores": [
            0.9224371910095215,
            8.905884169507772e-05,
            0.6672737002372742,
            7.272051152540371e-05,
            0.8372360467910767,
            9.540309838484973e-05,
            0.006346783600747585,
            7.052928413031623e-05
        ],
        "align_select": "select avg(matches.loser_age), matches.winner_age",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "Which tournaments contain more than ten games?",
        "gold_select": "select matches.tourney_name",
        "select_candidates": [
            "select matches.tourney_name",
            "select matches.tourney_name, matches.tourney_date",
            "select matches.tourney_name, matches.minutes",
            "select matches.tourney_name, matches.winner_hand"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "matches",
        "table_candidates": [
            "matches"
        ],
        "align_scores": [
            0.9845232963562012,
            0.00015224845265038311,
            0.00018730330339167267,
            5.998926644679159e-05,
            0.00019917554163839668,
            5.990625868435018e-05,
            0.00019343843450769782,
            6.213315646164119e-05
        ],
        "align_select": "select matches.tourney_name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "List the tourneys that have more than ten matches.",
        "gold_select": "select matches.tourney_name",
        "select_candidates": [
            "select matches.tourney_name",
            "select matches.tourney_name, matches.tourney_date",
            "select matches.tourney_name, matches.winner_hand",
            "select matches.tourney_name, matches.winner_age"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "matches",
        "table_candidates": [
            "matches"
        ],
        "align_scores": [
            0.986085057258606,
            0.00011929605534533039,
            0.00016147988208103925,
            5.92844226048328e-05,
            0.00014723354252055287,
            5.904035424464382e-05,
            0.00013233922072686255,
            6.0432303143898025e-05
        ],
        "align_select": "select matches.tourney_name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Who has won the most time? And what are their rank points?",
        "gold_select": "select matches.winner_name, matches.winner_rank_points",
        "select_candidates": [
            "select rankings.player_id, rankings.ranking_points",
            "select matches.draw_size, rankings.ranking_points",
            "select matches.winner_name, rankings.ranking_points",
            "select players.first_name, players.last_name, rankings.ranking_points"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-UNION-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "matches",
        "table_candidates": [
            "matches rankings",
            "players matches rankings",
            "rankings"
        ],
        "align_scores": [
            0.2221248745918274,
            7.577154610771686e-05,
            0.0003376705280970782,
            5.8006793551612645e-05,
            0.9867975115776062,
            8.62513916217722e-05,
            0.9398886561393738,
            7.017787720542401e-05
        ],
        "align_select": "select matches.winner_name, rankings.ranking_points",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Which ship has caused most total injuries, and what is its ID?",
        "gold_select": "select ship.id, ship.name",
        "select_candidates": [
            "select ship.name, ship.id",
            "select ship.id, ship.name",
            "select ship.name.c1, ship.id",
            "select ship.lost_in_battle, ship.name"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "ship death",
        "table_candidates": [
            "ship death"
        ],
        "align_scores": [
            0.9761871099472046,
            7.365543569903821e-05,
            0.7031117081642151,
            7.335858390433714e-05,
            0.0007699559209868312,
            6.712469621561468e-05,
            0.00035024574026465416,
            5.4611249652225524e-05
        ],
        "align_select": "select ship.name, ship.id",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Find battles and results when Bulgarians commander is not'Boril'.",
        "gold_select": "select battle.name, battle.result",
        "select_candidates": [
            "select battle.name, battle.result",
            "select battle.id, battle.name, battle.result",
            "select battle.name, battle.date, battle.bulgarian_commander, battle.result",
            "select battle.name, battle.bulgarian_commander, battle.result"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "battle",
        "table_candidates": [
            "battle",
            "battle ship",
            "battle death"
        ],
        "align_scores": [
            0.26686421036720276,
            0.00011095937225036323,
            0.00035245338222011924,
            9.304241393692791e-05,
            0.0001514908071840182,
            7.418532186420634e-05,
            0.0002054213109659031,
            7.409559475490823e-05
        ],
        "align_select": "select battle.name, battle.result",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Name the distinct battles, that happened between Bulgarian Commander Kaloyan and Latin Commander Baldwin I?",
        "gold_select": "select battle.name",
        "select_candidates": [
            "select distinct battle.name",
            "select distinct battle.name, battle.date",
            "select distinct battle.name, battle.date, battle.bulgarian_commander, battle.latin_commander",
            "select distinct battle.name, battle.bulgarian_commander, battle.latin_commander"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "battle",
        "table_candidates": [
            "battle"
        ],
        "align_scores": [
            0.9912263751029968,
            0.00020906660938635468,
            0.000297233578749001,
            7.811856630723923e-05,
            0.00020626663172151893,
            6.837263936176896e-05,
            0.0005739720654673874,
            7.531273877248168e-05
        ],
        "align_select": "select distinct battle.name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What were the different battles involving commander Kaloyan against Latin commander Baldwin I?",
        "gold_select": "select battle.name",
        "select_candidates": [
            "select distinct battle.name",
            "select distinct battle.name, battle.date",
            "select count(*)",
            "select count(distinct battle.name)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "battle",
        "table_candidates": [
            "battle"
        ],
        "align_scores": [
            0.9891905784606934,
            0.0005318387993611395,
            0.000480762158986181,
            8.737725875107571e-05,
            0.014719834551215172,
            0.0001924813404912129,
            0.012221895158290863,
            7.994393672561273e-05
        ],
        "align_select": "select distinct battle.name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "A list of battles, where were they held, and what was the results?",
        "gold_select": "select battle.name, battle.date",
        "select_candidates": [
            "select battle.name, battle.date, battle.result",
            "select battle.id, battle.name, battle.date, battle.result",
            "select battle.id, battle.date, battle.result",
            "select battle.name, battle.bulgarian_commander, battle.latin_commander, battle.result"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "battle",
        "table_candidates": [
            "battle"
        ],
        "align_scores": [
            0.0012457927223294973,
            0.00012772396439686418,
            0.00034358850098215044,
            0.00010841563198482618,
            0.0004120984231121838,
            0.00012646577670238912,
            0.0003451768134254962,
            0.00010200401447946206
        ],
        "align_select": "select battle.name, battle.date, battle.result",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "When is transcripts for two or more courses, what id does it contain?.",
        "gold_select": "select Transcripts.transcript_date, Transcript_Contents.transcript_id",
        "select_candidates": [
            "select Student_Enrolment_Courses.course_id",
            "select Student_Enrolment_Courses.student_course_id",
            "select Student_Enrolment.degree_program_id",
            "select Student_Enrolment.student_enrolment_id"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Transcripts Transcript_Contents",
        "table_candidates": [
            "Student_Enrolment_Courses",
            "Transcript_Contents",
            "Transcripts",
            "Courses Student_Enrolment_Courses",
            "Semesters Student_Enrolment",
            "Semesters Student_Enrolment_Courses",
            "Student_Enrolment"
        ],
        "align_scores": [
            0.9863720536231995,
            0.0014209299115464091,
            0.8342275619506836,
            0.0012281149392947555,
            0.9910727143287659,
            0.002443933393806219,
            0.9876807928085327,
            0.0011019669473171234
        ],
        "align_select": "select Student_Enrolment_Courses.course_id",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "In which courses have less than two sections? And their ids?",
        "gold_select": "select Courses.course_name, Courses.course_id",
        "select_candidates": [
            "select Sections.course_id, Sections.section_name",
            "select Courses.course_name, Sections.course_id",
            "select Sections.course_id, Courses.course_description",
            "select Sections.course_id, Courses.course_name"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Courses Sections",
        "table_candidates": [
            "Sections",
            "Courses Sections",
            "Departments Sections",
            "Courses Departments Sections",
            "Degree_Programs Sections",
            "Addresses Courses Sections",
            "Courses Degree_Programs Sections",
            "Courses Departments"
        ],
        "align_scores": [
            0.006116937845945358,
            9.87206440186128e-05,
            0.2626529335975647,
            0.00010434319847263396,
            0.0006581242778338492,
            9.23874686122872e-05,
            0.007504178211092949,
            0.00010898563050432131
        ],
        "align_select": "select Courses.course_name, Sections.course_id",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Who are the people studying bachelor degrees?",
        "gold_select": "select distinct Students.first_name, Students.middle_name, Students.last_name",
        "select_candidates": [
            "select distinct Student_Enrolment.degree_program_id, Student_Enrolment.semester_id",
            "select distinct Student_Enrolment_Courses.course_id, Student_Enrolment_Courses.student_enrolment_id",
            "select Student_Enrolment_Courses.course_id",
            "select distinct Student_Enrolment_Courses.course_id"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Degree_Programs Students Student_Enrolment",
        "table_candidates": [
            "Degree_Programs Students Student_Enrolment_Courses",
            "Degree_Programs Students",
            "Degree_Programs Students Student_Enrolment",
            "Degree_Programs Students Transcripts",
            "Departments Degree_Programs Students Student_Enrolment_Courses",
            "Courses Degree_Programs Students Student_Enrolment_Courses"
        ],
        "align_scores": [
            0.00016123832028824836,
            8.034417987801135e-05,
            0.00017394406313542277,
            7.019514305284247e-05,
            0.001720308791846037,
            0.005619194358587265,
            0.003590939799323678,
            0.00034174727625213563
        ],
        "align_select": "select distinct Student_Enrolment.degree_program_id, Student_Enrolment.semester_id",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which program has the highest number of students enrolled in it?",
        "gold_select": "select Degree_Programs.degree_summary_name",
        "select_candidates": [
            "select Degree_Programs.degree_summary_name",
            "select Degree_Programs.department_id",
            "select Departments.department_name, Student_Enrolment.semester_id",
            "select Departments.department_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Degree_Programs Student_Enrolment",
        "table_candidates": [
            "Courses Degree_Programs Student_Enrolment",
            "Courses Departments Degree_Programs Student_Enrolment",
            "Departments Degree_Programs Student_Enrolment",
            "Courses Semesters Degree_Programs Student_Enrolment",
            "Courses Student_Enrolment",
            "Courses Students Student_Enrolment",
            "Courses Semesters Student_Enrolment",
            "Courses Semesters Students Student_Enrolment"
        ],
        "align_scores": [
            0.98969966173172,
            7.300233119167387e-05,
            0.005413535516709089,
            7.187486335169524e-05,
            0.00020617639529518783,
            6.260301597649232e-05,
            0.9380293488502502,
            6.882900197524577e-05
        ],
        "align_select": "select Degree_Programs.degree_summary_name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Which program has most number of people are studying.",
        "gold_select": "select Degree_Programs.degree_summary_name",
        "select_candidates": [
            "select Degree_Programs.department_id",
            "select Degree_Programs.degree_summary_name",
            "select Degree_Programs.department_id, Student_Enrolment.semester_id",
            "select Degree_Programs.degree_summary_name, Student_Enrolment.degree_program_id"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Degree_Programs Student_Enrolment",
        "table_candidates": [
            "Degree_Programs Student_Enrolment",
            "Degree_Programs Students Student_Enrolment",
            "Departments Degree_Programs Student_Enrolment",
            "Courses Degree_Programs Student_Enrolment",
            "Courses Departments Degree_Programs Student_Enrolment",
            "Departments Degree_Programs Students Student_Enrolment",
            "Sections Students Student_Enrolment",
            "Courses Degree_Programs Students Student_Enrolment"
        ],
        "align_scores": [
            0.025982679799199104,
            9.237346239387989e-05,
            0.9835216999053955,
            8.893528138287365e-05,
            0.00018842537247110158,
            5.9802263422170654e-05,
            0.00782980490475893,
            7.601377001265064e-05
        ],
        "align_select": "select Degree_Programs.degree_summary_name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Which program has most people enrolled?",
        "gold_select": "select Degree_Programs.degree_summary_name",
        "select_candidates": [
            "select Courses.course_name",
            "select Degree_Programs.department_id",
            "select Departments.department_name",
            "select Courses.course_name, Departments.department_description"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Degree_Programs Student_Enrolment",
        "table_candidates": [
            "Courses Degree_Programs Student_Enrolment",
            "Courses Student_Enrolment",
            "Courses Departments Degree_Programs Student_Enrolment",
            "Courses Students Student_Enrolment",
            "Courses Semesters Student_Enrolment",
            "Courses Semesters Degree_Programs Student_Enrolment",
            "Courses Semesters Students Student_Enrolment",
            "Courses Sections Student_Enrolment"
        ],
        "align_scores": [
            0.9930263757705688,
            7.993898179847747e-05,
            0.014926179312169552,
            7.83045616117306e-05,
            0.9712282419204712,
            7.735045801382512e-05,
            0.0005248744855634868,
            6.98459189152345e-05
        ],
        "align_select": "select Courses.course_name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Which program has most in enrollment?",
        "gold_select": "select Degree_Programs.degree_summary_name",
        "select_candidates": [
            "select Departments.department_name",
            "select Degree_Programs.department_id",
            "select Degree_Programs.degree_summary_name",
            "select Departments.department_name, Student_Enrolment.semester_id"
        ],
        "select_labels": [
            0.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Degree_Programs Student_Enrolment",
        "table_candidates": [
            "Courses Departments Degree_Programs Student_Enrolment",
            "Departments Degree_Programs Student_Enrolment",
            "Courses Degree_Programs Student_Enrolment",
            "Addresses Courses Departments Degree_Programs Student_Enrolment",
            "Courses Departments Degree_Programs"
        ],
        "align_scores": [
            0.9488542675971985,
            6.925781781319529e-05,
            0.0033732124138623476,
            6.370017217705026e-05,
            0.9655135869979858,
            6.786971789551899e-05,
            0.00018628526595421135,
            5.523151412489824e-05
        ],
        "align_select": "select Departments.department_name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Which program has most students enrolled in?",
        "gold_select": "select Degree_Programs.degree_summary_name",
        "select_candidates": [
            "select Departments.department_name",
            "select Degree_Programs.department_id",
            "select Degree_Programs.degree_summary_name",
            "select Departments.department_name, Student_Enrolment.semester_id"
        ],
        "select_labels": [
            0.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Degree_Programs Student_Enrolment",
        "table_candidates": [
            "Courses Departments Degree_Programs Student_Enrolment",
            "Courses Degree_Programs Student_Enrolment",
            "Addresses Courses Departments Degree_Programs Student_Enrolment",
            "Departments Degree_Programs Student_Enrolment",
            "Courses Semesters Degree_Programs Student_Enrolment",
            "Courses Semesters Student_Enrolment"
        ],
        "align_scores": [
            0.9767827391624451,
            7.560446829302236e-05,
            0.028149079531431198,
            7.950421422719955e-05,
            0.9911296367645264,
            7.87022290751338e-05,
            0.0002165616024285555,
            5.594037793343887e-05
        ],
        "align_select": "select Departments.department_name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "When was the earliest transcript released, and what Details?.",
        "gold_select": "select Transcripts.transcript_date, Transcripts.other_details",
        "select_candidates": [
            "select t8.c5, t8.c6",
            "select t7.c9, Student_Enrolment.degree_program_id3",
            "select t7.c9, Student_Enrolment.degree_program_id2",
            "select t12.c5, t12.c6"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-UNION-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Transcripts",
        "table_candidates": [
            "Transcripts",
            "Transcript_Contents",
            "Student_Enrolment_Courses",
            "Courses Student_Enrolment_Courses"
        ],
        "align_scores": [
            0.0024399443063884974,
            6.116672739153728e-05,
            0.0004794089181814343,
            8.387797424802557e-05,
            0.0004573440528474748,
            8.410479495069012e-05,
            0.0027967628557235003,
            6.319260137388483e-05
        ],
        "align_select": "select t8.c5, t8.c6",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "When was the earliest transcript released, and what details can you tell me?",
        "gold_select": "select Transcripts.transcript_date, Transcripts.other_details",
        "select_candidates": [
            "select t8.c5, t8.c6",
            "select t8.c5, t9.c6",
            "select t7.c9, Student_Enrolment.degree_program_id0",
            "select t12.c5, t12.c6"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Transcripts",
        "table_candidates": [
            "Transcripts",
            "Transcript_Contents",
            "Student_Enrolment_Courses",
            "Courses Student_Enrolment_Courses",
            "Semesters Student_Enrolment",
            "Addresses Transcripts",
            "Semesters Student_Enrolment_Courses",
            "Student_Enrolment"
        ],
        "align_scores": [
            0.011450188234448433,
            6.152503920020536e-05,
            0.009881041944026947,
            6.077675425331108e-05,
            0.00035461544757708907,
            7.616630318807438e-05,
            0.014888351783156395,
            6.129156099632382e-05
        ],
        "align_select": "select t8.c5, t8.c6",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "When was the earliest transcript Released, and what is Details could help me please?.",
        "gold_select": "select Transcripts.transcript_date, Transcripts.other_details",
        "select_candidates": [
            "select t8.c5, t8.c6",
            "select t9.c5, t9.c6",
            "select t7.c9, Student_Enrolment.degree_program_id2",
            "select t10.c5, t10.c6"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Transcripts",
        "table_candidates": [
            "Transcripts",
            "Transcript_Contents",
            "Student_Enrolment_Courses",
            "Courses Student_Enrolment_Courses",
            "Courses Student_Enrolment"
        ],
        "align_scores": [
            0.0030769184231758118,
            6.0405622207326815e-05,
            0.004294931888580322,
            5.97207726968918e-05,
            0.00037625947152264416,
            8.512850035913289e-05,
            0.003995876759290695,
            6.109728565206751e-05
        ],
        "align_select": "select t8.c5, t8.c6",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "When was the earliest transcript released and what details can you tell me?",
        "gold_select": "select Transcripts.transcript_date, Transcripts.other_details",
        "select_candidates": [
            "select t8.c5, t8.c6",
            "select t7.c9, Student_Enrolment.degree_program_id0",
            "select t8.c5, t9.c6",
            "select t12.c5, t12.c6"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Transcripts",
        "table_candidates": [
            "Transcripts",
            "Student_Enrolment_Courses",
            "Transcript_Contents",
            "Courses Student_Enrolment_Courses",
            "Addresses Transcripts",
            "Semesters Student_Enrolment_Courses",
            "Semesters Student_Enrolment",
            "Student_Enrolment"
        ],
        "align_scores": [
            0.013683491386473179,
            6.036733611836098e-05,
            0.0003399162960704416,
            7.349918450927362e-05,
            0.011288904584944248,
            6.020303044351749e-05,
            0.01696408912539482,
            6.002176814945415e-05
        ],
        "align_select": "select t8.c5, t8.c6",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "When were transcripts released first time, and what details could I know?",
        "gold_select": "select Transcripts.transcript_date, Transcripts.other_details",
        "select_candidates": [
            "select t8.c5, t8.c6",
            "select t8.c5, t9.c6",
            "select t7.c9, Student_Enrolment.degree_program_id0",
            "select t8.c5, t10.c6"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Transcripts",
        "table_candidates": [
            "Transcripts",
            "Transcript_Contents",
            "Student_Enrolment_Courses",
            "Addresses Transcripts",
            "Courses Student_Enrolment_Courses",
            "Semesters Student_Enrolment",
            "Student_Enrolment",
            "Semesters Student_Enrolment_Courses"
        ],
        "align_scores": [
            0.004123573191463947,
            0.001139866653829813,
            0.005449902731925249,
            0.0021630546543747187,
            0.0004483406082727015,
            0.000512646627612412,
            0.002327828900888562,
            0.001105087110772729
        ],
        "align_select": "select t8.c5, t8.c6",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "When was the earliest transcript released? and what details can you tell me?",
        "gold_select": "select Transcripts.transcript_date, Transcripts.other_details",
        "select_candidates": [
            "select t8.c5, t8.c6",
            "select t8.c5, t9.c6",
            "select t7.c9, Student_Enrolment.degree_program_id0",
            "select t10.c5, t10.c6"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Transcripts",
        "table_candidates": [
            "Transcripts",
            "Transcript_Contents",
            "Student_Enrolment_Courses",
            "Courses Student_Enrolment_Courses",
            "Student_Enrolment"
        ],
        "align_scores": [
            0.01760767214000225,
            6.112584378570318e-05,
            0.014982638880610466,
            6.131261034170166e-05,
            0.0003548117820173502,
            7.505420944653451e-05,
            0.02350412867963314,
            6.080904495320283e-05
        ],
        "align_select": "select t8.c5, t8.c6",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Who is the eldest graduated student?.",
        "gold_select": "select Students.first_name, Students.middle_name, Students.last_name",
        "select_candidates": [
            "select Student_Enrolment_Courses.course_id",
            "select Students.current_address_id3",
            "select Student_Enrolment_Courses.student_course_id",
            "select Students.current_address_id, Students.last_name"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Students",
        "table_candidates": [
            "Students Student_Enrolment_Courses",
            "Students",
            "Semesters Students Student_Enrolment_Courses",
            "Students Student_Enrolment",
            "Sections Students Student_Enrolment_Courses",
            "Semesters Students Student_Enrolment",
            "Students Transcripts",
            "Student_Enrolment_Courses"
        ],
        "align_scores": [
            0.005347713362425566,
            6.99767260812223e-05,
            0.001620783470571041,
            6.538708112202585e-05,
            0.004606788046658039,
            6.875120016047731e-05,
            0.00027332425815984607,
            6.299526285147294e-05
        ],
        "align_select": "select Student_Enrolment_Courses.course_id",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "When was the latest transcript release?",
        "gold_select": "select Transcripts.transcript_date",
        "select_candidates": [
            "select max(t10.c6)",
            "select t8.c5",
            "select max(t9.c6)",
            "select t9.c5"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "Transcripts",
        "table_candidates": [
            "Transcripts",
            "Transcript_Contents",
            "Student_Enrolment_Courses",
            "Student_Enrolment"
        ],
        "align_scores": [
            0.0010906298412010074,
            0.00021476176334545016,
            0.004592782352119684,
            0.0021341019310057163,
            0.001181218889541924,
            0.00022694337530992925,
            0.0047736139968037605,
            0.0022387157659977674
        ],
        "align_select": "select max(t10.c6)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "Summarize degrees that have the most enrollments.",
        "gold_select": "select Degree_Programs.degree_summary_name",
        "select_candidates": [
            "select Degree_Programs.degree_summary_name",
            "select Degree_Programs.degree_summary_name, Degree_Programs.degree_summary_description",
            "select Degree_Programs.degree_program_id, Degree_Programs.degree_summary_name",
            "select Degree_Programs.department_id, Degree_Programs.degree_summary_description"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Degree_Programs Student_Enrolment",
        "table_candidates": [
            "Degree_Programs Student_Enrolment",
            "Departments Degree_Programs Student_Enrolment",
            "Departments Student_Enrolment",
            "Courses Student_Enrolment",
            "Sections Student_Enrolment"
        ],
        "align_scores": [
            0.9959189295768738,
            6.5110762079712e-05,
            0.000703263736795634,
            6.847169424872845e-05,
            0.00037231671740300953,
            6.853087688796222e-05,
            0.00020499087986536324,
            6.299982487689704e-05
        ],
        "align_select": "select Degree_Programs.degree_summary_name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What degree summary is the one with most number of students enrolled?",
        "gold_select": "select Degree_Programs.degree_summary_name",
        "select_candidates": [
            "select Degree_Programs.degree_summary_name",
            "select Degree_Programs.degree_summary_name, Degree_Programs.degree_summary_description",
            "select Degree_Programs.degree_summary_description",
            "select Degree_Programs.degree_summary_name (or Degree_Programs.degree_summary_description)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-UNION-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Degree_Programs Student_Enrolment",
        "table_candidates": [
            "Degree_Programs Student_Enrolment",
            "Departments Degree_Programs Student_Enrolment",
            "Courses Degree_Programs Student_Enrolment",
            "Departments Student_Enrolment",
            "Addresses Degree_Programs Student_Enrolment"
        ],
        "align_scores": [
            0.9936923980712891,
            0.00013334471441339701,
            0.003610471496358514,
            8.003006223589182e-05,
            0.9939379692077637,
            0.00012774954666383564,
            0.991357684135437,
            0.00027867904282175004
        ],
        "align_select": "select Degree_Programs.degree_summary_name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Name of degree program with highest number of students.",
        "gold_select": "select Degree_Programs.degree_summary_name",
        "select_candidates": [
            "select Degree_Programs.degree_summary_name",
            "select Degree_Programs.degree_summary_name, Student_Enrolment.degree_program_id",
            "select Degree_Programs.degree_summary_name, Students.current_address_id",
            "select Degree_Programs.degree_summary_name, Student_Enrolment.degree_program_id3"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Degree_Programs Student_Enrolment",
        "table_candidates": [
            "Degree_Programs Students",
            "Degree_Programs Students Student_Enrolment_Courses",
            "Degree_Programs Student_Enrolment",
            "Degree_Programs Students Student_Enrolment",
            "Degree_Programs Student_Enrolment_Courses",
            "Degree_Programs Transcripts"
        ],
        "align_scores": [
            0.9959397315979004,
            6.266703712753952e-05,
            0.0006110537215135992,
            6.073087206459604e-05,
            0.00017018723883666098,
            5.739678454119712e-05,
            0.000596959434915334,
            6.311148899840191e-05
        ],
        "align_select": "select Degree_Programs.degree_summary_name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What course had the most number of enrollment?",
        "gold_select": "select Courses.course_name",
        "select_candidates": [
            "select Courses.course_name",
            "select Courses.course_name, Student_Enrolment.semester_id",
            "select Courses.course_name, Student_Enrolment.degree_program_id",
            "select Courses.course_name, Student_Enrolment.student_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Courses Student_Enrolment_Courses",
        "table_candidates": [
            "Courses Student_Enrolment",
            "Courses Sections Student_Enrolment",
            "Courses Students Student_Enrolment",
            "Addresses Courses Sections Student_Enrolment",
            "Addresses Courses Student_Enrolment",
            "Courses Departments Student_Enrolment",
            "Courses Semesters Student_Enrolment",
            "Courses Departments Sections Student_Enrolment"
        ],
        "align_scores": [
            0.9858119487762451,
            7.504883978981525e-05,
            0.00017843030218500644,
            6.226993718883023e-05,
            0.00024234327429439873,
            7.504969835281372e-05,
            0.00021220803319010884,
            5.7511086197337136e-05
        ],
        "align_select": "select Courses.course_name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What course has most number of enrollment?",
        "gold_select": "select Courses.course_name",
        "select_candidates": [
            "select Courses.course_name",
            "select Courses.course_name, Student_Enrolment.semester_id",
            "select Courses.course_name, Student_Enrolment.degree_program_id",
            "select Courses.course_name, Student_Enrolment.student_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Courses Student_Enrolment_Courses",
        "table_candidates": [
            "Courses Student_Enrolment",
            "Courses Sections Student_Enrolment",
            "Addresses Courses Student_Enrolment",
            "Courses Students Student_Enrolment",
            "Addresses Courses Sections Student_Enrolment",
            "Courses Student_Enrolment_Courses"
        ],
        "align_scores": [
            0.9908581376075745,
            7.45653233025223e-05,
            0.00017345249943900853,
            5.901840268052183e-05,
            0.0002782622177619487,
            7.112349703675136e-05,
            0.0002455614157952368,
            5.597954441327602e-05
        ],
        "align_select": "select Courses.course_name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What courses have at most 2 sections? And What are their ids?",
        "gold_select": "select Courses.course_name, Courses.course_id",
        "select_candidates": [
            "select Courses.course_name, Sections.course_id",
            "select Courses.course_name, Courses.course_id",
            "select Sections.course_id, Sections.section_name",
            "select Sections.course_id, Courses.course_name"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Courses Sections",
        "table_candidates": [
            "Courses Sections",
            "Courses Departments Sections",
            "Courses Degree_Programs Sections",
            "Addresses Courses Sections",
            "Departments Sections",
            "Addresses Courses Departments Sections",
            "Courses Departments"
        ],
        "align_scores": [
            0.9911367893218994,
            0.00012990355025976896,
            0.9933776259422302,
            0.0001902803051052615,
            0.008349956944584846,
            9.536188008496538e-05,
            0.4272630214691162,
            0.00012044549657730386
        ],
        "align_select": "select Courses.course_name, Sections.course_id",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the courses that have at most 2 sections? And their ID?",
        "gold_select": "select Courses.course_name, Courses.course_id",
        "select_candidates": [
            "select Courses.course_name, Sections.course_id",
            "select Courses.course_name, Courses.course_id",
            "select Sections.course_id, Courses.course_name",
            "select Sections.course_id, Courses.course_description"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Courses Sections",
        "table_candidates": [
            "Courses Sections",
            "Courses Departments Sections",
            "Addresses Courses Sections",
            "Addresses Courses Departments Sections"
        ],
        "align_scores": [
            0.9890474677085876,
            0.00010643526184139773,
            0.9941717982292175,
            0.0001209113106597215,
            0.8700650930404663,
            0.00011472118785604835,
            0.0013461349299177527,
            9.056078852154315e-05
        ],
        "align_select": "select Courses.course_name, Sections.course_id",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "List the semester without any students, which one?",
        "gold_select": "select Semesters.semester_name",
        "select_candidates": [
            "select Semesters.semester_name",
            "select Semesters.semester_name, Semesters.semester_description",
            "select Semesters.semester_name, Semesters.semester_description, Semesters.other_details",
            "select Semesters.semester_id, Semesters.semester_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Semesters Student_Enrolment",
        "table_candidates": [
            "Semesters Students",
            "Semesters Student_Enrolment",
            "Semesters",
            "Semesters Students Student_Enrolment",
            "Semesters Student_Enrolment_Courses"
        ],
        "align_scores": [
            0.72535640001297,
            0.7353554368019104,
            0.0008194880210794508,
            0.002091754926368594,
            0.0006126389489509165,
            0.001429040334187448,
            0.00042270650737918913,
            0.00036631792318075895
        ],
        "align_select": "select Semesters.semester_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List all courses which ever have students enrolling.",
        "gold_select": "select distinct Courses.course_name",
        "select_candidates": [
            "select Courses.course_name",
            "select distinct Courses.course_name",
            "select Courses.course_name, Student_Enrolment.semester_id",
            "select distinct Courses.course_name, Student_Enrolment.semester_id"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Courses Student_Enrolment_Courses",
        "table_candidates": [
            "Courses Student_Enrolment",
            "Addresses Courses Student_Enrolment",
            "Courses Sections Student_Enrolment",
            "Addresses Courses Sections Student_Enrolment",
            "Sections Student_Enrolment"
        ],
        "align_scores": [
            0.5508598685264587,
            0.001171944197267294,
            0.26984837651252747,
            0.03414122015237808,
            0.00021618715254589915,
            0.0001099432265618816,
            0.002088079461827874,
            0.0002705428923945874
        ],
        "align_select": "select Courses.course_name",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What are the courses that have ever had students enrolled in?",
        "gold_select": "select distinct Courses.course_name",
        "select_candidates": [
            "select Courses.course_name",
            "select distinct Courses.course_name",
            "select Courses.course_name, Student_Enrolment.semester_id",
            "select distinct Courses.course_name, Student_Enrolment.semester_id"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Courses Student_Enrolment_Courses",
        "table_candidates": [
            "Courses Student_Enrolment",
            "Addresses Courses Student_Enrolment",
            "Sections Student_Enrolment"
        ],
        "align_scores": [
            0.12948745489120483,
            0.005384511314332485,
            0.4329602122306824,
            0.019622132182121277,
            0.00024826015578582883,
            0.00010937394836219028,
            0.0003815207746811211,
            0.00020399918139446527
        ],
        "align_select": "select distinct Courses.course_name",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "List departments which offer the most number of degrees, and their ids.",
        "gold_select": "select Departments.department_name, Degree_Programs.department_id",
        "select_candidates": [
            "select Degree_Programs.department_id, Departments.department_name",
            "select Degree_Programs.department_id, Departments.department_description",
            "select Degree_Programs.department_id, Degree_Programs.degree_summary_name",
            "select Departments.department_name, Degree_Programs.department_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-UNION-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Departments Degree_Programs",
        "table_candidates": [
            "Degree_Programs",
            "Departments Degree_Programs",
            "Addresses Departments Degree_Programs"
        ],
        "align_scores": [
            0.10477852821350098,
            9.751685138326138e-05,
            0.003635762259364128,
            8.864468691172078e-05,
            0.0001900172355817631,
            6.906998169142753e-05,
            0.9922021627426147,
            0.00010945325630018488
        ],
        "align_select": "select Departments.department_name, Degree_Programs.department_id",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What's the course that has the most students?",
        "gold_select": "select Courses.course_name",
        "select_candidates": [
            "select Courses.course_name",
            "select Courses.course_name, Student_Enrolment.semester_id",
            "select Courses.course_name, Student_Enrolment.degree_program_id",
            "select Courses.course_name, Student_Enrolment.student_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Courses Student_Enrolment_Courses",
        "table_candidates": [
            "Courses Student_Enrolment",
            "Courses Sections Students",
            "Courses Sections Student_Enrolment",
            "Courses Sections Students Student_Enrolment",
            "Courses Students Student_Enrolment",
            "Courses Students",
            "Courses Semesters Students Student_Enrolment",
            "Courses Semesters Student_Enrolment"
        ],
        "align_scores": [
            0.9932273030281067,
            8.193315443350002e-05,
            0.0002597366110421717,
            6.0883026890223846e-05,
            0.0006577157182618976,
            7.490549614885822e-05,
            0.0003820833517238498,
            6.303654663497582e-05
        ],
        "align_select": "select Courses.course_name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What semester had no students enrolled?",
        "gold_select": "select Semesters.semester_name",
        "select_candidates": [
            "select Semesters.semester_name",
            "select Semesters.semester_name, Student_Enrolment.semester_id",
            "select Semesters.semester_name, Semesters.semester_description",
            "select Semesters.semester_name, Student_Enrolment.degree_program_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Semesters Student_Enrolment",
        "table_candidates": [
            "Semesters Student_Enrolment",
            "Courses Semesters Student_Enrolment",
            "Semesters Students Student_Enrolment",
            "Degree_Programs Semesters Student_Enrolment"
        ],
        "align_scores": [
            0.2947593927383423,
            0.5839052200317383,
            0.0003811423957813531,
            0.0006043939501978457,
            0.0003643953241407871,
            0.0006812541978433728,
            0.00010733747330959886,
            0.00014861809904687107
        ],
        "align_select": "select Semesters.semester_name",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM"
    },
    {
        "question": "Which semester had no student enrolled?",
        "gold_select": "select Semesters.semester_name",
        "select_candidates": [
            "select Semesters.semester_name",
            "select Semesters.semester_name, Student_Enrolment.semester_id",
            "select Semesters.semester_name, Semesters.semester_description",
            "select Semesters.semester_name, Student_Enrolment.degree_program_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Semesters Student_Enrolment",
        "table_candidates": [
            "Semesters Student_Enrolment",
            "Semesters Students Student_Enrolment",
            "Degree_Programs Semesters Student_Enrolment",
            "Courses Student_Enrolment"
        ],
        "align_scores": [
            0.6555956602096558,
            0.4366648495197296,
            0.00045459880493581295,
            0.0006404066225513816,
            0.00036411519977264106,
            0.0005358902853913605,
            0.00011869025911437348,
            0.00015649320266675204
        ],
        "align_select": "select Semesters.semester_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Name of the semester with no student?.",
        "gold_select": "select Semesters.semester_name",
        "select_candidates": [
            "select Semesters.semester_name",
            "select Semesters.semester_name, Semesters.semester_description",
            "select Semesters.semester_name, Semesters.semester_description, Semesters.other_details",
            "select Semesters.semester_name, Students.current_address_id, Student_Enrolment.semester_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Semesters Student_Enrolment",
        "table_candidates": [
            "Semesters Students",
            "Semesters",
            "Semesters Student_Enrolment",
            "Semesters Students Student_Enrolment",
            "Semesters Student_Enrolment_Courses"
        ],
        "align_scores": [
            0.9954095482826233,
            0.7199400663375854,
            0.00036331324372440577,
            0.0008698658784851432,
            0.00035466739791445434,
            0.0008168650092557073,
            0.00010033268335973844,
            0.0001028721162583679
        ],
        "align_select": "select Semesters.semester_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Name the semester when nobody enrolled.",
        "gold_select": "select Semesters.semester_name",
        "select_candidates": [
            "select Semesters.semester_name",
            "select Semesters.semester_name, Student_Enrolment.semester_id",
            "select Semesters.semester_name, Semesters.semester_description",
            "select Semesters.semester_name, Semesters.semester_description, Semesters.other_details"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Semesters Student_Enrolment",
        "table_candidates": [
            "Semesters Student_Enrolment",
            "Semesters Students Student_Enrolment"
        ],
        "align_scores": [
            0.9929030537605286,
            0.40826863050460815,
            0.00014830638247076422,
            0.0002668951347004622,
            0.00032174866646528244,
            0.0005629019578918815,
            0.00036048691254109144,
            0.000348337140167132
        ],
        "align_select": "select Semesters.semester_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List all sections and descriptions.",
        "gold_select": "select Sections.section_name, Sections.section_description",
        "select_candidates": [
            "select Sections.section_name, Sections.section_description",
            "select Sections.section_id, Sections.section_description",
            "select Sections.section_id, Sections.section_name, Sections.section_description",
            "select Sections.section_id, Sections.course_id, Sections.section_description"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Sections",
        "table_candidates": [
            "Sections",
            "Departments Sections",
            "Degree_Programs Sections",
            "Courses Sections",
            "Addresses Sections",
            "Departments Degree_Programs Sections"
        ],
        "align_scores": [
            0.9850922226905823,
            0.002019694074988365,
            0.00041747905197553337,
            0.00018110594828613102,
            0.0001839448232203722,
            0.00012220746430102736,
            0.0001249499327968806,
            8.976241952041164e-05
        ],
        "align_select": "select Sections.section_name, Sections.section_description",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "When did the transcript with the fewest results occur, and what is its ID?",
        "gold_select": "select Transcripts.transcript_date, Transcript_Contents.transcript_id",
        "select_candidates": [
            "select t8.c5, Student_Enrolment_Courses.student_course_id",
            "select t8.c5, t8.c6",
            "select t8.c3, t8.c4",
            "select t8.c5, Student_Enrolment.student_enrolment_id"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Transcripts Transcript_Contents",
        "table_candidates": [
            "Student_Enrolment_Courses",
            "Transcripts"
        ],
        "align_scores": [
            0.0003423387825023383,
            8.556072862120345e-05,
            0.0003479438310023397,
            5.728097676183097e-05,
            0.00027824522112496197,
            5.715750012313947e-05,
            0.0003076620923820883,
            7.556482159998268e-05
        ],
        "align_select": "select t8.c5, Student_Enrolment_Courses.student_course_id",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What are all the courses in which students are enrolled?",
        "gold_select": "select distinct Courses.course_name",
        "select_candidates": [
            "select Courses.course_name",
            "select distinct Courses.course_name",
            "select Courses.course_name, Student_Enrolment.semester_id",
            "select Student_Enrolment.degree_program_id"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Courses Student_Enrolment_Courses",
        "table_candidates": [
            "Courses Student_Enrolment",
            "Addresses Courses Student_Enrolment",
            "Sections Student_Enrolment",
            "Semesters Student_Enrolment",
            "Departments Student_Enrolment",
            "Degree_Programs Student_Enrolment",
            "Addresses Student_Enrolment"
        ],
        "align_scores": [
            0.39453622698783875,
            0.00047383716446347535,
            0.9323143362998962,
            0.00021912339434493333,
            0.00016511646390426904,
            8.696669829078019e-05,
            0.0011393304448574781,
            0.0015703001990914345
        ],
        "align_select": "select distinct Courses.course_name",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "Name all the courses that have some students enrolled, Please.",
        "gold_select": "select distinct Courses.course_name",
        "select_candidates": [
            "select Courses.course_name",
            "select Courses.course_name, Student_Enrolment.semester_id",
            "select distinct Courses.course_name",
            "select Courses.course_name, Student_Enrolment.semester_id, Courses.other_details"
        ],
        "select_labels": [
            0.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Courses Student_Enrolment_Courses",
        "table_candidates": [
            "Courses Student_Enrolment",
            "Addresses Courses Student_Enrolment",
            "Courses Sections Student_Enrolment",
            "Courses Student_Enrolment Sections"
        ],
        "align_scores": [
            0.35676509141921997,
            0.9131668210029602,
            0.00024363509146496654,
            0.00020198649144731462,
            0.8374872207641602,
            0.00800122320652008,
            0.0001957573986146599,
            0.0001575026399223134
        ],
        "align_select": "select Courses.course_name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Which are the sections in reverse alphabetical order?",
        "gold_select": "select Sections.section_name",
        "select_candidates": [
            "select Sections.section_name",
            "select Sections.section_name, Sections.section_description",
            "select Sections.section_id, Sections.section_name",
            "select Sections.course_id, Sections.section_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "Sections",
        "table_candidates": [
            "Sections",
            "Departments Sections",
            "Degree_Programs Sections"
        ],
        "align_scores": [
            0.9952589869499207,
            0.9952589869499207,
            0.0012651532888412476,
            0.0012651532888412476,
            0.00025055199512280524,
            0.00025055199512280524,
            0.00023886650160420686,
            0.00023886650160420686
        ],
        "align_select": "select Sections.section_name",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "What semester is the highest percentage of students enrolled in? And show the ID.",
        "gold_select": "select Semesters.semester_name, Semesters.semester_id",
        "select_candidates": [
            "select Semesters.semester_name, Student_Enrolment.semester_id",
            "select Student_Enrolment.degree_program_id, Semesters.semester_name",
            "select Student_Enrolment.degree_program_id, Student_Enrolment.semester_id",
            "select Semesters.semester_name, Student_Enrolment.degree_program_id"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Semesters Student_Enrolment",
        "table_candidates": [
            "Semesters Student_Enrolment",
            "Degree_Programs Semesters Student_Enrolment",
            "Departments Semesters Student_Enrolment",
            "Courses Student_Enrolment"
        ],
        "align_scores": [
            0.9864343404769897,
            6.324915739241987e-05,
            0.0019630156457424164,
            7.444625225616619e-05,
            0.0012888525379821658,
            6.726662104483694e-05,
            0.0006078708101995289,
            7.449660188285634e-05
        ],
        "align_select": "select Semesters.semester_name, Student_Enrolment.semester_id",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Which semester did most students register in? And show me the id.",
        "gold_select": "select Semesters.semester_name, Semesters.semester_id",
        "select_candidates": [
            "select Semesters.semester_name, Student_Enrolment.student_enrolment_id",
            "select Semesters.semester_name, Student_Enrolment.semester_id",
            "select Semesters.semester_name, Student_Enrolment.degree_program_id",
            "select Student_Enrolment.degree_program_id, Semesters.semester_description"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Semesters Student_Enrolment",
        "table_candidates": [
            "Semesters Student_Enrolment",
            "Degree_Programs Semesters Student_Enrolment",
            "Departments Semesters Student_Enrolment",
            "Courses Student_Enrolment"
        ],
        "align_scores": [
            0.1503196507692337,
            7.968107092892751e-05,
            0.9942445158958435,
            8.028926094993949e-05,
            0.0005952391074970365,
            7.834302959963679e-05,
            0.0006640441133640707,
            7.32148255337961e-05
        ],
        "align_select": "select Semesters.semester_name, Student_Enrolment.semester_id",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What countries has the most TV channels and how many does it have?",
        "gold_select": "select TV_Channel.Country, count(*)",
        "select_candidates": [
            "select TV_Channel.Country, count(*)",
            "select TV_Channel.Country, count(*), TV_Channel.Language",
            "select TV_Channel.series_name, count(*)",
            "select TV_Channel.Country.c2, count(*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-UNION-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel"
        ],
        "align_scores": [
            0.9948786497116089,
            0.00011621518206084147,
            0.00013781670713797212,
            6.411366484826431e-05,
            0.0004484480887185782,
            6.719795783283189e-05,
            0.004098801873624325,
            7.298409764189273e-05
        ],
        "align_select": "select TV_Channel.Country, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Which series has the episode \"A Love of a Lifetime\"?",
        "gold_select": "select TV_Channel.series_name",
        "select_candidates": [
            "select TV_series.Episode",
            "select TV_series.id",
            "select TV_series.id, TV_series.Episode",
            "select TV_series.Episode, TV_Channel.series_name"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel TV_series",
        "table_candidates": [
            "TV_series",
            "TV_Channel TV_series"
        ],
        "align_scores": [
            0.9893529415130615,
            9.026120096677914e-05,
            0.009286495856940746,
            0.00013707700418308377,
            0.0002147752675227821,
            6.213185406522825e-05,
            0.00016931304708123207,
            6.213245069375262e-05
        ],
        "align_select": "select TV_series.Episode",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which series has the episode 'A Love of a lifetime'?",
        "gold_select": "select TV_Channel.series_name",
        "select_candidates": [
            "select TV_series.Episode",
            "select TV_series.id",
            "select TV_series.id, TV_series.Episode",
            "select TV_series.Episode, TV_Channel.series_name"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel TV_series",
        "table_candidates": [
            "TV_series",
            "TV_Channel TV_series"
        ],
        "align_scores": [
            0.9898742437362671,
            8.856265048962086e-05,
            0.008999673649668694,
            0.00013608926383312792,
            0.0002132489753421396,
            6.224215758265927e-05,
            0.0001700197026366368,
            6.184809899423271e-05
        ],
        "align_select": "select TV_series.Episode",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Name of the series which has the episode \"A Love of a Lifetime\".",
        "gold_select": "select TV_Channel.series_name",
        "select_candidates": [
            "select TV_Channel.series_name",
            "select TV_series.Episode",
            "select TV_Channel.series_name, TV_series.Episode",
            "select TV_Channel.series_name, TV_series.Channel"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel TV_series",
        "table_candidates": [
            "TV_Channel TV_series"
        ],
        "align_scores": [
            0.983043372631073,
            9.341652184957638e-05,
            0.9857284426689148,
            6.981928163440898e-05,
            0.00016997252532746643,
            5.968854020466097e-05,
            0.00021047747577540576,
            6.023162859492004e-05
        ],
        "align_select": "select TV_Channel.series_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What series had the episode \"A love of a lifetime\"?",
        "gold_select": "select TV_Channel.series_name",
        "select_candidates": [
            "select TV_series.Episode",
            "select TV_series.id",
            "select TV_series.id, TV_series.Episode",
            "select TV_series.id, TV_series.Channel"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel TV_series",
        "table_candidates": [
            "TV_series",
            "TV_Channel TV_series"
        ],
        "align_scores": [
            0.9889382123947144,
            8.617082494311035e-05,
            0.013516588136553764,
            0.00013459072215482593,
            0.00019027412054128945,
            5.9834095736732706e-05,
            0.00014728422684129328,
            6.0896611103089526e-05
        ],
        "align_select": "select TV_series.Episode",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which series has episode A love of a lifetime?",
        "gold_select": "select TV_Channel.series_name",
        "select_candidates": [
            "select TV_series.Episode",
            "select TV_series.id",
            "select TV_series.id, TV_series.Episode",
            "select TV_series.Episode, TV_series.Air_Date"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel TV_series",
        "table_candidates": [
            "TV_series",
            "TV_Channel TV_series"
        ],
        "align_scores": [
            0.9474379420280457,
            0.00011391015868866816,
            0.008706403896212578,
            0.00026391082792542875,
            0.0002054291544482112,
            6.53544848319143e-05,
            0.00018586051010061055,
            5.942478674114682e-05
        ],
        "align_select": "select TV_series.Episode",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Name of the TV series that have A love of a lifetime (episode)?",
        "gold_select": "select TV_Channel.series_name",
        "select_candidates": [
            "select TV_Channel.series_name",
            "select TV_series.Episode",
            "select TV_Channel.series_name, TV_series.Episode",
            "select TV_Channel.series_name, TV_series.Air_Date"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel TV_series",
        "table_candidates": [
            "TV_Channel TV_series"
        ],
        "align_scores": [
            0.522565484046936,
            0.0001549538574181497,
            0.9729883074760437,
            9.811887139221653e-05,
            0.0005016694776713848,
            8.38503910927102e-05,
            0.0001544615806778893,
            6.356794619932771e-05
        ],
        "align_select": "select TV_series.Episode",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "The cartoon called \"rise of blue beetle\" show in which channel?",
        "gold_select": "select TV_Channel.series_name",
        "select_candidates": [
            "select Cartoon.Channel",
            "select Cartoon.Channel, Cartoon.Production_code",
            "select Cartoon.Channel, t2.c7",
            "select Cartoon.Channel, t2.c8"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "Cartoon",
            "TV_Channel TV_series Cartoon",
            "TV_Channel Cartoon",
            "TV_series Cartoon"
        ],
        "align_scores": [
            0.9952753782272339,
            0.00010214214125880972,
            0.00018319390073884279,
            6.389375630533323e-05,
            0.00028778050909750164,
            8.120881830109283e-05,
            0.0002934822114184499,
            8.140529098454863e-05
        ],
        "align_select": "select Cartoon.Channel",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the channel that broadcasts cartoons directed by Ben Jones and Michael Chang? And where is it from?",
        "gold_select": "select TV_Channel.series_name, TV_Channel.Country",
        "select_candidates": [
            "select Cartoon.Channel, TV_Channel.Country",
            "select TV_Channel.Country, TV_Channel.Language",
            "select Cartoon.Channel, Cartoon.Directed_by",
            "select TV_Channel.Country, Cartoon.Channel"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel Cartoon",
            "TV_Channel TV_series Cartoon",
            "TV_series Cartoon"
        ],
        "align_scores": [
            0.00030649572727270424,
            0.00016937310283537954,
            0.00024835814838297665,
            0.00014056506915949285,
            0.00015818428073544055,
            9.667753329267725e-05,
            0.00022121297661215067,
            0.00013667174789588898
        ],
        "align_select": "select Cartoon.Channel, TV_Channel.Country",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "What is the package choice of HD-TV, and which series does it belong to.",
        "gold_select": "select TV_Channel.Package_Option, TV_Channel.series_name",
        "select_candidates": [
            "select TV_Channel.series_name, TV_Channel.Package_Option",
            "select TV_Channel.Package_Option, TV_Channel.series_name",
            "select TV_Channel.series_name, TV_Channel.Country",
            "select TV_Channel.id, TV_Channel.series_name"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel TV_series",
            "TV_Channel",
            "TV_Channel TV_series Cartoon"
        ],
        "align_scores": [
            0.9937798380851746,
            0.00010168451262870803,
            0.9930493831634521,
            0.00011597627599257976,
            0.0008639584411866963,
            7.857564924051985e-05,
            0.00042281849891878664,
            7.916476897662506e-05
        ],
        "align_select": "select TV_Channel.series_name, TV_Channel.Package_Option",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is package selection and TV station for HDTV?",
        "gold_select": "select TV_Channel.Package_Option, TV_Channel.series_name",
        "select_candidates": [
            "select TV_Channel.Package_Option, TV_Channel.Hight_definition_TV",
            "select TV_Channel.Hight_definition_TV, TV_Channel.Package_Option",
            "select TV_Channel.Package_Option, t0.c9",
            "select TV_Channel.Pay_per_view_PPV, TV_Channel.Hight_definition_TV"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel",
            "TV_Channel TV_series Cartoon",
            "TV_Channel TV_series",
            "TV_Channel Cartoon"
        ],
        "align_scores": [
            0.9859169125556946,
            8.004982373677194e-05,
            0.9885948896408081,
            9.122888877755031e-05,
            0.0006964924978092313,
            0.00010213999485131353,
            0.991601288318634,
            9.759554814081639e-05
        ],
        "align_select": "select TV_Channel.Package_Option, TV_Channel.Hight_definition_TV",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which countries have the most tv channels? And how many?",
        "gold_select": "select TV_Channel.Country, count(*)",
        "select_candidates": [
            "select TV_Channel.Country, count(*)",
            "select TV_Channel.Country, count(*), TV_Channel.Language",
            "select TV_Channel.Country., count(*)",
            "select TV_Channel.series_name, count(*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel"
        ],
        "align_scores": [
            0.9950842261314392,
            6.929792289156467e-05,
            0.00015608815010637045,
            5.657729343511164e-05,
            0.003819770645350218,
            6.66040723444894e-05,
            0.0004700757563114166,
            6.499816663563251e-05
        ],
        "align_select": "select TV_Channel.Country, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What countries and series have TV channels that play cartoons directed by Ben Jones and cartoons directed by Michael Chang?",
        "gold_select": "select TV_Channel.series_name, TV_Channel.Country",
        "select_candidates": [
            "select TV_Channel.Country, TV_Channel.series_name",
            "select TV_Channel.series_name, TV_Channel.Country",
            "select TV_Channel.Country., TV_Channel.series_name",
            "select TV_Channel.Country, TV_Channel.series_name"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel Cartoon",
            "TV_Channel TV_series Cartoon",
            "TV_Channel Cartoon TV_series Cartoon",
            "TV_Channel Cartoon TV_series"
        ],
        "align_scores": [
            0.10273069143295288,
            0.005287803243845701,
            0.003513516392558813,
            0.0004966093110851943,
            0.0005783846136182547,
            0.00021058908896520734,
            0.10273069143295288,
            0.005287803243845701
        ],
        "align_select": "select TV_Channel.Country, TV_Channel.series_name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "When will tv show episode \"a love of a lifetime\" be aired?",
        "gold_select": "select TV_series.Air_Date",
        "select_candidates": [
            "select TV_series.Air_Date",
            "select TV_series.id, TV_series.Air_Date",
            "select avg(TV_series.Air_Date)",
            "select TV_series.Air_Date, TV_series.Rating"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_series",
        "table_candidates": [
            "TV_series"
        ],
        "align_scores": [
            0.9816887378692627,
            8.72109376359731e-05,
            0.00015406985767185688,
            6.6959677496925e-05,
            0.008698349818587303,
            6.803405267419294e-05,
            0.0001422266650479287,
            6.16500765318051e-05
        ],
        "align_select": "select TV_series.Air_Date",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "When is TV series with episode \"A love of a lifetime\" coming out?",
        "gold_select": "select TV_series.Air_Date",
        "select_candidates": [
            "select TV_series.Air_Date",
            "select TV_series.Air_Date, TV_series.Rating",
            "select TV_series.Air_Date (https://TV_series.Air_Date)",
            "select TV_series.Air_Date, TV_series.Weekly_Rank"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_series",
        "table_candidates": [
            "TV_series"
        ],
        "align_scores": [
            0.987144410610199,
            8.478799281874672e-05,
            0.00012679191422648728,
            6.0817455960204825e-05,
            0.010128260590136051,
            7.760142761981115e-05,
            0.00013407501683104783,
            6.691346789011732e-05
        ],
        "align_select": "select TV_series.Air_Date",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which channel series shows the cartoon The Rise of the Blue Beetle!?",
        "gold_select": "select TV_Channel.series_name",
        "select_candidates": [
            "select TV_Channel.series_name",
            "select TV_Channel.series_name, TV_series.Channel",
            "select TV_Channel.series_name, Cartoon.Channel",
            "select Cartoon.Title, TV_Channel.series_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel TV_series Cartoon",
            "TV_Channel Cartoon"
        ],
        "align_scores": [
            0.9557165503501892,
            0.00010847510566236451,
            0.000189820202649571,
            6.359098915709183e-05,
            0.0004488820268306881,
            6.697385106235743e-05,
            0.00024067269987426698,
            6.409153138520196e-05
        ],
        "align_select": "select TV_Channel.series_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which TV channel is series \" A love of a lifetime\" aired on?",
        "gold_select": "select TV_Channel.series_name",
        "select_candidates": [
            "select TV_series.Channel",
            "select TV_Channel.series_name",
            "select TV_Channel.series_name, TV_series.Channel",
            "select t2.c8"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel TV_series",
        "table_candidates": [
            "TV_Channel TV_series",
            "TV_series"
        ],
        "align_scores": [
            0.9941343665122986,
            0.0001042803269228898,
            0.4042080044746399,
            8.782969234744087e-05,
            0.00019343105668667704,
            6.814260268583894e-05,
            0.0011118768015876412,
            9.266805136576295e-05
        ],
        "align_select": "select TV_series.Channel",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the packages options and series of the TV channel that supports HDTV?",
        "gold_select": "select TV_Channel.Package_Option, TV_Channel.series_name",
        "select_candidates": [
            "select TV_Channel.Package_Option, TV_Channel.series_name",
            "select TV_Channel.series_name, TV_Channel.Package_Option",
            "select TV_Channel.Pixel_aspect_ratio_PAR, TV_Channel.series_name",
            "select TV_Channel.Pay_per_view_PPV, TV_Channel.series_name"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel",
        "table_candidates": [
            "TV_Channel",
            "TV_Channel TV_series"
        ],
        "align_scores": [
            0.9874318838119507,
            0.00014412486052606255,
            0.9894586801528931,
            0.0001520795631222427,
            0.0003948753292206675,
            9.042556484928355e-05,
            0.7070173621177673,
            0.0002130920474883169
        ],
        "align_select": "select TV_Channel.Package_Option, TV_Channel.series_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Who has earned more than 300000 in poker?",
        "gold_select": "select people.Name",
        "select_candidates": [
            "select people.Name",
            "select people.Name, people.Birth_Date",
            "select poker_player.People_ID",
            "select people.Name, people.Nationality"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "poker_player people",
        "table_candidates": [
            "poker_player",
            "poker_player people"
        ],
        "align_scores": [
            0.9802128672599792,
            0.0006555394502356648,
            0.00021971776732243598,
            0.00010638633830239996,
            0.019336175173521042,
            0.0006062952452339232,
            0.00036331062437966466,
            0.00011381884542061016
        ],
        "align_select": "select people.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the poker players whose earnings is over 300000?.",
        "gold_select": "select people.Name",
        "select_candidates": [
            "select poker_player.Poker_Player_ID",
            "select poker_player.Poker_Player_ID, poker_player.People_ID",
            "select poker_player.People_ID",
            "select poker_player.Poker_Player_ID, poker_player.Final_Table_Made"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "poker_player people",
        "table_candidates": [
            "poker_player"
        ],
        "align_scores": [
            0.0031264028511941433,
            0.0014317143941298127,
            0.00019538574269972742,
            8.886864088708535e-05,
            0.003611205844208598,
            0.0011727381497621536,
            0.0001441091881133616,
            7.541378727182746e-05
        ],
        "align_select": "select poker_player.Poker_Player_ID",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show me the poker players whose revenue is over 300,000.",
        "gold_select": "select people.Name",
        "select_candidates": [
            "select poker_player.Poker_Player_ID",
            "select poker_player.People_ID",
            "select poker_player.Poker_Player_ID, poker_player.People_ID",
            "select poker_player.Poker_Player_ID, poker_player.Earnings"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "poker_player people",
        "table_candidates": [
            "poker_player"
        ],
        "align_scores": [
            0.0032302653416991234,
            0.0005914740613661706,
            0.006005547940731049,
            0.0004994896007701755,
            0.00017932403716258705,
            8.69392606546171e-05,
            0.00018041204020846635,
            7.811238174326718e-05
        ],
        "align_select": "select poker_player.Poker_Player_ID",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Who has earned more than $300000 playing poker?",
        "gold_select": "select people.Name",
        "select_candidates": [
            "select people.Name",
            "select poker_player.People_ID",
            "select people.Name, people.Birth_Date",
            "select poker_player.People_ID, people.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "poker_player people",
        "table_candidates": [
            "poker_player",
            "poker_player people"
        ],
        "align_scores": [
            0.9680533409118652,
            0.002138417912647128,
            0.035909589380025864,
            0.001160331186838448,
            0.00023458049690816551,
            0.00012028239871142432,
            0.0006003031739965081,
            0.000143803350511007
        ],
        "align_select": "select people.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What poker player earn more than 300000?",
        "gold_select": "select people.Name",
        "select_candidates": [
            "select poker_player.Poker_Player_ID",
            "select poker_player.Poker_Player_ID, poker_player.Earnings",
            "select poker_player.Poker_Player_ID, poker_player.People_ID",
            "select poker_player.Poker_Player_ID, poker_player.Poker_Player_ID"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "poker_player people",
        "table_candidates": [
            "poker_player"
        ],
        "align_scores": [
            0.0028577609919011593,
            0.00026150280609726906,
            0.00019059679470956326,
            6.55543408356607e-05,
            0.00016711839998606592,
            7.28074592188932e-05,
            0.0004222465504426509,
            0.0001338264555670321
        ],
        "align_select": "select poker_player.Poker_Player_ID",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List poker players whose earnings are more than 30000",
        "gold_select": "select people.Name",
        "select_candidates": [
            "select poker_player.Poker_Player_ID",
            "select poker_player.Poker_Player_ID, poker_player.Earnings",
            "select poker_player.Poker_Player_ID, poker_player.People_ID",
            "select poker_player.Poker_Player_ID, poker_player.Final_Table_Made"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "poker_player people",
        "table_candidates": [
            "poker_player"
        ],
        "align_scores": [
            0.0019835331477224827,
            0.00020929555466864258,
            0.00016961894289124757,
            8.021305256988853e-05,
            0.00017350740381516516,
            8.825065015116706e-05,
            0.00012040679575875401,
            7.197596278274432e-05
        ],
        "align_select": "select poker_player.Poker_Player_ID",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Name those poker players who have made over 300000.",
        "gold_select": "select people.Name",
        "select_candidates": [
            "select people.Name",
            "select poker_player.People_ID",
            "select poker_player.People_ID, people.Name",
            "select people.Name, people.Birth_Date"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "poker_player people",
        "table_candidates": [
            "poker_player people",
            "poker_player"
        ],
        "align_scores": [
            0.928482711315155,
            0.00047551855095662177,
            0.01144368015229702,
            0.00019052681454923004,
            0.00026377924950793386,
            8.065522706601769e-05,
            0.00018707127310335636,
            7.425956573570147e-05
        ],
        "align_select": "select people.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which poker players have earned more than 300000?",
        "gold_select": "select people.Name",
        "select_candidates": [
            "select poker_player.Poker_Player_ID",
            "select poker_player.Poker_Player_ID, poker_player.People_ID",
            "select poker_player.People_ID",
            "select poker_player.Poker_Player_ID, poker_player.Final_Table_Made"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "poker_player people",
        "table_candidates": [
            "poker_player"
        ],
        "align_scores": [
            0.0028746153693646193,
            0.0002929494366981089,
            0.0001902090007206425,
            7.465134694939479e-05,
            0.009412749670445919,
            0.000348723609931767,
            0.00012815046648029238,
            6.381405546562746e-05
        ],
        "align_select": "select poker_player.Poker_Player_ID",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What Poker players have earned more than $300000?",
        "gold_select": "select people.Name",
        "select_candidates": [
            "select poker_player.Poker_Player_ID",
            "select poker_player.Poker_Player_ID, poker_player.People_ID",
            "select poker_player.Poker_Player_ID, poker_player.Earnings",
            "select poker_player.Poker_Player_ID, poker_player.Final_Table_Made"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "poker_player people",
        "table_candidates": [
            "poker_player"
        ],
        "align_scores": [
            0.0030703083612024784,
            0.00032299247686751187,
            0.00019876971782650799,
            7.634460052940995e-05,
            0.00020319338364060968,
            7.176049257395789e-05,
            0.0001391522673657164,
            6.407832552213222e-05
        ],
        "align_select": "select poker_player.Poker_Player_ID",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show who's nationality is not Russia.",
        "gold_select": "select people.Name",
        "select_candidates": [
            "select people.Name",
            "select people.People_ID",
            "select people.Name, people.Birth_Date",
            "select people.People_ID, people.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "people",
        "table_candidates": [
            "people"
        ],
        "align_scores": [
            0.9934608936309814,
            0.000519806519150734,
            0.009150463156402111,
            0.0017189783975481987,
            0.00026178365806117654,
            8.261036418844014e-05,
            0.0004951200098730624,
            9.927042265189812e-05
        ],
        "align_select": "select people.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show people without Russian as their nationality.",
        "gold_select": "select people.Name",
        "select_candidates": [
            "select people.People_ID",
            "select people.Name",
            "select people.People_ID, people.Name",
            "select people.Nationality"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "people",
        "table_candidates": [
            "people"
        ],
        "align_scores": [
            0.005580973345786333,
            0.0029891803860664368,
            0.006206057965755463,
            0.9271490573883057,
            0.00017278676386922598,
            0.0002910760813392699,
            0.8883005976676941,
            0.555763840675354
        ],
        "align_select": "select people.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "When was the poker player born with the lowest earnings?",
        "gold_select": "select people.Birth_Date",
        "select_candidates": [
            "select people.Birth_Date",
            "select people.Birth_Date, people.Height",
            "select people.People_ID, people.Birth_Date",
            "select people.Birth_Date, people.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "poker_player people",
        "table_candidates": [
            "poker_player people"
        ],
        "align_scores": [
            0.9892353415489197,
            0.0001356454158667475,
            0.00020645023323595524,
            7.177342922659591e-05,
            0.0003857545671053231,
            7.592307520098984e-05,
            0.001117113046348095,
            7.601261313538998e-05
        ],
        "align_select": "select people.Birth_Date",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "When was the low-earning poker player born?",
        "gold_select": "select people.Birth_Date",
        "select_candidates": [
            "select people.Birth_Date",
            "select people.Birth_Date, people.Name",
            "select people.Birth_Date, people.Height",
            "select people.Nationality, people.Birth_Date"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "poker_player people",
        "table_candidates": [
            "poker_player people"
        ],
        "align_scores": [
            0.9601081609725952,
            0.9473906755447388,
            0.0002905184810515493,
            0.00013771596422884613,
            0.00015795323997735977,
            0.00012943640467710793,
            0.000183682786882855,
            0.00014162983279675245
        ],
        "align_select": "select people.Birth_Date",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Who are the poker players?",
        "gold_select": "select people.Name",
        "select_candidates": [
            "select distinct people.Name",
            "select poker_player.People_ID",
            "select people.Name",
            "select distinct people.Name, people.Birth_Date"
        ],
        "select_labels": [
            0.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "poker_player people",
        "table_candidates": [
            "poker_player people",
            "poker_player"
        ],
        "align_scores": [
            0.4587886929512024,
            0.0008487805025652051,
            0.005980335641652346,
            0.0016297053080052137,
            0.8607835173606873,
            0.431655615568161,
            0.000392322224797681,
            0.0001537804346298799
        ],
        "align_select": "select people.Name",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "Who are poker players?",
        "gold_select": "select people.Name",
        "select_candidates": [
            "select distinct people.Name",
            "select distinct people.Name, people.Birth_Date",
            "select people.Name",
            "select distinct people.Name, people.Height"
        ],
        "select_labels": [
            0.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "poker_player people",
        "table_candidates": [
            "poker_player people",
            "people poker_player people"
        ],
        "align_scores": [
            0.5144714713096619,
            0.002368750050663948,
            0.0004953470779582858,
            0.0002397993375780061,
            0.9797325134277344,
            0.957135796546936,
            0.00030925837927497923,
            0.0002806821430567652
        ],
        "align_select": "select people.Name",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "Name the poker players.",
        "gold_select": "select people.Name",
        "select_candidates": [
            "select people.Name",
            "select poker_player.People_ID",
            "select distinct people.Name",
            "select poker_player.Final_Table_Made"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "poker_player people",
        "table_candidates": [
            "poker_player people"
        ],
        "align_scores": [
            0.9504435658454895,
            0.0333242267370224,
            0.002435843925923109,
            0.0005214280099608004,
            0.18399256467819214,
            0.00031773498631082475,
            0.04302451014518738,
            0.0018962140893563628
        ],
        "align_select": "select people.Name",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What are non-Russian people called.",
        "gold_select": "select people.Name",
        "select_candidates": [
            "select people.Name",
            "select people.Name, people.Nationality",
            "select people.Name, people.Birth_Date",
            "select people.Name (or people.Birth_Date)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "people",
        "table_candidates": [
            "people"
        ],
        "align_scores": [
            0.9912791848182678,
            9.220502397511154e-05,
            0.00014802042278461158,
            6.167436367832124e-05,
            0.0001340746384812519,
            5.306895764078945e-05,
            0.00038593701901845634,
            6.718212534906343e-05
        ],
        "align_select": "select people.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Who are people from that is not Russia?",
        "gold_select": "select people.Name",
        "select_candidates": [
            "select people.Name",
            "select people.Name, people.Birth_Date",
            "select people.Name, people.Nationality",
            "select people.Name, people.Height"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "people",
        "table_candidates": [
            "people"
        ],
        "align_scores": [
            0.99382483959198,
            0.00015050711226649582,
            0.00020325073273852468,
            6.522254989249632e-05,
            0.0002293426514370367,
            6.983353523537517e-05,
            0.00017510192992631346,
            6.13290467299521e-05
        ],
        "align_select": "select people.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "When was the born of the poker player with the lowest earnings?",
        "gold_select": "select people.Birth_Date",
        "select_candidates": [
            "select people.Birth_Date",
            "select people.Birth_Date, people.Height",
            "select people.Nationality, people.Birth_Date",
            "select people.Birth_Date, people.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "poker_player people",
        "table_candidates": [
            "poker_player people"
        ],
        "align_scores": [
            0.9333207011222839,
            0.00010431673581479117,
            0.00020436479826457798,
            7.85226802690886e-05,
            0.0003050532832276076,
            7.501428626710549e-05,
            0.00035334931453689933,
            7.157050276873633e-05
        ],
        "align_select": "select people.Birth_Date",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Name poker players, listed from most number of final table in descending order",
        "gold_select": "select people.Name",
        "select_candidates": [
            "select people.Name",
            "select people.Name, poker_player.Poker_Player_ID",
            "select people.Name, poker_player.People_ID",
            "select people.Name, poker_player.Best_Finish"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "poker_player people",
        "table_candidates": [
            "poker_player people"
        ],
        "align_scores": [
            0.8259289264678955,
            0.06477458775043488,
            0.00016829193918965757,
            0.00015879375860095024,
            0.00014551928325090557,
            0.00014458788791671395,
            0.00034455349668860435,
            0.0004963224637322128
        ],
        "align_select": "select people.Name",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Show list of people that are not poker players.",
        "gold_select": "select people.Name",
        "select_candidates": [
            "select people.Name",
            "select distinct people.Name",
            "select people.Name, people.Birth_Date",
            "select people.People_ID, people.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "people",
        "table_candidates": [
            "people",
            "poker_player people"
        ],
        "align_scores": [
            0.5659151077270508,
            0.961409866809845,
            0.005503613036125898,
            0.02557198517024517,
            0.0002976747928187251,
            0.00018527943757362664,
            0.00018817975069396198,
            0.00023269993835128844
        ],
        "align_select": "select people.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show list of non-poker people.",
        "gold_select": "select people.Name",
        "select_candidates": [
            "select people.Name",
            "select distinct people.Name",
            "select people.Name, people.Nationality",
            "select non-poker people.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "people",
        "table_candidates": [
            "people",
            "poker_player people"
        ],
        "align_scores": [
            0.9948451519012451,
            0.04869364574551582,
            0.016557732596993446,
            0.0019250172190368176,
            0.00013661936100106686,
            0.00028547222609631717,
            0.0045835417695343494,
            0.00021066459885332733
        ],
        "align_select": "select people.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "list people who do not play poker.",
        "gold_select": "select people.Name",
        "select_candidates": [
            "select people.Name",
            "select people.People_ID, people.Name",
            "select people.Name, people.Birth_Date",
            "select people.Name, people.Nationality"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "people",
        "table_candidates": [
            "people",
            "poker_player people",
            "people poker_player people"
        ],
        "align_scores": [
            0.9601767063140869,
            0.6675194501876831,
            0.0003380629059392959,
            0.00021067564375698566,
            0.00020352163119241595,
            0.0001923167728818953,
            0.0001844555517891422,
            0.00021178882161621004
        ],
        "align_select": "select people.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Who are not Poker players!",
        "gold_select": "select people.Name",
        "select_candidates": [
            "select people.Name",
            "select distinct people.Name",
            "select people.Name, people.Birth_Date",
            "select people.Name, people.Height"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "people",
        "table_candidates": [
            "people",
            "poker_player people",
            "people poker_player people"
        ],
        "align_scores": [
            0.9180948734283447,
            0.9923742413520813,
            0.028240885585546494,
            0.0982426255941391,
            0.00026697301655076444,
            0.0003586029342841357,
            0.00012781121768057346,
            0.00012322302791289985
        ],
        "align_select": "select people.Name",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM"
    },
    {
        "question": "Who don't play poker?",
        "gold_select": "select people.Name",
        "select_candidates": [
            "select people.Name",
            "select people.Name, people.Birth_Date",
            "select people.Name, people.Height",
            "select people.People_ID, people.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "people",
        "table_candidates": [
            "people",
            "poker_player people"
        ],
        "align_scores": [
            0.8827475905418396,
            0.921354353427887,
            0.00020947563461959362,
            0.00018296627968084067,
            0.00012594096187967807,
            0.00015905001782812178,
            0.00019230888574384153,
            0.00023957765370141715
        ],
        "align_select": "select people.Name",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM"
    },
    {
        "question": "Show the list of poker players ranked by earnings descending.",
        "gold_select": "select people.Name",
        "select_candidates": [
            "select poker_player.Poker_Player_ID",
            "select poker_player.Poker_Player_ID, poker_player.Earnings",
            "select poker_player.Poker_Player_ID, poker_player.Earnings, poker_player.Money_Rank",
            "select poker_player.Poker_Player_ID, sort(poker_player.Earnings)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "poker_player people",
        "table_candidates": [
            "poker_player"
        ],
        "align_scores": [
            0.001204491825774312,
            0.00012947159120813012,
            0.00014193983224686235,
            9.249553841073066e-05,
            0.00012163846258772537,
            8.850667654769495e-05,
            0.0001049371057888493,
            0.00012889178469777107
        ],
        "align_select": "select poker_player.Poker_Player_ID",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "Who does not play poker?",
        "gold_select": "select people.Name",
        "select_candidates": [
            "select people.Name",
            "select people.Name, people.Birth_Date",
            "select people.Name, people.Height",
            "select people.People_ID, people.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "people",
        "table_candidates": [
            "people",
            "poker_player people"
        ],
        "align_scores": [
            0.8264820575714111,
            0.9902329444885254,
            0.00022230505419429392,
            0.0002528714539948851,
            0.00013739995483774692,
            0.00012984240311197937,
            0.00025186786660924554,
            0.00028868598747067153
        ],
        "align_select": "select people.Name",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM"
    },
    {
        "question": "Name all the poker players",
        "gold_select": "select people.Name",
        "select_candidates": [
            "select people.Name",
            "select distinct people.Name",
            "select people.Name, poker_player.People_ID",
            "select poker_player.Poker_Player_ID, people.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "poker_player people",
        "table_candidates": [
            "poker_player people"
        ],
        "align_scores": [
            0.9507622718811035,
            0.025578128173947334,
            0.37435001134872437,
            0.0003320314863231033,
            0.00018724118126556277,
            0.00013994092296343297,
            0.00028891616966575384,
            0.00025831948732957244
        ],
        "align_select": "select people.Name",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "Give me list of people playing poker.",
        "gold_select": "select people.Name",
        "select_candidates": [
            "select distinct poker_player.People_ID",
            "select poker_player.People_ID",
            "select distinct poker_player.People_ID, people.Name",
            "select distinct people.Name"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "poker_player people",
        "table_candidates": [
            "poker_player people",
            "poker_player"
        ],
        "align_scores": [
            0.05027811974287033,
            0.00046759319957345724,
            0.008029669523239136,
            0.00575408898293972,
            0.000396592979086563,
            0.00018718744104262441,
            0.20925982296466827,
            0.0007819466991350055
        ],
        "align_select": "select distinct poker_player.People_ID",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "Give me the list of all the Poker players.",
        "gold_select": "select people.Name",
        "select_candidates": [
            "select poker_player.People_ID",
            "select distinct poker_player.People_ID",
            "select poker_player.Poker_Player_ID",
            "select distinct poker_player.Poker_Player_ID"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "poker_player people",
        "table_candidates": [
            "poker_player",
            "poker_player people"
        ],
        "align_scores": [
            0.0013558522332459688,
            0.0007691398495808244,
            0.010832530446350574,
            0.00027746797422878444,
            0.0013241557171568274,
            0.0005473183118738234,
            0.0057603283785283566,
            0.00022265040024649352
        ],
        "align_select": "select poker_player.People_ID",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "Show list of poker players",
        "gold_select": "select people.Name",
        "select_candidates": [
            "select poker_player.People_ID",
            "select poker_player.Poker_Player_ID",
            "select poker_player.Poker_Player_ID, poker_player.People_ID",
            "select poker_player.Poker_Player_ID, people.Name"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "poker_player people",
        "table_candidates": [
            "poker_player",
            "poker_player people"
        ],
        "align_scores": [
            0.0008957035606727004,
            0.0007196602527983487,
            0.00047739926958456635,
            0.0004011272103525698,
            0.0001328117650700733,
            0.00012213696027174592,
            0.00023742602206766605,
            0.00022776103287469596
        ],
        "align_select": "select poker_player.People_ID",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "list poker players that made final tables ranked from least to most.",
        "gold_select": "select people.Name",
        "select_candidates": [
            "select poker_player.Poker_Player_ID",
            "select poker_player.Poker_Player_ID, poker_player.Final_Table_Made",
            "select poker_player.Poker_Player_ID, poker_player.Final_Table_Made, poker_player.Money_Rank",
            "select poker_player.Poker_Player_ID, poker_player.Final_Table_Made, poker_player.Best_Finish"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-WHERE-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "poker_player people",
        "table_candidates": [
            "poker_player"
        ],
        "align_scores": [
            0.010489575564861298,
            0.012327400967478752,
            0.0001388366799801588,
            0.00012234084715601057,
            0.00010804337944136932,
            9.859466808848083e-05,
            0.00011640950106084347,
            0.00011050069588236511
        ],
        "align_select": "select poker_player.Poker_Player_ID",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "Show lists of poker players ranked according to the final table made in order",
        "gold_select": "select people.Name",
        "select_candidates": [
            "select poker_player.Poker_Player_ID, poker_player.Final_Table_Made",
            "select poker_player.Final_Table_Made",
            "select poker_player.People_ID, poker_player.Final_Table_Made",
            "select poker_player.Poker_Player_ID"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "poker_player people",
        "table_candidates": [
            "poker_player"
        ],
        "align_scores": [
            0.00010689663758967072,
            0.00010689663758967072,
            0.892767071723938,
            0.892767071723938,
            0.00012110793613828719,
            0.00012110793613828719,
            0.0008927343296818435,
            0.0008927343296818435
        ],
        "align_select": "select poker_player.Final_Table_Made",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "Which contestants do not have the name \"Jessie Alloway\"?",
        "gold_select": "select CONTESTANTS.contestant_name",
        "select_candidates": [
            "select CONTESTANTS.contestant_number",
            "select CONTESTANTS.contestant_name",
            "select CONTESTANTS.contestant_number, CONTESTANTS.contestant_name",
            "select CONTESTANTS.contestant_number, CONTESTANTS.contestant_name"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "CONTESTANTS",
        "table_candidates": [
            "CONTESTANTS",
            "CONTESTANTS VOTES"
        ],
        "align_scores": [
            0.002858601976186037,
            0.021357063204050064,
            0.38419055938720703,
            0.17604920268058777,
            8.647490903967991e-05,
            0.00017927309090737253,
            8.647490903967991e-05,
            0.00017927309090737253
        ],
        "align_select": "select CONTESTANTS.contestant_name",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "Find the contestants whose names are not 'Jessie Alloway'.",
        "gold_select": "select CONTESTANTS.contestant_name",
        "select_candidates": [
            "select CONTESTANTS.contestant_name",
            "select CONTESTANTS.contestant_number",
            "select CONTESTANTS.contestant_number, CONTESTANTS.contestant_name",
            "select distinct CONTESTANTS.contestant_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "CONTESTANTS",
        "table_candidates": [
            "CONTESTANTS"
        ],
        "align_scores": [
            0.3742520213127136,
            0.04490784928202629,
            0.004871932324022055,
            0.0016043726354837418,
            0.0001910970313474536,
            9.911492088576779e-05,
            0.08511193841695786,
            0.04580874741077423
        ],
        "align_select": "select CONTESTANTS.contestant_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which contestants don't have the name Jessie Alloway",
        "gold_select": "select CONTESTANTS.contestant_name",
        "select_candidates": [
            "select CONTESTANTS.contestant_number",
            "select CONTESTANTS.contestant_name",
            "select CONTESTANTS.contestant_number, CONTESTANTS.contestant_name",
            "select CONTESTANTS.contestant_number, CONTESTANTS.contestant_name"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "CONTESTANTS",
        "table_candidates": [
            "CONTESTANTS"
        ],
        "align_scores": [
            0.06463935971260071,
            0.0009029081556946039,
            0.9549696445465088,
            0.0017457788344472647,
            9.837951074587181e-05,
            0.00010354904225096107,
            9.837951074587181e-05,
            0.00010354904225096107
        ],
        "align_select": "select CONTESTANTS.contestant_name",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "Who are contestants whose names are not 'Jessie Alloway'?",
        "gold_select": "select CONTESTANTS.contestant_name",
        "select_candidates": [
            "select CONTESTANTS.contestant_name",
            "select CONTESTANTS.contestant_number",
            "select CONTESTANTS.contestant_number, CONTESTANTS.contestant_name",
            "select distinct CONTESTANTS.contestant_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "CONTESTANTS",
        "table_candidates": [
            "CONTESTANTS",
            "CONTESTANTS VOTES"
        ],
        "align_scores": [
            0.9222602248191833,
            0.00012620555935427547,
            0.0013530203141272068,
            9.579635661793873e-05,
            0.00017404758546035737,
            6.529586244141683e-05,
            0.045085884630680084,
            0.00018579885363578796
        ],
        "align_select": "select CONTESTANTS.contestant_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return contestants names containing Al",
        "gold_select": "select CONTESTANTS.contestant_name",
        "select_candidates": [
            "select CONTESTANTS.contestant_name",
            "select CONTESTANTS.contestant_name, AREA_CODE_STATE.state",
            "select CONTESTANTS.contestant_name, t1.c2",
            "select CONTESTANTS.contestant_name, t0.c2"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "CONTESTANTS",
        "table_candidates": [
            "AREA_CODE_STATE CONTESTANTS",
            "AREA_CODE_STATE CONTESTANTS VOTES"
        ],
        "align_scores": [
            0.99276202917099,
            6.936516729183495e-05,
            0.0001415315637132153,
            6.326351285679266e-05,
            0.00043967607780359685,
            6.529704842250794e-05,
            0.0002844289701897651,
            6.309325544862077e-05
        ],
        "align_select": "select CONTESTANTS.contestant_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Who are the 5 largest countries and their sizes?",
        "gold_select": "select country.Name, country.SurfaceArea",
        "select_candidates": [
            "select country.Name, country.SurfaceArea",
            "select country.Code, country.Name, country.SurfaceArea",
            "select country.Name, country.SurfaceArea, country.Population",
            "select country.Name, country.Region"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9938470721244812,
            8.047637675190344e-05,
            0.0012594664003700018,
            6.305794522631913e-05,
            0.001044290023855865,
            6.052942626411095e-05,
            0.00035893727908842266,
            7.22320910426788e-05
        ],
        "align_select": "select country.Name, country.SurfaceArea",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Name countries speak both english and french?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, countrylanguage.Language",
            "select country.Name, countrylanguage.CountryCode",
            "select country.Name, country.Code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.9951916933059692,
            0.00023717466683592647,
            0.0002945549786090851,
            0.00012253440218046308,
            0.0001827082596719265,
            0.00012205954408273101,
            0.00014631488011218607,
            0.00011000655649695545
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "What countries are there that speak both English and French?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, countrylanguage.CountryCode",
            "select country.Name, country.Code",
            "select countrylanguage.Language, country.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "countrylanguage",
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence countrylanguage",
            "sqlite_sequence country countrylanguage",
            "countrylanguage country countrylanguage",
            "city countrylanguage"
        ],
        "align_scores": [
            0.9947938323020935,
            0.0012327724834904075,
            0.0005729789845645428,
            0.0002436801587464288,
            0.00047662490396760404,
            0.0002314722369192168,
            0.0002685289364308119,
            0.00014675670536234975
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "What countries have English and French as their languages?.",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, countrylanguage.CountryCode",
            "select country.Name, country.Continent",
            "select country.Name, country.Code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.9959596991539001,
            0.001188320922665298,
            0.0005919652758166194,
            0.0001801219186745584,
            0.00017929157183971256,
            0.00010081335494760424,
            0.0005496630328707397,
            0.0001294191461056471
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "Name nations speaking both English and French.",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, countrylanguage.Language",
            "select country.Name, countrylanguage.CountryCode",
            "select country.Name, country.Code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.9956833124160767,
            0.00022784463362768292,
            0.00024015673261601478,
            0.00010480869968887419,
            0.00024372801999561489,
            0.00011701637413352728,
            0.00017367872351314873,
            0.00012009936472168192
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "Name Nations that speak both English and French.",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, countrylanguage.Language",
            "select country.Name, countrylanguage.CountryCode",
            "select countrylanguage.Language, country.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.9946861267089844,
            0.0004001652996521443,
            0.00022184134286362678,
            0.00014067314623389393,
            0.0002518424007575959,
            0.00014700305473525077,
            0.00020509917521849275,
            0.00012632137804757804
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "How long do people live in countries where English is not the official language?",
        "gold_select": "select avg(country.LifeExpectancy)",
        "select_candidates": [
            "select country.LifeExpectancy",
            "select country.Code, country.LifeExpectancy",
            "select max(country.LifeExpectancy)",
            "select avg(country.LifeExpectancy)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence countrylanguage",
            "country"
        ],
        "align_scores": [
            0.9697191715240479,
            0.00011474502389319241,
            0.00039577283314429224,
            7.361864118138328e-05,
            0.03628786653280258,
            7.683671719860286e-05,
            0.9332981705665588,
            7.568612636532634e-05
        ],
        "align_select": "select country.LifeExpectancy",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How long do people live in countries where English isn't the official language?",
        "gold_select": "select avg(country.LifeExpectancy)",
        "select_candidates": [
            "select country.LifeExpectancy",
            "select country.Code, country.LifeExpectancy",
            "select max(country.LifeExpectancy)",
            "select avg(country.LifeExpectancy)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence countrylanguage",
            "country"
        ],
        "align_scores": [
            0.9690964221954346,
            0.00012421340215951204,
            0.00044138423982076347,
            7.492092117900029e-05,
            0.05782113969326019,
            7.974674372235313e-05,
            0.9436705112457275,
            7.811356772435829e-05
        ],
        "align_select": "select country.LifeExpectancy",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How long do people live in the countries where English isn't the official language?",
        "gold_select": "select avg(country.LifeExpectancy)",
        "select_candidates": [
            "select country.LifeExpectancy",
            "select max(country.LifeExpectancy)",
            "select country.Code, country.LifeExpectancy",
            "select avg(country.LifeExpectancy)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "sqlite_sequence countrylanguage",
            "country"
        ],
        "align_scores": [
            0.9747282862663269,
            0.0001237278920598328,
            0.02304326556622982,
            7.867491513025016e-05,
            0.00047869206173345447,
            7.528028800152242e-05,
            0.9184414744377136,
            7.862983329687268e-05
        ],
        "align_select": "select country.LifeExpectancy",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the three most populous countries?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Code",
            "select country.Name, country.Capital",
            "select country.Name, country.Population"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9948863387107849,
            5.322555807651952e-05,
            0.0069008637219667435,
            5.867318031960167e-05,
            0.00040638577775098383,
            5.352307198336348e-05,
            0.0006748838350176811,
            5.718006650567986e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What nations are the three most populous",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Capital",
            "select country.Name, country.HeadOfState",
            "select country.Code, country.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9907681345939636,
            5.350474748411216e-05,
            0.00047054962487891316,
            5.5826174502726644e-05,
            0.0003297526272945106,
            5.774034434580244e-05,
            0.02098694071173668,
            6.052908065612428e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "List the 3 most populous countries.",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Capital",
            "select country.Name, country.Population",
            "select country.Name, country.HeadOfState"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9940547347068787,
            5.0555452617118135e-05,
            0.0003255851333960891,
            5.4886870202608407e-05,
            0.0006689955480396748,
            5.431546378531493e-05,
            0.00022092292783781886,
            5.2678842621389776e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Tell us how long is a persons life on avergae if they live in a country where English is not the official language,",
        "gold_select": "select avg(country.LifeExpectancy)",
        "select_candidates": [
            "select avg(country.LifeExpectancy)",
            "select avergae(country.LifeExpectancy)",
            "select avg(country.LifeExpectancy), countrylanguage.Language",
            "select avg(country.LifeExpectancy), country.Code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.9936796426773071,
            0.00037919910391792655,
            0.006401843391358852,
            0.00027671584393829107,
            0.00017454868066124618,
            0.0001895998721010983,
            0.0001958850771188736,
            0.00029012656887061894
        ],
        "align_select": "select avg(country.LifeExpectancy)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How long do people live in countries where English is not their official tongue?",
        "gold_select": "select avg(country.LifeExpectancy)",
        "select_candidates": [
            "select country.LifeExpectancy",
            "select country.Code, country.LifeExpectancy",
            "select max(country.LifeExpectancy)",
            "select avg(country.LifeExpectancy)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "sqlite_sequence countrylanguage",
            "country"
        ],
        "align_scores": [
            0.9380718469619751,
            0.00012030339712509885,
            0.0004451651475392282,
            7.231706695165485e-05,
            0.06158149987459183,
            8.056544902501628e-05,
            0.9447592496871948,
            7.813643605913967e-05
        ],
        "align_select": "select country.LifeExpectancy",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How long do people live in those places that English isn't the official language?",
        "gold_select": "select avg(country.LifeExpectancy)",
        "select_candidates": [
            "select country.LifeExpectancy",
            "select country.Code, country.LifeExpectancy",
            "select max(country.LifeExpectancy)",
            "select avg(country.LifeExpectancy)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "sqlite_sequence countrylanguage",
            "country"
        ],
        "align_scores": [
            0.8849738836288452,
            0.00011710770195350051,
            0.00036160400486551225,
            7.02259421814233e-05,
            0.017919996753335,
            8.2401093095541e-05,
            0.6663116812705994,
            7.729235221631825e-05
        ],
        "align_select": "select country.LifeExpectancy",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Name of the country that has the largest area? Population and head of state?",
        "gold_select": "select country.Name, country.Population, country.HeadOfState",
        "select_candidates": [
            "select country.Name, country.Population, country.HeadOfState",
            "select country.Name, country.HeadOfState",
            "select country.Name, country.Code6, country.HeadOfState",
            "select country.Name, country.IndepYear, country.HeadOfState"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9009541273117065,
            7.556553464382887e-05,
            0.6672923564910889,
            8.178156713256612e-05,
            0.0003323861747048795,
            8.936424273997545e-05,
            0.00020642028539441526,
            7.6086595072411e-05
        ],
        "align_select": "select country.Name, country.Population, country.HeadOfState",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Tell me the country with the lowest life expectancy in Asia.",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Continent",
            "select country.Name, country.Code",
            "select country.Name, country.LifeExpectancy"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9923701286315918,
            0.00029831635765731335,
            0.0003100891481153667,
            0.00013059793855063617,
            0.0033756529446691275,
            0.00015611539129167795,
            0.0009816160891205072,
            0.00010466985986568034
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT"
    },
    {
        "question": "Which country in Asia has the lowest life expectancy?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Continent",
            "select country.Name, country.Population",
            "select country.Name, country.Region"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9932867884635925,
            0.00023942968982737511,
            0.00034670979948714375,
            0.0001082007001969032,
            0.00024729015422053635,
            8.215598063543439e-05,
            0.00026354697183705866,
            9.640751522965729e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT"
    },
    {
        "question": "Name the country in Asia with the lowest life expectancy.",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Continent",
            "select country.Name, country.Population",
            "select country.Name, country.Region"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9925264120101929,
            0.00023783721553627402,
            0.0002577457926236093,
            0.00010989185830112547,
            0.00019933284784201533,
            8.12069556559436e-05,
            0.00022074060689192265,
            9.50764151639305e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT"
    },
    {
        "question": "Which country in asia has the lowest life expectancy?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Continent",
            "select country.Name, country.Population",
            "select country.Code, country.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9932867884635925,
            0.00023942968982737511,
            0.00034670979948714375,
            0.0001082007001969032,
            0.00024729015422053635,
            8.215598063543439e-05,
            0.005188989453017712,
            0.00014142227882985026
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT"
    },
    {
        "question": "Tell the country in asia with the lowest life expectancy.",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Continent",
            "select country.Name, country.Population",
            "select country.Code, country.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9926542043685913,
            0.00025255559012293816,
            0.0002990590292029083,
            0.00011742851347662508,
            0.00022605060075875372,
            8.409174188273028e-05,
            0.002777906134724617,
            0.00015577026351820678
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT"
    },
    {
        "question": "Which country has most language spoken?.",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, countrylanguage.CountryCode",
            "select country.Name, country.Capital",
            "select country.Name, country.Code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9928311109542847,
            7.843145431252196e-05,
            0.0036137327551841736,
            8.034265192691237e-05,
            0.00023040630912873894,
            5.790846989839338e-05,
            0.0017212432576343417,
            7.757841376587749e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Which country speaks the most number of different language?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, countrylanguage.CountryCode",
            "select country.Name, countrylanguage.Language",
            "select country.Name, country.Capital"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.9864867925643921,
            6.270506128203124e-05,
            0.005480366293340921,
            8.836955385049805e-05,
            0.0012110602110624313,
            6.711394235026091e-05,
            0.0003124874201603234,
            5.8089390222448856e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What country has the largest number of languages as spoken?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, countrylanguage.CountryCode",
            "select country.Name, countrylanguage.Language",
            "select country.Name, country.Capital"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.9904029369354248,
            7.560331141576171e-05,
            0.006331615149974823,
            8.010832243598998e-05,
            0.0008593803504481912,
            5.98786209593527e-05,
            0.0003227815614081919,
            5.985600728308782e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Name of country which speaks the most languages.",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, countrylanguage.CountryCode",
            "select country.Name, countrylanguage.Language",
            "select country.Name, country.Capital"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage"
        ],
        "align_scores": [
            0.9950205087661743,
            8.470329339616e-05,
            0.004053352400660515,
            8.109690679702908e-05,
            0.0010151125025004148,
            6.418805423891172e-05,
            0.00019816227722913027,
            5.937811511103064e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Which is the country that speaks the most langauges?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, countrylanguage.CountryCode",
            "select country.Name, countrylanguage.Language",
            "select country.Name, country.Capital"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.9930639863014221,
            7.577971700811759e-05,
            0.005483126733452082,
            9.80977201834321e-05,
            0.0011063329875469208,
            7.325812475755811e-05,
            0.0004721005097962916,
            6.281985406531021e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Which country has the most languages?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, countrylanguage.CountryCode",
            "select country.Name, country.Capital",
            "select country.Name, country.Code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.9947966933250427,
            6.288259464781731e-05,
            0.006170632783323526,
            7.556654600193724e-05,
            0.00019061623606830835,
            5.486813097377308e-05,
            0.0019804800394922495,
            6.891168595757335e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "The countries which became independent since 1950.",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select distinct country.Name",
            "select country.Name, country.Code",
            "select distinct country.Name, country.Code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9860776662826538,
            7.848263339838013e-05,
            0.09284553676843643,
            5.90661475143861e-05,
            0.0004976506461389363,
            6.92856265231967e-05,
            0.0016792245442047715,
            5.677202716469765e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Name all countries which got independence after 1950.",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select distinct country.Name",
            "select country.Name, country.Code",
            "select country.Name, country.Capital"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9904604554176331,
            0.00019908344256691635,
            0.07087627798318863,
            9.151519770966843e-05,
            0.00038144132122397423,
            7.57395537220873e-05,
            0.00016245996812358499,
            6.442832091124728e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Name all countries that became independent after 1950.",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select distinct country.Name",
            "select country.Name, country.Code",
            "select country.Name, country.Capital"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9907576441764832,
            0.00015354044444393367,
            0.06516488641500473,
            8.72724995133467e-05,
            0.0003520148457027972,
            7.234775694087148e-05,
            0.00017169967759400606,
            6.397740071406588e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the European cities that English is not their official language?.",
        "gold_select": "select distinct city.Name",
        "select_candidates": [
            "select city.Name",
            "select distinct city.Name",
            "select city.ID, city.Name",
            "select city.Name, country.Continent"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "city country countrylanguage",
        "table_candidates": [
            "city country countrylanguage"
        ],
        "align_scores": [
            0.78997403383255,
            0.027846628800034523,
            0.06885074824094772,
            0.025182774290442467,
            0.00032907899003475904,
            0.000203634612262249,
            0.0002843972761183977,
            0.0001850022963481024
        ],
        "align_select": "select city.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which European cities do not speak English as their official language?",
        "gold_select": "select distinct city.Name",
        "select_candidates": [
            "select city.Name",
            "select distinct city.Name",
            "select city.ID, city.Name",
            "select city.Name, country.Continent"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "city country countrylanguage",
        "table_candidates": [
            "city country countrylanguage"
        ],
        "align_scores": [
            0.6379021406173706,
            0.008345882408320904,
            0.11570769548416138,
            0.045067187398672104,
            0.00046764352009631693,
            0.0002221134927822277,
            0.00032524444395676255,
            0.00016176437202375382
        ],
        "align_select": "select city.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the 3 countries with fewest people?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Code",
            "select country.Name, country.Population",
            "select country.Code, country.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9912230968475342,
            6.240999209694564e-05,
            0.00669544143602252,
            6.573094287887216e-05,
            0.0007183726993389428,
            5.70944685023278e-05,
            0.01049888040870428,
            6.262868555495515e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Show the 3 countries with the least number of people.",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Code",
            "select country.Name, country.Population",
            "select country.Code, country.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9851106405258179,
            5.145231989445165e-05,
            0.008405257016420364,
            5.6198154197772965e-05,
            0.0005857062642462552,
            5.474536374094896e-05,
            0.011996353045105934,
            5.5112923291744664e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Which 3 countries have the fewest people?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Code",
            "select country.Name, country.Population",
            "select country.Name, country.Capital"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9901310205459595,
            5.727857205783948e-05,
            0.007232147268950939,
            6.212297012098134e-05,
            0.0006667874986305833,
            5.832585520693101e-05,
            0.0003382846771273762,
            5.723839421989396e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What are the three biggest countries in terms of population?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Population",
            "select country.Name, country.Code",
            "select country.Code, country.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9886958599090576,
            5.808922287542373e-05,
            0.0005775209283456206,
            6.111156108090654e-05,
            0.006839951034635305,
            6.078857768443413e-05,
            0.01065151672810316,
            6.0875474446220323e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Name the 3 largest country populations.",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Population",
            "select country.Name, country.Code",
            "select country.Code, country.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9927731156349182,
            4.9407288315705955e-05,
            0.0006153534050099552,
            5.266688822302967e-05,
            0.001973066246137023,
            5.301356577547267e-05,
            0.0024796121288090944,
            5.695590516552329e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Name the 3 biggest countries in population.",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Code",
            "select country.Name, country.Population",
            "select country.Name, country.Capital"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9897146821022034,
            5.172940291231498e-05,
            0.005400400608778,
            5.700595647795126e-05,
            0.0006395048694685102,
            5.467278970172629e-05,
            0.00023749121464788914,
            5.891083492315374e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What are the three biggest countries in population?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Code",
            "select country.Name, country.Population",
            "select country.Code, country.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9897326827049255,
            5.479194442159496e-05,
            0.00879720225930214,
            5.9361245803302154e-05,
            0.0005037910887040198,
            5.996742402203381e-05,
            0.012944461777806282,
            5.873340705875307e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Which country uses the largest number of languages?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, countrylanguage.CountryCode",
            "select country.Name, countrylanguage.Language",
            "select country.Name, country.Capital"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.9922922849655151,
            5.526138193090446e-05,
            0.005112051032483578,
            7.280113641172647e-05,
            0.0009169591940008104,
            5.7338475016877055e-05,
            0.000287692149868235,
            5.6121134548448026e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Which nation use the most languages",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, countrylanguage.CountryCode",
            "select country.Name, country.Capital",
            "select country.Name, countrylanguage.Language"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.9933562874794006,
            7.282140722963959e-05,
            0.005377643741667271,
            8.47402261570096e-05,
            0.00024990542442537844,
            6.016560655552894e-05,
            0.0011923550628125668,
            6.764506542822346e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Which nation uses the most languages",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, countrylanguage.CountryCode",
            "select country.Name, country.Capital",
            "select country.Name, countrylanguage.Language"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.9943324327468872,
            6.302614201558754e-05,
            0.007112518884241581,
            7.928745617391542e-05,
            0.0002411373716313392,
            5.834654803038575e-05,
            0.001241446123458445,
            6.417189433705062e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "List countries that speak more than two languages,and how many languages do they speak?",
        "gold_select": "select count(countrylanguage.Language), country.Name",
        "select_candidates": [
            "select country.Name, count(distinct countrylanguage.Language)",
            "select country.Name, count(countrylanguage.Language)",
            "select country.Name, country.Name, count(distinct countrylanguage.Language)",
            "select country.Name, count(distinct country.Name)"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.30217429995536804,
            9.738647349877283e-05,
            0.06304659694433212,
            8.462943515041843e-05,
            0.00020666765340138227,
            8.037437510211021e-05,
            0.0005382033414207399,
            7.65482836868614e-05
        ],
        "align_select": "select country.Name, count(distinct countrylanguage.Language)",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What country speak more than two languages? And what languages do they speak?",
        "gold_select": "select count(countrylanguage.Language), country.Name",
        "select_candidates": [
            "select country.Name, countrylanguage.Language",
            "select country.Name, country.Name",
            "select countrylanguage.Language, country.Name",
            "select country.Name.c1, countrylanguage.CountryCode"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage"
        ],
        "align_scores": [
            0.7881516814231873,
            0.00010197980736847967,
            0.0018968514632433653,
            8.026668365346268e-05,
            0.9760180711746216,
            9.597786993253976e-05,
            0.0005483950371854007,
            8.73327735462226e-05
        ],
        "align_select": "select country.Name, countrylanguage.Language",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "To which countries do language is spoken more than two, plus how many do each of them speak?",
        "gold_select": "select count(countrylanguage.Language), country.Name",
        "select_candidates": [
            "select country.Name, count(*)",
            "select country.Name, countrylanguage.Language",
            "select country.Name, countrylanguage.CountryCode, count(*)",
            "select countrylanguage.Language, count(*)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence countrylanguage",
            "countrylanguage"
        ],
        "align_scores": [
            0.8273503184318542,
            0.000120505690574646,
            0.2385062724351883,
            0.00022318768606055528,
            0.010735435411334038,
            0.00016373457037843764,
            0.7777743339538574,
            0.00011945610458496958
        ],
        "align_select": "select country.Name, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What nations have official language of both French and English?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, countrylanguage.CountryCode",
            "select country.Name, country.Code",
            "select country.Name, country.Continent"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "countrylanguage",
            "sqlite_sequence country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.9953044652938843,
            0.001227482222020626,
            0.0006173189030960202,
            0.00026664690813049674,
            0.0004903756780549884,
            0.00028867111541330814,
            0.0001639164111111313,
            0.00013574220065493137
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "Which nations have both English and French as official language?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, countrylanguage.CountryCode",
            "select country.Name, country.Continent",
            "select country.Name, country.Code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.9946697354316711,
            0.0012346419971436262,
            0.0006316635408438742,
            0.00027051320648752153,
            0.00016493580187670887,
            0.00012875556421931833,
            0.0006239812355488539,
            0.0003062816394958645
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "list all the cities with population in between160000 and 900000.",
        "gold_select": "select city.Name",
        "select_candidates": [
            "select city.Name",
            "select city.ID, city.Name",
            "select city.Name, city.District",
            "select city.Name, city.CountryCode"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "city",
        "table_candidates": [
            "city"
        ],
        "align_scores": [
            0.10534092783927917,
            0.00018462025036569685,
            0.000234926090342924,
            0.0001076195330824703,
            0.00017943694547284395,
            9.223289089277387e-05,
            0.00018699708743952215,
            7.19208037480712e-05
        ],
        "align_select": "select city.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which country, in Europe has a population of 80000?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Continent",
            "select country.Code, country.Name",
            "select country.Name, country.Continent, country.Population"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.8529421091079712,
            0.0003543557249940932,
            0.00021375218057073653,
            9.144924842985347e-05,
            0.0013597646029666066,
            0.00013194580969866365,
            0.0001500804937677458,
            7.04826379660517e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which european countries contain populations of 80000?.",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Continent",
            "select country.Code, country.Name",
            "select distinct country.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9211744666099548,
            0.0029758443124592304,
            0.0002086102031171322,
            0.00011779557826230302,
            0.00217177695594728,
            0.0002158946736017242,
            0.16645292937755585,
            0.0001973586477106437
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Tell me all countries that are in Europe and have a population equal to 8000",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Continent",
            "select country.Name, country.Population",
            "select country.Code, country.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "city country",
            "sqlite_sequence country"
        ],
        "align_scores": [
            0.8296971917152405,
            0.011121908202767372,
            0.00021831448248121887,
            0.0001447980321245268,
            0.00024829473113641143,
            0.00010932453733403236,
            0.0018309192964807153,
            0.0001884476514533162
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "list the different cities in Asia that are in Chinese and which the language is official.",
        "gold_select": "select distinct city.Name",
        "select_candidates": [
            "select distinct city.Name",
            "select distinct city.Name, countrylanguage.Language",
            "select distinct city.Name, countrylanguage.IsOfficial",
            "select distinct city.ID, city.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "city country countrylanguage",
        "table_candidates": [
            "city country countrylanguage",
            "city sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.5913692116737366,
            0.010556444525718689,
            0.002105396706610918,
            0.00020158803090453148,
            0.0010967906564474106,
            0.0001448239927412942,
            0.0008813747554086149,
            0.000224288014578633
        ],
        "align_select": "select distinct city.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "list the cities in Asia that use chinese as official language.",
        "gold_select": "select distinct city.Name",
        "select_candidates": [
            "select city.Name",
            "select city.ID, city.Name",
            "select city.Name, country.Capital",
            "select city.Name, city.CountryCode"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "city country countrylanguage",
        "table_candidates": [
            "city country countrylanguage",
            "city sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9256054162979126,
            0.0006811763159930706,
            0.00029561814153566957,
            0.0001165816793218255,
            0.00024724204558879137,
            0.00011848681606352329,
            0.00022929323313292116,
            0.0001065726755768992
        ],
        "align_select": "select city.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which countries are in the continent of Europe and have a population of 8000",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Continent",
            "select country.Name, country.Population",
            "select country.Code, country.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "city country",
            "sqlite_sequence country",
            "city sqlite_sequence country"
        ],
        "align_scores": [
            0.9038956165313721,
            0.009176335297524929,
            0.00027011451311409473,
            0.00011306411761324853,
            0.0002312761207576841,
            0.0001260011486010626,
            0.0011889752931892872,
            0.00017125984595622867
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Name the countries in Europe with a population of 80000.",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Continent",
            "select country.Name, country.Continent, country.Region",
            "select country.Code, country.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9567719101905823,
            0.0004287966003175825,
            0.00018162370542995632,
            7.387195364572108e-05,
            0.0001474386517656967,
            6.106129876570776e-05,
            0.0004346172499936074,
            8.759073534747586e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which countries are in the continent of Europe with a population of 8000.",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Continent",
            "select country.Code, country.Name",
            "select country.Name, country.Population"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country",
            "city country",
            "sqlite_sequence country"
        ],
        "align_scores": [
            0.9778918027877808,
            0.00023568618053104728,
            0.0002558229025453329,
            7.472114521078765e-05,
            0.0009306601714342833,
            9.820310515351593e-05,
            0.00018173475109506398,
            6.142983329482377e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Name the countries in the continental continent of Europe which have a population of 80000.",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Continent",
            "select country.Code, country.Name",
            "select country.Name, country.Population"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9270337820053101,
            0.00043712585465982556,
            0.00029270705999806523,
            8.879579399945214e-05,
            0.0005686970544047654,
            0.00011298749450361356,
            0.00023160007549449801,
            9.924070036504418e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which country has the lowest lifespan in Asia?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Code",
            "select country.Name, country.Continent",
            "select country.Code, country.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9899511933326721,
            0.0003644496900960803,
            0.004699221812188625,
            0.00015751042519696057,
            0.0003255227056797594,
            0.00011984609591308981,
            0.005700296722352505,
            0.00015492872626055032
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT"
    },
    {
        "question": "Which country in Asia has the least life expectancy?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Continent",
            "select country.Name, country.Population",
            "select country.Name, country.LifeExpectancy"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9917880892753601,
            0.00023549143224954605,
            0.00031472768750973046,
            0.00010309641220374033,
            0.00023428229906130582,
            8.080834959400818e-05,
            0.000777783861849457,
            8.717586024431512e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT"
    },
    {
        "question": "Name the country that has the shortest life expectancy in Asia.",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Continent",
            "select country.Name, country.Code",
            "select country.Name, country.Population"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.990739107131958,
            0.00025576978805474937,
            0.0003111291734967381,
            0.0001319558941759169,
            0.0022516350727528334,
            0.00013962942466605455,
            0.00021707139967475086,
            8.634274126961827e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT"
    },
    {
        "question": "Which country has the shortest life expectancy in Asia?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Continent",
            "select country.Name, country.Code",
            "select country.Name, country.LifeExpectancy"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9928926229476929,
            0.0002194253174820915,
            0.00041706758202053607,
            0.00011320608609821647,
            0.005844588857144117,
            0.00013079812924843282,
            0.0008419007644988596,
            9.319523815065622e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT"
    },
    {
        "question": "Which Asian country has the largest area? and what is its population? and what is its expected life length?",
        "gold_select": "select country.Name, country.Population, country.LifeExpectancy",
        "select_candidates": [
            "select country.Name, country.Population, country.LifeExpectancy",
            "select country.Name, country.IndepYear, country.Population, country.LifeExpectancy",
            "select country.Name, country.Continent, country.Population, country.LifeExpectancy",
            "select country.Code, country.Name, country.Population, country.LifeExpectancy"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.00220424123108387,
            0.02817651815712452,
            0.00021560583263635635,
            0.0001560320524731651,
            0.0002712919667828828,
            0.00022758780687581748,
            0.00024608170497231185,
            0.00039189940434880555
        ],
        "align_select": "select country.Name, country.Population, country.LifeExpectancy",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "which asian country has biggest area, and what is the population and expected live time of its citizens",
        "gold_select": "select country.Name, country.Population, country.LifeExpectancy",
        "select_candidates": [
            "select country.Name, country.Population, country.LifeExpectancy",
            "select country.Name, country.IndepYear, country.Population, country.LifeExpectancy",
            "select country.Name, country.Code, country.Population, country.LifeExpectancy",
            "select country.Name, country.Continent, country.Population, country.LifeExpectancy"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.0013647451996803284,
            9.877807315206155e-05,
            0.00018849634216167033,
            8.27380790724419e-05,
            0.00022814965632278472,
            9.17091456358321e-05,
            0.000219136563828215,
            7.10518506821245e-05
        ],
        "align_select": "select country.Name, country.Population, country.LifeExpectancy",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give nations that both speak English and French.",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, countrylanguage.CountryCode",
            "select country.Name, country.Code",
            "select country.Name, country.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "countrylanguage",
            "sqlite_sequence country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.9927006959915161,
            0.00030706843244843185,
            0.00029657286358997226,
            0.00017150398343801498,
            0.00030944563332013786,
            0.00018750094750430435,
            0.00016380516171921045,
            0.0001023925724439323
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "Which countries speak both English and French?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, countrylanguage.CountryCode",
            "select countrylanguage.CountryCode",
            "select country.Name, country.Continent"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "countrylanguage",
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9961012601852417,
            0.0005381397204473615,
            0.0004934530588798225,
            0.00021017946710344404,
            0.9628085494041443,
            0.0014130513882264495,
            0.00014203283353708684,
            0.00011258706945227459
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "Which country has English and French as official langues?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, countrylanguage.CountryCode",
            "select country.Name, country.Continent",
            "select country.Name, country.Code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "city country countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.9956355690956116,
            0.001777886995114386,
            0.0005364331300370395,
            0.00017174455570057034,
            0.0001741657906677574,
            0.00011101377458544448,
            0.0004329680814407766,
            0.0001423453795723617
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "Which Countries have a Language that is English & french as official language.",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select countrylanguage.CountryCode",
            "select country.Name, countrylanguage.CountryCode",
            "select country.Name, country.Continent"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "countrylanguage",
            "country countrylanguage",
            "sqlite_sequence countrylanguage",
            "sqlite_sequence country countrylanguage"
        ],
        "align_scores": [
            0.9933246970176697,
            0.001260116696357727,
            0.8550505638122559,
            0.013086664490401745,
            0.0008570938371121883,
            0.00015272916061803699,
            0.00019081334176007658,
            9.618676267564297e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "Tell me all the countries that have English and French as official languages.",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select countrylanguage.CountryCode",
            "select country.Name",
            "select countrylanguage.Language, countrylanguage.IsOfficial",
            "select country.Name, countrylanguage.CountryCode"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "countrylanguage",
            "country countrylanguage"
        ],
        "align_scores": [
            0.9731219410896301,
            0.14963501691818237,
            0.9950724244117737,
            0.008545873686671257,
            0.0002984975290019065,
            0.00011267558147665113,
            0.0007607598090544343,
            0.0002803440438583493
        ],
        "align_select": "select countrylanguage.CountryCode",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are countries with English and French as official language?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select countrylanguage.CountryCode",
            "select country.Name",
            "select country.Name, countrylanguage.CountryCode",
            "select countrylanguage.Language, countrylanguage.IsOfficial"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "countrylanguage",
            "country countrylanguage"
        ],
        "align_scores": [
            0.9846248626708984,
            0.029169928282499313,
            0.9958479404449463,
            0.0018336874200031161,
            0.00042181124445050955,
            0.0001645280426600948,
            0.00019002248882316053,
            9.274602780351415e-05
        ],
        "align_select": "select countrylanguage.CountryCode",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "Give the country and show its language spoken numbers for all countries that speak at least 3 languages.",
        "gold_select": "select count(countrylanguage.Language), country.Name",
        "select_candidates": [
            "select country.Name, countrylanguage.Language",
            "select country.Name, countrylanguage.CountryCode, count(distinct countrylanguage.Language)",
            "select country.Name, countrylanguage.CountryCode, count(*)",
            "select country.Name, countrylanguage.Language, countrylanguage.Percentage"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage"
        ],
        "align_scores": [
            0.01464939210563898,
            8.079417602857575e-05,
            0.034370385110378265,
            0.00010696679237298667,
            0.520461916923523,
            0.00011787322728196159,
            0.0004778946458827704,
            9.546979708829895e-05
        ],
        "align_select": "select country.Name, countrylanguage.CountryCode, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Give me countries and their #of languages spoken per country for those with 3 or more languages.",
        "gold_select": "select count(countrylanguage.Language), country.Name",
        "select_candidates": [
            "select country.Name, count(distinct countrylanguage.Language)",
            "select country.Name, count(*)",
            "select count(distinct countrylanguage.Language), country.Name",
            "select country.Name, countrylanguage.CountryCode, count(distinct countrylanguage.Language)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country countrylanguage",
        "table_candidates": [
            "country countrylanguage",
            "sqlite_sequence country countrylanguage",
            "countrylanguage",
            "sqlite_sequence countrylanguage"
        ],
        "align_scores": [
            0.1071191355586052,
            8.920486288843676e-05,
            0.5244580507278442,
            8.67810522322543e-05,
            0.10172079503536224,
            9.378872346132994e-05,
            0.0390617810189724,
            0.00010207846207777038
        ],
        "align_select": "select country.Name, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Which countries were founded after 1950",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select distinct country.Name",
            "select country.Name, country.Code",
            "select country.Name, country.Capital"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9926286935806274,
            9.879936987999827e-05,
            0.11205091327428818,
            0.00011346081009833142,
            0.0008457464864477515,
            8.272624108940363e-05,
            0.00024291487352456897,
            6.220809154910967e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Name countries founded after 1950.",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select country.Name, country.Capital",
            "select country.Name, country.HeadOfState",
            "select country.Name, country.Code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9957559704780579,
            0.00017345117521472275,
            0.0001772695395629853,
            7.679885311517864e-05,
            0.00013806673814542592,
            6.576177838724107e-05,
            0.00023729249369353056,
            7.099339563865215e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What countries has been founded after 1950?.",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select distinct country.Name",
            "select country.Name, country.Capital",
            "select only country.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9868007898330688,
            0.0001061696675606072,
            0.08457532525062561,
            0.00010239979746984318,
            0.00029486039420589805,
            6.381465937010944e-05,
            0.08569519221782684,
            9.02025931281969e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List nations founded after 1950.",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select distinct country.Name",
            "select country.Name, country.Capital",
            "select country.Name, country.HeadOfState"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9944763779640198,
            0.0001347717916360125,
            0.041541751474142075,
            8.861951209837571e-05,
            0.00018015386012848467,
            7.795425335643813e-05,
            0.0001581708638696,
            7.239407568704337e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which nations were established after 1950?",
        "gold_select": "select country.Name",
        "select_candidates": [
            "select country.Name",
            "select distinct country.Name",
            "select country.Name, country.Capital",
            "select country.Name, country.Code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "country",
        "table_candidates": [
            "country"
        ],
        "align_scores": [
            0.9892138838768005,
            0.00011785095557570457,
            0.11510437726974487,
            0.00011070718755945563,
            0.00028528799884952605,
            6.846777978353202e-05,
            0.0013622910482808948,
            9.14105330593884e-05
        ],
        "align_select": "select country.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What conductors don't have American nationality?.",
        "gold_select": "select conductor.Name",
        "select_candidates": [
            "select conductor.Conductor_ID",
            "select conductor.Name",
            "select conductor.Name, conductor.Nationality",
            "select conductor.Conductor_ID, conductor.Name"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "conductor",
        "table_candidates": [
            "conductor"
        ],
        "align_scores": [
            0.004832899663597345,
            0.003435495775192976,
            0.00452229892835021,
            0.6071966290473938,
            9.909262735163793e-05,
            0.000176908346475102,
            0.0001503540697740391,
            0.00026409252313897014
        ],
        "align_select": "select conductor.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What conductors don't have the nationality\" USA\"?",
        "gold_select": "select conductor.Name",
        "select_candidates": [
            "select conductor.Conductor_ID",
            "select conductor.Name",
            "select conductor.Name, conductor.Nationality",
            "select conductor.Conductor_ID, conductor.Name"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor",
        "table_candidates": [
            "conductor"
        ],
        "align_scores": [
            0.006672934163361788,
            0.0009196260361932218,
            0.7566978931427002,
            0.0006739390664733946,
            0.0001801865000743419,
            0.0001031312276609242,
            0.0003363389987498522,
            0.00016163424879778177
        ],
        "align_select": "select conductor.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which Conductors have no nationality USA?.",
        "gold_select": "select conductor.Name",
        "select_candidates": [
            "select conductor.Conductor_ID",
            "select conductor.Name",
            "select conductor.Conductor_ID, conductor.Name",
            "select conductor.Name, conductor.Nationality"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor",
        "table_candidates": [
            "conductor"
        ],
        "align_scores": [
            0.0020996753592044115,
            0.000588411872740835,
            0.9433810114860535,
            0.0006673068273812532,
            0.0002421815734123811,
            0.00010868071694858372,
            0.00016882525233086199,
            9.98174655251205e-05
        ],
        "align_select": "select conductor.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give the list of conductors without American nationality.",
        "gold_select": "select conductor.Name",
        "select_candidates": [
            "select conductor.Name",
            "select conductor.Name, conductor.Nationality",
            "select conductor.Conductor_ID, conductor.Name",
            "select conductor.Conductor_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor",
        "table_candidates": [
            "conductor"
        ],
        "align_scores": [
            0.9443336129188538,
            0.0014208387583494186,
            0.00014853592438157648,
            9.194267477141693e-05,
            0.00018835568334907293,
            0.00010708640184020624,
            0.0006990780238993466,
            0.0009920501615852118
        ],
        "align_select": "select conductor.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which conductors does not have USA as their nationality?",
        "gold_select": "select conductor.Name",
        "select_candidates": [
            "select conductor.Conductor_ID",
            "select conductor.Name",
            "select conductor.Name, conductor.Nationality",
            "select conductor.Conductor_ID, conductor.Name"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor",
        "table_candidates": [
            "conductor"
        ],
        "align_scores": [
            0.0056269848719239235,
            0.0011664446210488677,
            0.9526755213737488,
            0.0005186842754483223,
            0.00018566494691185653,
            8.961377170635387e-05,
            0.0002772019652184099,
            0.00010467785614309832
        ],
        "align_select": "select conductor.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show conductors without US citizenship.",
        "gold_select": "select conductor.Name",
        "select_candidates": [
            "select conductor.Conductor_ID",
            "select conductor.Conductor_ID, conductor.Nationality",
            "select conductor.Name, conductor.Nationality",
            "select conductor.Name"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor",
        "table_candidates": [
            "conductor"
        ],
        "align_scores": [
            0.00197202037088573,
            0.006430435460060835,
            0.00016557538765482605,
            0.00010615165228955448,
            0.00017377795302309096,
            9.596843301551417e-05,
            0.6722890138626099,
            0.004607201088219881
        ],
        "align_select": "select conductor.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Who conducts which Orchestras?",
        "gold_select": "select conductor.Name, orchestra.Orchestra",
        "select_candidates": [
            "select conductor.Name, orchestra.Orchestra",
            "select orchestra.Orchestra, conductor.Name",
            "select orchestra.Conductor_ID, orchestra.Orchestra",
            "select conductor.Name, orchestra.Conductor_ID"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor orchestra",
        "table_candidates": [
            "conductor orchestra"
        ],
        "align_scores": [
            0.9038673043251038,
            0.1883700042963028,
            0.003939212765544653,
            0.006932296324521303,
            0.0273810476064682,
            0.0013974193716421723,
            0.0015631484566256404,
            0.0009382761199958622
        ],
        "align_select": "select conductor.Name, orchestra.Orchestra",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "Who has been conducting which orchestra.",
        "gold_select": "select conductor.Name, orchestra.Orchestra",
        "select_candidates": [
            "select conductor.Name, orchestra.Orchestra",
            "select conductor.Name",
            "select orchestra.Orchestra, conductor.Name",
            "select conductor.Name, orchestra.Conductor_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor orchestra",
        "table_candidates": [
            "conductor orchestra"
        ],
        "align_scores": [
            0.9850059151649475,
            0.00023532871273346245,
            0.8271014094352722,
            0.0032909780275076628,
            0.7986816763877869,
            0.00018057039414998144,
            0.0012143146013841033,
            0.00014263748016674072
        ],
        "align_select": "select conductor.Name, orchestra.Orchestra",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "Name the conductors and the orchestras they directed.",
        "gold_select": "select conductor.Name, orchestra.Orchestra",
        "select_candidates": [
            "select conductor.Name, orchestra.Orchestra",
            "select orchestra.Conductor_ID, orchestra.Orchestra",
            "select orchestra.Orchestra, conductor.Name",
            "select performance.Type, orchestra.Orchestra"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor orchestra",
        "table_candidates": [
            "conductor orchestra"
        ],
        "align_scores": [
            0.9916365742683411,
            0.9714320302009583,
            0.009950539097189903,
            0.0210425928235054,
            0.9935353994369507,
            0.9900818467140198,
            0.0012424717424437404,
            0.001056539942510426
        ],
        "align_select": "select conductor.Name, orchestra.Orchestra",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "Show list of conductors sorted descending by the number of years they have worked.",
        "gold_select": "select conductor.Name",
        "select_candidates": [
            "select conductor.Conductor_ID",
            "select conductor.Name, conductor.Age",
            "select conductor.Name, conductor.Year_of_Work",
            "select conductor.Conductor_ID, conductor.Name"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor",
        "table_candidates": [
            "conductor"
        ],
        "align_scores": [
            0.002718830481171608,
            0.00010503711382625625,
            0.0001615539804333821,
            0.00013791622768621892,
            0.00019592691387515515,
            0.00011344123777234927,
            0.0002796257322188467,
            8.667155634611845e-05
        ],
        "align_select": "select conductor.Conductor_ID",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "Name Conductors, sorted descending by the year they have worked.",
        "gold_select": "select conductor.Name",
        "select_candidates": [
            "select conductor.Name",
            "select conductor.Name, conductor.Year_of_Work",
            "select conductor.Conductor_ID, conductor.Name",
            "select conductor.Name, conductor.Nationality, conductor.Year_of_Work"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "conductor",
        "table_candidates": [
            "conductor"
        ],
        "align_scores": [
            0.7847803831100464,
            0.7847803831100464,
            0.0002746821555774659,
            0.0002746821555774659,
            0.00014464663399849087,
            0.00014464663399849087,
            0.00013448424579109997,
            0.00013448424579109997
        ],
        "align_select": "select conductor.Name",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "List conductors who have worked with more then one orchestra.",
        "gold_select": "select conductor.Name",
        "select_candidates": [
            "select conductor.Name",
            "select conductor.Name, orchestra.Conductor_ID",
            "select conductor.Conductor_ID, conductor.Name",
            "select conductor.Name, conductor.Conductor_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor orchestra",
        "table_candidates": [
            "conductor orchestra"
        ],
        "align_scores": [
            0.9911180138587952,
            0.00011178006388945505,
            0.0018302571261301637,
            9.158417378785089e-05,
            0.0007679518312215805,
            7.862203347031027e-05,
            0.0004064205859322101,
            7.428351091220975e-05
        ],
        "align_select": "select conductor.Name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Mention the conductors that have performed more than one orchestra.",
        "gold_select": "select conductor.Name",
        "select_candidates": [
            "select conductor.Name",
            "select conductor.Name, orchestra.Conductor_ID",
            "select performance.Orchestra_ID, conductor.Name",
            "select conductor.Name, performance.Orchestra_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor orchestra",
        "table_candidates": [
            "conductor orchestra performance",
            "conductor orchestra",
            "show orchestra performance"
        ],
        "align_scores": [
            0.9155812859535217,
            0.00010382311302237213,
            0.0032243477180600166,
            0.00010232132626697421,
            0.5402835607528687,
            0.00014928763266652822,
            0.1936350017786026,
            0.00013867911184206605
        ],
        "align_select": "select conductor.Name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Which conductors has conducted multiple Orchestras?",
        "gold_select": "select conductor.Name",
        "select_candidates": [
            "select conductor.Name",
            "select conductor.Name, orchestra.Conductor_ID",
            "select conductor.Conductor_ID, conductor.Name",
            "select conductor.Name, orchestra.Conductor_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor orchestra",
        "table_candidates": [
            "conductor orchestra"
        ],
        "align_scores": [
            0.9861397743225098,
            9.451595542486757e-05,
            0.00103770534042269,
            9.55877621890977e-05,
            0.0010687087196856737,
            8.855783380568027e-05,
            0.00103770534042269,
            9.55877621890977e-05
        ],
        "align_select": "select conductor.Name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Which conductors have conducted more than one orchestra?",
        "gold_select": "select conductor.Name",
        "select_candidates": [
            "select conductor.Name",
            "select conductor.Name, orchestra.Conductor_ID",
            "select conductor.Conductor_ID, conductor.Name",
            "select conductor.Name, orchestra.Conductor_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor orchestra",
        "table_candidates": [
            "conductor orchestra"
        ],
        "align_scores": [
            0.9924007654190063,
            8.886660361895338e-05,
            0.0024577195290476084,
            8.823415555525571e-05,
            0.0008867617580108345,
            7.481796637875959e-05,
            0.0024577195290476084,
            8.823415555525571e-05
        ],
        "align_select": "select conductor.Name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Who are the conductors whose nationality is not usa?.",
        "gold_select": "select conductor.Name",
        "select_candidates": [
            "select conductor.Name",
            "select conductor.Name, conductor.Nationality",
            "select conductor.Conductor_ID, conductor.Name",
            "select conductor.Name, conductor.Age"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor",
        "table_candidates": [
            "conductor"
        ],
        "align_scores": [
            0.9955073595046997,
            0.00010751285299193114,
            0.00023761647753417492,
            5.749770571128465e-05,
            0.00020661798771470785,
            6.458124698838219e-05,
            0.00017155798559542745,
            5.897912706132047e-05
        ],
        "align_select": "select conductor.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Who are conductors that are not from America?",
        "gold_select": "select conductor.Name",
        "select_candidates": [
            "select conductor.Name",
            "select conductor.Name, conductor.Nationality",
            "select conductor.Conductor_ID, conductor.Name",
            "select conductor.Name, conductor.Nationality, conductor.Year_of_Work"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor",
        "table_candidates": [
            "conductor"
        ],
        "align_scores": [
            0.9935411214828491,
            9.51939873630181e-05,
            0.00017283421766478568,
            6.626539106946439e-05,
            0.00020165492605883628,
            6.657264748355374e-05,
            0.0001248103508260101,
            5.776407851953991e-05
        ],
        "align_select": "select conductor.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List Conductors whose nationalities are not US (United States).",
        "gold_select": "select conductor.Name",
        "select_candidates": [
            "select conductor.Conductor_ID",
            "select conductor.Nationality",
            "select conductor.Conductor_ID, conductor.Nationality",
            "select conductor.Name"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor",
        "table_candidates": [
            "conductor"
        ],
        "align_scores": [
            0.0026354987639933825,
            0.0001092503298423253,
            0.9956132173538208,
            9.977815352613106e-05,
            0.00016561879601795226,
            6.446433690143749e-05,
            0.8298734426498413,
            0.00012704569962807
        ],
        "align_select": "select conductor.Nationality",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Who are conductors who do not belong to USA?",
        "gold_select": "select conductor.Name",
        "select_candidates": [
            "select conductor.Name",
            "select conductor.Name, conductor.Nationality",
            "select conductor.Conductor_ID, conductor.Name",
            "select conductor.Name, conductor.Nationality, conductor.Year_of_Work"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor",
        "table_candidates": [
            "conductor"
        ],
        "align_scores": [
            0.9919008612632751,
            0.00011303545034024864,
            0.00021156520233489573,
            6.577971362276003e-05,
            0.000205747113795951,
            7.064519741106778e-05,
            0.0001337939320364967,
            5.833430986967869e-05
        ],
        "align_select": "select conductor.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Who has had the most experience as a conductor?.",
        "gold_select": "select conductor.Name",
        "select_candidates": [
            "select conductor.Name",
            "select conductor.Name, conductor.Age",
            "select conductor.Name, conductor.Nationality",
            "select conductor.Conductor_ID, conductor.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "conductor",
        "table_candidates": [
            "conductor",
            "conductor orchestra",
            "conductor orchestra performance"
        ],
        "align_scores": [
            0.9937511086463928,
            0.9811046719551086,
            0.00041418717592023313,
            0.0002601892047096044,
            0.0007323728641495109,
            0.00031968505936674774,
            0.0008945823647081852,
            0.0004966287524439394
        ],
        "align_select": "select conductor.Name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Which conductor has done longest work?",
        "gold_select": "select conductor.Name",
        "select_candidates": [
            "select conductor.Name",
            "select conductor.Conductor_ID, conductor.Name",
            "select conductor.Name, conductor.Nationality",
            "select conductor.Name, conductor.Age"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor",
        "table_candidates": [
            "conductor"
        ],
        "align_scores": [
            0.9906914830207825,
            5.968695040792227e-05,
            0.0006965489592403173,
            5.6921911891549826e-05,
            0.0005217038560658693,
            6.158155883895233e-05,
            0.0004589131858665496,
            5.523504296434112e-05
        ],
        "align_select": "select conductor.Name",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Which conductor had more years of experience?",
        "gold_select": "select conductor.Name",
        "select_candidates": [
            "select conductor.Name",
            "select conductor.Conductor_ID, conductor.Name",
            "select conductor.Name, conductor.Year_of_Work",
            "select conductor.Name, conductor.Age"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor",
        "table_candidates": [
            "conductor"
        ],
        "align_scores": [
            0.16112488508224487,
            5.8091052778763697e-05,
            0.0003454576653894037,
            5.7463166740490124e-05,
            0.00028978483169339597,
            5.5275402701226994e-05,
            0.00020723792840726674,
            5.5256161431316286e-05
        ],
        "align_select": "select conductor.Name",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Which one did conduct the longest?",
        "gold_select": "select conductor.Name",
        "select_candidates": [
            "select conductor.Name",
            "select conductor.Name, conductor.Age",
            "select conductor.Conductor_ID, conductor.Name",
            "select conductor.Name, conductor.Conductor_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor",
        "table_candidates": [
            "conductor",
            "conductor orchestra"
        ],
        "align_scores": [
            0.9913349747657776,
            6.308519368758425e-05,
            0.0003954025451093912,
            5.517628960660659e-05,
            0.0005044993595220149,
            6.126029620645568e-05,
            0.00032630166970193386,
            6.148233660496771e-05
        ],
        "align_select": "select conductor.Name",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "List the conductor who has worked the most years.",
        "gold_select": "select conductor.Name",
        "select_candidates": [
            "select conductor.Name",
            "select conductor.Conductor_ID, conductor.Name",
            "select conductor.Name, conductor.Nationality",
            "select conductor.Name, conductor.Age"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor",
        "table_candidates": [
            "conductor"
        ],
        "align_scores": [
            0.9808270931243896,
            0.9881873726844788,
            0.000389123015338555,
            0.00045427720760926604,
            0.000214666360989213,
            0.00024873900110833347,
            0.00023430644068866968,
            0.0004664601874537766
        ],
        "align_select": "select conductor.Name",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Who is the conductor who conducts most orchestras?",
        "gold_select": "select conductor.Name",
        "select_candidates": [
            "select conductor.Name",
            "select conductor.Name, orchestra.Conductor_ID",
            "select conductor.Name, orchestra.Conductor_ID, conductor.Nationality",
            "select conductor.Name (orchestra.Conductor_ID)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor orchestra",
        "table_candidates": [
            "conductor orchestra"
        ],
        "align_scores": [
            0.9945111274719238,
            6.486689380835742e-05,
            0.0007882470381446183,
            5.8834877563640475e-05,
            0.0002480278199072927,
            5.647778743878007e-05,
            0.0028746826574206352,
            5.760526983067393e-05
        ],
        "align_select": "select conductor.Name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Which conductor has conducted the most orchestras?",
        "gold_select": "select conductor.Name",
        "select_candidates": [
            "select conductor.Name",
            "select conductor.Name, orchestra.Conductor_ID",
            "select conductor.Name, conductor.Age",
            "select conductor.Name, conductor.Nationality"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor orchestra",
        "table_candidates": [
            "conductor orchestra"
        ],
        "align_scores": [
            0.9943331480026245,
            5.239727033767849e-05,
            0.0014841767260804772,
            5.84083391004242e-05,
            0.00021343895059544593,
            5.080657501821406e-05,
            0.0005809144349768758,
            6.083636253606528e-05
        ],
        "align_select": "select conductor.Name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Who has led most orchestras as a conductor?",
        "gold_select": "select conductor.Name",
        "select_candidates": [
            "select conductor.Name",
            "select conductor.Name, orchestra.Conductor_ID",
            "select conductor.Name (orchestrator_orchestra.Conductor_ID)",
            "select conductor.Conductor_ID, conductor.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor orchestra",
        "table_candidates": [
            "conductor orchestra"
        ],
        "align_scores": [
            0.9944551587104797,
            7.018496398814023e-05,
            0.0008668474620208144,
            6.223266245797276e-05,
            0.000568091927561909,
            5.760768908658065e-05,
            0.0016793309478089213,
            6.0062822740292177e-05
        ],
        "align_select": "select conductor.Name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What conductors were active or founded orchestras established after 2008?",
        "gold_select": "select conductor.Name",
        "select_candidates": [
            "select conductor.Name",
            "select conductor.Name, orchestra.Conductor_ID",
            "select active conductor.Name",
            "select active conductor.Name, orchestra.Conductor_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor orchestra",
        "table_candidates": [
            "conductor orchestra"
        ],
        "align_scores": [
            0.973883867263794,
            0.4537386894226074,
            0.0012698342325165868,
            0.0004358166770543903,
            0.005762496963143349,
            0.003964107483625412,
            0.0004046805261168629,
            0.00023990269983187318
        ],
        "align_select": "select conductor.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Who are conductors who conducted orchestras founded after the year 2008?",
        "gold_select": "select conductor.Name",
        "select_candidates": [
            "select conductor.Name",
            "select conductor.Name, conductor.Age",
            "select conductor.Name, orchestra.Conductor_ID",
            "select conductor.Name, conductor.Conductor_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor orchestra",
        "table_candidates": [
            "conductor orchestra"
        ],
        "align_scores": [
            0.9858470559120178,
            0.00011432028986746445,
            0.000239064684137702,
            6.824873707955703e-05,
            0.0002769663406070322,
            7.726567855570465e-05,
            0.0002636605640873313,
            7.58698079152964e-05
        ],
        "align_select": "select conductor.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Who has conducted orchestras founded in 2008",
        "gold_select": "select conductor.Name",
        "select_candidates": [
            "select conductor.Name",
            "select conductor.Name, orchestra.Conductor_ID",
            "select distinct conductor.Name",
            "select conductor.Name, orchestra.Conductor_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor orchestra",
        "table_candidates": [
            "conductor orchestra"
        ],
        "align_scores": [
            0.9884088635444641,
            0.00010317882697563618,
            0.0003052394895348698,
            8.121920109260827e-05,
            0.15311384201049805,
            0.0001945239637279883,
            0.0003052394895348698,
            8.121920109260827e-05
        ],
        "align_select": "select conductor.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Who are conductors who have led orchestras established after the year 2008?",
        "gold_select": "select conductor.Name",
        "select_candidates": [
            "select conductor.Name",
            "select conductor.Name, orchestra.Conductor_ID",
            "select conductor.Name, conductor.Age",
            "select distinct conductor.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor orchestra",
        "table_candidates": [
            "conductor orchestra"
        ],
        "align_scores": [
            0.9849408268928528,
            0.00015655871538911015,
            0.0004956831107847393,
            9.048241190612316e-05,
            0.00030050601344555616,
            7.337809802265838e-05,
            0.10664418339729309,
            0.00017898598161991686
        ],
        "align_select": "select conductor.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What conductor have conducted orchestra founded after 2008?",
        "gold_select": "select conductor.Name",
        "select_candidates": [
            "select conductor.Name",
            "select conductor.Name, orchestra.Conductor_ID",
            "select conductor.Name (orchestrator_orchestra.Conductor_ID)",
            "select distinct conductor.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor orchestra",
        "table_candidates": [
            "conductor orchestra"
        ],
        "align_scores": [
            0.9753636121749878,
            0.00015370830078609288,
            0.0002477078523952514,
            8.467140287393704e-05,
            0.0005351154832169414,
            7.514817116316408e-05,
            0.10640443861484528,
            0.00022175164485815912
        ],
        "align_select": "select conductor.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Who has worked the longest as conductor?.",
        "gold_select": "select conductor.Name",
        "select_candidates": [
            "select conductor.Name",
            "select conductor.Name, conductor.Nationality",
            "select conductor.Name, conductor.Age",
            "select conductor.Conductor_ID, conductor.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor",
        "table_candidates": [
            "conductor"
        ],
        "align_scores": [
            0.9941271543502808,
            6.417250551749021e-05,
            0.00023353319556917995,
            6.695227784803137e-05,
            0.0003382982104085386,
            6.108535308158025e-05,
            0.0003724089765455574,
            6.078538717702031e-05
        ],
        "align_select": "select conductor.Name",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Who is the conductor that has worked the longest?",
        "gold_select": "select conductor.Name",
        "select_candidates": [
            "select conductor.Name",
            "select conductor.Name, conductor.Nationality",
            "select conductor.Name, conductor.Age",
            "select conductor.Name, conductor.Nationality, conductor.Year_of_Work"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor",
        "table_candidates": [
            "conductor"
        ],
        "align_scores": [
            0.9932098984718323,
            6.343012501019984e-05,
            0.00034837270504795015,
            6.394105002982542e-05,
            0.0006330535397864878,
            5.7917142839869484e-05,
            0.00021022174041718245,
            5.539951962418854e-05
        ],
        "align_select": "select conductor.Name",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Who had the longest career as a conductor?",
        "gold_select": "select conductor.Name",
        "select_candidates": [
            "select conductor.Name",
            "select conductor.Name, conductor.Age",
            "select conductor.Name, conductor.Year_of_Work",
            "select conductor.Name, conductor.Nationality"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor",
        "table_candidates": [
            "conductor",
            "conductor orchestra"
        ],
        "align_scores": [
            0.9941378831863403,
            0.9938096404075623,
            0.0003939768939744681,
            0.0006157628376968205,
            0.0006350940675474703,
            0.0009809869807213545,
            0.0003043915203306824,
            0.0005277404561638832
        ],
        "align_select": "select conductor.Name",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Which conductor has worked the longest time?",
        "gold_select": "select conductor.Name",
        "select_candidates": [
            "select conductor.Name",
            "select conductor.Conductor_ID, conductor.Name",
            "select conductor.Name, conductor.Nationality",
            "select conductor.Name, conductor.Age"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor",
        "table_candidates": [
            "conductor"
        ],
        "align_scores": [
            0.9878039360046387,
            5.979998240945861e-05,
            0.0005758428596891463,
            5.939273250987753e-05,
            0.0003609397972468287,
            6.560218753293157e-05,
            0.0005575096001848578,
            5.5001666623866186e-05
        ],
        "align_select": "select conductor.Name",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Who conducts orchestras founded after 2008?",
        "gold_select": "select conductor.Name",
        "select_candidates": [
            "select conductor.Name",
            "select conductor.Name, orchestra.Conductor_ID",
            "select conductor.Name, orchestra.Conductor_ID",
            "select conductor.Name, conductor.Age"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor orchestra",
        "table_candidates": [
            "conductor orchestra"
        ],
        "align_scores": [
            0.9921063184738159,
            0.00011347845429554582,
            0.00035553768975660205,
            8.843445539241657e-05,
            0.00035553768975660205,
            8.843445539241657e-05,
            0.00018090574303641915,
            6.522130570374429e-05
        ],
        "align_select": "select conductor.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which one has conducted orchestra founded after 2008.",
        "gold_select": "select conductor.Name",
        "select_candidates": [
            "select conductor.Name",
            "select conductor.Name, orchestra.Conductor_ID",
            "select conductor.Name (orchestrator_orchestra.Conductor_ID)",
            "select distinct conductor.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor orchestra",
        "table_candidates": [
            "conductor orchestra"
        ],
        "align_scores": [
            0.9800731539726257,
            0.00012319142115302384,
            0.0003019857394974679,
            8.378979691769928e-05,
            0.0003113612183369696,
            7.223380816867575e-05,
            0.1292397379875183,
            0.00019652751507237554
        ],
        "align_select": "select conductor.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Tell me about the conductor that has conducted orchestras founded after 2008.",
        "gold_select": "select conductor.Name",
        "select_candidates": [
            "select conductor.Name",
            "select conductor.Name, orchestra.Conductor_ID",
            "select conductor.Name, conductor.Age",
            "select distinct conductor.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor orchestra",
        "table_candidates": [
            "conductor orchestra"
        ],
        "align_scores": [
            0.9083054661750793,
            0.0001024189405143261,
            0.0002497810928616673,
            7.606250437675044e-05,
            0.00022141594672575593,
            7.43779237382114e-05,
            0.13018809258937836,
            0.00012373190838843584
        ],
        "align_select": "select conductor.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Who has conducted orchestras founded after 2008?",
        "gold_select": "select conductor.Name",
        "select_candidates": [
            "select conductor.Name",
            "select distinct conductor.Name",
            "select conductor.Name, orchestra.Conductor_ID",
            "select distinct conductor.Name, orchestra.Conductor_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor orchestra",
        "table_candidates": [
            "conductor orchestra"
        ],
        "align_scores": [
            0.9847095608711243,
            0.00011164414172526449,
            0.12845003604888916,
            0.00021530917729251087,
            0.00033376080682501197,
            8.900068496586755e-05,
            0.0023245634511113167,
            0.00010177306830883026
        ],
        "align_select": "select conductor.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which conductors had conducted at more orchestras than one?",
        "gold_select": "select conductor.Name",
        "select_candidates": [
            "select conductor.Name",
            "select conductor.Name, orchestra.Conductor_ID",
            "select conductor.Conductor_ID, conductor.Name",
            "select conductor.Name, orchestra.Conductor_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor orchestra",
        "table_candidates": [
            "conductor orchestra"
        ],
        "align_scores": [
            0.9870688915252686,
            8.21247958811e-05,
            0.001008165767416358,
            7.456952153006569e-05,
            0.0006757127703167498,
            6.900407606735826e-05,
            0.001008165767416358,
            7.456952153006569e-05
        ],
        "align_select": "select conductor.Name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What conductors have conducted at more than one orchestra?",
        "gold_select": "select conductor.Name",
        "select_candidates": [
            "select conductor.Name",
            "select conductor.Name, orchestra.Conductor_ID",
            "select conductor.Name, conductor.Conductor_ID",
            "select conductor.Name, conductor.Conductor_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor orchestra",
        "table_candidates": [
            "conductor orchestra"
        ],
        "align_scores": [
            0.991835355758667,
            9.210668213199824e-05,
            0.002004080917686224,
            8.657672151457518e-05,
            0.0005352129228413105,
            7.80886912252754e-05,
            0.0005352129228413105,
            7.80886912252754e-05
        ],
        "align_select": "select conductor.Name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Who were conductors that worked at more than one orchestra?",
        "gold_select": "select conductor.Name",
        "select_candidates": [
            "select conductor.Name",
            "select conductor.Name, orchestra.Conductor_ID",
            "select conductor.Name, orchestra.Orchestra",
            "select conductor.Name, orchestra.Orchestra_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor orchestra",
        "table_candidates": [
            "conductor orchestra"
        ],
        "align_scores": [
            0.9916608929634094,
            0.00012810685439035296,
            0.0007959028007462621,
            7.928330160211772e-05,
            0.013188974000513554,
            9.116974979406223e-05,
            0.0033722666557878256,
            0.00011011991591658443
        ],
        "align_select": "select conductor.Name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Name conductors who have conducted at more than one orchestra?",
        "gold_select": "select conductor.Name",
        "select_candidates": [
            "select conductor.Name",
            "select conductor.Name, orchestra.Conductor_ID",
            "select conductor.Name, orchestra.Orchestra",
            "select conductor.Name, orchestra.Orchestra_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor orchestra",
        "table_candidates": [
            "conductor orchestra"
        ],
        "align_scores": [
            0.9915123581886292,
            0.00010939805360976607,
            0.0015781710390001535,
            8.483368583256379e-05,
            0.029068253934383392,
            8.525067823939025e-05,
            0.06214010342955589,
            0.00011358692427165806
        ],
        "align_select": "select conductor.Name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Which conductors has conducted at more than one orchestra?",
        "gold_select": "select conductor.Name",
        "select_candidates": [
            "select conductor.Name",
            "select conductor.Name, orchestra.Conductor_ID",
            "select conductor.Name, conductor.Conductor_ID",
            "select conductor.Conductor_ID, conductor.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor orchestra",
        "table_candidates": [
            "conductor orchestra"
        ],
        "align_scores": [
            0.9890708923339844,
            9.838973346631974e-05,
            0.0024399072863161564,
            9.87801467999816e-05,
            0.0006790784536860883,
            8.877783693606034e-05,
            0.0009596270974725485,
            8.519062248524278e-05
        ],
        "align_select": "select conductor.Name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Name conductors in increasing order of age.",
        "gold_select": "select conductor.Name",
        "select_candidates": [
            "select conductor.Name",
            "select conductor.Name, conductor.Age",
            "select conductor.Conductor_ID, conductor.Name",
            "select conductor.Name in conductor.Age"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor",
        "table_candidates": [
            "conductor"
        ],
        "align_scores": [
            0.996620774269104,
            0.00045687390957027674,
            0.00032484502298757434,
            0.00011988219921477139,
            0.0001415746082784608,
            0.0001217249155160971,
            0.000682881916873157,
            0.00024189447867684066
        ],
        "align_select": "select conductor.Name",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "Which conductor has done the most orchestras?",
        "gold_select": "select conductor.Name",
        "select_candidates": [
            "select conductor.Name",
            "select conductor.Name, orchestra.Conductor_ID",
            "select conductor.Name, conductor.Age",
            "select conductor.Name, conductor.Conductor_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor orchestra",
        "table_candidates": [
            "conductor orchestra"
        ],
        "align_scores": [
            0.9943775534629822,
            5.158437852514908e-05,
            0.0011134836822748184,
            5.9908088587690145e-05,
            0.00019429021631367505,
            4.9677193601382896e-05,
            0.0009346348233520985,
            6.112083065090701e-05
        ],
        "align_select": "select conductor.Name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Who has conducted the greatest number of orchestras",
        "gold_select": "select conductor.Name",
        "select_candidates": [
            "select conductor.Name",
            "select conductor.Name, orchestra.Conductor_ID",
            "select conductor.Name, orchestra.Orchestra_ID",
            "select conductor.Conductor_ID, conductor.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor orchestra",
        "table_candidates": [
            "conductor orchestra",
            "conductor orchestra performance"
        ],
        "align_scores": [
            0.99456787109375,
            5.147808769834228e-05,
            0.0017047809669747949,
            5.66751514270436e-05,
            0.008634098805487156,
            6.72554670018144e-05,
            0.00309933302924037,
            5.6624146964168176e-05
        ],
        "align_select": "select conductor.Name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "what conductor has conducted most orchestras?",
        "gold_select": "select conductor.Name",
        "select_candidates": [
            "select conductor.Name",
            "select conductor.Name, orchestra.Conductor_ID",
            "select conductor.Name (orchestra.Conductor_ID)",
            "select conductor.Name, orchestra.Conductor_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor orchestra",
        "table_candidates": [
            "conductor orchestra"
        ],
        "align_scores": [
            0.99467933177948,
            6.963324267417192e-05,
            0.0007659365073777735,
            5.9200126997893676e-05,
            0.0023905218113213778,
            5.9580725064734e-05,
            0.0007659365073777735,
            5.9200126997893676e-05
        ],
        "align_select": "select conductor.Name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Which conductor has conducted the most orchestras?",
        "gold_select": "select conductor.Name",
        "select_candidates": [
            "select conductor.Name",
            "select conductor.Name, orchestra.Conductor_ID",
            "select conductor.Name, conductor.Age",
            "select conductor.Name, conductor.Nationality"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor orchestra",
        "table_candidates": [
            "conductor orchestra"
        ],
        "align_scores": [
            0.9943331480026245,
            5.239727033767849e-05,
            0.0014841767260804772,
            5.84083391004242e-05,
            0.00021343895059544593,
            5.080657501821406e-05,
            0.0005809144349768758,
            6.083636253606528e-05
        ],
        "align_select": "select conductor.Name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Describe conductors in descending order of years of work.",
        "gold_select": "select conductor.Name",
        "select_candidates": [
            "select conductor.Name, conductor.Year_of_Work",
            "select conductor.Name",
            "select conductor.Name, conductor.Age",
            "select conductor.Name, conductor.Nationality"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "conductor",
        "table_candidates": [
            "conductor"
        ],
        "align_scores": [
            0.00019390285888221115,
            0.00019390285888221115,
            0.9878681898117065,
            0.9878681898117065,
            0.00020484314882196486,
            0.00020484314882196486,
            0.00018135859863832593,
            0.00018135859863832593
        ],
        "align_select": "select conductor.Name",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "Describe conductors in descending years of work.",
        "gold_select": "select conductor.Name",
        "select_candidates": [
            "select conductor.Name, conductor.Year_of_Work",
            "select conductor.Name",
            "select conductor.Name, conductor.Age",
            "select conductor.Name, conductor.Nationality, conductor.Year_of_Work"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor",
        "table_candidates": [
            "conductor"
        ],
        "align_scores": [
            0.00021828511671628803,
            0.00016536429757252336,
            0.9432755708694458,
            0.0003212637675460428,
            0.00018544663907960057,
            0.00019881407206412405,
            0.00023661630984861404,
            0.0001229567133123055
        ],
        "align_select": "select conductor.Name",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "List conductors by their years of service in descending order.",
        "gold_select": "select conductor.Name",
        "select_candidates": [
            "select conductor.Conductor_ID",
            "select conductor.Conductor_ID, conductor.Year_of_Work",
            "select conductor.Year_of_Work",
            "select conductor.Name, conductor.Year_of_Work"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor",
        "table_candidates": [
            "conductor"
        ],
        "align_scores": [
            0.001054049702361226,
            0.00021444319281727076,
            0.00012246970436535776,
            0.00014818791532889009,
            0.0016690603224560618,
            0.000323939515510574,
            0.00014176926924847066,
            0.00020399763889145106
        ],
        "align_select": "select conductor.Conductor_ID",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "List conductors in descending year of experience.",
        "gold_select": "select conductor.Name",
        "select_candidates": [
            "select conductor.Conductor_ID",
            "select conductor.Conductor_ID, conductor.Name, conductor.Year_of_Work",
            "select conductor.Name, conductor.Year_of_Work",
            "select conductor.Name, conductor.Age"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor",
        "table_candidates": [
            "conductor"
        ],
        "align_scores": [
            0.004918467253446579,
            0.00014524896687362343,
            0.00012402354332152754,
            9.324706479674205e-05,
            0.00016822938050609082,
            0.0001459155755583197,
            0.00018109630036633462,
            0.00014747914974577725
        ],
        "align_select": "select conductor.Conductor_ID",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "Who were conductors as well as which orchestras did they lead?.",
        "gold_select": "select conductor.Name, orchestra.Orchestra",
        "select_candidates": [
            "select conductor.Name, orchestra.Orchestra",
            "select orchestra.Orchestra, conductor.Name",
            "select performance.Orchestra_ID, orchestra.Orchestra",
            "select show.Performance_ID, orchestra.Orchestra"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor orchestra",
        "table_candidates": [
            "conductor orchestra"
        ],
        "align_scores": [
            0.9915183186531067,
            0.635496973991394,
            0.9922254085540771,
            0.8964279890060425,
            0.0005259233876131475,
            0.00036700672353617847,
            0.0006153519498184323,
            0.00041962307295762
        ],
        "align_select": "select conductor.Name, orchestra.Orchestra",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "Who are conductors and which orchestra's have they worked for?",
        "gold_select": "select conductor.Name, orchestra.Orchestra",
        "select_candidates": [
            "select conductor.Name, orchestra.Orchestra",
            "select orchestra.Orchestra, conductor.Name",
            "select performance.Orchestra_ID, conductor.Name",
            "select performance.Orchestra_ID, orchestra.Orchestra"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor orchestra",
        "table_candidates": [
            "conductor orchestra"
        ],
        "align_scores": [
            0.9759230613708496,
            0.00045187908108346164,
            0.9747281670570374,
            0.0005608131177723408,
            0.658828854560852,
            0.0005371166043914855,
            0.0006288154982030392,
            0.00024516790290363133
        ],
        "align_select": "select conductor.Name, orchestra.Orchestra",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What conductors have there been, and what orchestras have they conducted?",
        "gold_select": "select conductor.Name, orchestra.Orchestra",
        "select_candidates": [
            "select conductor.Name, orchestra.Orchestra",
            "select orchestra.Orchestra, conductor.Name",
            "select orchestra.Conductor_ID, orchestra.Orchestra",
            "select performance.Orchestra_ID, orchestra.Orchestra"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor orchestra",
        "table_candidates": [
            "conductor orchestra"
        ],
        "align_scores": [
            0.9850049018859863,
            0.8741729259490967,
            0.9773249626159668,
            0.9441719651222229,
            0.05758151412010193,
            0.044813357293605804,
            0.0005868420121259987,
            0.00038705492625012994
        ],
        "align_select": "select conductor.Name, orchestra.Orchestra",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What is the students who had the most likes?",
        "gold_select": "select Highschooler.name",
        "select_candidates": [
            "select Highschooler.name",
            "select Highschooler.name, Highschooler.ID",
            "select Highschooler.name, Highschooler.grade",
            "select Highschooler.ID, Highschooler.name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Likes",
        "table_candidates": [
            "Highschooler Likes"
        ],
        "align_scores": [
            0.987377941608429,
            7.294616807484999e-05,
            0.007696681190282106,
            6.667518755421042e-05,
            0.0019165592966601253,
            6.737126386724412e-05,
            0.021084101870656013,
            7.771939999656752e-05
        ],
        "align_select": "select Highschooler.name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Which student has the most likes",
        "gold_select": "select Highschooler.name",
        "select_candidates": [
            "select Highschooler.name",
            "select Highschooler.name, Highschooler.ID",
            "select Highschooler.name, Likes.student_id",
            "select Highschooler.name, Highschooler.grade"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Likes",
        "table_candidates": [
            "Highschooler Likes"
        ],
        "align_scores": [
            0.99151211977005,
            5.9138459619134665e-05,
            0.003430366748943925,
            6.194820161908865e-05,
            0.004225222859531641,
            7.693335646763444e-05,
            0.0010277384426444769,
            5.6575350754428655e-05
        ],
        "align_select": "select Highschooler.name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What student has the most likes?",
        "gold_select": "select Highschooler.name",
        "select_candidates": [
            "select Highschooler.name",
            "select Highschooler.name, Highschooler.ID",
            "select Highschooler.name, Likes.student_id",
            "select Highschooler.name, Highschooler.grade"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Likes",
        "table_candidates": [
            "Highschooler Likes",
            "Highschooler Friend Likes"
        ],
        "align_scores": [
            0.9904770851135254,
            6.296607170952484e-05,
            0.0026896644849330187,
            6.282326648943126e-05,
            0.0030660477932542562,
            7.882022327976301e-05,
            0.0010311537189409137,
            5.652789695886895e-05
        ],
        "align_select": "select Highschooler.name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Name one student who has the most likes.",
        "gold_select": "select Highschooler.name",
        "select_candidates": [
            "select Highschooler.name",
            "select Highschooler.name, Likes.student_id",
            "select Highschooler.name, Highschooler.ID",
            "select Highschooler.name, Highschooler.grade"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Likes",
        "table_candidates": [
            "Highschooler Likes"
        ],
        "align_scores": [
            0.9487042427062988,
            7.79240726842545e-05,
            0.0013528952840715647,
            6.784461584175006e-05,
            0.00071362016024068,
            5.667147343046963e-05,
            0.000628944078925997,
            5.784423410659656e-05
        ],
        "align_select": "select Highschooler.name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Show all students in grade 10.",
        "gold_select": "select Highschooler.name",
        "select_candidates": [
            "select distinct Highschooler.ID",
            "select distinct Highschooler.name, Highschooler.grade",
            "select Highschooler.ID",
            "select distinct Highschooler.ID, Highschooler.name"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler",
        "table_candidates": [
            "Highschooler"
        ],
        "align_scores": [
            0.058458805084228516,
            0.00022454648569691926,
            0.00016454403521493077,
            6.790934276068583e-05,
            0.005980105604976416,
            0.00014059912064112723,
            0.0005631369422189891,
            6.070261952118017e-05
        ],
        "align_select": "select distinct Highschooler.ID",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What high-school students have 3 or more friends?",
        "gold_select": "select Highschooler.name",
        "select_candidates": [
            "select Highschooler.name",
            "select distinct Highschooler.name",
            "select Highschooler.ID, Highschooler.name",
            "select distinct Highschooler.name, Highschooler.ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Friend",
        "table_candidates": [
            "Highschooler Friend",
            "Highschooler Friend Likes"
        ],
        "align_scores": [
            0.9607183337211609,
            9.217839397024363e-05,
            0.056593507528305054,
            6.715280323987827e-05,
            0.013933902606368065,
            9.316981595475227e-05,
            0.0011487423907965422,
            5.204325134400278e-05
        ],
        "align_select": "select Highschooler.name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Who are all high school students that have at least 3 friends?",
        "gold_select": "select Highschooler.name",
        "select_candidates": [
            "select Highschooler.name",
            "select Highschooler.name, Highschooler.ID",
            "select Highschooler.name, Highschooler.grade",
            "select distinct Highschooler.name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Friend",
        "table_candidates": [
            "Highschooler Friend",
            "Highschooler Friend Likes"
        ],
        "align_scores": [
            0.9586324095726013,
            0.000113628753751982,
            0.02293802611529827,
            8.841404633130878e-05,
            0.0004979681107215583,
            8.316697494592518e-05,
            0.06069308891892433,
            7.022038334980607e-05
        ],
        "align_select": "select Highschooler.name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What high school students have like, and on which numbers do they have?",
        "gold_select": "select Highschooler.name, count(*)",
        "select_candidates": [
            "select Highschooler.name, Likes.student_id",
            "select count(*), Highschooler.name",
            "select distinct Likes.student_id, Likes.liked_id",
            "select Highschooler.name, Highschooler.grade"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "Highschooler Likes",
        "table_candidates": [
            "Highschooler Likes"
        ],
        "align_scores": [
            0.0036860627587884665,
            0.016758879646658897,
            0.0005210466915741563,
            0.0009463338064961135,
            0.0009737283689901233,
            0.0015939524164423347,
            0.0008733294089324772,
            0.001794164883904159
        ],
        "align_select": "select Highschooler.name, Likes.student_id",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show list of high schools students with likes, and how much they had per person.",
        "gold_select": "select Highschooler.name, count(*)",
        "select_candidates": [
            "select Highschooler.name, sum(Likes.liked_id)",
            "select Highschooler.name, count(*)",
            "select Highschooler.ID, count(*)",
            "select Highschooler.ID, sum(Likes.liked_id)"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Likes",
        "table_candidates": [
            "Highschooler Likes"
        ],
        "align_scores": [
            0.0028470326215028763,
            0.0002232202677987516,
            0.9518764019012451,
            0.00233616610057652,
            0.4564346373081207,
            0.003469382645562291,
            0.003807979868724942,
            0.00020688195945695043
        ],
        "align_select": "select Highschooler.name, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "Who have likes in high school? And How many likes does each one has?",
        "gold_select": "select Highschooler.name, count(*)",
        "select_candidates": [
            "select count(*), Highschooler.name",
            "select Highschooler.name, count(*)",
            "select distinct Highschooler.name, count(*)",
            "select top Highschooler.name, count(*)"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "Highschooler Likes",
        "table_candidates": [
            "Highschooler Likes",
            "Highschooler Friend Likes"
        ],
        "align_scores": [
            0.983866810798645,
            0.0006561086629517376,
            0.962046205997467,
            0.0003296514041721821,
            0.0005943422438576818,
            0.0001426378876203671,
            0.002398231765255332,
            0.00016266146849375218
        ],
        "align_select": "select count(*), Highschooler.name",
        "align_structure": "SELECT-FROM-WHERE-GROUP BY"
    },
    {
        "question": "which has students who have grade point over 5 and have at least two friends?",
        "gold_select": "select Highschooler.name",
        "select_candidates": [
            "select Highschooler.name",
            "select Highschooler.name, Highschooler.grade",
            "select Highschooler.ID",
            "select Highschooler.name, Highschooler.ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "Highschooler Friend",
        "table_candidates": [
            "Highschooler Friend",
            "Highschooler Friend Likes"
        ],
        "align_scores": [
            0.03687513247132301,
            0.29002881050109863,
            0.0003162785724271089,
            0.0005415032501332462,
            0.016216887161135674,
            0.6776604652404785,
            0.0006186208338476717,
            0.010990642011165619
        ],
        "align_select": "select Highschooler.ID",
        "align_structure": "SELECT-FROM-WHERE-GROUP BY-HAVING"
    },
    {
        "question": "Name some high schoolers who both have friends and are liked",
        "gold_select": "select Highschooler.name",
        "select_candidates": [
            "select Highschooler.name",
            "select Highschooler.name, Friend.friend_id",
            "select Highschooler.name, Friend.student_id",
            "select Highschooler.ID, Highschooler.name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-INTERSECT-SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM-INTERSECT-SELECT-FROM",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Friend Likes",
        "table_candidates": [
            "Highschooler Friend Likes"
        ],
        "align_scores": [
            0.9457055926322937,
            0.2031576782464981,
            0.000630576629191637,
            0.0003006931801792234,
            0.0010560427326709032,
            0.0003710385935846716,
            0.000639953650534153,
            0.0004193419881630689
        ],
        "align_select": "select Highschooler.name",
        "align_structure": "SELECT-FROM-INTERSECT-SELECT-FROM"
    },
    {
        "question": "What high school students have friends and are liked?",
        "gold_select": "select Highschooler.name",
        "select_candidates": [
            "select Highschooler.name, Highschooler.grade",
            "select distinct Highschooler.name, Highschooler.ID",
            "select Highschooler.name, Highschooler.ID",
            "select distinct Highschooler.name, Highschooler.grade"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-INTERSECT-SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM-UNION-SELECT-FROM",
            "SELECT-FROM-INTERSECT-SELECT-FROM"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "Highschooler Friend Likes",
        "table_candidates": [
            "Highschooler Friend Likes",
            "Highschooler Friend"
        ],
        "align_scores": [
            0.00012038739077979699,
            0.0003267265565227717,
            9.295417839894071e-05,
            0.00014919925888534635,
            0.00021844024013262242,
            0.0005712770507670939,
            8.29325508675538e-05,
            0.00011477040243335068
        ],
        "align_select": "select Highschooler.name, Highschooler.grade",
        "align_structure": "SELECT-FROM-UNION-SELECT-FROM"
    },
    {
        "question": "Who has the most friends in High School.",
        "gold_select": "select Highschooler.name",
        "select_candidates": [
            "select Highschooler.name",
            "select Highschooler.name, Friend.friend_id",
            "select Highschooler.name, Friend.student_id",
            "select Highschooler.name, t1.c2"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "Highschooler Friend",
        "table_candidates": [
            "Highschooler Friend"
        ],
        "align_scores": [
            0.9886735081672668,
            5.866937499376945e-05,
            0.0010375877609476447,
            5.635898924083449e-05,
            0.0016943509690463543,
            6.187611870700493e-05,
            0.00036124378675594926,
            5.586808401858434e-05
        ],
        "align_select": "select Highschooler.name",
        "align_structure": "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "For which high school student are the most friends?",
        "gold_select": "select Highschooler.name",
        "select_candidates": [
            "select Highschooler.name",
            "select Highschooler.name, Friend.student_id",
            "select Highschooler.ID, Highschooler.name",
            "select Highschooler.name, t1.c2"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Friend",
        "table_candidates": [
            "Highschooler Friend",
            "Highschooler Friend Likes"
        ],
        "align_scores": [
            0.9863025546073914,
            7.621105032740161e-05,
            0.007192061748355627,
            8.605848415754735e-05,
            0.02202872559428215,
            7.692514191148803e-05,
            0.0005162043962627649,
            5.6838925956981257e-05
        ],
        "align_select": "select Highschooler.name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Who were friends of highschool Kyle.",
        "gold_select": "select Highschooler.name",
        "select_candidates": [
            "select Friend.friend_id",
            "select distinct Friend.friend_id",
            "select Friend.friend_id, Highschooler.name",
            "select list(Friend.friend_id)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Friend",
        "table_candidates": [
            "Highschooler Friend",
            "Highschooler Friend Likes"
        ],
        "align_scores": [
            0.2301246076822281,
            0.00015862789587117732,
            0.050020910799503326,
            0.00020982227579224855,
            0.0004602422995958477,
            9.18535515666008e-05,
            0.013384832069277763,
            7.162868132581934e-05
        ],
        "align_select": "select Friend.friend_id",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Who are friends of the high school student Kyle?.",
        "gold_select": "select Highschooler.name",
        "select_candidates": [
            "select Friend.friend_id",
            "select distinct Friend.friend_id",
            "select Friend.friend_id, Highschooler.name",
            "select list(Friend.friend_id)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Friend",
        "table_candidates": [
            "Highschooler Friend",
            "Highschooler Friend Likes"
        ],
        "align_scores": [
            0.25516852736473083,
            0.014945948496460915,
            0.05137711018323898,
            0.0002890191972255707,
            0.0004871614510193467,
            0.00015066363266669214,
            0.014849602244794369,
            0.00014880727394483984
        ],
        "align_select": "select Friend.friend_id",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show the high schoolers and grades of each student.",
        "gold_select": "select Highschooler.name, Highschooler.grade",
        "select_candidates": [
            "select Highschooler.name, Highschooler.grade",
            "select Highschooler.ID, Highschooler.name, Highschooler.grade",
            "select distinct Highschooler.name, Highschooler.grade",
            "select Highschooler.name, Highschooler.grade, Highschooler.ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler",
        "table_candidates": [
            "Highschooler"
        ],
        "align_scores": [
            0.8865978717803955,
            9.689395665191114e-05,
            0.0003533289418555796,
            8.267561497632414e-05,
            0.0031924571376293898,
            8.085769513854757e-05,
            0.00022048375103622675,
            7.575826020911336e-05
        ],
        "align_select": "select Highschooler.name, Highschooler.grade",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "Mention students who have a grade higher than 5 and have at least two friends.",
        "gold_select": "select Highschooler.name",
        "select_candidates": [
            "select Highschooler.name",
            "select Highschooler.name, Highschooler.grade",
            "select Highschooler.name, Highschooler.ID",
            "select Highschooler.name, Highschooler.name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "Highschooler Friend",
        "table_candidates": [
            "Highschooler Friend",
            "Highschooler Friend Likes"
        ],
        "align_scores": [
            0.061097413301467896,
            0.8285647034645081,
            0.0006711764726787806,
            0.0007859505130909383,
            0.0005250565591268241,
            0.032615356147289276,
            0.00023690344823990017,
            0.001871748361736536
        ],
        "align_select": "select Highschooler.name",
        "align_structure": "SELECT-FROM-WHERE-GROUP BY-HAVING"
    },
    {
        "question": "Who has grades higher than 5, and have at least 2 friends?",
        "gold_select": "select Highschooler.name",
        "select_candidates": [
            "select Highschooler.name",
            "select Highschooler.name, Highschooler.grade",
            "select Highschooler.name, Highschooler.ID",
            "select Highschooler.name, t0.c5"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "Highschooler Friend",
        "table_candidates": [
            "Highschooler Friend",
            "Highschooler Friend Likes"
        ],
        "align_scores": [
            0.4775049686431885,
            0.9484056234359741,
            0.0005031427135691047,
            0.0004513147287070751,
            0.0008608682546764612,
            0.028480451554059982,
            0.00029700977029278874,
            0.000614362710621208
        ],
        "align_select": "select Highschooler.name",
        "align_structure": "SELECT-FROM-WHERE-GROUP BY-HAVING"
    },
    {
        "question": "Show the students who have a grade above five and at least two friends.",
        "gold_select": "select Highschooler.name",
        "select_candidates": [
            "select Highschooler.name",
            "select Highschooler.name, Highschooler.grade",
            "select Highschooler.name, Highschooler.ID",
            "select Highschooler.ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY-HAVING",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Friend",
        "table_candidates": [
            "Highschooler Friend",
            "Highschooler Friend Likes"
        ],
        "align_scores": [
            0.8306057453155518,
            0.023085683584213257,
            0.0005440587410703301,
            0.00038451727596111596,
            0.03827625513076782,
            0.0007266336469911039,
            0.5868687629699707,
            0.013012941926717758
        ],
        "align_select": "select Highschooler.name",
        "align_structure": "SELECT-FROM-WHERE-GROUP BY-HAVING"
    },
    {
        "question": "Who have grades higher than five and have at least two friends?",
        "gold_select": "select Highschooler.name",
        "select_candidates": [
            "select Highschooler.name",
            "select Highschooler.name, Highschooler.grade",
            "select Highschooler.name, Highschooler.ID",
            "select Highschooler.name, t0.c6"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "Highschooler Friend",
        "table_candidates": [
            "Highschooler Friend",
            "Highschooler Friend Likes"
        ],
        "align_scores": [
            0.4132978618144989,
            0.8926685452461243,
            0.0005831322632730007,
            0.0005762156215496361,
            0.0014541710261255503,
            0.061723921447992325,
            0.00035366087104193866,
            0.0006949423113837838
        ],
        "align_select": "select Highschooler.name",
        "align_structure": "SELECT-FROM-WHERE-GROUP BY-HAVING"
    },
    {
        "question": "Which students have at least two likes",
        "gold_select": "select Highschooler.name",
        "select_candidates": [
            "select Highschooler.name",
            "select Highschooler.name, Highschooler.ID",
            "select Highschooler.name, Highschooler.grade",
            "select Highschooler.name, Likes.student_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Likes",
        "table_candidates": [
            "Highschooler Likes",
            "Friend Likes"
        ],
        "align_scores": [
            0.9441749453544617,
            0.00010570479207672179,
            0.011778014712035656,
            8.543590229237452e-05,
            0.0004598958184942603,
            6.050363299436867e-05,
            0.004374396521598101,
            9.116817818721756e-05
        ],
        "align_select": "select Highschooler.name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Which student has at least two likes?",
        "gold_select": "select Highschooler.name",
        "select_candidates": [
            "select Highschooler.name",
            "select Highschooler.name, Highschooler.ID",
            "select Highschooler.name, Likes.student_id",
            "select Highschooler.name, Highschooler.grade"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Likes",
        "table_candidates": [
            "Highschooler Likes"
        ],
        "align_scores": [
            0.9081462621688843,
            0.0001172256816062145,
            0.0017094728536903858,
            8.533282380085438e-05,
            0.002024918794631958,
            8.598245040047914e-05,
            0.00036779092624783516,
            6.14059972576797e-05
        ],
        "align_select": "select Highschooler.name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Show students whose are at least two persons or people like",
        "gold_select": "select Highschooler.name",
        "select_candidates": [
            "select Highschooler.name",
            "select Highschooler.name, Highschooler.ID",
            "select Highschooler.name, Highschooler.grade",
            "select Highschooler.name, Likes.student_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Likes",
        "table_candidates": [
            "Highschooler Friend Likes",
            "Highschooler Likes",
            "Friend Likes"
        ],
        "align_scores": [
            0.9744004011154175,
            0.038208890706300735,
            0.0021977706346660852,
            0.0009000718127936125,
            0.0005152315134182572,
            0.0002446122234687209,
            0.0027250449638813734,
            0.0019491423154249787
        ],
        "align_select": "select Highschooler.name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "I want to see which students have 2 Likes or more",
        "gold_select": "select Highschooler.name",
        "select_candidates": [
            "select Likes.student_id",
            "select Highschooler.name",
            "select Highschooler.name, Highschooler.ID",
            "select Highschooler.name, Likes.student_id"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Likes",
        "table_candidates": [
            "Likes",
            "Highschooler Likes",
            "Friend Likes",
            "Highschooler Friend Likes"
        ],
        "align_scores": [
            0.9906736016273499,
            0.0001308118226006627,
            0.9700174331665039,
            9.2520953330677e-05,
            0.019604826346039772,
            8.101783168967813e-05,
            0.003815349191427231,
            9.435007814317942e-05
        ],
        "align_select": "select Likes.student_id",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Who are the high schoolers and how many friends do they have?",
        "gold_select": "select Highschooler.name, count(*)",
        "select_candidates": [
            "select Highschooler.name, count(Friend.friend_id)",
            "select count(Friend.friend_id), Highschooler.name",
            "select Highschooler.name, count(*)",
            "select count(*), Highschooler.name"
        ],
        "select_labels": [
            0.0,
            0.0,
            1.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "Highschooler Friend",
        "table_candidates": [
            "Highschooler Friend"
        ],
        "align_scores": [
            0.0012784512946382165,
            0.006324263755232096,
            0.0053478144109249115,
            0.004885549657046795,
            0.8131937980651855,
            0.9901891350746155,
            0.9867348670959473,
            0.9926417469978333
        ],
        "align_select": "select count(*), Highschooler.name",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "Which high schooler has the most friends?",
        "gold_select": "select Highschooler.name",
        "select_candidates": [
            "select Highschooler.name",
            "select Highschooler.name, Friend.student_id",
            "select Highschooler.ID, Highschooler.name",
            "select Highschooler.name, Highschooler.grade"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Friend",
        "table_candidates": [
            "Highschooler Friend"
        ],
        "align_scores": [
            0.9902517795562744,
            7.490449934266508e-05,
            0.0036341233644634485,
            8.317015453940257e-05,
            0.01673729345202446,
            6.848932389402762e-05,
            0.0011763278162106872,
            6.089904854889028e-05
        ],
        "align_select": "select Highschooler.name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Name the students that have two or more likes.",
        "gold_select": "select Highschooler.name",
        "select_candidates": [
            "select Highschooler.name",
            "select Highschooler.name, Highschooler.ID",
            "select Highschooler.name, Highschooler.grade",
            "select Highschooler.ID, Highschooler.name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Likes",
        "table_candidates": [
            "Highschooler Likes"
        ],
        "align_scores": [
            0.9156680703163147,
            0.0001024698285618797,
            0.000765596516430378,
            6.688412395305932e-05,
            0.00029847450787201524,
            6.237014167709276e-05,
            0.0006527334917336702,
            8.381641237065196e-05
        ],
        "align_select": "select Highschooler.name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Who are students who like two or more students?.",
        "gold_select": "select Highschooler.name",
        "select_candidates": [
            "select Highschooler.name",
            "select Likes.student_id",
            "select Highschooler.name, Highschooler.ID",
            "select Likes.liked_id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Likes",
        "table_candidates": [
            "Likes",
            "Highschooler Likes",
            "Highschooler Friend Likes",
            "Friend Likes"
        ],
        "align_scores": [
            0.9402485489845276,
            0.0001908592093968764,
            0.9895527362823486,
            0.0001065896576619707,
            0.0012892711674794555,
            7.589085726067424e-05,
            0.5162304639816284,
            0.00014477773220278323
        ],
        "align_select": "select Highschooler.name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What students have 2 or more likes?",
        "gold_select": "select Highschooler.name",
        "select_candidates": [
            "select Likes.student_id",
            "select Highschooler.name",
            "select Highschooler.name, Highschooler.ID",
            "select Highschooler.name, Highschooler.grade"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Likes",
        "table_candidates": [
            "Highschooler Likes",
            "Likes",
            "Friend Likes",
            "Highschooler Friend Likes"
        ],
        "align_scores": [
            0.9942573308944702,
            0.00016635700012557209,
            0.9706399440765381,
            0.0001214683215948753,
            0.006036626175045967,
            9.233849414158612e-05,
            0.000628982437774539,
            6.875670806039125e-05
        ],
        "align_select": "select Likes.student_id",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Show who's in high school and friend count.",
        "gold_select": "select Highschooler.name, count(*)",
        "select_candidates": [
            "select Highschooler.name, count(*)",
            "select Highschooler.name, count(Friend.friend_id)",
            "select Highschooler.name, count(distinct Friend.friend_id)",
            "select distinct Highschooler.name, count(*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "Highschooler Friend",
        "table_candidates": [
            "Highschooler Friend"
        ],
        "align_scores": [
            0.595331072807312,
            0.6198365688323975,
            0.0041467598639428616,
            0.0033565196208655834,
            0.015234215185046196,
            0.012177630327641964,
            0.00861119944602251,
            0.0043899891898036
        ],
        "align_select": "select Highschooler.name, count(*)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "Which students (without friends)?",
        "gold_select": "select Highschooler.name",
        "select_candidates": [
            "select Highschooler.ID",
            "select Highschooler.ID, Highschooler.name",
            "select Highschooler.name",
            "select distinct Highschooler.ID"
        ],
        "select_labels": [
            0.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "Highschooler Friend",
        "table_candidates": [
            "Highschooler",
            "Highschooler Friend",
            "Highschooler Friend Likes"
        ],
        "align_scores": [
            0.010527978651225567,
            0.11001063138246536,
            0.0009547017398290336,
            0.0420641265809536,
            0.37219980359077454,
            0.9638724327087402,
            0.11624743789434433,
            0.014268239960074425
        ],
        "align_select": "select Highschooler.name",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM"
    },
    {
        "question": "Who are the students without friends?",
        "gold_select": "select Highschooler.name",
        "select_candidates": [
            "select distinct Highschooler.name",
            "select Highschooler.name",
            "select Highschooler.ID, Highschooler.name",
            "select distinct Highschooler.ID, Highschooler.name"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "Highschooler Friend",
        "table_candidates": [
            "Highschooler Friend",
            "Highschooler Friend Likes",
            "Highschooler"
        ],
        "align_scores": [
            0.13146843016147614,
            0.015077471733093262,
            0.025676820427179337,
            0.8906751275062561,
            0.00032968222512863576,
            0.0002798927016556263,
            0.0023104839492589235,
            0.00036712639848701656
        ],
        "align_select": "select Highschooler.name",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM"
    },
    {
        "question": "Which students don't have any friend?",
        "gold_select": "select Highschooler.name",
        "select_candidates": [
            "select Highschooler.ID, Highschooler.name",
            "select Highschooler.name",
            "select Highschooler.ID",
            "select distinct Highschooler.ID, Highschooler.name"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "Highschooler Friend",
        "table_candidates": [
            "Highschooler Friend",
            "Highschooler Friend Likes"
        ],
        "align_scores": [
            0.0010034742299467325,
            0.0004620716208592057,
            0.1306399554014206,
            0.8112955093383789,
            0.0668029636144638,
            0.0775032490491867,
            0.003476049518212676,
            0.0005536528769880533
        ],
        "align_select": "select Highschooler.name",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM"
    },
    {
        "question": "Who are the students that have no friends?",
        "gold_select": "select Highschooler.name",
        "select_candidates": [
            "select Highschooler.name",
            "select Highschooler.ID, Highschooler.name",
            "select Highschooler.name, Highschooler.ID",
            "select Highschooler.name, Highschooler.grade"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "Highschooler Friend",
        "table_candidates": [
            "Highschooler Friend",
            "Highschooler Friend Likes",
            "Highschooler Friend Likes"
        ],
        "align_scores": [
            0.1520594209432602,
            0.9052738547325134,
            0.0004542944661807269,
            0.00031723949359729886,
            0.0005637997528538108,
            0.0006027136114425957,
            0.0002057859383057803,
            0.00021058828860986978
        ],
        "align_select": "select Highschooler.name",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM"
    },
    {
        "question": "Who are all high school students that don't have friends.",
        "gold_select": "select Highschooler.name",
        "select_candidates": [
            "select distinct Highschooler.name",
            "select Highschooler.name",
            "select distinct Highschooler.name, Highschooler.grade",
            "select Highschooler.name, Highschooler.grade"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Friend",
        "table_candidates": [
            "Highschooler Friend",
            "Highschooler",
            "Highschooler Friend Likes"
        ],
        "align_scores": [
            0.05162631720304489,
            0.24493379890918732,
            0.8620905876159668,
            0.06554927676916122,
            0.00013004298671148717,
            0.00020483708067331463,
            0.00019332410010974854,
            0.00024153034610208124
        ],
        "align_select": "select Highschooler.name",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM"
    },
    {
        "question": "Who are all students currently in grade ten?",
        "gold_select": "select Highschooler.name",
        "select_candidates": [
            "select distinct Highschooler.name",
            "select Highschooler.name",
            "select distinct Highschooler.name, Highschooler.grade",
            "select Highschooler.name, Highschooler.grade"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler",
        "table_candidates": [
            "Highschooler"
        ],
        "align_scores": [
            0.14565454423427582,
            0.00023775493900757283,
            0.8910791277885437,
            0.0002532852813601494,
            0.00024397681409027427,
            6.559368193848059e-05,
            0.00027737434720620513,
            7.014127913862467e-05
        ],
        "align_select": "select Highschooler.name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Name all high schoolers in Grade 10",
        "gold_select": "select Highschooler.name",
        "select_candidates": [
            "select Highschooler.name",
            "select Highschooler.name, Highschooler.grade",
            "select distinct Highschooler.name",
            "select Highschooler.ID, Highschooler.name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler",
        "table_candidates": [
            "Highschooler"
        ],
        "align_scores": [
            0.9869174957275391,
            0.00014430373266804963,
            0.0001547621941426769,
            6.508276419481263e-05,
            0.06877867877483368,
            0.00011626129708020017,
            0.00030388872255571187,
            7.145287236198783e-05
        ],
        "align_select": "select Highschooler.name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Who has 3 or more friends?",
        "gold_select": "select Highschooler.name",
        "select_candidates": [
            "select Highschooler.name",
            "select Highschooler.name, Friend.student_id",
            "select Highschooler.name, Friend.friend_id",
            "select Highschooler.name, Highschooler.ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Highschooler Friend",
        "table_candidates": [
            "Highschooler Friend"
        ],
        "align_scores": [
            0.9707928895950317,
            0.00010555319749983028,
            0.002237760229036212,
            9.955795394489542e-05,
            0.00035575914080254734,
            7.74116997490637e-05,
            0.00461213244125247,
            7.810202077962458e-05
        ],
        "align_select": "select Highschooler.name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "How old are the dogs that have been treated on average?",
        "gold_select": "select avg(Dogs.age)",
        "select_candidates": [
            "select avg(Dogs.age)",
            "select an avg(Dogs.age)",
            "select the avg(Dogs.age)",
            "select avg(Dogs.date_of_birth)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "Dogs Treatments",
        "table_candidates": [
            "Dogs Treatments",
            "Dogs Professionals Treatments"
        ],
        "align_scores": [
            0.9849667549133301,
            7.907384861027822e-05,
            0.0012258710339665413,
            0.00010684426524676383,
            0.0008835415937937796,
            0.00011674644338199869,
            0.9679356813430786,
            8.464347047265619e-05
        ],
        "align_select": "select avg(Dogs.age)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "How old on average are these dogs that have gone through some treatment?",
        "gold_select": "select avg(Dogs.age)",
        "select_candidates": [
            "select avg(Dogs.age)",
            "select an avg(Dogs.age)",
            "select avg(Dogs.age)",
            "select the avg(Dogs.age)"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "Dogs Treatments",
        "table_candidates": [
            "Dogs Treatments",
            "Dogs Professionals Treatments"
        ],
        "align_scores": [
            0.8780356645584106,
            0.9607760906219482,
            0.0011437524808570743,
            0.0006838616682216525,
            0.8780356645584106,
            0.9607760906219482,
            0.0008657309808768332,
            0.0005665775970555842
        ],
        "align_select": "select avg(Dogs.age)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "Of dogs that have had treatment, how old are they on avergae?",
        "gold_select": "select avg(Dogs.age)",
        "select_candidates": [
            "select Treatments.dog_id, avg(Dogs.age)",
            "select Dogs.age, avg(Dogs.age)",
            "select Treatments.date_of_treatment, avg(Dogs.age)",
            "select Treatments.date_of_treatment"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-GROUP BY",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "Dogs Treatments",
        "table_candidates": [
            "Dogs Treatments",
            "Dogs Professionals Treatments"
        ],
        "align_scores": [
            0.032100848853588104,
            9.102242620429024e-05,
            0.00010442839993629605,
            6.751571345375851e-05,
            0.00013577818754129112,
            7.789688970660791e-05,
            0.007410046178847551,
            0.0026068375445902348
        ],
        "align_select": "select Treatments.dog_id, avg(Dogs.age)",
        "align_structure": "SELECT-FROM-WHERE-GROUP BY"
    },
    {
        "question": "The most uncommon dog of breeds and their treatments times of each.",
        "gold_select": "select Dogs.name, Treatments.date_of_treatment",
        "select_candidates": [
            "select Dogs.breed_code, Treatments.date_of_treatment",
            "select Treatments.dog_id, Treatments.date_of_treatment",
            "select Dogs.breed_code, avg(Treatments.date_of_treatment)",
            "select Dogs.dog_id, Treatments.date_of_treatment"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "Dogs Treatments",
        "table_candidates": [
            "Dogs Treatments",
            "Breeds Dogs Treatments",
            "Charges Dogs Treatments",
            "Treatment_Types Dogs Treatments",
            "Sizes Dogs Treatments"
        ],
        "align_scores": [
            0.9908733367919922,
            7.389801612589508e-05,
            0.9822476506233215,
            7.572936738142744e-05,
            0.7217925786972046,
            6.551590922754258e-05,
            0.5398169755935669,
            7.400330650852993e-05
        ],
        "align_select": "select Dogs.breed_code, Treatments.date_of_treatment",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Give us list of rarest breed of dogs which received treatment and their dates, too.",
        "gold_select": "select Dogs.name, Treatments.date_of_treatment",
        "select_candidates": [
            "select Dogs.breed_code, Treatments.date_of_treatment",
            "select Dogs.dog_id, Dogs.breed_code, Treatments.date_of_treatment",
            "select Dogs.dog_id, Dogs.owner_id, Treatments.date_of_treatment",
            "select Dogs.owner_id, Treatments.date_of_treatment"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "Dogs Treatments",
        "table_candidates": [
            "Dogs Treatments",
            "Breeds Dogs Treatments",
            "Charges Dogs Treatments",
            "Sizes Dogs Treatments",
            "Treatment_Types Dogs Treatments"
        ],
        "align_scores": [
            0.9909095168113708,
            7.417859887937084e-05,
            0.0006619765190407634,
            7.797127909725532e-05,
            0.0003108309465460479,
            6.009874778101221e-05,
            0.0005900745163671672,
            5.856104689883068e-05
        ],
        "align_select": "select Dogs.breed_code, Treatments.date_of_treatment",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "When did the dogs arrive and when did they leave for receiving treatment?",
        "gold_select": "select distinct Dogs.date_arrived, Dogs.date_departed",
        "select_candidates": [
            "select Dogs.date_arrived, Dogs.date_departed",
            "select Dogs.dog_id, Dogs.date_departed",
            "select Treatments.cost_of_treatment, t7.c6",
            "select Treatments.date_of_treatment, Treatments.cost_of_treatment"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Dogs Treatments",
        "table_candidates": [
            "Dogs Treatments",
            "Dogs Professionals Treatments"
        ],
        "align_scores": [
            0.9393069744110107,
            0.00015354673087131232,
            0.0006226523546501994,
            7.137428474379703e-05,
            0.0006220450159162283,
            9.047861385624856e-05,
            0.0008121445425786078,
            6.890708755236119e-05
        ],
        "align_select": "select Dogs.date_arrived, Dogs.date_departed",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "How old are dogs that underwent treatment averagely?",
        "gold_select": "select avg(Dogs.age)",
        "select_candidates": [
            "select avg(Dogs.age)",
            "select an avg(Dogs.age)",
            "select avg(Dogs.age), Treatments.dog_id",
            "select avg(Dogs.age), Treatments.date_of_treatment"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "Dogs Treatments",
        "table_candidates": [
            "Dogs Treatments",
            "Dogs Professionals Treatments"
        ],
        "align_scores": [
            0.9885450005531311,
            8.103591972030699e-05,
            0.0010423824423924088,
            0.0001070810976671055,
            0.00016626501746941358,
            6.0350757848937064e-05,
            0.00017920439131557941,
            6.376337842084467e-05
        ],
        "align_select": "select avg(Dogs.age)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "How old were dogs from which went through treatments on average?",
        "gold_select": "select avg(Dogs.age)",
        "select_candidates": [
            "select avg(Dogs.age)",
            "select an avg(Dogs.age)",
            "select the avg(Dogs.age)",
            "select avg(Dogs.date_of_birth)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "Dogs Treatments",
        "table_candidates": [
            "Dogs Treatments",
            "Dogs Professionals Treatments"
        ],
        "align_scores": [
            0.00012224055535625666,
            0.0001248447661055252,
            0.00012807082384824753,
            0.0001455751043977216,
            0.00012038061686325818,
            0.00015363357670139521,
            0.00022935272136237472,
            0.00021546958305407315
        ],
        "align_select": "select avg(Dogs.age)",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "How old are dogs that go through treatment on average?",
        "gold_select": "select avg(Dogs.age)",
        "select_candidates": [
            "select avg(Dogs.age)",
            "select an avg(Dogs.age)",
            "select the avg(Dogs.age)",
            "select avg(Dogs.date_of_birth)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "Dogs Treatments",
        "table_candidates": [
            "Dogs Treatments",
            "Dogs Professionals Treatments"
        ],
        "align_scores": [
            0.9891518354415894,
            9.016046533361077e-05,
            0.0010014045983552933,
            0.00011139147682115436,
            0.0007970918086357415,
            0.0001159259700216353,
            0.9760901927947998,
            0.00011038400407414883
        ],
        "align_select": "select avg(Dogs.age)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "Show the owner names and their emails in a state that starts containing North.",
        "gold_select": "select Owners.first_name, Owners.last_name, Owners.email_address",
        "select_candidates": [
            "select Owners.first_name, Owners.last_name, Owners.email_address",
            "select Owners.first_name, Owners.last_name, t4.c 7",
            "select Owners.first_name, Owners.last_name, t4.c-7",
            "select Owners.first_name, Owners.last_name, t4c7"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Owners",
        "table_candidates": [
            "Owners"
        ],
        "align_scores": [
            0.9923039078712463,
            7.460360211553052e-05,
            0.00027861580019816756,
            0.00010207261948380619,
            0.0003886606718879193,
            0.00010986776032950729,
            0.0003861889417748898,
            0.00010169401502935216
        ],
        "align_select": "select Owners.first_name, Owners.last_name, Owners.email_address",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Who has more dogs than anyone else, list their names and ids.",
        "gold_select": "select Dogs.owner_id, Owners.first_name, Owners.last_name",
        "select_candidates": [
            "select Owners.first_name, Owners.last_name, Dogs.dog_id",
            "select Dogs.owner_id, Dogs.dog_id",
            "select Owners.first_name, Owners.last_name, Owners.owner_id",
            "select Dogs.abandoned_yn, Dogs.dog_id"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-UNION-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Owners Dogs",
        "table_candidates": [
            "Owners Dogs",
            "Dogs",
            "Treatment_Types Owners Dogs",
            "Sizes Dogs",
            "Treatment_Types Dogs",
            "Breeds Owners Dogs",
            "Charges Dogs",
            "Sizes Owners Dogs"
        ],
        "align_scores": [
            0.006188263650983572,
            0.00012044481263728812,
            0.00016045583470258862,
            5.740215055993758e-05,
            0.9890102744102478,
            0.0001405321090715006,
            0.00028636958450078964,
            5.633244654745795e-05
        ],
        "align_select": "select Owners.first_name, Owners.last_name, Owners.owner_id",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "When were dogs received, and when did they depart after treatment",
        "gold_select": "select distinct Dogs.date_arrived, Dogs.date_departed",
        "select_candidates": [
            "select Treatments.date_of_treatment, Dogs.date_departed",
            "select Dogs.dog_id, Dogs.date_departed",
            "select Treatments.treatment_id, Dogs.date_arrived, Dogs.date_departed",
            "select Treatments.cost_of_treatment, Treatments.dog_id2"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Dogs Treatments",
        "table_candidates": [
            "Dogs Treatments",
            "Dogs Professionals Treatments"
        ],
        "align_scores": [
            0.0017699567833915353,
            0.0002493085921742022,
            0.0007114767213352025,
            0.00021838818793185055,
            0.0002668874803930521,
            0.0001288166968151927,
            0.00047478979104198515,
            0.0003608653205446899
        ],
        "align_select": "select Treatments.date_of_treatment, Dogs.date_departed",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "How many years old are dogs on average?",
        "gold_select": "select avg(Dogs.age)",
        "select_candidates": [
            "select avg(Dogs.age)",
            "select an avg(Dogs.age)",
            "select Avg(Dogs.age)",
            "select  avg(Dogs.age)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Dogs",
        "table_candidates": [
            "Dogs"
        ],
        "align_scores": [
            0.9962330460548401,
            6.113604467827827e-05,
            0.0005851954338140786,
            9.242147643817589e-05,
            0.9962330460548401,
            6.113604467827827e-05,
            0.9962330460548401,
            6.113604467827827e-05
        ],
        "align_select": "select avg(Dogs.age)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "How old are the dogs on average",
        "gold_select": "select avg(Dogs.age)",
        "select_candidates": [
            "select avg(Dogs.age)",
            "select an avg(Dogs.age)",
            "select  avg(Dogs.age)",
            "select Avg(Dogs.age)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Dogs",
        "table_candidates": [
            "Dogs"
        ],
        "align_scores": [
            0.9962343573570251,
            5.8781264669960365e-05,
            0.0005941633135080338,
            9.11649622139521e-05,
            0.9962343573570251,
            5.8781264669960365e-05,
            0.9962343573570251,
            5.8781264669960365e-05
        ],
        "align_select": "select avg(Dogs.age)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "On average how old are the dogs?",
        "gold_select": "select avg(Dogs.age)",
        "select_candidates": [
            "select avg(Dogs.age)",
            "select an avg(Dogs.age)",
            "select Avg(Dogs.age)",
            "select  avg(Dogs.age)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Dogs",
        "table_candidates": [
            "Dogs"
        ],
        "align_scores": [
            0.9963462948799133,
            0.00012885012256447226,
            0.0005739310872741044,
            0.00023169192718341947,
            0.9963462948799133,
            0.00012885012256447226,
            0.9963462948799133,
            0.00012885012256447226
        ],
        "align_select": "select avg(Dogs.age)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "When did dogs arrive and depart?",
        "gold_select": "select Dogs.date_arrived, Dogs.date_departed",
        "select_candidates": [
            "select Dogs.date_arrived, Dogs.date_departed",
            "select Dogs.dog_id, Dogs.date_departed",
            "select Dogs.owner_id, Dogs.date_departed",
            "select Dogs.weight, Dogs.date_departed"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Dogs",
        "table_candidates": [
            "Dogs"
        ],
        "align_scores": [
            0.9924367070198059,
            8.88532231329009e-05,
            0.00039646218647249043,
            8.69664509082213e-05,
            0.00039008495514281094,
            9.163081995211542e-05,
            0.000607492052949965,
            0.00013034639414399862
        ],
        "align_select": "select Dogs.date_arrived, Dogs.date_departed",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "When all the dogs left and arrived.",
        "gold_select": "select Dogs.date_arrived, Dogs.date_departed",
        "select_candidates": [
            "select Dogs.date_departed, Dogs.date_arrived",
            "select Dogs.dog_id, Dogs.date_departed",
            "select Dogs.owner_id, Dogs.date_arrived",
            "select Dogs.date_adopted, Dogs.date_departed"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Dogs",
        "table_candidates": [
            "Dogs"
        ],
        "align_scores": [
            0.9619986414909363,
            0.13626255095005035,
            0.000449963758001104,
            0.00019926310051232576,
            0.00033595316926948726,
            0.00023123534629121423,
            0.9714670181274414,
            0.10341673344373703
        ],
        "align_select": "select Dogs.date_departed, Dogs.date_arrived",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "How old is the oldest dog?",
        "gold_select": "select max(Dogs.age)",
        "select_candidates": [
            "select max(Dogs.age)",
            "select Dogs.age",
            "select Dogs.dog_id, Dogs.age",
            "select Dogs.dog_id, max(Dogs.age)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "Dogs",
        "table_candidates": [
            "Dogs"
        ],
        "align_scores": [
            0.00021751994790975004,
            9.471642988501117e-05,
            0.04920195788145065,
            0.03171840310096741,
            0.00033836241345852613,
            0.0003769976319745183,
            0.00010989155271090567,
            9.752858022693545e-05
        ],
        "align_select": "select max(Dogs.age)",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "When do dogs arrive and depart?",
        "gold_select": "select Dogs.date_arrived, Dogs.date_departed",
        "select_candidates": [
            "select Dogs.date_arrived, Dogs.date_departed",
            "select Dogs.dog_id, Dogs.date_departed",
            "select Dogs.owner_id, Dogs.date_departed",
            "select Dogs.weight, Dogs.date_departed"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Dogs",
        "table_candidates": [
            "Dogs"
        ],
        "align_scores": [
            0.9939752221107483,
            8.944217552198097e-05,
            0.0004032636934425682,
            8.656499994685873e-05,
            0.0004215991939418018,
            9.371202759211883e-05,
            0.0006964224739931524,
            0.00013077640323899686
        ],
        "align_select": "select Dogs.date_arrived, Dogs.date_departed",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "Tell me when were dogs came and left",
        "gold_select": "select Dogs.date_arrived, Dogs.date_departed",
        "select_candidates": [
            "select Dogs.date_arrived, Dogs.date_departed",
            "select Dogs.dog_id, Dogs.date_departed",
            "select Dogs.weight, Dogs.date_arrived, Dogs.date_departed",
            "select Dogs.weight, Dogs.date_departed"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Dogs",
        "table_candidates": [
            "Dogs"
        ],
        "align_scores": [
            0.7926134467124939,
            0.002142014680430293,
            0.00034622455132193863,
            0.00013574270997196436,
            0.00016914588923100382,
            9.474516991758719e-05,
            0.00045111560029909015,
            0.0002591631782706827
        ],
        "align_select": "select Dogs.date_arrived, Dogs.date_departed",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "When did dogs arrive and depart?.",
        "gold_select": "select Dogs.date_arrived, Dogs.date_departed",
        "select_candidates": [
            "select Dogs.date_arrived, Dogs.date_departed",
            "select Dogs.dog_id, Dogs.date_departed",
            "select Dogs.owner_id, Dogs.date_departed",
            "select Dogs.weight, Dogs.date_departed"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Dogs",
        "table_candidates": [
            "Dogs"
        ],
        "align_scores": [
            0.9934998750686646,
            8.802137745078653e-05,
            0.0003701763926073909,
            8.942255954025313e-05,
            0.00035091181052848697,
            9.406100434716791e-05,
            0.0005858120857737958,
            0.00013677812239620835
        ],
        "align_select": "select Dogs.date_arrived, Dogs.date_departed",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What day came and left each dog?",
        "gold_select": "select Dogs.date_arrived, Dogs.date_departed",
        "select_candidates": [
            "select Dogs.date_arrived, Dogs.date_departed",
            "select Dogs.dog_id, Dogs.date_arrived, Dogs.date_departed",
            "select Dogs.dog_id, Dogs.date_departed",
            "select Dogs.dog_id, Dogs.date_adopted, Dogs.date_departed"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Dogs",
        "table_candidates": [
            "Dogs"
        ],
        "align_scores": [
            0.9910059571266174,
            8.88789800228551e-05,
            0.0011251710820943117,
            8.561223512515426e-05,
            0.00046689820010215044,
            0.00010738919081632048,
            0.004159268923103809,
            9.202169894706458e-05
        ],
        "align_select": "select Dogs.date_arrived, Dogs.date_departed",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "When did each dog arrive and depart?",
        "gold_select": "select Dogs.date_arrived, Dogs.date_departed",
        "select_candidates": [
            "select Dogs.date_arrived, Dogs.date_departed",
            "select Dogs.dog_id, Dogs.date_arrived, Dogs.date_departed",
            "select Dogs.dog_id, Dogs.date_departed",
            "select Dogs.dog_id, Dogs.date_adopted, Dogs.date_departed"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Dogs",
        "table_candidates": [
            "Dogs"
        ],
        "align_scores": [
            0.9940711855888367,
            0.002175836591050029,
            0.019696511328220367,
            0.0010728586930781603,
            0.000489530386403203,
            0.0013183722039684653,
            0.004018895793706179,
            0.005188575945794582
        ],
        "align_select": "select Dogs.date_arrived, Dogs.date_departed",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "How old are dogs average?",
        "gold_select": "select avg(Dogs.age)",
        "select_candidates": [
            "select avg(Dogs.age)",
            "select an avg(Dogs.age)",
            "select Avg(Dogs.age)",
            "select avg(Dogs.age)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Dogs",
        "table_candidates": [
            "Dogs"
        ],
        "align_scores": [
            0.9961011409759521,
            6.0740250773960724e-05,
            0.0005652148392982781,
            9.145378862740472e-05,
            0.9961011409759521,
            6.0740250773960724e-05,
            0.9961011409759521,
            6.0740250773960724e-05
        ],
        "align_select": "select avg(Dogs.age)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "How old do dogs get on average.",
        "gold_select": "select avg(Dogs.age)",
        "select_candidates": [
            "select avg(Dogs.age)",
            "select an avg(Dogs.age)",
            "select Avg(Dogs.age)",
            "select avg(Dogs.age)."
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Dogs",
        "table_candidates": [
            "Dogs"
        ],
        "align_scores": [
            0.9956964254379272,
            7.624470890732482e-05,
            0.0006039649597369134,
            8.793311280896887e-05,
            0.9956964254379272,
            7.624470890732482e-05,
            0.0010313002858310938,
            5.78284052608069e-05
        ],
        "align_select": "select avg(Dogs.age)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "How old are dogs on average",
        "gold_select": "select avg(Dogs.age)",
        "select_candidates": [
            "select avg(Dogs.age)",
            "select an avg(Dogs.age)",
            "select Avg(Dogs.age)",
            "select  avg(Dogs.age)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Dogs",
        "table_candidates": [
            "Dogs"
        ],
        "align_scores": [
            0.9959850311279297,
            5.985144161968492e-05,
            0.0005802277592010796,
            9.389261686010286e-05,
            0.9959850311279297,
            5.985144161968492e-05,
            0.9959850311279297,
            5.985144161968492e-05
        ],
        "align_select": "select avg(Dogs.age)",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "Who operated a treatment that cost less than the average.",
        "gold_select": "select distinct Professionals.first_name, Professionals.last_name",
        "select_candidates": [
            "select Treatments.professional_id",
            "select Treatments.dog_id, Treatments.professional_id",
            "select Treatments.professional_id, Treatments.treatment_type_code",
            "select Owners.first_name, Owners.last_name"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals Treatments",
        "table_candidates": [
            "Treatments",
            "Owners Professionals Treatments",
            "Owners Treatments",
            "Dogs Professionals Treatments",
            "Breeds Owners Professionals Treatments",
            "Professionals Treatments",
            "Treatment_Types Owners Treatments",
            "Dogs Treatments"
        ],
        "align_scores": [
            0.4691435396671295,
            0.00011886706488439813,
            0.00017354612646158785,
            7.396978617180139e-05,
            0.0002030076866503805,
            7.163523696362972e-05,
            0.8849998116493225,
            7.569709123345092e-05
        ],
        "align_select": "select Owners.first_name, Owners.last_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Who have operated treatments that cost less than the average?",
        "gold_select": "select distinct Professionals.first_name, Professionals.last_name",
        "select_candidates": [
            "select Treatments.professional_id",
            "select Treatments.professional_id, Treatments.treatment_type_code",
            "select Professionals.first_name, Professionals.street",
            "select Professionals.role_code, Professionals.first_name"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals Treatments",
        "table_candidates": [
            "Treatments",
            "Dogs Professionals Treatments",
            "Professionals Treatments",
            "Owners Professionals Treatments",
            "Treatment_Types Professionals Treatments",
            "Breeds Professionals Treatments",
            "Dogs Treatments",
            "Charges Treatments"
        ],
        "align_scores": [
            0.09650851786136627,
            0.00024457581457681954,
            0.0002092093782266602,
            9.6485237008892e-05,
            0.0004461148346308619,
            8.648908260511234e-05,
            0.0009022862650454044,
            9.328352462034672e-05
        ],
        "align_select": "select Treatments.professional_id",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What operators have operated a treatment that cost less than the average?",
        "gold_select": "select distinct Professionals.first_name, Professionals.last_name",
        "select_candidates": [
            "select Treatments.professional_id",
            "select Treatments.professional_id, Treatments.treatment_type_code",
            "select Treatments.dog_id, Treatments.professional_id",
            "select t8.c2"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals Treatments",
        "table_candidates": [
            "Treatments",
            "Dogs Professionals Treatments",
            "Dogs Treatments",
            "Breeds Treatments",
            "Professionals Treatments",
            "Charges Treatments",
            "Sizes Treatments"
        ],
        "align_scores": [
            0.16274796426296234,
            0.884767472743988,
            0.00016476510791108012,
            0.0003775007789954543,
            0.00020813397713936865,
            0.00028308635228313506,
            0.0012538431910797954,
            0.00173462915699929
        ],
        "align_select": "select Treatments.professional_id",
        "align_structure": "SELECT-FROM-WHERE-GROUP BY-HAVING"
    },
    {
        "question": "How old is the oldest dog?",
        "gold_select": "select max(Dogs.age)",
        "select_candidates": [
            "select max(Dogs.age)",
            "select Dogs.age",
            "select Dogs.dog_id, Dogs.age",
            "select Dogs.dog_id, max(Dogs.age)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "Dogs",
        "table_candidates": [
            "Dogs"
        ],
        "align_scores": [
            0.00021751994790975004,
            9.471642988501117e-05,
            0.04920195788145065,
            0.03171840310096741,
            0.00033836241345852613,
            0.0003769976319745183,
            0.00010989155271090567,
            9.752858022693545e-05
        ],
        "align_select": "select max(Dogs.age)",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What professionals have treated patients with costs that were below average?",
        "gold_select": "select distinct Professionals.first_name, Professionals.last_name",
        "select_candidates": [
            "select Professionals.first_name",
            "select Professionals.first_name, Professionals.last_name",
            "select distinct Professionals.first_name, Professionals.last_name",
            "select distinct Professionals.first_name"
        ],
        "select_labels": [
            0.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals Treatments",
        "table_candidates": [
            "Professionals Treatments",
            "Dogs Professionals Treatments",
            "Owners Professionals Treatments",
            "Charges Professionals Treatments",
            "Treatment_Types Professionals Treatments",
            "Breeds Professionals Treatments",
            "Sizes Treatments",
            "Charges Treatments"
        ],
        "align_scores": [
            0.10285370796918869,
            0.00030710999271832407,
            0.9016949534416199,
            0.00024005600425880402,
            0.09469617903232574,
            0.00010020780609920621,
            0.04051333665847778,
            8.73489334480837e-05
        ],
        "align_select": "select Professionals.first_name, Professionals.last_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Who has treated with costs below average?",
        "gold_select": "select distinct Professionals.first_name, Professionals.last_name",
        "select_candidates": [
            "select distinct Treatments.professional_id",
            "select Treatments.professional_id",
            "select Treatments.professional_id, Treatments.treatment_type_code",
            "select distinct Treatments.professional_id, Treatments.treatment_type_code"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals Treatments",
        "table_candidates": [
            "Dogs Professionals Treatments",
            "Owners Dogs Professionals Treatments",
            "Owners Treatments",
            "Owners Professionals Treatments",
            "Professionals Treatments",
            "Dogs Treatments",
            "Owners Dogs Treatments",
            "Charges Treatments"
        ],
        "align_scores": [
            0.18028229475021362,
            0.0005292496643960476,
            0.4154963493347168,
            0.8671824336051941,
            0.000191197992535308,
            0.0002550385252106935,
            0.000334354757796973,
            0.00010419543832540512
        ],
        "align_select": "select Treatments.professional_id",
        "align_structure": "SELECT-FROM-WHERE-GROUP BY-HAVING"
    },
    {
        "question": "What breed have the most dogs",
        "gold_select": "select Breeds.breed_name",
        "select_candidates": [
            "select Breeds.breed_name",
            "select Breeds.breed_name, Dogs.breed_code",
            "select Breeds.breed_code, Breeds.breed_name",
            "select Breeds.breed_name, Dogs.breed_code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Breeds Dogs",
        "table_candidates": [
            "Breeds Dogs"
        ],
        "align_scores": [
            0.9913101196289062,
            8.677500591147691e-05,
            0.015578578226268291,
            7.417987217195332e-05,
            0.011789325624704361,
            7.130985613912344e-05,
            0.015578578226268291,
            7.417987217195332e-05
        ],
        "align_select": "select Breeds.breed_name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the most popular dog breed?",
        "gold_select": "select Breeds.breed_name",
        "select_candidates": [
            "select Breeds.breed_name",
            "select Breeds.breed_name, Dogs.breed_code",
            "select Breeds.breed_code, Breeds.breed_name",
            "select Breeds.breed_name (Dogs.breed_code)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Breeds Dogs",
        "table_candidates": [
            "Breeds Dogs",
            "Breeds Charges Dogs",
            "Charges Dogs"
        ],
        "align_scores": [
            0.9953868985176086,
            8.028528100112453e-05,
            0.004455480258911848,
            7.15216519893147e-05,
            0.004756603855639696,
            6.860006396891549e-05,
            0.0054040164686739445,
            7.238482066895813e-05
        ],
        "align_select": "select Breeds.breed_name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "For what breed most dogs have?",
        "gold_select": "select Breeds.breed_name",
        "select_candidates": [
            "select Breeds.breed_name",
            "select Breeds.breed_name, Dogs.breed_code",
            "select Breeds.breed_code, Breeds.breed_name",
            "select Breeds.breed_name, Dogs.breed_code, Dogs.size_code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Breeds Dogs",
        "table_candidates": [
            "Breeds Dogs",
            "Breeds Charges Dogs",
            "Breeds Treatment_Types Dogs"
        ],
        "align_scores": [
            0.9904961585998535,
            7.626375736435875e-05,
            0.007148719392716885,
            6.790687621105462e-05,
            0.004687896929681301,
            6.437746924348176e-05,
            0.00013887826935388148,
            5.867099389433861e-05
        ],
        "align_select": "select Breeds.breed_name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Show singers and the sales of songs belonging to each singer.",
        "gold_select": "select singer.Name, sum(song.Sales)",
        "select_candidates": [
            "select song.Singer_ID, sum(song.Sales)",
            "select singer.Name, sum(song.Sales)",
            "select song.Singer_ID, song.Sales",
            "select t2.c2, sum(song.Sales)"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer song",
        "table_candidates": [
            "song",
            "singer song"
        ],
        "align_scores": [
            0.9951537847518921,
            0.00027396524092182517,
            0.9959763884544373,
            0.0002004072885029018,
            0.9897022247314453,
            0.0004943927633576095,
            0.0005268902750685811,
            0.00016441920888610184
        ],
        "align_select": "select song.Singer_ID, sum(song.Sales)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "How much did songs sell for singers?",
        "gold_select": "select singer.Name, sum(song.Sales)",
        "select_candidates": [
            "select sum(song.Sales), song.Singer_ID",
            "select sum(song.Sales)",
            "select song.Sales",
            "select amount(song.Sales), song.Singer_ID"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer song",
        "table_candidates": [
            "song"
        ],
        "align_scores": [
            0.9745790362358093,
            0.0010306867770850658,
            0.0038274892140179873,
            0.0019558288622647524,
            0.006587381474673748,
            0.0015613760333508253,
            0.0006620125495828688,
            0.00024154646962415427
        ],
        "align_select": "select sum(song.Sales), song.Singer_ID",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "Which songs and singers are?",
        "gold_select": "select song.Title, singer.Name",
        "select_candidates": [
            "select song.Title, song.Singer_ID",
            "select song.Title, singer.Name",
            "select song.Title, t01.c2",
            "select song.Title, song.Singer_ID"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer song",
        "table_candidates": [
            "singer song",
            "song singer",
            "song",
            "song singer song"
        ],
        "align_scores": [
            0.013352648355066776,
            0.00018965068738907576,
            0.9767922759056091,
            0.00017417674825992435,
            0.000882645370438695,
            0.00013741489965468645,
            0.013352648355066776,
            0.00018965068738907576
        ],
        "align_select": "select song.Title, singer.Name",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What songs do they sing, and who are they?",
        "gold_select": "select song.Title, singer.Name",
        "select_candidates": [
            "select song.Title, singer.Name",
            "select t2.c1, singer.Name",
            "select song.Title, singer.Name",
            "select t01.c1, singer.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "singer song",
        "table_candidates": [
            "singer song",
            "song singer song",
            "song singer"
        ],
        "align_scores": [
            0.9957805871963501,
            0.9935006499290466,
            0.004795813467353582,
            0.016106879338622093,
            0.9957805871963501,
            0.9935006499290466,
            0.0014842700911685824,
            0.001772546675056219
        ],
        "align_select": "select song.Title, singer.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What song titles and singers are there?",
        "gold_select": "select song.Title, singer.Name",
        "select_candidates": [
            "select song.Title, song.Singer_ID",
            "select song.Title, song.Singer_ID, song.Sales",
            "select song.Title, song.Singer_ID, song.Song_ID",
            "select distinct song.Title, song.Singer_ID"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer song",
        "table_candidates": [
            "song"
        ],
        "align_scores": [
            0.9711535573005676,
            0.00016743801825214177,
            0.00017960365221370012,
            7.516981713706627e-05,
            0.00025524603552185,
            7.749020733172074e-05,
            0.010042701847851276,
            0.00011291952978353947
        ],
        "align_select": "select song.Title, song.Singer_ID",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What are the songs titles and singers?",
        "gold_select": "select song.Title, singer.Name",
        "select_candidates": [
            "select song.Title, song.Singer_ID",
            "select song.Title, song.Singer_ID, song.Sales",
            "select song.Title, song.Singer_ID, song.Song_ID",
            "select song.Title.c1, song.Singer_ID"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer song",
        "table_candidates": [
            "song"
        ],
        "align_scores": [
            0.9938169121742249,
            0.0001504916144767776,
            0.00019496049208100885,
            7.634976645931602e-05,
            0.00021206423116382211,
            8.013690239749849e-05,
            0.00042985909385606647,
            8.515278022969142e-05
        ],
        "align_select": "select song.Title, song.Singer_ID",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What are songs' titles and singers?",
        "gold_select": "select song.Title, singer.Name",
        "select_candidates": [
            "select song.Title, song.Singer_ID",
            "select song.Title, song.Singer_ID, song.Sales",
            "select song.Title, song.Singer_ID, song.Song_ID",
            "select song.Title, song.Singer_ID (refers to song.Song_ID)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer song",
        "table_candidates": [
            "song"
        ],
        "align_scores": [
            0.9945849776268005,
            0.0001360716123599559,
            0.00019722319848369807,
            7.740225555608049e-05,
            0.00015864362649153918,
            8.098810212686658e-05,
            0.0004310625954531133,
            8.30893695820123e-05
        ],
        "align_select": "select song.Title, song.Singer_ID",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "Show singers list in increasing order of net work.",
        "gold_select": "select singer.Name",
        "select_candidates": [
            "select singer.Name, singer.Net_Worth_Millions",
            "select singer.Name",
            "select singer.Singer_ID, singer.Name",
            "select singer.Singer_ID, singer.Name, singer.Net_Worth_Millions"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.0003157158207613975,
            0.0003157158207613975,
            0.9919192790985107,
            0.9919192790985107,
            0.000163169446750544,
            0.000163169446750544,
            0.00019581167725846171,
            0.00019581167725846171
        ],
        "align_select": "select singer.Name",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "Who are the singers that are not french citizens?",
        "gold_select": "select singer.Name",
        "select_candidates": [
            "select singer.Name",
            "select distinct singer.Name",
            "select singer.Name, singer.Citizenship",
            "select singer.Singer_ID, singer.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.9134068489074707,
            0.00022427519434131682,
            0.09232175350189209,
            0.00036049826303496957,
            0.00021022636792622507,
            7.695968815824017e-05,
            0.0003481283492874354,
            7.70619953982532e-05
        ],
        "align_select": "select singer.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What non-French citizens were singers",
        "gold_select": "select singer.Name",
        "select_candidates": [
            "select distinct singer.Singer_ID",
            "select distinct singer.Name",
            "select distinct singer.Name, singer.Birth_Year",
            "select count(*)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.010801189579069614,
            0.00019348420028109103,
            0.11926127970218658,
            0.00032611380447633564,
            0.0006378754042088985,
            7.726663170615211e-05,
            0.015837838873267174,
            7.193766941782087e-05
        ],
        "align_select": "select distinct singer.Singer_ID",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which singers don\u2019t have French citizenship?",
        "gold_select": "select singer.Name",
        "select_candidates": [
            "select singer.Name",
            "select singer.Singer_ID",
            "select distinct singer.Name",
            "select singer.Name, singer.Citizenship"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.8121795058250427,
            0.6500029563903809,
            0.04763403907418251,
            0.00681248540058732,
            0.1492561548948288,
            0.1236719861626625,
            0.00019095496099907905,
            0.00021408178145065904
        ],
        "align_select": "select singer.Name",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "What singers are known as \"sellers more than 300000\"?",
        "gold_select": "select distinct singer.Name",
        "select_candidates": [
            "select singer.Name",
            "select singer.Name, singer.Singer_ID",
            "select singer.Singer_ID, singer.Name",
            "select singer.Name, singer.Net_Worth_Millions"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer song",
        "table_candidates": [
            "singer song",
            "singer"
        ],
        "align_scores": [
            0.7578063607215881,
            0.00010103103704750538,
            0.00019636847719084471,
            7.49069222365506e-05,
            0.0002367528504692018,
            8.68037313921377e-05,
            0.0001959409419214353,
            6.14917153143324e-05
        ],
        "align_select": "select singer.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "list singers whose songs have sold more than 300000.",
        "gold_select": "select distinct singer.Name",
        "select_candidates": [
            "select song.Singer_ID",
            "select singer.Name",
            "select song.Singer_ID, singer.Name",
            "select singer.Name, song.Singer_ID"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer song",
        "table_candidates": [
            "song",
            "singer song",
            "song singer song"
        ],
        "align_scores": [
            0.19294492900371552,
            0.895710289478302,
            0.782891571521759,
            0.9353221654891968,
            0.00036585427005775273,
            0.0008488560561090708,
            0.00036293486482463777,
            0.0005676509463228285
        ],
        "align_select": "select singer.Name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Which singers have songs with sales more than 300000?",
        "gold_select": "select distinct singer.Name",
        "select_candidates": [
            "select singer.Name",
            "select song.Singer_ID",
            "select singer.Name, song.Singer_ID",
            "select singer.Name, singer.Birth_Year"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer song",
        "table_candidates": [
            "singer song",
            "song"
        ],
        "align_scores": [
            0.7294312715530396,
            0.9927678108215332,
            0.37652838230133057,
            0.9939941763877869,
            0.00035128919989801943,
            0.0012379273539409041,
            0.00018519854347687215,
            0.00026281000464223325
        ],
        "align_select": "select song.Singer_ID",
        "align_structure": "SELECT-FROM-WHERE-GROUP BY-HAVING"
    },
    {
        "question": "What singer has songs sold more than 300000?",
        "gold_select": "select distinct singer.Name",
        "select_candidates": [
            "select singer.Name",
            "select singer.Name, song.Singer_ID",
            "select song.Singer_ID",
            "select singer.Name, singer.Birth_Year"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer song",
        "table_candidates": [
            "singer song"
        ],
        "align_scores": [
            0.8037203550338745,
            0.9841893315315247,
            0.00034222262911498547,
            0.0005584849859587848,
            0.37789589166641235,
            0.9727072715759277,
            0.00015955095295794308,
            0.00022209447342902422
        ],
        "align_select": "select singer.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which singer has the most money?",
        "gold_select": "select singer.Name",
        "select_candidates": [
            "select singer.Name",
            "select singer.Singer_ID, singer.Name",
            "select singer.Name, singer.Net_Worth_Millions",
            "select singer.Name, singer.Birth_Year"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.9668483138084412,
            6.384276639437303e-05,
            0.0022550250869244337,
            5.992865771986544e-05,
            0.00038500805385410786,
            6.17287223576568e-05,
            0.00027491585933603346,
            5.9118217905052006e-05
        ],
        "align_select": "select singer.Name",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Which singer has the highest net worth",
        "gold_select": "select singer.Name",
        "select_candidates": [
            "select singer.Name",
            "select singer.Singer_ID, singer.Name",
            "select singer.Name, singer.Net_Worth_Millions",
            "select singer.Singer_ID, singer.Name, singer.Net_Worth_Millions"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.9456192255020142,
            6.297820073086768e-05,
            0.003030360909178853,
            5.944650183664635e-05,
            0.0005016218638047576,
            6.427600601455197e-05,
            0.000389430089853704,
            6.19662314420566e-05
        ],
        "align_select": "select singer.Name",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Which singer has the highest net worth?",
        "gold_select": "select singer.Name",
        "select_candidates": [
            "select singer.Name",
            "select singer.Singer_ID, singer.Name",
            "select singer.Name, singer.Net_Worth_Millions",
            "select singer.Singer_ID, singer.Name, singer.Net_Worth_Millions"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.9364436864852905,
            6.289477460086346e-05,
            0.0028241323307156563,
            6.03073785896413e-05,
            0.0004935595788992941,
            6.364060391206294e-05,
            0.0003445416805334389,
            6.338084494927898e-05
        ],
        "align_select": "select singer.Name",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Which is the singer with the most money?",
        "gold_select": "select singer.Name",
        "select_candidates": [
            "select singer.Name",
            "select singer.Singer_ID, singer.Name",
            "select singer.Name, singer.Net_Worth_Millions",
            "select singer.Name, singer.Birth_Year"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.9742937684059143,
            6.968265370232984e-05,
            0.003344613593071699,
            6.364248838508502e-05,
            0.0004966325359418988,
            6.306287104962394e-05,
            0.0003660311340354383,
            6.306401337496936e-05
        ],
        "align_select": "select singer.Name",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What singers were born in the year 1948 or 1949?",
        "gold_select": "select singer.Name",
        "select_candidates": [
            "select singer.Name",
            "select singer.Name, singer.Birth_Year",
            "select singer.Singer_ID",
            "select distinct singer.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.9604690670967102,
            0.0002535720996093005,
            0.00018504109175410122,
            6.84899787302129e-05,
            0.01892795041203499,
            0.00036239431938156486,
            0.1108914166688919,
            0.0001751196541590616
        ],
        "align_select": "select singer.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What singers were born in 1948 or 1949?",
        "gold_select": "select singer.Name",
        "select_candidates": [
            "select singer.Name",
            "select singer.Name, singer.Birth_Year",
            "select singer.Singer_ID",
            "select singer.Name, singer.Net_Worth_Millions"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.9648511409759521,
            0.0001711687509668991,
            0.00018358632223680615,
            6.717725773341954e-05,
            0.02331562526524067,
            0.0003611502470448613,
            0.00017194313113577664,
            6.917775317560881e-05
        ],
        "align_select": "select singer.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Of which singers were born either 1948 or 1949?",
        "gold_select": "select singer.Name",
        "select_candidates": [
            "select count(*)",
            "select singer.Name",
            "select singer.Singer_ID",
            "select singer.Name, singer.Birth_Year"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.03462663292884827,
            7.470447599189356e-05,
            0.6315727233886719,
            0.00020396613399498165,
            0.008929628878831863,
            0.0005323031218722463,
            0.00016291184874717146,
            6.459109135903418e-05
        ],
        "align_select": "select singer.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which singers were born in 1948 or 1949?",
        "gold_select": "select singer.Name",
        "select_candidates": [
            "select singer.Name",
            "select singer.Name, singer.Birth_Year",
            "select singer.Singer_ID",
            "select singer.Name, singer.Net_Worth_Millions"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.9703128933906555,
            0.00020224356558173895,
            0.00018753689073491842,
            7.119285874068737e-05,
            0.020232893526554108,
            0.00046525007928721607,
            0.00018972049292642623,
            7.621745317010209e-05
        ],
        "align_select": "select singer.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show singers whose country isn't France",
        "gold_select": "select singer.Name",
        "select_candidates": [
            "select singer.Name",
            "select singer.Singer_ID",
            "select singer.Name, singer.Citizenship",
            "select singer.Name, singer.Birth_Year"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.978839099407196,
            7.955230103107169e-05,
            0.004207924474030733,
            8.946400339482352e-05,
            0.00020840980869252235,
            6.488434155471623e-05,
            0.00020035474153701216,
            6.859214045107365e-05
        ],
        "align_select": "select singer.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Who are singers that do not have French citizenship?",
        "gold_select": "select singer.Name",
        "select_candidates": [
            "select singer.Name",
            "select singer.Name, singer.Citizenship",
            "select distinct singer.Name",
            "select singer.Singer_ID, singer.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.9235391020774841,
            0.02228134498000145,
            0.000180923510924913,
            0.00013877700257580727,
            0.0653623417019844,
            0.12949471175670624,
            0.00040759818512015045,
            0.000138106377562508
        ],
        "align_select": "select singer.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List all the singers who are not French.",
        "gold_select": "select singer.Name",
        "select_candidates": [
            "select distinct singer.Name",
            "select singer.Name",
            "select distinct singer.Name, singer.Citizenship",
            "select distinct singer.Name, singer.Birth_Year"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.10006186366081238,
            0.0001531637681182474,
            0.9688674211502075,
            0.0001335210690740496,
            0.0002752862055785954,
            6.273460166994482e-05,
            0.0004489134589675814,
            5.795349716208875e-05
        ],
        "align_select": "select singer.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List singers from whose citizenship is not France",
        "gold_select": "select singer.Name",
        "select_candidates": [
            "select singer.Name",
            "select singer.Singer_ID",
            "select singer.Name, singer.Citizenship",
            "select singer.Name, singer.Birth_Year"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.9846899509429932,
            0.00010244258010061458,
            0.012595903128385544,
            9.797020902624354e-05,
            0.00018251777510158718,
            6.0856145864818245e-05,
            0.000196951485122554,
            7.244586595334113e-05
        ],
        "align_select": "select singer.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Who sings? Their nationality is not France.",
        "gold_select": "select singer.Name",
        "select_candidates": [
            "select singer.Name",
            "select singer.Name, singer.Citizenship",
            "select singer.Singer_ID, singer.Name",
            "select distinct singer.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.9716346859931946,
            0.0024031924549490213,
            0.00022490731498692185,
            0.00010351312084821984,
            0.0004783207841683179,
            0.00014539835683535784,
            0.08392202854156494,
            0.011052560992538929
        ],
        "align_select": "select singer.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List singers who have no songs.",
        "gold_select": "select singer.Name",
        "select_candidates": [
            "select singer.Name",
            "select singer.Singer_ID, singer.Name",
            "select singer.Name, singer.Singer_ID",
            "select singer.Name, singer.Birth_Year"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer",
            "singer song"
        ],
        "align_scores": [
            0.9229391813278198,
            0.19886812567710876,
            0.00038301985478028655,
            0.0002718319883570075,
            0.00020366258104331791,
            0.00022144740796647966,
            0.00017686754290480167,
            0.00019920821068808436
        ],
        "align_select": "select singer.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List singers who don't have any songs.",
        "gold_select": "select singer.Name",
        "select_candidates": [
            "select singer.Name",
            "select singer.Name, singer.Singer_ID",
            "select singer.Singer_ID, singer.Name",
            "select singer.Name, singer.Birth_Year"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer",
            "singer song"
        ],
        "align_scores": [
            0.5788125991821289,
            0.7066653370857239,
            0.00022894194989930838,
            0.00021147564984858036,
            0.00039248098619282246,
            0.0003471989475656301,
            0.00018968198855873197,
            0.00021120462042745203
        ],
        "align_select": "select singer.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What singer does not have any song?",
        "gold_select": "select singer.Name",
        "select_candidates": [
            "select singer.Name",
            "select singer.Name, song.Singer_ID",
            "select singer.Singer_ID, singer.Name",
            "select singer.Name, singer.Singer_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer",
            "singer song"
        ],
        "align_scores": [
            0.43804067373275757,
            0.9384508728981018,
            0.00027511228108778596,
            0.0002626116038300097,
            0.00045783084351569414,
            0.00030830924515612423,
            0.0002356724871788174,
            0.00022679823450744152
        ],
        "align_select": "select singer.Name",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM"
    },
    {
        "question": "Which singer have no songs.",
        "gold_select": "select singer.Name",
        "select_candidates": [
            "select singer.Name",
            "select singer.Name, song.Singer_ID",
            "select singer.Singer_ID, singer.Name",
            "select singer.Name, singer.Singer_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer",
            "singer song"
        ],
        "align_scores": [
            0.6518532037734985,
            0.9073225259780884,
            0.00022227536828722805,
            0.00022608488507103175,
            0.00042218013550154865,
            0.0002866326249204576,
            0.000216450949665159,
            0.00021190474217291921
        ],
        "align_select": "select singer.Name",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM"
    },
    {
        "question": "Which singers were born in either 1949 or 1948?",
        "gold_select": "select singer.Name",
        "select_candidates": [
            "select singer.Name",
            "select singer.Name, singer.Birth_Year",
            "select singer.Singer_ID",
            "select singer.Name, singer.Singer_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.9491309523582458,
            0.0002413802722003311,
            0.0001873563596745953,
            6.78591022733599e-05,
            0.017146194353699684,
            0.0004654905351344496,
            0.00024428381584584713,
            0.00010495369497220963
        ],
        "align_select": "select singer.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which singers were born in 1948 or 1949?",
        "gold_select": "select singer.Name",
        "select_candidates": [
            "select singer.Name",
            "select singer.Name, singer.Birth_Year",
            "select singer.Singer_ID",
            "select singer.Name, singer.Net_Worth_Millions"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.9703128933906555,
            0.00020224356558173895,
            0.00018753689073491842,
            7.119285874068737e-05,
            0.020232893526554108,
            0.00046525007928721607,
            0.00018972049292642623,
            7.621745317010209e-05
        ],
        "align_select": "select singer.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Who were the singers whose birthyear is either 1948 or 1949?.",
        "gold_select": "select singer.Name",
        "select_candidates": [
            "select singer.Name",
            "select singer.Name, singer.Birth_Year",
            "select singer.Singer_ID, singer.Name",
            "select singer.Name, singer.Singer_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.9927536845207214,
            0.0003195034805685282,
            0.00019560418149922043,
            6.570160621777177e-05,
            0.00026594032533466816,
            0.0001057330155163072,
            0.00022561910736840218,
            9.411483188159764e-05
        ],
        "align_select": "select singer.Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which singers have more than one song?",
        "gold_select": "select singer.Name",
        "select_candidates": [
            "select singer.Name",
            "select singer.Name, song.Singer_ID",
            "select singer.Singer_ID, singer.Name",
            "select song.Title, singer.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer song",
        "table_candidates": [
            "singer song"
        ],
        "align_scores": [
            0.9938656687736511,
            9.063984180102125e-05,
            0.0005900163669139147,
            7.888623076723889e-05,
            0.0012061616871505976,
            8.149119094014168e-05,
            0.013026644475758076,
            7.293844828382134e-05
        ],
        "align_select": "select singer.Name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Who are singers that have more than one song?",
        "gold_select": "select singer.Name",
        "select_candidates": [
            "select singer.Name",
            "select singer.Name, song.Singer_ID",
            "select singer.Name, singer.Singer_ID",
            "select singer.Name, song.Title"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer song",
        "table_candidates": [
            "singer song"
        ],
        "align_scores": [
            0.992183268070221,
            0.00010203992133028805,
            0.0006377565441653132,
            7.498596824007109e-05,
            0.0007715975516475737,
            7.924021338112652e-05,
            0.18265216052532196,
            7.68433092162013e-05
        ],
        "align_select": "select singer.Name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Which singer is the most valuable?",
        "gold_select": "select singer.Name",
        "select_candidates": [
            "select singer.Name",
            "select singer.Singer_ID, singer.Name",
            "select singer.Name, singer.Net_Worth_Millions",
            "select singer.Name, singer.Birth_Year"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.9906502962112427,
            6.48364657536149e-05,
            0.0018565446371212602,
            5.8338871895102784e-05,
            0.0004882157954853028,
            6.0917402151972055e-05,
            0.0004181320546194911,
            6.056205165805295e-05
        ],
        "align_select": "select singer.Name",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Who is the most valuable singer?",
        "gold_select": "select singer.Name",
        "select_candidates": [
            "select singer.Name",
            "select singer.Name, singer.Net_Worth_Millions",
            "select singer.Singer_ID, singer.Name",
            "select singer.Name, singer.Net_Worth_Millions, singer.Citizenship"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer",
            "singer song"
        ],
        "align_scores": [
            0.991807758808136,
            6.283374386839569e-05,
            0.0005037017981521785,
            5.956469976808876e-05,
            0.0014414411270990968,
            5.68727555219084e-05,
            0.0001647394965402782,
            5.7715795264812186e-05
        ],
        "align_select": "select singer.Name",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What houses or apartments are there with more than one room?",
        "gold_select": "select Properties.property_name",
        "select_candidates": [
            "select Properties.property_name",
            "select Properties.property_name, Properties.property_address",
            "select Properties.property_name ou Properties.property_address",
            "select Properties.property_address, Properties.room_count"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "Properties",
        "table_candidates": [
            "Properties",
            "Other_Available_Features Properties"
        ],
        "align_scores": [
            0.33803436160087585,
            0.0135670630261302,
            0.005424586124718189,
            0.0002738088369369507,
            0.12966427206993103,
            0.00040976214222609997,
            0.00022596311464440078,
            7.808727968949825e-05
        ],
        "align_select": "select Properties.property_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What properties are houses or apartments with more than 1 room?.",
        "gold_select": "select Properties.property_name",
        "select_candidates": [
            "select Properties.property_name",
            "select Properties.property_name, Properties.property_address",
            "select Properties.property_name, Properties.room_count",
            "select Properties.property_name, Properties.property_address, Properties.room_count"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "Properties",
        "table_candidates": [
            "Properties"
        ],
        "align_scores": [
            0.9838938117027283,
            0.0016672209603711963,
            0.001180067309178412,
            0.00011636544513748959,
            0.00021267168631311506,
            6.761274562450126e-05,
            0.00024194776779040694,
            7.242086576297879e-05
        ],
        "align_select": "select Properties.property_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Feature Name of what is AirCon?",
        "gold_select": "select Ref_Feature_Types.feature_type_name",
        "select_candidates": [
            "select Other_Available_Features.feature_name",
            "select Other_Available_Features.feature_id, Other_Available_Features.feature_name",
            "select Other_Available_Features.feature_name, Other_Available_Features.feature_description",
            "select Other_Available_Features.feature_name, Other_Available_Features.feature_type_code"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Ref_Feature_Types Other_Available_Features",
        "table_candidates": [
            "Other_Available_Features",
            "Ref_Feature_Types Other_Available_Features",
            "Ref_Feature_Types Ref_Property_Types Other_Available_Features",
            "Ref_Property_Types Other_Available_Features",
            "Other_Available_Features Properties"
        ],
        "align_scores": [
            0.6259239315986633,
            7.348300277953967e-05,
            0.0001086792690330185,
            6.0135440435260534e-05,
            0.0004034617159049958,
            6.208896957105026e-05,
            0.00019200402311980724,
            6.01323445152957e-05
        ],
        "align_select": "select Other_Available_Features.feature_name",
        "align_structure": "SELECT-FROM-WHERE"
    }
]