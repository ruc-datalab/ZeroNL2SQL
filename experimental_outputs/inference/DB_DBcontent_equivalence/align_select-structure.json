[
    {
        "question": "Show name, country, age for all singers ordered by age from the oldest to the youngest.",
        "gold_select": "select singer.first_name, singer.last_name, singer.Country, singer.Age",
        "select_candidates": [
            "select singer.first_name, singer.last_name, singer.Country, singer.Age",
            "select singer.first_name, singer.Country, singer.Age",
            "select singer.first_name, singer.last_name, singer.Country",
            "select singer.first_name, singer.last_name, singer.Country, singer.Age"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.993583619594574,
            0.993583619594574,
            0.0005972952931188047,
            0.0005972952931188047,
            0.0063363634981215,
            0.0063363634981215,
            0.993583619594574,
            0.993583619594574
        ],
        "align_select": "select singer.first_name, singer.last_name, singer.Country, singer.Age",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "What are the names, countries, and ages for every singer in descending order of age?",
        "gold_select": "select singer.first_name, singer.last_name, singer.Country, singer.Age",
        "select_candidates": [
            "select singer.first_name, singer.last_name, singer.Country, singer.Age",
            "select singer.first_name, singer.last_name, singer.Country, singer.Age",
            "select singer.first_name, singer.last_name, singer.Country, singer.Age",
            "select singer.first_name, singer.last_name, singer.Country, singer.Age"
        ],
        "select_labels": [
            1.0,
            1.0,
            1.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.9945632815361023,
            0.9945632815361023,
            0.9945632815361023,
            0.9945632815361023,
            0.9945632815361023,
            0.9945632815361023,
            0.9945632815361023,
            0.9945632815361023
        ],
        "align_select": "select singer.first_name, singer.last_name, singer.Country, singer.Age",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "List singer names and number of concerts for each singer.",
        "gold_select": "select singer.first_name, singer.last_name, count(*)",
        "select_candidates": [
            "select singer.first_name, singer.last_name, count(*)",
            "select singer.first_name, singer.last_name, count(*), singer.Singer_ID",
            "select singer.first_name, singer.last_name, count(*),",
            "select singer.first_name, singer.last_name, count(*), concert.concert_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer singer_in_concert",
        "table_candidates": [
            "singer singer_in_concert",
            "singer concert singer_in_concert"
        ],
        "align_scores": [
            0.9942465424537659,
            0.00015982412151060998,
            0.0002810339501593262,
            0.00010723354353103787,
            0.0013950151624158025,
            0.00012342915579210967,
            0.00028835091507062316,
            0.00015893160889390856
        ],
        "align_select": "select singer.first_name, singer.last_name, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "What are the names of the singers and number of concerts for each person?",
        "gold_select": "select singer.first_name, singer.last_name, count(*)",
        "select_candidates": [
            "select singer.first_name, singer.last_name, count(*)",
            "select singer.first_name, singer.last_name, count(*), singer.Singer_ID",
            "select singer.first_name, singer.last_name, count(*),",
            "select singer.first_name, singer.last_name, count(*), concert.Stadium_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer singer_in_concert",
        "table_candidates": [
            "singer concert singer_in_concert",
            "singer singer_in_concert"
        ],
        "align_scores": [
            0.9934166669845581,
            0.00019895497825928032,
            0.0003454654070083052,
            0.00011295032891212031,
            0.0019608447328209877,
            0.00014515095972456038,
            0.00040223091491498053,
            0.00021737666975241154
        ],
        "align_select": "select singer.first_name, singer.last_name, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "List all singer names in concerts in year 2014.",
        "gold_select": "select singer.first_name, singer.last_name",
        "select_candidates": [
            "select singer.first_name, singer.last_name",
            "select singer.first_name, singer.last_name, singer.gender",
            "select singer.first_name, singer.last_name, singer.Singer_ID",
            "select singer.first_name, singer.last_name, singer.Age"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer concert singer_in_concert",
        "table_candidates": [
            "singer concert singer_in_concert"
        ],
        "align_scores": [
            0.9821435809135437,
            0.0021428288891911507,
            0.00022072438150644302,
            9.713328472571447e-05,
            0.00014316222222987562,
            9.43250852287747e-05,
            0.00018049808568321168,
            8.554205123800784e-05
        ],
        "align_select": "select singer.first_name, singer.last_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of the singers who performed in a concert in 2014?",
        "gold_select": "select singer.first_name, singer.last_name",
        "select_candidates": [
            "select singer.first_name, singer.last_name",
            "select distinct singer.first_name, singer.last_name",
            "select singer.first_name, singer.last_name, singer.Age",
            "select singer.first_name, singer.last_name, singer.gender"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer concert singer_in_concert",
        "table_candidates": [
            "singer concert singer_in_concert"
        ],
        "align_scores": [
            0.9731041193008423,
            9.631269495002925e-05,
            0.061756983399391174,
            6.389174814103171e-05,
            0.0002305038651684299,
            6.327473965939134e-05,
            0.0003621886717155576,
            6.66427004034631e-05
        ],
        "align_select": "select singer.first_name, singer.last_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "what is the name and nation of the singer who have a song having 'Hey' in its name?",
        "gold_select": "select singer.first_name, singer.last_name, singer.Country",
        "select_candidates": [
            "select singer.first_name, singer.last_name, singer.Country",
            "select singer.first_name, singer.last_name, singer.Country, singer.Song_Name",
            "select singer.first_name, singer.last_name, singer.first_name, singer.Country",
            "select singer.first_name, singer.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.06690815091133118,
            0.00010093570745084435,
            0.0002683942730072886,
            7.648464816156775e-05,
            0.00022901181364431977,
            8.646261994726956e-05,
            0.001019045477733016,
            0.00020165953901596367
        ],
        "align_select": "select singer.first_name, singer.last_name, singer.Country",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the name and country of origin of every singer who has a song with the word 'Hey' in its title?",
        "gold_select": "select singer.first_name, singer.last_name, singer.Country",
        "select_candidates": [
            "select singer.first_name, singer.last_name, singer.Country",
            "select singer.first_name, singer.last_name",
            "select singer.first_name, singer.last_name, singer.Country, singer.Singer_ID",
            "select distinct singer.first_name, singer.last_name, singer.Country"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.9515097737312317,
            0.00011601908772718161,
            0.0007106930133886635,
            0.00037159351631999016,
            0.000256372062722221,
            9.439184213988483e-05,
            0.01385188102722168,
            7.841418846510351e-05
        ],
        "align_select": "select singer.first_name, singer.last_name, singer.Country",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show the name and the release year of the song by the youngest singer.",
        "gold_select": "select singer.Song_Name, singer.Song_release_year",
        "select_candidates": [
            "select singer.Song_Name, singer.Song_release_year",
            "select singer.Country, singer.Song_release_year",
            "select singer.Song_Name, t1.1.c4",
            "select singer.Name, singer.Song_release_year"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.9946042895317078,
            7.191573240561411e-05,
            0.0005908888997510076,
            7.575211930088699e-05,
            0.0005069982726126909,
            0.00014149701746646315,
            0.9700374007225037,
            7.704451127210632e-05
        ],
        "align_select": "select singer.Song_Name, singer.Song_release_year",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What are the names and release years for all the songs of the youngest singer?",
        "gold_select": "select singer.Song_Name, singer.Song_release_year",
        "select_candidates": [
            "select singer.Song_Name, singer.Song_release_year",
            "select singer.Country, singer.Song_release_year",
            "select singer.Song_Name, t1.1.c4",
            "select singer.Song_Name), singer.Song_release_year"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.9900801777839661,
            7.960025686770678e-05,
            0.0007303418824449182,
            8.189659274648875e-05,
            0.0004832010599784553,
            0.00012925572809763253,
            0.0033351436723023653,
            7.523952808696777e-05
        ],
        "align_select": "select singer.Song_Name, singer.Song_release_year",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "List all song names by singers above the average age.",
        "gold_select": "select singer.Song_Name",
        "select_candidates": [
            "select singer.Song_Name",
            "select singer.Song_Name, singer.Song_release_year",
            "select singer.Song_Name, singer.Is_male",
            "select singer.Song_Name, singer.birthyear"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.9946012496948242,
            0.00012088572111679241,
            0.00014128722250461578,
            5.65557274967432e-05,
            0.0001483810628997162,
            5.751415665145032e-05,
            0.00020818438497371972,
            5.987028271192685e-05
        ],
        "align_select": "select singer.Song_Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are all the song names by singers who are older than average?",
        "gold_select": "select singer.Song_Name",
        "select_candidates": [
            "select singer.Song_Name",
            "select singer.Song_Name, singer.Is_male",
            "select singer.Song_Name, singer.Song_release_year",
            "select singer.Song_Name, singer.birthyear"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.9868905544281006,
            0.00010323966125724837,
            0.00015414833615068346,
            5.691811747965403e-05,
            0.00013133326137904078,
            5.783242886536755e-05,
            0.0002145583275705576,
            6.76226190989837e-05
        ],
        "align_select": "select singer.Song_Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show the name and the release year of the song by the youngest singer.",
        "gold_select": "select singer.Song_Name, singer.Song_release_year",
        "select_candidates": [
            "select singer.Song_Name, singer.Song_release_year",
            "select singer.Song_Name, singer.Song_release_year, singer.birthyear",
            "select singer.last_name, singer.Song_release_year",
            "select singer.Song_Name, singer.Song_release_year."
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.9946042895317078,
            7.191573240561411e-05,
            0.00038414058508351445,
            5.782923108199611e-05,
            0.0030329623259603977,
            7.079477654770017e-05,
            0.004135486204177141,
            7.20471070962958e-05
        ],
        "align_select": "select singer.Song_Name, singer.Song_release_year",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What are the names and release years for all the songs of the youngest singer?",
        "gold_select": "select singer.Song_Name, singer.Song_release_year",
        "select_candidates": [
            "select singer.Song_Name, singer.Song_release_year",
            "select singer.last_name, singer.Song_Name, singer.Song_release_year",
            "select singer.Song_Name, singer.Song_release_year, singer.birthyear",
            "select singer.Song_Name, t1.1.c5"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.9900801777839661,
            7.960025686770678e-05,
            0.0002721234632190317,
            8.161000732798129e-05,
            0.00022777471167501062,
            5.663808042299934e-05,
            0.0004915798199363053,
            0.00013013998977839947
        ],
        "align_select": "select singer.Song_Name, singer.Song_release_year",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "List all song names by singers above the average age.",
        "gold_select": "select singer.Song_Name",
        "select_candidates": [
            "select singer.Song_Name",
            "select singer.Song_Name, singer.gender",
            "select singer.Song_Name, singer.birthyear",
            "select singer.first_name, singer.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer",
            "singer singer_in_concert",
            "singer concert singer_in_concert"
        ],
        "align_scores": [
            0.9946012496948242,
            0.00012088572111679241,
            0.00021388793538790196,
            6.350141484290361e-05,
            0.00020818438497371972,
            5.987028271192685e-05,
            0.0005091074854135513,
            7.41761177778244e-05
        ],
        "align_select": "select singer.Song_Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are all the song names by singers who are older than average?",
        "gold_select": "select singer.Song_Name",
        "select_candidates": [
            "select singer.Song_Name",
            "select singer.Song_Name, singer.birthyear",
            "select singer.first_name, singer.last_name",
            "select singer.Song_Name, singer.gender"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.9868905544281006,
            0.00010323966125724837,
            0.0002145583275705576,
            6.76226190989837e-05,
            0.0007714839885011315,
            7.811334944562986e-05,
            0.00019948589033447206,
            6.114660209277645e-05
        ],
        "align_select": "select singer.Song_Name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List singer names and number of concerts for each singer.",
        "gold_select": "select singer.first_name, singer.last_name, count(*)",
        "select_candidates": [
            "select singer.first_name, singer.last_name, count(*)",
            "select singer.first_name, singer.last_name, count(*),",
            "select singer.first_name, singer.last_name, count(*), singer.Singer_ID",
            "select singer.first_name, singer.last_name, count(*), concert.concert_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer singer_in_concert",
        "table_candidates": [
            "singer concert singer_in_concert",
            "singer singer_in_concert"
        ],
        "align_scores": [
            0.9942465424537659,
            0.00015982412151060998,
            0.0013950151624158025,
            0.00012342915579210967,
            0.0002810339501593262,
            0.00010723354353103787,
            0.00028835091507062316,
            0.00015893160889390856
        ],
        "align_select": "select singer.first_name, singer.last_name, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "What are the names of the singers and number of concerts for each person?",
        "gold_select": "select singer.first_name, singer.last_name, count(*)",
        "select_candidates": [
            "select singer.first_name, singer.last_name, count(*)",
            "select singer.first_name, singer.last_name, count(*), singer.Singer_ID",
            "select singer.first_name, singer.last_name, count(*),",
            "select singer.first_name, singer.last_name, count(*), concert.Stadium_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer singer_in_concert",
        "table_candidates": [
            "singer concert singer_in_concert",
            "singer singer_in_concert"
        ],
        "align_scores": [
            0.9934166669845581,
            0.00019895497825928032,
            0.0003454654070083052,
            0.00011295032891212031,
            0.0019608447328209877,
            0.00014515095972456038,
            0.00040223091491498053,
            0.00021737666975241154
        ],
        "align_select": "select singer.first_name, singer.last_name, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "List all singer names in concerts in year 2014.",
        "gold_select": "select singer.first_name, singer.last_name",
        "select_candidates": [
            "select singer.first_name, singer.last_name",
            "select singer.first_name, singer.last_name, singer.Singer_ID",
            "select singer.first_name, singer.last_name, singer.gender",
            "select distinct singer.first_name, singer.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer concert singer_in_concert",
        "table_candidates": [
            "singer concert singer_in_concert"
        ],
        "align_scores": [
            0.9821435809135437,
            0.0021428288891911507,
            0.00014316222222987562,
            9.43250852287747e-05,
            0.00022072438150644302,
            9.713328472571447e-05,
            0.019712217152118683,
            7.940572686493397e-05
        ],
        "align_select": "select singer.first_name, singer.last_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of the singers who performed in a concert in 2014?",
        "gold_select": "select singer.first_name, singer.last_name",
        "select_candidates": [
            "select singer.first_name, singer.last_name",
            "select distinct singer.first_name, singer.last_name",
            "select singer.first_name, singer.last_name, singer.gender",
            "select singer_in_concert.Singer_ID, singer.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer concert singer_in_concert",
        "table_candidates": [
            "singer concert singer_in_concert"
        ],
        "align_scores": [
            0.9731041193008423,
            9.631269495002925e-05,
            0.061756983399391174,
            6.389174814103171e-05,
            0.0003621886717155576,
            6.66427004034631e-05,
            0.00020299140305723995,
            6.537673471029848e-05
        ],
        "align_select": "select singer.first_name, singer.last_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "what is the name and nation of the singer who have a song having 'Hey' in its name?",
        "gold_select": "select singer.first_name, singer.last_name, singer.Country",
        "select_candidates": [
            "select singer.first_name, singer.last_name, singer.Country",
            "select singer.first_name, singer.last_name, singer.Country, singer.gender",
            "select singer.first_name, singer.last_name, singer.first_name, singer.Country",
            "select singer.first_name, singer.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.06690815091133118,
            0.00010093570745084435,
            0.00022855415591038764,
            7.680756971240044e-05,
            0.00022901181364431977,
            8.646261994726956e-05,
            0.001019045477733016,
            0.00020165953901596367
        ],
        "align_select": "select singer.first_name, singer.last_name, singer.Country",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the name and country of origin of every singer who has a song with the word 'Hey' in its title?",
        "gold_select": "select singer.first_name, singer.last_name, singer.Country",
        "select_candidates": [
            "select singer.first_name, singer.last_name, singer.Country",
            "select singer.first_name, singer.last_name",
            "select distinct singer.first_name, singer.last_name, singer.Country",
            "select the singer.first_name, singer.last_name, singer.Country"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.9515097737312317,
            0.00011601908772718161,
            0.0007106930133886635,
            0.00037159351631999016,
            0.01385188102722168,
            7.841418846510351e-05,
            0.0009485661867074668,
            9.179190237773582e-05
        ],
        "align_select": "select singer.first_name, singer.last_name, singer.Country",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the weight of the youngest dog.",
        "gold_select": "select Pets.weight",
        "select_candidates": [
            "select Pets.weight",
            "select Pets.weight, Pets.birthyear",
            "select min(Pets.weight)",
            "select Pets.weight)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Pets",
        "table_candidates": [
            "Pets"
        ],
        "align_scores": [
            0.9933502078056335,
            5.670498649124056e-05,
            0.002887268550693989,
            5.429821612779051e-05,
            0.0004364939813967794,
            6.019114516675472e-05,
            0.026379039511084557,
            5.60896733077243e-05
        ],
        "align_select": "select Pets.weight",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "How much does the youngest dog weigh?",
        "gold_select": "select Pets.weight",
        "select_candidates": [
            "select Pets.weight",
            "select min(Pets.weight)",
            "select max(Pets.weight)",
            "select Pets.birthyear, Pets.weight"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Pets",
        "table_candidates": [
            "Pets"
        ],
        "align_scores": [
            0.9929138422012329,
            5.831606904393993e-05,
            0.0005517053068615496,
            6.299561937339604e-05,
            0.0003585429221857339,
            5.806479384773411e-05,
            0.0007005929946899414,
            5.6733762903604656e-05
        ],
        "align_select": "select Pets.weight",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Find the number of dog pets that are raised by female students (with sex F).",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Student.Fname",
            "select count(*), Student.LName, Student.Fname",
            "select count(*), Student.LName, Pets.is_dog"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Student Has_Pet Pets",
        "table_candidates": [
            "Student Has_Pet Pets",
            "Student Has_Pet"
        ],
        "align_scores": [
            0.991407036781311,
            0.005784410517662764,
            0.0004680799611378461,
            0.0028241255786269903,
            0.00015917548444122076,
            0.0002664573257789016,
            0.00017641698650550097,
            0.0002905611472669989
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many dog pets are raised by female students?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Student.is_male",
            "select count(*), Student.Fname",
            "select count(distinct Pets.is_dog)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Student Has_Pet Pets",
        "table_candidates": [
            "Student Has_Pet Pets",
            "Student Has_Pet"
        ],
        "align_scores": [
            0.9868268966674805,
            0.00013954874884802848,
            0.0002973004011437297,
            7.266616739798337e-05,
            0.00033879399416036904,
            7.074504537740722e-05,
            0.01926574856042862,
            7.948905840748921e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the first name of students who have cat or dog pet.",
        "gold_select": "select distinct Student.Fname",
        "select_candidates": [
            "select Student.Fname",
            "select distinct Student.Fname",
            "select Student.StuID, Student.Fname",
            "select distinct Student.Fname, Student.LName"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Student Has_Pet Pets",
        "table_candidates": [
            "Student Has_Pet Pets",
            "Student Has_Pet"
        ],
        "align_scores": [
            0.9885817170143127,
            0.001788000576198101,
            0.023030782118439674,
            0.00014537603419739753,
            0.00017282993940170854,
            6.83037651469931e-05,
            0.00018062996969092637,
            6.329802999971434e-05
        ],
        "align_select": "select Student.Fname",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the first names of every student who has a cat or dog as a pet?",
        "gold_select": "select distinct Student.Fname",
        "select_candidates": [
            "select Student.Fname",
            "select distinct Student.Fname",
            "select Student.StuID, Student.Fname",
            "select distinct Student.Fname, Student.LName"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Student Has_Pet Pets",
        "table_candidates": [
            "Student Has_Pet Pets",
            "Student Has_Pet"
        ],
        "align_scores": [
            0.9811119437217712,
            0.0010368017246946692,
            0.06965380162000656,
            0.0002447731967549771,
            0.00019724520097952336,
            7.537072815466672e-05,
            0.00030062953010201454,
            6.33785457466729e-05
        ],
        "align_select": "select Student.Fname",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the first name of students who have both cat and dog pets.",
        "gold_select": "select Student.Fname",
        "select_candidates": [
            "select Student.Fname",
            "select Student.StuID, Student.Fname",
            "select Student.Fname, Student.LName",
            "select Student.LName, Student.Fname"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Student Has_Pet Pets",
        "table_candidates": [
            "Student Has_Pet Pets",
            "Student Has_Pet"
        ],
        "align_scores": [
            0.9945722222328186,
            0.0017412106972187757,
            0.00012949791562277824,
            7.185238064266741e-05,
            0.000215387626667507,
            8.065822476055473e-05,
            0.00022462464403361082,
            8.059365063672885e-05
        ],
        "align_select": "select Student.Fname",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the students' first names who have both cats and dogs as pets?",
        "gold_select": "select Student.Fname",
        "select_candidates": [
            "select Student.Fname",
            "select Student.StuID, Student.Fname",
            "select Student.Fname, Student.LName",
            "select Student.StuID, Student.LName"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "Student Has_Pet Pets",
        "table_candidates": [
            "Student Has_Pet Pets",
            "Student Has_Pet"
        ],
        "align_scores": [
            0.9940622448921204,
            0.9940622448921204,
            0.00014647933130618185,
            0.00014647933130618185,
            0.0001501692458987236,
            0.0001501692458987236,
            0.00012711271119769663,
            0.00012711271119769663
        ],
        "align_select": "select Student.Fname",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "Find the id of students who do not have a cat pet.",
        "gold_select": "select Student.StuID",
        "select_candidates": [
            "select Has_Pet.StuID",
            "select Student.StuID",
            "select t1, Student.StuID",
            "select Student.StuID, Has_Pet.StuID"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Student Has_Pet Pets",
        "table_candidates": [
            "Student Has_Pet Pets",
            "Has_Pet Pets",
            "Student Has_Pet"
        ],
        "align_scores": [
            0.9828869700431824,
            0.0006206668331287801,
            0.6944427490234375,
            0.0015191314741969109,
            0.0004564072878565639,
            0.00012485988554544747,
            0.00031302322167903185,
            0.00011541859566932544
        ],
        "align_select": "select Has_Pet.StuID",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the ids of the students who do not own cats as pets?",
        "gold_select": "select Student.StuID",
        "select_candidates": [
            "select Has_Pet.StuID",
            "select Student.StuID",
            "select Has_Pet.StuID, Has_Pet.PetID",
            "select t1, Has_Pet.StuID"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "Student Has_Pet Pets",
        "table_candidates": [
            "Student Has_Pet Pets",
            "Has_Pet Pets",
            "Student Has_Pet"
        ],
        "align_scores": [
            0.9740993976593018,
            0.9740993976593018,
            0.7632283568382263,
            0.7632283568382263,
            0.00013675427180714905,
            0.00013675427180714905,
            0.0009892309317365289,
            0.0009892309317365289
        ],
        "align_select": "select Has_Pet.StuID",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "Find the weight of the youngest dog.",
        "gold_select": "select Pets.weight",
        "select_candidates": [
            "select Pets.weight",
            "select Pets.PetID, Pets.weight",
            "select Pets.weight, Pets.birthyear",
            "select min(Pets.weight)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Pets",
        "table_candidates": [
            "Pets",
            "Has_Pet Pets"
        ],
        "align_scores": [
            0.9933502078056335,
            5.670498649124056e-05,
            0.00045663162018172443,
            5.5217973567778245e-05,
            0.002887268550693989,
            5.429821612779051e-05,
            0.0004364939813967794,
            6.019114516675472e-05
        ],
        "align_select": "select Pets.weight",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "How much does the youngest dog weigh?",
        "gold_select": "select Pets.weight",
        "select_candidates": [
            "select Pets.weight",
            "select min(Pets.weight)",
            "select max(Pets.weight)",
            "select Pets.PetID, Pets.weight"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "Pets",
        "table_candidates": [
            "Pets"
        ],
        "align_scores": [
            0.21010547876358032,
            0.9929138422012329,
            0.9905607104301453,
            0.0005517053068615496,
            0.002039596438407898,
            0.0003585429221857339,
            0.000198269248357974,
            0.0005598910502158105
        ],
        "align_select": "select Pets.weight",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Find the type and weight of the youngest pet.",
        "gold_select": "select Pets.PetType, Pets.weight",
        "select_candidates": [
            "select Pets.PetType, Pets.weight",
            "select Pets.PetType, Pets.weight, Pets.birthyear",
            "select Pets.PetType, Pets.weight)",
            "select Pets.PetType.c1, Pets.weight"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Pets",
        "table_candidates": [
            "Pets"
        ],
        "align_scores": [
            0.9884280562400818,
            6.206883699633181e-05,
            0.0002070487244054675,
            5.5565498769283295e-05,
            0.0020745391957461834,
            5.481034531840123e-05,
            0.0017223366303369403,
            5.86424685025122e-05
        ],
        "align_select": "select Pets.PetType, Pets.weight",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What type of pet is the youngest animal, and how much does it weigh?",
        "gold_select": "select Pets.PetType, Pets.weight",
        "select_candidates": [
            "select Pets.PetType, Pets.weight",
            "select Pets.PetID, Pets.PetType, Pets.weight",
            "select Pets.PetType, Pets.weight, Pets.birthyear",
            "select Pets.PetType.c1, Pets.weight"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Pets",
        "table_candidates": [
            "Pets"
        ],
        "align_scores": [
            0.9745015501976013,
            5.904193676542491e-05,
            0.00035120718530379236,
            6.970478716539219e-05,
            0.0006553740240633488,
            5.6650293117854744e-05,
            0.0016567341517657042,
            5.800490907859057e-05
        ],
        "align_select": "select Pets.PetType, Pets.weight",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Find the number of dog pets that are raised by female students (with sex F).",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Student.is_male",
            "select count(*), Student.StuID",
            "select count(*), Student.LName"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Student Has_Pet Pets",
        "table_candidates": [
            "Student Has_Pet Pets",
            "Student Has_Pet"
        ],
        "align_scores": [
            0.991407036781311,
            0.005784410517662764,
            0.00033319456269964576,
            0.0016898609464988112,
            0.0005169881042093039,
            0.0007137565407902002,
            0.0005025220452807844,
            0.002492896281182766
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many dog pets are raised by female students?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Student.is_male",
            "select count(distinct Pets.PetType)",
            "select count(*), Student.StuID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Student Has_Pet Pets",
        "table_candidates": [
            "Student Has_Pet Pets",
            "Student Has_Pet"
        ],
        "align_scores": [
            0.9868268966674805,
            0.010665835812687874,
            0.0002973004011437297,
            0.004532606340944767,
            0.004559457767754793,
            0.0005606602062471211,
            0.00035896908957511187,
            0.0011972318170592189
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the number of dog pets that are raised by female students (with sex F).",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Student.StuID",
            "select count(*), Student.Sex",
            "select count(*), Student.LName"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Student Has_Pet Pets",
        "table_candidates": [
            "Student Has_Pet Pets",
            "Student Has_Pet"
        ],
        "align_scores": [
            0.991407036781311,
            0.005784410517662764,
            0.0005169881042093039,
            0.0007137565407902002,
            0.0003581673081498593,
            0.722908079624176,
            0.0005025220452807844,
            0.002492896281182766
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many dog pets are raised by female students?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Student.Sex",
            "select count(*), Student.StuID",
            "select count(distinct Pets.is_dog)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Student Has_Pet Pets",
        "table_candidates": [
            "Student Has_Pet Pets",
            "Student Has_Pet"
        ],
        "align_scores": [
            0.9868268966674805,
            0.00013954874884802848,
            0.0005205380730330944,
            8.159818389685825e-05,
            0.00035896908957511187,
            6.938984006410465e-05,
            0.01926574856042862,
            7.948905840748921e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the first name of students who have cat or dog pet.",
        "gold_select": "select distinct Student.Fname",
        "select_candidates": [
            "select distinct Student.Fname",
            "select Student.Fname",
            "select Student.StuID, Student.Fname",
            "select distinct Student.Fname, Student.LName"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Student Has_Pet Pets",
        "table_candidates": [
            "Student Has_Pet Pets",
            "Student Has_Pet"
        ],
        "align_scores": [
            0.023030782118439674,
            0.00014537603419739753,
            0.9885817170143127,
            0.001788000576198101,
            0.00017282993940170854,
            6.83037651469931e-05,
            0.00018062996969092637,
            6.329802999971434e-05
        ],
        "align_select": "select Student.Fname",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the first names of every student who has a cat or dog as a pet?",
        "gold_select": "select distinct Student.Fname",
        "select_candidates": [
            "select Student.Fname",
            "select distinct Student.Fname",
            "select Student.StuID, Student.Fname",
            "select distinct Student.Fname, Student.LName"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Student Has_Pet Pets",
        "table_candidates": [
            "Student Has_Pet Pets",
            "Student Has_Pet"
        ],
        "align_scores": [
            0.9811119437217712,
            0.0010368017246946692,
            0.06965380162000656,
            0.0002447731967549771,
            0.00019724520097952336,
            7.537072815466672e-05,
            0.00030062953010201454,
            6.33785457466729e-05
        ],
        "align_select": "select Student.Fname",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the first name of students who have both cat and dog pets.",
        "gold_select": "select Student.Fname",
        "select_candidates": [
            "select Student.Fname",
            "select Student.StuID, Student.Fname",
            "select Student.Fname, Student.LName",
            "select Student.LName, Student.Fname"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "Student Has_Pet Pets",
        "table_candidates": [
            "Student Has_Pet Pets"
        ],
        "align_scores": [
            0.9945722222328186,
            0.9945722222328186,
            0.00012949791562277824,
            0.00012949791562277824,
            0.000215387626667507,
            0.000215387626667507,
            0.00022462464403361082,
            0.00022462464403361082
        ],
        "align_select": "select Student.Fname",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the students' first names who have both cats and dogs as pets?",
        "gold_select": "select Student.Fname",
        "select_candidates": [
            "select Student.Fname",
            "select Student.StuID, Student.Fname",
            "select Student.Fname, Student.LName",
            "select Student.LName"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "Student Has_Pet Pets",
        "table_candidates": [
            "Student Has_Pet Pets",
            "Student Has_Pet"
        ],
        "align_scores": [
            0.9940622448921204,
            0.9940622448921204,
            0.00014647933130618185,
            0.00014647933130618185,
            0.0001501692458987236,
            0.0001501692458987236,
            0.9860373139381409,
            0.9860373139381409
        ],
        "align_select": "select Student.Fname",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "Find the id of students who do not have a cat pet.",
        "gold_select": "select Student.StuID",
        "select_candidates": [
            "select Has_Pet.StuID",
            "select Student.StuID",
            "select t1, Student.StuID",
            "select Student.StuID, Has_Pet.StuID"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "Student Has_Pet Pets",
        "table_candidates": [
            "Student Has_Pet Pets",
            "Has_Pet Pets",
            "Student Has_Pet"
        ],
        "align_scores": [
            0.9828869700431824,
            0.9828869700431824,
            0.6944427490234375,
            0.6944427490234375,
            0.0004564072878565639,
            0.0004564072878565639,
            0.00031302322167903185,
            0.00031302322167903185
        ],
        "align_select": "select Has_Pet.StuID",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the ids of the students who do not own cats as pets?",
        "gold_select": "select Student.StuID",
        "select_candidates": [
            "select Has_Pet.StuID",
            "select Student.StuID",
            "select Has_Pet.StuID, Has_Pet.PetID",
            "select t1, Has_Pet.StuID"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "Student Has_Pet Pets",
        "table_candidates": [
            "Student Has_Pet Pets",
            "Has_Pet Pets",
            "Student Has_Pet"
        ],
        "align_scores": [
            0.9740993976593018,
            0.9740993976593018,
            0.7632283568382263,
            0.7632283568382263,
            0.00013675427180714905,
            0.00013675427180714905,
            0.0009892309317365289,
            0.0009892309317365289
        ],
        "align_select": "select Has_Pet.StuID",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "Find the last name of the student who has a cat that is age 3.",
        "gold_select": "select Student.LName",
        "select_candidates": [
            "select Student.LName",
            "select Student.LName, Student.Fname",
            "select Pets.is_cat, Student.LName",
            "select Student.LName, Student.Fname, Student.birthyear"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Student Has_Pet Pets",
        "table_candidates": [
            "Student Has_Pet Pets",
            "Student Pets"
        ],
        "align_scores": [
            0.9475710988044739,
            0.0025291929487138987,
            0.00018102860485669225,
            0.00010105773253599182,
            0.00042396230855956674,
            0.0001514509494882077,
            0.0001199785983772017,
            6.943484913790599e-05
        ],
        "align_select": "select Student.LName",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the last name of the student who has a cat that is 3 years old?",
        "gold_select": "select Student.LName",
        "select_candidates": [
            "select Student.LName",
            "select Student.LName, Student.Fname",
            "select Student.LName, Student.Fname, Student.birthyear",
            "select Pets.is_cat, Student.LName"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Student Has_Pet Pets",
        "table_candidates": [
            "Student Has_Pet Pets"
        ],
        "align_scores": [
            0.9243311285972595,
            0.004660360049456358,
            0.00019661671831272542,
            0.00013132348249200732,
            0.00014760662452317774,
            7.606561848660931e-05,
            0.0004764934128616005,
            0.00014192398521117866
        ],
        "align_select": "select Student.LName",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the weight of the youngest dog.",
        "gold_select": "select Pets.weight",
        "select_candidates": [
            "select Pets.weight",
            "select Pets.PetID, Pets.weight",
            "select Pets.weight, Pets.birthyear",
            "select min(Pets.weight)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Pets",
        "table_candidates": [
            "Pets",
            "Has_Pet Pets"
        ],
        "align_scores": [
            0.9933502078056335,
            5.670498649124056e-05,
            0.00045663162018172443,
            5.5217973567778245e-05,
            0.002887268550693989,
            5.429821612779051e-05,
            0.0004364939813967794,
            6.019114516675472e-05
        ],
        "align_select": "select Pets.weight",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "How much does the youngest dog weigh?",
        "gold_select": "select Pets.weight",
        "select_candidates": [
            "select Pets.weight",
            "select min(Pets.weight)",
            "select max(Pets.weight)",
            "select Pets.PetID, Pets.weight"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "Pets",
        "table_candidates": [
            "Pets"
        ],
        "align_scores": [
            0.21010547876358032,
            0.9929138422012329,
            0.9905607104301453,
            0.0005517053068615496,
            0.002039596438407898,
            0.0003585429221857339,
            0.000198269248357974,
            0.0005598910502158105
        ],
        "align_select": "select Pets.weight",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Find the number of dog pets that are raised by female students (with sex F).",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Student.StuID",
            "select count(*), Student.is_male",
            "select count(*), Student.Fname"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Student Has_Pet Pets",
        "table_candidates": [
            "Student Has_Pet Pets",
            "Student Has_Pet"
        ],
        "align_scores": [
            0.991407036781311,
            0.005784410517662764,
            0.0005169881042093039,
            0.0007137565407902002,
            0.00033319456269964576,
            0.0016898609464988112,
            0.0004680799611378461,
            0.0028241255786269903
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many dog pets are raised by female students?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Student.is_male",
            "select count(distinct Pets.PetType)",
            "select count(*), Student.Fname"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Student Has_Pet Pets",
        "table_candidates": [
            "Student Has_Pet Pets",
            "Student Has_Pet"
        ],
        "align_scores": [
            0.9868268966674805,
            0.01721217855811119,
            0.0002973004011437297,
            0.00030771258752793074,
            0.004559457767754793,
            0.00018566567450761795,
            0.00033879399416036904,
            0.0006466918857768178
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the type and weight of the youngest pet.",
        "gold_select": "select Pets.PetType, Pets.weight",
        "select_candidates": [
            "select Pets.PetType, Pets.weight",
            "select Pets.PetType, Pets.weight, Pets.birthyear",
            "select Pets.PetType, Pets.weight)",
            "select Pets.PetType.c1, Pets.weight"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Pets",
        "table_candidates": [
            "Pets"
        ],
        "align_scores": [
            0.9884280562400818,
            6.206883699633181e-05,
            0.0002070487244054675,
            5.5565498769283295e-05,
            0.0020745391957461834,
            5.481034531840123e-05,
            0.0017223366303369403,
            5.86424685025122e-05
        ],
        "align_select": "select Pets.PetType, Pets.weight",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What type of pet is the youngest animal, and how much does it weigh?",
        "gold_select": "select Pets.PetType, Pets.weight",
        "select_candidates": [
            "select Pets.PetType, Pets.weight",
            "select Pets.PetID, Pets.PetType, Pets.weight",
            "select Pets.PetType, Pets.weight, Pets.birthyear",
            "select Pets.PetType.c1, Pets.weight"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Pets",
        "table_candidates": [
            "Pets"
        ],
        "align_scores": [
            0.9745015501976013,
            5.904193676542491e-05,
            0.00035120718530379236,
            6.970478716539219e-05,
            0.0006553740240633488,
            5.6650293117854744e-05,
            0.0016567341517657042,
            5.800490907859057e-05
        ],
        "align_select": "select Pets.PetType, Pets.weight",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Sort employee names by their age in ascending order.",
        "gold_select": "select employee.first_name, employee.last_name",
        "select_candidates": [
            "select employee.first_name, employee.last_name",
            "select employee.first_name, employee.last_name, employee.Age",
            "select employee.first_name, employee.last_name in employee.Age",
            "select employee.first_name, employee.last_name and employee.Age"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "employee",
        "table_candidates": [
            "employee"
        ],
        "align_scores": [
            0.9747011065483093,
            0.9747011065483093,
            0.0003766380250453949,
            0.0003766380250453949,
            0.0005175194819457829,
            0.0005175194819457829,
            0.000593359989579767,
            0.000593359989579767
        ],
        "align_select": "select employee.first_name, employee.last_name",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "List the names of employees and sort in ascending order of age.",
        "gold_select": "select employee.first_name, employee.last_name",
        "select_candidates": [
            "select employee.first_name, employee.last_name",
            "select employee.first_name, employee.last_name, employee.Age",
            "select employee.Employee_ID, employee.first_name, employee.last_name",
            "select employee.first_name, employee.last_name, employee.Age"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "employee",
        "table_candidates": [
            "employee"
        ],
        "align_scores": [
            0.9924142956733704,
            0.9924142956733704,
            0.000239028682699427,
            0.000239028682699427,
            0.0001396409934386611,
            0.0001396409934386611,
            0.000239028682699427,
            0.000239028682699427
        ],
        "align_select": "select employee.first_name, employee.last_name",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "Find the manager name and district of the shop whose number of products is the largest.",
        "gold_select": "select shop.manager_first_name, shop.manager_last_name, shop.District",
        "select_candidates": [
            "select shop.manager_first_name, shop.manager_last_name",
            "select shop.manager_first_name, shop.manager_last_name, shop.District",
            "select shop.Name, shop.manager_last_name, shop.District",
            "select shop.manager_first_name, shop.manager_last_name, shop.Location, shop.District"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "shop",
        "table_candidates": [
            "shop"
        ],
        "align_scores": [
            0.0027845334261655807,
            7.238634134409949e-05,
            0.8253453373908997,
            6.991949339862913e-05,
            0.0004271052894182503,
            7.995026680873707e-05,
            0.0002694025752134621,
            7.336341514019296e-05
        ],
        "align_select": "select shop.manager_first_name, shop.manager_last_name, shop.District",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What are the manager name and district of the shop that sells the largest number of products?",
        "gold_select": "select shop.manager_first_name, shop.manager_last_name, shop.District",
        "select_candidates": [
            "select shop.manager_first_name, shop.manager_last_name",
            "select shop.manager_first_name, shop.manager_last_name, shop.District",
            "select shop.Name, shop.manager_last_name, shop.District",
            "select shop.manager_first_name, shop.manager_last_name, shop.Location, shop.District"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "shop",
        "table_candidates": [
            "shop"
        ],
        "align_scores": [
            0.0035651742946356535,
            8.759165939409286e-05,
            0.2721065878868103,
            9.325942664872855e-05,
            0.0003719406377058476,
            9.947547368938103e-05,
            0.0003447243361733854,
            8.562031871406361e-05
        ],
        "align_select": "select shop.manager_first_name, shop.manager_last_name, shop.District",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "find the name of employee who was awarded the most times in the evaluation.",
        "gold_select": "select employee.first_name, employee.last_name",
        "select_candidates": [
            "select employee.first_name, employee.last_name",
            "select employee.first_name, employee.last_name, employee.Employee_ID",
            "select employee.first_name, employee.last_name, employee.Age",
            "select t.c1, employee.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "employee evaluation",
        "table_candidates": [
            "employee evaluation",
            "employee hiring evaluation",
            "employee shop hiring evaluation"
        ],
        "align_scores": [
            0.9862793684005737,
            7.559033838333562e-05,
            0.00032065974664874375,
            6.681222293991596e-05,
            0.0003296514041721821,
            6.05837776674889e-05,
            0.0006824213196523488,
            6.226524419616908e-05
        ],
        "align_select": "select employee.first_name, employee.last_name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Which employee received the most awards in evaluations? Give me the employee name.",
        "gold_select": "select employee.first_name, employee.last_name",
        "select_candidates": [
            "select employee.first_name, employee.last_name",
            "select employee.Employee_ID, employee.first_name, employee.last_name",
            "select employee.first_name.c1, employee.last_name",
            "select employee.first_name, employee.last_name, employee.Employee_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "employee evaluation",
        "table_candidates": [
            "employee evaluation",
            "employee hiring evaluation",
            "employee shop evaluation",
            "employee shop hiring evaluation"
        ],
        "align_scores": [
            0.9881228804588318,
            7.001177436904982e-05,
            0.000817425549030304,
            8.19423803477548e-05,
            0.0004716736439149827,
            6.360746920108795e-05,
            0.0002825524425134063,
            6.533522537210956e-05
        ],
        "align_select": "select employee.first_name, employee.last_name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Find the name of the employee who got the highest one time bonus.",
        "gold_select": "select employee.first_name, employee.last_name",
        "select_candidates": [
            "select employee.first_name, employee.last_name",
            "select employee.first_name, employee.last_name, employee.Employee_ID",
            "select employee.first_name, employee.last_name, employee.Age",
            "select t.c1, employee.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "employee evaluation",
        "table_candidates": [
            "employee evaluation",
            "employee hiring evaluation",
            "employee shop hiring evaluation",
            "employee shop evaluation"
        ],
        "align_scores": [
            0.9749089479446411,
            7.083745731506497e-05,
            0.000254584476351738,
            6.930677773198113e-05,
            0.0001761912280926481,
            6.771966582164168e-05,
            0.0003911760577466339,
            6.498416041722521e-05
        ],
        "align_select": "select employee.first_name, employee.last_name",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Which employee received the biggest bonus? Give me the employee name.",
        "gold_select": "select employee.first_name, employee.last_name",
        "select_candidates": [
            "select employee.first_name, employee.last_name",
            "select employee.Employee_ID, employee.first_name, employee.last_name",
            "select evaluation.Employee_ID, employee.first_name, employee.last_name",
            "select employee.first_name, employee.last_name, employee.Employee_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "employee evaluation",
        "table_candidates": [
            "employee evaluation",
            "employee hiring evaluation"
        ],
        "align_scores": [
            0.974578320980072,
            7.451677811332047e-05,
            0.0002962122962344438,
            8.419757068622857e-05,
            0.0004559837107080966,
            8.471695036860183e-05,
            0.00026660977164283395,
            6.818954716436565e-05
        ],
        "align_select": "select employee.first_name, employee.last_name",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Find the names of employees who never won any award in the evaluation.",
        "gold_select": "select employee.first_name, employee.last_name",
        "select_candidates": [
            "select employee.first_name, employee.last_name",
            "select employee.Employee_ID, employee.first_name, employee.last_name",
            "select employee.first_name, employee.last_name, employee.Employee_ID",
            "select employee.first_name, employee.last_name, employee.Age"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "employee",
        "table_candidates": [
            "employee evaluation",
            "employee",
            "employee hiring evaluation"
        ],
        "align_scores": [
            0.09377340972423553,
            0.07343313843011856,
            0.00025292622740380466,
            0.00022584207181353122,
            0.00015511352103203535,
            0.000167998528922908,
            0.00016640775720588863,
            0.0001408407697454095
        ],
        "align_select": "select employee.first_name, employee.last_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of the employees who never received any evaluation?",
        "gold_select": "select employee.first_name, employee.last_name",
        "select_candidates": [
            "select employee.first_name, employee.last_name",
            "select employee.Employee_ID, employee.first_name, employee.last_name",
            "select employee.first_name, employee.last_name, employee.Age",
            "select employee.first_name.c1, employee.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "employee",
        "table_candidates": [
            "employee"
        ],
        "align_scores": [
            0.9824167490005493,
            0.0007469452102668583,
            0.0002516136737540364,
            0.00011069283937104046,
            0.00018731402815319598,
            7.671840285183862e-05,
            0.00026427439297549427,
            0.00011527648894116282
        ],
        "align_select": "select employee.first_name, employee.last_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Sort employee names by their age in ascending order.",
        "gold_select": "select employee.Name",
        "select_candidates": [
            "select employee.Name",
            "select employee.Name, employee.birthyear",
            "select employee.Name in employee.birthyear",
            "select employee.Employee_ID, employee.Name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "employee",
        "table_candidates": [
            "employee"
        ],
        "align_scores": [
            0.9965208768844604,
            0.00032465183176100254,
            0.0012781467521563172,
            0.0001825278886826709,
            0.0017353344010189176,
            0.00027470782515592873,
            0.00011259362509008497,
            0.00013077229959890246
        ],
        "align_select": "select employee.Name",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "List the names of employees and sort in ascending order of age.",
        "gold_select": "select employee.Name",
        "select_candidates": [
            "select employee.Name",
            "select employee.Name, employee.birthyear",
            "select employee.Name-ORDER BY",
            "select employee.Name and employee.birthyear"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "employee",
        "table_candidates": [
            "employee"
        ],
        "align_scores": [
            0.9964537620544434,
            0.9964537620544434,
            0.0002535150561016053,
            0.0002535150561016053,
            0.000997680239379406,
            0.000997680239379406,
            0.0004243602161295712,
            0.0004243602161295712
        ],
        "align_select": "select employee.Name",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "Find the manager name and district of the shop whose number of products is the largest.",
        "gold_select": "select shop.manager_first_name, shop.manager_last_name, shop.District",
        "select_candidates": [
            "select shop.manager_first_name, shop.manager_last_name, shop.District",
            "select shop.manager_first_name, shop.manager_last_name",
            "select shop.Name, shop.manager_last_name, shop.District",
            "select shop.manager_first_name, shop.manager_last_name, shop.Location, shop.District"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "shop",
        "table_candidates": [
            "shop"
        ],
        "align_scores": [
            0.8253453373908997,
            6.991949339862913e-05,
            0.0027845334261655807,
            7.238634134409949e-05,
            0.0004271052894182503,
            7.995026680873707e-05,
            0.0002694025752134621,
            7.336341514019296e-05
        ],
        "align_select": "select shop.manager_first_name, shop.manager_last_name, shop.District",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What are the manager name and district of the shop that sells the largest number of products?",
        "gold_select": "select shop.manager_first_name, shop.manager_last_name, shop.District",
        "select_candidates": [
            "select shop.manager_first_name, shop.manager_last_name, shop.District",
            "select shop.manager_first_name, shop.manager_last_name",
            "select shop.Name, shop.manager_last_name, shop.District",
            "select shop.manager_first_name, shop.manager_last_name, shop.Location, shop.District"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "shop",
        "table_candidates": [
            "shop"
        ],
        "align_scores": [
            0.2721065878868103,
            9.325942664872855e-05,
            0.0035651742946356535,
            8.759165939409286e-05,
            0.0003719406377058476,
            9.947547368938103e-05,
            0.0003447243361733854,
            8.562031871406361e-05
        ],
        "align_select": "select shop.manager_first_name, shop.manager_last_name, shop.District",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Sort employee names by their age in ascending order.",
        "gold_select": "select employee.first_name, employee.last_name",
        "select_candidates": [
            "select employee.first_name, employee.last_name",
            "select employee.first_name, employee.last_name, employee.birthyear",
            "select employee.Employee_ID, employee.first_name, employee.last_name",
            "select employee.first_name, employee.last_name in employee.birthyear"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "employee",
        "table_candidates": [
            "employee"
        ],
        "align_scores": [
            0.9747011065483093,
            0.9747011065483093,
            0.0005623265169560909,
            0.0005623265169560909,
            0.00011608195200096816,
            0.00011608195200096816,
            0.0009420238784514368,
            0.0009420238784514368
        ],
        "align_select": "select employee.first_name, employee.last_name",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "List the names of employees and sort in ascending order of age.",
        "gold_select": "select employee.first_name, employee.last_name",
        "select_candidates": [
            "select employee.first_name, employee.last_name",
            "select employee.first_name, employee.last_name, employee.birthyear",
            "select employee.Employee_ID, employee.first_name, employee.last_name",
            "select employee.first_name, employee.last_name in employee.birthyear"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "employee",
        "table_candidates": [
            "employee"
        ],
        "align_scores": [
            0.9924142956733704,
            0.9924142956733704,
            0.00024297255731653422,
            0.00024297255731653422,
            0.0001396409934386611,
            0.0001396409934386611,
            0.0007855870062485337,
            0.0007855870062485337
        ],
        "align_select": "select employee.first_name, employee.last_name",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "Find the manager name and district of the shop whose number of products is the largest.",
        "gold_select": "select shop.manager_first_name, shop.manager_last_name, shop.District",
        "select_candidates": [
            "select shop.manager_first_name, shop.manager_last_name",
            "select shop.manager_first_name, shop.manager_last_name, shop.District",
            "select shop.manager_first_name, shop.District",
            "select shop.Name, shop.District"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "shop",
        "table_candidates": [
            "shop"
        ],
        "align_scores": [
            0.0027845334261655807,
            7.238634134409949e-05,
            0.8253453373908997,
            6.991949339862913e-05,
            0.9479654431343079,
            9.010561916511506e-05,
            0.013090084306895733,
            8.428980072494596e-05
        ],
        "align_select": "select shop.manager_first_name, shop.District",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What are the manager name and district of the shop that sells the largest number of products?",
        "gold_select": "select shop.manager_first_name, shop.manager_last_name, shop.District",
        "select_candidates": [
            "select shop.manager_first_name, shop.manager_last_name",
            "select shop.manager_first_name, shop.manager_last_name, shop.District",
            "select shop.Name, shop.manager_last_name, shop.District",
            "select shop.Name, shop.District"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "shop",
        "table_candidates": [
            "shop"
        ],
        "align_scores": [
            0.0035651742946356535,
            8.759165939409286e-05,
            0.2721065878868103,
            9.325942664872855e-05,
            0.0003719406377058476,
            9.947547368938103e-05,
            0.007233886979520321,
            9.779921674635261e-05
        ],
        "align_select": "select shop.manager_first_name, shop.manager_last_name, shop.District",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "find the name of employee who was awarded the most times in the evaluation.",
        "gold_select": "select employee.first_name, employee.last_name",
        "select_candidates": [
            "select employee.first_name, employee.last_name",
            "select employee.first_name, employee.last_name, employee.Employee_ID",
            "select employee.first_name, employee.last_name, employee.birthyear",
            "select evaluation.Year_awarded, employee.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "employee evaluation",
        "table_candidates": [
            "employee evaluation",
            "employee hiring evaluation",
            "employee shop hiring evaluation",
            "employee shop evaluation"
        ],
        "align_scores": [
            0.9862793684005737,
            7.559033838333562e-05,
            0.00032065974664874375,
            6.681222293991596e-05,
            0.00025866852956824005,
            6.22535590082407e-05,
            0.00028262141859158874,
            7.899260526755825e-05
        ],
        "align_select": "select employee.first_name, employee.last_name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Which employee received the most awards in evaluations? Give me the employee name.",
        "gold_select": "select employee.first_name, employee.last_name",
        "select_candidates": [
            "select employee.first_name, employee.last_name",
            "select employee.Employee_ID, employee.first_name, employee.last_name",
            "select employee.first_name.c1, employee.last_name",
            "select employee.first_name, employee.last_name, employee.Employee_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "employee evaluation",
        "table_candidates": [
            "employee evaluation",
            "employee hiring evaluation",
            "employee shop evaluation",
            "employee shop hiring evaluation"
        ],
        "align_scores": [
            0.9881228804588318,
            7.001177436904982e-05,
            0.000817425549030304,
            8.19423803477548e-05,
            0.0004716736439149827,
            6.360746920108795e-05,
            0.0002825524425134063,
            6.533522537210956e-05
        ],
        "align_select": "select employee.first_name, employee.last_name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Find the name of the employee who got the highest one time bonus.",
        "gold_select": "select employee.first_name, employee.last_name",
        "select_candidates": [
            "select employee.first_name, employee.last_name",
            "select employee.first_name, employee.last_name, employee.Employee_ID",
            "select employee.first_name, employee.last_name, employee.birthyear",
            "select t.c1, employee.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "employee evaluation",
        "table_candidates": [
            "employee evaluation",
            "employee hiring evaluation",
            "employee shop hiring evaluation",
            "employee shop evaluation"
        ],
        "align_scores": [
            0.9749089479446411,
            5.892488479730673e-05,
            0.000254584476351738,
            6.654667959082872e-05,
            0.00017698055307846516,
            6.04634296905715e-05,
            0.0003911760577466339,
            5.8502439060248435e-05
        ],
        "align_select": "select employee.first_name, employee.last_name",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Which employee received the biggest bonus? Give me the employee name.",
        "gold_select": "select employee.first_name, employee.last_name",
        "select_candidates": [
            "select employee.first_name, employee.last_name",
            "select employee.Employee_ID, employee.first_name, employee.last_name",
            "select evaluation.Employee_ID, employee.first_name, employee.last_name",
            "select employee.first_name, employee.last_name, employee.Employee_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "employee evaluation",
        "table_candidates": [
            "employee evaluation",
            "employee hiring evaluation"
        ],
        "align_scores": [
            0.974578320980072,
            7.451677811332047e-05,
            0.0002962122962344438,
            8.419757068622857e-05,
            0.0004559837107080966,
            8.471695036860183e-05,
            0.00026660977164283395,
            6.818954716436565e-05
        ],
        "align_select": "select employee.first_name, employee.last_name",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Find the names of employees who never won any award in the evaluation.",
        "gold_select": "select employee.first_name, employee.last_name",
        "select_candidates": [
            "select employee.first_name, employee.last_name",
            "select employee.Employee_ID, employee.first_name, employee.last_name",
            "select employee.first_name, employee.last_name, employee.Employee_ID",
            "select employee.first_name, employee.last_name, employee.birthyear"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "employee",
        "table_candidates": [
            "employee evaluation",
            "employee",
            "employee hiring evaluation"
        ],
        "align_scores": [
            0.09377340972423553,
            0.07343313843011856,
            0.00025292622740380466,
            0.00022584207181353122,
            0.00015511352103203535,
            0.000167998528922908,
            0.00016238531679846346,
            0.00019413723202887923
        ],
        "align_select": "select employee.first_name, employee.last_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of the employees who never received any evaluation?",
        "gold_select": "select employee.first_name, employee.last_name",
        "select_candidates": [
            "select employee.first_name, employee.last_name",
            "select employee.Employee_ID, employee.first_name, employee.last_name",
            "select employee.first_name, employee.last_name, employee.birthyear",
            "select employee.first_name.c1, employee.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "employee",
        "table_candidates": [
            "employee",
            "employee evaluation"
        ],
        "align_scores": [
            0.9824167490005493,
            0.0007469452102668583,
            0.0002516136737540364,
            0.00011069283937104046,
            0.00017080485122278333,
            9.6993608167395e-05,
            0.00026427439297549427,
            0.00011527648894116282
        ],
        "align_select": "select employee.first_name, employee.last_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List the names of teachers in ascending order of age.",
        "gold_select": "select teacher.Name",
        "select_candidates": [
            "select teacher.Name",
            "select teacher.Name, teacher.birthyear",
            "select teacher.Name, teacher.birthyear, teacher.Hometown",
            "select teacher.Name, teacher.birthyear - teacher.Hometown"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher",
        "table_candidates": [
            "teacher"
        ],
        "align_scores": [
            0.9956120252609253,
            0.0002906853042077273,
            0.0002383964165346697,
            0.00013196846703067422,
            0.00027737912023440003,
            0.000124111698823981,
            0.00015897737466730177,
            0.00012318813242018223
        ],
        "align_select": "select teacher.Name",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "What are the names of the teachers ordered by ascending age?",
        "gold_select": "select teacher.Name",
        "select_candidates": [
            "select teacher.Name",
            "select teacher.Name, teacher.birthyear",
            "select teacher.Name, teacher.birthyear, teacher.Hometown",
            "select teacher.Name (ordered by teacher.birthyear)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher",
        "table_candidates": [
            "teacher"
        ],
        "align_scores": [
            0.9954421520233154,
            0.00024409314210060984,
            0.00022110984718892723,
            0.0001205940789077431,
            0.00023766927188262343,
            0.00012261855590622872,
            0.010398025624454021,
            0.00016416401194874197
        ],
        "align_select": "select teacher.Name",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "What is the hometown of the youngest teacher?",
        "gold_select": "select teacher.Hometown",
        "select_candidates": [
            "select teacher.Hometown",
            "select teacher.Hometown, teacher.birthyear",
            "select teacher.Hometown, teacher.birthyear, teacher.Teacher_ID",
            "select teacher.birthyear, teacher.Hometown"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher",
        "table_candidates": [
            "teacher"
        ],
        "align_scores": [
            0.995550274848938,
            6.109716923674569e-05,
            0.000675056828185916,
            5.8407895267009735e-05,
            0.00014608331548515707,
            5.576578405452892e-05,
            0.0003193612501490861,
            6.426583422580734e-05
        ],
        "align_select": "select teacher.Hometown",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Where is the youngest teacher from?",
        "gold_select": "select teacher.Hometown",
        "select_candidates": [
            "select teacher.Hometown",
            "select teacher.Hometown, teacher.birthyear",
            "select teacher.birthyear, teacher.Hometown",
            "select teacher.Hometown (symbol teacher.birthyear)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher",
        "table_candidates": [
            "teacher"
        ],
        "align_scores": [
            0.9947060942649841,
            6.372805364662781e-05,
            0.0008113207877613604,
            5.7194898545276374e-05,
            0.00040243688272312284,
            6.227575795492157e-05,
            0.0008750907727517188,
            5.6956123444251716e-05
        ],
        "align_select": "select teacher.Hometown",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "List the names of teachers in ascending order of age.",
        "gold_select": "select teacher.first_name, teacher.last_name",
        "select_candidates": [
            "select teacher.first_name, teacher.last_name",
            "select teacher.first_name, teacher.last_name, teacher.Age",
            "select teacher.first_name, teacher.last_name, teacher.Age",
            "select teacher.first_name, teacher.last_name in teacher.Age"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "teacher",
        "table_candidates": [
            "teacher"
        ],
        "align_scores": [
            0.9896578192710876,
            0.9896578192710876,
            0.0001633792999200523,
            0.0001633792999200523,
            0.0001633792999200523,
            0.0001633792999200523,
            0.0004261396243236959,
            0.0004261396243236959
        ],
        "align_select": "select teacher.first_name, teacher.last_name",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "What are the names of the teachers ordered by ascending age?",
        "gold_select": "select teacher.first_name, teacher.last_name",
        "select_candidates": [
            "select teacher.first_name, teacher.last_name",
            "select teacher.first_name, teacher.last_name, teacher.Age",
            "select teacher.first_name, teacher.last_name in teacher.Age",
            "select teacher.first_name, teacher.last_name or teacher.Age"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher",
        "table_candidates": [
            "teacher"
        ],
        "align_scores": [
            0.9944487810134888,
            0.00017894094344228506,
            0.00015518466534558684,
            0.00011014217307092622,
            0.00041434852755628526,
            0.0001499433274148032,
            0.0003995172737631947,
            0.00020477363432291895
        ],
        "align_select": "select teacher.first_name, teacher.last_name",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "List the name of teachers whose hometown is not  Little Lever Urban District ''.",
        "gold_select": "select teacher.first_name, teacher.last_name",
        "select_candidates": [
            "select teacher.first_name, teacher.last_name",
            "select teacher.first_name, teacher.last_name, teacher.Age",
            "select teacher.Teacher_ID, teacher.first_name, teacher.last_name",
            "select teacher.first_name, teacher.last_name, teacher.Age, teacher.Hometown"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher",
        "table_candidates": [
            "teacher"
        ],
        "align_scores": [
            0.9062626361846924,
            8.569244528189301e-05,
            0.0001433367870049551,
            6.342673441395164e-05,
            0.00017083206330426037,
            7.166024442994967e-05,
            0.0001228127075592056,
            6.201524229254574e-05
        ],
        "align_select": "select teacher.first_name, teacher.last_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of the teachers whose hometown is not  Little Lever Urban District ''?",
        "gold_select": "select teacher.first_name, teacher.last_name",
        "select_candidates": [
            "select teacher.first_name, teacher.last_name",
            "select teacher.first_name, teacher.last_name, teacher.Age",
            "select teacher.Teacher_ID, teacher.first_name, teacher.last_name",
            "select teacher.first_name, teacher.last_name, teacher.Hometown"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher",
        "table_candidates": [
            "teacher"
        ],
        "align_scores": [
            0.9672484397888184,
            0.004846411757171154,
            0.00017536996165290475,
            7.968213321873918e-05,
            0.0002076281380141154,
            0.00010656871017999947,
            0.0001854859001468867,
            0.00011507375165820122
        ],
        "align_select": "select teacher.first_name, teacher.last_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show the name of teachers aged either 32 or 33?",
        "gold_select": "select teacher.first_name, teacher.last_name",
        "select_candidates": [
            "select teacher.first_name, teacher.last_name",
            "select teacher.first_name, teacher.last_name, teacher.Age",
            "select teacher.Teacher_ID, teacher.first_name, teacher.last_name",
            "select t1.c 1, teacher.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher",
        "table_candidates": [
            "teacher"
        ],
        "align_scores": [
            0.9899024963378906,
            0.00020173838129267097,
            0.00012335929204709828,
            6.353751814458519e-05,
            0.00015630738926120102,
            8.565518510295078e-05,
            0.0003532467526383698,
            8.004402479855344e-05
        ],
        "align_select": "select teacher.first_name, teacher.last_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of the teachers who are aged either 32 or 33?",
        "gold_select": "select teacher.first_name, teacher.last_name",
        "select_candidates": [
            "select teacher.first_name, teacher.last_name",
            "select teacher.first_name, teacher.last_name, teacher.Age",
            "select distinct teacher.first_name, teacher.last_name",
            "select t1.c 1, teacher.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher",
        "table_candidates": [
            "teacher"
        ],
        "align_scores": [
            0.99137282371521,
            0.00019377698481548578,
            0.00015830273332539946,
            6.72503374516964e-05,
            0.04921923205256462,
            7.502874359488487e-05,
            0.0004088793648406863,
            8.840840018820018e-05
        ],
        "align_select": "select teacher.first_name, teacher.last_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show names of teachers and the courses they are arranged to teach.",
        "gold_select": "select teacher.first_name, teacher.last_name, course.Course",
        "select_candidates": [
            "select teacher.first_name, teacher.last_name, course.Course",
            "select teacher.first_name, teacher.last_name, course.Staring_Date",
            "select teacher.first_name, teacher.last_name, course.Course, course_arrange.Teacher_ID",
            "select teacher.first_name, teacher.last_name, course.Course, teacher.Teacher_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "course teacher course_arrange",
        "table_candidates": [
            "course teacher course_arrange",
            "course teacher"
        ],
        "align_scores": [
            0.9928551316261292,
            0.9402514100074768,
            0.0013099736534059048,
            0.0010219772811979055,
            0.0001956049381988123,
            0.00016908008547034115,
            0.00014622617163695395,
            0.00013219441461842507
        ],
        "align_select": "select teacher.first_name, teacher.last_name, course.Course",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What is the name of each teacher and what course they teach?",
        "gold_select": "select teacher.first_name, teacher.last_name, course.Course",
        "select_candidates": [
            "select teacher.first_name, teacher.last_name, course.Course",
            "select teacher.first_name, teacher.last_name, course.Course, teacher.Teacher_ID",
            "select teacher.first_name, teacher.last_name, course.Staring_Date",
            "select teacher.first_name, teacher.last_name, course.Course, course_arrange.Teacher_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "course teacher course_arrange",
        "table_candidates": [
            "course teacher course_arrange",
            "course teacher"
        ],
        "align_scores": [
            0.9922228455543518,
            0.9893237948417664,
            0.00013991250307299197,
            0.00020547596795950085,
            0.0033633967395871878,
            0.022509321570396423,
            0.00017499446403235197,
            0.00034282886190339923
        ],
        "align_select": "select teacher.first_name, teacher.last_name, course.Course",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "Show names of teachers and the courses they are arranged to teach in ascending alphabetical order of the teacher's name.",
        "gold_select": "select teacher.first_name, teacher.last_name, course.Course",
        "select_candidates": [
            "select teacher.first_name, teacher.last_name, course.Course",
            "select teacher.first_name, teacher.last_name, course.Staring_Date",
            "select teacher.first_name, teacher.last_name, course.Course, course_arrange.Teacher_ID",
            "select teacher.first_name, teacher.last_name, course.Course, course.Course_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "course teacher course_arrange",
        "table_candidates": [
            "course teacher course_arrange"
        ],
        "align_scores": [
            0.9849234819412231,
            0.9849234819412231,
            0.0013151605380699039,
            0.0013151605380699039,
            0.00019742961740121245,
            0.00019742961740121245,
            0.00025114178424701095,
            0.00025114178424701095
        ],
        "align_select": "select teacher.first_name, teacher.last_name, course.Course",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "What are the names of the teachers and the courses they teach in ascending alphabetical order by the name of the teacher?",
        "gold_select": "select teacher.first_name, teacher.last_name, course.Course",
        "select_candidates": [
            "select teacher.first_name, teacher.last_name, course.Course",
            "select teacher.first_name, teacher.last_name, course.Staring_Date",
            "select teacher.first_name, teacher.last_name",
            "select teacher.first_name, teacher.last_name, course.Course_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "course teacher course_arrange",
        "table_candidates": [
            "course teacher course_arrange",
            "course teacher"
        ],
        "align_scores": [
            0.9891337752342224,
            0.9891337752342224,
            0.006304621230810881,
            0.006304621230810881,
            0.002152872970327735,
            0.002152872970327735,
            0.9165208339691162,
            0.9165208339691162
        ],
        "align_select": "select teacher.first_name, teacher.last_name, course.Course",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "Show the name of the teacher for the math course.",
        "gold_select": "select teacher.first_name, teacher.last_name",
        "select_candidates": [
            "select teacher.first_name, teacher.last_name",
            "select teacher.first_name, teacher.last_name, teacher.Teacher_ID",
            "select teacher.first_name, teacher.last_name, teacher.Age",
            "select t1.c 1, teacher.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "course teacher course_arrange",
        "table_candidates": [
            "course teacher course_arrange",
            "course teacher"
        ],
        "align_scores": [
            0.9488685131072998,
            7.001998892519623e-05,
            0.00013269175542518497,
            6.372124335030094e-05,
            0.00011919895769096911,
            6.983632920309901e-05,
            0.0002588698116596788,
            6.405511521734297e-05
        ],
        "align_select": "select teacher.first_name, teacher.last_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of the people who teach math courses?",
        "gold_select": "select teacher.first_name, teacher.last_name",
        "select_candidates": [
            "select teacher.first_name, teacher.last_name",
            "select distinct teacher.first_name, teacher.last_name",
            "select unique teacher.first_name, teacher.last_name",
            "select distinctive teacher.first_name, teacher.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "course teacher course_arrange",
        "table_candidates": [
            "course teacher course_arrange",
            "course teacher"
        ],
        "align_scores": [
            0.9826909899711609,
            9.701988892629743e-05,
            0.06274222582578659,
            6.706485874019563e-05,
            0.0010982381645590067,
            6.064602348487824e-05,
            0.0005854769260622561,
            6.117156590335071e-05
        ],
        "align_select": "select teacher.first_name, teacher.last_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show names of teachers and the number of courses they teach.",
        "gold_select": "select teacher.first_name, teacher.last_name, count(*)",
        "select_candidates": [
            "select teacher.first_name, teacher.last_name, count(*)",
            "select teacher.first_name, teacher.last_name, count(*),",
            "select teacher.first_name, teacher.last_name, count(*), teacher.Teacher_ID",
            "select teacher.first_name, teacher.last_name, count(distinct course.Course)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher course_arrange",
        "table_candidates": [
            "course teacher course_arrange",
            "course teacher"
        ],
        "align_scores": [
            0.9946058392524719,
            0.00015354028437286615,
            0.0013925557723268867,
            0.0001270842330995947,
            0.00019458720635157079,
            9.230601426679641e-05,
            0.0055214096792042255,
            0.00011682082549668849
        ],
        "align_select": "select teacher.first_name, teacher.last_name, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "What are the names of the teachers and how many courses do they teach?",
        "gold_select": "select teacher.first_name, teacher.last_name, count(*)",
        "select_candidates": [
            "select teacher.first_name, teacher.last_name, count(*)",
            "select teacher.first_name, teacher.last_name, count(*), teacher.Teacher_ID",
            "select teacher.first_name, teacher.last_name, count(*),",
            "select teacher.first_name, teacher.last_name, count(distinct course.Course)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher course_arrange",
        "table_candidates": [
            "course teacher course_arrange",
            "course teacher"
        ],
        "align_scores": [
            0.9901584982872009,
            0.00021903670858591795,
            0.00026345826336182654,
            0.00011058965901611373,
            0.0021535533014684916,
            0.00015134786372072995,
            0.021739160642027855,
            0.00011600780999287963
        ],
        "align_select": "select teacher.first_name, teacher.last_name, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "Show names of teachers that teach at least two courses.",
        "gold_select": "select teacher.first_name, teacher.last_name",
        "select_candidates": [
            "select teacher.first_name, teacher.last_name",
            "select teacher.first_name, teacher.last_name, teacher.Age",
            "select teacher.first_name, teacher.last_name, teacher.Teacher_ID",
            "select teacher.first_name, teacher.last_name, t0.c3"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher course_arrange",
        "table_candidates": [
            "course teacher course_arrange",
            "course teacher"
        ],
        "align_scores": [
            0.9496078491210938,
            7.06437203916721e-05,
            0.0001477875921409577,
            5.50297845620662e-05,
            0.00019055117445532233,
            5.722616333514452e-05,
            0.000915550219360739,
            6.246526027098298e-05
        ],
        "align_select": "select teacher.first_name, teacher.last_name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the names of the teachers who teach at least two courses?",
        "gold_select": "select teacher.first_name, teacher.last_name",
        "select_candidates": [
            "select teacher.first_name, teacher.last_name",
            "select teacher.first_name, teacher.last_name, teacher.Age",
            "select teacher.first_name, teacher.last_name, teacher.Teacher_ID",
            "select teacher.Teacher_ID, teacher.first_name, teacher.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher course_arrange",
        "table_candidates": [
            "course teacher course_arrange",
            "course teacher"
        ],
        "align_scores": [
            0.8940073847770691,
            8.010114106582478e-05,
            0.0002017668739426881,
            5.604214675258845e-05,
            0.00028468697564676404,
            6.226910772966221e-05,
            0.0004997391370125115,
            6.747812585672364e-05
        ],
        "align_select": "select teacher.first_name, teacher.last_name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "List the names of teachers who have not been arranged to teach courses.",
        "gold_select": "select teacher.first_name, teacher.last_name",
        "select_candidates": [
            "select teacher.first_name, teacher.last_name",
            "select teacher.first_name, teacher.last_name, teacher.Age",
            "select distinct teacher.first_name, teacher.last_name",
            "select unarranged teacher.first_name, teacher.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher",
        "table_candidates": [
            "teacher",
            "teacher course_arrange"
        ],
        "align_scores": [
            0.6451904773712158,
            0.0004180224786978215,
            0.00020004934049211442,
            8.460610843030736e-05,
            0.05904192477464676,
            0.00016814532864373177,
            0.0030215843580663204,
            0.00021401012782007456
        ],
        "align_select": "select teacher.first_name, teacher.last_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of the teachers whose courses have not been arranged?",
        "gold_select": "select teacher.first_name, teacher.last_name",
        "select_candidates": [
            "select teacher.first_name, teacher.last_name",
            "select teacher.first_name, teacher.last_name, teacher.Age",
            "select teacher.Teacher_ID, teacher.first_name, teacher.last_name",
            "select teacher.first_name, teacher.last_name, teacher.Teacher_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher",
        "table_candidates": [
            "course teacher",
            "teacher",
            "course teacher course_arrange",
            "teacher course_arrange"
        ],
        "align_scores": [
            0.9571442008018494,
            0.00045805764966644347,
            0.00018505362095311284,
            7.587487198179588e-05,
            0.00029963007546029985,
            0.00010924470552708954,
            0.0002004678826779127,
            7.75456428527832e-05
        ],
        "align_select": "select teacher.first_name, teacher.last_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List the names of teachers in ascending order of age.",
        "gold_select": "select teacher.Name",
        "select_candidates": [
            "select teacher.Name",
            "select teacher.Name, teacher.birthyear",
            "select teacher.Name, teacher.birthyear, teacher.Hometown",
            "select teacher.Name, teacher.birthyear - teacher.Hometown"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher",
        "table_candidates": [
            "teacher"
        ],
        "align_scores": [
            0.9956120252609253,
            0.0002906853042077273,
            0.0002383964165346697,
            0.00013196846703067422,
            0.00027737912023440003,
            0.000124111698823981,
            0.00015897737466730177,
            0.00012318813242018223
        ],
        "align_select": "select teacher.Name",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "What are the names of the teachers ordered by ascending age?",
        "gold_select": "select teacher.Name",
        "select_candidates": [
            "select teacher.Name",
            "select teacher.Name, teacher.birthyear",
            "select teacher.Name, teacher.birthyear, teacher.Hometown",
            "select teacher.Name (ordered by teacher.birthyear)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher",
        "table_candidates": [
            "teacher"
        ],
        "align_scores": [
            0.9954421520233154,
            0.00024409314210060984,
            0.00022110984718892723,
            0.0001205940789077431,
            0.00023766927188262343,
            0.00012261855590622872,
            0.010398025624454021,
            0.00016416401194874197
        ],
        "align_select": "select teacher.Name",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "What is the hometown of the youngest teacher?",
        "gold_select": "select teacher.Hometown",
        "select_candidates": [
            "select teacher.Hometown",
            "select teacher.Hometown, teacher.birthyear",
            "select teacher.birthyear, teacher.Hometown",
            "select teacher.Hometown, teacher.birthyear, teacher.Teacher_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher",
        "table_candidates": [
            "teacher"
        ],
        "align_scores": [
            0.995550274848938,
            6.109716923674569e-05,
            0.000675056828185916,
            5.8407895267009735e-05,
            0.0003193612501490861,
            6.426583422580734e-05,
            0.00014608331548515707,
            5.576578405452892e-05
        ],
        "align_select": "select teacher.Hometown",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Where is the youngest teacher from?",
        "gold_select": "select teacher.Hometown",
        "select_candidates": [
            "select teacher.Hometown",
            "select teacher.Hometown, teacher.birthyear",
            "select teacher.birthyear, teacher.Hometown",
            "select teacher.Hometown (symbol teacher.birthyear)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher",
        "table_candidates": [
            "teacher"
        ],
        "align_scores": [
            0.9947060942649841,
            6.372805364662781e-05,
            0.0008113207877613604,
            5.7194898545276374e-05,
            0.00040243688272312284,
            6.227575795492157e-05,
            0.0008750907727517188,
            5.6956123444251716e-05
        ],
        "align_select": "select teacher.Hometown",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "List the names of teachers in ascending order of age.",
        "gold_select": "select teacher.first_name, teacher.last_name",
        "select_candidates": [
            "select teacher.first_name, teacher.last_name",
            "select teacher.first_name, teacher.last_name, teacher.birthyear",
            "select teacher.first_name, teacher.last_name in teacher.birthyear",
            "select teacher.first_name, teacher.last_name the, teacher.birthyear"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher",
        "table_candidates": [
            "teacher"
        ],
        "align_scores": [
            0.9896578192710876,
            0.00014463838306255639,
            0.00018059037392959,
            0.00010402646876173094,
            0.0007973219035193324,
            0.00015905713371466845,
            0.0002918067912105471,
            0.00017169247439596802
        ],
        "align_select": "select teacher.first_name, teacher.last_name",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "What are the names of the teachers ordered by ascending age?",
        "gold_select": "select teacher.first_name, teacher.last_name",
        "select_candidates": [
            "select teacher.first_name, teacher.last_name",
            "select teacher.first_name, teacher.last_name, teacher.birthyear",
            "select teacher.first_name, teacher.last_name in teacher.birthyear",
            "select teacher.first_name, teacher.last_name (ORDER BY"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "teacher",
        "table_candidates": [
            "teacher"
        ],
        "align_scores": [
            0.9944487810134888,
            0.9944487810134888,
            0.0001685887691564858,
            0.0001685887691564858,
            0.0009850965579971671,
            0.0009850965579971671,
            0.00096252525690943,
            0.00096252525690943
        ],
        "align_select": "select teacher.first_name, teacher.last_name",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "List the name of teachers whose hometown is not  Little Lever Urban District ''.",
        "gold_select": "select teacher.first_name, teacher.last_name",
        "select_candidates": [
            "select teacher.first_name, teacher.last_name",
            "select teacher.first_name, teacher.last_name, teacher.birthyear",
            "select teacher.first_name, teacher.last_name, teacher.Teacher_ID",
            "select teacher.Teacher_ID, teacher.first_name, teacher.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher",
        "table_candidates": [
            "teacher"
        ],
        "align_scores": [
            0.9062626361846924,
            8.569244528189301e-05,
            0.0001504626270616427,
            6.096244396758266e-05,
            0.0001497397170169279,
            6.118136661825702e-05,
            0.00017083206330426037,
            7.166024442994967e-05
        ],
        "align_select": "select teacher.first_name, teacher.last_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of the teachers whose hometown is not  Little Lever Urban District ''?",
        "gold_select": "select teacher.first_name, teacher.last_name",
        "select_candidates": [
            "select teacher.first_name, teacher.last_name",
            "select teacher.first_name, teacher.last_name, teacher.birthyear",
            "select teacher.first_name, teacher.last_name, teacher.Hometown",
            "select teacher.first_name, teacher.last_name, teacher.Teacher_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher",
        "table_candidates": [
            "teacher"
        ],
        "align_scores": [
            0.9672484397888184,
            0.00011010206071659923,
            0.0001706041512079537,
            5.8196841564495116e-05,
            0.0001854859001468867,
            5.9718040574807674e-05,
            0.0001724048051983118,
            6.073850818211213e-05
        ],
        "align_select": "select teacher.first_name, teacher.last_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the hometown of the youngest teacher?",
        "gold_select": "select teacher.Hometown",
        "select_candidates": [
            "select teacher.Hometown",
            "select teacher.Hometown, teacher.birthyear",
            "select teacher.Hometown, teacher.birthyear, teacher.last_name",
            "select teacher.Hometown, teacher.birthyear, teacher.Hometown"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher",
        "table_candidates": [
            "teacher"
        ],
        "align_scores": [
            0.995550274848938,
            6.109716923674569e-05,
            0.000675056828185916,
            5.8407895267009735e-05,
            0.00013100806972943246,
            5.519797559827566e-05,
            0.0002239702589577064,
            5.9350601077312604e-05
        ],
        "align_select": "select teacher.Hometown",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Where is the youngest teacher from?",
        "gold_select": "select teacher.Hometown",
        "select_candidates": [
            "select teacher.Hometown",
            "select teacher.Hometown, teacher.birthyear",
            "select teacher.Hometown (symbol teacher.birthyear)",
            "select teacher.Hometown (syntax teacher.birthyear)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher",
        "table_candidates": [
            "teacher"
        ],
        "align_scores": [
            0.9947060942649841,
            6.372805364662781e-05,
            0.0008113207877613604,
            5.7194898545276374e-05,
            0.0008750907727517188,
            5.6956123444251716e-05,
            0.0007327634957619011,
            5.464344940264709e-05
        ],
        "align_select": "select teacher.Hometown",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Show names of teachers and the courses they are arranged to teach.",
        "gold_select": "select teacher.first_name, teacher.last_name, course.Course",
        "select_candidates": [
            "select teacher.first_name, teacher.last_name, course.Course",
            "select teacher.first_name, teacher.last_name, course.starting_day",
            "select teacher.first_name, teacher.last_name, course.Course, course_arrange.Teacher_ID",
            "select course_arrange.Teacher_ID, teacher.first_name, teacher.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "course teacher course_arrange",
        "table_candidates": [
            "course teacher course_arrange",
            "course teacher"
        ],
        "align_scores": [
            0.9928551316261292,
            0.9402514100074768,
            0.00548549834638834,
            0.0028827583882957697,
            0.0001956049381988123,
            0.00016908008547034115,
            0.00035427435068413615,
            0.0003132954880129546
        ],
        "align_select": "select teacher.first_name, teacher.last_name, course.Course",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What is the name of each teacher and what course they teach?",
        "gold_select": "select teacher.first_name, teacher.last_name, course.Course",
        "select_candidates": [
            "select teacher.first_name, teacher.last_name, course.Course",
            "select teacher.first_name, teacher.last_name, course.Course, course_arrange.Teacher_ID",
            "select teacher.first_name, teacher.last_name, course.Course, teacher.Teacher_ID",
            "select teacher.first_name, teacher.last_name, course.Course, course_arrange.Course_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "course teacher course_arrange",
        "table_candidates": [
            "course teacher course_arrange",
            "course teacher"
        ],
        "align_scores": [
            0.9922228455543518,
            0.9893237948417664,
            0.00017499446403235197,
            0.00034282886190339923,
            0.00013991250307299197,
            0.00020547596795950085,
            0.00018751776951830834,
            0.0002371246664552018
        ],
        "align_select": "select teacher.first_name, teacher.last_name, course.Course",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "Show names of teachers and the courses they are arranged to teach in ascending alphabetical order of the teacher's name.",
        "gold_select": "select teacher.first_name, teacher.last_name, course.Course",
        "select_candidates": [
            "select teacher.first_name, teacher.last_name, course.Course",
            "select teacher.first_name, teacher.last_name, course.starting_day",
            "select teacher.first_name, teacher.last_name, course.Course, course_arrange.Teacher_ID",
            "select teacher.first_name, t01.c2, course.Course"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "course teacher course_arrange",
        "table_candidates": [
            "course teacher course_arrange"
        ],
        "align_scores": [
            0.9849234819412231,
            0.9849234819412231,
            0.003640859853476286,
            0.003640859853476286,
            0.00019742961740121245,
            0.00019742961740121245,
            0.0002947979955933988,
            0.0002947979955933988
        ],
        "align_select": "select teacher.first_name, teacher.last_name, course.Course",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "What are the names of the teachers and the courses they teach in ascending alphabetical order by the name of the teacher?",
        "gold_select": "select teacher.first_name, teacher.last_name, course.Course",
        "select_candidates": [
            "select teacher.first_name, teacher.last_name, course.Course",
            "select teacher.first_name, teacher.last_name, course.Course, course.Course_ID",
            "select teacher.first_name, teacher.last_name",
            "select teacher.first_name, teacher.last_name, course.starting_day"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "course teacher course_arrange",
        "table_candidates": [
            "course teacher course_arrange",
            "course teacher"
        ],
        "align_scores": [
            0.9891337752342224,
            0.9891337752342224,
            0.0002465589495841414,
            0.0002465589495841414,
            0.002152872970327735,
            0.002152872970327735,
            0.15084753930568695,
            0.15084753930568695
        ],
        "align_select": "select teacher.first_name, teacher.last_name, course.Course",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "Show the name of the teacher for the math course.",
        "gold_select": "select teacher.first_name, teacher.last_name",
        "select_candidates": [
            "select teacher.first_name, teacher.last_name",
            "select teacher.first_name, teacher.last_name, teacher.Teacher_ID",
            "select teacher.Teacher_ID, teacher.first_name, teacher.last_name",
            "select teacher.first_name, teacher.last_name, teacher.birthyear"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "course teacher course_arrange",
        "table_candidates": [
            "course teacher course_arrange",
            "course teacher"
        ],
        "align_scores": [
            0.9488685131072998,
            7.001998892519623e-05,
            0.00013269175542518497,
            6.372124335030094e-05,
            0.0001550129527458921,
            7.173769699875265e-05,
            0.00013118832430336624,
            6.305404531303793e-05
        ],
        "align_select": "select teacher.first_name, teacher.last_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of the people who teach math courses?",
        "gold_select": "select teacher.first_name, teacher.last_name",
        "select_candidates": [
            "select teacher.first_name, teacher.last_name",
            "select distinct teacher.first_name, teacher.last_name",
            "select unique teacher.first_name, teacher.last_name",
            "select distinctive teacher.first_name, teacher.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "course teacher course_arrange",
        "table_candidates": [
            "course teacher course_arrange",
            "course teacher"
        ],
        "align_scores": [
            0.9826909899711609,
            9.701988892629743e-05,
            0.06274222582578659,
            6.706485874019563e-05,
            0.0010982381645590067,
            6.064602348487824e-05,
            0.0005854769260622561,
            6.117156590335071e-05
        ],
        "align_select": "select teacher.first_name, teacher.last_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show names of teachers and the number of courses they teach.",
        "gold_select": "select teacher.first_name, teacher.last_name, count(*)",
        "select_candidates": [
            "select teacher.first_name, teacher.last_name, count(*)",
            "select teacher.first_name, teacher.last_name, count(*), teacher.Teacher_ID",
            "select teacher.first_name, teacher.last_name, count(*),",
            "select teacher.first_name, teacher.last_name, count(distinct course.Course)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher course_arrange",
        "table_candidates": [
            "course teacher course_arrange",
            "course teacher"
        ],
        "align_scores": [
            0.9946058392524719,
            0.00015354028437286615,
            0.00019458720635157079,
            9.230601426679641e-05,
            0.0013925557723268867,
            0.0001270842330995947,
            0.0055214096792042255,
            0.00011682082549668849
        ],
        "align_select": "select teacher.first_name, teacher.last_name, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "What are the names of the teachers and how many courses do they teach?",
        "gold_select": "select teacher.first_name, teacher.last_name, count(*)",
        "select_candidates": [
            "select teacher.first_name, teacher.last_name, count(*)",
            "select teacher.first_name, teacher.last_name, count(*), teacher.Teacher_ID",
            "select teacher.first_name, teacher.last_name, count(*),",
            "select teacher.first_name, teacher.last_name, count(distinct course.Course)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher course_arrange",
        "table_candidates": [
            "course teacher course_arrange",
            "course teacher"
        ],
        "align_scores": [
            0.9901584982872009,
            0.00021903670858591795,
            0.00026345826336182654,
            0.00011058965901611373,
            0.0021535533014684916,
            0.00015134786372072995,
            0.021739160642027855,
            0.00011600780999287963
        ],
        "align_select": "select teacher.first_name, teacher.last_name, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "Show names of teachers that teach at least two courses.",
        "gold_select": "select teacher.first_name, teacher.last_name",
        "select_candidates": [
            "select teacher.first_name, teacher.last_name",
            "select teacher.first_name, teacher.last_name, teacher.birthyear",
            "select teacher.first_name, teacher.last_name, course.Course",
            "select teacher.first_name, teacher.last_name, teacher.Teacher_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher course_arrange",
        "table_candidates": [
            "course teacher course_arrange",
            "course teacher"
        ],
        "align_scores": [
            0.9496078491210938,
            7.06437203916721e-05,
            0.00021107718930579722,
            5.851950845681131e-05,
            0.0003146236122120172,
            6.591736746486276e-05,
            0.00019055117445532233,
            5.722616333514452e-05
        ],
        "align_select": "select teacher.first_name, teacher.last_name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the names of the teachers who teach at least two courses?",
        "gold_select": "select teacher.first_name, teacher.last_name",
        "select_candidates": [
            "select teacher.first_name, teacher.last_name",
            "select teacher.first_name, teacher.last_name, teacher.birthyear",
            "select teacher.first_name, teacher.last_name, teacher.Teacher_ID",
            "select teacher.Teacher_ID, teacher.first_name, teacher.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher course_arrange",
        "table_candidates": [
            "course teacher course_arrange",
            "course teacher"
        ],
        "align_scores": [
            0.8940073847770691,
            8.010114106582478e-05,
            0.0003488044021651149,
            6.242577364901081e-05,
            0.00028468697564676404,
            6.226910772966221e-05,
            0.0004997391370125115,
            6.747812585672364e-05
        ],
        "align_select": "select teacher.first_name, teacher.last_name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "List the names of teachers who have not been arranged to teach courses.",
        "gold_select": "select teacher.first_name, teacher.last_name",
        "select_candidates": [
            "select teacher.first_name, teacher.last_name",
            "select teacher.first_name, teacher.last_name, teacher.birthyear",
            "select teacher.first_name, teacher.last_name, teacher.Hometown",
            "select distinct teacher.first_name, teacher.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher",
        "table_candidates": [
            "teacher",
            "teacher course_arrange"
        ],
        "align_scores": [
            0.6451904773712158,
            0.0004180224786978215,
            0.00016211644106078893,
            9.061054879566655e-05,
            0.00021144034690223634,
            9.949786908691749e-05,
            0.05904192477464676,
            0.00016814532864373177
        ],
        "align_select": "select teacher.first_name, teacher.last_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of the teachers whose courses have not been arranged?",
        "gold_select": "select teacher.first_name, teacher.last_name",
        "select_candidates": [
            "select teacher.first_name, teacher.last_name",
            "select teacher.first_name, teacher.last_name, teacher.birthyear",
            "select teacher.Teacher_ID, teacher.first_name, teacher.last_name",
            "select teacher.first_name, teacher.last_name, teacher.Teacher_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "teacher",
        "table_candidates": [
            "course teacher",
            "course teacher course_arrange",
            "teacher",
            "teacher course_arrange"
        ],
        "align_scores": [
            0.9571442008018494,
            0.00045805764966644347,
            0.0001862390636233613,
            8.742376667214558e-05,
            0.00029963007546029985,
            0.00010924470552708954,
            0.0002004678826779127,
            7.75456428527832e-05
        ],
        "align_select": "select teacher.first_name, teacher.last_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the names of the visitors whose membership level is higher than 4, and order the results by the level from high to low.",
        "gold_select": "select visitor.first_name, visitor.last_name",
        "select_candidates": [
            "select visitor.first_name, visitor.last_name",
            "select visitor.first_name, visitor.last_name, visitor.Level_of_membership",
            "select visitor.first_name, visitor.last_name in visitor.Level_of_membership",
            "select visitor.ID, visitor.first_name, visitor.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY",
            "SELECT-FROM-WHERE-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "visitor",
        "table_candidates": [
            "visitor"
        ],
        "align_scores": [
            0.922478973865509,
            0.922478973865509,
            0.00030931030050851405,
            0.00030931030050851405,
            0.0005146354669705033,
            0.0005146354669705033,
            0.0002862726978491992,
            0.0002862726978491992
        ],
        "align_select": "select visitor.first_name, visitor.last_name",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY"
    },
    {
        "question": "Find the name and membership level of the visitors whose membership level is higher than 4, and sort by their age from old to young.",
        "gold_select": "select visitor.first_name, visitor.last_name, visitor.Level_of_membership",
        "select_candidates": [
            "select visitor.first_name, visitor.last_name, visitor.Level_of_membership",
            "select visitor.first_name, visitor.last_name, visitor.Level_of_membership, visitor.birthyear",
            "select visitor.first_name, visitor.last_name",
            "select visitor.first_name, visitor.last_name, visitor.Level_of_membership-ordered"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY",
            "SELECT-FROM-WHERE-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "visitor",
        "table_candidates": [
            "visitor"
        ],
        "align_scores": [
            0.3201574385166168,
            0.3201574385166168,
            0.0005164930480532348,
            0.0005164930480532348,
            0.006125709507614374,
            0.006125709507614374,
            0.0015334398485720158,
            0.0015334398485720158
        ],
        "align_select": "select visitor.first_name, visitor.last_name, visitor.Level_of_membership",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY"
    },
    {
        "question": "What are the id, name and membership level of visitors who have spent the largest amount of money in total in all museum tickets?",
        "gold_select": "select visit.visitor_ID, visitor.first_name, visitor.last_name, visitor.Level_of_membership",
        "select_candidates": [
            "select visit.visitor_ID, visitor.first_name, visitor.last_name, visitor.Level_of_membership",
            "select visitor.ID, visitor.first_name, visitor.last_name, visitor.Level_of_membership",
            "select visit.visitor_ID, visitor.ID, visitor.first_name, visitor.last_name, visitor.Level_of_membership",
            "select visit.Museum_ID, visitor.first_name, visitor.last_name, visitor.Level_of_membership"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "visitor visit",
        "table_candidates": [
            "visitor visit"
        ],
        "align_scores": [
            0.48999255895614624,
            0.16173692047595978,
            0.8333380222320557,
            0.3079293370246887,
            0.0008979629492387176,
            0.0008540672133676708,
            0.0010577283101156354,
            0.0010254747467115521
        ],
        "align_select": "select visitor.ID, visitor.first_name, visitor.last_name, visitor.Level_of_membership",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the name of the visitor who visited both a museum opened before 2009 and a museum opened after 2011?",
        "gold_select": "select visitor.first_name, visitor.last_name",
        "select_candidates": [
            "select visitor.first_name, visitor.last_name",
            "select visitor.first_name, visitor.last_name, museum.Open_Year",
            "select visitor.first_name, visitor.last_name, visitor.birthyear",
            "select visitor.first_name, visitor.last_name, visitor.ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "museum visitor visit",
        "table_candidates": [
            "museum visitor visit"
        ],
        "align_scores": [
            0.984772801399231,
            0.984772801399231,
            0.00044481756049208343,
            0.00044481756049208343,
            0.00016735869576223195,
            0.00016735869576223195,
            0.0001466187823098153,
            0.0001466187823098153
        ],
        "align_select": "select visitor.first_name, visitor.last_name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "Find the name and membership level of the visitors whose membership level is higher than 4, and sort by their age from old to young.",
        "gold_select": "select visitor.Name, visitor.Level_of_membership",
        "select_candidates": [
            "select visitor.Name, visitor.Level_of_membership",
            "select visitor.Name, visitor.Level_of_membership, visitor.birthyear",
            "select visitor.Name, visitor.Level_of_membership sort by visitor.birthyear",
            "select visitor.Name, visitor.Level_of_membership sorting by visitor.birthyear"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY",
            "SELECT-FROM-WHERE-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "visitor",
        "table_candidates": [
            "visitor"
        ],
        "align_scores": [
            0.9923719167709351,
            0.0004060867358930409,
            0.0008725737570784986,
            0.00013839402527082711,
            0.007521508261561394,
            0.00013986355043016374,
            0.021764805540442467,
            0.00012475182302296162
        ],
        "align_select": "select visitor.Name, visitor.Level_of_membership",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY"
    },
    {
        "question": "List the first name and birth date of all players from the country with code USA.",
        "gold_select": "select players.first_name, players.birthyear, players.bithday",
        "select_candidates": [
            "select players.first_name, players.bithday",
            "select players.first_name, players.birthyear",
            "select players.first_name, players.last_name",
            "select players.first_name, players.birthyear, players.bithday"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "players",
        "table_candidates": [
            "players"
        ],
        "align_scores": [
            0.9913499355316162,
            0.00019102415535598993,
            0.8858516216278076,
            0.00014312347047962248,
            0.0002665904466994107,
            8.22701258584857e-05,
            0.0002772223378997296,
            7.14276684448123e-05
        ],
        "align_select": "select players.first_name, players.bithday",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the first names and birth dates of players from the USA?",
        "gold_select": "select players.first_name, players.birthyear, players.bithday",
        "select_candidates": [
            "select players.first_name, players.bithday",
            "select players.first_name, players.last_name",
            "select players.first_name, players.last_name, players.bithday",
            "select players.first_name, players.birthyear"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "players",
        "table_candidates": [
            "players"
        ],
        "align_scores": [
            0.9923719167709351,
            0.0001744568144204095,
            0.00022804352920502424,
            0.00014767276297789067,
            0.0003907005302608013,
            6.578636384801939e-05,
            0.6056287884712219,
            0.00011139923299197108
        ],
        "align_select": "select players.first_name, players.bithday",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the first name and country code of the oldest player.",
        "gold_select": "select players.first_name, players.country_code",
        "select_candidates": [
            "select players.first_name, players.country_code",
            "select players.player_id, players.first_name, players.country_code",
            "select players.first_name, players.country_code, players.player_id",
            "select players.first_name, players.last_name, players.country_code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "players",
        "table_candidates": [
            "players"
        ],
        "align_scores": [
            0.994071900844574,
            8.050086762523279e-05,
            0.00017776904860511422,
            7.865038787713274e-05,
            0.00014389415446203202,
            6.239024514798075e-05,
            0.00039326580008491874,
            7.545449625467882e-05
        ],
        "align_select": "select players.first_name, players.country_code",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What is the first name and country code of the oldest player?",
        "gold_select": "select players.first_name, players.country_code",
        "select_candidates": [
            "select players.first_name, players.country_code",
            "select players.player_id, players.first_name, players.country_code",
            "select players.first_name, players.country_code, players.player_id",
            "select players.first_name, players.last_name, players.country_code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "players",
        "table_candidates": [
            "players"
        ],
        "align_scores": [
            0.9948209524154663,
            8.24480812298134e-05,
            0.00018639079644344747,
            8.332646393682808e-05,
            0.0001414391299476847,
            6.45388281554915e-05,
            0.00039933720836415887,
            8.031177276279777e-05
        ],
        "align_select": "select players.first_name, players.country_code",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "List the first and last name of all players in the order of birth date.",
        "gold_select": "select players.first_name, players.last_name",
        "select_candidates": [
            "select players.first_name, players.last_name",
            "select players.first_name, players.last_name, players.bithday",
            "select players.first_name, players.last_name, players.birthyear",
            "select players.first_name, players.last_name (Date, Last)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "players",
        "table_candidates": [
            "players"
        ],
        "align_scores": [
            0.9942867159843445,
            0.9942867159843445,
            0.00028064625803381205,
            0.00028064625803381205,
            0.00019778666319325566,
            0.00019778666319325566,
            0.000437383190728724,
            0.000437383190728724
        ],
        "align_select": "select players.first_name, players.last_name",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "What are the full names of all players, sorted by birth date?",
        "gold_select": "select players.first_name, players.last_name",
        "select_candidates": [
            "select players.first_name, players.last_name",
            "select players.first_name, players.last_name, players.birthyear",
            "select players.first_name, players.last_name (ORDER BY",
            "select players.first_name, players.last_name, players.bithday"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "players",
        "table_candidates": [
            "players"
        ],
        "align_scores": [
            0.9941303133964539,
            0.9941303133964539,
            0.00024792426847852767,
            0.00024792426847852767,
            0.00595741905272007,
            0.00595741905272007,
            0.0015992732951417565,
            0.0015992732951417565
        ],
        "align_select": "select players.first_name, players.last_name",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "List the first and last name of all players who are left / L hand in the order of birth date.",
        "gold_select": "select players.first_name, players.last_name",
        "select_candidates": [
            "select players.first_name, players.last_name",
            "select players.first_name, players.last_name, players.is_right_handed",
            "select players.first_name, players.last_name (Date, Last)",
            "select players.first_name, players.last_name in players.is_right_handed"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY",
            "SELECT-FROM-UNION-SELECT-FROM-WHERE-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "players",
        "table_candidates": [
            "players"
        ],
        "align_scores": [
            0.991958498954773,
            0.00011821597581729293,
            0.0001254573289770633,
            6.89538283040747e-05,
            0.0003840624412987381,
            8.887601143214852e-05,
            0.0001923874078784138,
            9.769536700332537e-05
        ],
        "align_select": "select players.first_name, players.last_name",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY"
    },
    {
        "question": "What are the full names of all left handed players, in order of birth date?",
        "gold_select": "select players.first_name, players.last_name",
        "select_candidates": [
            "select players.first_name, players.last_name",
            "select players.first_name, players.last_name, players.is_right_handed",
            "select players.first_name, players.last_name (Date)",
            "select players.first_name, players.last_name (Order BY"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY",
            "SELECT-FROM-WHERE-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "players",
        "table_candidates": [
            "players"
        ],
        "align_scores": [
            0.9946016073226929,
            0.9946016073226929,
            0.00012629860430024564,
            0.00012629860430024564,
            0.0006831447826698422,
            0.0006831447826698422,
            0.023282136768102646,
            0.023282136768102646
        ],
        "align_select": "select players.first_name, players.last_name",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY"
    },
    {
        "question": "How many different winners both participated in the WTA Championships and were left handed?",
        "gold_select": "select count(distinct matches.winner_name)",
        "select_candidates": [
            "select count(*)",
            "select count(distinct matches.winner_id)",
            "select count(*), matches.winner_entry",
            "select count(distinct matches.loser_age)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "matches",
        "table_candidates": [
            "matches",
            "matches rankings",
            "players matches"
        ],
        "align_scores": [
            0.9866130948066711,
            0.7868349552154541,
            0.9052455425262451,
            0.016437362879514694,
            0.0005377287743613124,
            0.0025109155103564262,
            0.000463263742858544,
            0.0001525009865872562
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the number of left handed winners who participated in the WTA Championships.",
        "gold_select": "select count(distinct matches.winner_name)",
        "select_candidates": [
            "select count(*)",
            "select count(distinct matches.winner_entry)",
            "select count(distinct matches.loser_age)",
            "select count(distinct matches.is_winner_right_handed)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "matches",
        "table_candidates": [
            "matches",
            "matches rankings",
            "rankings"
        ],
        "align_scores": [
            0.981842041015625,
            0.000777689041569829,
            0.013932560570538044,
            0.00010755521361716092,
            0.00034461129689589143,
            9.511703683529049e-05,
            0.00040012900717556477,
            0.00010342153836973011
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the first name, country code and birth date of the winner who has the highest rank points in all matches.",
        "gold_select": "select players.first_name, players.country_code, players.birthyear, players.bithday",
        "select_candidates": [
            "select players.first_name, players.country_code, players.bithday",
            "select players.first_name, players.last_name, players.country_code",
            "select players.first_name, players.bithday, players.country_code",
            "select players.first_name, players.birthyear, players.bithday"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "players matches",
        "table_candidates": [
            "players matches",
            "players matches rankings"
        ],
        "align_scores": [
            0.9567810893058777,
            0.0010974464239552617,
            0.008530599065124989,
            0.00017576533718965948,
            0.9626463651657104,
            0.001495154807344079,
            0.0005811857990920544,
            0.0001185379151138477
        ],
        "align_select": "select players.first_name, players.country_code, players.bithday",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What is the first name, country code, and birth date of the player with the most winner rank points across all matches?",
        "gold_select": "select players.first_name, players.country_code, players.birthyear, players.bithday",
        "select_candidates": [
            "select players.first_name, players.country_code, players.bithday",
            "select players.first_name, players.last_name, players.country_code, players.bithday",
            "select players.first_name, players.country_code, players.birthyear",
            "select players.first_name, players.birthyear, players.bithday"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "players matches",
        "table_candidates": [
            "players matches"
        ],
        "align_scores": [
            0.9854869842529297,
            0.00019173984765075147,
            0.023887217044830322,
            0.00016446200606878847,
            0.980861485004425,
            0.0001699273125268519,
            0.00041963066905736923,
            0.00012194204464321956
        ],
        "align_select": "select players.first_name, players.country_code, players.bithday",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "List the first and last name of all players who are left / L hand in the order of birth date.",
        "gold_select": "select players.first_name, players.last_name",
        "select_candidates": [
            "select players.first_name, players.last_name",
            "select players.first_name, players.last_name (Date, Last)",
            "select players.first_name, players.last_name, players.is_right_handed",
            "select players.first_name, players.last_name, players.birth_date"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY",
            "SELECT-FROM-UNION-SELECT-FROM-WHERE-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "players",
        "table_candidates": [
            "players"
        ],
        "align_scores": [
            0.991958498954773,
            0.00011821597581729293,
            0.0003840624412987381,
            8.887601143214852e-05,
            0.0001254573289770633,
            6.89538283040747e-05,
            0.00018736315541900694,
            6.689879228360951e-05
        ],
        "align_select": "select players.first_name, players.last_name",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY"
    },
    {
        "question": "What are the full names of all left handed players, in order of birth date?",
        "gold_select": "select players.first_name, players.last_name",
        "select_candidates": [
            "select players.first_name, players.last_name",
            "select players.first_name, players.last_name (Date)",
            "select players.first_name, players.last_name, players.is_right_handed",
            "select players.first_name, players.last_name (players.birth_date)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-WHERE-ORDER BY",
            "SELECT-FROM-WHERE-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "players",
        "table_candidates": [
            "players"
        ],
        "align_scores": [
            0.9946016073226929,
            0.9946016073226929,
            0.0006831447826698422,
            0.0006831447826698422,
            0.00012629860430024564,
            0.00012629860430024564,
            0.004327045753598213,
            0.004327045753598213
        ],
        "align_select": "select players.first_name, players.last_name",
        "align_structure": "SELECT-FROM-WHERE-ORDER BY"
    },
    {
        "question": "Find the total number of tours for each ranking date.",
        "gold_select": "select sum(rankings.tours), rankings.year, rankings.month, rankings.day",
        "select_candidates": [
            "select rankings.ranking, sum(rankings.tours)",
            "select rankings.year, sum(rankings.tours)",
            "select rankings.month, sum(rankings.tours)",
            "select rankings.year3, sum(rankings.tours)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "rankings",
        "table_candidates": [
            "rankings"
        ],
        "align_scores": [
            0.9920175075531006,
            9.706643322715536e-05,
            0.9956907629966736,
            0.00013086099352221936,
            0.9959547519683838,
            0.00011735271982615814,
            0.0011065754806622863,
            0.00016313520609401166
        ],
        "align_select": "select rankings.ranking, sum(rankings.tours)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "How many total tours were there for each ranking date?",
        "gold_select": "select sum(rankings.tours), rankings.year, rankings.month, rankings.day",
        "select_candidates": [
            "select rankings.year, sum(rankings.tours)",
            "select rankings.month, sum(rankings.tours)",
            "select rankings.ranking, sum(rankings.tours)",
            "select rankings.year3, sum(rankings.tours)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "rankings",
        "table_candidates": [
            "rankings"
        ],
        "align_scores": [
            0.9945632815361023,
            0.0001383243507007137,
            0.9956243634223938,
            0.0001249717315658927,
            0.988407552242279,
            0.00013531290460377932,
            0.001220307545736432,
            0.00019008209346793592
        ],
        "align_select": "select rankings.year, sum(rankings.tours)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "How many ships ended up being 'Captured'?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), ship.is_captured",
            "select count(*),",
            "select count(*), ship.location"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "ship",
        "table_candidates": [
            "ship"
        ],
        "align_scores": [
            0.9933013916015625,
            0.002904759254306555,
            0.0003141146444249898,
            0.003232572227716446,
            0.0006735036731697619,
            0.002317270264029503,
            0.00020921177929267287,
            0.0003714428166858852
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the different ids and names of the battles that lost any 'Brig' type shipes?",
        "gold_select": "select distinct battle.id, battle.name",
        "select_candidates": [
            "select distinct battle.id, battle.name",
            "select distinct battle.name, battle.id",
            "select distinct battle.name, battle.date",
            "select unique battle.id, battle.name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "battle ship",
        "table_candidates": [
            "battle ship"
        ],
        "align_scores": [
            0.9802969694137573,
            0.0002427264116704464,
            0.9791715741157532,
            0.00023705099010840058,
            0.00037008197978138924,
            7.768886280246079e-05,
            0.0006231222650967538,
            0.00012197531032143161
        ],
        "align_select": "select distinct battle.id, battle.name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many ships ended up being 'Captured'?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), ship.is_captured",
            "select count(*),",
            "select count(*), ship.lost_in_battle"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "ship",
        "table_candidates": [
            "ship"
        ],
        "align_scores": [
            0.9933013916015625,
            0.002904759254306555,
            0.0003141146444249898,
            0.003232572227716446,
            0.0006735036731697619,
            0.002317270264029503,
            0.0001856009039329365,
            0.000502985727507621
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the semester which most student registered in? Show both the name and the id.",
        "gold_select": "select Semesters.semester_term, Semesters.semester_year, Semesters.semester_id",
        "select_candidates": [
            "select Semesters.semester_term, Semesters.semester_id",
            "select Semesters.semester_year, Semesters.semester_id",
            "select Students.first_name, Students.middle_name, Students.student_id",
            "select Students.first_name, Students.middle_name, Semesters.semester_id"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Semesters Student_Enrolment",
        "table_candidates": [
            "Semesters Students",
            "Semesters Students Student_Enrolment_Courses",
            "Departments Semesters Students",
            "Semesters Student_Enrolment_Courses"
        ],
        "align_scores": [
            0.0021788524463772774,
            6.572987331310287e-05,
            0.00034173927269876003,
            6.967687659198418e-05,
            0.0020600566640496254,
            5.85736743232701e-05,
            0.09596439450979233,
            7.77076929807663e-05
        ],
        "align_select": "select Semesters.semester_term, Semesters.semester_id",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "For each semester, what is the name and id of the one with the most students registered?",
        "gold_select": "select Semesters.semester_term, Semesters.semester_year, Semesters.semester_id",
        "select_candidates": [
            "select Semesters.semester_term, Semesters.semester_id",
            "select Semesters.semester_description, Semesters.semester_id",
            "select Semesters.semester_year, Semesters.semester_id",
            "select Semesters.other_details, Semesters.semester_id"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-UNION-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Semesters Student_Enrolment",
        "table_candidates": [
            "Semesters Students",
            "Courses Semesters Students",
            "Departments Semesters Students",
            "Degree_Programs Semesters Students",
            "Semesters Student_Enrolment_Courses",
            "Semesters Student_Enrolment",
            "Semesters Students Student_Enrolment_Courses"
        ],
        "align_scores": [
            0.0018558201845735312,
            8.819596405373886e-05,
            0.9871079325675964,
            0.0001396270381519571,
            0.0003956121508963406,
            7.825067586963996e-05,
            0.9879371523857117,
            0.00016145770496223122
        ],
        "align_select": "select Semesters.other_details, Semesters.semester_id",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Who is enrolled in a Bachelor degree program? List the first name, middle name, last name.",
        "gold_select": "select distinct Students.first_name, Students.middle_name, Students.last_name",
        "select_candidates": [
            "select Students.first_name, Students.middle_name, Students.last_name",
            "select distinct Students.first_name, Students.middle_name, Students.last_name",
            "select Students.student_id, Students.first_name, Students.middle_name, Students.last_name",
            "select Students.first_name.c3, Students.middle_name, Students.last_name"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Degree_Programs Students Student_Enrolment",
        "table_candidates": [
            "Degree_Programs Students",
            "Departments Degree_Programs Students",
            "Courses Degree_Programs Students",
            "Addresses Degree_Programs Students",
            "Degree_Programs Students Student_Enrolment_Courses",
            "Degree_Programs Students Student_Enrolment"
        ],
        "align_scores": [
            0.986777126789093,
            0.00014054845087230206,
            0.027531510218977928,
            6.963796477066353e-05,
            0.00022958552290219814,
            9.157980821328238e-05,
            0.00024317650240845978,
            7.506093243137002e-05
        ],
        "align_select": "select Students.first_name, Students.middle_name, Students.last_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the first, middle, and last names for everybody enrolled in a Bachelors program?",
        "gold_select": "select distinct Students.first_name, Students.middle_name, Students.last_name",
        "select_candidates": [
            "select Students.first_name, Students.middle_name, Students.last_name",
            "select Students.student_id, Students.first_name, Students.middle_name, Students.last_name",
            "select Students.first_name, Students.middle_name, Students.last_name",
            "select Students.first_name., Students.middle_name, Students.last_name"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Degree_Programs Students Student_Enrolment",
        "table_candidates": [
            "Degree_Programs Students",
            "Departments Degree_Programs Students",
            "Addresses Degree_Programs Students",
            "Courses Degree_Programs Students",
            "Degree_Programs Sections Students",
            "Degree_Programs Students Student_Enrolment",
            "Degree_Programs Students Student_Enrolment_Courses"
        ],
        "align_scores": [
            0.9808099865913391,
            0.00011929730681004003,
            0.00017432561435271055,
            8.177719428204e-05,
            0.9808099865913391,
            0.00011929730681004003,
            0.009363340213894844,
            0.00010620704415487126
        ],
        "align_select": "select Students.first_name, Students.middle_name, Students.last_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Which semesters do not have any student enrolled? List the semester name.",
        "gold_select": "select Semesters.semester_term, Semesters.semester_year",
        "select_candidates": [
            "select Semesters.semester_term",
            "select Semesters.semester_term, Semesters.semester_description",
            "select Semesters.semester_term, Semesters.semester_year",
            "select Semesters.semester_term, Students.student_id"
        ],
        "select_labels": [
            0.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Semesters",
        "table_candidates": [
            "Semesters",
            "Semesters Students",
            "Semesters Student_Enrolment_Courses"
        ],
        "align_scores": [
            0.02043125405907631,
            0.07006300240755081,
            0.0002308625989826396,
            0.00021627661772072315,
            0.00020183692686259747,
            0.0002599620493128896,
            0.00023514569329563528,
            0.0001850571425165981
        ],
        "align_select": "select Semesters.semester_term",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the name of the semester with no students enrolled?",
        "gold_select": "select Semesters.semester_term, Semesters.semester_year",
        "select_candidates": [
            "select Semesters.semester_term",
            "select Semesters.semester_term, Semesters.semester_description",
            "select Semesters.semester_description",
            "select Semesters.semester_term, Semesters.semester_year"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Semesters",
        "table_candidates": [
            "Semesters Students",
            "Semesters Student_Enrolment_Courses",
            "Semesters Student_Enrolment",
            "Semesters Transcripts",
            "Semesters"
        ],
        "align_scores": [
            0.028055576607584953,
            0.2834526300430298,
            0.0002542245201766491,
            0.0006203324883244932,
            0.8974409103393555,
            0.21398738026618958,
            0.000165000616107136,
            0.00019820765010081232
        ],
        "align_select": "select Semesters.semester_description",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show the date and id of the transcript with at least 2 course results.",
        "gold_select": "select Transcripts.transcript_date, Transcripts.transcript_time, Transcript_Contents.transcript_id",
        "select_candidates": [
            "select t12.c5, t12.c0",
            "select t8.c5, Student_Enrolment_Courses.student_course_id",
            "select t12.c3, t12.c0",
            "select t10.c5, Transcript_Contents.student_course_id"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Transcripts Transcript_Contents",
        "table_candidates": [
            "Student_Enrolment_Courses",
            "Transcripts",
            "Student_Enrolment",
            "Students Student_Enrolment_Courses",
            "Transcript_Contents",
            "Transcripts Transcript_Contents",
            "Student_Enrolment_Courses Transcripts"
        ],
        "align_scores": [
            0.00026126354350708425,
            5.492345735547133e-05,
            0.00033491497742943466,
            7.959160575410351e-05,
            0.00022887343948241323,
            5.5698605137877166e-05,
            0.000260044849710539,
            8.189120853785425e-05
        ],
        "align_select": "select t12.c5, t12.c0",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What is the date and id of the transcript with at least 2 courses listed?",
        "gold_select": "select Transcripts.transcript_date, Transcripts.transcript_time, Transcript_Contents.transcript_id",
        "select_candidates": [
            "select t12.c5, t12.c0",
            "select t10.c5, Transcript_Contents.student_course_id",
            "select t12.c3, t12.c0",
            "select t12.c0, t12.c3"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Transcripts Transcript_Contents",
        "table_candidates": [
            "Courses Student_Enrolment_Courses",
            "Courses Student_Enrolment",
            "Courses Transcripts",
            "Courses Sections",
            "Courses Students"
        ],
        "align_scores": [
            0.00023304542992264032,
            6.777684029657394e-05,
            0.0003613749868236482,
            0.00010315306280972436,
            0.00021567284420598298,
            7.325267506530508e-05,
            0.000201403207029216,
            7.358158472925425e-05
        ],
        "align_select": "select t12.c5, t12.c0",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Who is the first student to register? List the first name, middle name and last name.",
        "gold_select": "select Students.first_name, Students.middle_name, Students.last_name",
        "select_candidates": [
            "select Students.first_name, Students.middle_name, Students.last_name",
            "select Students.student_id, Students.first_name, Students.middle_name, Students.last_name",
            "select Students.first_name, Students.middle_name, Students.last_name",
            "select Students.first_name., Students.middle_name, Students.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Students",
        "table_candidates": [
            "Students"
        ],
        "align_scores": [
            0.9893518090248108,
            8.778733172221109e-05,
            0.0003172001743223518,
            8.653957775095478e-05,
            0.9893518090248108,
            8.778733172221109e-05,
            0.04225272312760353,
            0.00012974349374417216
        ],
        "align_select": "select Students.first_name, Students.middle_name, Students.last_name",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What is the first, middle, and last name of the first student to register?",
        "gold_select": "select Students.first_name, Students.middle_name, Students.last_name",
        "select_candidates": [
            "select Students.first_name, Students.middle_name, Students.last_name",
            "select Students.student_id, Students.first_name, Students.middle_name, Students.last_name",
            "select Students.first_name, Students.middle_name, Students.last_name",
            "select Students.first_name., Students.middle_name, Students.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Students",
        "table_candidates": [
            "Students"
        ],
        "align_scores": [
            0.9915536046028137,
            6.869819480925798e-05,
            0.0002769040293060243,
            8.065992005867884e-05,
            0.9915536046028137,
            6.869819480925798e-05,
            0.02071445807814598,
            9.68437161645852e-05
        ],
        "align_select": "select Students.first_name, Students.middle_name, Students.last_name",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "When is the first transcript released? List the date and details.",
        "gold_select": "select Transcripts.transcript_date, Transcripts.transcript_time, Transcripts.other_details",
        "select_candidates": [
            "select t12.c5, t12.c6",
            "select t8.c5, t8.c6",
            "select t12.c9, t12.c3",
            "select t8.c9, Student_Enrolment_Courses.course_id0"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Transcripts",
        "table_candidates": [
            "Transcripts",
            "Courses",
            "Transcript_Contents",
            "Courses Student_Enrolment_Courses",
            "Student_Enrolment_Courses",
            "Addresses Student_Enrolment_Courses"
        ],
        "align_scores": [
            0.003432188183069229,
            6.500201561721042e-05,
            0.0027010105550289154,
            6.559818575624377e-05,
            0.0007780838059261441,
            6.497467984445393e-05,
            0.0004192190826870501,
            8.117614197544754e-05
        ],
        "align_select": "select t12.c5, t12.c6",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What is the earliest date of a transcript release, and what details can you tell me?",
        "gold_select": "select Transcripts.transcript_date, Transcripts.transcript_time, Transcripts.other_details",
        "select_candidates": [
            "select t8.c5, t8.c6",
            "select t12.c5, t12.c6",
            "select t13.c5, t13.c6",
            "select t10.c5, t10.c6"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Transcripts",
        "table_candidates": [
            "Transcripts",
            "Transcript_Contents",
            "Student_Enrolment",
            "Student_Enrolment_Courses"
        ],
        "align_scores": [
            0.0048663136549293995,
            5.8931236708303913e-05,
            0.006982778199017048,
            5.8834990340983495e-05,
            0.007361322641372681,
            5.832986062159762e-05,
            0.006500896532088518,
            5.907070590183139e-05
        ],
        "align_select": "select t8.c5, t8.c6",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What is the last transcript release date?",
        "gold_select": "select Transcripts.transcript_date, Transcripts.transcript_time",
        "select_candidates": [
            "select t12.c5",
            "select t8.c5",
            "select t13.c5",
            "select max(t8.c3)"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Transcripts",
        "table_candidates": [
            "Student_Enrolment_Courses",
            "Transcripts",
            "Student_Enrolment",
            "Transcript_Contents"
        ],
        "align_scores": [
            0.0013199960812926292,
            0.0013660977128893137,
            0.0016206601867452264,
            0.002102840691804886,
            0.001179319922812283,
            0.0011387817794457078,
            0.0002461511758156121,
            0.0010396853322163224
        ],
        "align_select": "select t12.c5",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "When was the last transcript released?",
        "gold_select": "select Transcripts.transcript_date, Transcripts.transcript_time",
        "select_candidates": [
            "select t12.c5",
            "select t8.c5",
            "select t10.c5",
            "select t13.c5"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "Transcripts",
        "table_candidates": [
            "Transcripts",
            "Student_Enrolment_Courses",
            "Transcript_Contents",
            "Student_Enrolment",
            "Transcripts Transcript_Contents"
        ],
        "align_scores": [
            0.0019888870883733034,
            0.001616964815184474,
            0.0031066606752574444,
            0.0017735155997797847,
            0.0023133778013288975,
            0.0018672149162739515,
            0.0018674008315429091,
            0.0015557649312540889
        ],
        "align_select": "select t12.c5",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "Show the date of the transcript which shows the least number of results, also list the id.",
        "gold_select": "select Transcripts.transcript_date, Transcripts.transcript_time, Transcript_Contents.transcript_id",
        "select_candidates": [
            "select t12.c5, t12.c0",
            "select t12.c3, t12.c0",
            "select t10.c5, Transcript_Contents.student_course_id",
            "select t12.c0, t12.c3"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Transcripts Transcript_Contents",
        "table_candidates": [
            "Student_Enrolment_Courses",
            "Transcripts",
            "Transcript_Contents"
        ],
        "align_scores": [
            0.00014627876225858927,
            5.8941805036738515e-05,
            0.00014119184925220907,
            6.190988642629236e-05,
            0.000223712224396877,
            7.199312676675618e-05,
            0.00014727312372997403,
            5.686304939445108e-05
        ],
        "align_select": "select t12.c5, t12.c0",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the date and id of the transcript with the least number of results?",
        "gold_select": "select Transcripts.transcript_date, Transcripts.transcript_time, Transcript_Contents.transcript_id",
        "select_candidates": [
            "select t12.c5, t12.c0",
            "select t12.c3, t12.c0",
            "select t10.c5, Transcript_Contents.student_course_id",
            "select t11.c3, t11.c4"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Transcripts Transcript_Contents",
        "table_candidates": [
            "Transcripts",
            "Student_Enrolment_Courses",
            "Transcripts Transcript_Contents"
        ],
        "align_scores": [
            0.00017189528443850577,
            6.978247984079644e-05,
            0.00017406517872586846,
            7.046798418741673e-05,
            0.00025153812021017075,
            9.269773727282882e-05,
            0.00016945145034696907,
            6.059942825231701e-05
        ],
        "align_select": "select t12.c5, t12.c0",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Find the semester when both Master students and Bachelor students got enrolled in.",
        "gold_select": "select distinct Student_Enrolment.semester_id",
        "select_candidates": [
            "select Semesters.semester_term",
            "select Semesters.semester_term, Degree_Programs.is_bachelor, Degree_Programs.is_master",
            "select Semesters.semester_term, Semesters.semester_year",
            "select Semesters.semester_term, Degree_Programs.is_bachelor"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-GROUP BY-HAVING-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Degree_Programs Student_Enrolment",
        "table_candidates": [
            "Degree_Programs Students",
            "Departments Degree_Programs Students"
        ],
        "align_scores": [
            0.23093749582767487,
            0.00855675246566534,
            0.00028158753411844373,
            0.00028221483808010817,
            0.0002056768862530589,
            0.0004863170615863055,
            0.00022626195277553052,
            0.00023924987181089818
        ],
        "align_select": "select Semesters.semester_term",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "What is the id of the semester that had both Masters and Bachelors students enrolled?",
        "gold_select": "select distinct Student_Enrolment.semester_id",
        "select_candidates": [
            "select Semesters.semester_term",
            "select Semesters.semester_id",
            "select Semesters.semester_term, Degree_Programs.is_bachelor, Degree_Programs.is_master",
            "select Semesters.semester_id, Degree_Programs.is_bachelor, Degree_Programs.is_master"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-GROUP BY-HAVING-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Degree_Programs Student_Enrolment",
        "table_candidates": [
            "Degree_Programs Students",
            "Degree_Programs Semesters Students",
            "Degree_Programs Sections Students",
            "Departments Degree_Programs Semesters Students",
            "Departments Degree_Programs Students",
            "Departments Degree_Programs Sections Students",
            "Addresses Degree_Programs Students",
            "Degree_Programs Student_Enrolment"
        ],
        "align_scores": [
            0.47653937339782715,
            0.013894661329686642,
            0.9945153594017029,
            0.10311560332775116,
            0.0003378039982635528,
            0.0002128632040694356,
            0.0004578866937663406,
            0.00023184154997579753
        ],
        "align_select": "select Semesters.semester_id",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "Who is the first student to register? List the first name, middle name and last name.",
        "gold_select": "select Students.first_name, Students.middle_name, Students.last_name",
        "select_candidates": [
            "select Students.first_name, Students.middle_name, Students.last_name",
            "select Students.student_id, Students.first_name, Students.middle_name, Students.last_name",
            "select Students.first_name, Students.middle_name, Students.last_name",
            "select Students.first_name., Students.middle_name, Students.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Students",
        "table_candidates": [
            "Students"
        ],
        "align_scores": [
            0.9893518090248108,
            8.778733172221109e-05,
            0.0003172001743223518,
            8.653957775095478e-05,
            0.9893518090248108,
            8.778733172221109e-05,
            0.04225272312760353,
            0.00012974349374417216
        ],
        "align_select": "select Students.first_name, Students.middle_name, Students.last_name",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What is the first, middle, and last name of the first student to register?",
        "gold_select": "select Students.first_name, Students.middle_name, Students.last_name",
        "select_candidates": [
            "select Students.first_name, Students.middle_name, Students.last_name",
            "select Students.student_id, Students.first_name, Students.middle_name, Students.last_name",
            "select Students.first_name, Students.middle_name, Students.last_name",
            "select Students.first_name., Students.middle_name, Students.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Students",
        "table_candidates": [
            "Students"
        ],
        "align_scores": [
            0.9915536046028137,
            6.869819480925798e-05,
            0.0002769040293060243,
            8.065992005867884e-05,
            0.9915536046028137,
            6.869819480925798e-05,
            0.02071445807814598,
            9.68437161645852e-05
        ],
        "align_select": "select Students.first_name, Students.middle_name, Students.last_name",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Who is the earliest graduate of the school? List the first name, middle name and last name.",
        "gold_select": "select Students.first_name, Students.middle_name, Students.last_name",
        "select_candidates": [
            "select Students.first_name, Students.middle_name, Students.last_name",
            "select Students.student_id, Students.first_name, Students.middle_name, Students.last_name",
            "select Students.first_name, Students.middle_name, Students.last_name",
            "select Students.first_name.c3, Students.middle_name, Students.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Students",
        "table_candidates": [
            "Students",
            "Degree_Programs Sections Students",
            "Degree_Programs Sections Semesters Students",
            "Students Student_Enrolment"
        ],
        "align_scores": [
            0.9907614588737488,
            8.940763655118644e-05,
            0.0002495856606401503,
            9.536815923638642e-05,
            0.9907614588737488,
            8.940763655118644e-05,
            0.00034524413058534265,
            7.41887852200307e-05
        ],
        "align_select": "select Students.first_name, Students.middle_name, Students.last_name",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What is the first, middle, and last name of the earliest school graduate?",
        "gold_select": "select Students.first_name, Students.middle_name, Students.last_name",
        "select_candidates": [
            "select Students.first_name, Students.middle_name, Students.last_name",
            "select Students.first_name, Students.middle_name, Students.last_name",
            "select Students.student_id, Students.first_name, Students.middle_name, Students.last_name",
            "select Students.first_name., Students.middle_name, Students.last_name"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Students",
        "table_candidates": [
            "Students",
            "Degree_Programs Sections Semesters Students",
            "Degree_Programs Sections Students"
        ],
        "align_scores": [
            0.9546116590499878,
            7.816065772203729e-05,
            0.9546116590499878,
            7.816065772203729e-05,
            0.00025847621145658195,
            9.019253047881648e-05,
            0.019931703805923462,
            0.00011041075049433857
        ],
        "align_select": "select Students.first_name, Students.middle_name, Students.last_name",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Who is the first student to register? List the first name, middle name and last name.",
        "gold_select": "select Students.first_name, Students.middle_name, Students.last_name",
        "select_candidates": [
            "select Students.first_name, Students.middle_name, Students.last_name",
            "select Students.student_id, Students.first_name, Students.middle_name, Students.last_name",
            "select Students.first_name, Students.middle_name, Students.last_name",
            "select Students.first_name., Students.middle_name, Students.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Students",
        "table_candidates": [
            "Students"
        ],
        "align_scores": [
            0.9893518090248108,
            8.778733172221109e-05,
            0.0003172001743223518,
            8.653957775095478e-05,
            0.9893518090248108,
            8.778733172221109e-05,
            0.04225272312760353,
            0.00012974349374417216
        ],
        "align_select": "select Students.first_name, Students.middle_name, Students.last_name",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What is the first, middle, and last name of the first student to register?",
        "gold_select": "select Students.first_name, Students.middle_name, Students.last_name",
        "select_candidates": [
            "select Students.first_name, Students.middle_name, Students.last_name",
            "select Students.student_id, Students.first_name, Students.middle_name, Students.last_name",
            "select Students.first_name, Students.middle_name, Students.last_name",
            "select Students.first_name., Students.middle_name, Students.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Students",
        "table_candidates": [
            "Students"
        ],
        "align_scores": [
            0.9915536046028137,
            6.869819480925798e-05,
            0.0002769040293060243,
            8.065992005867884e-05,
            0.9915536046028137,
            6.869819480925798e-05,
            0.02071445807814598,
            9.68437161645852e-05
        ],
        "align_select": "select Students.first_name, Students.middle_name, Students.last_name",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Who is enrolled in a Bachelor degree program? List the first name, middle name, last name.",
        "gold_select": "select distinct Students.first_name, Students.middle_name, Students.last_name",
        "select_candidates": [
            "select Students.first_name, Students.middle_name, Students.last_name",
            "select distinct Students.first_name, Students.middle_name, Students.last_name",
            "select Students.student_id, Students.first_name, Students.middle_name, Students.last_name",
            "select Students.first_name.c3, Students.middle_name, Students.last_name"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Degree_Programs Students Student_Enrolment",
        "table_candidates": [
            "Degree_Programs Students",
            "Degree_Programs Students Student_Enrolment_Courses",
            "Departments Degree_Programs Students",
            "Courses Degree_Programs Students",
            "Addresses Degree_Programs Students",
            "Degree_Programs Students Student_Enrolment"
        ],
        "align_scores": [
            0.986777126789093,
            0.00014054845087230206,
            0.027531510218977928,
            6.963796477066353e-05,
            0.00022958552290219814,
            9.157980821328238e-05,
            0.00024317650240845978,
            7.506093243137002e-05
        ],
        "align_select": "select Students.first_name, Students.middle_name, Students.last_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the first, middle, and last names for everybody enrolled in a Bachelors program?",
        "gold_select": "select distinct Students.first_name, Students.middle_name, Students.last_name",
        "select_candidates": [
            "select Students.first_name, Students.middle_name, Students.last_name",
            "select Students.student_id, Students.first_name, Students.middle_name, Students.last_name",
            "select Students.first_name, Students.middle_name, Students.last_name",
            "select Students.first_name., Students.middle_name, Students.last_name"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Degree_Programs Students Student_Enrolment",
        "table_candidates": [
            "Degree_Programs Students",
            "Departments Degree_Programs Students",
            "Addresses Degree_Programs Students",
            "Courses Degree_Programs Students",
            "Degree_Programs Sections Students",
            "Degree_Programs Students Student_Enrolment_Courses",
            "Degree_Programs Students Student_Enrolment"
        ],
        "align_scores": [
            0.9808099865913391,
            0.00011929730681004003,
            0.00017432561435271055,
            8.177719428204e-05,
            0.9808099865913391,
            0.00011929730681004003,
            0.009363340213894844,
            0.00010620704415487126
        ],
        "align_select": "select Students.first_name, Students.middle_name, Students.last_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Who is the first student to register? List the first name, middle name and last name.",
        "gold_select": "select Students.first_name, Students.middle_name, Students.last_name",
        "select_candidates": [
            "select Students.first_name, Students.middle_name, Students.last_name",
            "select Students.student_id, Students.first_name, Students.middle_name, Students.last_name",
            "select Students.first_name, Students.middle_name, Students.last_name",
            "select Students.first_name., Students.middle_name, Students.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Students",
        "table_candidates": [
            "Students"
        ],
        "align_scores": [
            0.9893518090248108,
            8.778733172221109e-05,
            0.0003172001743223518,
            8.653957775095478e-05,
            0.9893518090248108,
            8.778733172221109e-05,
            0.04225272312760353,
            0.00012974349374417216
        ],
        "align_select": "select Students.first_name, Students.middle_name, Students.last_name",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What is the first, middle, and last name of the first student to register?",
        "gold_select": "select Students.first_name, Students.middle_name, Students.last_name",
        "select_candidates": [
            "select Students.first_name, Students.middle_name, Students.last_name",
            "select Students.student_id, Students.first_name, Students.middle_name, Students.last_name",
            "select Students.first_name, Students.middle_name, Students.last_name",
            "select Students.first_name., Students.middle_name, Students.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Students",
        "table_candidates": [
            "Students"
        ],
        "align_scores": [
            0.9915536046028137,
            6.869819480925798e-05,
            0.0002769040293060243,
            8.065992005867884e-05,
            0.9915536046028137,
            6.869819480925798e-05,
            0.02071445807814598,
            9.68437161645852e-05
        ],
        "align_select": "select Students.first_name, Students.middle_name, Students.last_name",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Find the semester when both Master students and Bachelor students got enrolled in.",
        "gold_select": "select distinct Student_Enrolment.semester_id",
        "select_candidates": [
            "select Semesters.semester_name",
            "select Semesters.semester_name, Degree_Programs.is_bachelor, Degree_Programs.is_master",
            "select Semesters.semester_name, Semesters.semester_description",
            "select Semesters.semester_name, Degree_Programs.is_bachelor"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-GROUP BY-HAVING-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Degree_Programs Student_Enrolment",
        "table_candidates": [
            "Degree_Programs Students",
            "Departments Degree_Programs Students"
        ],
        "align_scores": [
            0.9899665117263794,
            0.05180245265364647,
            0.0004133777692914009,
            0.00034804074675776064,
            0.000607820984441787,
            0.0006071219104342163,
            0.00039513723459094763,
            0.00035503783146850765
        ],
        "align_select": "select Semesters.semester_name",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "What is the id of the semester that had both Masters and Bachelors students enrolled?",
        "gold_select": "select distinct Student_Enrolment.semester_id",
        "select_candidates": [
            "select Students.current_address_id",
            "select Semesters.semester_name",
            "select Students.student_id",
            "select Semesters.semester_id"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-GROUP BY-HAVING-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Degree_Programs Student_Enrolment",
        "table_candidates": [
            "Degree_Programs Students",
            "Degree_Programs Sections Students",
            "Departments Degree_Programs Sections Students",
            "Degree_Programs Semesters Students",
            "Departments Degree_Programs Students",
            "Courses Degree_Programs Students",
            "Degree_Programs Student_Enrolment_Courses",
            "Departments Degree_Programs Semesters Students"
        ],
        "align_scores": [
            0.0006792587228119373,
            0.0002509268233552575,
            0.699305534362793,
            0.006937625352293253,
            0.0017202097224071622,
            0.0003913787950295955,
            0.9945153594017029,
            0.10311560332775116
        ],
        "align_select": "select Semesters.semester_id",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "Show the date and id of the transcript with at least 2 course results.",
        "gold_select": "select Transcripts.transcript_year, Transcripts.transcript_month, Transcripts.transcript_day, Transcripts.transcript_time, Transcript_Contents.transcript_id",
        "select_candidates": [
            "select t12.c5, t12.c0",
            "select t12.c3, t12.c0",
            "select t10.c5, Transcript_Contents.student_course_id",
            "select t12.c0, t12.c3"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Transcripts Transcript_Contents",
        "table_candidates": [
            "Transcripts",
            "Student_Enrolment_Courses"
        ],
        "align_scores": [
            0.00026126354350708425,
            5.492345735547133e-05,
            0.00022887343948241323,
            5.5698605137877166e-05,
            0.000260044849710539,
            8.189120853785425e-05,
            0.00022611550230067223,
            5.5944110499694943e-05
        ],
        "align_select": "select t12.c5, t12.c0",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What is the date and id of the transcript with at least 2 courses listed?",
        "gold_select": "select Transcripts.transcript_year, Transcripts.transcript_month, Transcripts.transcript_day, Transcripts.transcript_time, Transcript_Contents.transcript_id",
        "select_candidates": [
            "select t10.c5, Transcript_Contents.student_course_id",
            "select t12.c5, t12.c0",
            "select t12.c3, t12.c0",
            "select t12.c0, t12.c3"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Transcripts Transcript_Contents",
        "table_candidates": [
            "Courses Student_Enrolment_Courses",
            "Courses Student_Enrolment",
            "Courses Transcripts",
            "Semesters Student_Enrolment_Courses",
            "Semesters Student_Enrolment",
            "Courses",
            "Courses Transcript_Contents"
        ],
        "align_scores": [
            0.0003613749868236482,
            0.00010315306280972436,
            0.00023304542992264032,
            6.777684029657394e-05,
            0.00021567284420598298,
            7.325267506530508e-05,
            0.000201403207029216,
            7.358158472925425e-05
        ],
        "align_select": "select t10.c5, Transcript_Contents.student_course_id",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Who is the earliest graduate of the school? List the first name, middle name and last name.",
        "gold_select": "select Students.first_name, Students.middle_name, Students.last_name",
        "select_candidates": [
            "select Students.first_name, Students.middle_name, Students.last_name",
            "select Students.student_id, Students.first_name, Students.middle_name, Students.last_name",
            "select Students.first_name, Students.middle_name, Students.last_name",
            "select Students.first_name.c3, Students.middle_name, Students.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Students",
        "table_candidates": [
            "Students Student_Enrolment",
            "Students",
            "Semesters Students Student_Enrolment"
        ],
        "align_scores": [
            0.9907614588737488,
            8.940763655118644e-05,
            0.0002495856606401503,
            9.536815923638642e-05,
            0.9907614588737488,
            8.940763655118644e-05,
            0.00034524413058534265,
            7.41887852200307e-05
        ],
        "align_select": "select Students.first_name, Students.middle_name, Students.last_name",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What is the first, middle, and last name of the earliest school graduate?",
        "gold_select": "select Students.first_name, Students.middle_name, Students.last_name",
        "select_candidates": [
            "select Students.first_name, Students.middle_name, Students.last_name",
            "select Students.first_name, Students.middle_name, Students.last_name",
            "select Students.student_id, Students.first_name, Students.middle_name, Students.last_name",
            "select t6, Students.first_name, Students.middle_name, Students.last_name"
        ],
        "select_labels": [
            1.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Students",
        "table_candidates": [
            "Students Student_Enrolment",
            "Students",
            "Semesters Students Student_Enrolment"
        ],
        "align_scores": [
            0.9546116590499878,
            7.816065772203729e-05,
            0.9546116590499878,
            7.816065772203729e-05,
            0.00025847621145658195,
            9.019253047881648e-05,
            0.00033008254831656814,
            6.277804641285911e-05
        ],
        "align_select": "select Students.first_name, Students.middle_name, Students.last_name",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "When is the first transcript released? List the date and details.",
        "gold_select": "select Transcripts.transcript_year, Transcripts.transcript_month, Transcripts.transcript_day, Transcripts.transcript_time, Transcripts.other_details",
        "select_candidates": [
            "select t8.c5, t8.c6",
            "select t12.c5, t12.c6",
            "select t8.c5, t9.c6",
            "select t8.c5, Student_Enrolment.degree_program_id2"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Transcripts",
        "table_candidates": [
            "Transcripts",
            "Student_Enrolment_Courses",
            "Transcript_Contents",
            "Courses Student_Enrolment_Courses",
            "Semesters Student_Enrolment_Courses",
            "Courses",
            "Semesters Student_Enrolment"
        ],
        "align_scores": [
            0.0027010105550289154,
            6.559818575624377e-05,
            0.003432188183069229,
            6.500201561721042e-05,
            0.0022732701618224382,
            6.582779315067455e-05,
            0.00038689549546688795,
            8.383999374927953e-05
        ],
        "align_select": "select t8.c5, t8.c6",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What is the earliest date of a transcript release, and what details can you tell me?",
        "gold_select": "select Transcripts.transcript_year, Transcripts.transcript_month, Transcripts.transcript_day, Transcripts.transcript_time, Transcripts.other_details",
        "select_candidates": [
            "select t8.c5, t8.c6",
            "select t12.c5, t12.c6",
            "select t13.c5, t13.c6",
            "select t10.c5, t10.c6"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Transcripts",
        "table_candidates": [
            "Transcripts",
            "Student_Enrolment",
            "Student_Enrolment_Courses",
            "Transcript_Contents",
            "Semesters Student_Enrolment",
            "Sections Student_Enrolment"
        ],
        "align_scores": [
            0.0048663136549293995,
            5.8931236708303913e-05,
            0.006982778199017048,
            5.8834990340983495e-05,
            0.007361322641372681,
            5.832986062159762e-05,
            0.006500896532088518,
            5.907070590183139e-05
        ],
        "align_select": "select t8.c5, t8.c6",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What is the last transcript release date?",
        "gold_select": "select Transcripts.transcript_year, Transcripts.transcript_month, Transcripts.transcript_day, Transcripts.transcript_time",
        "select_candidates": [
            "select t8.c5",
            "select t12.c5",
            "select Transcripts.other_details",
            "select t14.c5"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Transcripts",
        "table_candidates": [
            "Transcripts",
            "Student_Enrolment_Courses",
            "Transcript_Contents",
            "Student_Enrolment"
        ],
        "align_scores": [
            0.0016206601867452264,
            0.002102840691804886,
            0.0013199960812926292,
            0.0013660977128893137,
            0.9934797286987305,
            0.014157476834952831,
            0.0011611174559220672,
            0.0010928426636382937
        ],
        "align_select": "select Transcripts.other_details",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "When was the last transcript released?",
        "gold_select": "select Transcripts.transcript_year, Transcripts.transcript_month, Transcripts.transcript_day, Transcripts.transcript_time",
        "select_candidates": [
            "select t8.c5",
            "select Transcripts.other_details",
            "select t10.c5",
            "select t12.c5"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            1.0
        ],
        "gold_table": "Transcripts",
        "table_candidates": [
            "Transcripts",
            "Student_Enrolment_Courses",
            "Transcript_Contents",
            "Student_Enrolment",
            "Sections"
        ],
        "align_scores": [
            0.0031066606752574444,
            0.0017735155997797847,
            0.00877278670668602,
            0.9931627511978149,
            0.0023133778013288975,
            0.0018672149162739515,
            0.0019888870883733034,
            0.001616964815184474
        ],
        "align_select": "select Transcripts.other_details",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Show the date of the transcript which shows the least number of results, also list the id.",
        "gold_select": "select Transcripts.transcript_year, Transcripts.transcript_month, Transcripts.transcript_day, Transcripts.transcript_time, Transcript_Contents.transcript_id",
        "select_candidates": [
            "select t12.c5, t12.c0",
            "select t12.c3, t12.c0",
            "select t10.c5, Transcript_Contents.student_course_id",
            "select t12.c0, t12.c3"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Transcripts Transcript_Contents",
        "table_candidates": [
            "Transcripts",
            "Student_Enrolment_Courses",
            "Transcript_Contents",
            "Semesters Student_Enrolment",
            "Semesters Student_Enrolment_Courses",
            "Transcripts Transcript_Contents"
        ],
        "align_scores": [
            0.00014627876225858927,
            5.8941805036738515e-05,
            0.00014119184925220907,
            6.190988642629236e-05,
            0.000223712224396877,
            7.199312676675618e-05,
            0.00014727312372997403,
            5.686304939445108e-05
        ],
        "align_select": "select t12.c5, t12.c0",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the date and id of the transcript with the least number of results?",
        "gold_select": "select Transcripts.transcript_year, Transcripts.transcript_month, Transcripts.transcript_day, Transcripts.transcript_time, Transcript_Contents.transcript_id",
        "select_candidates": [
            "select t12.c5, t12.c0",
            "select t12.c3, t12.c0",
            "select t10.c5, Transcript_Contents.student_course_id",
            "select t12.c0, t12.c3"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Transcripts Transcript_Contents",
        "table_candidates": [
            "Transcripts",
            "Student_Enrolment_Courses",
            "Sections Students Student_Enrolment_Courses",
            "Sections Students Student_Enrolment",
            "Semesters Student_Enrolment",
            "Transcripts Transcript_Contents",
            "Sections Student_Enrolment"
        ],
        "align_scores": [
            0.00017189528443850577,
            6.978247984079644e-05,
            0.00017406517872586846,
            7.046798418741673e-05,
            0.00025153812021017075,
            9.269773727282882e-05,
            0.00015698384959250689,
            6.402323924703524e-05
        ],
        "align_select": "select t12.c5, t12.c0",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "List all cartoon directed by \"Ben Jones\".",
        "gold_select": "select Cartoon.Title",
        "select_candidates": [
            "select Cartoon.Title",
            "select Cartoon.Title, Cartoon.director_lastname",
            "select Cartoon.Title, Cartoon.director_firstname, Cartoon.director_lastname",
            "select Cartoon.Title, Cartoon.director_firstname"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Cartoon",
        "table_candidates": [
            "Cartoon"
        ],
        "align_scores": [
            0.9943062663078308,
            0.00010172252950724214,
            0.0001667917094891891,
            6.295189814409241e-05,
            0.0001301022566622123,
            7.274957897607237e-05,
            0.0001672068319749087,
            6.70075896778144e-05
        ],
        "align_select": "select Cartoon.Title",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of all cartoons directed by Ben Jones?",
        "gold_select": "select Cartoon.Title",
        "select_candidates": [
            "select Cartoon.Title",
            "select Cartoon.Title, Cartoon.director_firstname, Cartoon.director_lastname",
            "select Cartoon.Title, Cartoon.director_lastname",
            "select Cartoon.Title, Cartoon.director_firstname"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Cartoon",
        "table_candidates": [
            "Cartoon"
        ],
        "align_scores": [
            0.9936460256576538,
            0.0001680139102973044,
            0.00024295308685395867,
            7.134114275686443e-05,
            0.0001836459996411577,
            6.313971971394494e-05,
            0.0001824735663831234,
            6.326864240691066e-05
        ],
        "align_select": "select Cartoon.Title",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "How many cartoons were written by \"Joseph Kuhr\"?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Cartoon.id",
            "select count(*), Cartoon.Title",
            "select count(*), Cartoon.writer_firstname"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Cartoon",
        "table_candidates": [
            "Cartoon",
            "TV_series Cartoon"
        ],
        "align_scores": [
            0.9933307766914368,
            0.00012517865980044007,
            0.00028623611433431506,
            6.700509402435273e-05,
            0.00025870694662444293,
            6.813623622292653e-05,
            0.0003366750606801361,
            6.940724415471777e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the number of cartoones written by Joseph Kuhr?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Cartoon.id",
            "select count(*), Cartoon.Title",
            "select count(*), Cartoon.writer_firstname"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Cartoon",
        "table_candidates": [
            "Cartoon"
        ],
        "align_scores": [
            0.9892503023147583,
            0.0003021026204805821,
            0.00025901402113959193,
            0.0001740011211950332,
            0.00024879994452930987,
            0.0006547386874444783,
            0.0002571773075032979,
            0.0009433513623662293
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "list all cartoon titles and their directors ordered by their air date",
        "gold_select": "select Cartoon.Title, Cartoon.director_firstname, Cartoon.director_lastname",
        "select_candidates": [
            "select Cartoon.Title, Cartoon.director_firstname",
            "select Cartoon.Title, Cartoon.director_firstname, Cartoon.director_lastname",
            "select Cartoon.Title, Cartoon.director_lastname",
            "select Cartoon.Title, Cartoon.director_firstname, Cartoon.director_lastname, Cartoon.air_day"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "Cartoon",
        "table_candidates": [
            "Cartoon"
        ],
        "align_scores": [
            0.6855459213256836,
            0.6855459213256836,
            0.9855585098266602,
            0.9855585098266602,
            0.9385557770729065,
            0.9385557770729065,
            0.00042256066808477044,
            0.00042256066808477044
        ],
        "align_select": "select Cartoon.Title, Cartoon.director_firstname, Cartoon.director_lastname",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "What is the name and directors of all the cartoons that are ordered by air date?",
        "gold_select": "select Cartoon.Title, Cartoon.director_firstname, Cartoon.director_lastname",
        "select_candidates": [
            "select Cartoon.Title, Cartoon.director_lastname",
            "select Cartoon.Title, Cartoon.director_firstname, Cartoon.director_lastname",
            "select Cartoon.Title, Cartoon.director_firstname",
            "select Cartoon.Title, Cartoon.director_firstname, Cartoon.director_lastname, Cartoon.air_day"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "Cartoon",
        "table_candidates": [
            "Cartoon"
        ],
        "align_scores": [
            0.0007029447588138282,
            0.0007029447588138282,
            0.00040903521585278213,
            0.00040903521585278213,
            0.0006542880437336862,
            0.0006542880437336862,
            0.00014123739674687386,
            0.00014123739674687386
        ],
        "align_select": "select Cartoon.Title, Cartoon.director_lastname",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "List the title of all cartoon directed by \"Ben Jones\" or \"Brandon Vietti\".",
        "gold_select": "select Cartoon.Title",
        "select_candidates": [
            "select Cartoon.Title",
            "select Cartoon.Title, Cartoon.director_lastname",
            "select Cartoon.Title, Cartoon.director_firstname, Cartoon.director_lastname",
            "select Cartoon.Title, Cartoon.director_firstname"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Cartoon",
        "table_candidates": [
            "Cartoon"
        ],
        "align_scores": [
            0.9806109666824341,
            0.0002984514576382935,
            0.00016307209443766624,
            7.243881555041298e-05,
            0.00017214262334164232,
            9.116453293245286e-05,
            0.00015104511112440377,
            7.827133231330663e-05
        ],
        "align_select": "select Cartoon.Title",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the titles of all cartoons directed by Ben Jones or Brandon Vietti?",
        "gold_select": "select Cartoon.Title",
        "select_candidates": [
            "select Cartoon.Title",
            "select Cartoon.Title, Cartoon.director_lastname",
            "select Cartoon.Title, Cartoon.director_firstname, Cartoon.director_lastname",
            "select Cartoon.Title, Cartoon.director_firstname"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Cartoon",
        "table_candidates": [
            "Cartoon"
        ],
        "align_scores": [
            0.9900957345962524,
            0.0008301984635181725,
            0.00017883910913951695,
            8.052158955251798e-05,
            0.00020181112631689757,
            9.683393000159413e-05,
            0.00018036150140687823,
            8.355585305253044e-05
        ],
        "align_select": "select Cartoon.Title",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the air date of TV series with Episode \"A Love of a Lifetime\"?",
        "gold_select": "select TV_series.air_month, TV_series.air_day, TV_series.air_year",
        "select_candidates": [
            "select TV_series.air_day",
            "select TV_series.id, TV_series.air_day",
            "select TV_series.id, TV_series.air_month, TV_series.air_day",
            "select TV_series.air_day, TV_series.air_month"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_series",
        "table_candidates": [
            "TV_series"
        ],
        "align_scores": [
            0.9952292442321777,
            7.81450726208277e-05,
            0.00015846823225729167,
            6.308026058832183e-05,
            0.00015105778584256768,
            6.573557766387239e-05,
            0.00030641452758572996,
            7.002292113611475e-05
        ],
        "align_select": "select TV_series.air_day",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "When did the episode \"A Love of a Lifetime\" air?",
        "gold_select": "select TV_series.air_month, TV_series.air_day, TV_series.air_year",
        "select_candidates": [
            "select TV_series.air_day",
            "select TV_series.air_day, TV_series.air_month",
            "select TV_series.air_day, TV_series.air_year",
            "select TV_series.id, TV_series.air_month"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_series",
        "table_candidates": [
            "TV_series"
        ],
        "align_scores": [
            0.9905057549476624,
            8.829761645756662e-05,
            0.0005938767571933568,
            6.965781358303502e-05,
            0.0004343492619227618,
            6.923866749275476e-05,
            0.0001511684531578794,
            6.524719356093556e-05
        ],
        "align_select": "select TV_series.air_day",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the number of cartoons directed by each of the listed directors.",
        "gold_select": "select count(*), Cartoon.director_firstname, Cartoon.director_lastname",
        "select_candidates": [
            "select Cartoon.director_firstname, Cartoon.director_lastname, count(*)",
            "select Cartoon.director_firstname, Cartoon.director_lastname",
            "select count(*), Cartoon.director_firstname, Cartoon.director_lastname",
            "select Cartoon.id, Cartoon.director_firstname, Cartoon.director_lastname"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Cartoon",
        "table_candidates": [
            "Cartoon"
        ],
        "align_scores": [
            0.994874894618988,
            0.00012195018643978983,
            0.032624226063489914,
            0.00011709653335856274,
            0.9937519431114197,
            9.730571764521301e-05,
            0.0001752469252096489,
            0.00011533586075529456
        ],
        "align_select": "select Cartoon.director_firstname, Cartoon.director_lastname, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "How many cartoons did each director create?",
        "gold_select": "select count(*), Cartoon.director_firstname, Cartoon.director_lastname",
        "select_candidates": [
            "select Cartoon.director_firstname, Cartoon.director_lastname",
            "select Cartoon.director_firstname, Cartoon.director_lastname, count(*)",
            "select Cartoon.id, Cartoon.director_firstname, Cartoon.director_lastname",
            "select Cartoon.director_lastname, count(*)"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Cartoon",
        "table_candidates": [
            "Cartoon"
        ],
        "align_scores": [
            0.6002297401428223,
            0.0009135215659625828,
            0.9948379397392273,
            0.0001187877423944883,
            0.00037661867099814117,
            0.00014829846622888,
            0.9823165535926819,
            0.0002184427430620417
        ],
        "align_select": "select Cartoon.director_firstname, Cartoon.director_lastname, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "Find the production code and channel of the most recently aired cartoon.",
        "gold_select": "select Cartoon.Production_code, Cartoon.Channel",
        "select_candidates": [
            "select Cartoon.Production_code, Cartoon.Channel",
            "select max(Cartoon.Production_code), max(Cartoon.Channel)",
            "select Cartoon.Production_code, Cartoon.Channel, Cartoon.director_lastname",
            "select Cartoon.Production_code.c10, Cartoon.Production_code"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Cartoon",
        "table_candidates": [
            "Cartoon"
        ],
        "align_scores": [
            0.9862500429153442,
            8.379379141842946e-05,
            0.0005351042491383851,
            9.50794928940013e-05,
            0.0006843425217084587,
            7.126668788259849e-05,
            0.0003499781887512654,
            8.975488162832335e-05
        ],
        "align_select": "select Cartoon.Production_code, Cartoon.Channel",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What is the produdction code and channel of the most recent cartoon?",
        "gold_select": "select Cartoon.Production_code, Cartoon.Channel",
        "select_candidates": [
            "select Cartoon.Production_code, Cartoon.Channel",
            "select max(Cartoon.Production_code), max(Cartoon.Channel)",
            "select Cartoon.air_year, Cartoon.Channel",
            "select Cartoon.Production_code, Cartoon.Channel."
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Cartoon",
        "table_candidates": [
            "Cartoon",
            "TV_series Cartoon"
        ],
        "align_scores": [
            0.9531520009040833,
            8.032494952203706e-05,
            0.0005163928726688027,
            5.8774036006070673e-05,
            0.00041105024865828454,
            7.742114394204691e-05,
            0.002304324647411704,
            7.240250124596059e-05
        ],
        "align_select": "select Cartoon.Production_code, Cartoon.Channel",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "which countries' tv channels are playing some cartoon written by Todd Casey?",
        "gold_select": "select TV_Channel.Country",
        "select_candidates": [
            "select TV_Channel.Country",
            "select distinct TV_Channel.Country",
            "select TV_Channel.Country, TV_Channel.Language",
            "select TV_Channel.Country, Cartoon.Channel"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel Cartoon",
            "TV_Channel TV_series Cartoon"
        ],
        "align_scores": [
            0.924819827079773,
            0.8858581185340881,
            0.3015315532684326,
            0.0005110990605317056,
            0.0002140062570106238,
            0.00026002549566328526,
            0.0023816705215722322,
            0.0034158991184085608
        ],
        "align_select": "select TV_Channel.Country",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the countries that have cartoons on TV that were written by Todd Casey?",
        "gold_select": "select TV_Channel.Country",
        "select_candidates": [
            "select TV_Channel.Country",
            "select distinct TV_Channel.Country",
            "select TV_Channel.Country, TV_Channel.Language",
            "select TV_Channel.Country, Cartoon.Channel"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel Cartoon",
            "TV_Channel TV_series Cartoon"
        ],
        "align_scores": [
            0.9245887398719788,
            0.9780800342559814,
            0.23266741633415222,
            0.0017500135581940413,
            0.0003801753045991063,
            0.000491593440528959,
            0.0004673325165640563,
            0.0005812642048113048
        ],
        "align_select": "select TV_Channel.Country",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "which countries' tv channels are not playing any cartoon written by Todd Casey?",
        "gold_select": "select TV_Channel.Country",
        "select_candidates": [
            "select TV_Channel.Country",
            "select TV_Channel.Country, Cartoon.Channel",
            "select distinct TV_Channel.Country",
            "select TV_Channel.Country, TV_Channel.Language"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel Cartoon",
            "TV_Channel TV_series Cartoon"
        ],
        "align_scores": [
            0.9774567484855652,
            0.9842223525047302,
            0.0007735493709333241,
            0.0012199629563838243,
            0.039575543254613876,
            0.018861884251236916,
            0.00021225152886472642,
            0.00026083842385560274
        ],
        "align_select": "select TV_Channel.Country",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the countries that are not playing cartoons written by Todd Casey?",
        "gold_select": "select TV_Channel.Country",
        "select_candidates": [
            "select TV_Channel.Country",
            "select TV_Channel.Country, Cartoon.Title",
            "select TV_Channel.Country, Cartoon.writer_firstname",
            "select TV_Channel.Country, TV_Channel.Language"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel Cartoon",
            "TV_Channel TV_series Cartoon"
        ],
        "align_scores": [
            0.9900947213172913,
            0.9916309714317322,
            0.000192450504982844,
            0.0003358042740728706,
            0.00048153314855881035,
            0.0005638360744342208,
            0.00015226674440782517,
            0.00019296133541502059
        ],
        "align_select": "select TV_Channel.Country",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "Find the series name and country of the tv channel that is playing some cartoons directed by Ben Jones and Michael Chang?",
        "gold_select": "select TV_Channel.series_name, TV_Channel.Country",
        "select_candidates": [
            "select TV_Channel.series_name, TV_Channel.Country",
            "select TV_Channel.series_name, TV_Channel.Country, Cartoon.Channel",
            "select Cartoon.Title, TV_Channel.Country",
            "select TV_Channel.series_name, TV_Channel.Country, TV_Channel.Language"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel Cartoon",
            "TV_Channel TV_series Cartoon"
        ],
        "align_scores": [
            0.0007618737872689962,
            0.0007618737872689962,
            0.00013924702943768352,
            0.00013924702943768352,
            0.0004532375605776906,
            0.0004532375605776906,
            0.00012114224227843806,
            0.00012114224227843806
        ],
        "align_select": "select TV_Channel.series_name, TV_Channel.Country",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "What is the series name and country of all TV channels that are playing cartoons directed by Ben Jones and cartoons directed by Michael Chang?",
        "gold_select": "select TV_Channel.series_name, TV_Channel.Country",
        "select_candidates": [
            "select TV_Channel.series_name, TV_Channel.Country",
            "select Cartoon.Title, TV_Channel.Country",
            "select t 0.c1, TV_Channel.Country",
            "select to.c1, TV_Channel.Country"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel Cartoon",
            "TV_Channel TV_series Cartoon",
            "TV_Channel Cartoon TV_series Cartoon",
            "TV_Channel Cartoon TV_series"
        ],
        "align_scores": [
            0.9783602952957153,
            0.9783602952957153,
            0.06682151556015015,
            0.06682151556015015,
            0.0004032062424812466,
            0.0004032062424812466,
            0.0003257567877881229,
            0.0003257567877881229
        ],
        "align_select": "select TV_Channel.series_name, TV_Channel.Country",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "find the id of tv channels that do not play any cartoon directed by Ben Jones.",
        "gold_select": "select TV_Channel.id",
        "select_candidates": [
            "select TV_Channel.id",
            "select TV_Channel.id, Cartoon.Channel",
            "select TV_Channel.id, TV_Channel.series_name",
            "select TV_Channel.series_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel Cartoon",
            "TV_Channel TV_series Cartoon"
        ],
        "align_scores": [
            0.9765847325325012,
            0.039513543248176575,
            0.0004043450753670186,
            0.00026109471218660474,
            0.00025349209317937493,
            0.00020545069128274918,
            0.3073999881744385,
            0.005377649329602718
        ],
        "align_select": "select TV_Channel.id",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the ids of the TV channels that do not have any cartoons directed by Ben Jones?",
        "gold_select": "select TV_Channel.id",
        "select_candidates": [
            "select TV_Channel.id",
            "select TV_Channel.id, Cartoon.Channel",
            "select TV_Channel.id, Cartoon.director_firstname, Cartoon.director_lastname",
            "select TV_Channel.id, TV_Channel.series_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel Cartoon",
            "TV_Channel TV_series Cartoon"
        ],
        "align_scores": [
            0.9697651267051697,
            0.9697651267051697,
            0.00046186576946638525,
            0.00046186576946638525,
            0.0003611645370256156,
            0.0003611645370256156,
            0.00018627940153237432,
            0.00018627940153237432
        ],
        "align_select": "select TV_Channel.id",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "find the package option of the tv channel that do not have any cartoon directed by Ben Jones.",
        "gold_select": "select TV_Channel.Package_Option",
        "select_candidates": [
            "select TV_Channel.Package_Option",
            "select TV_Channel.Package_Option, Cartoon.director_firstname, Cartoon.director_lastname",
            "select Cartoon.Channel, TV_Channel.Package_Option",
            "select TV_Channel.Package_Option, Cartoon.Channel"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel Cartoon"
        ],
        "align_scores": [
            0.9793640971183777,
            0.9899733066558838,
            0.0002689622051548213,
            0.0002658285084180534,
            0.000315601471811533,
            0.00031560540082864463,
            0.0002502440183889121,
            0.00031377136474475265
        ],
        "align_select": "select TV_Channel.Package_Option",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the package options of all tv channels that are not playing any cartoons directed by Ben Jones?",
        "gold_select": "select TV_Channel.Package_Option",
        "select_candidates": [
            "select TV_Channel.Package_Option",
            "select TV_Channel.Package_Option, Cartoon.director_firstname, Cartoon.director_lastname",
            "select Cartoon.Channel, TV_Channel.Package_Option",
            "select TV_Channel.Package_Option, Cartoon.Channel"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel Cartoon",
            "TV_Channel TV_series Cartoon"
        ],
        "align_scores": [
            0.9715648889541626,
            0.003954954911023378,
            0.00031737651443108916,
            0.00015064408944454044,
            0.0002978343400172889,
            0.00013005291111767292,
            0.000291612115688622,
            0.00011841611558338627
        ],
        "align_select": "select TV_Channel.Package_Option",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "list all cartoon titles and their directors ordered by their air date",
        "gold_select": "select Cartoon.Title, Cartoon.Directed_by",
        "select_candidates": [
            "select Cartoon.Title, Cartoon.Directed_by",
            "select Cartoon.Title, Cartoon.Directed_by, Cartoon.air_day",
            "select Cartoon.Title, Cartoon.Directed_by, Cartoon.air_month",
            "select Cartoon.Title, Cartoon.Directed_by, Cartoon.air_year"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "Cartoon",
        "table_candidates": [
            "Cartoon"
        ],
        "align_scores": [
            0.9953996539115906,
            0.9953996539115906,
            0.0002399248769506812,
            0.0002399248769506812,
            0.0001570154563523829,
            0.0001570154563523829,
            0.00015941941819619387,
            0.00015941941819619387
        ],
        "align_select": "select Cartoon.Title, Cartoon.Directed_by",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "What is the name and directors of all the cartoons that are ordered by air date?",
        "gold_select": "select Cartoon.Title, Cartoon.Directed_by",
        "select_candidates": [
            "select Cartoon.Title, Cartoon.Directed_by",
            "select Cartoon.Title, Cartoon.Directed_by, Cartoon.air_month",
            "select Cartoon.Title, Cartoon.Directed_by, Cartoon.air_year",
            "select Cartoon.Title, Cartoon.Directed_by, Cartoon.air_day"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "Cartoon",
        "table_candidates": [
            "Cartoon"
        ],
        "align_scores": [
            0.0005870850873179734,
            0.0005870850873179734,
            0.000138759525725618,
            0.000138759525725618,
            0.00014945086149964482,
            0.00014945086149964482,
            0.00014412443852052093,
            0.00014412443852052093
        ],
        "align_select": "select Cartoon.Title, Cartoon.Directed_by",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "What is the air date of TV series with Episode \"A Love of a Lifetime\"?",
        "gold_select": "select TV_series.air_month, TV_series.air_day, TV_series.air_year",
        "select_candidates": [
            "select TV_series.air_day",
            "select TV_series.air_day)",
            "select TV_series.air_day.",
            "select TV_series.Episode"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_series",
        "table_candidates": [
            "TV_series"
        ],
        "align_scores": [
            0.9952292442321777,
            7.81450726208277e-05,
            0.005097624380141497,
            7.012207788648084e-05,
            0.003186391666531563,
            6.649307761108503e-05,
            0.001580331940203905,
            6.374106305884197e-05
        ],
        "align_select": "select TV_series.air_day",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "When did the episode \"A Love of a Lifetime\" air?",
        "gold_select": "select TV_series.air_month, TV_series.air_day, TV_series.air_year",
        "select_candidates": [
            "select TV_series.air_day",
            "select TV_series.air_day, TV_series.air_month",
            "select TV_series.air_day, TV_series.air_year",
            "select Cartoon.Written_by, TV_series.air_month"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_series",
        "table_candidates": [
            "TV_series"
        ],
        "align_scores": [
            0.9905057549476624,
            8.829761645756662e-05,
            0.0005938767571933568,
            6.965781358303502e-05,
            0.0004343492619227618,
            6.923866749275476e-05,
            0.00023921611136756837,
            6.703661347273737e-05
        ],
        "align_select": "select TV_series.air_day",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the production code and channel of the most recently aired cartoon.",
        "gold_select": "select Cartoon.Production_code, Cartoon.Channel",
        "select_candidates": [
            "select Cartoon.Production_code, Cartoon.Channel",
            "select max(Cartoon.Production_code), max(Cartoon.Channel)",
            "select Cartoon.Production_code), Cartoon.Channel",
            "select Cartoon.air_day, Cartoon.Channel"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Cartoon",
        "table_candidates": [
            "Cartoon"
        ],
        "align_scores": [
            0.9862500429153442,
            8.379379141842946e-05,
            0.0005351042491383851,
            9.50794928940013e-05,
            0.0037686810828745365,
            7.699287380091846e-05,
            0.0006511586834676564,
            9.004112507682294e-05
        ],
        "align_select": "select Cartoon.Production_code, Cartoon.Channel",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What is the produdction code and channel of the most recent cartoon?",
        "gold_select": "select Cartoon.Production_code, Cartoon.Channel",
        "select_candidates": [
            "select Cartoon.Production_code, Cartoon.Channel",
            "select max(Cartoon.Production_code), max(Cartoon.Channel)",
            "select Cartoon.air_day, Cartoon.Channel",
            "select Cartoon.Production_code), Cartoon.Channel"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Cartoon",
        "table_candidates": [
            "Cartoon",
            "TV_series Cartoon",
            "TV_Channel TV_series Cartoon",
            "TV_Channel Cartoon"
        ],
        "align_scores": [
            0.9531520009040833,
            8.032494952203706e-05,
            0.0005163928726688027,
            5.8774036006070673e-05,
            0.00036649135290645063,
            7.777084829285741e-05,
            0.002072218805551529,
            6.319375097518787e-05
        ],
        "align_select": "select Cartoon.Production_code, Cartoon.Channel",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "List all cartoon directed by \"Ben Jones\".",
        "gold_select": "select Cartoon.Title",
        "select_candidates": [
            "select Cartoon.Title",
            "select Cartoon.Title, Cartoon.director_lastname",
            "select Cartoon.Title, Cartoon.director_firstname, Cartoon.director_lastname",
            "select Cartoon.Title, Cartoon.director_firstname"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Cartoon",
        "table_candidates": [
            "Cartoon"
        ],
        "align_scores": [
            0.9943062663078308,
            0.00010172252950724214,
            0.0001667917094891891,
            6.295189814409241e-05,
            0.0001301022566622123,
            7.274957897607237e-05,
            0.0001672068319749087,
            6.70075896778144e-05
        ],
        "align_select": "select Cartoon.Title",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of all cartoons directed by Ben Jones?",
        "gold_select": "select Cartoon.Title",
        "select_candidates": [
            "select Cartoon.Title",
            "select Cartoon.Title, Cartoon.director_firstname, Cartoon.director_lastname",
            "select Cartoon.Title, Cartoon.director_lastname",
            "select Cartoon.Title, Cartoon.director_firstname"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Cartoon",
        "table_candidates": [
            "Cartoon"
        ],
        "align_scores": [
            0.9936460256576538,
            0.0001680139102973044,
            0.00024295308685395867,
            7.134114275686443e-05,
            0.0001836459996411577,
            6.313971971394494e-05,
            0.0001824735663831234,
            6.326864240691066e-05
        ],
        "align_select": "select Cartoon.Title",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "list all cartoon titles and their directors ordered by their air date",
        "gold_select": "select Cartoon.Title, Cartoon.director_firstname, Cartoon.director_lastname",
        "select_candidates": [
            "select Cartoon.Title, Cartoon.director_lastname",
            "select Cartoon.Title, Cartoon.director_firstname, Cartoon.director_lastname",
            "select Cartoon.Title, Cartoon.director_firstname",
            "select Cartoon.Title, Cartoon.director_firstname, Cartoon.director_lastname, Cartoon.Original_air_date"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "Cartoon",
        "table_candidates": [
            "Cartoon"
        ],
        "align_scores": [
            0.9385557770729065,
            0.9385557770729065,
            0.9855585098266602,
            0.9855585098266602,
            0.6855459213256836,
            0.6855459213256836,
            0.0004536503693088889,
            0.0004536503693088889
        ],
        "align_select": "select Cartoon.Title, Cartoon.director_lastname",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "What is the name and directors of all the cartoons that are ordered by air date?",
        "gold_select": "select Cartoon.Title, Cartoon.director_firstname, Cartoon.director_lastname",
        "select_candidates": [
            "select Cartoon.Title, Cartoon.director_lastname",
            "select Cartoon.Title, Cartoon.director_firstname, Cartoon.director_lastname",
            "select Cartoon.Title, Cartoon.director_firstname",
            "select Cartoon.Title, Cartoon.director_lastname, Cartoon.director_firstname"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "Cartoon",
        "table_candidates": [
            "Cartoon"
        ],
        "align_scores": [
            0.0007029447588138282,
            0.0007029447588138282,
            0.00040903521585278213,
            0.00040903521585278213,
            0.0006542880437336862,
            0.0006542880437336862,
            0.000349070702213794,
            0.000349070702213794
        ],
        "align_select": "select Cartoon.Title, Cartoon.director_lastname",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "List the title of all cartoon directed by \"Ben Jones\" or \"Brandon Vietti\".",
        "gold_select": "select Cartoon.Title",
        "select_candidates": [
            "select Cartoon.Title",
            "select Cartoon.Title, Cartoon.director_firstname, Cartoon.director_lastname",
            "select Cartoon.Title, Cartoon.director_lastname",
            "select Cartoon.Title, Cartoon.director_firstname"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Cartoon",
        "table_candidates": [
            "Cartoon"
        ],
        "align_scores": [
            0.9806109666824341,
            0.0002984514576382935,
            0.00017214262334164232,
            9.116453293245286e-05,
            0.00016307209443766624,
            7.243881555041298e-05,
            0.00015104511112440377,
            7.827133231330663e-05
        ],
        "align_select": "select Cartoon.Title",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the titles of all cartoons directed by Ben Jones or Brandon Vietti?",
        "gold_select": "select Cartoon.Title",
        "select_candidates": [
            "select Cartoon.Title",
            "select Cartoon.Title, Cartoon.director_firstname, Cartoon.director_lastname",
            "select Cartoon.Title, Cartoon.director_lastname",
            "select Cartoon.Title, Cartoon.director_firstname"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Cartoon",
        "table_candidates": [
            "Cartoon"
        ],
        "align_scores": [
            0.9900957345962524,
            0.0008301984635181725,
            0.00020181112631689757,
            9.683393000159413e-05,
            0.00017883910913951695,
            8.052158955251798e-05,
            0.00018036150140687823,
            8.355585305253044e-05
        ],
        "align_select": "select Cartoon.Title",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the number of cartoons directed by each of the listed directors.",
        "gold_select": "select count(*), Cartoon.director_firstname, Cartoon.director_lastname",
        "select_candidates": [
            "select Cartoon.director_firstname, Cartoon.director_lastname, count(*)",
            "select Cartoon.director_firstname, Cartoon.director_lastname",
            "select count(*), Cartoon.director_firstname, Cartoon.director_lastname",
            "select Cartoon.Title, Cartoon.director_lastname, count(*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Cartoon",
        "table_candidates": [
            "Cartoon"
        ],
        "align_scores": [
            0.994874894618988,
            0.00012195018643978983,
            0.032624226063489914,
            0.00011709653335856274,
            0.9937519431114197,
            9.730571764521301e-05,
            0.00041403755312785506,
            0.00017687816580291837
        ],
        "align_select": "select Cartoon.director_firstname, Cartoon.director_lastname, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "How many cartoons did each director create?",
        "gold_select": "select count(*), Cartoon.director_firstname, Cartoon.director_lastname",
        "select_candidates": [
            "select Cartoon.director_firstname, Cartoon.director_lastname, count(*)",
            "select Cartoon.director_firstname, Cartoon.director_lastname",
            "select Cartoon.director_lastname, count(*)",
            "select Cartoon.director_firstname.c2, Cartoon.director_lastname, count(*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Cartoon",
        "table_candidates": [
            "Cartoon"
        ],
        "align_scores": [
            0.9948379397392273,
            0.0001187877423944883,
            0.6002297401428223,
            0.0009135215659625828,
            0.9823165535926819,
            0.0002184427430620417,
            0.00014409406867343932,
            7.522173109464347e-05
        ],
        "align_select": "select Cartoon.director_firstname, Cartoon.director_lastname, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "Find the series name and country of the tv channel that is playing some cartoons directed by Ben Jones and Michael Chang?",
        "gold_select": "select TV_Channel.series_name, TV_Channel.Country",
        "select_candidates": [
            "select TV_Channel.series_name, TV_Channel.Country",
            "select TV_Channel.series_name, TV_Channel.Country, Cartoon.Channel",
            "select TV_Channel.series_name, TV_Channel.Country, TV_series.Weekly_Rank",
            "select TV_Channel.series_name, TV_Channel.Country, TV_Channel.Language"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel Cartoon",
            "TV_Channel TV_series Cartoon",
            "TV_Channel Cartoon TV_series Cartoon"
        ],
        "align_scores": [
            0.0007618737872689962,
            0.0007618737872689962,
            0.00013924702943768352,
            0.00013924702943768352,
            7.310732326004654e-05,
            7.310732326004654e-05,
            0.00012114224227843806,
            0.00012114224227843806
        ],
        "align_select": "select TV_Channel.series_name, TV_Channel.Country",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "What is the series name and country of all TV channels that are playing cartoons directed by Ben Jones and cartoons directed by Michael Chang?",
        "gold_select": "select TV_Channel.series_name, TV_Channel.Country",
        "select_candidates": [
            "select TV_Channel.series_name, TV_Channel.Country",
            "select TV_Channel.series_name, TV_Channel.Country, TV_Channel.Language",
            "select TV_Channel.series_name, TV_Channel.Country, Cartoon.Channel",
            "select TV_Channel.series_name, TV_Channel.Country, TV_series.Weekly_Rank"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel Cartoon",
            "TV_Channel TV_series Cartoon",
            "TV_Channel Cartoon TV_series Cartoon",
            "TV_Channel Cartoon TV_series"
        ],
        "align_scores": [
            0.9783602952957153,
            0.9783602952957153,
            0.00019794172840192914,
            0.00019794172840192914,
            0.0002966413157992065,
            0.0002966413157992065,
            0.00010761644807644188,
            0.00010761644807644188
        ],
        "align_select": "select TV_Channel.series_name, TV_Channel.Country",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "find the id of tv channels that do not play any cartoon directed by Ben Jones.",
        "gold_select": "select TV_Channel.id",
        "select_candidates": [
            "select TV_Channel.id",
            "select TV_Channel.id, Cartoon.Channel",
            "select TV_Channel.id, TV_Channel.series_name",
            "select t0.c, Cartoon.Channel"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel Cartoon",
            "TV_Channel TV_series Cartoon"
        ],
        "align_scores": [
            0.9765847325325012,
            0.039513543248176575,
            0.0004043450753670186,
            0.00026109471218660474,
            0.00025349209317937493,
            0.00020545069128274918,
            0.00022377321147359908,
            0.00016150421288330108
        ],
        "align_select": "select TV_Channel.id",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the ids of the TV channels that do not have any cartoons directed by Ben Jones?",
        "gold_select": "select TV_Channel.id",
        "select_candidates": [
            "select TV_Channel.id",
            "select TV_Channel.id, Cartoon.Channel",
            "select TV_Channel.id, TV_Channel.series_name",
            "select TV_Channel.series_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel Cartoon",
            "TV_Channel TV_series Cartoon"
        ],
        "align_scores": [
            0.9697651267051697,
            0.9697651267051697,
            0.00046186576946638525,
            0.00046186576946638525,
            0.00018627940153237432,
            0.00018627940153237432,
            0.020882705226540565,
            0.020882705226540565
        ],
        "align_select": "select TV_Channel.id",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "find the package option of the tv channel that do not have any cartoon directed by Ben Jones.",
        "gold_select": "select TV_Channel.Package_Option",
        "select_candidates": [
            "select TV_Channel.Package_Option",
            "select TV_Channel.Package_Option, Cartoon.director_firstname, Cartoon.director_lastname",
            "select TV_Channel.Package_Option, Cartoon.Channel",
            "select TV_Channel.Package_Option, TV_Channel.Country, TV_Channel.Language"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel Cartoon"
        ],
        "align_scores": [
            0.9793640971183777,
            0.0031128341797739267,
            0.0002689622051548213,
            0.00014487786393146962,
            0.0002502440183889121,
            0.00014112929056864232,
            0.00014014002226758748,
            0.00011733191058738157
        ],
        "align_select": "select TV_Channel.Package_Option",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the package options of all tv channels that are not playing any cartoons directed by Ben Jones?",
        "gold_select": "select TV_Channel.Package_Option",
        "select_candidates": [
            "select TV_Channel.Package_Option",
            "select TV_Channel.Package_Option, Cartoon.director_firstname, Cartoon.director_lastname",
            "select TV_Channel.Package_Option, Cartoon.Channel",
            "select TV_Channel.Pixel_aspect_ratio_PAR, TV_Channel.Package_Option"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel Cartoon",
            "TV_Channel TV_series Cartoon"
        ],
        "align_scores": [
            0.9715648889541626,
            0.003954954911023378,
            0.00031737651443108916,
            0.00015064408944454044,
            0.000291612115688622,
            0.00011841611558338627,
            0.00024448303156532347,
            0.00014608290803153068
        ],
        "align_select": "select TV_Channel.Package_Option",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "How many cartoons were written by \"Joseph Kuhr\"?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Cartoon.writer_firstname, Cartoon.writer_lastname",
            "select count(*), Cartoon.id",
            "select count(*), Cartoon.Title, Cartoon.Directed_by"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Cartoon",
        "table_candidates": [
            "Cartoon"
        ],
        "align_scores": [
            0.9933307766914368,
            0.00012517865980044007,
            0.00013982073869556189,
            6.473971006926149e-05,
            0.00028623611433431506,
            6.700509402435273e-05,
            0.00010466207459103316,
            5.3703333833254874e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the number of cartoones written by Joseph Kuhr?",
        "gold_select": "select count(*)",
        "select_candidates": [
            "select count(*)",
            "select count(*), Cartoon.writer_firstname, Cartoon.writer_lastname",
            "select count(*), Cartoon.id",
            "select count(*), Cartoon.id, Cartoon.writer_firstname"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Cartoon",
        "table_candidates": [
            "Cartoon"
        ],
        "align_scores": [
            0.9892503023147583,
            0.0003021026204805821,
            0.00012714313925243914,
            0.0003379133704584092,
            0.00025901402113959193,
            0.0001740011211950332,
            0.00012788240564987063,
            8.377501944778487e-05
        ],
        "align_select": "select count(*)",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the air date of TV series with Episode \"A Love of a Lifetime\"?",
        "gold_select": "select TV_series.air_month, TV_series.air_day, TV_series.air_year",
        "select_candidates": [
            "select TV_series.air_day",
            "select TV_series.air_day, TV_series.air_month",
            "select TV_series.air_day, TV_series.air_year",
            "select TV_series.air_day, TV_series.Share"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_series",
        "table_candidates": [
            "TV_series"
        ],
        "align_scores": [
            0.9952292442321777,
            7.81450726208277e-05,
            0.00030641452758572996,
            7.002292113611475e-05,
            0.0002217030560132116,
            6.71387097099796e-05,
            0.00013683800352737308,
            5.993837476125918e-05
        ],
        "align_select": "select TV_series.air_day",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "When did the episode \"A Love of a Lifetime\" air?",
        "gold_select": "select TV_series.air_month, TV_series.air_day, TV_series.air_year",
        "select_candidates": [
            "select TV_series.air_day",
            "select TV_series.air_day, TV_series.air_month",
            "select TV_series.air_day, TV_series.air_month",
            "select TV_series.air_day de, TV_series.air_month"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_series",
        "table_candidates": [
            "TV_series"
        ],
        "align_scores": [
            0.9905057549476624,
            8.829761645756662e-05,
            0.0005938767571933568,
            6.965781358303502e-05,
            0.0005938767571933568,
            6.965781358303502e-05,
            0.00030627139494754374,
            6.189695704961196e-05
        ],
        "align_select": "select TV_series.air_day",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "which countries' tv channels are playing some cartoon written by Todd Casey?",
        "gold_select": "select TV_Channel.Country",
        "select_candidates": [
            "select TV_Channel.Country",
            "select distinct TV_Channel.Country",
            "select TV_Channel.Country, TV_Channel.Language",
            "select TV_Channel.Country, Cartoon.Channel"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel Cartoon",
            "TV_Channel TV_series Cartoon"
        ],
        "align_scores": [
            0.924819827079773,
            0.8858581185340881,
            0.3015315532684326,
            0.0005110990605317056,
            0.0002140062570106238,
            0.00026002549566328526,
            0.0023816705215722322,
            0.0034158991184085608
        ],
        "align_select": "select TV_Channel.Country",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the countries that have cartoons on TV that were written by Todd Casey?",
        "gold_select": "select TV_Channel.Country",
        "select_candidates": [
            "select TV_Channel.Country",
            "select distinct TV_Channel.Country",
            "select TV_Channel.Country, Cartoon.Channel",
            "select TV_Channel.Country, TV_Channel.Language"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel Cartoon",
            "TV_Channel TV_series Cartoon"
        ],
        "align_scores": [
            0.9245887398719788,
            0.002286408329382539,
            0.23266741633415222,
            0.032693326473236084,
            0.0004673325165640563,
            0.000110229266283568,
            0.0003801753045991063,
            0.00011108376202173531
        ],
        "align_select": "select TV_Channel.Country",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "which countries' tv channels are not playing any cartoon written by Todd Casey?",
        "gold_select": "select TV_Channel.Country",
        "select_candidates": [
            "select TV_Channel.Country",
            "select TV_Channel.Country, Cartoon.Channel",
            "select distinct TV_Channel.Country",
            "select TV_Channel.Country, TV_Channel.Language"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel Cartoon",
            "TV_Channel TV_series Cartoon"
        ],
        "align_scores": [
            0.9774567484855652,
            0.9842223525047302,
            0.0007735493709333241,
            0.0012199629563838243,
            0.039575543254613876,
            0.018861884251236916,
            0.00021225152886472642,
            0.00026083842385560274
        ],
        "align_select": "select TV_Channel.Country",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the countries that are not playing cartoons written by Todd Casey?",
        "gold_select": "select TV_Channel.Country",
        "select_candidates": [
            "select TV_Channel.Country",
            "select TV_Channel.Country, Cartoon.writer_firstname, Cartoon.writer_lastname",
            "select TV_Channel.Country, Cartoon.writer_firstname",
            "select TV_Channel.Country, Cartoon.Channel"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel Cartoon",
            "TV_Channel TV_series Cartoon"
        ],
        "align_scores": [
            0.9900947213172913,
            0.9916309714317322,
            0.0005007020081393421,
            0.0005257827579043806,
            0.00048153314855881035,
            0.0005638360744342208,
            0.00027692329604178667,
            0.0003694164624903351
        ],
        "align_select": "select TV_Channel.Country",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "List all cartoon directed by \"Ben Jones\".",
        "gold_select": "select Cartoon.Title",
        "select_candidates": [
            "select Cartoon.Title",
            "select Cartoon.Title, Cartoon.director_lastname",
            "select Cartoon.Title, Cartoon.director_firstname, Cartoon.director_lastname",
            "select Cartoon.Title, Cartoon.director_firstname"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Cartoon",
        "table_candidates": [
            "Cartoon"
        ],
        "align_scores": [
            0.9943062663078308,
            0.00010172252950724214,
            0.0001667917094891891,
            6.295189814409241e-05,
            0.0001301022566622123,
            7.274957897607237e-05,
            0.0001672068319749087,
            6.70075896778144e-05
        ],
        "align_select": "select Cartoon.Title",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of all cartoons directed by Ben Jones?",
        "gold_select": "select Cartoon.Title",
        "select_candidates": [
            "select Cartoon.Title",
            "select Cartoon.Title, Cartoon.director_firstname, Cartoon.director_lastname",
            "select Cartoon.Title, Cartoon.director_lastname",
            "select Cartoon.Title, Cartoon.director_firstname"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Cartoon",
        "table_candidates": [
            "Cartoon"
        ],
        "align_scores": [
            0.9936460256576538,
            0.0001680139102973044,
            0.00024295308685395867,
            7.134114275686443e-05,
            0.0001836459996411577,
            6.313971971394494e-05,
            0.0001824735663831234,
            6.326864240691066e-05
        ],
        "align_select": "select Cartoon.Title",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "list all cartoon titles and their directors ordered by their air date",
        "gold_select": "select Cartoon.Title, Cartoon.director_firstname, Cartoon.director_lastname",
        "select_candidates": [
            "select Cartoon.Title, Cartoon.director_lastname",
            "select Cartoon.Title, Cartoon.director_firstname",
            "select Cartoon.Title, Cartoon.director_firstname, Cartoon.director_lastname",
            "select Cartoon.Title, Cartoon.director_lastname, Cartoon.air_month"
        ],
        "select_labels": [
            0.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "Cartoon",
        "table_candidates": [
            "Cartoon"
        ],
        "align_scores": [
            0.9385557770729065,
            0.9385557770729065,
            0.6855459213256836,
            0.6855459213256836,
            0.9855585098266602,
            0.9855585098266602,
            0.0002131249784724787,
            0.0002131249784724787
        ],
        "align_select": "select Cartoon.Title, Cartoon.director_lastname",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "What is the name and directors of all the cartoons that are ordered by air date?",
        "gold_select": "select Cartoon.Title, Cartoon.director_firstname, Cartoon.director_lastname",
        "select_candidates": [
            "select Cartoon.Title, Cartoon.director_lastname",
            "select Cartoon.Title, Cartoon.director_firstname, Cartoon.director_lastname",
            "select Cartoon.Title, Cartoon.director_firstname",
            "select Cartoon.Title, Cartoon.director_lastname, Cartoon.director_firstname"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "Cartoon",
        "table_candidates": [
            "Cartoon"
        ],
        "align_scores": [
            0.0007029447588138282,
            0.0007029447588138282,
            0.00040903521585278213,
            0.00040903521585278213,
            0.0006542880437336862,
            0.0006542880437336862,
            0.000349070702213794,
            0.000349070702213794
        ],
        "align_select": "select Cartoon.Title, Cartoon.director_lastname",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "List the title of all cartoon directed by \"Ben Jones\" or \"Brandon Vietti\".",
        "gold_select": "select Cartoon.Title",
        "select_candidates": [
            "select Cartoon.Title",
            "select Cartoon.Title, Cartoon.director_firstname, Cartoon.director_lastname",
            "select Cartoon.Title, Cartoon.director_lastname",
            "select Cartoon.Title, Cartoon.director_firstname"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Cartoon",
        "table_candidates": [
            "Cartoon"
        ],
        "align_scores": [
            0.9806109666824341,
            0.0002984514576382935,
            0.00017214262334164232,
            9.116453293245286e-05,
            0.00016307209443766624,
            7.243881555041298e-05,
            0.00015104511112440377,
            7.827133231330663e-05
        ],
        "align_select": "select Cartoon.Title",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the titles of all cartoons directed by Ben Jones or Brandon Vietti?",
        "gold_select": "select Cartoon.Title",
        "select_candidates": [
            "select Cartoon.Title",
            "select Cartoon.Title, Cartoon.director_firstname, Cartoon.director_lastname",
            "select Cartoon.Title, Cartoon.director_lastname",
            "select Cartoon.Title, Cartoon.director_firstname"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Cartoon",
        "table_candidates": [
            "Cartoon"
        ],
        "align_scores": [
            0.9900957345962524,
            0.0008301984635181725,
            0.00020181112631689757,
            9.683393000159413e-05,
            0.00017883910913951695,
            8.052158955251798e-05,
            0.00018036150140687823,
            8.355585305253044e-05
        ],
        "align_select": "select Cartoon.Title",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the air date of TV series with Episode \"A Love of a Lifetime\"?",
        "gold_select": "select TV_series.air_month, TV_series.air_day, TV_series.air_year",
        "select_candidates": [
            "select TV_series.air_day",
            "select TV_series.id, TV_series.air_day",
            "select TV_series.id, TV_series.air_month, TV_series.air_day",
            "select TV_series.air_day, TV_series.air_month"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_series",
        "table_candidates": [
            "TV_series"
        ],
        "align_scores": [
            0.9952292442321777,
            7.81450726208277e-05,
            0.00015846823225729167,
            6.308026058832183e-05,
            0.00015105778584256768,
            6.573557766387239e-05,
            0.00030641452758572996,
            7.002292113611475e-05
        ],
        "align_select": "select TV_series.air_day",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "When did the episode \"A Love of a Lifetime\" air?",
        "gold_select": "select TV_series.air_month, TV_series.air_day, TV_series.air_year",
        "select_candidates": [
            "select TV_series.air_day",
            "select TV_series.air_day, TV_series.air_month",
            "select TV_series.air_day, TV_series.air_year",
            "select Cartoon.director_lastname, TV_series.air_month"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_series",
        "table_candidates": [
            "TV_series"
        ],
        "align_scores": [
            0.9905057549476624,
            8.829761645756662e-05,
            0.0005938767571933568,
            6.965781358303502e-05,
            0.0004343492619227618,
            6.923866749275476e-05,
            0.0002284093206981197,
            7.143911352613941e-05
        ],
        "align_select": "select TV_series.air_day",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Find the number of cartoons directed by each of the listed directors.",
        "gold_select": "select count(*), Cartoon.director_firstname, Cartoon.director_lastname",
        "select_candidates": [
            "select Cartoon.director_firstname, Cartoon.director_lastname, count(*)",
            "select Cartoon.director_firstname, Cartoon.director_lastname",
            "select count(*), Cartoon.director_firstname, Cartoon.director_lastname",
            "select Cartoon.Title, Cartoon.director_lastname, count(*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Cartoon",
        "table_candidates": [
            "Cartoon"
        ],
        "align_scores": [
            0.994874894618988,
            0.00012195018643978983,
            0.032624226063489914,
            0.00011709653335856274,
            0.9937519431114197,
            9.730571764521301e-05,
            0.00041403755312785506,
            0.00017687816580291837
        ],
        "align_select": "select Cartoon.director_firstname, Cartoon.director_lastname, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "How many cartoons did each director create?",
        "gold_select": "select count(*), Cartoon.director_firstname, Cartoon.director_lastname",
        "select_candidates": [
            "select Cartoon.director_firstname, Cartoon.director_lastname, count(*)",
            "select Cartoon.director_firstname, Cartoon.director_lastname",
            "select Cartoon.id, Cartoon.director_firstname, Cartoon.director_lastname",
            "select Cartoon.director_lastname, count(*)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Cartoon",
        "table_candidates": [
            "Cartoon"
        ],
        "align_scores": [
            0.9948379397392273,
            0.0001187877423944883,
            0.6002297401428223,
            0.0009135215659625828,
            0.00037661867099814117,
            0.00014829846622888,
            0.9823165535926819,
            0.0002184427430620417
        ],
        "align_select": "select Cartoon.director_firstname, Cartoon.director_lastname, count(*)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "Find the production code and channel of the most recently aired cartoon.",
        "gold_select": "select Cartoon.Production_code, Cartoon.Channel",
        "select_candidates": [
            "select Cartoon.Production_code, Cartoon.Channel",
            "select Cartoon.air_month, Cartoon.Production_code, Cartoon.Channel",
            "select max(Cartoon.Production_code), max(Cartoon.Channel)",
            "select Cartoon.Production_code, Cartoon.Channel, max(Cartoon.air_month)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Cartoon",
        "table_candidates": [
            "Cartoon",
            "TV_series Cartoon",
            "TV_Channel TV_series Cartoon"
        ],
        "align_scores": [
            0.9862500429153442,
            8.379379141842946e-05,
            0.00021359081438276917,
            7.451223791576922e-05,
            0.0005351042491383851,
            9.50794928940013e-05,
            0.00036933092633262277,
            6.358286191243678e-05
        ],
        "align_select": "select Cartoon.Production_code, Cartoon.Channel",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What is the produdction code and channel of the most recent cartoon?",
        "gold_select": "select Cartoon.Production_code, Cartoon.Channel",
        "select_candidates": [
            "select Cartoon.Production_code, Cartoon.Channel",
            "select max(Cartoon.Production_code), max(Cartoon.Channel)",
            "select Cartoon.Channel, Cartoon.Production_code",
            "select max(Cartoon.Production_code), Cartoon.Channel"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Cartoon",
        "table_candidates": [
            "Cartoon",
            "TV_series Cartoon",
            "TV_Channel TV_series Cartoon",
            "TV_Channel Cartoon"
        ],
        "align_scores": [
            0.9531520009040833,
            8.032494952203706e-05,
            0.0005163928726688027,
            5.8774036006070673e-05,
            0.9663825035095215,
            8.409845759160817e-05,
            0.00012785436410922557,
            5.296597009873949e-05
        ],
        "align_select": "select Cartoon.Production_code, Cartoon.Channel",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Find the series name and country of the tv channel that is playing some cartoons directed by Ben Jones and Michael Chang?",
        "gold_select": "select TV_Channel.series_name, TV_Channel.Country",
        "select_candidates": [
            "select TV_Channel.series_name, TV_Channel.Country",
            "select TV_Channel.series_name, TV_Channel.Country, Cartoon.Channel",
            "select TV_Channel.series_name, TV_Channel.Country, TV_Channel.Language",
            "select Cartoon.Title, TV_Channel.Country"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel Cartoon",
            "TV_Channel TV_series Cartoon",
            "TV_Channel TV_Channel Cartoon"
        ],
        "align_scores": [
            0.0007618737872689962,
            0.0007618737872689962,
            0.00013924702943768352,
            0.00013924702943768352,
            0.00012114224227843806,
            0.00012114224227843806,
            0.0004532375605776906,
            0.0004532375605776906
        ],
        "align_select": "select TV_Channel.series_name, TV_Channel.Country",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "What is the series name and country of all TV channels that are playing cartoons directed by Ben Jones and cartoons directed by Michael Chang?",
        "gold_select": "select TV_Channel.series_name, TV_Channel.Country",
        "select_candidates": [
            "select TV_Channel.series_name, TV_Channel.Country",
            "select TV_Channel.series_name, TV_Channel.Country, TV_Channel.Language",
            "select TV_Channel.series_name, TV_Channel.Country, Cartoon.Channel",
            "select TV_Channel.series_name, TV_Channel.Country, TV_Channel.id"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel Cartoon",
            "TV_Channel TV_series Cartoon",
            "TV_Channel Cartoon TV_series Cartoon",
            "TV_Channel Cartoon TV_series"
        ],
        "align_scores": [
            0.9783602952957153,
            0.9783602952957153,
            0.00019794172840192914,
            0.00019794172840192914,
            0.0002966413157992065,
            0.0002966413157992065,
            0.00014578206173609942,
            0.00014578206173609942
        ],
        "align_select": "select TV_Channel.series_name, TV_Channel.Country",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "find the id of tv channels that do not play any cartoon directed by Ben Jones.",
        "gold_select": "select TV_Channel.id",
        "select_candidates": [
            "select TV_Channel.id",
            "select TV_Channel.id, Cartoon.Channel",
            "select TV_Channel.id, TV_Channel.series_name",
            "select TV_Channel.series_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel Cartoon",
            "TV_Channel TV_series Cartoon"
        ],
        "align_scores": [
            0.9765847325325012,
            0.039513543248176575,
            0.0004043450753670186,
            0.00026109471218660474,
            0.00025349209317937493,
            0.00020545069128274918,
            0.3073999881744385,
            0.005377649329602718
        ],
        "align_select": "select TV_Channel.id",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the ids of the TV channels that do not have any cartoons directed by Ben Jones?",
        "gold_select": "select TV_Channel.id",
        "select_candidates": [
            "select TV_Channel.id",
            "select TV_Channel.id, Cartoon.Channel",
            "select TV_Channel.id, TV_Channel.series_name",
            "select TV_Channel.series_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel Cartoon",
            "TV_Channel TV_series Cartoon"
        ],
        "align_scores": [
            0.9697651267051697,
            0.9697651267051697,
            0.00046186576946638525,
            0.00046186576946638525,
            0.00018627940153237432,
            0.00018627940153237432,
            0.020882705226540565,
            0.020882705226540565
        ],
        "align_select": "select TV_Channel.id",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "find the package option of the tv channel that do not have any cartoon directed by Ben Jones.",
        "gold_select": "select TV_Channel.Package_Option",
        "select_candidates": [
            "select TV_Channel.Package_Option",
            "select TV_Channel.Package_Option, Cartoon.director_firstname, Cartoon.director_lastname",
            "select TV_Channel.Package_Option, Cartoon.Channel",
            "select TV_Channel.Pixel_aspect_ratio_PAR, TV_Channel.Package_Option"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel Cartoon"
        ],
        "align_scores": [
            0.9793640971183777,
            0.9899733066558838,
            0.0002689622051548213,
            0.0002658285084180534,
            0.0002502440183889121,
            0.00031377136474475265,
            0.00017405705875717103,
            0.00019052137213293463
        ],
        "align_select": "select TV_Channel.Package_Option",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the package options of all tv channels that are not playing any cartoons directed by Ben Jones?",
        "gold_select": "select TV_Channel.Package_Option",
        "select_candidates": [
            "select TV_Channel.Package_Option",
            "select TV_Channel.Package_Option, Cartoon.director_firstname, Cartoon.director_lastname",
            "select TV_Channel.Pixel_aspect_ratio_PAR, TV_Channel.Package_Option",
            "select TV_Channel.Package_Option, Cartoon.Channel"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "TV_Channel Cartoon",
        "table_candidates": [
            "TV_Channel Cartoon",
            "TV_Channel TV_series Cartoon"
        ],
        "align_scores": [
            0.9715648889541626,
            0.003954954911023378,
            0.00031737651443108916,
            0.00015064408944454044,
            0.00024448303156532347,
            0.00014608290803153068,
            0.000291612115688622,
            0.00011841611558338627
        ],
        "align_select": "select TV_Channel.Package_Option",
        "align_structure": "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of poker players?",
        "gold_select": "select people.first_name, people.last_name",
        "select_candidates": [
            "select people.first_name, people.last_name",
            "select distinct people.first_name, people.last_name",
            "select people.People_ID, people.first_name, people.last_name",
            "select people.first_name, people.last_name, people.Birth_Date"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "poker_player people",
        "table_candidates": [
            "poker_player people"
        ],
        "align_scores": [
            0.9790897369384766,
            0.05575123429298401,
            0.04031912982463837,
            0.00024234790180344135,
            0.00026427791453897953,
            0.00020371677237562835,
            0.0001748603390296921,
            0.00015734127373434603
        ],
        "align_select": "select people.first_name, people.last_name",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "Return the names of all the poker players.",
        "gold_select": "select people.first_name, people.last_name",
        "select_candidates": [
            "select people.first_name, people.last_name",
            "select distinct people.first_name, people.last_name",
            "select people.People_ID, people.first_name, people.last_name",
            "select unique people.first_name, people.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "poker_player people",
        "table_candidates": [
            "poker_player people"
        ],
        "align_scores": [
            0.5217717289924622,
            8.380466897506267e-05,
            0.06952320039272308,
            6.174385634949431e-05,
            0.00022906421509105712,
            7.643346907570958e-05,
            0.0017441704403609037,
            6.134095747256652e-05
        ],
        "align_select": "select people.first_name, people.last_name",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What are the names of poker players whose earnings is higher than 300000?",
        "gold_select": "select people.first_name, people.last_name",
        "select_candidates": [
            "select people.first_name, people.last_name",
            "select people.People_ID, people.first_name, people.last_name",
            "select people.Nationality, people.last_name",
            "select people.first_name, people.last_name, people.People_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "poker_player people",
        "table_candidates": [
            "poker_player people"
        ],
        "align_scores": [
            0.9896541237831116,
            0.00021085409389343113,
            0.00023142367717809975,
            9.543138003209606e-05,
            0.0002189481892855838,
            0.00012194018199807033,
            0.00018586830992717296,
            7.435720908688381e-05
        ],
        "align_select": "select people.first_name, people.last_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Give the names of poker players who have earnings above 300000.",
        "gold_select": "select people.first_name, people.last_name",
        "select_candidates": [
            "select people.first_name, people.last_name",
            "select people.People_ID, people.first_name, people.last_name",
            "select people.Nationality, people.last_name",
            "select people.first_name, people.last_name, people.People_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "poker_player people",
        "table_candidates": [
            "poker_player people"
        ],
        "align_scores": [
            0.9451268911361694,
            0.00020065451099071652,
            0.00023530582257080823,
            9.564493666402996e-05,
            0.000226571733946912,
            0.00011361834913259372,
            0.00017072376795113087,
            7.928526611067355e-05
        ],
        "align_select": "select people.first_name, people.last_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List the names of poker players ordered by the final tables made in ascending order.",
        "gold_select": "select people.first_name, people.last_name",
        "select_candidates": [
            "select people.first_name, people.last_name",
            "select people.People_ID, people.first_name, people.last_name",
            "select people.first_name, people.last_name, people.Birth_Date",
            "select people.first_name, people.last_name, poker_player.Final_Table_Made"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "poker_player people",
        "table_candidates": [
            "poker_player people"
        ],
        "align_scores": [
            0.9809831976890564,
            0.9809831976890564,
            0.0002136340190190822,
            0.0002136340190190822,
            0.00014629244105890393,
            0.00014629244105890393,
            0.0004358565201982856,
            0.0004358565201982856
        ],
        "align_select": "select people.first_name, people.last_name",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "What are the names of poker players, ordered ascending by the number of final tables they have made?",
        "gold_select": "select people.first_name, people.last_name",
        "select_candidates": [
            "select people.first_name, people.last_name",
            "select people.People_ID, people.first_name, people.last_name",
            "select people.first_name, people.last_name, people.Birth_Date",
            "select people.Nationality, people.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "poker_player people",
        "table_candidates": [
            "poker_player people"
        ],
        "align_scores": [
            0.980938196182251,
            0.980938196182251,
            0.00028116043540649116,
            0.00028116043540649116,
            0.00020390779536683112,
            0.00020390779536683112,
            0.0002537484106142074,
            0.0002537484106142074
        ],
        "align_select": "select people.first_name, people.last_name",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "What are the names of poker players in descending order of earnings?",
        "gold_select": "select people.first_name, people.last_name",
        "select_candidates": [
            "select people.first_name, people.last_name",
            "select people.People_ID, people.first_name, people.last_name",
            "select distinct people.first_name, people.last_name",
            "select people.first_name, people.last_name, people.Birth_Date"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "poker_player people",
        "table_candidates": [
            "poker_player people"
        ],
        "align_scores": [
            0.9893410801887512,
            0.9893410801887512,
            0.0002223631163360551,
            0.0002223631163360551,
            0.009938999079167843,
            0.009938999079167843,
            0.00018408744654152542,
            0.00018408744654152542
        ],
        "align_select": "select people.first_name, people.last_name",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "Return the names of poker players sorted by their earnings descending.",
        "gold_select": "select people.first_name, people.last_name",
        "select_candidates": [
            "select people.first_name, people.last_name",
            "select people.People_ID, people.first_name, people.last_name",
            "select distinct people.first_name, people.last_name",
            "select people.first_name, people.last_name, people.People_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "poker_player people",
        "table_candidates": [
            "poker_player people"
        ],
        "align_scores": [
            0.9901650547981262,
            0.9901650547981262,
            0.00023099604004528373,
            0.00023099604004528373,
            0.003140442306175828,
            0.003140442306175828,
            0.00014086670125834644,
            0.00014086670125834644
        ],
        "align_select": "select people.first_name, people.last_name",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "List the names and birth dates of people in ascending alphabetical order of name.",
        "gold_select": "select people.first_name, people.last_name, people.Birth_Date",
        "select_candidates": [
            "select people.first_name, people.last_name, people.Birth_Date",
            "select people.first_name-, people.last_name, people.Birth_Date",
            "select people.last_name, people.first_name, people.Birth_Date",
            "select t2.c2, people.last_name, people.Birth_Date"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "people",
        "table_candidates": [
            "people"
        ],
        "align_scores": [
            0.9876145124435425,
            0.9876145124435425,
            0.0003373639192432165,
            0.0003373639192432165,
            0.9818865060806274,
            0.9818865060806274,
            0.00018445079331286252,
            0.00018445079331286252
        ],
        "align_select": "select people.first_name, people.last_name, people.Birth_Date",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "What are the names and birth dates of people, ordered by their names in alphabetical order?",
        "gold_select": "select people.first_name, people.last_name, people.Birth_Date",
        "select_candidates": [
            "select people.first_name, people.last_name, people.Birth_Date",
            "select people.first_name, people.last_name, people.Birth_Date, people.People_ID",
            "select people.first_name-, people.last_name, people.Birth_Date",
            "select people.first_name, people.last_name, people.Birth_Date, t1.c8"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "people",
        "table_candidates": [
            "people"
        ],
        "align_scores": [
            0.5001781582832336,
            0.5001781582832336,
            0.0001168137023341842,
            0.0001168137023341842,
            0.0002860186796169728,
            0.0002860186796169728,
            0.00011362853547325358,
            0.00011362853547325358
        ],
        "align_select": "select people.first_name, people.last_name, people.Birth_Date",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "Show names of people whose nationality is not \"Russia\".",
        "gold_select": "select people.first_name, people.last_name",
        "select_candidates": [
            "select people.first_name, people.last_name",
            "select people.People_ID, people.first_name, people.last_name",
            "select people.first_name, people.last_name, people.Birth_Date",
            "select people.Nationality, people.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "people",
        "table_candidates": [
            "people"
        ],
        "align_scores": [
            0.9920686483383179,
            8.972775685833767e-05,
            0.000181734241778031,
            6.663889507763088e-05,
            0.00015310489106923342,
            5.856383722857572e-05,
            0.00022865486971568316,
            6.18783087702468e-05
        ],
        "align_select": "select people.first_name, people.last_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of people who are not from Russia?",
        "gold_select": "select people.first_name, people.last_name",
        "select_candidates": [
            "select people.first_name, people.last_name",
            "select people.People_ID, people.first_name, people.last_name",
            "select people.first_name, people.last_name, people.Birth_Date",
            "select people.last_name, people.first_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "people",
        "table_candidates": [
            "people"
        ],
        "align_scores": [
            0.9601190090179443,
            0.00010839362948900089,
            0.00018502346938475966,
            7.242542051244527e-05,
            0.00018249446293339133,
            5.987177064525895e-05,
            0.6919861435890198,
            0.00010471310088178143
        ],
        "align_select": "select people.first_name, people.last_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List the names of people that are not poker players.",
        "gold_select": "select people.first_name, people.last_name",
        "select_candidates": [
            "select people.first_name, people.last_name",
            "select people.People_ID, people.first_name, people.last_name",
            "select distinct people.first_name, people.last_name",
            "select people.first_name, people.last_name, people.Birth_Date"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "people",
        "table_candidates": [
            "people",
            "poker_player people"
        ],
        "align_scores": [
            0.5924100279808044,
            0.00019087811233475804,
            0.00019321206491440535,
            8.230590901803225e-05,
            0.047990817576646805,
            8.599540888099e-05,
            0.00016806554049253464,
            7.016970630502328e-05
        ],
        "align_select": "select people.first_name, people.last_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of people who do not play poker?",
        "gold_select": "select people.first_name, people.last_name",
        "select_candidates": [
            "select people.first_name, people.last_name",
            "select people.People_ID, people.first_name, people.last_name",
            "select people.first_name, people.last_name, people.Birth_Date",
            "select people.Nationality, people.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "people",
        "table_candidates": [
            "poker_player people",
            "people"
        ],
        "align_scores": [
            0.9707578420639038,
            0.9065557718276978,
            0.00023803484509699047,
            0.00020734622376039624,
            0.0001635521766729653,
            0.00013509372365660965,
            0.00019035942386835814,
            0.00016686791786924005
        ],
        "align_select": "select people.first_name, people.last_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List the contestant numbers and names, ordered by contestant name descending.",
        "gold_select": "select CONTESTANTS.contestant_number, CONTESTANTS.first_name, CONTESTANTS.last_name",
        "select_candidates": [
            "select CONTESTANTS.contestant_number, CONTESTANTS.first_name, CONTESTANTS.last_name",
            "select VOTES.contestant_number, CONTESTANTS.first_name, CONTESTANTS.last_name",
            "select CONTESTANTS.contestant_number, CONTESTANTS.first_name, CONTESTANTS.last_name",
            "select CONTESTANTS.contestant_number, CONTESTANTS.first_name, CONTESTANTS.last_name, t1.c3"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "CONTESTANTS",
        "table_candidates": [
            "CONTESTANTS"
        ],
        "align_scores": [
            0.8854461312294006,
            0.8854461312294006,
            0.12986452877521515,
            0.12986452877521515,
            0.8854461312294006,
            0.8854461312294006,
            0.00011444550182204694,
            0.00011444550182204694
        ],
        "align_select": "select CONTESTANTS.contestant_number, CONTESTANTS.first_name, CONTESTANTS.last_name",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "What are the names of the contestants whose names are not 'Jessie Alloway'",
        "gold_select": "select CONTESTANTS.first_name, CONTESTANTS.last_name",
        "select_candidates": [
            "select CONTESTANTS.first_name, CONTESTANTS.last_name",
            "select CONTESTANTS.contestant_number, CONTESTANTS.first_name, CONTESTANTS.last_name",
            "select CONTESTANTS.first_name.c1, CONTESTANTS.last_name",
            "select distinct CONTESTANTS.first_name, CONTESTANTS.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "CONTESTANTS",
        "table_candidates": [
            "CONTESTANTS"
        ],
        "align_scores": [
            0.985016942024231,
            0.00021363157429732382,
            0.00021399746765382588,
            0.00010277818364556879,
            0.00027622029301710427,
            9.340538235846907e-05,
            0.02418794482946396,
            0.0029310514219105244
        ],
        "align_select": "select CONTESTANTS.first_name, CONTESTANTS.last_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the distinct states and create time of all votes?",
        "gold_select": "select distinct VOTES.state, VOTES.created_year, VOTES.created_month, VOTES.created_day, VOTES.created_time",
        "select_candidates": [
            "select distinct VOTES.state, VOTES.created_time",
            "select distinct VOTES.state, distinct VOTES.created_time",
            "select distinct VOTES.state.c2, VOTES.created_time",
            "select distinct VOTES.state, VOTES.created_time, VOTES.vote_id"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "VOTES",
        "table_candidates": [
            "VOTES"
        ],
        "align_scores": [
            0.9939606189727783,
            8.305886149173602e-05,
            0.9935345649719238,
            8.69521900312975e-05,
            0.00032342353370040655,
            7.038684998406097e-05,
            0.00012510395026765764,
            6.702343671349809e-05
        ],
        "align_select": "select distinct VOTES.state, VOTES.created_time",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What are the contestant numbers and names of the contestants who had at least two votes?",
        "gold_select": "select CONTESTANTS.contestant_number, CONTESTANTS.first_name, CONTESTANTS.last_name",
        "select_candidates": [
            "select CONTESTANTS.contestant_number, CONTESTANTS.first_name, CONTESTANTS.last_name",
            "select VOTES.contestant_number, CONTESTANTS.first_name, CONTESTANTS.last_name",
            "select VOTES.state, CONTESTANTS.contestant_number, CONTESTANTS.first_name, CONTESTANTS.last_name",
            "select VOTES.vote_id, CONTESTANTS.first_name, CONTESTANTS.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "CONTESTANTS VOTES",
        "table_candidates": [
            "CONTESTANTS VOTES"
        ],
        "align_scores": [
            0.4117457866668701,
            7.544069376308471e-05,
            0.004862080328166485,
            7.739214197499678e-05,
            0.0005158757558092475,
            6.317380029940978e-05,
            0.00046496858703903854,
            6.292537727858871e-05
        ],
        "align_select": "select CONTESTANTS.contestant_number, CONTESTANTS.first_name, CONTESTANTS.last_name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Of all the contestants who got voted, what is the contestant number and name of the contestant who got least votes?",
        "gold_select": "select CONTESTANTS.contestant_number, CONTESTANTS.first_name, CONTESTANTS.last_name",
        "select_candidates": [
            "select CONTESTANTS.contestant_number, CONTESTANTS.first_name, CONTESTANTS.last_name",
            "select VOTES.contestant_number, CONTESTANTS.first_name, CONTESTANTS.last_name",
            "select VOTES.state, CONTESTANTS.contestant_number, CONTESTANTS.first_name, CONTESTANTS.last_name",
            "select t1.c3, CONTESTANTS.first_name, CONTESTANTS.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "CONTESTANTS VOTES",
        "table_candidates": [
            "CONTESTANTS VOTES"
        ],
        "align_scores": [
            0.9116699695587158,
            0.13097356259822845,
            0.03521436080336571,
            0.0025884828064590693,
            0.000899661099538207,
            0.0003563976497389376,
            0.00031690788455307484,
            0.0003654509491752833
        ],
        "align_select": "select CONTESTANTS.contestant_number, CONTESTANTS.first_name, CONTESTANTS.last_name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What are the create dates, states, and phone numbers of the votes that were for the contestant named 'Tabatha Gehling'?",
        "gold_select": "select VOTES.created_year, VOTES.created_month, VOTES.created_day, VOTES.created_time, VOTES.state, VOTES.phone_number",
        "select_candidates": [
            "select VOTES.created_year, VOTES.state, VOTES.phone_number",
            "select VOTES.created_day, VOTES.state, VOTES.phone_number",
            "select VOTES.created_time, VOTES.state, VOTES.phone_number",
            "select VOTES.created_year, VOTES.created_month, VOTES.phone_number"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "CONTESTANTS VOTES",
        "table_candidates": [
            "CONTESTANTS VOTES"
        ],
        "align_scores": [
            0.7483286261558533,
            0.00012320527457632124,
            0.9807249307632446,
            0.00014547171304002404,
            0.9664500951766968,
            0.00014228714280761778,
            0.0006157625466585159,
            8.408211579080671e-05
        ],
        "align_select": "select VOTES.created_day, VOTES.state, VOTES.phone_number",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List the area codes in which voters voted both for the contestant 'Tabatha Gehling' and the contestant 'Kelly Clauss'.",
        "gold_select": "select AREA_CODE_STATE.area_code",
        "select_candidates": [
            "select VOTES.state",
            "select AREA_CODE_STATE.area_code",
            "select VOTES.vote_id",
            "select AREA_CODE_STATE.state"
        ],
        "select_labels": [
            0.0,
            1.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "AREA_CODE_STATE CONTESTANTS VOTES",
        "table_candidates": [
            "AREA_CODE_STATE CONTESTANTS VOTES",
            "CONTESTANTS VOTES",
            "VOTES"
        ],
        "align_scores": [
            0.47783374786376953,
            0.47783374786376953,
            0.973541259765625,
            0.973541259765625,
            0.048684168606996536,
            0.048684168606996536,
            0.029015041887760162,
            0.029015041887760162
        ],
        "align_select": "select AREA_CODE_STATE.area_code",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "What are the distinct states and create time of all votes?",
        "gold_select": "select distinct VOTES.state, VOTES.created_year, VOTES.created_month, VOTES.created_day, VOTES.created_time",
        "select_candidates": [
            "select distinct VOTES.state, VOTES.created_time",
            "select distinct VOTES.state, distinct VOTES.created_time",
            "select distinct VOTES.state.c2, VOTES.created_time",
            "select distinct VOTES.state, VOTES.vote_id7"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "VOTES",
        "table_candidates": [
            "VOTES"
        ],
        "align_scores": [
            0.9939606189727783,
            8.305886149173602e-05,
            0.9935345649719238,
            8.69521900312975e-05,
            0.00032342353370040655,
            7.038684998406097e-05,
            0.00023101232363842428,
            0.00022456832812167704
        ],
        "align_select": "select distinct VOTES.state, VOTES.created_time",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What are the create dates, states, and phone numbers of the votes that were for the contestant named 'Tabatha Gehling'?",
        "gold_select": "select VOTES.created_year, VOTES.created_month, VOTES.created_day, VOTES.created_time, VOTES.state, VOTES.phone_number",
        "select_candidates": [
            "select VOTES.created_year, VOTES.state, VOTES.phone_number",
            "select VOTES.created_day, VOTES.state, VOTES.phone_number",
            "select VOTES.created_time, VOTES.state, VOTES.phone_number",
            "select VOTES.created_month, VOTES.state, VOTES.phone_number"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "CONTESTANTS VOTES",
        "table_candidates": [
            "CONTESTANTS VOTES"
        ],
        "align_scores": [
            0.7483286261558533,
            0.00012320527457632124,
            0.9807249307632446,
            0.00014547171304002404,
            0.9664500951766968,
            0.00014228714280761778,
            0.6222206354141235,
            0.00011520570842549205
        ],
        "align_select": "select VOTES.created_day, VOTES.state, VOTES.phone_number",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the distinct states and create time of all votes?",
        "gold_select": "select distinct VOTES.state, VOTES.created_date, VOTES.created_time",
        "select_candidates": [
            "select distinct VOTES.state, VOTES.created_time",
            "select distinct VOTES.state, distinct VOTES.created_time",
            "select distinct VOTES.state, VOTES.created_time, VOTES.vote_id",
            "select distinct VOTES.state.c2, VOTES.created_time"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "VOTES",
        "table_candidates": [
            "VOTES"
        ],
        "align_scores": [
            0.9939606189727783,
            8.305886149173602e-05,
            0.9935345649719238,
            8.69521900312975e-05,
            0.00012510395026765764,
            6.702343671349809e-05,
            0.00032342353370040655,
            7.038684998406097e-05
        ],
        "align_select": "select distinct VOTES.state, VOTES.created_time",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What are the create dates, states, and phone numbers of the votes that were for the contestant named 'Tabatha Gehling'?",
        "gold_select": "select VOTES.created_date, VOTES.created_time, VOTES.state, VOTES.phone_number",
        "select_candidates": [
            "select VOTES.created_date, VOTES.state, VOTES.phone_number",
            "select VOTES.created_date, VOTES.state.c1, VOTES.phone_number",
            "select VOTES.created_date, VOTES.state, VOTES.phone_number",
            "select VOTES.created_date, VOTES.state, VOTES.phone_number"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "CONTESTANTS VOTES",
        "table_candidates": [
            "CONTESTANTS VOTES"
        ],
        "align_scores": [
            0.9389801025390625,
            0.00014023050607647747,
            0.0017337541794404387,
            9.878090349957347e-05,
            0.9389801025390625,
            0.00014023050607647747,
            0.9389801025390625,
            0.00014023050607647747
        ],
        "align_select": "select VOTES.created_date, VOTES.state, VOTES.phone_number",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List the contestant numbers and names, ordered by contestant name descending.",
        "gold_select": "select CONTESTANTS.contestant_number, CONTESTANTS.first_name, CONTESTANTS.last_name",
        "select_candidates": [
            "select CONTESTANTS.contestant_number, CONTESTANTS.first_name, CONTESTANTS.last_name",
            "select VOTES.contestant_number, CONTESTANTS.first_name, CONTESTANTS.last_name",
            "select CONTESTANTS.contestant_number, CONTESTANTS.first_name, CONTESTANTS.last_name, t1.c3",
            "select CONTESTANTS.contestant_number, CONTESTANTS.first_name, CONTESTANTS.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "CONTESTANTS",
        "table_candidates": [
            "CONTESTANTS"
        ],
        "align_scores": [
            0.8854461312294006,
            0.8854461312294006,
            0.12986452877521515,
            0.12986452877521515,
            0.00011444550182204694,
            0.00011444550182204694,
            0.8854461312294006,
            0.8854461312294006
        ],
        "align_select": "select CONTESTANTS.contestant_number, CONTESTANTS.first_name, CONTESTANTS.last_name",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "What are the names of the contestants whose names are not 'Jessie Alloway'",
        "gold_select": "select CONTESTANTS.first_name, CONTESTANTS.last_name",
        "select_candidates": [
            "select CONTESTANTS.first_name, CONTESTANTS.last_name",
            "select CONTESTANTS.contestant_number, CONTESTANTS.first_name, CONTESTANTS.last_name",
            "select distinct CONTESTANTS.first_name, CONTESTANTS.last_name",
            "select CONTESTANTS.first_name.c1, CONTESTANTS.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "CONTESTANTS",
        "table_candidates": [
            "CONTESTANTS"
        ],
        "align_scores": [
            0.985016942024231,
            0.00021363157429732382,
            0.00021399746765382588,
            0.00010277818364556879,
            0.02418794482946396,
            0.0029310514219105244,
            0.00027622029301710427,
            9.340538235846907e-05
        ],
        "align_select": "select CONTESTANTS.first_name, CONTESTANTS.last_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the distinct states and create time of all votes?",
        "gold_select": "select distinct VOTES.state, VOTES.created_date, VOTES.created_time",
        "select_candidates": [
            "select distinct VOTES.state, VOTES.created_time",
            "select distinct VOTES.state, distinct VOTES.created_time",
            "select distinct VOTES.state.c2, VOTES.created_time",
            "select distinct VOTES.state, VOTES.created_time, VOTES.vote_id"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "VOTES",
        "table_candidates": [
            "VOTES"
        ],
        "align_scores": [
            0.9939606189727783,
            8.305886149173602e-05,
            0.9935345649719238,
            8.69521900312975e-05,
            0.00032342353370040655,
            7.038684998406097e-05,
            0.00012510395026765764,
            6.702343671349809e-05
        ],
        "align_select": "select distinct VOTES.state, VOTES.created_time",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What are the contestant numbers and names of the contestants who had at least two votes?",
        "gold_select": "select CONTESTANTS.contestant_number, CONTESTANTS.first_name, CONTESTANTS.last_name",
        "select_candidates": [
            "select CONTESTANTS.contestant_number, CONTESTANTS.first_name, CONTESTANTS.last_name",
            "select VOTES.contestant_number, CONTESTANTS.first_name, CONTESTANTS.last_name",
            "select VOTES.state, CONTESTANTS.contestant_number, CONTESTANTS.first_name, CONTESTANTS.last_name",
            "select VOTES.vote_id, CONTESTANTS.first_name, CONTESTANTS.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "CONTESTANTS VOTES",
        "table_candidates": [
            "CONTESTANTS VOTES"
        ],
        "align_scores": [
            0.4117457866668701,
            7.544069376308471e-05,
            0.004862080328166485,
            7.739214197499678e-05,
            0.0005158757558092475,
            6.317380029940978e-05,
            0.00046496858703903854,
            6.292537727858871e-05
        ],
        "align_select": "select CONTESTANTS.contestant_number, CONTESTANTS.first_name, CONTESTANTS.last_name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Of all the contestants who got voted, what is the contestant number and name of the contestant who got least votes?",
        "gold_select": "select CONTESTANTS.contestant_number, CONTESTANTS.first_name, CONTESTANTS.last_name",
        "select_candidates": [
            "select CONTESTANTS.contestant_number, CONTESTANTS.first_name, CONTESTANTS.last_name",
            "select VOTES.contestant_number, CONTESTANTS.first_name, CONTESTANTS.last_name",
            "select VOTES.state, CONTESTANTS.contestant_number, CONTESTANTS.first_name, CONTESTANTS.last_name",
            "select CONTESTANTS.contestant_number, CONTESTANTS.first_name, CONTESTANTS.last_name, t1.c3"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "CONTESTANTS VOTES",
        "table_candidates": [
            "CONTESTANTS VOTES"
        ],
        "align_scores": [
            0.9116699695587158,
            0.13097356259822845,
            0.03521436080336571,
            0.0025884828064590693,
            0.000899661099538207,
            0.0003563976497389376,
            0.00022848902153782547,
            0.00025747809559106827
        ],
        "align_select": "select CONTESTANTS.contestant_number, CONTESTANTS.first_name, CONTESTANTS.last_name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What are the create dates, states, and phone numbers of the votes that were for the contestant named 'Tabatha Gehling'?",
        "gold_select": "select VOTES.created_date, VOTES.created_time, VOTES.state, VOTES.phone_number",
        "select_candidates": [
            "select VOTES.created_date, VOTES.state, VOTES.phone_number",
            "select VOTES.created_date, VOTES.state.c1, VOTES.phone_number",
            "select VOTES.created_date, VOTES.state, VOTES.phone_number",
            "select VOTES.created_date, VOTES.state, VOTES.phone_number"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "CONTESTANTS VOTES",
        "table_candidates": [
            "CONTESTANTS VOTES"
        ],
        "align_scores": [
            0.9389801025390625,
            0.00014023050607647747,
            0.0017337541794404387,
            9.878090349957347e-05,
            0.9389801025390625,
            0.00014023050607647747,
            0.9389801025390625,
            0.00014023050607647747
        ],
        "align_select": "select VOTES.created_date, VOTES.state, VOTES.phone_number",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List the area codes in which voters voted both for the contestant 'Tabatha Gehling' and the contestant 'Kelly Clauss'.",
        "gold_select": "select AREA_CODE_STATE.area_code",
        "select_candidates": [
            "select AREA_CODE_STATE.area_code",
            "select VOTES.state",
            "select VOTES.vote_id",
            "select VOTES.phone_number"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "AREA_CODE_STATE CONTESTANTS VOTES",
        "table_candidates": [
            "AREA_CODE_STATE CONTESTANTS VOTES",
            "CONTESTANTS VOTES",
            "VOTES"
        ],
        "align_scores": [
            0.973541259765625,
            0.973541259765625,
            0.47783374786376953,
            0.47783374786376953,
            0.048684168606996536,
            0.048684168606996536,
            0.9496919512748718,
            0.9496919512748718
        ],
        "align_select": "select AREA_CODE_STATE.area_code",
        "align_structure": "SELECT-FROM-WHERE-INTERSECT-SELECT-FROM-WHERE"
    },
    {
        "question": "List the names of conductors in ascending order of age.",
        "gold_select": "select conductor.first_name, conductor.last_name",
        "select_candidates": [
            "select conductor.first_name, conductor.last_name",
            "select conductor.first_name, conductor.last_name, conductor.birthyear",
            "select conductor.Conductor_ID, conductor.first_name, conductor.last_name",
            "select conductor.first_name, conductor.last_name in conductor.birthyear"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "conductor",
        "table_candidates": [
            "conductor"
        ],
        "align_scores": [
            0.993107259273529,
            0.993107259273529,
            0.0002049961476586759,
            0.0002049961476586759,
            0.00012667274859268218,
            0.00012667274859268218,
            0.0008575193351134658,
            0.0008575193351134658
        ],
        "align_select": "select conductor.first_name, conductor.last_name",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "What are the names of conductors, ordered by age?",
        "gold_select": "select conductor.first_name, conductor.last_name",
        "select_candidates": [
            "select conductor.first_name, conductor.last_name",
            "select conductor.first_name, conductor.last_name, conductor.birthyear",
            "select conductor.Conductor_ID, conductor.first_name, conductor.last_name",
            "select conductor.first_name, conductor.last_name in conductor.birthyear"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "conductor",
        "table_candidates": [
            "conductor"
        ],
        "align_scores": [
            0.9933809041976929,
            0.9933809041976929,
            0.00027511725784279406,
            0.00027511725784279406,
            0.00013303026207722723,
            0.00013303026207722723,
            0.0009721692185848951,
            0.0009721692185848951
        ],
        "align_select": "select conductor.first_name, conductor.last_name",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "What are the names of conductors whose nationalities are not \"USA\"?",
        "gold_select": "select conductor.first_name, conductor.last_name",
        "select_candidates": [
            "select conductor.first_name, conductor.last_name",
            "select conductor.Conductor_ID, conductor.first_name, conductor.last_name",
            "select conductor.first_name, conductor.last_name, conductor.Nationality",
            "select conductor.first_name, conductor.last_name, conductor.birthyear"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor",
        "table_candidates": [
            "conductor"
        ],
        "align_scores": [
            0.9942687749862671,
            0.00011161561997141689,
            0.00016671078628860414,
            7.250724593177438e-05,
            0.0002062200364889577,
            5.825348125654273e-05,
            0.00016681986744515598,
            6.653500895481557e-05
        ],
        "align_select": "select conductor.first_name, conductor.last_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the names of conductors that do not have the nationality \"USA\".",
        "gold_select": "select conductor.first_name, conductor.last_name",
        "select_candidates": [
            "select conductor.first_name, conductor.last_name",
            "select conductor.Conductor_ID, conductor.first_name, conductor.last_name",
            "select conductor.first_name, conductor.last_name, conductor.Nationality",
            "select conductor.first_name, conductor.last_name, conductor.birthyear"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor",
        "table_candidates": [
            "conductor"
        ],
        "align_scores": [
            0.9921342134475708,
            9.543466148898005e-05,
            0.00015239804633893073,
            6.848174234619364e-05,
            0.00018727582937572151,
            5.800779035780579e-05,
            0.00016667041927576065,
            5.923423668718897e-05
        ],
        "align_select": "select conductor.first_name, conductor.last_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List names of conductors in descending order of years of work.",
        "gold_select": "select conductor.first_name, conductor.last_name",
        "select_candidates": [
            "select conductor.first_name, conductor.last_name",
            "select conductor.Conductor_ID, conductor.first_name, conductor.last_name",
            "select conductor.first_name, conductor.last_name, conductor.year_start_to_work",
            "select conductor.first_name, conductor.last_name, conductor.birthyear"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "conductor",
        "table_candidates": [
            "conductor"
        ],
        "align_scores": [
            0.9921148419380188,
            0.9921148419380188,
            0.00015088387590367347,
            0.00015088387590367347,
            0.00033053880906663835,
            0.00033053880906663835,
            0.00015075560077093542,
            0.00015075560077093542
        ],
        "align_select": "select conductor.first_name, conductor.last_name",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "What are the names of conductors, sorted descending by the number of years they have worked?",
        "gold_select": "select conductor.first_name, conductor.last_name",
        "select_candidates": [
            "select conductor.first_name, conductor.last_name",
            "select conductor.first_name, conductor.last_name, conductor.birthyear",
            "select conductor.Conductor_ID, conductor.first_name, conductor.last_name",
            "select conductor.first_name, conductor.last_name, conductor.year_start_to_work"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "conductor",
        "table_candidates": [
            "conductor"
        ],
        "align_scores": [
            0.9909261465072632,
            0.9909261465072632,
            0.000146053935168311,
            0.000146053935168311,
            0.00017205630138050765,
            0.00017205630138050765,
            0.0002670676913112402,
            0.0002670676913112402
        ],
        "align_select": "select conductor.first_name, conductor.last_name",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "List the name of the conductor with the most years of work.",
        "gold_select": "select conductor.first_name, conductor.last_name",
        "select_candidates": [
            "select conductor.first_name, conductor.last_name",
            "select conductor.Conductor_ID, conductor.first_name, conductor.last_name",
            "select conductor.first_name, conductor.last_name, conductor.birthyear",
            "select conductor.first_name.c1, conductor.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor",
        "table_candidates": [
            "conductor"
        ],
        "align_scores": [
            0.9872757792472839,
            0.9936217665672302,
            0.0002284134243382141,
            0.00024052451772149652,
            0.00024040506104938686,
            0.00033694543526507914,
            0.00033096325933001935,
            0.00029262504540383816
        ],
        "align_select": "select conductor.first_name, conductor.last_name",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What is the name of the conductor who has worked the greatest number of years?",
        "gold_select": "select conductor.first_name, conductor.last_name",
        "select_candidates": [
            "select conductor.first_name, conductor.last_name",
            "select conductor.Conductor_ID, conductor.first_name, conductor.last_name",
            "select conductor.first_name, conductor.last_name, conductor.birthyear",
            "select conductor.first_name.c1, conductor.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor",
        "table_candidates": [
            "conductor",
            "conductor orchestra performance"
        ],
        "align_scores": [
            0.9594873785972595,
            0.9916154742240906,
            0.00026136619271710515,
            0.00032356358133256435,
            0.00031074436265043914,
            0.0004231717612128705,
            0.00030746153788641095,
            0.0003455143014434725
        ],
        "align_select": "select conductor.first_name, conductor.last_name",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Show the names of conductors and the orchestras they have conducted.",
        "gold_select": "select conductor.first_name, conductor.last_name, orchestra.Orchestra",
        "select_candidates": [
            "select conductor.first_name, conductor.last_name, orchestra.Orchestra",
            "select orchestra.Orchestra, conductor.first_name",
            "select conductor.first_name, conductor.last_name",
            "select show.Performance_ID, conductor.last_name, orchestra.Orchestra"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor orchestra",
        "table_candidates": [
            "conductor orchestra"
        ],
        "align_scores": [
            0.9929360747337341,
            0.9385169148445129,
            0.019089777022600174,
            0.015606068074703217,
            0.0032639445271342993,
            0.02304878830909729,
            0.00032308269874192774,
            0.00024351758474949747
        ],
        "align_select": "select conductor.first_name, conductor.last_name, orchestra.Orchestra",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What are the names of conductors as well as the corresonding orchestras that they have conducted?",
        "gold_select": "select conductor.first_name, conductor.last_name, orchestra.Orchestra",
        "select_candidates": [
            "select conductor.first_name, conductor.last_name, orchestra.Orchestra",
            "select conductor.first_name, conductor.last_name, corresponding orchestra.Orchestra",
            "select conductor.first_name, conductor.last_name, correspnding orchestra.Orchestra",
            "select orchestra.Orchestra, conductor.first_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor orchestra",
        "table_candidates": [
            "conductor orchestra"
        ],
        "align_scores": [
            0.99247145652771,
            0.8744937181472778,
            0.00947837345302105,
            0.003395043546333909,
            0.07519238442182541,
            0.015768300741910934,
            0.020776674151420593,
            0.012826955877244473
        ],
        "align_select": "select conductor.first_name, conductor.last_name, orchestra.Orchestra",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "Show the names of conductors that have conducted more than one orchestras.",
        "gold_select": "select conductor.first_name, conductor.last_name",
        "select_candidates": [
            "select conductor.first_name, conductor.last_name",
            "select orchestra.Conductor_ID, conductor.first_name, conductor.last_name",
            "select conductor.first_name, conductor.last_name, conductor.Conductor_ID",
            "select conductor.first_name, conductor.last_name, conductor.birthyear"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor orchestra",
        "table_candidates": [
            "conductor orchestra"
        ],
        "align_scores": [
            0.9652381539344788,
            8.857861394062638e-05,
            0.0006229965947568417,
            7.560389349237084e-05,
            0.000286958587821573,
            6.18837948422879e-05,
            0.00019805725605692714,
            6.327799201244488e-05
        ],
        "align_select": "select conductor.first_name, conductor.last_name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the names of conductors who have conducted at more than one orchestra?",
        "gold_select": "select conductor.first_name, conductor.last_name",
        "select_candidates": [
            "select conductor.first_name, conductor.last_name",
            "select orchestra.Conductor_ID, conductor.first_name, conductor.last_name",
            "select conductor.first_name, conductor.last_name, conductor.Conductor_ID",
            "select conductor.first_name, conductor.last_name, conductor.birthyear"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor orchestra",
        "table_candidates": [
            "conductor orchestra"
        ],
        "align_scores": [
            0.983855664730072,
            0.0001212639399454929,
            0.0009874319657683372,
            8.169411012204364e-05,
            0.00028954402660019696,
            7.264531450346112e-05,
            0.00027348246658220887,
            6.980942998779938e-05
        ],
        "align_select": "select conductor.first_name, conductor.last_name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Show the name of the conductor that has conducted the most number of orchestras.",
        "gold_select": "select conductor.first_name, conductor.last_name",
        "select_candidates": [
            "select conductor.first_name, conductor.last_name",
            "select conductor.Conductor_ID, conductor.first_name, conductor.last_name",
            "select conductor.first_name, conductor.last_name, conductor.birthyear",
            "select conductor.first_name.c1, conductor.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor orchestra",
        "table_candidates": [
            "conductor orchestra"
        ],
        "align_scores": [
            0.990404486656189,
            6.163367652334273e-05,
            0.00042898819083347917,
            6.774401845177636e-05,
            0.00028760277200490236,
            5.5754295317456126e-05,
            0.00033651397097855806,
            5.671763574355282e-05
        ],
        "align_select": "select conductor.first_name, conductor.last_name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the name of the conductor who has conducted the most orchestras?",
        "gold_select": "select conductor.first_name, conductor.last_name",
        "select_candidates": [
            "select conductor.first_name, conductor.last_name",
            "select conductor.Conductor_ID, conductor.first_name, conductor.last_name",
            "select conductor.first_name, conductor.last_name, conductor.birthyear",
            "select conductor.first_name.c1, conductor.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor orchestra",
        "table_candidates": [
            "conductor orchestra"
        ],
        "align_scores": [
            0.9904153347015381,
            6.987257074797526e-05,
            0.0005024894489906728,
            7.333620305871591e-05,
            0.00039739510975778103,
            5.8197620091959834e-05,
            0.0004446797538548708,
            6.121129990788177e-05
        ],
        "align_select": "select conductor.first_name, conductor.last_name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Please show the name of the conductor that has conducted orchestras founded after 2008.",
        "gold_select": "select conductor.first_name, conductor.last_name",
        "select_candidates": [
            "select conductor.first_name, conductor.last_name",
            "select conductor.first_name, conductor.last_name, conductor.birthyear",
            "select distinct conductor.first_name, conductor.last_name",
            "select conductor.first_name, conductor.last_name, conductor.Conductor_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor orchestra",
        "table_candidates": [
            "conductor orchestra"
        ],
        "align_scores": [
            0.4728253185749054,
            9.306247375207022e-05,
            0.00012593268183991313,
            6.814066000515595e-05,
            0.0062141031958162785,
            7.735811959719285e-05,
            0.00018325592100154608,
            7.326895138248801e-05
        ],
        "align_select": "select conductor.first_name, conductor.last_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of conductors who have conducted orchestras founded after the year 2008?",
        "gold_select": "select conductor.first_name, conductor.last_name",
        "select_candidates": [
            "select conductor.first_name, conductor.last_name",
            "select orchestra.Conductor_ID, conductor.first_name, conductor.last_name",
            "select distinct conductor.first_name, conductor.last_name",
            "select conductor.first_name, conductor.last_name, conductor.birthyear"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor orchestra",
        "table_candidates": [
            "conductor orchestra"
        ],
        "align_scores": [
            0.9873802661895752,
            9.974219574360177e-05,
            0.0002675950527191162,
            8.313827856909484e-05,
            0.03446441516280174,
            7.118274515960366e-05,
            0.00018014665693044662,
            6.510685489047319e-05
        ],
        "align_select": "select conductor.first_name, conductor.last_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the record companies of orchestras in descending order of years in which they were founded?",
        "gold_select": "select orchestra.Record_Company",
        "select_candidates": [
            "select orchestra.Record_Company",
            "select orchestra.Record_Company, orchestra.year_of_existence",
            "select orchestra.Record_Company (orchestrated orchestra.year_of_existence)",
            "select orchestra.Record_Company (orchestrator_orchestra.year_of_existence)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "orchestra",
        "table_candidates": [
            "orchestra"
        ],
        "align_scores": [
            0.993690013885498,
            0.993690013885498,
            0.00023669053916819394,
            0.00023669053916819394,
            0.0005892488989047706,
            0.0005892488989047706,
            0.001245486200787127,
            0.001245486200787127
        ],
        "align_select": "select orchestra.Record_Company",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "Return the record companies of orchestras, sorted descending by the years in which they were founded.",
        "gold_select": "select orchestra.Record_Company",
        "select_candidates": [
            "select orchestra.Record_Company",
            "select orchestra.Record_Company, orchestra.year_of_existence",
            "select orchestra.Record_Company (ordered orchestra.year_of_existence)",
            "select orchestra.Record_Company (ordered orchestra.Conductor_ID)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "orchestra",
        "table_candidates": [
            "orchestra"
        ],
        "align_scores": [
            0.9941249489784241,
            0.00033858316601254046,
            0.0002538856351748109,
            0.00012309840531088412,
            0.0021922315936535597,
            0.00027543114265426993,
            0.00021380394173320383,
            0.00017974790534935892
        ],
        "align_select": "select orchestra.Record_Company",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "List names of conductors in descending order of years of work.",
        "gold_select": "select conductor.Name",
        "select_candidates": [
            "select conductor.Name",
            "select conductor.Name, conductor.year_start_to_work",
            "select conductor.Name, conductor.Age",
            "select conductor.Name, conductor.Nationality"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor",
        "table_candidates": [
            "conductor"
        ],
        "align_scores": [
            0.9954786896705627,
            0.0002639062877278775,
            0.0002587148337624967,
            9.29055386222899e-05,
            0.00016541696095373482,
            0.00013769848737865686,
            0.000156380730913952,
            0.00011336229363223538
        ],
        "align_select": "select conductor.Name",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "What are the names of conductors, sorted descending by the number of years they have worked?",
        "gold_select": "select conductor.Name",
        "select_candidates": [
            "select conductor.Name",
            "select conductor.Name, conductor.year_start_to_work",
            "select conductor.Name, conductor.Age",
            "select conductor.Name (ordered conductor.Conductor_ID)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "conductor",
        "table_candidates": [
            "conductor"
        ],
        "align_scores": [
            0.9911822080612183,
            0.9911822080612183,
            0.00019438749586697668,
            0.00019438749586697668,
            0.00015837700630072504,
            0.00015837700630072504,
            0.00024382471747230738,
            0.00024382471747230738
        ],
        "align_select": "select conductor.Name",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "List the name of the conductor with the most years of work.",
        "gold_select": "select conductor.Name",
        "select_candidates": [
            "select conductor.Name",
            "select conductor.Name, conductor.Age",
            "select conductor.Name, conductor.Nationality",
            "select conductor.Name, conductor.year_start_to_work"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor",
        "table_candidates": [
            "conductor"
        ],
        "align_scores": [
            0.9834744334220886,
            6.62299498799257e-05,
            0.00028782663866877556,
            5.905472062295303e-05,
            0.00027671450516209006,
            5.590139335254207e-05,
            0.0005979083362035453,
            5.2653427701443434e-05
        ],
        "align_select": "select conductor.Name",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What is the name of the conductor who has worked the greatest number of years?",
        "gold_select": "select conductor.Name",
        "select_candidates": [
            "select conductor.Name",
            "select conductor.Name, conductor.Age",
            "select conductor.Name, conductor.Nationality",
            "select conductor.Name, conductor.year_start_to_work"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor",
        "table_candidates": [
            "conductor"
        ],
        "align_scores": [
            0.930965781211853,
            7.122829265426844e-05,
            0.0004319510771892965,
            6.303005648078397e-05,
            0.000353159848600626,
            5.9519621572690085e-05,
            0.0008902551489882171,
            5.68755240237806e-05
        ],
        "align_select": "select conductor.Name",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "List names of conductors in descending order of years of work.",
        "gold_select": "select conductor.Name",
        "select_candidates": [
            "select conductor.Name",
            "select conductor.Name, conductor.year_start_to_work",
            "select conductor.Name, conductor.Age",
            "select conductor.Name, conductor.Nationality"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor",
        "table_candidates": [
            "conductor"
        ],
        "align_scores": [
            0.9954786896705627,
            0.0002639062877278775,
            0.0002587148337624967,
            9.29055386222899e-05,
            0.00016541696095373482,
            0.00013769848737865686,
            0.000156380730913952,
            0.00011336229363223538
        ],
        "align_select": "select conductor.Name",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "What are the names of conductors, sorted descending by the number of years they have worked?",
        "gold_select": "select conductor.Name",
        "select_candidates": [
            "select conductor.Name",
            "select conductor.Name, conductor.year_start_to_work",
            "select conductor.Name, conductor.Age",
            "select conductor.Name (ordered conductor.Conductor_ID)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "conductor",
        "table_candidates": [
            "conductor"
        ],
        "align_scores": [
            0.9911822080612183,
            0.9911822080612183,
            0.00019438749586697668,
            0.00019438749586697668,
            0.00015837700630072504,
            0.00015837700630072504,
            0.00024382471747230738,
            0.00024382471747230738
        ],
        "align_select": "select conductor.Name",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "List the name of the conductor with the most years of work.",
        "gold_select": "select conductor.Name",
        "select_candidates": [
            "select conductor.Name",
            "select conductor.Name, conductor.Age",
            "select conductor.Name, conductor.Nationality",
            "select conductor.Name, conductor.year_start_to_work"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor",
        "table_candidates": [
            "conductor"
        ],
        "align_scores": [
            0.9834744334220886,
            0.9945269227027893,
            0.00028782663866877556,
            0.0004869985277764499,
            0.00027671450516209006,
            0.0003542371850926429,
            0.0005979083362035453,
            0.0007465851958841085
        ],
        "align_select": "select conductor.Name",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What is the name of the conductor who has worked the greatest number of years?",
        "gold_select": "select conductor.Name",
        "select_candidates": [
            "select conductor.Name",
            "select conductor.Name, conductor.Age",
            "select conductor.Name, conductor.Nationality",
            "select conductor.Name, conductor.year_start_to_work"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor",
        "table_candidates": [
            "conductor"
        ],
        "align_scores": [
            0.930965781211853,
            7.122829265426844e-05,
            0.0004319510771892965,
            6.303005648078397e-05,
            0.000353159848600626,
            5.9519621572690085e-05,
            0.0008902551489882171,
            5.68755240237806e-05
        ],
        "align_select": "select conductor.Name",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "List the names of conductors in ascending order of age.",
        "gold_select": "select conductor.first_name, conductor.last_name",
        "select_candidates": [
            "select conductor.first_name, conductor.last_name",
            "select conductor.first_name, conductor.last_name, conductor.Age",
            "select conductor.Conductor_ID, conductor.first_name, conductor.last_name",
            "select conductor.first_name, conductor.last_name in conductor.Age"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "conductor",
        "table_candidates": [
            "conductor"
        ],
        "align_scores": [
            0.993107259273529,
            0.993107259273529,
            0.00017256924184039235,
            0.00017256924184039235,
            0.00012667274859268218,
            0.00012667274859268218,
            0.00046474795090034604,
            0.00046474795090034604
        ],
        "align_select": "select conductor.first_name, conductor.last_name",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "What are the names of conductors, ordered by age?",
        "gold_select": "select conductor.first_name, conductor.last_name",
        "select_candidates": [
            "select conductor.first_name, conductor.last_name",
            "select conductor.first_name, conductor.last_name, conductor.Age",
            "select conductor.Conductor_ID, conductor.first_name, conductor.last_name",
            "select conductor.first_name, conductor.last_name, conductor.Age"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "conductor",
        "table_candidates": [
            "conductor"
        ],
        "align_scores": [
            0.9933809041976929,
            0.9933809041976929,
            0.0002217901637777686,
            0.0002217901637777686,
            0.00013303026207722723,
            0.00013303026207722723,
            0.0002217901637777686,
            0.0002217901637777686
        ],
        "align_select": "select conductor.first_name, conductor.last_name",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "What are the names of conductors whose nationalities are not \"USA\"?",
        "gold_select": "select conductor.first_name, conductor.last_name",
        "select_candidates": [
            "select conductor.first_name, conductor.last_name",
            "select conductor.Conductor_ID, conductor.first_name, conductor.last_name",
            "select conductor.first_name, conductor.last_name, conductor.Nationality",
            "select conductor.first_name, conductor.last_name, conductor.Age"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor",
        "table_candidates": [
            "conductor"
        ],
        "align_scores": [
            0.9942687749862671,
            0.00011161561997141689,
            0.00016671078628860414,
            7.250724593177438e-05,
            0.0002062200364889577,
            5.825348125654273e-05,
            0.00015390498447231948,
            6.205747195053846e-05
        ],
        "align_select": "select conductor.first_name, conductor.last_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Return the names of conductors that do not have the nationality \"USA\".",
        "gold_select": "select conductor.first_name, conductor.last_name",
        "select_candidates": [
            "select conductor.first_name, conductor.last_name",
            "select conductor.Conductor_ID, conductor.first_name, conductor.last_name",
            "select conductor.first_name, conductor.last_name, conductor.Age",
            "select conductor.first_name, conductor.last_name, conductor.Nationality"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor",
        "table_candidates": [
            "conductor"
        ],
        "align_scores": [
            0.9921342134475708,
            9.543466148898005e-05,
            0.00015239804633893073,
            6.848174234619364e-05,
            0.00013612976181320846,
            5.9785274061141536e-05,
            0.00018727582937572151,
            5.800779035780579e-05
        ],
        "align_select": "select conductor.first_name, conductor.last_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "List names of conductors in descending order of years of work.",
        "gold_select": "select conductor.first_name, conductor.last_name",
        "select_candidates": [
            "select conductor.first_name, conductor.last_name",
            "select conductor.first_name, conductor.last_name, conductor.Age",
            "select conductor.Conductor_ID, conductor.first_name, conductor.last_name",
            "select conductor.first_name, conductor.last_name, conductor.year_start_to_work"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "conductor",
        "table_candidates": [
            "conductor"
        ],
        "align_scores": [
            0.9921148419380188,
            0.9921148419380188,
            0.0001272328954655677,
            0.0001272328954655677,
            0.00015088387590367347,
            0.00015088387590367347,
            0.00033053880906663835,
            0.00033053880906663835
        ],
        "align_select": "select conductor.first_name, conductor.last_name",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "What are the names of conductors, sorted descending by the number of years they have worked?",
        "gold_select": "select conductor.first_name, conductor.last_name",
        "select_candidates": [
            "select conductor.first_name, conductor.last_name",
            "select conductor.Conductor_ID, conductor.first_name, conductor.last_name",
            "select conductor.first_name, conductor.last_name, conductor.Age",
            "select conductor.first_name, conductor.last_name, conductor.year_start_to_work"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "conductor",
        "table_candidates": [
            "conductor"
        ],
        "align_scores": [
            0.9909261465072632,
            0.9909261465072632,
            0.00017205630138050765,
            0.00017205630138050765,
            0.0001766838104231283,
            0.0001766838104231283,
            0.0002670676913112402,
            0.0002670676913112402
        ],
        "align_select": "select conductor.first_name, conductor.last_name",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "List the name of the conductor with the most years of work.",
        "gold_select": "select conductor.first_name, conductor.last_name",
        "select_candidates": [
            "select conductor.first_name, conductor.last_name",
            "select conductor.Conductor_ID, conductor.first_name, conductor.last_name",
            "select conductor.first_name, conductor.last_name, conductor.Age",
            "select conductor.first_name.c1, conductor.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor",
        "table_candidates": [
            "conductor"
        ],
        "align_scores": [
            0.9872757792472839,
            0.9936217665672302,
            0.0002284134243382141,
            0.00024052451772149652,
            0.00018624012591317296,
            0.00028222965192981064,
            0.00033096325933001935,
            0.00029262504540383816
        ],
        "align_select": "select conductor.first_name, conductor.last_name",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What is the name of the conductor who has worked the greatest number of years?",
        "gold_select": "select conductor.first_name, conductor.last_name",
        "select_candidates": [
            "select conductor.first_name, conductor.last_name",
            "select conductor.Conductor_ID, conductor.first_name, conductor.last_name",
            "select conductor.first_name, conductor.last_name, conductor.Age",
            "select conductor.first_name, conductor.last_name, conductor.year_start_to_work"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor",
        "table_candidates": [
            "conductor",
            "conductor orchestra performance"
        ],
        "align_scores": [
            0.9594873785972595,
            8.117939432850108e-05,
            0.00026136619271710515,
            7.601942343171686e-05,
            0.0003219886275473982,
            6.170064443722367e-05,
            0.0008222738979384303,
            6.10113529546652e-05
        ],
        "align_select": "select conductor.first_name, conductor.last_name",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Show the names of conductors and the orchestras they have conducted.",
        "gold_select": "select conductor.first_name, conductor.last_name, orchestra.Orchestra",
        "select_candidates": [
            "select conductor.first_name, conductor.last_name, orchestra.Orchestra",
            "select orchestra.Orchestra, conductor.first_name",
            "select conductor.first_name, conductor.last_name",
            "select show.Performance_ID, conductor.last_name, orchestra.Orchestra"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor orchestra",
        "table_candidates": [
            "conductor orchestra"
        ],
        "align_scores": [
            0.9929360747337341,
            0.9385169148445129,
            0.019089777022600174,
            0.015606068074703217,
            0.0032639445271342993,
            0.02304878830909729,
            0.00032308269874192774,
            0.00024351758474949747
        ],
        "align_select": "select conductor.first_name, conductor.last_name, orchestra.Orchestra",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What are the names of conductors as well as the corresonding orchestras that they have conducted?",
        "gold_select": "select conductor.first_name, conductor.last_name, orchestra.Orchestra",
        "select_candidates": [
            "select conductor.first_name, conductor.last_name, orchestra.Orchestra",
            "select conductor.first_name, conductor.last_name, corresponding orchestra.Orchestra",
            "select conductor.first_name, conductor.last_name, correspnding orchestra.Orchestra",
            "select orchestra.Conductor_ID, conductor.first_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor orchestra",
        "table_candidates": [
            "conductor orchestra"
        ],
        "align_scores": [
            0.99247145652771,
            0.8744937181472778,
            0.00947837345302105,
            0.003395043546333909,
            0.07519238442182541,
            0.015768300741910934,
            0.0008930549956858158,
            0.0005522614810615778
        ],
        "align_select": "select conductor.first_name, conductor.last_name, orchestra.Orchestra",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "Show the names of conductors that have conducted more than one orchestras.",
        "gold_select": "select conductor.first_name, conductor.last_name",
        "select_candidates": [
            "select conductor.first_name, conductor.last_name",
            "select orchestra.Conductor_ID, conductor.first_name, conductor.last_name",
            "select conductor.first_name, conductor.last_name, conductor.Conductor_ID",
            "select conductor.first_name, conductor.last_name, conductor.Age"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor orchestra",
        "table_candidates": [
            "conductor orchestra"
        ],
        "align_scores": [
            0.9652381539344788,
            8.857861394062638e-05,
            0.0006229965947568417,
            7.560389349237084e-05,
            0.000286958587821573,
            6.18837948422879e-05,
            0.0001436271268175915,
            5.408086872193962e-05
        ],
        "align_select": "select conductor.first_name, conductor.last_name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the names of conductors who have conducted at more than one orchestra?",
        "gold_select": "select conductor.first_name, conductor.last_name",
        "select_candidates": [
            "select conductor.first_name, conductor.last_name",
            "select orchestra.Conductor_ID, conductor.first_name, conductor.last_name",
            "select conductor.first_name, conductor.last_name, conductor.Conductor_ID",
            "select conductor.first_name, conductor.last_name, conductor.Age"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor orchestra",
        "table_candidates": [
            "conductor orchestra"
        ],
        "align_scores": [
            0.983855664730072,
            0.0001212639399454929,
            0.0009874319657683372,
            8.169411012204364e-05,
            0.00028954402660019696,
            7.264531450346112e-05,
            0.0001604751159902662,
            5.751673234044574e-05
        ],
        "align_select": "select conductor.first_name, conductor.last_name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Show the name of the conductor that has conducted the most number of orchestras.",
        "gold_select": "select conductor.first_name, conductor.last_name",
        "select_candidates": [
            "select conductor.first_name, conductor.last_name",
            "select conductor.Conductor_ID, conductor.first_name, conductor.last_name",
            "select conductor.first_name, conductor.last_name, conductor.Age",
            "select conductor.first_name.c1, conductor.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor orchestra",
        "table_candidates": [
            "conductor orchestra"
        ],
        "align_scores": [
            0.990404486656189,
            6.163367652334273e-05,
            0.00042898819083347917,
            6.774401845177636e-05,
            0.00018510497466195375,
            5.057710222899914e-05,
            0.00033651397097855806,
            5.671763574355282e-05
        ],
        "align_select": "select conductor.first_name, conductor.last_name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "What is the name of the conductor who has conducted the most orchestras?",
        "gold_select": "select conductor.first_name, conductor.last_name",
        "select_candidates": [
            "select conductor.first_name, conductor.last_name",
            "select conductor.first_name, conductor.last_name, conductor.Age",
            "select conductor.first_name, conductor.last_name, conductor.Conductor_ID",
            "select conductor.first_name.c1, conductor.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-GROUP BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor orchestra",
        "table_candidates": [
            "conductor orchestra"
        ],
        "align_scores": [
            0.9904153347015381,
            6.987257074797526e-05,
            0.0002633186522871256,
            5.192843673285097e-05,
            0.0003397134714759886,
            6.278822547756135e-05,
            0.0004446797538548708,
            6.121129990788177e-05
        ],
        "align_select": "select conductor.first_name, conductor.last_name",
        "align_structure": "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
    },
    {
        "question": "Please show the name of the conductor that has conducted orchestras founded after 2008.",
        "gold_select": "select conductor.first_name, conductor.last_name",
        "select_candidates": [
            "select conductor.first_name, conductor.last_name",
            "select conductor.first_name, conductor.last_name, conductor.Age",
            "select distinct conductor.first_name, conductor.last_name",
            "select conductor.first_name.c1, conductor.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor orchestra",
        "table_candidates": [
            "conductor orchestra"
        ],
        "align_scores": [
            0.4728253185749054,
            9.306247375207022e-05,
            0.00015273950702976435,
            7.126355922082439e-05,
            0.0062141031958162785,
            7.735811959719285e-05,
            0.0002227561199106276,
            7.34738860046491e-05
        ],
        "align_select": "select conductor.first_name, conductor.last_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of conductors who have conducted orchestras founded after the year 2008?",
        "gold_select": "select conductor.first_name, conductor.last_name",
        "select_candidates": [
            "select conductor.first_name, conductor.last_name",
            "select orchestra.Conductor_ID, conductor.first_name, conductor.last_name",
            "select distinct conductor.first_name, conductor.last_name",
            "select conductor.first_name, conductor.last_name, conductor.Conductor_ID"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "conductor orchestra",
        "table_candidates": [
            "conductor orchestra"
        ],
        "align_scores": [
            0.9873802661895752,
            9.974219574360177e-05,
            0.0002675950527191162,
            8.313827856909484e-05,
            0.03446441516280174,
            7.118274515960366e-05,
            0.00023681648599449545,
            7.2453185566701e-05
        ],
        "align_select": "select conductor.first_name, conductor.last_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the record companies of orchestras in descending order of years in which they were founded?",
        "gold_select": "select orchestra.Record_Company",
        "select_candidates": [
            "select orchestra.Record_Company",
            "select orchestra.Record_Company, orchestra.year_of_existence",
            "select orchestra.Record_Company (orchestrated orchestra.year_of_existence)",
            "select orchestra.Record_Company (orchestrator_orchestra.Record_Company)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "orchestra",
        "table_candidates": [
            "orchestra"
        ],
        "align_scores": [
            0.993690013885498,
            0.993690013885498,
            0.00023669053916819394,
            0.00023669053916819394,
            0.0005892488989047706,
            0.0005892488989047706,
            0.00043262611143290997,
            0.00043262611143290997
        ],
        "align_select": "select orchestra.Record_Company",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "Return the record companies of orchestras, sorted descending by the years in which they were founded.",
        "gold_select": "select orchestra.Record_Company",
        "select_candidates": [
            "select orchestra.Record_Company",
            "select orchestra.Record_Company, orchestra.year_of_existence",
            "select orchestra.Record_Company (ordered orchestra.year_of_existence)",
            "select orchestra.Record_Company (ordered orchestra.Conductor_ID)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "orchestra",
        "table_candidates": [
            "orchestra"
        ],
        "align_scores": [
            0.9941249489784241,
            0.00033858316601254046,
            0.0002538856351748109,
            0.00012309840531088412,
            0.0021922315936535597,
            0.00027543114265426993,
            0.00021380394173320383,
            0.00017974790534935892
        ],
        "align_select": "select orchestra.Record_Company",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "List the date of each treatment, together with the first name of the professional who operated it.",
        "gold_select": "select Treatments.date_of_treatment, Treatments.time_of_treatment, Professionals.first_name",
        "select_candidates": [
            "select Treatments.dog_id3, Professionals.first_name",
            "select Treatments.dog_id2, Professionals.first_name",
            "select Treatments.time_of_treatment, Professionals.first_name",
            "select Treatments.dog_id, Professionals.first_name"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals Treatments",
        "table_candidates": [
            "Professionals Treatments",
            "Dogs Professionals Treatments",
            "Owners Professionals Treatments",
            "Treatment_Types Professionals Treatments",
            "Charges Professionals Treatments",
            "Breeds Professionals Treatments",
            "Sizes Treatments"
        ],
        "align_scores": [
            0.0008623398607596755,
            0.00031961346394382417,
            0.0005936843808740377,
            0.0002754119341261685,
            0.011969217099249363,
            0.005864276085048914,
            0.0005534175434149802,
            0.0001881180505733937
        ],
        "align_select": "select Treatments.dog_id3, Professionals.first_name",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What are the date and the operating professional's first name of each treatment?",
        "gold_select": "select Treatments.date_of_treatment, Treatments.time_of_treatment, Professionals.first_name",
        "select_candidates": [
            "select Treatments.dog_id3, Professionals.first_name",
            "select Treatments.dog_id2, Professionals.first_name",
            "select Treatments.time_of_treatment, Professionals.first_name",
            "select Treatments.dog_id5, Professionals.first_name"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals Treatments",
        "table_candidates": [
            "Professionals Treatments",
            "Dogs Professionals Treatments",
            "Owners Professionals Treatments",
            "Treatment_Types Professionals Treatments",
            "Sizes Professionals Treatments",
            "Charges Professionals Treatments",
            "Breeds Professionals Treatments"
        ],
        "align_scores": [
            0.0005136876716278493,
            0.00030886236345395446,
            0.0005809260765090585,
            0.00035113547346554697,
            0.4105910360813141,
            0.014385925605893135,
            0.0004501430375967175,
            0.0003634150489233434
        ],
        "align_select": "select Treatments.time_of_treatment, Professionals.first_name",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "List the names of the dogs of the rarest breed and the treatment dates of them.",
        "gold_select": "select Dogs.name, Treatments.date_of_treatment, Treatments.time_of_treatment",
        "select_candidates": [
            "select Dogs.name, Treatments.treatment_type_code",
            "select Dogs.name, Treatments.dog_id3",
            "select Dogs.name, Treatments.dog_id2",
            "select Dogs.name, Treatments.dog_id"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "Dogs Treatments",
        "table_candidates": [
            "Dogs Treatments",
            "Breeds Dogs Treatments",
            "Charges Dogs Treatments",
            "Sizes Dogs Treatments",
            "Treatment_Types Dogs Treatments"
        ],
        "align_scores": [
            0.0010897902538999915,
            0.0013509233249351382,
            0.00059775315457955,
            0.00033333979081362486,
            0.0004591308534145355,
            0.0003241684171371162,
            0.0005671664839610457,
            0.0007401091861538589
        ],
        "align_select": "select Dogs.name, Treatments.treatment_type_code",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Which dogs are of the rarest breed? Show their names and treatment dates.",
        "gold_select": "select Dogs.name, Treatments.date_of_treatment, Treatments.time_of_treatment",
        "select_candidates": [
            "select Dogs.name, Treatments.dog_id3",
            "select Dogs.name, Treatments.treatment_type_code",
            "select Dogs.name, Treatments.dog_id2",
            "select Dogs.name, Treatments.dog_id"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "Dogs Treatments",
        "table_candidates": [
            "Dogs Treatments",
            "Breeds Dogs Treatments",
            "Breeds Charges Dogs Treatments",
            "Charges Dogs Treatments",
            "Treatment_Types Dogs Treatments",
            "Sizes Dogs Treatments",
            "Breeds Charges Sizes Dogs Treatments"
        ],
        "align_scores": [
            0.0007614259957335889,
            0.0004728844214696437,
            0.0006440077559091151,
            0.0005936207016929984,
            0.0006214926252141595,
            0.0004143739934079349,
            0.00046508206287398934,
            0.00042648689122870564
        ],
        "align_select": "select Dogs.name, Treatments.dog_id3",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What are the arriving date and the departing date of the dogs who have gone through a treatment?",
        "gold_select": "select distinct Dogs.year_arrived, Dogs.month_arrived, Dogs.day_arrived, Dogs.time_arrived, Dogs.date_departed, Dogs.time_departed",
        "select_candidates": [
            "select Dogs.time_arrived, Dogs.date_departed",
            "select Dogs.dog_id, Dogs.day_arrived, Dogs.date_departed",
            "select Dogs.day_arrived, Dogs.date_departed",
            "select Dogs.dog_id, Dogs.day_arrived"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "Dogs Treatments",
        "table_candidates": [
            "Dogs Treatments",
            "Dogs Professionals Treatments"
        ],
        "align_scores": [
            0.005328910890966654,
            0.005328910890966654,
            0.0003537821175996214,
            0.0003537821175996214,
            0.14197291433811188,
            0.14197291433811188,
            0.00044336976134218276,
            0.00044336976134218276
        ],
        "align_select": "select Dogs.time_arrived, Dogs.date_departed",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "Find the arriving date and the departing date of the dogs that received a treatment.",
        "gold_select": "select distinct Dogs.year_arrived, Dogs.month_arrived, Dogs.day_arrived, Dogs.time_arrived, Dogs.date_departed, Dogs.time_departed",
        "select_candidates": [
            "select Dogs.time_arrived, Dogs.date_departed",
            "select Dogs.day_arrived, Dogs.date_departed",
            "select Dogs.dog_id, Dogs.day_arrived, Dogs.date_departed",
            "select Dogs.year_arrived, Dogs.date_departed"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Dogs Treatments",
        "table_candidates": [
            "Dogs Treatments",
            "Dogs Professionals Treatments"
        ],
        "align_scores": [
            0.010792006738483906,
            8.376191544812173e-05,
            0.3840070962905884,
            9.367986058350652e-05,
            0.0004187400045339018,
            6.777955422876403e-05,
            0.0016506370157003403,
            7.392522820737213e-05
        ],
        "align_select": "select Dogs.day_arrived, Dogs.date_departed",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What are the arriving date and the departing date of all the dogs?",
        "gold_select": "select Dogs.year_arrived, Dogs.month_arrived, Dogs.day_arrived, Dogs.time_arrived, Dogs.date_departed, Dogs.time_departed",
        "select_candidates": [
            "select Dogs.year_arrived, Dogs.date_departed",
            "select Dogs.time_arrived, Dogs.date_departed",
            "select Dogs.day_arrived, Dogs.date_departed",
            "select Dogs.owner_id, Dogs.date_departed"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Dogs",
        "table_candidates": [
            "Dogs"
        ],
        "align_scores": [
            0.000690102344378829,
            0.00010507427214179188,
            0.0012362755369395018,
            0.0001010898340609856,
            0.6175844073295593,
            0.00010089453280670568,
            0.0005937975947745144,
            8.529685874236748e-05
        ],
        "align_select": "select Dogs.day_arrived, Dogs.date_departed",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "List the arrival date and the departure date for all the dogs.",
        "gold_select": "select Dogs.year_arrived, Dogs.month_arrived, Dogs.day_arrived, Dogs.time_arrived, Dogs.date_departed, Dogs.time_departed",
        "select_candidates": [
            "select Dogs.year_arrived, Dogs.date_departed",
            "select Dogs.time_arrived, Dogs.date_departed",
            "select Dogs.dog_id, Dogs.owner_id, Dogs.date_departed",
            "select Dogs.dog_id, Dogs.owner_id, Dogs.abandoned_yn"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Dogs",
        "table_candidates": [
            "Dogs"
        ],
        "align_scores": [
            0.0007008016109466553,
            0.0001016338137560524,
            0.002102892380207777,
            8.789724233793095e-05,
            9.113324631471187e-05,
            5.999997301842086e-05,
            9.405346645507962e-05,
            6.970870890654624e-05
        ],
        "align_select": "select Dogs.year_arrived, Dogs.date_departed",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "How much does the most recent treatment cost?",
        "gold_select": "select Treatments.cost_of_treatment",
        "select_candidates": [
            "select Charges.charge_amount",
            "select Treatments.treatment_id, Charges.charge_amount",
            "select Treatments.date_of_treatment",
            "select t8.c0, Charges.charge_amount"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Treatments",
        "table_candidates": [
            "Charges Treatments",
            "Charges"
        ],
        "align_scores": [
            0.031024930998682976,
            5.5789609177736565e-05,
            0.0004167758743278682,
            5.4853950132383034e-05,
            0.019047798588871956,
            5.3940664656693116e-05,
            0.0002728100516833365,
            5.7787936384556815e-05
        ],
        "align_select": "select Charges.charge_amount",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Show me the cost of the most recently performed treatment.",
        "gold_select": "select Treatments.cost_of_treatment",
        "select_candidates": [
            "select Charges.charge_amount",
            "select Treatments.time_of_treatment, Charges.charge_amount",
            "select Treatments.treatment_id, Charges.charge_amount",
            "select Treatments.dog_id, Charges.charge_amount"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Treatments",
        "table_candidates": [
            "Charges Treatments",
            "Breeds Charges Treatments"
        ],
        "align_scores": [
            0.9786388278007507,
            6.12712829024531e-05,
            0.00019835814600810409,
            5.9191435866523534e-05,
            0.00032299154554493725,
            6.0767593822674826e-05,
            0.00046317389933392406,
            6.18279300397262e-05
        ],
        "align_select": "select Charges.charge_amount",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "List the date of each treatment, together with the first name of the professional who operated it.",
        "gold_select": "select Treatments.year_of_treatment, Treatments.month_of_treatment, Treatments.day_of_treatment, Treatments.time_of_treatment, Professionals.first_name",
        "select_candidates": [
            "select Treatments.month_of_treatment, Professionals.first_name",
            "select Treatments.year_of_treatment, Professionals.first_name",
            "select Treatments.treatment_type_code, Professionals.first_name",
            "select Treatments.month_of_treatment, Professionals.role_code"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals Treatments",
        "table_candidates": [
            "Professionals Treatments",
            "Dogs Professionals Treatments",
            "Owners Professionals Treatments",
            "Treatment_Types Professionals Treatments",
            "Breeds Professionals Treatments",
            "Charges Professionals Treatments",
            "Sizes Treatments"
        ],
        "align_scores": [
            0.31199514865875244,
            0.007644358091056347,
            0.8708187937736511,
            0.021819304674863815,
            0.00041670395876280963,
            0.00021092648967169225,
            0.00047105044359341264,
            0.00019212104962207377
        ],
        "align_select": "select Treatments.year_of_treatment, Professionals.first_name",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What are the date and the operating professional's first name of each treatment?",
        "gold_select": "select Treatments.year_of_treatment, Treatments.month_of_treatment, Treatments.day_of_treatment, Treatments.time_of_treatment, Professionals.first_name",
        "select_candidates": [
            "select Treatments.day_of_treatment, Professionals.first_name",
            "select Treatments.month_of_treatment, Professionals.first_name",
            "select Treatments.treatment_type_code, Professionals.first_name",
            "select Treatments.year_of_treatment, Professionals.first_name"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals Treatments",
        "table_candidates": [
            "Professionals Treatments",
            "Dogs Professionals Treatments",
            "Owners Professionals Treatments",
            "Treatment_Types Professionals Treatments",
            "Charges Professionals Treatments",
            "Breeds Professionals Treatments",
            "Sizes Professionals Treatments",
            "Sizes Treatments"
        ],
        "align_scores": [
            0.9779592752456665,
            0.02334052138030529,
            0.9570052027702332,
            0.01570342853665352,
            0.0006487502250820398,
            0.00026224032626487315,
            0.9701456427574158,
            0.01833445206284523
        ],
        "align_select": "select Treatments.day_of_treatment, Professionals.first_name",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "List the names of the dogs of the rarest breed and the treatment dates of them.",
        "gold_select": "select Dogs.name, Treatments.year_of_treatment, Treatments.month_of_treatment, Treatments.day_of_treatment, Treatments.time_of_treatment",
        "select_candidates": [
            "select Dogs.name, Treatments.year_of_treatment",
            "select Dogs.name, Treatments.treatment_type_code",
            "select Dogs.name, Treatments.month_of_treatment",
            "select Dogs.name, Treatments.day_of_treatment"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "Dogs Treatments",
        "table_candidates": [
            "Dogs Treatments",
            "Breeds Dogs Treatments",
            "Breeds Charges Dogs Treatments",
            "Charges Dogs Treatments",
            "Sizes Dogs Treatments",
            "Breeds Charges Sizes Dogs Treatments"
        ],
        "align_scores": [
            0.958560049533844,
            0.9301744699478149,
            0.0010897902538999915,
            0.0013509233249351382,
            0.9638283848762512,
            0.9490379095077515,
            0.9707949161529541,
            0.968163013458252
        ],
        "align_select": "select Dogs.name, Treatments.year_of_treatment",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Which dogs are of the rarest breed? Show their names and treatment dates.",
        "gold_select": "select Dogs.name, Treatments.year_of_treatment, Treatments.month_of_treatment, Treatments.day_of_treatment, Treatments.time_of_treatment",
        "select_candidates": [
            "select Dogs.name, Treatments.day_of_treatment",
            "select Dogs.name, Treatments.year_of_treatment",
            "select Dogs.name, Treatments.treatment_type_code",
            "select Dogs.name, Treatments.month_of_treatment"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "Dogs Treatments",
        "table_candidates": [
            "Breeds Dogs Treatments",
            "Dogs Treatments",
            "Breeds Charges Dogs Treatments",
            "Charges Dogs Treatments",
            "Sizes Dogs Treatments",
            "Treatment_Types Dogs Treatments",
            "Breeds Charges Sizes Dogs Treatments"
        ],
        "align_scores": [
            0.969383180141449,
            0.9862874150276184,
            0.9722229838371277,
            0.9882545471191406,
            0.0006440077559091151,
            0.0005936207016929984,
            0.9616489410400391,
            0.9862796068191528
        ],
        "align_select": "select Dogs.name, Treatments.day_of_treatment",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What are the arriving date and the departing date of the dogs who have gone through a treatment?",
        "gold_select": "select distinct Dogs.date_arrived, Dogs.time_arrived, Dogs.date_departed",
        "select_candidates": [
            "select Dogs.date_arrived, Dogs.date_departed",
            "select Dogs.dog_id, Dogs.date_departed",
            "select Dogs.date_of_birth, Dogs.date_arrived, Dogs.date_departed",
            "select Dogs.owner_id, Dogs.date_departed"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Dogs Treatments",
        "table_candidates": [
            "Dogs Treatments",
            "Dogs Professionals Treatments"
        ],
        "align_scores": [
            0.9011204838752747,
            0.00011545744200702757,
            0.0008029151940718293,
            7.877175085013732e-05,
            0.00022953843290451914,
            7.181211549323052e-05,
            0.0007202568231150508,
            8.126242028083652e-05
        ],
        "align_select": "select Dogs.date_arrived, Dogs.date_departed",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "Find the arriving date and the departing date of the dogs that received a treatment.",
        "gold_select": "select distinct Dogs.date_arrived, Dogs.time_arrived, Dogs.date_departed",
        "select_candidates": [
            "select Dogs.date_arrived, Dogs.date_departed",
            "select Dogs.dog_id, Dogs.date_departed",
            "select Dogs.date_of_birth, Dogs.date_arrived, Dogs.date_departed",
            "select Dogs.owner_id, Dogs.date_departed"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Dogs Treatments",
        "table_candidates": [
            "Dogs Treatments",
            "Dogs Professionals Treatments"
        ],
        "align_scores": [
            0.9660494327545166,
            0.00010655549704097211,
            0.0006641048239544034,
            7.080585055518895e-05,
            0.00020276008581276983,
            6.842026050435379e-05,
            0.0006282717804424465,
            6.715280323987827e-05
        ],
        "align_select": "select Dogs.date_arrived, Dogs.date_departed",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What are the arriving date and the departing date of all the dogs?",
        "gold_select": "select Dogs.date_arrived, Dogs.time_arrived, Dogs.date_departed",
        "select_candidates": [
            "select Dogs.date_arrived, Dogs.date_departed",
            "select Dogs.dog_id, Dogs.date_departed",
            "select Dogs.owner_id, Dogs.date_departed",
            "select Dogs.weight, Dogs.date_departed"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Dogs",
        "table_candidates": [
            "Dogs"
        ],
        "align_scores": [
            0.977968156337738,
            0.00010065822425531223,
            0.00043096067383885384,
            7.622950943186879e-05,
            0.0005937975947745144,
            8.529685874236748e-05,
            0.0006937783327884972,
            0.00022662381525151432
        ],
        "align_select": "select Dogs.date_arrived, Dogs.date_departed",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "List the arrival date and the departure date for all the dogs.",
        "gold_select": "select Dogs.date_arrived, Dogs.time_arrived, Dogs.date_departed",
        "select_candidates": [
            "select Dogs.date_arrived, Dogs.date_departed",
            "select Dogs.dog_id, Dogs.date_departed",
            "select Dogs.owner_id, Dogs.date_departed",
            "select Dogs.weight, Dogs.date_departed"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Dogs",
        "table_candidates": [
            "Dogs"
        ],
        "align_scores": [
            0.9307873249053955,
            8.639824955025688e-05,
            0.0003840358695015311,
            6.764717545593157e-05,
            0.0004444483492989093,
            8.675572462379932e-05,
            0.0005760052590630949,
            0.00019534530292730778
        ],
        "align_select": "select Dogs.date_arrived, Dogs.date_departed",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "How much does the most recent treatment cost?",
        "gold_select": "select Treatments.cost_of_treatment",
        "select_candidates": [
            "select Charges.charge_amount",
            "select Treatments.treatment_id, Charges.charge_amount",
            "select t8.c0, Charges.charge_amount",
            "select Treatments.month_of_treatment"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Treatments",
        "table_candidates": [
            "Charges Treatments",
            "Breeds Charges Treatments",
            "Charges"
        ],
        "align_scores": [
            0.031024930998682976,
            5.5789609177736565e-05,
            0.0004167758743278682,
            5.4853950132383034e-05,
            0.0002728100516833365,
            5.7787936384556815e-05,
            0.004537750966846943,
            5.71864475205075e-05
        ],
        "align_select": "select Charges.charge_amount",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Show me the cost of the most recently performed treatment.",
        "gold_select": "select Treatments.cost_of_treatment",
        "select_candidates": [
            "select Charges.charge_amount",
            "select Treatments.month_of_treatment, Charges.charge_amount",
            "select Charges.charge_id, Charges.charge_amount",
            "select t7.c9, Charges.charge_amount"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Treatments",
        "table_candidates": [
            "Charges Treatments",
            "Breeds Charges Treatments",
            "Charges"
        ],
        "align_scores": [
            0.9786388278007507,
            6.12712829024531e-05,
            0.00018879312847275287,
            6.37009070487693e-05,
            0.00021230822312645614,
            6.318152009043843e-05,
            0.0003316069196444005,
            5.807598427054472e-05
        ],
        "align_select": "select Charges.charge_amount",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What are the arriving date and the departing date of the dogs who have gone through a treatment?",
        "gold_select": "select distinct Dogs.year_arrived, Dogs.month_arrived, Dogs.day_arrived, Dogs.time_arrived, Dogs.date_departed, Dogs.time_departed",
        "select_candidates": [
            "select Dogs.time_arrived, Dogs.date_departed",
            "select Dogs.year_arrived, Dogs.date_departed",
            "select Dogs.dog_id, Dogs.date_departed",
            "select Dogs.dog_id, Dogs.day_arrived, Dogs.date_departed"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "Dogs Treatments",
        "table_candidates": [
            "Dogs Treatments",
            "Dogs Professionals Treatments"
        ],
        "align_scores": [
            0.005328910890966654,
            0.005328910890966654,
            0.002104145707562566,
            0.002104145707562566,
            0.0008029151940718293,
            0.0008029151940718293,
            0.0003537821175996214,
            0.0003537821175996214
        ],
        "align_select": "select Dogs.time_arrived, Dogs.date_departed",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "Find the arriving date and the departing date of the dogs that received a treatment.",
        "gold_select": "select distinct Dogs.year_arrived, Dogs.month_arrived, Dogs.day_arrived, Dogs.time_arrived, Dogs.date_departed, Dogs.time_departed",
        "select_candidates": [
            "select Dogs.time_arrived, Dogs.date_departed",
            "select Dogs.dog_id, Dogs.day_arrived, Dogs.date_departed",
            "select Dogs.day_arrived, Dogs.date_departed",
            "select Dogs.year_arrived, Dogs.date_departed"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Dogs Treatments",
        "table_candidates": [
            "Dogs Treatments",
            "Dogs Professionals Treatments",
            "Owners Dogs Treatments"
        ],
        "align_scores": [
            0.010792006738483906,
            8.376191544812173e-05,
            0.0004187400045339018,
            6.777955422876403e-05,
            0.3840070962905884,
            9.367986058350652e-05,
            0.0016506370157003403,
            7.392522820737213e-05
        ],
        "align_select": "select Dogs.day_arrived, Dogs.date_departed",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What are the arriving date and the departing date of all the dogs?",
        "gold_select": "select Dogs.year_arrived, Dogs.month_arrived, Dogs.day_arrived, Dogs.time_arrived, Dogs.date_departed, Dogs.time_departed",
        "select_candidates": [
            "select Dogs.year_arrived, Dogs.date_departed",
            "select Dogs.time_arrived, Dogs.date_departed",
            "select Dogs.dog_id, Dogs.date_departed",
            "select Dogs.day_arrived, Dogs.date_departed"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Dogs",
        "table_candidates": [
            "Dogs"
        ],
        "align_scores": [
            0.000690102344378829,
            0.00010507427214179188,
            0.0012362755369395018,
            0.0001010898340609856,
            0.00043096067383885384,
            7.622950943186879e-05,
            0.6175844073295593,
            0.00010089453280670568
        ],
        "align_select": "select Dogs.day_arrived, Dogs.date_departed",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "List the arrival date and the departure date for all the dogs.",
        "gold_select": "select Dogs.year_arrived, Dogs.month_arrived, Dogs.day_arrived, Dogs.time_arrived, Dogs.date_departed, Dogs.time_departed",
        "select_candidates": [
            "select Dogs.year_arrived, Dogs.date_departed",
            "select Dogs.time_arrived, Dogs.date_departed",
            "select Dogs.dog_id, Dogs.owner_id, Dogs.date_departed",
            "select Dogs.dog_id, Dogs.year_arrived, Dogs.date_departed"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Dogs",
        "table_candidates": [
            "Dogs"
        ],
        "align_scores": [
            0.0007008016109466553,
            0.0001016338137560524,
            0.002102892380207777,
            8.789724233793095e-05,
            9.113324631471187e-05,
            5.999997301842086e-05,
            0.00016926106764003634,
            6.766091973986477e-05
        ],
        "align_select": "select Dogs.year_arrived, Dogs.date_departed",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "List the date of each treatment, together with the first name of the professional who operated it.",
        "gold_select": "select Treatments.date_of_treatment, Treatments.time_of_treatment, Professionals.first_name",
        "select_candidates": [
            "select Treatments.dog_id3, Professionals.first_name",
            "select Treatments.treatment_type_code, Professionals.first_name",
            "select Treatments.time_of_treatment, Professionals.first_name",
            "select Treatments.dog_id2, Professionals.first_name"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals Treatments",
        "table_candidates": [
            "Professionals Treatments",
            "Dogs Professionals Treatments",
            "Owners Professionals Treatments",
            "Treatment_Types Professionals Treatments",
            "Charges Professionals Treatments",
            "Sizes Professionals Treatments",
            "Breeds Professionals Treatments"
        ],
        "align_scores": [
            0.0008623398607596755,
            0.00015247233386617154,
            0.00041670395876280963,
            0.00010380164167145267,
            0.011969217099249363,
            0.00011162178998347372,
            0.0005936843808740377,
            0.00014530494809150696
        ],
        "align_select": "select Treatments.dog_id3, Professionals.first_name",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What are the date and the operating professional's first name of each treatment?",
        "gold_select": "select Treatments.date_of_treatment, Treatments.time_of_treatment, Professionals.first_name",
        "select_candidates": [
            "select Treatments.dog_id3, Professionals.first_name",
            "select Treatments.time_of_treatment, Professionals.first_name",
            "select Treatments.treatment_type_code, Professionals.first_name",
            "select Treatments.dog_id2, Professionals.first_name"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Professionals Treatments",
        "table_candidates": [
            "Professionals Treatments",
            "Dogs Professionals Treatments",
            "Owners Professionals Treatments",
            "Treatment_Types Professionals Treatments",
            "Sizes Professionals Treatments",
            "Charges Professionals Treatments",
            "Breeds Professionals Treatments"
        ],
        "align_scores": [
            0.0005136876716278493,
            0.00030886236345395446,
            0.4105910360813141,
            0.014385925605893135,
            0.0006487502250820398,
            0.00026224032626487315,
            0.0005809260765090585,
            0.00035113547346554697
        ],
        "align_select": "select Treatments.time_of_treatment, Professionals.first_name",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "List the names of the dogs of the rarest breed and the treatment dates of them.",
        "gold_select": "select Dogs.name, Treatments.date_of_treatment, Treatments.time_of_treatment",
        "select_candidates": [
            "select Dogs.name, Treatments.treatment_type_code",
            "select Dogs.name, Treatments.dog_id3",
            "select Dogs.name, Treatments.dog_id2",
            "select Dogs.name, Treatments.treatment_type_code0"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "Dogs Treatments",
        "table_candidates": [
            "Dogs Treatments",
            "Breeds Dogs Treatments",
            "Sizes Dogs Treatments",
            "Charges Dogs Treatments",
            "Treatment_Types Dogs Treatments"
        ],
        "align_scores": [
            0.0010897902538999915,
            0.0013509233249351382,
            0.00059775315457955,
            0.00033333979081362486,
            0.0004591308534145355,
            0.0003241684171371162,
            0.0003574661095626652,
            0.00026959014940075576
        ],
        "align_select": "select Dogs.name, Treatments.treatment_type_code",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Which dogs are of the rarest breed? Show their names and treatment dates.",
        "gold_select": "select Dogs.name, Treatments.date_of_treatment, Treatments.time_of_treatment",
        "select_candidates": [
            "select Dogs.name, Treatments.treatment_type_code",
            "select Dogs.name, t07.c3",
            "select Dogs.name, Dogs.breed_code",
            "select Dogs.name, t7.5.c3"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-GROUP BY-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            0.0,
            0.0
        ],
        "gold_table": "Dogs Treatments",
        "table_candidates": [
            "Dogs Treatments",
            "Breeds Dogs Treatments",
            "Breeds Charges Dogs Treatments",
            "Charges Dogs Treatments",
            "Treatment_Types Dogs Treatments",
            "Sizes Dogs Treatments",
            "Breeds Charges Sizes Dogs Treatments"
        ],
        "align_scores": [
            0.0006440077559091151,
            0.0005936207016929984,
            0.0006011926452629268,
            0.00046499096788465977,
            0.00036290581920184195,
            0.00026618258561939,
            0.0006184157100506127,
            0.0004751558299176395
        ],
        "align_select": "select Dogs.name, Treatments.treatment_type_code",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What are the arriving date and the departing date of the dogs who have gone through a treatment?",
        "gold_select": "select distinct Dogs.date_arrived, Dogs.time_arrived, Dogs.date_departed",
        "select_candidates": [
            "select Dogs.date_arrived, Dogs.date_departed",
            "select Dogs.dog_id, Dogs.date_departed",
            "select Dogs.weight, Dogs.date_arrived, Dogs.date_departed",
            "select Dogs.owner_id, Dogs.date_departed"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Dogs Treatments",
        "table_candidates": [
            "Dogs Treatments",
            "Dogs Professionals Treatments"
        ],
        "align_scores": [
            0.9011204838752747,
            0.19622720777988434,
            0.0008029151940718293,
            0.00021474866662174463,
            0.00025120307691395283,
            0.00047787095536477864,
            0.0007202568231150508,
            0.00031257409136742353
        ],
        "align_select": "select Dogs.date_arrived, Dogs.date_departed",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "Find the arriving date and the departing date of the dogs that received a treatment.",
        "gold_select": "select distinct Dogs.date_arrived, Dogs.time_arrived, Dogs.date_departed",
        "select_candidates": [
            "select Dogs.date_arrived, Dogs.date_departed",
            "select Dogs.dog_id, Dogs.date_departed",
            "select Dogs.weight, Dogs.date_arrived, Dogs.date_departed",
            "select Dogs.owner_id, Dogs.date_departed"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Dogs Treatments",
        "table_candidates": [
            "Dogs Treatments",
            "Dogs Professionals Treatments"
        ],
        "align_scores": [
            0.9660494327545166,
            0.00010655549704097211,
            0.0006641048239544034,
            7.080585055518895e-05,
            0.00025957616162486374,
            6.904732435941696e-05,
            0.0006282717804424465,
            6.715280323987827e-05
        ],
        "align_select": "select Dogs.date_arrived, Dogs.date_departed",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What are the arriving date and the departing date of all the dogs?",
        "gold_select": "select Dogs.date_arrived, Dogs.time_arrived, Dogs.date_departed",
        "select_candidates": [
            "select Dogs.date_arrived, Dogs.date_departed",
            "select Dogs.dog_id, Dogs.date_departed",
            "select Dogs.weight, Dogs.date_arrived, Dogs.date_departed",
            "select Dogs.owner_id, Dogs.abandoned_yn"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Dogs",
        "table_candidates": [
            "Dogs"
        ],
        "align_scores": [
            0.977968156337738,
            0.00010065822425531223,
            0.00043096067383885384,
            7.622950943186879e-05,
            0.00019420335593167692,
            6.239672802621499e-05,
            0.0006545643555000424,
            8.476899529341608e-05
        ],
        "align_select": "select Dogs.date_arrived, Dogs.date_departed",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "List the arrival date and the departure date for all the dogs.",
        "gold_select": "select Dogs.date_arrived, Dogs.time_arrived, Dogs.date_departed",
        "select_candidates": [
            "select Dogs.date_arrived, Dogs.date_departed",
            "select Dogs.dog_id, Dogs.date_departed",
            "select Dogs.owner_id, Dogs.abandoned_yn",
            "select Dogs.weight, Dogs.date_departed"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Dogs",
        "table_candidates": [
            "Dogs"
        ],
        "align_scores": [
            0.9307873249053955,
            8.639824955025688e-05,
            0.0003840358695015311,
            6.764717545593157e-05,
            0.0005996220861561596,
            9.444190800422803e-05,
            0.0005760052590630949,
            0.00019534530292730778
        ],
        "align_select": "select Dogs.date_arrived, Dogs.date_departed",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "How much does the most recent treatment cost?",
        "gold_select": "select Treatments.cost_of_treatment",
        "select_candidates": [
            "select Charges.charge_amount",
            "select Treatments.treatment_id, Charges.charge_amount",
            "select Treatments.time_of_treatment",
            "select t8.c0, Charges.charge_amount"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Treatments",
        "table_candidates": [
            "Charges Treatments",
            "Breeds Charges Treatments",
            "Charges"
        ],
        "align_scores": [
            0.031024930998682976,
            5.5789609177736565e-05,
            0.0004167758743278682,
            5.4853950132383034e-05,
            0.012216796167194843,
            5.4824038670631126e-05,
            0.0002728100516833365,
            5.7787936384556815e-05
        ],
        "align_select": "select Charges.charge_amount",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Show me the cost of the most recently performed treatment.",
        "gold_select": "select Treatments.cost_of_treatment",
        "select_candidates": [
            "select Charges.charge_amount",
            "select Treatments.treatment_id, Charges.charge_amount",
            "select Treatments.dog_id, Charges.charge_amount",
            "select Treatments.time_of_treatment, Charges.charge_amount"
        ],
        "select_labels": [
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "Treatments",
        "table_candidates": [
            "Charges Treatments",
            "Breeds Charges Treatments"
        ],
        "align_scores": [
            0.9786388278007507,
            6.12712829024531e-05,
            0.00032299154554493725,
            6.0767593822674826e-05,
            0.00046317389933392406,
            6.18279300397262e-05,
            0.00019835814600810409,
            5.9191435866523534e-05
        ],
        "align_select": "select Charges.charge_amount",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "List the name of singers in ascending order of net worth.",
        "gold_select": "select singer.first_name, singer.last_name",
        "select_candidates": [
            "select singer.first_name, singer.last_name",
            "select singer.Singer_ID, singer.first_name, singer.last_name",
            "select singer.first_name, singer.last_name, singer.Net_Worth_Millions",
            "select singer.first_name.c1, singer.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.987169623374939,
            0.987169623374939,
            0.0001918247144203633,
            0.0001918247144203633,
            0.00022940781491342932,
            0.00022940781491342932,
            0.00021238820045255125,
            0.00021238820045255125
        ],
        "align_select": "select singer.first_name, singer.last_name",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "What are the names of singers ordered by ascending net worth?",
        "gold_select": "select singer.first_name, singer.last_name",
        "select_candidates": [
            "select singer.first_name, singer.last_name",
            "select singer.Singer_ID, singer.first_name, singer.last_name",
            "select singer.first_name, singer.last_name, singer.Net_Worth_Millions",
            "select singer.first_name.c1, singer.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY",
            "SELECT-FROM-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            1.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.9936385750770569,
            0.9936385750770569,
            0.000195073735085316,
            0.000195073735085316,
            0.00020971383491996676,
            0.00020971383491996676,
            0.0002904678403865546,
            0.0002904678403865546
        ],
        "align_select": "select singer.first_name, singer.last_name",
        "align_structure": "SELECT-FROM-ORDER BY"
    },
    {
        "question": "List the name of singers whose citizenship is not \"France\".",
        "gold_select": "select singer.first_name, singer.last_name",
        "select_candidates": [
            "select singer.first_name, singer.last_name",
            "select singer.Singer_ID, singer.first_name, singer.last_name",
            "select singer.first_name, singer.last_name, singer.Citizenship",
            "select singer.first_name.c1, singer.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.9766743183135986,
            8.245602657552809e-05,
            0.00016534063615836203,
            6.971217226237059e-05,
            0.00015945741324685514,
            5.593653622781858e-05,
            0.0001619199028937146,
            6.021101580699906e-05
        ],
        "align_select": "select singer.first_name, singer.last_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What are the names of the singers who are not French citizens?",
        "gold_select": "select singer.first_name, singer.last_name",
        "select_candidates": [
            "select singer.first_name, singer.last_name",
            "select distinct singer.first_name, singer.last_name",
            "select singer.Singer_ID, singer.first_name, singer.last_name",
            "select singer.first_name, singer.last_name, singer.Citizenship"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.9350680708885193,
            0.001245415536686778,
            0.03668008744716644,
            0.0034659751690924168,
            0.0002281257329741493,
            0.0001207235109177418,
            0.000125974474940449,
            0.00017391901928931475
        ],
        "align_select": "select singer.first_name, singer.last_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the name of the singer with the largest net worth?",
        "gold_select": "select singer.first_name, singer.last_name",
        "select_candidates": [
            "select singer.first_name, singer.last_name",
            "select singer.Singer_ID, singer.first_name, singer.last_name",
            "select singer.first_name, singer.last_name, singer.Net_Worth_Millions",
            "select singer.first_name.c1, singer.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.9581587314605713,
            7.476504833903164e-05,
            0.0003318150120321661,
            7.563878898508847e-05,
            0.0006930491072125733,
            6.209867569850758e-05,
            0.00044951168820261955,
            6.416883115889505e-05
        ],
        "align_select": "select singer.first_name, singer.last_name",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "What is the name of the singer who is worth the most?",
        "gold_select": "select singer.first_name, singer.last_name",
        "select_candidates": [
            "select singer.first_name, singer.last_name",
            "select singer.Singer_ID, singer.first_name, singer.last_name",
            "select singer.first_name, singer.last_name, singer.Net_Worth_Millions",
            "select singer.first_name.c1, singer.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-ORDER BY-LIMIT",
        "structure_candidates": [
            "SELECT-FROM-ORDER BY-LIMIT",
            "SELECT-FROM-ORDER BY-LIMIT-INTERSECT-SELECT-FROM-ORDER BY-LIMIT"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer"
        ],
        "align_scores": [
            0.9582316279411316,
            7.011466368567199e-05,
            0.0003228422428946942,
            7.057557377265766e-05,
            0.000594200158957392,
            5.897069422644563e-05,
            0.0004705110040958971,
            6.300619133980945e-05
        ],
        "align_select": "select singer.first_name, singer.last_name",
        "align_structure": "SELECT-FROM-ORDER BY-LIMIT"
    },
    {
        "question": "Show titles of songs and names of singers.",
        "gold_select": "select song.Title, singer.first_name, singer.last_name",
        "select_candidates": [
            "select song.Title, singer.first_name, singer.last_name",
            "select song.Title, singer.last_name",
            "select song.Title, singer.first_name",
            "select song.Title, t0.c 1, singer.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer song",
        "table_candidates": [
            "singer song"
        ],
        "align_scores": [
            0.9915048480033875,
            7.880248449509963e-05,
            0.3987322151660919,
            8.887313742889091e-05,
            0.5809810161590576,
            9.318110824096948e-05,
            0.00029350403929129243,
            0.0001009736442938447
        ],
        "align_select": "select song.Title, singer.first_name, singer.last_name",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "What are the song titles and singer names?",
        "gold_select": "select song.Title, singer.first_name, singer.last_name",
        "select_candidates": [
            "select song.Title, singer.first_name, singer.last_name",
            "select song.Title, singer.last_name",
            "select song.Title, singer.first_name",
            "select song.Title, singer.age, singer.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM",
        "structure_candidates": [
            "SELECT-FROM",
            "SELECT-FROM-UNION-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer song",
        "table_candidates": [
            "singer song"
        ],
        "align_scores": [
            0.9874413013458252,
            0.0001132514444179833,
            0.027529550716280937,
            0.00010434319847263396,
            0.06331460177898407,
            0.00011563760199351236,
            0.000441826821770519,
            8.69399300427176e-05
        ],
        "align_select": "select song.Title, singer.first_name, singer.last_name",
        "align_structure": "SELECT-FROM"
    },
    {
        "question": "Show distinct names of singers that have songs with sales more than 300000.",
        "gold_select": "select distinct singer.first_name, singer.last_name",
        "select_candidates": [
            "select distinct singer.first_name, singer.last_name",
            "select singer.first_name, singer.last_name",
            "select distinct t2.c1, singer.last_name",
            "select distinct t.0.c1, singer.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer song",
        "table_candidates": [
            "singer song"
        ],
        "align_scores": [
            0.9838013052940369,
            0.004157453775405884,
            0.9907287359237671,
            0.9775440096855164,
            0.0004886832903139293,
            0.00015748357691336423,
            0.0004266424512024969,
            0.00014302987256087363
        ],
        "align_select": "select distinct singer.first_name, singer.last_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "what are the different names of the singers that have sales more than 300000?",
        "gold_select": "select distinct singer.first_name, singer.last_name",
        "select_candidates": [
            "select distinct singer.first_name, singer.last_name",
            "select distinct singer.first_name.c1, singer.last_name",
            "select count(distinct singer.first_name), singer.last_name",
            "select distinct singer.first_name, singer.last_name, singer.age"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-UNION-SELECT-FROM-WHERE"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer song",
        "table_candidates": [
            "singer song"
        ],
        "align_scores": [
            0.977082371711731,
            0.00014701386680826545,
            0.00042212061816826463,
            7.564599945908412e-05,
            0.00027583527844399214,
            7.841530896257609e-05,
            0.00014445478154812008,
            6.754507921868935e-05
        ],
        "align_select": "select distinct singer.first_name, singer.last_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "Show the names of singers that have more than one song.",
        "gold_select": "select singer.first_name, singer.last_name",
        "select_candidates": [
            "select singer.first_name, singer.last_name",
            "select singer.first_name, singer.last_name, singer.Singer_ID",
            "select singer.first_name.c1, singer.last_name",
            "select singer.first_name, singer.last_name, singer.age"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer song",
        "table_candidates": [
            "singer song"
        ],
        "align_scores": [
            0.9934415817260742,
            0.00010533993190620095,
            0.00021245663810987025,
            6.0530062910402194e-05,
            0.0003971186524722725,
            6.778970418963581e-05,
            0.00017481348186265677,
            5.4579802963417023e-05
        ],
        "align_select": "select singer.first_name, singer.last_name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "What are the names of the singers that have more than one songs?",
        "gold_select": "select singer.first_name, singer.last_name",
        "select_candidates": [
            "select singer.first_name, singer.last_name",
            "select singer.first_name, singer.last_name, singer.Singer_ID",
            "select singer.first_name, singer.last_name, singer.age",
            "select t 0.c1, singer.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY-HAVING",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY-HAVING",
            "SELECT-FROM-GROUP BY-HAVING-UNION-SELECT-FROM-GROUP BY-HAVING"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer song",
        "table_candidates": [
            "singer song"
        ],
        "align_scores": [
            0.9898144006729126,
            0.00011407929559936747,
            0.00035505995037965477,
            7.24382625776343e-05,
            0.00022487257956527174,
            5.947689351160079e-05,
            0.0006102243787609041,
            6.717341602779925e-05
        ],
        "align_select": "select singer.first_name, singer.last_name",
        "align_structure": "SELECT-FROM-GROUP BY-HAVING"
    },
    {
        "question": "Show the names of singers and the total sales of their songs.",
        "gold_select": "select singer.first_name, singer.last_name, sum(song.Sales)",
        "select_candidates": [
            "select singer.first_name, singer.last_name, sum(song.Sales)",
            "select song.Singer_ID, sum(song.Sales)",
            "select t2.c2, sum(song.Sales)",
            "select t.c1, singer.last_name, sum(song.Sales)"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer song",
        "table_candidates": [
            "singer song"
        ],
        "align_scores": [
            0.9952946305274963,
            0.00015575377619825304,
            0.001437222701497376,
            0.00015156868903432041,
            0.00041315043927170336,
            0.00015135535795707256,
            0.00036239309702068567,
            0.00011005472333636135
        ],
        "align_select": "select singer.first_name, singer.last_name, sum(song.Sales)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "For each singer name, what is the total sales for their songs?",
        "gold_select": "select singer.first_name, singer.last_name, sum(song.Sales)",
        "select_candidates": [
            "select singer.first_name, singer.last_name, sum(song.Sales)",
            "select singer.first_name, singer.last_name sum(song.Sales)",
            "select sum(song.Sales), singer.first_name, singer.last_name",
            "select singer.first_name, singer.last_name, sum(song.Sales)"
        ],
        "select_labels": [
            1.0,
            0.0,
            1.0,
            1.0
        ],
        "gold_structure": "SELECT-FROM-GROUP BY",
        "structure_candidates": [
            "SELECT-FROM-GROUP BY",
            "SELECT-FROM-GROUP BY-ORDER BY"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer song",
        "table_candidates": [
            "singer song"
        ],
        "align_scores": [
            0.9953595995903015,
            0.00014556205132976174,
            0.9810948371887207,
            0.00014308976824395359,
            0.9945337772369385,
            0.00013372696412261575,
            0.9953595995903015,
            0.00014556205132976174
        ],
        "align_select": "select singer.first_name, singer.last_name, sum(song.Sales)",
        "align_structure": "SELECT-FROM-GROUP BY"
    },
    {
        "question": "List the name of singers that do not have any song.",
        "gold_select": "select singer.first_name, singer.last_name",
        "select_candidates": [
            "select singer.first_name, singer.last_name",
            "select singer.Singer_ID, singer.first_name, singer.last_name",
            "select singer.first_name, singer.last_name, singer.age",
            "select singer.first_name.c1, singer.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer",
            "singer song"
        ],
        "align_scores": [
            0.95546954870224,
            0.4556749761104584,
            0.0001629433681955561,
            0.00015682884259149432,
            0.0001205339576699771,
            0.00012310405145399272,
            0.0002069085749099031,
            0.00036405830178409815
        ],
        "align_select": "select singer.first_name, singer.last_name",
        "align_structure": "SELECT-FROM-WHERE"
    },
    {
        "question": "What is the sname of every sing that does not have any song?",
        "gold_select": "select singer.first_name, singer.last_name",
        "select_candidates": [
            "select singer.first_name, singer.last_name",
            "select singer.Singer_ID, singer.first_name, singer.last_name",
            "select singer.first_name, singer.last_name, singer.Singer_ID",
            "select singer.first_name.c1, singer.last_name"
        ],
        "select_labels": [
            1.0,
            0.0,
            0.0,
            0.0
        ],
        "gold_structure": "SELECT-FROM-WHERE",
        "structure_candidates": [
            "SELECT-FROM-WHERE",
            "SELECT-FROM-WHERE-EXCEPT-SELECT-FROM"
        ],
        "structure_labels": [
            1.0,
            0.0
        ],
        "gold_table": "singer",
        "table_candidates": [
            "singer",
            "singer song"
        ],
        "align_scores": [
            0.987419068813324,
            0.9379742741584778,
            0.00017580424901098013,
            0.00018593852291814983,
            0.00013481653877533972,
            0.00013575346383731812,
            0.00023236779088620096,
            0.00024183592176996171
        ],
        "align_select": "select singer.first_name, singer.last_name",
        "align_structure": "SELECT-FROM-WHERE"
    }
]